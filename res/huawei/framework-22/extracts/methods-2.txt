<android.app.ActivityThread: void handleStopService(android.os.IBinder)>:<private>:<android.app.ActivityThread>
<android.renderscript.Double4: double elementSum()>:<public>:<android.renderscript.Double4>
<android.app.ActivityManager.ProcessErrorStateInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.ProcessErrorStateInfo.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager: void stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)>:<public>:<android.app.AppOpsManager>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.net.http.Headers: java.lang.String getContentDisposition()>:<public>:<android.net.http.Headers>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorClosed()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.renderscript.BaseObj: void updateFromNative()>:<>:<android.renderscript.BaseObj>
<android.os.CommonTimeConfig: int setAutoDisable(boolean)>:<public>:<android.os.CommonTimeConfig>
<android.graphics.drawable.RotateDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.p2p.WifiP2pConfig.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pConfig.1:android.os.Parcelable.Creator>
<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.wifi.WifiCHRStateManager: void updateIntelligenceWiFiException(int,java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>:<public static>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.appwidget.AppWidgetHost: void deleteHost()>:<public>:<android.appwidget.AppWidgetHost>
<android.database.CursorWindow: void nativeFreeLastRow(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.Instrumentation: void init(android.app.ActivityThread,android.content.Context,android.content.Context,android.content.ComponentName,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection)>:<final>:<android.app.Instrumentation>
<android.net.Uri.Builder: android.net.Uri.Builder path(android.net.Uri.PathPart)>:<>:<android.net.Uri.Builder>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onGetPrintJobInfoResult(android.print.PrintJobInfo,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.app.ActivityManagerProxy: void enterSafeMode()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.sqlite.SQLiteSession: boolean hasConnection()>:<public>:<android.database.sqlite.SQLiteSession>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.accounts.AccountManager.19: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.accounts.AccountManager.19:android.content.BroadcastReceiver>
<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.backup.BackupHelperDispatcher: int skipChunk_native(java.io.FileDescriptor,int)>:<private static native>:<android.app.backup.BackupHelperDispatcher>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSEOrSPSE(org.apache.harmony.dalvik.ddmc.Chunk,java.lang.String)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.EnterTransitionCoordinator: void access.100(android.app.EnterTransitionCoordinator,android.os.Bundle)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.backup.IRestoreSession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.drm.AbsDrmStore: void <init>()>:<public>:<android.drm.AbsDrmStore>
<android.app.usage.ConfigurationStats: long getTotalTimeActive()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glFogxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.FilterGraph: void runTypeCheck()>:<private>:<android.filterfw.core.FilterGraph>
<android.net.NetworkQuotaInfo.1: android.net.NetworkQuotaInfo[] newArray(int)>:<public>:<android.net.NetworkQuotaInfo.1:android.os.Parcelable.Creator>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>:<public static>:<android.transition.TransitionManager>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.LocalSocketAddress.Namespace: void <clinit>()>:<static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.net.LinkProperties: void setTcpBufferSizes(java.lang.String)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityThread: void access.3500(android.app.ActivityThread,android.os.IBinder)>:<static>:<android.app.ActivityThread>
<android.os.IHDMIConnectService.Stub.Proxy: void enableFullScreen(boolean)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.app.ActivityGroup: void onStop()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.filterfw.core.FilterFunction: java.lang.String toString()>:<public>:<android.filterfw.core.FilterFunction>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.accounts.AccountManager.6: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.app.Activity)>:<>:<android.accounts.AccountManager.6:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.accounts.AccountManager.AmsTask.Response: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.app.Fragment: boolean isResumed()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: void freeMemory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Paint: long native_setRasterizer(long,long)>:<private static native>:<android.graphics.Paint>
<android.os.BaseBundle: java.io.Serializable getSerializable(java.lang.String)>:<>:<android.os.BaseBundle>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.print.PrinterId.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.net.http.HttpResponseCache: long size()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerDomainAndCertificates(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>:<private static>:<android.net.http.CertificateChainValidator>
<android.app.admin.IDevicePolicyManager: boolean resetPassword(java.lang.String,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.app.ApplicationThreadProxy: android.os.IBinder asBinder()>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.NetworkPolicyManager: int[] getPowerSaveAppIdWhitelist()>:<public>:<android.net.NetworkPolicyManager>
<android.database.sqlite.SQLiteSession.Transaction: void <init>()>:<private>:<android.database.sqlite.SQLiteSession.Transaction>
<android.graphics.RectF: void set(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean)>:<public final>:<android.app.ActivityThread>
<android.app.IApplicationThread: void clearDnsCache()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.transition.Fade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.MediaRouteButton: void setRouteTypes(int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.renderscript.Short3: short get(int)>:<public>:<android.renderscript.Short3>
<android.app.backup.BackupDataInput: void skipEntityData()>:<public>:<android.app.backup.BackupDataInput>
<android.app.IActivityManager.WaitResult.1: void <init>()>:<>:<android.app.IActivityManager.WaitResult.1:android.os.Parcelable.Creator>
<android.net.MobileDataStateTracker: boolean isTeardownRequested()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.WebAddress: void setPath(java.lang.String)>:<public>:<android.net.WebAddress>
<android.os.IMultiWinService.Stub.Proxy: boolean isMultiWinNotificationIntent(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.ApplicationLoaders: void <clinit>()>:<static>:<android.app.ApplicationLoaders>
<android.app.Fragment.SavedState: void <clinit>()>:<static>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.renderscript.Long4: void copyTo(long[],int)>:<public>:<android.renderscript.Long4>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.wifi.HwCustWifiManagerDummy: void initHwCustWifiManager()>:<public>:<android.net.wifi.HwCustWifiManagerDummy:android.net.wifi.IHwCustWifiManager>
<android.renderscript.Long4: void add(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.graphics.pdf.PdfRenderer: void access.500(long)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.os.Parcel: void nativeWriteInt(long,int)>:<private static native>:<android.os.Parcel>
<android.database.sqlite.SQLiteDatabase: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hsm.HwSystemManager: boolean checkWindowType(int)>:<public static>:<android.hsm.HwSystemManager>
<android.net.nsd.DnsSdTxtRecord: void <init>(android.net.nsd.DnsSdTxtRecord)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnAllocationCreateFromAssetStream(long,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.app.EnterTransitionCoordinator.3: void <init>(android.app.EnterTransitionCoordinator,android.view.View)>:<>:<android.app.EnterTransitionCoordinator.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Activity: boolean isTopOfTask()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.INetworkPolicyManager: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.net.wifi.IWifiManager: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean isMulticastEnabled()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ActivityManager.RunningServiceInfo.1: void <init>()>:<>:<android.app.ActivityManager.RunningServiceInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.app.IActivityManager: void forceStopPackage(java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnContextSetSurfaceTexture(long,int,int,android.graphics.SurfaceTexture)>:<native>:<android.renderscript.RenderScript>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setBackground(android.graphics.Bitmap)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.PackageDeleteObserver.1: void onPackageDeleted(java.lang.String,int,java.lang.String)>:<public>:<android.app.PackageDeleteObserver.1:android.content.pm.IPackageDeleteObserver2.Stub>
<android.graphics.PointF: void set(android.graphics.PointF)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.net.http.AndroidHttpClient.LoggingConfiguration: void access.600(android.net.http.AndroidHttpClient.LoggingConfiguration,java.lang.String)>:<static>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.app.IWallpaperManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.os.BatteryStats.Counter: int getCountLocked(int)>:<public abstract>:<android.os.BatteryStats.Counter>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>:<public final>:<android.os.Parcel>
<android.os.StrictMode.2: java.lang.Object initialValue()>:<protected volatile>:<android.os.StrictMode.2:java.lang.ThreadLocal>
<android.net.wifi.WifiScanner.WifiChangeSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiScanner.WifiChangeSettings:android.os.Parcelable>
<android.app.FragmentManagerImpl: android.view.LayoutInflater.Factory2 getLayoutInflaterFactory()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setY(int)>:<public>:<android.renderscript.Type.Builder>
<android.net.wifi.p2p.WifiP2pGroupList.2: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pGroupList.2:android.os.Parcelable.Creator>
<android.webkit.WebView: java.lang.String getTitle()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiSsid: void convertToBytes(java.lang.String)>:<private>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.Activity: void onLowMemory()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebView.FindListenerDistributor: void <init>(android.webkit.WebView,android.webkit.WebView.1)>:<>:<android.webkit.WebView.FindListenerDistributor:android.webkit.WebView.FindListener>
<android.webkit.JsDialogHelper.CancelListener: void onClick(android.content.DialogInterface,int)>:<public>:<android.webkit.JsDialogHelper.CancelListener:android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnClickListener>
<android.renderscript.Float4: float dotProduct(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.net.INetworkStatsSession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkStatsSession.Stub:android.os.Binder,android.net.INetworkStatsSession>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,long,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.app.usage.UsageEvents: void finalize()>:<protected>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.net.StaticIpConfiguration: java.util.List getRoutes(java.lang.String)>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.webkit.WebView: void setInitialScale(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.IActivityManager: void reportActivityFullyDrawn(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.GraphRunner: void run()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.app.ContextImpl: void clearWallpaper()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.RecoverySystem: void <init>()>:<public>:<android.os.RecoverySystem>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.wifi.HwWifiCHRService: void <clinit>()>:<static>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.FieldPacker: android.renderscript.Float2 subFloat2()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.ScaleDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.Headers: void setCacheControl(java.lang.String)>:<public>:<android.net.http.Headers>
<android.app.Activity: void onAttachedToWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Activity: void sendCheckIntent(java.lang.String)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.BitmapRegionDecoder: int getHeight()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.os.IMultiWinService: boolean isPartOfMWTaskStack(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.filterfw.core.FilterPort: void assertPortIsOpen()>:<protected>:<android.filterfw.core.FilterPort>
<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String,java.lang.String[],android.net.ProxyInfo.1)>:<>:<android.net.ProxyInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.filterfw.core.GLEnvironment: boolean nativeInitWithCurrentContext()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void handleMessage(android.os.Message)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.accounts.AbstractAccountAuthenticator.Transport: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getField(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView.PrivateAccess: void <init>(android.webkit.WebView)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.IConnectivityManager.Stub.Proxy: android.net.LinkProperties getActiveLinkProperties()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.ConnectivityManager.OnNetworkActiveListener: void onNetworkActive()>:<public abstract>:<android.net.ConnectivityManager.OnNetworkActiveListener>
<android.graphics.Typeface: long nativeCreateFromTypeface(long,int)>:<private static native>:<android.graphics.Typeface>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Double4: android.renderscript.Double4 sub(android.renderscript.Double4,android.renderscript.Double4)>:<public static>:<android.renderscript.Double4>
<android.app.Activity: void onBackgroundVisibleBehindChanged(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.app.backup.RestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>:<public>:<android.app.backup.RestoreObserver>
<android.transition.ChangeTransform.GhostListener: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.ChangeTransform.GhostListener:android.transition.Transition.TransitionListenerAdapter>
<android.app.AppOpsManager.PackageOps: java.lang.String getPackageName()>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.graphics.drawable.TransitionDrawable.TransitionState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.TransitionDrawable.TransitionState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.IActivityContainerCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IActivityContainerCallback.Stub:android.os.Binder,android.app.IActivityContainerCallback>
<android.app.ActivityThread: void handleDumpActivity(android.app.ActivityThread.DumpComponentInfo)>:<private>:<android.app.ActivityThread>
<android.transition.Recolor: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Recolor:android.transition.Transition>
<android.renderscript.Int3: void <init>(int,int,int)>:<public>:<android.renderscript.Int3>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.net.http.AndroidHttpClient: void close()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Color: int argb(int,int,int,int)>:<public static>:<android.graphics.Color>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.net.WifiKey.1: void <init>()>:<>:<android.net.WifiKey.1:android.os.Parcelable.Creator>
<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onKeyEvent(android.view.KeyEvent,int)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.opengl.GLLogWrapper: void glLightModelxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.ChangeTransform: boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup)>:<private>:<android.transition.ChangeTransform:android.transition.Transition>
<android.net.IConnectivityManager.Stub.Proxy: boolean addVpnAddress(java.lang.String,int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>:<public abstract>:<android.webkit.WebSettings>
<android.os.INetworkManagementService.Stub.Proxy: java.lang.String[] listInterfaces()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.Int2: android.renderscript.Int2 mod(android.renderscript.Int2,int)>:<public static>:<android.renderscript.Int2>
<android.os.CommonTimeUtils: java.net.InetSocketAddress transactGetSockaddr(int)>:<public>:<android.os.CommonTimeUtils>
<android.os.RemoteCallback.1: android.os.RemoteCallback[] newArray(int)>:<public>:<android.os.RemoteCallback.1:android.os.Parcelable.Creator>
<android.os.IHDMIConnectService.Stub: android.os.IHDMIConnectService asInterface(android.os.IBinder)>:<public static>:<android.os.IHDMIConnectService.Stub:android.os.Binder,android.os.IHDMIConnectService>
<android.opengl.GLErrorWrapper: void glClearColor(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkPolicy.1: void <init>()>:<>:<android.net.NetworkPolicy.1:android.os.Parcelable.Creator>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>:<public>:<android.renderscript.FieldPacker>
<android.os.MemoryFile: boolean isDeactivated()>:<private>:<android.os.MemoryFile>
<android.app.IActivityManager: void registerProcessObserver(android.app.IProcessObserver)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.IConnectivityManager: void releasePendingNetworkRequest(android.app.PendingIntent)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onSetPrintJobStateResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.app.ActivityOptions: void abort(android.os.Bundle)>:<public static>:<android.app.ActivityOptions>
<android.net.http.HttpAuthHeader: java.lang.String parseScheme(java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.net.ConnectivityManager: android.net.ConnectivityManager getInstance()>:<public static>:<android.net.ConnectivityManager>
<android.app.ActivityManagerProxy: java.util.List getAllStackInfos()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Path: void finalize()>:<protected>:<android.graphics.Path>
<android.graphics.drawable.GradientDrawable: boolean isOpaqueForState()>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.print.PrinterCapabilitiesInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.graphics.MaskFilter: void finalize()>:<protected>:<android.graphics.MaskFilter>
<android.app.ActivityThread.ApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.drm.DrmManagerClient: void _installDrmEngine(int,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.ActivityThread: android.graphics.Bitmap createThumbnailBitmap(android.app.ActivityThread.ActivityClientRecord)>:<private>:<android.app.ActivityThread>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedNetworkTypes(int)>:<public>:<android.app.DownloadManager.Request>
<android.net.LocalSocket: void setReceiveBufferSize(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.opengl.GLES31: void <clinit>()>:<static>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.drm.DrmManagerClient: java.lang.String _getOriginalMimeType(int,java.lang.String,java.io.FileDescriptor)>:<private native>:<android.drm.DrmManagerClient>
<android.os.storage.IMountService: void finishMediaUpdate()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.webkit.WebView: boolean isPaused()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.IActivityManager: void systemBackupRestored()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Picture.RecordingCanvas: void <init>(android.graphics.Picture,long)>:<public>:<android.graphics.Picture.RecordingCanvas:android.graphics.Canvas>
<android.ddm.DdmHandleHello: void sendWAIT(int)>:<public static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void addressRemoved(java.lang.String,android.net.LinkAddress)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.backup.BackupAgent: void attach(android.content.Context)>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Mesh.TriangleMeshBuilder: void makeSpace(int)>:<private>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.os.INetworkManagementService: void tetherInterface(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>:<public static>:<android.opengl.ETC1Util>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable.LayerState createConstantState(android.graphics.drawable.LayerDrawable.LayerState,android.content.res.Resources)>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.ICancellationSignal.Stub.Proxy: void cancel()>:<public>:<android.os.ICancellationSignal.Stub.Proxy:android.os.ICancellationSignal>
<android.os.Parcel: double[] createDoubleArray()>:<public final>:<android.os.Parcel>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Paint.Join: void <clinit>()>:<static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.os.BatteryStats.HistoryEventTracker: java.util.HashMap getStateForEvent(int)>:<public>:<android.os.BatteryStats.HistoryEventTracker>
<android.net.wifi.WifiLog.WiFiExceptionType: void <clinit>()>:<static>:<android.net.wifi.WifiLog.WiFiExceptionType:java.lang.Enum>
<android.app.FragmentManager: void popBackStack()>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLLogWrapper: java.lang.String getBeginMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.WallpaperInfo.1: android.app.WallpaperInfo[] newArray(int)>:<public>:<android.app.WallpaperInfo.1:android.os.Parcelable.Creator>
<android.os.storage.IObbActionListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.storage.IObbActionListener.Stub:android.os.Binder,android.os.storage.IObbActionListener>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.app.ActivityTransitionState: void saveState(android.os.Bundle)>:<public>:<android.app.ActivityTransitionState>
<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.graphics.drawable.InsetDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.RSSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean isGroupOwner(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.Notification.WearableExtender: int getContentAction()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ActivityThread.AppBindData: void <init>()>:<>:<android.app.ActivityThread.AppBindData>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State[] values()>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.app.IAlarmManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IAlarmManager.Stub:android.os.Binder,android.app.IAlarmManager>
<android.app.admin.DevicePolicyManager: int getProfileWithMinimumFailedPasswordsForWipe(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebViewDelegate: void detachDrawGlFunctor(android.view.View,long)>:<public>:<android.webkit.WebViewDelegate>
<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>:<public final>:<android.app.ActivityThread>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Dialog: void dismissDialog()>:<>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.Debug: void resetAllCounts()>:<public static>:<android.os.Debug>
<android.net.Uri.PathSegmentsBuilder: android.net.Uri.PathSegments build()>:<>:<android.net.Uri.PathSegmentsBuilder>
<android.app.ApplicationPackageManager: void putCachedString(android.app.ApplicationPackageManager.ResourceName,java.lang.CharSequence)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.database.CursorWindow: void nativeDispose(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.JankSqlite: boolean addUpdate(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)>:<public>:<android.app.StatusBarManager>
<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.os.SystemProperties: boolean native_get_boolean(java.lang.String,boolean)>:<private static native>:<android.os.SystemProperties>
<android.webkit.WebView: void documentHasImages(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory access.000(android.filterfw.io.TextGraphReader)>:<static>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.graphics.Picture: int nativeGetHeight(long)>:<private static native>:<android.graphics.Picture>
<android.graphics.pdf.PdfRenderer: void throwIfPageOpened()>:<private>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.opengl.GLLogWrapper: void glFogf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>:<public static>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.app.Activity: android.view.Window getWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.EnterTransitionCoordinator.1: boolean onPreDraw()>:<public>:<android.app.EnterTransitionCoordinator.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.IPrintDocumentAdapter.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIconAttribute(int)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.Long2: android.renderscript.Long2 mul(android.renderscript.Long2,long)>:<public static>:<android.renderscript.Long2>
<android.renderscript.RenderScript: void rsnScriptGroupSetOutput(long,long,long,long)>:<native>:<android.renderscript.RenderScript>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.app.Fragment: void setUserVisibleHint(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.EnterTransitionCoordinator: void startEnterTransition(android.transition.Transition)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.IApplicationThread: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.ActivityView.ActivityContainerWrapper: void finalize()>:<protected>:<android.app.ActivityView.ActivityContainerWrapper>
<android.net.http.HttpsConnection.1: void <init>()>:<>:<android.net.http.HttpsConnection.1:javax.net.ssl.X509TrustManager>
<android.accounts.AccountManager: java.lang.Exception convertErrorToException(int,java.lang.String)>:<private>:<android.accounts.AccountManager>
<android.app.ActivityView.ActivityContainerWrapper: void release()>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl[] values()>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.app.backup.BackupTransport: int abortFullRestore()>:<public>:<android.app.backup.BackupTransport>
<android.app.IActivityManager: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.usage.ConfigurationStats.1: android.app.usage.ConfigurationStats createFromParcel(android.os.Parcel)>:<public>:<android.app.usage.ConfigurationStats.1:android.os.Parcelable.Creator>
<android.net.MobileDataStateTracker: void setUserDataEnable(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews)>:<>:<android.appwidget.AppWidgetHost>
<android.net.nsd.NsdServiceInfo: void <clinit>()>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.IMultiWinService: void setMultiWinSoftKeyBoardInvisible(android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.ActivityThread.BindServiceData: void <init>()>:<>:<android.app.ActivityThread.BindServiceData>
<android.os.SELinux: java.lang.String getPeerContext(java.io.FileDescriptor)>:<public static final native>:<android.os.SELinux>
<android.net.NetworkUtils: int resetConnections(java.lang.String,int)>:<public static native>:<android.net.NetworkUtils>
<android.app.usage.IUsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)>:<public abstract>:<android.app.usage.IUsageStatsManager:android.os.IInterface>
<android.graphics.Bitmap: int getScaledWidth(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.trust.ITrustListener: void onTrustManagedChanged(boolean,int)>:<public abstract>:<android.app.trust.ITrustListener:android.os.IInterface>
<android.app.ActivityManagerProxy: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Parcel: void setDataPosition(int)>:<public final>:<android.os.Parcel>
<android.app.FragmentManagerImpl: void dispatchStop()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.IActivityContainer.Stub.Proxy: int startActivityIntentSender(android.content.IIntentSender)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.app.WallpaperManager.Globals: void forgetLoadedBlurWallpaper()>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>:<public static>:<android.graphics.Typeface>
<android.app.INotificationManager: int getPackageVisibilityOverride(java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.os.StrictMode: void access.1100(int,android.os.StrictMode.ViolationInfo)>:<static>:<android.os.StrictMode>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkCapabilities: void combineCapabilities(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.wifi.PPPOEConfig.1: android.net.wifi.PPPOEConfig[] newArray(int)>:<public>:<android.net.wifi.PPPOEConfig.1:android.os.Parcelable.Creator>
<android.net.arp.MultiGW: boolean isMACDuplicated(java.lang.String)>:<private>:<android.net.arp.MultiGW>
<android.print.PrintDocumentInfo: int getPageCount()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.net.LinkQualityInfo: void setDataSampleDuration(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.Dialog: android.view.View findViewById(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>:<public abstract>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.Uri.AbstractPart: void writeTo(android.os.Parcel)>:<final>:<android.net.Uri.AbstractPart>
<android.graphics.drawable.ColorDrawable.ColorState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.database.CursorWindow: void setStartPosition(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.transition.Transition: java.lang.String toString(java.lang.String)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManager.TaskThumbnail.1: android.app.ActivityManager.TaskThumbnail createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.TaskThumbnail.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: java.lang.String createSupplicantQuery(java.lang.String,java.lang.String)>:<private static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.renderscript.Allocation: void copyTo(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.transition.Crossfade.1: void <init>(android.transition.Crossfade,android.view.View,android.graphics.drawable.BitmapDrawable)>:<>:<android.transition.Crossfade.1:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.webkit.WebViewProvider: void setTopVisitedHistory(java.lang.String[],int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLLogWrapper: void glTexGenf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.nsd.NsdServiceInfo: java.lang.String access.102(android.net.nsd.NsdServiceInfo,java.lang.String)>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()>:<public>:<android.app.FragmentManager>
<android.graphics.drawable.LayerDrawable: void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLSurfaceView: int getDebugFlags()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Long2: void negate()>:<public>:<android.renderscript.Long2>
<android.renderscript.Script.FieldBase: android.renderscript.Allocation getAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<android.webkit.WebView.FindListener: void onFindResultReceived(int,int,boolean)>:<public abstract>:<android.webkit.WebView.FindListener>
<android.net.http.Headers: java.lang.String getLocation()>:<public>:<android.net.http.Headers>
<android.app.Notification.Builder: android.app.Notification build()>:<public>:<android.app.Notification.Builder>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.os.INetworkManagementService.Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>:<public static>:<android.os.INetworkManagementService.Stub:android.os.Binder,android.os.INetworkManagementService>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.Debug.MemoryInfo.1: void <init>()>:<>:<android.os.Debug.MemoryInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.Filter: boolean inputConditionsMet()>:<private final>:<android.filterfw.core.Filter>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliablePipe()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.filterfw.core.FilterPort: void checkFrameType(android.filterfw.core.Frame,boolean)>:<protected>:<android.filterfw.core.FilterPort>
<android.app.usage.IUsageStatsManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.opengl.GLES10: void glClearStencil(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.Drawable: void clearColorFilter()>:<public>:<android.graphics.drawable.Drawable>
<android.print.PrintDocumentInfo: int access.200(android.print.PrintDocumentInfo)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.FragmentManagerImpl: void noteStateNotSaved()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.PorterDuffColorFilter: void setColor(int)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.print.PrintJobInfo: void setDocumentInfo(android.print.PrintDocumentInfo)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.RSTextureView: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.os.Debug.MemoryInfo: void <init>(android.os.Parcel,android.os.Debug.1)>:<>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: int nativeGetColumnCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.webkit.HwFindActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.os.IHDMIConnectService.Stub.Proxy: void setReproductionHeightRatio(float)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.net.INetworkManagementEventObserver: void routeRemoved(android.net.RouteInfo)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.graphics.Paint: void setElegantTextHeight(boolean)>:<public native>:<android.graphics.Paint>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.core.ProgramPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.String,java.lang.reflect.Field,boolean)>:<public>:<android.filterfw.core.ProgramPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.BatteryStats: android.util.SparseArray getUidStats()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.Debug: long getPss(int,long[],long[])>:<public static native>:<android.os.Debug>
<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)>:<public>:<android.print.PrintManager>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>:<public abstract>:<android.webkit.WebSettings>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.os.AsyncTask.InternalHandler: void handleMessage(android.os.Message)>:<public>:<android.os.AsyncTask.InternalHandler:android.os.Handler>
<android.os.ICancellationSignal.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.ICancellationSignal.Stub.Proxy:android.os.ICancellationSignal>
<android.os.BatteryProperty.1: android.os.BatteryProperty createFromParcel(android.os.Parcel)>:<public>:<android.os.BatteryProperty.1:android.os.Parcelable.Creator>
<android.graphics.Movie: android.graphics.Movie nativeDecodeStream(java.io.InputStream)>:<private static native>:<android.graphics.Movie>
<android.os.JankBdItem: void <init>()>:<public>:<android.os.JankBdItem>
<android.os.INetworkManagementService.Stub.Proxy: android.net.NetworkStats getNetworkStatsUidDetail(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int)>:<public>:<android.graphics.Paint>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.transition.TransitionSet: int getTransitionCount()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.graphics.Canvas.VertexMode: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.os.Bundle: boolean hasFileDescriptors()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.LocalSocket: void <init>(java.io.FileDescriptor)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.accounts.IAccountManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.RemoteCallbackList.Callback: void binderDied()>:<public>:<android.os.RemoteCallbackList.Callback:android.os.IBinder.DeathRecipient>
<android.webkit.WebViewDatabase: boolean hasFormData()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Trace: boolean isTagEnabled(long)>:<public static>:<android.os.Trace>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.app.FragmentManager: boolean executePendingTransactions()>:<public abstract>:<android.app.FragmentManager>
<android.transition.ChangeTransform.2: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeTransform.2:android.util.Property>
<android.net.wifi.WifiCHRStateManager: void <clinit>()>:<static>:<android.net.wifi.WifiCHRStateManager>
<android.transition.ChangeText: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>:<public>:<android.net.http.SslCertificate>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.IActivityManager: void setUserIsMonkey(boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Byte2: void copyTo(byte[],int)>:<public>:<android.renderscript.Byte2>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>:<public>:<android.graphics.EmbossMaskFilter:android.graphics.MaskFilter>
<android.database.sqlite.SQLiteDatabase: int getVersion()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.IPrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glTranslatef(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.LinkAddress: java.net.InetAddress getAddress()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.filterfw.core.OutputPort: void close()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.app.IAppTask.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.app.IActivityManager: void setLockScreenShown(boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.print.PrintAttributes.Margins: void <clinit>()>:<static>:<android.print.PrintAttributes.Margins>
<android.graphics.drawable.AnimatedStateListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.renderscript.RSSurfaceView: void resume()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Notification.Builder: void <init>(android.content.Context)>:<public>:<android.app.Notification.Builder>
<android.graphics.Matrix: boolean postSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RSSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.Uri: java.lang.String toSafeString()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.Int3: void <init>()>:<public>:<android.renderscript.Int3>
<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Activity: void setVolumeControlStream(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.MobileDataStateTracker: void setDetailedState(android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.MediaRouteActionProvider: void access.000(android.app.MediaRouteActionProvider)>:<static>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.renderscript.RenderScriptGL: void bindProgramFragment(android.renderscript.ProgramFragment)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.os.storage.IMountService: boolean isExternalStorageEmulated()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.graphics.Path.FillType: android.graphics.Path.FillType[] values()>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.opengl.GLLogWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.GLFrame: boolean setNativeBitmap(android.graphics.Bitmap,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.print.PageRange.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>:<public static>:<android.app.ActivityOptions>
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal.OnCancelListener)>:<public>:<android.os.CancellationSignal>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.IActivityManager: int getRequestedOrientation(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glBindFramebufferOES(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Process: int getUidForPid(int)>:<public static final>:<android.os.Process>
<android.filterfw.core.SimpleFrame: int[] getInts()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.graphics.Paint: void setClassVariablesFrom(android.graphics.Paint)>:<private>:<android.graphics.Paint>
<android.app.ExitTransitionCoordinator.3: boolean onPreDraw()>:<public>:<android.app.ExitTransitionCoordinator.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.ddm.DdmHandleNativeHeap: void <init>()>:<private>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.LoaderManagerImpl.LoaderInfo: void reportStart()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation valueOf(java.lang.String)>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.graphics.Matrix: void native_setRotate(long,float)>:<private static native>:<android.graphics.Matrix>
<android.app.ActivityGroup: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>:<>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.transition.TransitionInflater: android.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition)>:<private>:<android.transition.TransitionInflater>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <init>(java.util.List)>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.os.IMultiWinService.Stub.Proxy: java.util.List getResumedPackages()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.os.BatteryStats.Timer: int getCountLocked(int)>:<public abstract>:<android.os.BatteryStats.Timer>
<android.app.ActivityThread: void handleRequestAssistContextExtras(android.app.ActivityThread.RequestAssistContextExtras)>:<public>:<android.app.ActivityThread>
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()>:<public>:<android.filterfw.core.GraphRunner>
<android.graphics.NinePatch: long validateNinePatchChunk(long,byte[])>:<private static native>:<android.graphics.NinePatch>
<android.net.MailTo: boolean isMailTo(java.lang.String)>:<public static>:<android.net.MailTo>
<android.transition.Slide.CalculateSlideHorizontal: void <init>()>:<private>:<android.transition.Slide.CalculateSlideHorizontal:android.transition.Slide.CalculateSlide>
<android.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.MobileDataStateTracker: void captivePortalCheckCompleted(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.INetworkPolicyManager.Stub: android.net.INetworkPolicyManager asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkPolicyManager.Stub:android.os.Binder,android.net.INetworkPolicyManager>
<android.net.NetworkInfo.State: void <init>(java.lang.String,int)>:<private>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.app.INotificationManager: boolean matchesCallFilter(android.os.Bundle)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.IActivityContainer: void setSurface(android.view.Surface,int,int,int)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDevice.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pDevice.1:android.os.Parcelable.Creator>
<android.net.EthernetManager: void removeListener(android.net.EthernetManager.Listener)>:<public>:<android.net.EthernetManager>
<android.database.sqlite.SQLiteConnection: void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ITransientNotification.Stub: android.os.IBinder asBinder()>:<public>:<android.app.ITransientNotification.Stub:android.os.Binder,android.app.ITransientNotification>
<android.app.ActivityManager.CpuStatInfo.1: android.app.ActivityManager.CpuStatInfo[] newArray(int)>:<public>:<android.app.ActivityManager.CpuStatInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>:<public abstract>:<android.app.TimePickerDialog.OnTimeSetListener>
<android.webkit.WebSyncManager: void stopSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.webkit.WebView: void goBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.accounts.IAccountManager.Stub.Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.Debug.MemoryInfo: int describeContents()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.net.wifi.RttManager.ServiceHandler: void reportSuccess(java.lang.Object,android.os.Message)>:<>:<android.net.wifi.RttManager.ServiceHandler:android.os.Handler>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.transition.VisibilityPropagation: void <clinit>()>:<static>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.accounts.IAccountManager.Stub.Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.webkit.WebViewProvider: void onPause()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Matrix: boolean postTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildOfferPacket(int,int,boolean,java.net.InetAddress,java.net.InetAddress,byte[],java.lang.Integer,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.util.List,java.net.InetAddress,java.lang.String)>:<public static>:<android.net.dhcp.DhcpPacket>
<android.os.Trace: long cacheEnabledTags()>:<private static>:<android.os.Trace>
<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.BaseBundle: boolean containsKey(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.ActivityOptions: android.content.Intent getResultData()>:<public>:<android.app.ActivityOptions>
<android.app.Application: void dispatchActivityDestroyed(android.app.Activity)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.SystemProperties: void callChangeCallbacks()>:<static>:<android.os.SystemProperties>
<android.net.NetworkIdentity: boolean getRoaming()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.os.INetworkManagementService: void setSoftapMacFilter(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.backup.RestoreSet: int describeContents()>:<public>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.graphics.SurfaceTexture: void <init>(int)>:<public>:<android.graphics.SurfaceTexture>
<android.renderscript.Short4: void div(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2902(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>:<protected transient>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.webkit.WebSettings.LayoutAlgorithm: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.IActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Fragment: void setExitSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.PPPOEInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.PPPOEInfo.1:android.os.Parcelable.Creator>
<android.app.backup.BackupDataInput: int getDataSize()>:<public>:<android.app.backup.BackupDataInput>
<android.accessibilityservice.AccessibilityService.1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.renderscript.Element: android.renderscript.Element YUV(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.Parcel: android.os.Parcel obtain(long)>:<protected static final>:<android.os.Parcel>
<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.RenderScript: void <init>(android.content.Context)>:<>:<android.renderscript.RenderScript>
<android.graphics.Bitmap: int nativeRowBytes(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Paint: int native_getStrokeCap(long)>:<private static native>:<android.graphics.Paint>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void setUidNetworkRules(int,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.ddm.DdmHandleNativeHeap: void connected()>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler access.300(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.os.PersistableBundle: android.os.PersistableBundle forPair(java.lang.String,java.lang.String)>:<public static>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String parseHost()>:<private>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.net.wifi.RttManager.ParcelableRttResults: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.RttManager.ParcelableRttResults:android.os.Parcelable>
<android.renderscript.Short3: void setAt(int,short)>:<public>:<android.renderscript.Short3>
<android.webkit.WebView: float access.1600(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityManager.StackInfo.1: android.app.ActivityManager.StackInfo[] newArray(int)>:<public>:<android.app.ActivityManager.StackInfo.1:android.os.Parcelable.Creator>
<android.renderscript.Byte2: void sub(byte)>:<public>:<android.renderscript.Byte2>
<android.app.Instrumentation: void postPerformCreate(android.app.Activity)>:<private>:<android.app.Instrumentation>
<android.app.ActivityThread.ApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.ActivityThread: void handleNewIntent(android.app.ActivityThread.NewIntentData)>:<private>:<android.app.ActivityThread>
<android.os.MemoryFile: boolean isClosed()>:<private>:<android.os.MemoryFile>
<android.app.IUserSwitchObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IUserSwitchObserver.Stub.Proxy:android.app.IUserSwitchObserver>
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.Registrant: void notifyException(java.lang.Throwable)>:<public>:<android.os.Registrant>
<android.accounts.AccountManager.BaseFutureTask: void access.800(android.accounts.AccountManager.BaseFutureTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.net.IEthernetManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.app.ActivityThread: void handlePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>:<private>:<android.app.ActivityThread>
<android.app.IWallpaperManager: void clearWallpaper()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.opengl.ETC1: void <init>()>:<public>:<android.opengl.ETC1>
<android.net.wifi.DummyHwInnerWifiManager: java.lang.String getAppendSsidWithRandomUuid(android.net.wifi.WifiConfiguration,android.content.Context)>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.app.Presentation: void onStop()>:<protected>:<android.app.Presentation:android.app.Dialog>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.mtp.MtpDevice: void finalize()>:<protected>:<android.mtp.MtpDevice>
<android.webkit.PluginList: void addPlugin(android.webkit.Plugin)>:<public>:<android.webkit.PluginList>
<android.net.wifi.WifiEnterpriseConfig: void resetCaCertificate()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.NativeProgram: boolean bindInitFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.IAppTask.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IAppTask.Stub:android.os.Binder,android.app.IAppTask>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Transition)>:<public>:<android.transition.TransitionManager>
<android.app.BackStackRecord.2: boolean onPreDraw()>:<public>:<android.app.BackStackRecord.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.storage.IMountService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountService.Stub:android.os.Binder,android.os.storage.IMountService>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.IProcessObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.graphics.Outline: void setOval(android.graphics.Rect)>:<public>:<android.graphics.Outline>
<android.net.BaseNetworkStateTracker: java.lang.String getNetworkInterfaceName()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.renderscript.Long3: long dotProduct(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>:<public>:<android.os.BaseBundle>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.filterfw.core.AsyncRunner: void setRunning(boolean)>:<private>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.database.sqlite.SQLiteConnection: void nativeRegisterLocalizedCollators(long,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.RecoverySystem: java.util.HashSet getTrustedCerts(java.io.File)>:<private static>:<android.os.RecoverySystem>
<android.net.LocalSocket: boolean isConnected()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.graphics.drawable.ScaleDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: void access.201(android.webkit.WebView,int,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSErrorHandler getErrorHandler()>:<public>:<android.renderscript.RenderScript>
<android.net.DhcpStateMachine: android.os.PowerManager.WakeLock access.000(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.opengl.GLES20: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.mtp.MtpPropertyGroup: java.lang.Long queryLong(int,java.lang.String)>:<private>:<android.mtp.MtpPropertyGroup>
<android.webkit.WebView: void clearCache(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ExitTransitionCoordinator.4: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.4:java.lang.Runnable>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES10Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES10Ext>
<android.app.Notification.MediaStyle: void populateContentView(android.app.Notification)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.os.BatteryStats.Timer: long getTotalTimeLocked(long,int)>:<public abstract>:<android.os.BatteryStats.Timer>
<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.os.IMultiWinServiceCallBack.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IMultiWinServiceCallBack.Stub:android.os.Binder,android.os.IMultiWinServiceCallBack>
<android.app.Instrumentation: void validateNotAppThread()>:<private final>:<android.app.Instrumentation>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean removeNetwork(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.graphics.Canvas: int getDensity()>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiManager.ActionListener: void onFailure(int)>:<public abstract>:<android.net.wifi.WifiManager.ActionListener>
<android.os.PersistableBundle.MyReadMapCallback: void <init>()>:<>:<android.os.PersistableBundle.MyReadMapCallback:com.android.internal.util.XmlUtils.ReadMapCallback>
<android.opengl.GLSurfaceView.GLThreadManager: void releaseEglContextLocked(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.app.IActivityController.Stub.Proxy: int appNotResponding(java.lang.String,int,java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.net.VpnService.Builder: android.net.VpnService.Builder setConfigureIntent(android.app.PendingIntent)>:<public>:<android.net.VpnService.Builder>
<android.net.wifi.IWifiManager: void setFrequencyBand(int,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void start()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.webkit.PermissionRequest: void deny()>:<public abstract>:<android.webkit.PermissionRequest>
<android.os.SystemService.State: android.os.SystemService.State valueOf(java.lang.String)>:<public static>:<android.os.SystemService.State:java.lang.Enum>
<android.app.backup.IRestoreSession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.database.sqlite.SQLiteConnection: void bindArguments(android.database.sqlite.SQLiteConnection.PreparedStatement,java.lang.Object[])>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.HwWifiCHRService: void init(android.content.Context)>:<public static>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>:<public final>:<android.os.Handler>
<android.app.ApplicationThreadNative: android.os.IBinder asBinder()>:<public>:<android.app.ApplicationThreadNative:android.os.Binder,android.app.IApplicationThread>
<android.sax.RootElement.Handler: void endElement(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>:<public abstract>:<android.webkit.WebView.PictureListener>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.emoji.EmojiFactory: int nativeGetMinimumAndroidPua(long)>:<private native>:<android.emoji.EmojiFactory>
<android.app.AppOpsManager: int opToDefaultMode(int)>:<public static>:<android.app.AppOpsManager>
<android.app.KeyguardManager.KeyguardLock: void <init>(android.app.KeyguardManager,java.lang.String)>:<>:<android.app.KeyguardManager.KeyguardLock>
<android.os.IVibratorService.Stub.Proxy: void cancelVibrate(android.os.IBinder)>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.storage.IMountShutdownObserver.Stub.Proxy: void onShutDownComplete(int)>:<public>:<android.os.storage.IMountShutdownObserver.Stub.Proxy:android.os.storage.IMountShutdownObserver>
<android.renderscript.Long2: android.renderscript.Long2 mod(android.renderscript.Long2,long)>:<public static>:<android.renderscript.Long2>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.StatusBarManager: java.lang.String windowStateToString(int)>:<public static>:<android.app.StatusBarManager>
<android.net.NetworkInfo: int describeContents()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.test.AndroidTestCase: void assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.filterfw.core.FilterFactory: void <init>()>:<public>:<android.filterfw.core.FilterFactory>
<android.net.http.RequestHandle: void cancel()>:<public>:<android.net.http.RequestHandle>
<android.net.LinkProperties: boolean equals(java.lang.Object)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.CookieSyncManager: void setGetInstanceIsAllowed()>:<static>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.os.CommonClock: void registerTimelineChangeListener()>:<private>:<android.os.CommonClock>
<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.IUserManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.IConnectivityManager.Stub.Proxy: boolean setUnderlyingNetworksForVpn(android.net.Network[])>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.Application: void onTrimMemory(int)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.KeyguardManager.1: void <init>(android.app.KeyguardManager,android.app.KeyguardManager.OnKeyguardExitResult)>:<>:<android.app.KeyguardManager.1:android.view.IOnKeyguardExitResult.Stub>
<android.accounts.AccountsException: void <init>()>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.filterfw.core.FilterSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.PendingIntent: boolean isActivity()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.NetworkInfo: boolean access.302(android.net.NetworkInfo,boolean)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.Notification.MediaStyle: android.app.Notification buildStyled(android.app.Notification)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.wifi.PPPOEInfo getPPPOEInfo()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.WorkSource: int describeContents()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.GradientState: void setGradientType(int)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.FileDescriptor,boolean)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>:<public abstract>:<android.app.IServiceConnection:android.os.IInterface>
<android.net.wifi.IWifiManager: java.lang.String getConfigFile()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision: void <init>()>:<private>:<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: boolean hasTranslucentRoot()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.database.sqlite.SQLiteCursor: int getCount()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.os.FileUtils: void <init>()>:<public>:<android.os.FileUtils>
<android.graphics.Rect: java.lang.String toShortString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.Activity: android.content.Intent getIntent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.TrafficStats: long getTxBytes(java.lang.String)>:<public static>:<android.net.TrafficStats>
<android.net.IpConfiguration.1: android.net.IpConfiguration createFromParcel(android.os.Parcel)>:<public>:<android.net.IpConfiguration.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: long nFileA3DGetEntryByIndex(long,int)>:<>:<android.renderscript.RenderScript>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1: void <init>(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1:android.accounts.AccountManagerCallback>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.ChangeBounds: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.net.NetworkConfig: boolean isDefault()>:<public>:<android.net.NetworkConfig>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.http.HttpsConnection: void restartConnection(boolean)>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.os.storage.StorageManager: void disableUsbMassStorage()>:<public>:<android.os.storage.StorageManager>
<android.app.Notification.Builder: boolean access.1100(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.INotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Short3: void setValues(short,short,short)>:<public>:<android.renderscript.Short3>
<android.net.NetworkStats: java.lang.String setToString(int)>:<public static>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.Parcel: void finalize()>:<protected>:<android.os.Parcel>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseProvider(android.content.IContentProvider)>:<public>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.net.wifi.WpsResult.Status: android.net.wifi.WpsResult.Status[] values()>:<public static>:<android.net.wifi.WpsResult.Status:java.lang.Enum>
<android.os.storage.IMountService.Stub.Proxy: void setField(java.lang.String,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.CommonTimeUtils: long transactGetLong(int,long)>:<public>:<android.os.CommonTimeUtils>
<android.net.wifi.WifiConfiguration.3: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiConfiguration.3:android.os.Parcelable.Creator>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.NetworkAgent: void explicitlySelected()>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLErrorWrapper: int glCheckFramebufferStatusOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteFullException: void <init>()>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.FragmentManagerImpl.6: void onAnimationEnd(android.animation.Animator)>:<public>:<android.app.FragmentManagerImpl.6:android.animation.AnimatorListenerAdapter>
<android.app.backup.SharedPreferencesBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RectShape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.webkit.WebViewProvider: void setPictureListener(android.webkit.WebView.PictureListener)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.job.IJobService.Stub: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobService.Stub:android.os.Binder,android.app.job.IJobService>
<android.app.LoaderManagerImpl.LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.app.FragmentManager: boolean popBackStackImmediate()>:<public abstract>:<android.app.FragmentManager>
<android.net.wifi.WifiConfiguration.Visibility: java.lang.String toString()>:<public>:<android.net.wifi.WifiConfiguration.Visibility>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.net.Uri: void <clinit>()>:<static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.RectF: void offsetTo(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.INetworkManagementEventObserver.Stub: void <init>()>:<public>:<android.net.INetworkManagementEventObserver.Stub:android.os.Binder,android.net.INetworkManagementEventObserver>
<android.os.IMultiWinService: java.util.List getMWNonSystemAppNames()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Notification: void lightenPayload()>:<public final>:<android.app.Notification:android.os.Parcelable>
<android.os.CommonClock: void setServerDiedListener(android.os.CommonClock.OnServerDiedListener)>:<public>:<android.os.CommonClock>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.drm.ProcessedData: void <init>(byte[],java.lang.String,java.lang.String)>:<>:<android.drm.ProcessedData>
<android.app.FragmentTransaction: boolean isEmpty()>:<public abstract>:<android.app.FragmentTransaction>
<android.app.ContextImpl.ServiceFetcher: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.ServiceFetcher>
<android.app.ContextImpl: java.io.File getObbDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.pdf.PdfDocument.PageInfo: int access.000(android.graphics.pdf.PdfDocument.PageInfo)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.ConnectivityManager: android.net.INetworkStatsService getStatsService()>:<private static>:<android.net.ConnectivityManager>
<android.accounts.ChooseTypeAndAccountActivity: void onOkButtonClicked(android.view.View)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.print.IPrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.graphics.Matrix: void native_setRotate(long,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.os.Environment.UserEnvironment: void <init>(int)>:<public>:<android.os.Environment.UserEnvironment>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void <init>(android.print.PrintFileDocumentAdapter,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>:<public>:<android.app.KeyguardManager>
<android.app.ActivityManagerProxy: void reportActivityFullyDrawn(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setEnterFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.os.ResultReceiver.MyRunnable: void run()>:<public>:<android.os.ResultReceiver.MyRunnable:java.lang.Runnable>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.transition.Transition: java.util.ArrayList access.000(android.transition.Transition)>:<static>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.Bitmap.CompressFormat: void <clinit>()>:<static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.app.IActivityController.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IActivityController.Stub:android.os.Binder,android.app.IActivityController>
<android.transition.ChangeImageTransform.1: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.transition.ChangeImageTransform.1:android.animation.TypeEvaluator>
<android.net.wifi.WifiSsid: int describeContents()>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.mtp.MtpDatabase: int access.100(android.mtp.MtpDatabase)>:<static>:<android.mtp.MtpDatabase>
<android.graphics.NinePatch: java.lang.String getName()>:<public>:<android.graphics.NinePatch>
<android.graphics.Bitmap: boolean isPremultiplied()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long,long,long,long,long,java.util.Random)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.accounts.AccountManager.AmsTask.1: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.Bitmap: int describeContents()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.filterfw.GraphEnvironment: int addGraph(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.net.NetworkKey: int hashCode()>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setFaces(boolean)>:<public>:<android.renderscript.Type.Builder>
<android.database.IContentObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.ActionBar: void setElevation(float)>:<public>:<android.app.ActionBar>
<android.net.DhcpStateMachine: void registerForPreDhcpNotification()>:<public>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Notification.WearableExtender: int getCustomSizePreset()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.IConnectivityManager.Stub.Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.webkit.EventLogTags: void writeBrowserSnapCenter()>:<public static>:<android.webkit.EventLogTags>
<android.app.AlertDialog: void <init>(android.content.Context,int)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.transition.TransitionSet: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.renderscript.Byte2: void <init>(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.app.LoaderManager: void <init>()>:<public>:<android.app.LoaderManager>
<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkState:android.os.Parcelable>
<android.app.job.JobInfo: long getIntervalMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>:<public>:<android.webkit.WebResourceResponse>
<android.net.IConnectivityManager.Stub.Proxy: void registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>:<public static>:<android.app.ActivityManager>
<android.app.ActivityThread: void deliverResults(android.app.ActivityThread.ActivityClientRecord,java.util.List)>:<private>:<android.app.ActivityThread>
<android.app.PendingIntent.1: android.app.PendingIntent[] newArray(int)>:<public>:<android.app.PendingIntent.1:android.os.Parcelable.Creator>
<android.filterfw.io.GraphReader: void addReferencesByMap(android.filterfw.core.KeyValueMap)>:<public>:<android.filterfw.io.GraphReader>
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>:<public>:<android.net.ConnectivityManager>
<android.net.MobileLinkQualityInfo: int getRssi()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.mtp.MtpServer: void native_setup(android.mtp.MtpDatabase,boolean)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.mtp.MtpDatabase: int beginSendObject(java.lang.String,int,int,int,long,long)>:<private>:<android.mtp.MtpDatabase>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.700(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteTableLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLLogWrapper: void glLightf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.app.SearchableInfo: boolean autoUrlDetect()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.filterfw.core.GenerateFieldPort: boolean hasDefault()>:<public abstract>:<android.filterfw.core.GenerateFieldPort:java.lang.annotation.Annotation>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionStart(android.transition.Transition)>:<public>:<android.transition.TransitionSet.TransitionSetListener:android.transition.Transition.TransitionListenerAdapter>
<android.net.SSLCertificateSocketFactory: byte[] toLengthPrefixedList(byte[][])>:<static transient>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.renderscript.Short2: void set(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int)>:<public abstract>:<android.app.usage.UsageStatsManagerInternal>
<android.renderscript.Double2: void sub(double)>:<public>:<android.renderscript.Double2>
<android.app.ActivityManagerProxy: void clearPendingBackup()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Int2: void addMultiple(android.renderscript.Int2,int)>:<public>:<android.renderscript.Int2>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void clearDeviceOwner(java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManager: boolean isRunningInTestHarness()>:<public static>:<android.app.ActivityManager>
<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.hwcontrol.HwWidgetFactory.Factory: boolean isHwTheme()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.mtp.MtpStorage: java.lang.String getDescription()>:<public final>:<android.mtp.MtpStorage>
<android.net.dhcp.DhcpDiscoverPacket: void <init>(int,byte[],boolean)>:<>:<android.net.dhcp.DhcpDiscoverPacket:android.net.dhcp.DhcpPacket>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener access.802(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.app.ActivityManager.TaskDescription: void restoreFromXml(java.lang.String,java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String[] getAccountTypesWithManagementDisabled()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onNetwork()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.app.ActivityThread: void appNotRespondingViaProvider(android.os.IBinder)>:<final>:<android.app.ActivityThread>
<android.net.wifi.WifiScanner.WifiChangeSettings.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiScanner.WifiChangeSettings.1:android.os.Parcelable.Creator>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>:<public>:<android.webkit.WebViewClient>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float,float)>:<public>:<android.filterfw.geometry.Quad>
<android.app.admin.IDevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Short4: void mul(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ContextImpl.51: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.51:android.app.ContextImpl.ServiceFetcher>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiSsid.1: android.net.wifi.WifiSsid[] newArray(int)>:<public>:<android.net.wifi.WifiSsid.1:android.os.Parcelable.Creator>
<android.os.Parcel: void nativeSetDataPosition(long,int)>:<private static native>:<android.os.Parcel>
<android.app.Activity: void setParent(android.app.Activity)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.Ripple: void jump()>:<public>:<android.graphics.drawable.Ripple>
<android.os.StrictMode.VmPolicy: void <init>(int,java.util.HashMap)>:<private>:<android.os.StrictMode.VmPolicy>
<android.app.job.IJobScheduler.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebViewClient>
<android.appwidget.AppWidgetManager: void convertSizesToPixels(android.appwidget.AppWidgetProviderInfo)>:<private>:<android.appwidget.AppWidgetManager>
<android.os.IUserManager: boolean hasUserRestriction(java.lang.String,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.FontListParser: android.graphics.FontListParser.Config parse(java.io.InputStream)>:<public static>:<android.graphics.FontListParser>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.database.IBulkCursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>:<public>:<android.app.NotificationManager>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.http.DelegatingSSLSession: java.security.Principal getLocalPrincipal()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.os.storage.StorageVolume.1: android.os.storage.StorageVolume[] newArray(int)>:<public>:<android.os.storage.StorageVolume.1:android.os.Parcelable.Creator>
<android.app.backup.BackupTransport.TransportImpl: void <init>(android.app.backup.BackupTransport)>:<>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.opengl.GLLogWrapper: void glLightfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: boolean isWifiP2pEnabled()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.hsm.HwAudioPermWrapper: void <clinit>()>:<static>:<android.hsm.HwAudioPermWrapper>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.print.PrintAttributes.Margins: android.print.PrintAttributes.Margins createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.Margins>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.content.ComponentName getRestrictionsProvider(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.database.Cursor: boolean requery()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.net.wifi.IWifiManager.Stub.Proxy: void setFrequencyBand(int,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.Long2: void sub(long)>:<public>:<android.renderscript.Long2>
<android.webkit.MustOverrideException: void <init>()>:<>:<android.webkit.MustOverrideException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteConnection: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.'annotation'.StringDef: java.lang.String[] value()>:<public abstract>:<android.annotation.StringDef:java.lang.annotation.Annotation>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getCaCertificateAlias()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.graphics.Matrix: void native_set(long,long)>:<private static native>:<android.graphics.Matrix>
<android.graphics.Camera: void setLocation(float,float,float)>:<public native>:<android.graphics.Camera>
<android.transition.Transition: java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.net.LocalSocketAddress.Namespace: void <init>(java.lang.String,int,int)>:<private>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.R.drawable: void <init>()>:<public>:<android.R.drawable>
<android.renderscript.RenderScript: void rsnTypeGetNativeData(long,long,long[])>:<native>:<android.renderscript.RenderScript>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable.StateListState,android.content.res.Resources)>:<private>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteConnection: void nativeResetCancel(long,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.backup.BackupAgent: void onRestoreFinished()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrinterId: void <clinit>()>:<static>:<android.print.PrinterId:android.os.Parcelable>
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>:<public static>:<android.app.AppGlobals>
<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.Dialog: boolean onSearchRequested()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.ShaderProgram: void setVertexCount(int)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>:<public>:<android.app.Instrumentation>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>:<public>:<android.webkit.WebSettings>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.renderscript.Float3: void mul(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.filterfw.core.Frame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager,int,long)>:<>:<android.filterfw.core.Frame>
<android.webkit.FindActionModeCallback: void <init>(android.content.Context)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.os.storage.IMountService.Stub.Proxy: android.os.storage.StorageVolume[] getVolumeList()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.LauncherActivity.ActivityAdapter: java.util.ArrayList access.102(android.app.LauncherActivity.ActivityAdapter,java.util.ArrayList)>:<static>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.database.sqlite.SQLiteConnectionPool: void closeExcessConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.drawable.RippleDrawable.RippleState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.RippleDrawable.RippleState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.os.Parcel: android.os.Parcelable.Creator readParcelableCreator(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.os.BatteryStats.2: void <clinit>()>:<static>:<android.os.BatteryStats.2>
<android.os.BatteryStats.Uid.Proc: void <init>()>:<public>:<android.os.BatteryStats.Uid.Proc>
<android.os.IPowerManager.Stub.Proxy: void updateWakeLockUids(android.os.IBinder,int[])>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.hwtheme.HwThemeManager: void updateSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: void start()>:<public abstract>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.net.wifi.p2p.IWifiP2pManager.Stub: android.net.wifi.p2p.IWifiP2pManager asInterface(android.os.IBinder)>:<public static>:<android.net.wifi.p2p.IWifiP2pManager.Stub:android.os.Binder,android.net.wifi.p2p.IWifiP2pManager>
<android.database.sqlite.SQLiteSession: boolean yieldTransactionUnchecked(long,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)>:<public>:<android.app.backup.BackupDataOutput>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.NinePatchDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.transition.TransitionValues: int hashCode()>:<public>:<android.transition.TransitionValues>
<android.net.wifi.WpsResult: void <init>()>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void onResume()>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ExitTransitionCoordinator: boolean access.502(android.app.ExitTransitionCoordinator,boolean)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.INetworkPolicyListener: void onRestrictBackgroundChanged(boolean)>:<public abstract>:<android.net.INetworkPolicyListener:android.os.IInterface>
<android.app.IBackupAgent.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.hwtheme.HwThemeManager: android.content.res.IHwConfiguration initHwConfiguration()>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture>
<android.graphics.CornerPathEffect: long nativeCreate(float)>:<private static native>:<android.graphics.CornerPathEffect:android.graphics.PathEffect>
<android.os.WorkSource: android.os.WorkSource addReturningNewbs(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask: void doWork()>:<public abstract>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.os.BatteryStats: void printBitDescriptions(java.io.PrintWriter,int,int,android.os.BatteryStats.HistoryTag,android.os.BatteryStats.BitDescription[],boolean)>:<static>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable.BitmapState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebView.HitTestResult: void setType(int)>:<public>:<android.webkit.WebView.HitTestResult>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(java.lang.String,int)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.os.BatteryStats.HistoryItem: void setToCommon(android.os.BatteryStats.HistoryItem)>:<private>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.renderscript.Long2: void addAt(int,long)>:<public>:<android.renderscript.Long2>
<android.opengl.GLErrorWrapper: void glHint(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.backup.FileBackupHelperBase: void finalize()>:<protected>:<android.app.backup.FileBackupHelperBase>
<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Shader: void nativeDestructor(long)>:<private static native>:<android.graphics.Shader>
<android.sax.BadXmlException: void <init>(java.lang.String,org.xml.sax.Locator)>:<public>:<android.sax.BadXmlException:org.xml.sax.SAXParseException,org.xml.sax.SAXException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Mesh.Builder: void <init>(android.renderscript.RenderScript,int)>:<public>:<android.renderscript.Mesh.Builder>
<android.os.UserManager: int getUserHandle()>:<public>:<android.os.UserManager>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void <init>(android.content.Context,android.os.Looper,android.accessibilityservice.AccessibilityService.Callbacks)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.ddm.DdmHandleExit: void register()>:<public static>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.renderscript.Float2: void setAt(int,float)>:<public>:<android.renderscript.Float2>
<android.net.RouteInfo: java.lang.String toString()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: void registerListener(android.os.IBatteryPropertiesListener)>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.os.BaseBundle: byte[] getByteArray(java.lang.String)>:<>:<android.os.BaseBundle>
<android.app.IBackupAgent.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.webkit.HwFindActionModeCallback: android.widget.ImageView access.500(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.GLEnvironment: void <clinit>()>:<static>:<android.filterfw.core.GLEnvironment>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrintAttributes.Builder>
<android.app.KeyguardManager.1: void onKeyguardExitResult(boolean)>:<public>:<android.app.KeyguardManager.1:android.view.IOnKeyguardExitResult.Stub>
<android.app.ContextImpl: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiCHRConst: java.lang.String getDisconnectReasonCode(int)>:<public static>:<android.net.wifi.WifiCHRConst>
<android.webkit.CookieManager: void removeSessionCookies(android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.app.PackageDeleteObserver.1: void onUserActionRequired(android.content.Intent)>:<public>:<android.app.PackageDeleteObserver.1:android.content.pm.IPackageDeleteObserver2.Stub>
<android.graphics.Paint: void native_getTextPath(long,long,int,char[],int,int,float,float,long)>:<private static native>:<android.graphics.Paint>
<android.os.IPowerManager.Stub.Proxy: void boostScreenBrightness(long)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrinterCapabilitiesInfo: java.util.List access.200(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.filterfw.io.TextGraphReader.ConnectCommand: void execute(android.filterfw.io.TextGraphReader)>:<public>:<android.filterfw.io.TextGraphReader.ConnectCommand:android.filterfw.io.TextGraphReader.Command>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.UserManager: void removeRestrictions()>:<public>:<android.os.UserManager>
<android.graphics.SurfaceTexture: long nativeGetTimestamp()>:<private native>:<android.graphics.SurfaceTexture>
<android.print.IPrintManager: void restartPrintJob(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.webkit.WebView.HitTestResult: void setExtra(java.lang.String)>:<public>:<android.webkit.WebView.HitTestResult>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationResume(android.animation.Animator)>:<public>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>:<public static>:<android.graphics.BitmapFactory>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>:<public final>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>:<public>:<android.net.NetworkPolicyManager>
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.NetworkCapabilities: int[] enumerateBits(long)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void onError(int,java.lang.String)>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.opengl.GLErrorWrapper: void glScissor(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.RotateDrawable.RotateState: boolean canConstantState()>:<public>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Element: java.lang.String getSubElementName(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glSampleCoveragex(int,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.IWifiManager.Stub.Proxy: void stopWifi()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.webkit.CookieManager: boolean acceptCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.app.ContextImpl.46: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.46:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.PPPOEInfo: int describeContents()>:<public>:<android.net.wifi.PPPOEInfo:android.os.Parcelable>
<android.app.NotificationManager: void <clinit>()>:<static>:<android.app.NotificationManager>
<android.app.Dialog: void <init>(android.content.Context)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.RenderScript: void rsnAllocationIoSend(long,long)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.Long2: void setAt(int,long)>:<public>:<android.renderscript.Long2>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Rect.UnflattenHelper: void <init>()>:<private>:<android.graphics.Rect.UnflattenHelper>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.app.Activity: void setDefaultKeyMode(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.UserHandle: int getSharedAppGid(int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style[] values()>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.webkit.FindActionModeCallback: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: android.filterfw.core.SerializedFrame.DirectByteInputStream getInputStream()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.net.Uri.HierarchicalUri: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.database.sqlite.SQLiteConnection: void setJournalSizeLimit()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.p2p.WifiP2pWfdInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pWfdInfo.1:android.os.Parcelable.Creator>
<android.graphics.Typeface: boolean isBold()>:<public final>:<android.graphics.Typeface>
<android.app.ActivityManager.RecentTaskInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.os.IPowerManager: void userActivity(long,int,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.os.IUserManager.Stub.Proxy: void setUserRestrictions(android.os.Bundle,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.net.wifi.IWifiManager.Stub.Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.ITaskStackListener.Stub: android.os.IBinder asBinder()>:<public>:<android.app.ITaskStackListener.Stub:android.os.Binder,android.app.ITaskStackListener>
<android.net.wifi.WifiInfo: boolean is24GHz()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.ContextImpl.60: void <init>()>:<>:<android.app.ContextImpl.60:android.app.ContextImpl.ServiceFetcher>
<android.os.Process: android.os.Process.ZygoteState openZygoteSocketIfNeeded(java.lang.String)>:<private static>:<android.os.Process>
<android.opengl.GLSurfaceView.GLThread: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.renderscript.Double3: void sub(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.net.LinkProperties: boolean hasIPv6DnsServer()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ActivityThread.GcIdler: void <init>(android.app.ActivityThread)>:<>:<android.app.ActivityThread.GcIdler:android.os.MessageQueue.IdleHandler>
<android.os.storage.IMountService.Stub.Proxy: int verifyEncryptionPassword(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.renderscript.RenderScript: long nFontCreateFromFile(java.lang.String,float,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.IWifiManager: void setSoftapMacFilter(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.IActivityController.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.webkit.JsDialogHelper: boolean canShowAlertDialog(android.content.Context)>:<private static>:<android.webkit.JsDialogHelper>
<android.app.Notification.MediaStyle: void restoreFromExtras(android.os.Bundle)>:<protected>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value valueOf(java.lang.String)>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.os.BatteryStats.LongCounter: void logState(android.util.Printer,java.lang.String)>:<public abstract>:<android.os.BatteryStats.LongCounter>
<android.os.SystemService: android.os.SystemService.State getState(java.lang.String)>:<public static>:<android.os.SystemService>
<android.filterfw.core.FrameFormat: android.filterfw.core.FrameFormat unspecified()>:<public static>:<android.filterfw.core.FrameFormat>
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>:<public>:<android.net.ConnectivityManager>
<android.app.MediaRouteButton: int[] onCreateDrawableState(int)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.CursorWrapper: boolean moveToPrevious()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ActivityThread.Profiler: void setProfiler(android.app.ProfilerInfo)>:<public>:<android.app.ActivityThread.Profiler>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.WifiManager: void finalize()>:<protected>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.RenderScriptGL: void pause()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.database.sqlite.SQLiteConnection: void attachCancellationSignal(android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.backup.IBackupManager: void fullTransportBackup(java.lang.String[])>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.EnterTransitionCoordinator: void cancel()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.LocalSocketImpl: int available()>:<protected>:<android.net.LocalSocketImpl>
<android.os.IHardwareService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IHardwareService.Stub:android.os.Binder,android.os.IHardwareService>
<android.app.trust.ITrustListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.trust.ITrustListener.Stub:android.os.Binder,android.app.trust.ITrustListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.renderscript.RenderScript: void rsnContextDestroy(long)>:<native>:<android.renderscript.RenderScript>
<android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>:<private static>:<android.app.ActivityThread>
<android.net.wifi.p2p.WifiP2pInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiScanner.ScanSettings: int describeContents()>:<public>:<android.net.wifi.WifiScanner.ScanSettings:android.os.Parcelable>
<android.webkit.CacheManager: android.webkit.CacheManager.CacheResult getCacheFile(java.lang.String,java.util.Map)>:<public static>:<android.webkit.CacheManager>
<android.accessibilityservice.AccessibilityServiceInfo.1: android.accessibilityservice.AccessibilityServiceInfo createFromParcel(android.os.Parcel)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo.1:android.os.Parcelable.Creator>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromDecoded(java.lang.String)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.net.LocalSocketImpl: void accept(android.net.LocalSocketImpl)>:<protected>:<android.net.LocalSocketImpl>
<android.graphics.Path: boolean native_op(long,long,int,long)>:<private static native>:<android.graphics.Path>
<android.filterfw.core.GLEnvironment: void activate()>:<public>:<android.filterfw.core.GLEnvironment>
<android.webkit.WebIconDatabase: void removeAllIcons()>:<public abstract>:<android.webkit.WebIconDatabase>
<android.graphics.Matrix: void native_getValues(long,float[])>:<private static native>:<android.graphics.Matrix>
<android.net.ConnectivityManager: void renewRequestLocked(android.net.ConnectivityManager.LegacyRequest)>:<private>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.ExitTransitionCoordinator: void stop()>:<public>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.net.nsd.DnsSdTxtRecord: int describeContents()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.UrlInterceptRegistry: boolean registerHandler(android.webkit.UrlInterceptHandler)>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.accessibilityservice.AccessibilityService.Callbacks: boolean onKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.AvoidXfermode.Mode: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initalizeChannel(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener,android.os.Messenger)>:<private>:<android.net.wifi.p2p.WifiP2pManager>
<android.mtp.MtpDevice: boolean native_delete_object(int)>:<private native>:<android.mtp.MtpDevice>
<android.renderscript.Mesh: android.renderscript.Mesh.Primitive getPrimitive(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition: void reverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.NativeProgram: boolean nativeInit()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.PowerManager.WakeLock: java.lang.String toString()>:<public>:<android.os.PowerManager.WakeLock>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.Uri.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.Uri.1:android.os.Parcelable.Creator>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.BatteryStats: int getMobileRadioActiveCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.ActivityView: void startActivity(android.content.IntentSender)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.accounts.AccountManager.1: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>:<public>:<android.app.AlertDialog.Builder>
<android.app.NotificationManager: void cancel(java.lang.String,int)>:<public>:<android.app.NotificationManager>
<android.app.Activity: void onEnterAnimationComplete()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>:<public>:<android.os.BaseBundle>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: int getKeyframeIdAt(int)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.accounts.AccountAuthenticatorResponse.1: void <init>()>:<>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int)>:<public abstract>:<android.app.ActionBar>
<android.os.StatFs: long getFreeBlocksLong()>:<public>:<android.os.StatFs>
<android.net.LinkProperties: int getMtu()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.BatteryStats.Uid: void noteActivityResumedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>:<public>:<android.sax.Element>
<android.filterfw.core.Program: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>:<public abstract>:<android.filterfw.core.Program>
<android.os.storage.IMountService: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.appwidget.AppWidgetHost.Callbacks: void viewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.graphics.Bitmap: boolean hasMipMap()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void <clinit>()>:<static>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.app.Notification.Builder: android.widget.RemoteViews makeBigContentView()>:<private>:<android.app.Notification.Builder>
<android.net.http.Request: android.net.http.EventHandler getEventHandler()>:<>:<android.net.http.Request>
<android.app.Notification: void cloneInto(android.app.Notification,boolean)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.os.ICancellationSignal.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.ICancellationSignal.Stub.Proxy:android.os.ICancellationSignal>
<android.app.BackStackRecord: java.lang.String toString()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.AnimationDrawable: void nextFrame(boolean)>:<private>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.CursorWrapper: android.os.Bundle getExtras()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.StateListDrawable: void <init>()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.print.pdf.PrintedPdfDocument: void <init>(android.content.Context,android.print.PrintAttributes)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void computeConstantSize()>:<protected>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.DhcpResults: void <init>(android.net.StaticIpConfiguration)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwnerName()>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.os.INetworkManagementService: void clearPermission(int[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.RenderScript: long rsnProgramFragmentCreate(long,java.lang.String,java.lang.String[],long[])>:<native>:<android.renderscript.RenderScript>
<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>:<public>:<android.app.LoadedApk>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForLastInsertedRowId(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)>:<private>:<android.os.Parcel>
<android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>:<static>:<android.app.ActivityThread>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.os.TokenWatcher: void release(android.os.IBinder)>:<public>:<android.os.TokenWatcher>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setRecycleOnMeasureEnabled(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getActiveNetworkInfo()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.os.Parcel: void nativeWriteLong(long,long)>:<private static native>:<android.os.Parcel>
<android.net.http.Headers: java.lang.String getPragma()>:<public>:<android.net.http.Headers>
<android.net.wifi.IWifiManager: void setAllowScansWithTraffic(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.NetworkStats: int[] getUniqueUids()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.net.wifi.WifiManager: void setWifiEnableForP2p(boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Long2: void mod(long)>:<public>:<android.renderscript.Long2>
<android.app.VoiceInteractor.CompleteVoiceRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CompleteVoiceRequest:android.app.VoiceInteractor.Request>
<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>:<public>:<android.filterfw.io.PatternScanner>
<android.mtp.MtpPropertyGroup: java.lang.String nameFromPath(java.lang.String)>:<private static>:<android.mtp.MtpPropertyGroup>
<android.app.ActivityManager.MemoryInfo.1: void <init>()>:<>:<android.app.ActivityManager.MemoryInfo.1:android.os.Parcelable.Creator>
<android.graphics.Path: void native_addOval(long,float,float,float,float,int)>:<private static native>:<android.graphics.Path>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript.Priority: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.app.IActivityManager: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.IUserManager: boolean removeUser(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.net.wifi.WifiManager: boolean isOffChannelTdlsSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.database.CursorWindow.1: android.database.CursorWindow createFromParcel(android.os.Parcel)>:<public>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>:<public final>:<android.database.ContentObserver>
<android.print.IPrintSpooler.Stub.Proxy: void removeObsoletePrintJobs()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.drm.DrmInfoRequest: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfoRequest>
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.app.ContextImpl.ApplicationContentResolver: void unstableProviderDied(android.content.IContentProvider)>:<public>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.net.http.Headers: long getTransferEncoding()>:<public>:<android.net.http.Headers>
<android.renderscript.RenderScript: void nContextDump(int)>:<>:<android.renderscript.RenderScript>
<android.graphics.SweepGradient: android.graphics.Shader copy()>:<protected>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.app.Activity: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.storage.IMountService.Stub.Proxy: int destroySecureContainer(java.lang.String,boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: boolean equals(java.lang.Object,java.lang.Object)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.os.storage.StorageManager: int access.300(android.os.storage.StorageManager)>:<static>:<android.os.storage.StorageManager>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>:<public static>:<android.opengl.ETC1Util>
<android.app.IUiModeManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IUiModeManager.Stub:android.os.Binder,android.app.IUiModeManager>
<android.graphics.drawable.InsetDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.InputPort: void close()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.os.storage.IMountServiceListener: void onUsbMassStorageConnectionChanged(boolean)>:<public abstract>:<android.os.storage.IMountServiceListener:android.os.IInterface>
<android.app.Activity: void finish()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Filter: int getStatus()>:<final>:<android.filterfw.core.Filter>
<android.webkit.Plugin: void setDescription(java.lang.String)>:<public>:<android.webkit.Plugin>
<android.app.AppImportanceMonitor.AppEntry: void <init>(int)>:<>:<android.app.AppImportanceMonitor.AppEntry>
<android.app.job.JobScheduler: void cancel(int)>:<public abstract>:<android.app.job.JobScheduler>
<android.app.KeyguardManager: void <init>()>:<>:<android.app.KeyguardManager>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable.ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable.1)>:<>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.IWallpaperManager: int getHeightHint()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.print.ILayoutResultCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiConfiguration: android.net.wifi.ScanResult lastSeen()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.os.Parcel: android.os.IBinder nativeReadStrongBinder(long)>:<private static native>:<android.os.Parcel>
<android.graphics.SurfaceTexture: void <init>(boolean)>:<public>:<android.graphics.SurfaceTexture>
<android.ddm.DdmHandleThread: void <init>()>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.PorterDuff.Mode: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.app.Fragment: void setHasOptionsMenu(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.filterfw.core.NativeFrame: boolean nativeCopyFromNative(android.filterfw.core.NativeFrame)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.CommonClock: void finalize()>:<protected>:<android.os.CommonClock>
<android.app.admin.IDevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.AppOpsManager.OpEntry: void <init>(android.os.Parcel)>:<>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.print.PrintFileDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.test.PerformanceTestCase.Intermediates: void startTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2212(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.Notification.Builder: int getActionTombstoneLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.app.Notification.MediaStyle: android.widget.RemoteViews generateMediaActionButton(android.app.Notification.Action)>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.net.LinkQualityInfo: int getNetworkType()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.os.Bundle: void putIBinder(java.lang.String,android.os.IBinder)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_BACK(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.net.http.Headers: void setContentLength(long)>:<public>:<android.net.http.Headers>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.mtp.MtpObjectInfo: int getThumbFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.filterfw.core.FrameManager: void <init>()>:<public>:<android.filterfw.core.FrameManager>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1:android.os.Parcelable.Creator>
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Notification.Builder: android.app.Notification.Builder setContentText(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.renderscript.BaseObj: void checkValid()>:<>:<android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.ActivityThread.ProviderKey: int hashCode()>:<public>:<android.app.ActivityThread.ProviderKey>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.Notification.WearableExtender: java.lang.Object clone()>:<public volatile>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.pdf.PdfRenderer.Page: void render(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Matrix,int)>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.net.wifi.WifiConfiguration: java.util.ArrayList sortScanResults()>:<private>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.Service: android.app.Application getApplication()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.webkit.WebViewProvider.ViewDelegate: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStoppedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.opengl.EGLConfig: void <init>(long)>:<private>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.net.http.AndroidHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>:<private>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Movie: int width()>:<public native>:<android.graphics.Movie>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void destroy()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void <clinit>()>:<static>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.graphics.ColorMatrix: void setRotate(int,float)>:<public>:<android.graphics.ColorMatrix>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>:<public>:<android.graphics.Paint>
<android.graphics.drawable.DrawableContainer: int getOpacity()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.trust.ITrustManager.Stub.Proxy: void registerTrustListener(android.app.trust.ITrustListener)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.net.INetworkPolicyListener: void onUidRulesChanged(int,int)>:<public abstract>:<android.net.INetworkPolicyListener:android.os.IInterface>
<android.renderscript.Double3: double dotProduct(android.renderscript.Double3,android.renderscript.Double3)>:<public static>:<android.renderscript.Double3>
<android.graphics.pdf.PdfDocument: void nativeWriteTo(long,java.io.OutputStream,byte[])>:<private native>:<android.graphics.pdf.PdfDocument>
<android.os.MemoryFile: int length()>:<public>:<android.os.MemoryFile>
<android.graphics.Bitmap: void reinit(int,int,boolean)>:<>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.NetworkStatsHistory: long getTotalBytes()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.webkit.WebView: boolean access.1001(android.webkit.WebView,int,android.graphics.Rect)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.database.AbstractCursor: void <init>()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Double2: void mul(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.app.SearchableInfo: int getInputType()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.http.RequestQueue: void setProxyConfig()>:<private>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: android.os.Messenger getMessenger()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.AnimatedRotateDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getStorageEncryption(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.database.sqlite.SQLiteConnection: java.lang.String canonicalizeSyncMode(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ActivityManager.TaskThumbnail.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.TaskThumbnail.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate access.302(android.net.wifi.WifiEnterpriseConfig,java.security.cert.X509Certificate)>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.database.sqlite.SQLiteDebug.PagerStats: void <init>()>:<public>:<android.database.sqlite.SQLiteDebug.PagerStats>
<android.graphics.drawable.Ripple: void enter()>:<public>:<android.graphics.drawable.Ripple>
<android.net.wifi.WifiEnterpriseConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.storage.IMountService.Stub.Proxy: boolean isObbMounted(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.Parcel: boolean nativeHasFileDescriptors(long)>:<private static native>:<android.os.Parcel>
<android.graphics.RectF: float centerX()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.drm.DrmSupportInfo: void <init>()>:<public>:<android.drm.DrmSupportInfo>
<android.opengl.EGLLogWrapper: void logLine(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.arp.MultiGW: java.lang.String getGWIPAddr()>:<public>:<android.net.arp.MultiGW>
<android.webkit.WebView: void invokeZoomPicker()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.RenderScript: void rsnProgramBindConstants(long,long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.transition.TransitionValues: java.lang.String toString()>:<public>:<android.transition.TransitionValues>
<android.app.ContextImpl: android.content.res.Resources.Theme getTheme()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>:<public abstract>:<android.os.Parcelable.Creator>
<android.graphics.Matrix.1: boolean setPolyToPoly(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.wifi.RttManager: void <clinit>()>:<static>:<android.net.wifi.RttManager>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Paint: float getTextSkewX()>:<public native>:<android.graphics.Paint>
<android.webkit.FindActionModeCallback: void findAll()>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()>:<public>:<android.app.WallpaperManager>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: void <init>(android.app.LauncherActivity.ActivityAdapter,android.app.LauncherActivity.1)>:<>:<android.app.LauncherActivity.ActivityAdapter.ArrayFilter:android.widget.Filter>
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ApplicationPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.BatteryStats: java.lang.String printWakeLockCheckin(java.lang.StringBuilder,android.os.BatteryStats.Timer,long,java.lang.String,int,java.lang.String)>:<private static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.IUiModeManager: void enableCarMode(int)>:<public abstract>:<android.app.IUiModeManager:android.os.IInterface>
<android.app.ActivityManagerProxy: boolean startUserInBackground(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState[] values()>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ActivityManager.RunningAppProcessInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.RunningAppProcessInfo.1:android.os.Parcelable.Creator>
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Picture: int nativeGetWidth(long)>:<private static native>:<android.graphics.Picture>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObserver>
<android.app.IActivityManager.ContentProviderHolder: int describeContents()>:<public>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.os.BatteryStats.HistoryItem: boolean isDeltaData()>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.net.NetworkStateTracker: android.net.Network getNetwork()>:<public abstract>:<android.net.NetworkStateTracker>
<android.webkit.WebView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.ddm.DdmHandleViewDebug: void disconnected()>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.usage.UsageStatsManager: void <init>(android.content.Context,android.app.usage.IUsageStatsManager)>:<public>:<android.app.usage.UsageStatsManager>
<android.opengl.GLLogWrapper: void glLoadMatrixx(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>:<public static>:<android.os.SystemProperties>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: boolean hasPackage(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.net.INetworkPolicyListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkPolicyListener.Stub:android.os.Binder,android.net.INetworkPolicyListener>
<android.app.SharedPreferencesImpl.MemoryCommitResult: void setDiskWriteResult(boolean)>:<public>:<android.app.SharedPreferencesImpl.MemoryCommitResult>
<android.net.wifi.IWifiManager: boolean isDualBandSupported()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.SupplicantState: boolean isHandshakeState(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition: void stop()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.accounts.AuthenticatorDescription: void <clinit>()>:<static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.os.MessageQueue: boolean isIdling()>:<>:<android.os.MessageQueue>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void createCachedBitmapIfNeeded(android.graphics.Rect)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES11: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.Canvas: void native_drawLine(long,float,float,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.app.ContextImpl.43: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.43:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Script.LaunchOptions: int getXEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1202(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.IActivityManager: void releasePersistableUriPermission(android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.Matrix3f: void loadRotate(float)>:<public>:<android.renderscript.Matrix3f>
<android.os.storage.IMountService: java.lang.String getMountedObbPath(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.wifi.WifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Point>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>:<public>:<android.net.UrlQuerySanitizer>
<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.os.IUserManager: void setUserName(int,java.lang.String)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.net.NetworkCapabilities: int access.202(android.net.NetworkCapabilities,int)>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.accessibilityservice.AccessibilityService.Callbacks: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.app.IAlarmManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.os.Process.ZygoteState: boolean isClosed()>:<>:<android.os.Process.ZygoteState>
<android.os.BaseBundle: void putAll(android.os.PersistableBundle)>:<public>:<android.os.BaseBundle>
<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Path.Primitive: android.renderscript.Path.Primitive valueOf(java.lang.String)>:<public static>:<android.renderscript.Path.Primitive:java.lang.Enum>
<android.graphics.drawable.AnimatedRotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.sqlite.SQLiteConnectionPool: void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.net.http.CertificateChainValidator.NoPreloadHolder: javax.net.ssl.HostnameVerifier access.200()>:<static>:<android.net.http.CertificateChainValidator.NoPreloadHolder>
<android.net.IpConfiguration: void setProxySettings(android.net.IpConfiguration.ProxySettings)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.PacProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>:<public>:<android.net.PacProxySelector:java.net.ProxySelector>
<android.os.IMultiWinService: java.util.List getMWAppNames()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.Canvas: void native_drawBitmap(long,int[],int,int,float,float,int,int,boolean,long)>:<private static native>:<android.graphics.Canvas>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.app.Activity: void startActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.net.wifi.WifiManager: boolean doArpTest(int,int,int,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.net.NetworkRequest.1: android.net.NetworkRequest createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkRequest.1:android.os.Parcelable.Creator>
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>:<public>:<android.app.usage.TimeSparseArray:android.util.LongSparseArray>
<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)>:<public static>:<android.os.Debug>
<android.database.sqlite.SQLiteConnection: void nativeBindLong(long,long,int,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.renderscript.ScriptIntrinsicConvolve3x3: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityThread: void access.3100(android.app.ActivityThread,android.app.ActivityThread.DumpComponentInfo)>:<static>:<android.app.ActivityThread>
<android.app.IUiAutomationConnection: void executeShellCommand(java.lang.String,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>:<>:<android.os.BaseBundle>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.graphics.drawable.RotateDrawable: float getFromDegrees()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.BackStackRecord: android.app.FragmentTransaction show(android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.http.Connection: void processRequests(android.net.http.Request)>:<>:<android.net.http.Connection>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.app.Activity.1: boolean hasView()>:<public>:<android.app.Activity.1:android.app.FragmentContainer>
<android.app.ExitTransitionCoordinator.10: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.10:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.app.Notification.MediaStyle: void addExtras(android.os.Bundle)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Notification.Builder: android.app.Notification.Builder setContentInfo(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void reset()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>:<public>:<android.app.UiAutomation>
<android.transition.TransitionManager: android.util.ArrayMap getRunningTransitions()>:<private static>:<android.transition.TransitionManager>
<android.app.ActivityManager.MemoryInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.ActivityManager.MemoryInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.backup.BackupTransport: android.os.IBinder getBinder()>:<public>:<android.app.backup.BackupTransport>
<android.app.usage.UsageEvents.1: android.app.usage.UsageEvents createFromParcel(android.os.Parcel)>:<public>:<android.app.usage.UsageEvents.1:android.os.Parcelable.Creator>
<android.renderscript.Element: android.renderscript.Element U32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.ScaleDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Byte3: void <init>(byte,byte,byte)>:<public>:<android.renderscript.Byte3>
<android.net.http.CertificateChainValidator: void <init>()>:<private>:<android.net.http.CertificateChainValidator>
<android.net.Network: void <clinit>()>:<static>:<android.net.Network:android.os.Parcelable>
<android.net.wifi.IRttManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.wifi.IRttManager.Stub.Proxy:android.net.wifi.IRttManager>
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfo>
<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.ShortBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.transition.Visibility.2: void onAnimationResume(android.animation.Animator)>:<public>:<android.transition.Visibility.2:android.animation.AnimatorListenerAdapter>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>:<public>:<android.graphics.AvoidXfermode:android.graphics.Xfermode>
<android.opengl.GLSurfaceView.GLThread: boolean ableToDraw()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.renderscript.Byte4: android.renderscript.Byte4 mul(android.renderscript.Byte4,android.renderscript.Byte4)>:<public static>:<android.renderscript.Byte4>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.INetworkScoreService: void disableScoring()>:<public abstract>:<android.net.INetworkScoreService:android.os.IInterface>
<android.ddm.DdmHandleThread: void connected()>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.accounts.AccountManager.10: void doWork()>:<public>:<android.accounts.AccountManager.10:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.webkit.WebView: int findAll(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.p2p.WifiP2pGroup: void setInterface(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.LinkAddress: int hashCode()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.webkit.WebView: void clearMatches()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Canvas: void rotate(float,float,float)>:<public final>:<android.graphics.Canvas>
<android.app.DownloadManager.Request: void <init>(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.renderscript.Float4: void setAt(int,float)>:<public>:<android.renderscript.Float4>
<android.os.storage.IMountService.Stub.Proxy: int renameSecureContainer(java.lang.String,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnlyLocked()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.INetworkStatsService: void incrementOperationCount(int,int,int)>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.app.Fragment.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.print.PrintJob: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJob>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.UserManager: int checkRestrictionsChallenge(java.lang.String)>:<public>:<android.os.UserManager>
<android.app.INonHardwareAcceleratedPackagesManager: boolean getForceEnabled(java.lang.String)>:<public abstract>:<android.app.INonHardwareAcceleratedPackagesManager:android.os.IInterface>
<android.app.Activity: android.view.View getCurrentFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLLogWrapper: java.lang.String getClientState(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ContextImpl: java.lang.String getBasePackageName()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.FileObserver: void <clinit>()>:<static>:<android.os.FileObserver>
<android.os.PowerManager.WakeLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.os.PowerManager.WakeLock>
<android.os.StrictMode: java.lang.ThreadLocal access.900()>:<static>:<android.os.StrictMode>
<android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>:<public static>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.os.CommonTimeUtils: int transactSetSockaddr(int,java.net.InetSocketAddress)>:<public>:<android.os.CommonTimeUtils>
<android.drm.DrmRights: void <init>(java.io.File,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.net.wifi.WifiSsid.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiSsid.1:android.os.Parcelable.Creator>
<android.renderscript.BaseObj: int hashCode()>:<public>:<android.renderscript.BaseObj>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int,android.os.IBinder)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.FragmentManagerImpl: void performPendingDeferredStart(android.app.Fragment)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.QueuedWork: void add(java.lang.Runnable)>:<public static>:<android.app.QueuedWork>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.webkit.WebView: void onResume()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.admin.DevicePolicyManagerInternal: java.util.List getCrossProfileWidgetProviders(int)>:<public abstract>:<android.app.admin.DevicePolicyManagerInternal>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>:<public>:<android.graphics.Path>
<android.graphics.Bitmap.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.Bitmap.1:android.os.Parcelable.Creator>
<android.renderscript.FieldPacker: android.renderscript.Long2 subLong2()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.ShapeDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.IMultiWinService: void changeFrameSize(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.opengl.GLLogWrapper.PointerInfo: int sizeof(int)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()>:<public>:<android.print.PrintManager>
<android.webkit.ClientCertRequest: java.security.Principal[] getPrincipals()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.os.BatteryStats.Uid: long getWifiMulticastTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.net.TrafficStats: void <init>()>:<public>:<android.net.TrafficStats>
<android.renderscript.Long3: android.renderscript.Long3 div(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.PathMeasure: float getLength()>:<public>:<android.graphics.PathMeasure>
<android.net.wifi.p2p.WifiP2pConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pConfig.1:android.os.Parcelable.Creator>
<android.print.PrinterId.1: void <init>()>:<>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.net.wifi.RttManager: java.lang.Object access.200(int)>:<static>:<android.net.wifi.RttManager>
<android.renderscript.RenderScript: long nScriptGetVarJ(long,int)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.VectorDrawable.VPath: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.RippleDrawable: void updateMaskShaderIfNeeded()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.Trace: void nativeAsyncTraceEnd(long,java.lang.String,int)>:<private static native>:<android.os.Trace>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.ActivityThread: void completeRemoveProvider(android.app.ActivityThread.ProviderRefCount)>:<final>:<android.app.ActivityThread>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>:<public>:<android.print.PrintManager>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActionBar: void setNavigationMode(int)>:<public abstract>:<android.app.ActionBar>
<android.database.Cursor: long getLong(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.transition.Transition: void resume(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.WebViewFactoryProvider.Statics: void freeMemoryForTests()>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.hwtheme.HwThemeManager: boolean isHwTheme()>:<public static>:<android.hwtheme.HwThemeManager>
<android.print.PrintJobInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.HwCustSvcFactory.Factory: android.app.IHwCustNotification createNotificationCust()>:<public abstract>:<android.app.HwCustSvcFactory.Factory>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.FragmentManager.OnBackStackChangedListener: void onBackStackChanged()>:<public abstract>:<android.app.FragmentManager.OnBackStackChangedListener>
<android.net.TrafficStats: long getMobileRxPackets()>:<public static>:<android.net.TrafficStats>
<android.app.admin.IDevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES11Ext: void <init>()>:<public>:<android.opengl.GLES11Ext>
<android.app.ProfilerInfo: void <clinit>()>:<static>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.webkit.WebView: void debugDump()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.WifiCHRStateManager: void updateRSSI(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.accounts.AccountManager.AmsTask: android.accounts.AccountManagerFuture start()>:<public final>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.graphics.drawable.Ripple.LogInterpolator: void <init>()>:<private>:<android.graphics.drawable.Ripple.LogInterpolator:android.animation.TimeInterpolator>
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>:<public>:<android.graphics.Paint>
<android.os.StatFs: void <init>(java.lang.String)>:<public>:<android.os.StatFs>
<android.app.ContextImpl.20: void <init>()>:<>:<android.app.ContextImpl.20:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.transition.Transition: void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues)>:<static>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.Bitmap: void <init>(long,byte[],int,int,int,boolean,boolean,byte[],android.graphics.NinePatch.InsetStruct)>:<>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.wifi.WifiManager.WifiLock: void acquire()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.PorterDuff: void <init>()>:<public>:<android.graphics.PorterDuff>
<android.filterfw.core.Filter: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.Filter>
<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.filterfw.core.ProgramVariable: java.lang.String getVariableName()>:<public>:<android.filterfw.core.ProgramVariable>
<android.graphics.drawable.RippleBackground: void exitSoftware(int,int,int)>:<private>:<android.graphics.drawable.RippleBackground>
<android.app.LocalActivityManager: void moveToState(android.app.LocalActivityManager.LocalActivityRecord,int)>:<private>:<android.app.LocalActivityManager>
<android.app.backup.IBackupManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)>:<private static>:<android.database.DatabaseUtils>
<android.opengl.GLErrorWrapper: void glBindTexture(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.INotificationManager: void cancelAllNotifications(java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>:<private static>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.LocalSocket: java.lang.String toString()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.net.wifi.WifiConfiguration.Protocol: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Protocol>
<android.app.IProcessObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IProcessObserver.Stub:android.os.Binder,android.app.IProcessObserver>
<android.webkit.WebViewProvider.ViewDelegate: void onMeasure(int,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>:<public>:<android.webkit.WebSettings>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.Class,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.os.RecoverySystem: java.lang.String sanitizeArg(java.lang.String)>:<private static>:<android.os.RecoverySystem>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.AnimatedRotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.print.PrinterDiscoverySession: void finalize()>:<protected final>:<android.print.PrinterDiscoverySession>
<android.graphics.drawable.ShapeDrawable.ShapeState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.ShapeDrawable.ShapeState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pGroup.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pGroup.1:android.os.Parcelable.Creator>
<android.renderscript.Int4: void mul(int)>:<public>:<android.renderscript.Int4>
<android.net.NetworkUtils: java.lang.String trimV4AddrZeros(java.lang.String)>:<public static>:<android.net.NetworkUtils>
<android.graphics.pdf.PdfDocument.PageInfo: int access.100(android.graphics.pdf.PdfDocument.PageInfo)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.webkit.WebViewFactoryProvider.Statics: void clearClientCertPreferences(java.lang.Runnable)>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.transition.Scene: void setExitAction(java.lang.Runnable)>:<public>:<android.transition.Scene>
<android.netdetect.INetDetectService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityManagerProxy: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.LinkQualityInfo: void setPacketErrorCount(long)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.net.Uri: int getPort()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.admin.DevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.drm.DrmManagerClient: void _release(int)>:<private native>:<android.drm.DrmManagerClient>
<android.net.http.Connection: java.lang.String getScheme()>:<abstract>:<android.net.http.Connection>
<android.print.PrinterInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.IActivityManager.ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.app.IActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.CanvasProperty: void <init>(long)>:<private>:<android.graphics.CanvasProperty>
<android.app.IProcessObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IProcessObserver.Stub:android.os.Binder,android.app.IProcessObserver>
<android.net.SamplingDataTracker: long getSampleTimestamp()>:<public>:<android.net.SamplingDataTracker>
<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>:<public>:<android.app.UiAutomation>
<android.app.ActivityThread: android.app.ActivityThread.ActivityClientRecord performResumeActivity(android.os.IBinder,boolean)>:<public final>:<android.app.ActivityThread>
<android.os.IMultiWinService: void updateTaskList(int,int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.database.StaleDataException: void <init>(java.lang.String)>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.MailTo: java.lang.String getSubject()>:<public>:<android.net.MailTo>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.Uri: boolean isAbsolute()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.IConnectivityManager: void releaseNetworkRequest(android.net.NetworkRequest)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.wifi.WifiCHRStateManager: void updateRAT(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.LinearGradient: long nativeCreate2(float,float,float,float,int,int,int)>:<private native>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<android.net.NetworkQuotaInfo: void <init>(android.os.Parcel)>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.print.IWriteResultCallback.Stub: void <init>()>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLErrorWrapper: void glShadeModel(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.drm.DrmOutputStream: void write(int)>:<public>:<android.drm.DrmOutputStream:java.io.OutputStream>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.ContextImpl.14: java.lang.Object createStaticService()>:<public>:<android.app.ContextImpl.14:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void <init>(android.graphics.drawable.VectorDrawable.VectorDrawableState)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.os.INetworkManagementService.Stub.Proxy: void clearDefaultNetId()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.EGL14: void <clinit>()>:<static>:<android.opengl.EGL14>
<android.os.CommonTimeConfig: void setServerDiedListener(android.os.CommonTimeConfig.OnServerDiedListener)>:<public>:<android.os.CommonTimeConfig>
<android.renderscript.Matrix4f: void <init>()>:<public>:<android.renderscript.Matrix4f>
<android.net.wifi.IWifiManager.Stub.Proxy: void startPPPOE(android.net.wifi.PPPOEConfig)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.Parcel: android.os.Bundle readBundle()>:<public final>:<android.os.Parcel>
<android.net.InterfaceConfiguration: void setFlag(java.lang.String)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>:<public static>:<android.webkit.WebIconDatabase>
<android.net.ConnectivityManager: boolean isNetworkSupported(int)>:<public>:<android.net.ConnectivityManager>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.database.CursorWindow: long nativeCreate(java.lang.String,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.backup.IRestoreSession.Stub.Proxy: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.os.Debug: boolean waitingForDebugger()>:<public static>:<android.os.Debug>
<android.app.ActivityThread.ApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.database.sqlite.SQLiteConnection.OperationLog: int newOperationCookieLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.IActivityManager.WaitResult: int describeContents()>:<public>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.FragmentManagerImpl: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.http.CharArrayBuffers: int setLowercaseIndexOf(org.apache.http.util.CharArrayBuffer,int)>:<static>:<android.net.http.CharArrayBuffers>
<android.app.IntentService: void onDestroy()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.DebugFlags: void <init>()>:<public>:<android.webkit.DebugFlags>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Double2: void <init>()>:<public>:<android.renderscript.Double2>
<android.net.wifi.RttManager.ParcelableRttParams.1: void <init>()>:<>:<android.net.wifi.RttManager.ParcelableRttParams.1:android.os.Parcelable.Creator>
<android.os.UEventObserver.UEvent: void <init>(java.lang.String)>:<public>:<android.os.UEventObserver.UEvent>
<android.accessibilityservice.AccessibilityServiceInfo: void appendFlags(java.lang.StringBuilder,int)>:<private static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glNormal3x(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.app.LoadedApk)>:<>:<android.app.ActivityThread>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Instrumentation.ActivityMonitor: int getHits()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.transition.TransitionSet: android.transition.Transition clone()>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.GraphRunner: void stop()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.opengl.GLSurfaceView.GLThread: void requestExitAndWait()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.graphics.drawable.BitmapDrawable.BitmapState: void <init>(android.graphics.Bitmap)>:<>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.INetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.Filter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>:<protected>:<android.filterfw.core.Filter>
<android.net.ConnectivityManager: int checkLteConnectState()>:<public>:<android.net.ConnectivityManager>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Point>
<android.net.wifi.WifiLinkLayerStats: void <clinit>()>:<static>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.transition.Transition: void forceVisibility(int,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.renderscript.Matrix4f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.webkit.WebViewProvider: void freeMemory()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.FragmentManagerImpl: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.INetworkScoreService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.RenderScript: void contextDump()>:<public>:<android.renderscript.RenderScript>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.AnimatedStateListDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.test.PerformanceTestCase.Intermediates: void finishTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.app.WallpaperInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.WallpaperInfo.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: long rsnScriptGroupCreate(long,long[],long[],long[],long[],long[])>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLErrorWrapper: void glFrustumx(int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.OneShotScheduler: void reset()>:<public>:<android.filterfw.core.OneShotScheduler:android.filterfw.core.RoundRobinScheduler,android.filterfw.core.Scheduler>
<android.os.Debug: int getLoadedClassCount()>:<public static>:<android.os.Debug>
<android.app.IWallpaperManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IWallpaperManager.Stub:android.os.Binder,android.app.IWallpaperManager>
<android.net.MobileLinkQualityInfo: int getLteCqi()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.NetworkPolicy: boolean hasCycle()>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.database.sqlite.SQLiteConnection.OperationLog: void logOperation(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.app.AlarmManager: void <init>(android.app.IAlarmManager,android.content.Context)>:<>:<android.app.AlarmManager>
<android.graphics.Rect: boolean contains(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.IActivityManager: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void enforceCanManageCaCerts(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Activity: void convertFromTranslucent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity.NonConfigurationInstances,android.content.res.Configuration,java.lang.String,com.android.internal.app.IVoiceInteractor)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.BitmapDrawable: void updateDstRectAndInsetsIfDirty()>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback: void destroy()>:<public abstract>:<android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.os.IPowerManager: boolean setPowerSaveMode(boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.graphics.pdf.PdfEditor: long nativeOpen(int,long)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.usage.ConfigurationStats: long getLastTimeStamp()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.renderscript.Int3: void sub(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.renderscript.RenderScript: void nContextBindRootScript(long)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityThread.DumpHeapData: void <init>()>:<>:<android.app.ActivityThread.DumpHeapData>
<android.app.WallpaperManager: void forgetLoadedBlurWallpaper()>:<public>:<android.app.WallpaperManager>
<android.transition.TransitionUtils: void <init>()>:<public>:<android.transition.TransitionUtils>
<android.print.PrintJobInfo.1: android.print.PrintJobInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.os.IMultiWinService: int checkAndHandleLaunchOnWhiteListApp(android.content.Intent,android.content.Intent,android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.Uri.PathPart: android.net.Uri.PathPart readFrom(android.os.Parcel)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.LoadedApk: java.lang.String[] getLibrariesFor(java.lang.String)>:<private static>:<android.app.LoadedApk>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>:<public static>:<android.appwidget.AppWidgetManager>
<android.opengl.EGLLogWrapper: void log(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.AppOpsManager.PackageOps.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.AppOpsManager.PackageOps.1:android.os.Parcelable.Creator>
<android.os.Debug: int getGlobalAllocCount()>:<public static>:<android.os.Debug>
<android.accounts.ChooseTypeAndAccountActivity: void <init>()>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.renderscript.Long2: android.renderscript.Long2 mod(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.print.IPrintManager: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.graphics.drawable.ScaleDrawable: void clearMutated()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>:<public abstract>:<android.webkit.WebSettings>
<android.net.nsd.NsdManager: void access.500(android.net.nsd.NsdManager,int)>:<static>:<android.net.nsd.NsdManager>
<android.app.IWallpaperManager.Stub.Proxy: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicWidth()>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.LoaderManager.LoaderCallbacks: void onLoaderReset(android.content.Loader)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.graphics.drawable.RippleDrawable: void tryBackgroundExit()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.MailTo: java.util.Map getHeaders()>:<public>:<android.net.MailTo>
<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfoForNetwork(android.net.Network)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: void setDependencyMet(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.NetworkFactory: void setCapabilityFilter(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Parcel: void writeMapInternal(java.util.Map)>:<>:<android.os.Parcel>
<android.mtp.MtpDatabase: int[] getSupportedPlaybackFormats()>:<private>:<android.mtp.MtpDatabase>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.Fragment: void setArguments(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.accounts.IAccountManager.Stub.Proxy: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.ExitTransitionCoordinator: android.os.Bundle access.1300(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.AnimatedRotateDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.GLFrame: boolean nativeCopyFromGL(android.filterfw.core.GLFrame)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.renderscript.Byte3: void add(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.os.ParcelFileDescriptor: void checkError()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskWrites()>:<public static>:<android.os.StrictMode>
<android.opengl.EGL14: void _nativeClassInit()>:<private static native>:<android.opengl.EGL14>
<android.net.WebAddress: java.lang.String getAuthInfo()>:<public>:<android.net.WebAddress>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.Matrix: boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF)>:<private static native>:<android.graphics.Matrix>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadCanceled(android.content.Loader)>:<public>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.net.NetworkInfo: void setFailover(boolean)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityThread.2: void run()>:<public>:<android.app.ActivityThread.2:java.lang.Runnable>
<android.net.ConnectivityManager: void supplyMessenger(int,android.os.Messenger)>:<public>:<android.net.ConnectivityManager>
<android.app.trust.TrustManager: void reportUnlockAttempt(boolean,int)>:<public>:<android.app.trust.TrustManager>
<android.print.PrinterInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.renderscript.ScriptGroup.Builder: void validateCycle(android.renderscript.ScriptGroup.Node,android.renderscript.ScriptGroup.Node)>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.renderscript.Short4: void setValues(short,short,short,short)>:<public>:<android.renderscript.Short4>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.webkit.WebViewProvider: void setWebChromeClient(android.webkit.WebChromeClient)>:<public abstract>:<android.webkit.WebViewProvider>
<android.database.CursorWindow: boolean nativeSetNumColumns(long,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES10: void glAlphaFunc(int,float)>:<public static native>:<android.opengl.GLES10>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>:<public static>:<android.webkit.CookieManager>
<android.app.LauncherActivity.ActivityAdapter: java.util.ArrayList access.100(android.app.LauncherActivity.ActivityAdapter)>:<static>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.ProgramStore: boolean isColorMaskBlueEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.os.Parcel: void writeArray(java.lang.Object[])>:<public final>:<android.os.Parcel>
<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.webkit.WebViewProvider.ViewDelegate: void onStartTemporaryDetach()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.NetworkCapabilities.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkCapabilities.1:android.os.Parcelable.Creator>
<android.webkit.WebViewProvider: void savePassword(java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLES10: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES10>
<android.app.trust.ITrustListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.trust.ITrustListener.Stub.Proxy:android.app.trust.ITrustListener>
<android.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.BatteryStats.Uid.Proc: int getStarts(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.accessibilityservice.AccessibilityServiceInfo: boolean equals(java.lang.Object)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.net.nsd.INsdManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.nsd.INsdManager.Stub.Proxy:android.net.nsd.INsdManager>
<android.app.ITaskStackListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ITaskStackListener.Stub:android.os.Binder,android.app.ITaskStackListener>
<android.webkit.CacheManager: void <init>()>:<public>:<android.webkit.CacheManager>
<android.app.LoadedApk.ServiceDispatcher.DeathMonitor: void <init>(android.app.LoadedApk.ServiceDispatcher,android.content.ComponentName,android.os.IBinder)>:<>:<android.app.LoadedApk.ServiceDispatcher.DeathMonitor:android.os.IBinder.DeathRecipient>
<android.renderscript.Long2: long get(int)>:<public>:<android.renderscript.Long2>
<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Bundle.1: void <init>()>:<>:<android.os.Bundle.1:android.os.Parcelable.Creator>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.NetworkStats.Entry: void add(android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats.Entry>
<android.drm.DrmManagerClient: int _checkRightsStatus(int,java.lang.String,int)>:<private native>:<android.drm.DrmManagerClient>
<android.net.LinkProperties.1: android.net.LinkProperties createFromParcel(android.os.Parcel)>:<public>:<android.net.LinkProperties.1:android.os.Parcelable.Creator>
<android.transition.PatternPathMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.app.AppOpsManager: void setRestriction(int,int,int,java.lang.String[])>:<public>:<android.app.AppOpsManager>
<android.os.BatteryStats: void dumpHistoryLocked(java.io.PrintWriter,int,long,boolean)>:<private>:<android.os.BatteryStats:android.os.Parcelable>
<android.hsm.HwSystemManager: void <init>()>:<public>:<android.hsm.HwSystemManager>
<android.renderscript.Matrix4f: float[] getArray()>:<public>:<android.renderscript.Matrix4f>
<android.opengl.GLES10: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.IConnectivityManager.Stub.Proxy: boolean prepareVpn(java.lang.String,java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.EnterTransitionCoordinator: boolean allowOverlappingTransitions()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.IPermissionController.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IPermissionController.Stub:android.os.Binder,android.os.IPermissionController>
<android.net.MobileDataStateTracker: android.net.SamplingDataTracker access.900(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.webkit.WebView: void enablePlatformNotifications()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Path: void native_offset(long,float,float)>:<private static native>:<android.graphics.Path>
<android.transition.TranslationAnimationCreator: void <init>()>:<>:<android.transition.TranslationAnimationCreator>
<android.net.http.RequestHandle: java.lang.String KD(java.lang.String,java.lang.String)>:<private>:<android.net.http.RequestHandle>
<android.graphics.drawable.LayerDrawable: void setPaddingMode(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.database.IContentObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.app.ActivityManagerProxy: void killUid(int,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.BatchedScanSettings: boolean isInvalid()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.app.AlarmManager.AlarmClockInfo: int describeContents()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.app.Fragment: boolean getRetainInstance()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,boolean,int)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value[] values()>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.transition.ChangeTransform.3: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.BlendDstFunc getBlendDstFunc()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.app.Fragment: void performResume()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.KernelID getKernelID_bicubic()>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.wifi.HwWifiCHRService: void updateWIFIConfiguraion(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.IPrintSpoolerCallbacks.Stub: android.print.IPrintSpoolerCallbacks asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.os.Handler: void <init>(android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.net.DhcpResults: void <init>()>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Canvas: void setDensity(int)>:<public>:<android.graphics.Canvas>
<android.transition.ChangeText: void setSelection(android.widget.EditText,int,int)>:<private>:<android.transition.ChangeText:android.transition.Transition>
<android.net.NetworkStatsHistory: void <init>(android.net.NetworkStatsHistory,long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.NotificationManager: boolean isSystemConditionProviderEnabled(java.lang.String)>:<public>:<android.app.NotificationManager>
<android.os.StrictMode: void setBlockGuardPolicy(int)>:<private static>:<android.os.StrictMode>
<android.app.JobSchedulerImpl: void cancel(int)>:<public>:<android.app.JobSchedulerImpl:android.app.job.JobScheduler>
<android.graphics.Bitmap: void prepareToDraw()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void addVpnUidRanges(int,android.net.UidRange[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.backup.IBackupManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.backup.IBackupManager.Stub:android.os.Binder,android.app.backup.IBackupManager>
<android.hwcontrol.HwWidgetFactory.HwDialogStub: void showDialogFactory()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwDialogStub>
<android.filterfw.core.GLEnvironment: void initWithNewContext()>:<public>:<android.filterfw.core.GLEnvironment>
<android.net.Uri.PathPart: android.net.Uri.PathPart makeAbsolute(android.net.Uri.PathPart)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.opengl.GLSurfaceView.DefaultContextFactory: void <init>(android.opengl.GLSurfaceView)>:<private>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.ComposePathEffect:android.graphics.PathEffect>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.webkit.WebView.PrivateAccess: boolean super_onHoverEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.drawable.ScaleDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManager.StackInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.os.RecoverySystem: void bootCommand(android.content.Context,java.lang.String[])>:<private static transient>:<android.os.RecoverySystem>
<android.os.Bundle: byte getByte(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.IMultiWinService: void setMultiWinResumed(android.os.IBinder,boolean)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbShortTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext()>:<private>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthMaskEnabled(boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.app.UiAutomation: void throwIfNotConnectedLocked()>:<private>:<android.app.UiAutomation>
<android.os.Binder.1: void <init>(android.os.Binder,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<>:<android.os.Binder.1:java.lang.Thread>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.MobileLinkQualityInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.renderscript.Byte3: android.renderscript.Byte3 mul(android.renderscript.Byte3,byte)>:<public static>:<android.renderscript.Byte3>
<android.print.PrinterCapabilitiesInfo: void writeResolutions(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.NetworkStats: java.lang.String toString()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(int[],int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.BitmapDrawable: boolean hasAntiAlias()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.InputPort: boolean isReady()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.app.ContextImpl: void validateServiceIntent(android.content.Intent)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.net.http.HttpAuthHeader: boolean isProxy()>:<public>:<android.net.http.HttpAuthHeader>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Parcel: void writeStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.net.wifi.ScanSettings: boolean isValid()>:<public>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.NullVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>:<public>:<android.os.NullVibrator:android.os.Vibrator>
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityThread: android.app.Activity startActivityNow(android.app.Activity,java.lang.String,android.content.Intent,android.content.pm.ActivityInfo,android.os.IBinder,android.os.Bundle,android.app.Activity.NonConfigurationInstances)>:<public final>:<android.app.ActivityThread>
<android.app.IInstrumentationWatcher.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IInstrumentationWatcher.Stub.Proxy:android.app.IInstrumentationWatcher>
<android.net.NetworkRequest.Builder: void <init>()>:<public>:<android.net.NetworkRequest.Builder>
<android.renderscript.Float4: android.renderscript.Float4 div(android.renderscript.Float4,float)>:<public static>:<android.renderscript.Float4>
<android.net.MobileDataStateTracker: boolean isProvisioningNetwork()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.Uri.HierarchicalUri: android.net.Uri.Builder buildUpon()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.renderscript.Double4: void <init>(double,double,double,double)>:<public>:<android.renderscript.Double4>
<android.webkit.SslErrorHandler: void <init>()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.os.BatteryStats: void formatTimeMs(java.lang.StringBuilder,long)>:<public static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.BatteryStats: long getBatteryUptime(long)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>:<public>:<android.graphics.PathDashPathEffect:android.graphics.PathEffect>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.FileUtils.1: int compare(java.io.File,java.io.File)>:<public>:<android.os.FileUtils.1:java.util.Comparator>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.ActivityThread: void handleUnstableProviderDied(android.os.IBinder,boolean)>:<final>:<android.app.ActivityThread>
<android.renderscript.Mesh.AllocationBuilder.Entry: void <init>(android.renderscript.Mesh.AllocationBuilder)>:<>:<android.renderscript.Mesh.AllocationBuilder.Entry>
<android.app.ActivityThread.ApplicationThread.1: void run()>:<public>:<android.app.ActivityThread.ApplicationThread.1:java.lang.Runnable>
<android.app.ActivityManager.TaskDescription: int describeContents()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.ActivityManagerProxy: boolean isTopOfTask(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.IMultiWinService.Stub.Proxy: boolean isCloseChangeViewVisible()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.database.MergeCursor.1: void onInvalidated()>:<public>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.renderscript.Element.Builder: android.renderscript.Element create()>:<public>:<android.renderscript.Element.Builder>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.CookieSyncManager: void resetSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.LinkProperties: void clear()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.NetworkStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkStats.1:android.os.Parcelable.Creator>
<android.app.ActivityThread.ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.net.LinkProperties: void setMtu(int)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.EGLSurface: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.filterfw.core.CachedFrameManager: void clearCache()>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.usage.ConfigurationStats: void <init>(android.app.usage.ConfigurationStats)>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.database.sqlite.SQLiteDebug.DbStats: void <init>(java.lang.String,long,long,int,int,int,int)>:<public>:<android.database.sqlite.SQLiteDebug.DbStats>
<android.app.Notification.Builder: android.widget.RemoteViews applyStandardTemplate(int,boolean)>:<private>:<android.app.Notification.Builder>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.os.StrictMode: void noteDiskWrite()>:<public static>:<android.os.StrictMode>
<android.app.MediaRouteActionProvider: boolean onPerformDefaultAction()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.filterfw.core.NativeFrame: boolean getNativeBitmap(android.graphics.Bitmap,int,int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.ParcelFileDescriptor: boolean canDetectErrors()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.wifi.IWifiManager: void pollBatchedScan()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.NetworkStateTracker: java.lang.String getNetworkInterfaceName()>:<public abstract>:<android.net.NetworkStateTracker>
<android.os.CommonTimeConfig: boolean checkDeadServer()>:<private>:<android.os.CommonTimeConfig>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Quad scaled(float,float)>:<public volatile>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.webkit.WebView: void clearView()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.accounts.IAccountManager: void clearPassword(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.print.PrintAttributes.MediaSize: int getHeightMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.renderscript.Int3: void <init>(int)>:<public>:<android.renderscript.Int3>
<android.app.EnterTransitionCoordinator: boolean isReturning()>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.opengl.GLES20: void glHint(int,int)>:<public static native>:<android.opengl.GLES20>
<android.net.LocalSocket: int getReceiveBufferSize()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.backup.FileBackupHelperBase: int writeFile_native(long,java.lang.String,long)>:<private static native>:<android.app.backup.FileBackupHelperBase>
<android.os.BatteryStats.Uid: void noteUserActivityLocked(int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.backup.IFullBackupRestoreObserver: void onRestorePackage(java.lang.String)>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteDatabase: void reopenReadWrite()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.mtp.MtpPropertyList: void <init>(int,int)>:<public>:<android.mtp.MtpPropertyList>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Void)>:<protected>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.app.Activity.ManagedDialog: void <init>()>:<private>:<android.app.Activity.ManagedDialog>
<android.app.DownloadManager: int markRowDeleted(long[])>:<public transient>:<android.app.DownloadManager>
<android.app.Fragment: void setReturnTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.drm.DrmUtils: void <init>()>:<public>:<android.drm.DrmUtils>
<android.os.Parcel: int dataCapacity()>:<public final>:<android.os.Parcel>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOut()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(int,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.os.PowerManager.WakeLock: void setTag(java.lang.String)>:<public>:<android.os.PowerManager.WakeLock>
<android.app.IActivityManager: android.os.IBinder getHomeActivityToken()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Debug.MemoryInfo: int getTotalSwappedOut()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.transition.Fade: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>:<public abstract>:<android.app.IInstrumentationWatcher:android.os.IInterface>
<android.transition.Transition.ArrayListManager: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>:<static>:<android.transition.Transition.ArrayListManager>
<android.graphics.drawable.AnimationDrawable.AnimationState: int[] access.000(android.graphics.drawable.AnimationDrawable.AnimationState)>:<static>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.BackStackRecord: android.transition.Transition getExitTransition(android.app.Fragment,boolean)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.webkit.WebView: boolean pageUp(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.HwWifiCHRService: void assocRejectEvent(int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.IActivityManager: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkRequest.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkRequest.1:android.os.Parcelable.Creator>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceRemoved(java.lang.String)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.StrictMode.8: void <init>()>:<>:<android.os.StrictMode.8:java.lang.ThreadLocal>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: android.renderscript.Type getType()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Paint: void setUnderlineText(boolean)>:<public native>:<android.graphics.Paint>
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>:<public>:<android.graphics.Outline>
<android.graphics.drawable.DrawableContainer: void animate(boolean)>:<>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.transition.TransitionUtils.MatrixEvaluator: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.transition.TransitionUtils.MatrixEvaluator:android.animation.TypeEvaluator>
<android.net.wifi.WpsResult: void <clinit>()>:<static>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.print.IPrintDocumentAdapter.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.filterfw.core.VertexFrame: void setInts(int[])>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.renderscript.Element: android.renderscript.Element I32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.IActivityManager: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.backup.BackupManager: void checkServiceBinder()>:<private static>:<android.app.backup.BackupManager>
<android.emoji.EmojiFactory: int nativeGetAndroidPuaFromVendorSpecificPua(long,int)>:<private native>:<android.emoji.EmojiFactory>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManager.TaskDescription: java.lang.String getLabel()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexEnvf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.Frame: void setData(byte[],int,int)>:<public>:<android.filterfw.core.Frame>
<android.app.ApplicationPackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.IApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.filterfw.core.SerializedFrame: void serializeObjectValue(java.lang.Object)>:<private final>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.app.ListActivity.2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.app.ListActivity.2:android.widget.AdapterView.OnItemClickListener>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteFailed(java.lang.CharSequence,int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.accounts.AccountManagerResponse.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.app.ListFragment: void setSelection(int)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.print.IPrintSpoolerClient.Stub: android.print.IPrintSpoolerClient asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.opengl.GLErrorWrapper: void glRotatex(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManager: void ensureAppTaskThumbnailSizeLocked()>:<private>:<android.app.ActivityManager>
<android.net.http.RequestQueue.ActivePool: void startConnectionThread()>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.renderscript.Long2: void setValues(long,long)>:<public>:<android.renderscript.Long2>
<android.net.NetworkPolicy.1: android.net.NetworkPolicy[] newArray(int)>:<public>:<android.net.NetworkPolicy.1:android.os.Parcelable.Creator>
<android.app.Fragment: void <init>()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.mtp.MtpDatabase: void native_setup()>:<private final native>:<android.mtp.MtpDatabase>
<android.os.INetworkManagementService.Stub.Proxy: void unregisterObserver(android.net.INetworkManagementEventObserver)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.GLErrorWrapper: void glRotatef(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings.ZoomDensity: int getValue()>:<public>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>:<protected abstract>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.net.wifi.BatchedScanResult: void <init>(android.net.wifi.BatchedScanResult)>:<public>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.webkit.WebView: boolean access.701(android.webkit.WebView,int,int,int,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLLogWrapper: int getFogParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ISearchManagerCallback.Stub: void <init>()>:<public>:<android.app.ISearchManagerCallback.Stub:android.os.Binder,android.app.ISearchManagerCallback>
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.nsd.NsdManager.ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.ResolveListener>
<android.os.UpdateLock: boolean isHeld()>:<public>:<android.os.UpdateLock>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.IWifiManager.Stub.Proxy: void enableVerboseLogging(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.Picture.RecordingCanvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.graphics.Picture.RecordingCanvas:android.graphics.Canvas>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize[] values()>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.app.usage.ConfigurationStats: void <init>()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.os.IVibratorService: boolean hasVibrator()>:<public abstract>:<android.os.IVibratorService:android.os.IInterface>
<android.renderscript.Matrix2f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix2f>
<android.transition.Rotate: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Rotate:android.transition.Transition>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.os.IMultiWinService.Stub.Proxy: boolean isRootIntent(android.content.Intent)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.ActivityManager.AppTask: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>:<public>:<android.app.ActivityManager.AppTask>
<android.app.Activity: void makeVisible()>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.IWriteResultCallback: void onWriteFinished(android.print.PageRange[],int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>:<public>:<android.net.http.SslError>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: void exit()>:<public>:<android.net.DhcpStateMachine.WaitBeforeRenewalState:com.android.internal.util.State>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>:<public>:<android.graphics.Interpolator>
<android.print.IPrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public abstract>:<android.print.IPrinterDiscoveryObserver:android.os.IInterface>
<android.renderscript.Allocation: void validateIsInt16()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.CacheManager: boolean cacheDisabled()>:<public static>:<android.webkit.CacheManager>
<android.graphics.Outline: void setOval(int,int,int,int)>:<public>:<android.graphics.Outline>
<android.app.INotificationManager.Stub.Proxy: void setAutomaticZenModeConditions(android.net.Uri[])>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener: void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectAll()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.GLEnvironment: void finalize()>:<protected>:<android.filterfw.core.GLEnvironment>
<android.os.Debug.MemoryInfo: int getTotalPss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.hsm.HwSystemManager.HsmDefImpl: void setOutputFile(android.media.MediaRecorder,long,long)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.app.backup.IFullBackupRestoreObserver: void onEndBackup()>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>:<public abstract>:<android.app.DatePickerDialog.OnDateSetListener>
<android.renderscript.Script.FieldBase: void updateAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.test.PerformanceTestCase: boolean isPerformanceOnly()>:<public abstract>:<android.test.PerformanceTestCase>
<android.os.IBatteryPropertiesListener.Stub: android.os.IBatteryPropertiesListener asInterface(android.os.IBinder)>:<public static>:<android.os.IBatteryPropertiesListener.Stub:android.os.Binder,android.os.IBatteryPropertiesListener>
<android.webkit.WebViewFactoryProvider: android.webkit.GeolocationPermissions getGeolocationPermissions()>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>:<public final>:<android.app.ResourcesManager>
<android.net.ProxyDataTracker: java.lang.Object clone()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLSurfaceView.GLThread: void requestReleaseEglContextLocked()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>:<public>:<android.accounts.AccountManager>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.net.Uri.OpaqueUri: java.lang.String getFragment()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.renderscript.Short4: void <init>(short,short,short,short)>:<public>:<android.renderscript.Short4>
<android.app.trust.TrustManager.2: void handleMessage(android.os.Message)>:<public>:<android.app.trust.TrustManager.2:android.os.Handler>
<android.graphics.LinearGradient: android.graphics.Shader copy()>:<protected>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.graphics.drawable.VectorDrawable: boolean needMirroring()>:<private>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.IActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.net.wifi.ScanResult.InformationElement: void <init>()>:<public>:<android.net.wifi.ScanResult.InformationElement>
<android.os.IMultiWinService: boolean isResumedMultiWin(android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.Debug.InstructionCount: void <init>()>:<public>:<android.os.Debug.InstructionCount>
<android.net.wifi.WifiEnterpriseConfig: java.security.PrivateKey access.202(android.net.wifi.WifiEnterpriseConfig,java.security.PrivateKey)>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.LocalSocketImpl: void access.600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList createSnapshots(android.os.Bundle,java.util.Collection)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.webkit.WebSettings: boolean getSaveFormData()>:<public abstract>:<android.webkit.WebSettings>
<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ApplicationThreadNative:android.os.Binder,android.app.IApplicationThread>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>:<public static>:<android.net.ConnectivityManager>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1:android.os.Parcelable.Creator>
<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.LinkAddress: int scopeForUnicastAddress(java.net.InetAddress)>:<static>:<android.net.LinkAddress:android.os.Parcelable>
<android.graphics.Matrix: void reset()>:<public>:<android.graphics.Matrix>
<android.mtp.MtpDatabase: int[] getSupportedCaptureFormats()>:<private>:<android.mtp.MtpDatabase>
<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkStatsHistory: int estimateResizeBuckets(long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.os.ResultReceiver.MyResultReceiver: void <init>(android.os.ResultReceiver)>:<>:<android.os.ResultReceiver.MyResultReceiver:com.android.internal.os.IResultReceiver.Stub>
<android.accounts.IAccountAuthenticatorResponse: void onRequestContinued()>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.net.http.Headers: void parseHeader(org.apache.http.util.CharArrayBuffer)>:<public>:<android.net.http.Headers>
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.UiModeManager: int getCurrentModeType()>:<public>:<android.app.UiModeManager>
<android.app.ActionBar: void removeTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.app.Notification.Action.Builder: void <init>(android.app.Notification.Action)>:<public>:<android.app.Notification.Action.Builder>
<android.net.LinkQualityInfo: int getTheoreticalTxBandwidth()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.IActivityPendingResult.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IActivityPendingResult.Stub.Proxy:android.app.IActivityPendingResult>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.600(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintAttributes: boolean isPortrait()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.IMultiWinService: boolean isWhitelisted(java.lang.String)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.renderscript.Long2: android.renderscript.Long2 sub(android.renderscript.Long2,long)>:<public static>:<android.renderscript.Long2>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask access.100(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.graphics.BitmapFactory: void <init>()>:<public>:<android.graphics.BitmapFactory>
<android.app.ListActivity.1: void run()>:<public>:<android.app.ListActivity.1:java.lang.Runnable>
<android.net.http.Request: java.lang.String getUri()>:<>:<android.net.http.Request>
<android.opengl.EGLLogWrapper: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>:<public native>:<android.graphics.Paint>
<android.os.IPowerManager.Stub.Proxy: void setStartDreamFromOtherFlag(boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.accounts.ChooseTypeAndAccountActivity.1: void <init>(android.accounts.ChooseTypeAndAccountActivity)>:<>:<android.accounts.ChooseTypeAndAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.net.http.RequestHandle: void processRequest()>:<public>:<android.net.http.RequestHandle>
<android.filterfw.core.NativeBuffer: void <init>(int)>:<public>:<android.filterfw.core.NativeBuffer>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.BatteryProperty.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.BatteryProperty.1:android.os.Parcelable.Creator>
<android.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.app.ActivityManager.TaskThumbnail: int describeContents()>:<public>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.webkit.WebViewProvider: boolean canZoomIn()>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.WifiKey.1: android.net.WifiKey[] newArray(int)>:<public>:<android.net.WifiKey.1:android.os.Parcelable.Creator>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String)>:<private>:<android.opengl.GLSurfaceView.EglHelper>
<android.os.BaseBundle: void putIntArray(java.lang.String,int[])>:<public>:<android.os.BaseBundle>
<android.app.LoadedApk.ServiceDispatcher.InnerConnection: void connected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.LoadedApk.ServiceDispatcher.InnerConnection:android.app.IServiceConnection.Stub,android.os.Binder>
<android.renderscript.RenderScript: long nAllocationCreateTyped(long,int,int,long)>:<>:<android.renderscript.RenderScript>
<android.app.backup.IRestoreObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.drm.DrmUtils: byte[] readBytes(java.io.File)>:<static>:<android.drm.DrmUtils>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void enableNat(java.lang.String,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ContextImpl.17: void <init>()>:<>:<android.app.ContextImpl.17:android.app.ContextImpl.ServiceFetcher>
<android.accounts.AccountManagerResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.app.ActivityThread: void scheduleContextCleanup(android.app.ContextImpl,java.lang.String,java.lang.String)>:<final>:<android.app.ActivityThread>
<android.app.admin.IDevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.database.DatabaseUtils: int cursorPickFillWindowStartPosition(int,int)>:<public static>:<android.database.DatabaseUtils>
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.IEthernetServiceListener.Stub: android.os.IBinder asBinder()>:<public>:<android.net.IEthernetServiceListener.Stub:android.os.Binder,android.net.IEthernetServiceListener>
<android.net.IpConfiguration: boolean equals(java.lang.Object)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.INetworkStatsService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.IHardwareService: void setFlashlightEnabled(boolean)>:<public abstract>:<android.os.IHardwareService:android.os.IInterface>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.renderscript.RenderScript: void nContextSendMessage(int,int[])>:<>:<android.renderscript.RenderScript>
<android.os.INetworkManagementService: void registerNetworkActivityListener(android.os.INetworkActivityListener)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType)>:<public static>:<android.renderscript.RenderScript>
<android.app.FragmentTransaction: android.app.FragmentTransaction hide(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.dhcp.DhcpOfferPacket: void <init>(int,boolean,java.net.InetAddress,java.net.InetAddress,byte[])>:<>:<android.net.dhcp.DhcpOfferPacket:android.net.dhcp.DhcpPacket>
<android.net.LinkProperties: boolean removeStackedLink(java.lang.String)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getBlurWallpaper(android.app.IWallpaperManagerCallback)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.os.CancellationSignal.OnCancelListener: void onCancel()>:<public abstract>:<android.os.CancellationSignal.OnCancelListener>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Interpolator: int getKeyFrameCount()>:<public final>:<android.graphics.Interpolator>
<android.webkit.CookieManager: void <init>()>:<public>:<android.webkit.CookieManager>
<android.net.WebAddress: void <clinit>()>:<static>:<android.net.WebAddress>
<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>:<public abstract>:<android.os.IServiceManager:android.os.IInterface>
<android.transition.ChangeBounds: void setReparent(boolean)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.net.MailTo: java.lang.String getTo()>:<public>:<android.net.MailTo>
<android.graphics.SurfaceTexture: int nativeAttachToGLContext(int)>:<private native>:<android.graphics.SurfaceTexture>
<android.graphics.drawable.Drawable: void <clinit>()>:<static>:<android.graphics.drawable.Drawable>
<android.renderscript.Short4: void copyTo(short[],int)>:<public>:<android.renderscript.Short4>
<android.os.BatteryManager: long queryProperty(int)>:<private>:<android.os.BatteryManager>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.app.backup.RecentsBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.RecentsBackupHelper:android.app.backup.BackupHelper>
<android.transition.Slide: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setPointSpriteEnabled(boolean)>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.os.Handler.MessengerImpl: void <init>(android.os.Handler,android.os.Handler.1)>:<>:<android.os.Handler.MessengerImpl:android.os.IMessenger.Stub>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>:<>:<android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: void nContextDeinitToClient(long)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.WifiInfo: void updatePacketRates(android.net.wifi.WifiLinkLayerStats)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.Notification: boolean isGroupChild()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.netdetect.HwCustNetDetectServiceImpl: boolean access.500(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.app.IActivityManager: int getUidForIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.PPPOEInfo.Status: android.net.wifi.PPPOEInfo.Status[] values()>:<public static>:<android.net.wifi.PPPOEInfo.Status:java.lang.Enum>
<android.graphics.Paint: void setFilterBitmap(boolean)>:<public native>:<android.graphics.Paint>
<android.renderscript.Int3: android.renderscript.Int3 sub(android.renderscript.Int3,int)>:<public static>:<android.renderscript.Int3>
<android.test.InstrumentationTestCase: void tearDown()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.ApplicationPackageManager: boolean isPackageAvailable(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.BatteryStats.LongCounter: long getCountLocked(int)>:<public abstract>:<android.os.BatteryStats.LongCounter>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Activity: void setResult(int,android.content.Intent)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.hwtheme.HwThemeManager: boolean isTargetFamily(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiConnectionStatistics: void <init>()>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.os.UEventObserver: void <init>()>:<public>:<android.os.UEventObserver>
<android.hwtheme.HwThemeManager.IHwThemeManager: void removeIconCache(java.lang.String,java.lang.String,int,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.print.IPrintManager.Stub.Proxy: java.util.List getInstalledPrintServices(int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.renderscript.FileA3D.IndexEntry: void <init>(android.renderscript.RenderScript,int,long,java.lang.String,android.renderscript.FileA3D.EntryType)>:<>:<android.renderscript.FileA3D.IndexEntry>
<android.os.SystemProperties: java.lang.String native_get(java.lang.String)>:<private static native>:<android.os.SystemProperties>
<android.net.DhcpResults.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.DhcpResults.1:android.os.Parcelable.Creator>
<android.app.DialogFragment: void onDestroyView()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.backup.BackupDataInput: int skipEntityData_native(long)>:<private native>:<android.app.backup.BackupDataInput>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.content.res.Resources getResources(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.admin.DevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.WpsInfo: void <init>()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomInPlaceAnimation(android.content.Context,int)>:<public static>:<android.app.ActivityOptions>
<android.app.NativeActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordHistoryLength(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision: boolean splitHorizontal(int,int,int,int)>:<public>:<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.graphics.SurfaceTexture: int nativeGetQueuedCount()>:<private native>:<android.graphics.SurfaceTexture>
<android.graphics.drawable.RippleDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Byte3: void <init>(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.renderscript.RenderScript: void nScriptSetTimeZone(long,byte[])>:<>:<android.renderscript.RenderScript>
<android.app.ActivityOptions: int getAnimationType()>:<public>:<android.app.ActivityOptions>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.GenerateFinalPort: boolean hasDefault()>:<public abstract>:<android.filterfw.core.GenerateFinalPort:java.lang.annotation.Annotation>
<android.filterfw.core.GraphRunner.OnRunnerDoneListener: void onRunnerDone(int)>:<public abstract>:<android.filterfw.core.GraphRunner.OnRunnerDoneListener>
<android.app.FragmentManagerState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.FragmentManagerState.1:android.os.Parcelable.Creator>
<android.hsm.HwMediaPermWrapper: void confirmCameraPermission()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ActivityView: int access.302(android.app.ActivityView,int)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.renderscript.Byte4: void div(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.IUserManager.Stub.Proxy: boolean markGuestForDeletion(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.http.Headers.HeaderCallback: void header(java.lang.String,java.lang.String)>:<public abstract>:<android.net.http.Headers.HeaderCallback>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>:<public>:<android.app.job.JobInfo.Builder>
<android.webkit.WebView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.os.Debug.MemoryInfo.1: android.os.Debug.MemoryInfo[] newArray(int)>:<public>:<android.os.Debug.MemoryInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>:<public>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.net.IConnectivityManager: int checkLteConnectState()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.IActivityController.Stub.Proxy: boolean activityStarting(android.content.Intent,java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])>:<public static transient>:<android.app.ActivityOptions>
<android.graphics.Paint.FontMetrics: void <init>()>:<public>:<android.graphics.Paint.FontMetrics>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Camera: void rotateX(float)>:<public native>:<android.graphics.Camera>
<android.app.IWallpaperManagerCallback.Stub.Proxy: void onBlurWallpaperChanged()>:<public>:<android.app.IWallpaperManagerCallback.Stub.Proxy:android.app.IWallpaperManagerCallback>
<android.app.Fragment: void setExitTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.AnimatedRotateDrawable: void run()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.WifiKey.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.WifiKey.1:android.os.Parcelable.Creator>
<android.os.INetworkManagementService.Stub.Proxy: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.os.BatteryManagerInternal: boolean isPowered(int)>:<public abstract>:<android.os.BatteryManagerInternal>
<android.app.SharedPreferencesImpl: java.util.Map access.402(android.app.SharedPreferencesImpl,java.util.Map)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.renderscript.Int3: void set(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.renderscript.ProgramRaster.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.renderscript.Script: android.renderscript.Script.KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.MessageQueue: void removeMessages(android.os.Handler,int,java.lang.Object)>:<>:<android.os.MessageQueue>
<android.net.wifi.HwInnerWifiManager: boolean getHwMeteredHint(android.content.Context)>:<public abstract>:<android.net.wifi.HwInnerWifiManager>
<android.graphics.Paint.Style: void <clinit>()>:<static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.os.PatternMatcher.1: void <init>()>:<>:<android.os.PatternMatcher.1:android.os.Parcelable.Creator>
<android.app.IStopUserCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IStopUserCallback.Stub.Proxy:android.app.IStopUserCallback>
<android.app.BackStackState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.BackStackState.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.transition.Slide.5: void <init>()>:<>:<android.transition.Slide.5:android.transition.Slide.CalculateSlideHorizontal>
<android.webkit.WebView: boolean access.601(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(android.net.Uri.Part)>:<>:<android.net.Uri.Builder>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.WebSettings.RenderPriority: void <clinit>()>:<static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.drm.DrmInfo: boolean isValid()>:<>:<android.drm.DrmInfo>
<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pProvDiscEvent>
<android.renderscript.RenderScript: void nTypeGetNativeData(long,long[])>:<>:<android.renderscript.RenderScript>
<android.transition.ChangeBounds.5: void set(android.view.View,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.5:android.util.Property>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteConnection: int nativeExecuteForChangedRowCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.INetworkScoreService: boolean clearScores()>:<public abstract>:<android.net.INetworkScoreService:android.os.IInterface>
<android.app.Notification: android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)>:<private static>:<android.app.Notification:android.os.Parcelable>
<android.app.ActivityManager.AppTask: void <init>(android.app.IAppTask)>:<public>:<android.app.ActivityManager.AppTask>
<android.print.PrintJob: boolean isFailed()>:<public>:<android.print.PrintJob>
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.VoiceInteractor.2: void deliverCompleteVoiceResult(com.android.internal.app.IVoiceInteractorRequest,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.app.ContextImpl.38: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.38:android.app.ContextImpl.ServiceFetcher>
<android.transition.Transition: void setMatchOrder(int[])>:<public transient>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.StateListDrawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.Network.2: android.net.Network[] newArray(int)>:<public>:<android.net.Network.2:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.SslError: android.net.http.SslError SslErrorFromChromiumErrorCode(int,android.net.http.SslCertificate,java.lang.String)>:<public static>:<android.net.http.SslError>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double3)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.GradientDrawable.GradientState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.RippleBackground: void cancel()>:<public>:<android.graphics.drawable.RippleBackground>
<android.net.wifi.p2p.WifiP2pGroupList: void remove(java.lang.String)>:<>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.webkit.EventLogTags: void <init>()>:<private>:<android.webkit.EventLogTags>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect access.202(android.graphics.pdf.PdfDocument.PageInfo,android.graphics.Rect)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.RssiCurve: void <init>(int,int,byte[])>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.drm.DrmManagerClient: android.drm.DrmInfoStatus access.100(android.drm.DrmManagerClient,int,android.drm.DrmInfo)>:<static>:<android.drm.DrmManagerClient>
<android.net.NetworkKey.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkKey.1:android.os.Parcelable.Creator>
<android.drm.DrmConvertedStatus: void <init>(int,byte[],int)>:<public>:<android.drm.DrmConvertedStatus>
<android.webkit.FindActionModeCallback: void setWebView(android.webkit.WebView)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.TransitionSet.TransitionSetListener:android.transition.Transition.TransitionListenerAdapter>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.LoaderManager.LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.net.wifi.p2p.WifiP2pInfo: void <init>(android.net.wifi.p2p.WifiP2pInfo)>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Object)>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.app.Notification.MediaStyle: void styleText(android.widget.RemoteViews)>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.app.ApplicationPackageManager: android.os.UserManager getUserManager()>:<>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.IWifiManager.Stub.Proxy: void setSoftapDisassociateSta(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.nsd.INsdManager.Stub: void <init>()>:<public>:<android.net.nsd.INsdManager.Stub:android.os.Binder,android.net.nsd.INsdManager>
<android.app.SharedElementCallback: void <clinit>()>:<static>:<android.app.SharedElementCallback>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.GLWrapper access.600(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.os.IBatteryPropertiesListener: void batteryPropertiesChanged(android.os.BatteryProperties)>:<public abstract>:<android.os.IBatteryPropertiesListener:android.os.IInterface>
<android.os.ConditionVariable: boolean block(long)>:<public>:<android.os.ConditionVariable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>:<public>:<android.app.AlertDialog.Builder>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.GraphEnvironment.GraphHandle>
<android.app.trust.TrustManager: void unregisterTrustListener(android.app.trust.TrustManager.TrustListener)>:<public>:<android.app.trust.TrustManager>
<android.graphics.Path: void native_rLineTo(long,float,float)>:<private static native>:<android.graphics.Path>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: void <init>()>:<>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.FragmentManagerImpl: void dispatchPause()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.backup.RestoreSession.RestoreObserverWrapper: void restoreStarting(int)>:<public>:<android.app.backup.RestoreSession.RestoreObserverWrapper:android.app.backup.IRestoreObserver.Stub,android.os.Binder>
<android.net.wifi.RssiPacketCountInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.IMultiWinService.Stub.Proxy: int getTopAreaLaunchFlag()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.http.RequestHandle: void waitUntilComplete()>:<public>:<android.net.http.RequestHandle>
<android.app.Application.OnProvideAssistDataListener: void onProvideAssistData(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.OnProvideAssistDataListener>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.UiAutomation: int getConnectionId()>:<public>:<android.app.UiAutomation>
<android.net.NetworkQuotaInfo.1: android.net.NetworkQuotaInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkQuotaInfo.1:android.os.Parcelable.Creator>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo native_get_object_info(int)>:<private native>:<android.mtp.MtpDevice>
<android.print.PrintAttributes.Resolution: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Resolution>
<android.renderscript.Int2: void addAt(int,int)>:<public>:<android.renderscript.Int2>
<android.net.LinkQualityInfo: int describeContents()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.Notification.Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>:<private>:<android.app.Notification.Builder>
<android.net.INetworkStatsService: void advisePersistThreshold(long)>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.app.Activity: void onUserLeaveHint()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.TrafficStats: long nativeGetTotalStat(int)>:<private static native>:<android.net.TrafficStats>
<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.net.wifi.IWifiManager: void reconnect()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.job.JobService.JobHandler: void <init>(android.app.job.JobService,android.os.Looper)>:<>:<android.app.job.JobService.JobHandler:android.os.Handler>
<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread.ActivityClientRecord,boolean,boolean)>:<final>:<android.app.ActivityThread>
<android.graphics.Rect: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.graphics.drawable.Ripple: void createPendingHardwareExit(int,int)>:<private>:<android.graphics.drawable.Ripple>
<android.net.wifi.WifiScanner: void configureWifiChange(int,int,int,int,int,android.net.wifi.WifiScanner.BssidInfo[])>:<public>:<android.net.wifi.WifiScanner>
<android.os.IUserManager: android.content.pm.UserInfo getProfileParent(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.os.INetworkManagementService: boolean getIpForwardingEnabled()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>:<public>:<android.app.Instrumentation>
<android.app.job.JobParameters: void <init>(android.os.Parcel,android.app.job.JobParameters.1)>:<>:<android.app.job.JobParameters:android.os.Parcelable>
<android.os.StatFs: int getAvailableBlocks()>:<public>:<android.os.StatFs>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.INonHardwareAcceleratedPackagesManager: boolean hasPackage(java.lang.String)>:<public abstract>:<android.app.INonHardwareAcceleratedPackagesManager:android.os.IInterface>
<android.net.LinkProperties: java.lang.String getDomains()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: android.print.PrintManager.PrintJobStateChangeListener getListener()>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,java.lang.String,byte[],byte[])>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)>:<public static>:<android.net.NetworkPolicyManager>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.backup.RestoreSession.RestoreObserverWrapper.1: void <init>(android.app.backup.RestoreSession.RestoreObserverWrapper,android.os.Looper,android.app.backup.RestoreSession)>:<>:<android.app.backup.RestoreSession.RestoreObserverWrapper.1:android.os.Handler>
<android.app.backup.RestoreSet: void <clinit>()>:<static>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.database.sqlite.SQLiteConnection: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.IMultiWinService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.wifi.WifiCHRStateManager: void setLastNetIdFromUI(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Point: java.lang.String toString()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.app.Notification.Builder: void setBuilderContentView(android.app.Notification,android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.print.IPrintJobStateChangeListener.Stub: android.print.IPrintJobStateChangeListener asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: void saveManagedDialogs(android.os.Bundle)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.BackStackState: int describeContents()>:<public>:<android.app.BackStackState:android.os.Parcelable>
<android.graphics.Paint: int getHinting()>:<public native>:<android.graphics.Paint>
<android.renderscript.Short3: android.renderscript.Short3 sub(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.app.IActivityManager: void activityDestroyed(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Canvas: int save(int)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.NativeFrame: int[] getInts()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.filterfw.core.FilterGraph: void closeFilters(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.FilterGraph>
<android.os.Parcel: void freeBuffer()>:<private>:<android.os.Parcel>
<android.app.backup.RestoreObserver: void restoreStarting(int)>:<public>:<android.app.backup.RestoreObserver>
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.os.SELinux: boolean isSELinuxEnforced()>:<public static final native>:<android.os.SELinux>
<android.net.wifi.WifiCHRStateManager: void updateBlackNum(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Path: boolean isConvex()>:<public>:<android.graphics.Path>
<android.net.NetworkStats: android.net.NetworkStats groupedByIface()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.renderscript.Script.LaunchOptions: int access.000(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.app.ActivityView: void attachToSurfaceWhenReady()>:<private>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.transition.Scene: android.transition.Scene getCurrentScene(android.view.View)>:<static>:<android.transition.Scene>
<android.app.Notification.Style: android.widget.RemoteViews getStandardView(int)>:<protected>:<android.app.Notification.Style>
<android.app.LoadedApk: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)>:<public>:<android.app.LoadedApk>
<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Float4: void <init>(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.net.wifi.IRttManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IRttManager.Stub.Proxy:android.net.wifi.IRttManager>
<android.renderscript.Float3: android.renderscript.Float3 mul(android.renderscript.Float3,float)>:<public static>:<android.renderscript.Float3>
<android.graphics.drawable.Ripple: void exit()>:<public>:<android.graphics.drawable.Ripple>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>:<public>:<android.app.LocalActivityManager>
<android.os.Parcel: void enforceInterface(java.lang.String)>:<public final>:<android.os.Parcel>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.webkit.WebViewProvider.ViewDelegate: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.os.MessageQueue: void finalize()>:<protected>:<android.os.MessageQueue>
<android.webkit.WebBackForwardList: int getCurrentIndex()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.net.wifi.HwWifiCHRService: int getWIFIProStatus()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.opengl.GLLogWrapper: void logLine(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.os.OperationCanceledException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.ClipDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Bitmap: int getGenerationId()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.webkit.WebSyncManager: void startSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.database.sqlite.SQLiteConnectionPool: void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.transition.SidePropagation: int getMaxDistance(android.view.ViewGroup)>:<private>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.NetworkCapabilities.1: android.net.NetworkCapabilities createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkCapabilities.1:android.os.Parcelable.Creator>
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.MobileDataStateTracker: void setInternalDataEnable(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.WifiKey.1: android.net.WifiKey createFromParcel(android.os.Parcel)>:<public>:<android.net.WifiKey.1:android.os.Parcelable.Creator>
<android.app.ApplicationErrorReport.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.FileA3D.EntryType getEntryType()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.webkit.WebViewProvider: void setCertificate(android.net.http.SslCertificate)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.storage.IMountShutdownObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountShutdownObserver.Stub.Proxy:android.os.storage.IMountShutdownObserver>
<android.webkit.WebViewProvider.ViewDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>:<public final>:<android.app.ActivityThread>
<android.app.job.JobInfo.Builder: boolean access.1300(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildAckPacket(int,int,boolean,java.net.InetAddress,java.net.InetAddress,byte[],java.lang.Integer,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.util.List,java.net.InetAddress,java.lang.String)>:<public static>:<android.net.dhcp.DhcpPacket>
<android.os.StrictMode.ThreadPolicy: void <init>(int)>:<private>:<android.os.StrictMode.ThreadPolicy>
<android.graphics.PointF.1: android.graphics.PointF[] newArray(int)>:<public>:<android.graphics.PointF.1:android.os.Parcelable.Creator>
<android.os.INetworkManagementService: void removeNetwork(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.webkit.HttpAuthHandler: void cancel()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.app.ActivityManager.StackInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.filterfw.core.Filter: void clearOutputs()>:<final>:<android.filterfw.core.Filter>
<android.app.SharedPreferencesImpl: void access.100(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl.MemoryCommitResult,java.lang.Runnable)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.Handler.BlockingRunnable: boolean postAndWait(android.os.Handler,long)>:<public>:<android.os.Handler.BlockingRunnable:java.lang.Runnable>
<android.net.wifi.WifiConfiguration.3: android.net.wifi.WifiConfiguration createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiConfiguration.3:android.os.Parcelable.Creator>
<android.app.ActivityManager.TaskThumbnail: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.ThreadPolicy>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean)>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Double2: java.lang.Double dotProduct(android.renderscript.Double2,android.renderscript.Double2)>:<public static>:<android.renderscript.Double2>
<android.app.Fragment.SavedState: int describeContents()>:<public>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.net.nsd.NsdManager: java.lang.Object access.200(android.net.nsd.NsdManager,int)>:<static>:<android.net.nsd.NsdManager>
<android.os.UEventObserver.UEvent: java.lang.String toString()>:<public>:<android.os.UEventObserver.UEvent>
<android.renderscript.Short2: short dotProduct(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.app.ExitTransitionCoordinator.9: void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList)>:<>:<android.app.ExitTransitionCoordinator.9:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.mtp.MtpDevice: void close()>:<public>:<android.mtp.MtpDevice>
<android.graphics.drawable.AnimatedVectorDrawable: void <clinit>()>:<static>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.accounts.AccountManager.3: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String[])>:<>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfosResult(java.util.List,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.filterfw.core.GLFrame: byte[] getNativeData()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.admin.IDevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.print.IPrintDocumentAdapter.Stub: android.print.IPrintDocumentAdapter asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.graphics.Paint: void setDither(boolean)>:<public native>:<android.graphics.Paint>
<android.graphics.drawable.InsetDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintDocumentInfo: int describeContents()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: android.appwidget.AppWidgetHostView.ParcelableSparseArray createFromParcel(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.app.ApplicationPackageManager.ResourceName: boolean equals(java.lang.Object)>:<public>:<android.app.ApplicationPackageManager.ResourceName>
<android.graphics.Paint.Style: android.graphics.Paint.Style[] values()>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.app.trust.ITrustManager.Stub: void <init>()>:<public>:<android.app.trust.ITrustManager.Stub:android.os.Binder,android.app.trust.ITrustManager>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,int,int,java.lang.String,android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1)>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void setZenModeCondition(android.service.notification.Condition)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.wifi.WifiLog.WiFiExceptionType: android.net.wifi.WifiLog.WiFiExceptionType valueOf(java.lang.String)>:<public static>:<android.net.wifi.WifiLog.WiFiExceptionType:java.lang.Enum>
<android.os.BatteryStats: void <init>()>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.hsm.HwSystemManager.HsmInterface: void setOutputFile(android.media.MediaRecorder,long,long)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.os.BaseBundle: void clear()>:<public>:<android.os.BaseBundle>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)>:<public>:<android.renderscript.RenderScript>
<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.UiAutomation: boolean performGlobalAction(int)>:<public final>:<android.app.UiAutomation>
<android.net.http.AndroidHttpClient.2: void <init>(android.net.http.AndroidHttpClient,org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>:<>:<android.net.http.AndroidHttpClient.2:org.apache.http.impl.client.DefaultHttpClient,org.apache.http.impl.client.AbstractHttpClient>
<android.graphics.drawable.ClipDrawable.ClipState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActionBar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.filterfw.core.GenerateProgramPorts: android.filterfw.core.GenerateProgramPort[] value()>:<public abstract>:<android.filterfw.core.GenerateProgramPorts:java.lang.annotation.Annotation>
<android.net.wifi.WifiCHRStateManager: void uploadAssocRejectException(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFormat(int,int)>:<private static>:<android.filterfw.format.PrimitiveFormat>
<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.app.ListFragment: void <init>()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.os.storage.StorageVolume.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.storage.StorageVolume.1:android.os.Parcelable.Creator>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.transition.Slide: void <init>(int)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.net.wifi.IWifiManager: java.util.List getScanResults(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.storage.IMountService.Stub.Proxy: int finalizeSecureContainer(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.accessibilityservice.AccessibilityServiceInfo: void appendPackageNames(java.lang.StringBuilder,java.lang.String[])>:<private static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.BaseBundle: long getLong(java.lang.String,long)>:<public>:<android.os.BaseBundle>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>:<public final>:<android.os.Handler>
<android.graphics.Matrix.1: boolean preRotate(float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.NetworkFactory: void addNetworkRequest(android.net.NetworkRequest,int)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.opengl.GLErrorWrapper: void glDepthMask(boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.INetworkStatsSession.Stub.Proxy: void close()>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.net.NetworkCapabilities: boolean satisfiedByNetCapabilities(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: int nativeGetDbLookaside(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>:<public>:<android.app.WallpaperManager>
<android.app.WallpaperManager.FastBitmapDrawable: void setDither(boolean)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityManagerProxy: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.StrictMode: boolean vmSqliteObjectLeaksEnabled()>:<public static>:<android.os.StrictMode>
<android.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Int4: void <init>(int,int,int,int)>:<public>:<android.renderscript.Int4>
<android.net.Uri: java.lang.String getLastPathSegment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.RenderScript: long rsnFontCreateFromAssetStream(long,java.lang.String,float,int,long)>:<native>:<android.renderscript.RenderScript>
<android.net.DhcpStateMachine.WaitBeforeStartState: void enter()>:<public>:<android.net.DhcpStateMachine.WaitBeforeStartState:com.android.internal.util.State>
<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision: void <init>()>:<private>:<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.app.LoadedApk: java.lang.String getDataDir()>:<public>:<android.app.LoadedApk>
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.net.wifi.HwWifiStatStore: java.util.List getWifiStatModel(java.util.Date)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.net.http.DelegatingSSLSession: java.lang.String getPeerHost()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.filterfw.core.ShaderProgram: boolean setShaderAttributeVertexFrame(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.graphics.Interpolator: void reset(int)>:<public>:<android.graphics.Interpolator>
<android.renderscript.Int4: void setValues(int,int,int,int)>:<public>:<android.renderscript.Int4>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.app.ReceiverRestrictedContext:android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.IWebViewUpdateService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.webkit.IWebViewUpdateService.Stub.Proxy:android.webkit.IWebViewUpdateService>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.os.Parcel: void nativeWriteBlob(long,byte[],int,int)>:<private static native>:<android.os.Parcel>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityService.Callbacks: void init(int,android.os.IBinder)>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.renderscript.Short3: android.renderscript.Short3 sub(android.renderscript.Short3,short)>:<public static>:<android.renderscript.Short3>
<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.graphics.drawable.VectorDrawable.VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.IMultiWinService.Stub: void <init>()>:<public>:<android.os.IMultiWinService.Stub:android.os.Binder,android.os.IMultiWinService>
<android.webkit.WebView: void findAllAsync(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.BatchedScanSettings: void <init>()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.app.ActivityThread.4: void <clinit>()>:<static>:<android.app.ActivityThread.4>
<android.filterfw.core.SyncRunner: void waitUntilWake()>:<protected>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState[] values()>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String getDeviceOwnerName()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Short4: android.renderscript.Short4 mul(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.graphics.RectF: void set(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.app.LoadedApk.WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.graphics.Canvas: void finalizer(long)>:<private static native>:<android.graphics.Canvas>
<android.net.ConnectivityManager: void reportInetCondition(int,int)>:<public>:<android.net.ConnectivityManager>
<android.os.ParcelFileDescriptor.Status: void <init>(int,java.lang.String)>:<public>:<android.os.ParcelFileDescriptor.Status>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.os.Messenger.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.Messenger.1:android.os.Parcelable.Creator>
<android.net.NetworkUtils: boolean stopDhcp(java.lang.String)>:<public static native>:<android.net.NetworkUtils>
<android.opengl.EGLExt: void <init>()>:<public>:<android.opengl.EGLExt>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter access.102(android.filterfw.io.TextGraphReader,android.filterfw.core.Filter)>:<static>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.app.FragmentContainer: android.view.View findViewById(int)>:<public abstract>:<android.app.FragmentContainer>
<android.net.wifi.WifiNetworkConnectionStatistics.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiNetworkConnectionStatistics.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager.7: void doWork()>:<public>:<android.accounts.AccountManager.7:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.SharedPreferencesImpl: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.wifi.IWifiManager.Stub.Proxy: android.os.Messenger getWifiServiceMessenger()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,android.renderscript.Allocation,int,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>:<public final>:<android.app.ActivityThread>
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.NetworkScorerAppManager: void <clinit>()>:<static>:<android.net.NetworkScorerAppManager>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void dump(android.util.Printer)>:<public>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.app.INotificationManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.INotificationManager.Stub:android.os.Binder,android.app.INotificationManager>
<android.graphics.drawable.AnimatedRotateDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: void <init>()>:<private>:<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback:android.transition.Transition.EpicenterCallback>
<android.os.AsyncTask.WorkerRunnable: void <init>(android.os.AsyncTask.1)>:<>:<android.os.AsyncTask.WorkerRunnable:java.util.concurrent.Callable>
<android.graphics.Path: void close()>:<public>:<android.graphics.Path>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glClear(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.AnimatedRotateDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.transition.TransitionSet: void capturePropagationValues(android.transition.TransitionValues)>:<>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.dhcp.DhcpPacket: int getTransactionId()>:<public>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Instrumentation: void startAllocCounting()>:<public>:<android.app.Instrumentation>
<android.graphics.Atlas.SlicePolicy: android.graphics.Atlas.Entry pack(int,int,android.graphics.Atlas.Entry)>:<>:<android.graphics.Atlas.SlicePolicy:android.graphics.Atlas.Policy>
<android.net.wifi.IWifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.LocalActivityManager.LocalActivityRecord: void <init>(java.lang.String,android.content.Intent)>:<>:<android.app.LocalActivityManager.LocalActivityRecord:android.os.Binder>
<android.app.SearchDialog: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.hsm.MediaTransactWrapper: void <clinit>()>:<static>:<android.hsm.MediaTransactWrapper>
<android.database.IContentObserver.Stub: android.database.IContentObserver asInterface(android.os.IBinder)>:<public static>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.transition.ArcMotion: float toTangent(float)>:<private static>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.renderscript.RenderScript: long nContextCreateGL(long,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>:<>:<android.renderscript.RenderScript>
<android.opengl.GLLogWrapper: void glPixelStorei(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.ShaderProgram: boolean setShaderDrawMode(int)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.SearchableInfo: int describeContents()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Type: android.renderscript.Element getElement()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.drawable.VectorDrawable.VPathRenderer: int getRootAlpha()>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.transition.Transition.AnimationInfo: void <init>(android.view.View,java.lang.String,android.transition.Transition,android.view.WindowId,android.transition.TransitionValues)>:<>:<android.transition.Transition.AnimationInfo>
<android.os.BatteryStats.Uid: int getUid()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.os.Parcel: android.util.Size readSize()>:<public final>:<android.os.Parcel>
<android.renderscript.RenderScript: int rsnMeshGetVertexBufferCount(long,long)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.RegistrantList: void add(android.os.Handler,int,java.lang.Object)>:<public>:<android.os.RegistrantList>
<android.app.ContextImpl: java.io.File getDatabasesDir()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.net.wifi.HwWifiCHRService: android.net.wifi.HwWifiCHRService getInstance()>:<public static>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.net.dhcp.DhcpAckPacket: int getInt(java.lang.Integer)>:<private static final>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.MemoryFile: int access.200(android.os.MemoryFile)>:<static>:<android.os.MemoryFile>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes build()>:<public>:<android.print.PrintAttributes.Builder>
<android.net.DhcpStateMachine: void access.1400(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.os.RemoteCallback: int hashCode()>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.app.IActivityManager: void stopLockTaskMode()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.filterfw.core.NativeBuffer: int size()>:<public>:<android.filterfw.core.NativeBuffer>
<android.net.wifi.HwWifiStatStore: void setAPSSID(java.lang.String)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.drm.DrmManagerClient: int getErrorType(int)>:<private>:<android.drm.DrmManagerClient>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Quad scaled(float)>:<public volatile>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.app.LoadedApk.ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.filterfw.core.Filter: void delayNextProcess(int)>:<protected>:<android.filterfw.core.Filter>
<android.net.EthernetManager: android.net.IpConfiguration getConfiguration()>:<public>:<android.net.EthernetManager>
<android.net.wifi.p2p.WifiP2pWfdInfo.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pWfdInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.database.Cursor: int getColumnIndex(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.LargeBitmap: void recycle()>:<public>:<android.graphics.LargeBitmap>
<android.net.SamplingDataTracker.SamplingSnapshot: void <init>()>:<public>:<android.net.SamplingDataTracker.SamplingSnapshot>
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl.LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<private>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.os.Parcel: void writeMap(java.util.Map)>:<public final>:<android.os.Parcel>
<android.net.wifi.WpsInfo: int describeContents()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.net.wifi.DummyHwInnerWifiManager: java.lang.String getWpaSuppConfig()>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>:<public static>:<android.net.http.CertificateChainValidator>
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.app.ContextImpl.1: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.1:android.app.ContextImpl.ServiceFetcher>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>:<public>:<android.appwidget.AppWidgetManager>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentConstantIndex()>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.app.AppImportanceMonitor.2: void handleMessage(android.os.Message)>:<public>:<android.app.AppImportanceMonitor.2:android.os.Handler>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode[] values()>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.app.LoadedApk: boolean isSecurityViolation()>:<public>:<android.app.LoadedApk>
<android.graphics.Matrix: void native_setScale(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk setLayoutParameter(android.view.View,android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)>:<public>:<android.os.PerformanceCollector>
<android.graphics.Canvas: void native_drawColor(long,int,int)>:<private static native>:<android.graphics.Canvas>
<android.net.wifi.WifiManager.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.net.wifi.WifiManager.ServiceHandler:android.os.Handler>
<android.webkit.WebView: int access.1800(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.drawable.RippleBackground: android.graphics.Paint getTempPaint(android.graphics.Paint)>:<private>:<android.graphics.drawable.RippleBackground>
<android.os.IPowerManager: boolean isInteractive()>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection.PreparedStatement acquirePreparedStatement(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>:<public final>:<android.os.Parcel>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>:<public>:<android.graphics.Paint>
<android.os.Process: void setThreadPriority(int,int)>:<public static final native>:<android.os.Process>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice remove(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicColorMatrix: void setRGBtoYUV()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.IUserManager: int getUserSerialNumber(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.net.wifi.ScanResult.1: android.net.wifi.ScanResult createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.ScanResult.1:android.os.Parcelable.Creator>
<android.graphics.Paint: void setFlags(int)>:<public native>:<android.graphics.Paint>
<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.app.admin.DevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.Drawable>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String)>:<private>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.UiModeManager: void enableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>:<public>:<android.accounts.AccountManager>
<android.filterfw.io.TextGraphReader: void bindExternal(java.lang.String)>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.os.Binder: boolean pingBinder()>:<public>:<android.os.Binder:android.os.IBinder>
<android.drm.DrmManagerClient: android.drm.DrmManagerClient.OnEventListener access.500(android.drm.DrmManagerClient)>:<static>:<android.drm.DrmManagerClient>
<android.graphics.BitmapRegionDecoder: void checkRecycled(java.lang.String)>:<private>:<android.graphics.BitmapRegionDecoder>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.Activity: void setTitle(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.accounts.IAccountManager.Stub.Proxy: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.Bundle: short[] getShortArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.accounts.AccountManager.BaseFutureTask: void access.700(android.accounts.AccountManager.BaseFutureTask,java.lang.Object)>:<static>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void uninstallCaCert(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.Process.ZygoteState: android.os.Process.ZygoteState connect(java.lang.String)>:<public static>:<android.os.Process.ZygoteState>
<android.net.wifi.BatchedScanSettings.1: android.net.wifi.BatchedScanSettings createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.BatchedScanSettings.1:android.os.Parcelable.Creator>
<android.app.UiAutomationConnection: boolean setRotation(int)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.app.Notification.Builder: android.app.Notification.Builder setAutoCancel(boolean)>:<public>:<android.app.Notification.Builder>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Canvas: int native_getWidth(long)>:<private static native>:<android.graphics.Canvas>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.filterfw.core.NativeFrame: int getNativeCapacity()>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.ISearchManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.ISearchManager.Stub:android.os.Binder,android.app.ISearchManager>
<android.os.Debug: java.lang.String getCurrentInfo()>:<public static final native>:<android.os.Debug>
<android.os.storage.IObbActionListener.Stub: android.os.IBinder asBinder()>:<public>:<android.os.storage.IObbActionListener.Stub:android.os.Binder,android.os.storage.IObbActionListener>
<android.graphics.drawable.ShapeDrawable: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onCancelPrintJobResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.graphics.Bitmap: void nativeSetHasMipMap(long,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.LoadedApk.ReceiverDispatcher.Args: void run()>:<public>:<android.app.LoadedApk.ReceiverDispatcher.Args:android.content.BroadcastReceiver.PendingResult,java.lang.Runnable>
<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkCapabilities: java.lang.String toString()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.ActivityManager.StackInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.StackInfo.1:android.os.Parcelable.Creator>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void kill(java.lang.String)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.graphics.Canvas: void <init>(long)>:<public>:<android.graphics.Canvas>
<android.app.Notification: int describeContents()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffXfermode:android.graphics.Xfermode>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.alsa.LineTokenizer: int nextDelimiter(java.lang.String,int)>:<>:<android.alsa.LineTokenizer>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.database.AbstractWindowedCursor: short getShort(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.IConnectivityManager: android.net.ProxyInfo getGlobalProxy()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.IpPrefix: void <init>(java.lang.String)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Region: boolean isComplex()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>:<public static>:<android.os.AsyncResult>
<android.os.StrictMode.2: java.util.ArrayList initialValue()>:<protected>:<android.os.StrictMode.2:java.lang.ThreadLocal>
<android.webkit.FindActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.Activity: boolean isImmersive()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.INotificationManager: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.os.IMultiWinService.Stub.Proxy: int getRootMWFlag()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.WallpaperManager: java.io.InputStream openDefaultWallpaper(android.content.Context)>:<public static>:<android.app.WallpaperManager>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>:<public abstract>:<android.os.Handler.Callback>
<android.accounts.IAccountManager: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.print.PrintJobInfo: int getAdvancedIntOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.SerializedFrame: void releaseNativeAllocation()>:<protected>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.net.wifi.WifiManager: boolean pingSupplicant()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.StrictMode.InstanceCountViolation: void <init>(java.lang.Class,long,int)>:<public>:<android.os.StrictMode.InstanceCountViolation:java.lang.Throwable>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.webkit.WebViewProvider: void requestFocusNodeHref(android.os.Message)>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onStartBackup()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.app.BackStackRecord: android.util.ArrayMap mapSharedElementsIn(android.app.BackStackRecord.TransitionState,boolean,android.app.Fragment)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.job.IJobCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobCallback.Stub:android.os.Binder,android.app.job.IJobCallback>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.RadialGradient: android.graphics.Shader copy()>:<protected>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.net.wifi.IWifiManager: void disconnect()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.nsd.NsdManager: com.android.internal.util.AsyncChannel access.000(android.net.nsd.NsdManager)>:<static>:<android.net.nsd.NsdManager>
<android.filterfw.core.ProgramVariable: java.lang.Object getValue()>:<public>:<android.filterfw.core.ProgramVariable>
<android.ddm.DdmHandleThread: void register()>:<public static>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.Application: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.PackageInstallObserver: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.PackageInstallObserver>
<android.webkit.WebViewClient.1: void onDismiss(android.content.DialogInterface)>:<public>:<android.webkit.WebViewClient.1:android.content.DialogInterface.OnDismissListener>
<android.accessibilityservice.AccessibilityServiceInfo: void <clinit>()>:<static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.BaseBundle: char getChar(java.lang.String)>:<>:<android.os.BaseBundle>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.database.sqlite.SQLiteDatabase: void throwIfNotOpenLocked()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>()>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.DhcpStateMachine.DefaultState: boolean processMessage(android.os.Message)>:<public>:<android.net.DhcpStateMachine.DefaultState:com.android.internal.util.State>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList copyMappedViews()>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.database.sqlite.SQLiteStatement: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])>:<>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.RenderScriptGL: void bindProgramStore(android.renderscript.ProgramStore)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: void setPositiveButton(android.app.AlertDialog.Builder,android.app.AlertDialog)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.graphics.Matrix: void native_postTranslate(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.net.wifi.IWifiManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.wifi.IWifiManager.Stub:android.os.Binder,android.net.wifi.IWifiManager>
<android.net.dhcp.DhcpDeclinePacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpDeclinePacket:android.net.dhcp.DhcpPacket>
<android.app.IUiAutomationConnection: boolean clearWindowContentFrameStats(int)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.net.NetworkStatsHistory: void removeBucketsBefore(long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.app.backup.RestoreDescription: void <clinit>()>:<static>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.app.Notification.Builder: android.widget.RemoteViews makeTickerView()>:<private>:<android.app.Notification.Builder>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.RenderScript: long safeID(android.renderscript.BaseObj)>:<>:<android.renderscript.RenderScript>
<android.graphics.Outline: void setAlpha(float)>:<public>:<android.graphics.Outline>
<android.database.ContentObserver.NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver.NotificationRunnable:java.lang.Runnable>
<android.graphics.Camera: float getLocationX()>:<public native>:<android.graphics.Camera>
<android.graphics.ColorMatrix: float[] getArray()>:<public final>:<android.graphics.ColorMatrix>
<android.transition.Transition: java.util.List getTargetTypes()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager.ActionListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected volatile>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.net.wifi.IWifiManager: int getAllowScansWithTraffic()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.backup.BackupDataInput: void dtor(long)>:<private static native>:<android.app.backup.BackupDataInput>
<android.os.CommonClock: android.os.CommonClock create()>:<public static>:<android.os.CommonClock>
<android.opengl.GLLogWrapper: void begin(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glEndTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.IWebViewUpdateService: void waitForRelroCreationCompleted(boolean)>:<public abstract>:<android.webkit.IWebViewUpdateService:android.os.IInterface>
<android.app.FragmentTransaction: boolean isAddToBackStackAllowed()>:<public abstract>:<android.app.FragmentTransaction>
<android.R.color: void <init>()>:<public>:<android.R.color>
<android.app.IActivityManager: void moveTaskToBack(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.net.wifi.RttManager.ParcelableRttParams.1: android.net.wifi.RttManager.ParcelableRttParams createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.RttManager.ParcelableRttParams.1:android.os.Parcelable.Creator>
<android.print.PrintAttributes: void setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.os.Handler: void <init>(boolean)>:<public>:<android.os.Handler>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityTransitionCoordinator: void hideViews(java.util.ArrayList)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.Activity: void finishAfterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh create(boolean)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.net.wifi.WifiScanner.ParcelableScanResults: int describeContents()>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults:android.os.Parcelable>
<android.renderscript.RSTextureView: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.webkit.EventLogTags: void writeBrowserZoomLevelChange(int,int,long)>:<public static>:<android.webkit.EventLogTags>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onSuccess()>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ActionListener>
<android.app.IUiAutomationConnection: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.net.IConnectivityManager.Stub.Proxy: int getLastTetherError(java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.opengl.EGLLogWrapper: void begin(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.DhcpStateMachine: com.android.internal.util.State access.600(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.renderscript.RenderScript: void nContextBindSampler(int,int)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.ShaderProgram: java.lang.Object getUniformValue(java.lang.String)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.graphics.Matrix: void native_preScale(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.IMultiWinService.Stub.Proxy: void clearMultiWinTaskList()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Byte2: void negate()>:<public>:<android.renderscript.Byte2>
<android.database.sqlite.SQLiteStatement: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.VectorDrawable.VGroup: float getScaleX()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.graphics.drawable.RotateDrawable: int getAlpha()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.AbstractCursor: long getLong(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.webkit.WebViewFactory: void <clinit>()>:<static>:<android.webkit.WebViewFactory>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>:<public static>:<android.os.Debug>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: void nAllocationIoSend(long)>:<>:<android.renderscript.RenderScript>
<android.app.ContextImpl.15: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.15:android.app.ContextImpl.ServiceFetcher>
<android.app.Notification.Builder: android.app.Notification.Builder setStyle(android.app.Notification.Style)>:<public>:<android.app.Notification.Builder>
<android.renderscript.RenderScript: void rsnScriptGroupSetInput(long,long,long,long)>:<native>:<android.renderscript.RenderScript>
<android.mtp.MtpDatabase: android.mtp.MtpPropertyList getObjectPropertyList(long,int,long,int,int)>:<private>:<android.mtp.MtpDatabase>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStarted(java.lang.String)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.net.NetworkStatsHistory: long randomLong(java.util.Random,long,long)>:<public static>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.os.DropBoxManager.Entry.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.DropBoxManager.Entry.1:android.os.Parcelable.Creator>
<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.net.InetAddress,int)>:<public>:<android.net.VpnService.Builder>
<android.net.LocalSocketImpl: java.lang.Object getOption(int)>:<public>:<android.net.LocalSocketImpl>
<android.net.LinkAddress: void <init>(java.net.InterfaceAddress)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStoragePublicDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.renderscript.Double2: void setAt(int,double)>:<public>:<android.renderscript.Double2>
<android.renderscript.BaseObj: void finalize()>:<protected>:<android.renderscript.BaseObj>
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.graphics.Point: void <init>(int,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>:<public>:<android.net.Network:android.os.Parcelable>
<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>:<public abstract>:<android.os.IServiceManager:android.os.IInterface>
<android.net.NetworkFactory: void log(java.lang.String)>:<protected>:<android.net.NetworkFactory:android.os.Handler>
<android.accessibilityservice.AccessibilityService: boolean onKeyEvent(android.view.KeyEvent)>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.VectorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityManagerProxy: void resizeStack(int,android.graphics.Rect)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.DelegatingSSLSession: javax.net.ssl.SSLSessionContext getSessionContext()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.net.wifi.WifiCHRStateManager: int getBluetoothConnectionState()>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.os.PowerManager: void <init>(android.content.Context,android.os.IPowerManager,android.os.Handler)>:<public>:<android.os.PowerManager>
<android.app.SearchableInfo: boolean useBadgeLabel()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.transition.ChangeScroll: void <init>()>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.app.ActivityThread.ApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.print.PrintDocumentInfo.1: android.print.PrintDocumentInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.app.backup.IBackupManager.Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>:<public static>:<android.app.backup.IBackupManager.Stub:android.os.Binder,android.app.backup.IBackupManager>
<android.webkit.WebView: void enableSlowWholeDocumentDraw()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.ColorMatrixColorFilter: void setColorMatrix(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.webkit.WebViewProvider: void clearMatches()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.IUserManager: boolean hasRestrictionsChallenge()>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ListFragment.2: void <init>(android.app.ListFragment)>:<>:<android.app.ListFragment.2:android.widget.AdapterView.OnItemClickListener>
<android.print.PrintJobId: void <init>(java.lang.String)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void requestZenModeConditions(android.service.notification.IConditionListener,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.os.UserManager: java.lang.String getUserName()>:<public>:<android.os.UserManager>
<android.net.wifi.RttManager.ParcelableRttResults: void <init>(android.net.wifi.RttManager.RttResult[])>:<public>:<android.net.wifi.RttManager.ParcelableRttResults:android.os.Parcelable>
<android.opengl.GLSurfaceView.ComponentSizeChooser: void <init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.os.Binder: void <init>()>:<public>:<android.os.Binder:android.os.IBinder>
<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.SSLCertificateSocketFactory.1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>:<public>:<android.net.SSLCertificateSocketFactory.1:javax.net.ssl.X509TrustManager>
<android.net.LinkProperties: boolean isIdenticalAddresses(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.StrictMode: void noteDiskRead()>:<public static>:<android.os.StrictMode>
<android.app.LoadedApk: void <clinit>()>:<static>:<android.app.LoadedApk>
<android.graphics.drawable.RippleDrawable: void drawMask(android.graphics.Canvas)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.wifi.WifiActivityEnergyInfo: long getTimeStamp()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.os.CountDownTimer: void <init>(long,long)>:<public>:<android.os.CountDownTimer>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster.CullMode getCullMode()>:<public>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.net.DhcpInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.DhcpInfo.1:android.os.Parcelable.Creator>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>:<public>:<android.graphics.ColorMatrix>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.Activity: int getTaskId()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageHeight()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition)>:<private static>:<android.transition.TransitionManager>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutCanceled(int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.print.PrinterCapabilitiesInfo: int access.400(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.NativeActivity: void onStop()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.ApplicationPackageManager.ResourceName: void <init>(android.content.pm.ResolveInfo,int)>:<>:<android.app.ApplicationPackageManager.ResourceName>
<android.webkit.HwFindActionModeCallback.HwNoAction: void onDestroyActionMode(android.view.ActionMode)>:<public>:<android.webkit.HwFindActionModeCallback.HwNoAction:android.view.ActionMode.Callback>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager.DiscoveryListener)>:<public>:<android.net.nsd.NsdManager>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.pdf.PdfDocument: void nativeFinishPage(long)>:<private native>:<android.graphics.pdf.PdfDocument>
<android.net.http.AndroidHttpClientConnection: boolean isOpen()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)>:<private>:<android.net.http.Connection>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Double4: double dotProduct(android.renderscript.Double4,android.renderscript.Double4)>:<public static>:<android.renderscript.Double4>
<android.hwtheme.HwThemeManager: boolean isTRingtones(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.StatFs: long getBlockSizeLong()>:<public>:<android.os.StatFs>
<android.filterfw.core.FilterGraph: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.FilterGraph>
<android.renderscript.Long2: void mod(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.PowerManager.WakeLock: void finalize()>:<protected>:<android.os.PowerManager.WakeLock>
<android.ddm.DdmHandleProfiling: void connected()>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.Parcel: void readCharArray(char[])>:<public final>:<android.os.Parcel>
<android.os.BatteryManager: long getLongProperty(int)>:<public>:<android.os.BatteryManager>
<android.os.StrictMode.3: android.os.Handler initialValue()>:<protected>:<android.os.StrictMode.3:java.lang.ThreadLocal>
<android.net.wifi.p2p.WifiP2pDevice: boolean isServiceDiscoveryCapable()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isTRingtones(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.renderscript.ProgramStore: boolean isColorMaskAlphaEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.net.SamplingDataTracker: long getSampledPacketErrorCount()>:<public>:<android.net.SamplingDataTracker>
<android.os.WorkSource.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.WorkSource.1:android.os.Parcelable.Creator>
<android.database.CursorWindow: void dispose()>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.backup.IFullBackupRestoreObserver: void onBackupPackage(java.lang.String)>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.DatePickerDialog.1: void <init>(android.app.DatePickerDialog)>:<>:<android.app.DatePickerDialog.1:android.widget.DatePicker.ValidationCallback>
<android.net.INetworkStatsSession.Stub: void <init>()>:<public>:<android.net.INetworkStatsSession.Stub:android.os.Binder,android.net.INetworkStatsSession>
<android.net.wifi.IWifiManager: boolean isBatchedScanSupported()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.BaseBundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>:<>:<android.os.BaseBundle>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable.LayerState)>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.IpConfiguration.1: android.net.IpConfiguration[] newArray(int)>:<public>:<android.net.IpConfiguration.1:android.os.Parcelable.Creator>
<android.renderscript.Script: void setTimeZone(java.lang.String)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.LocalServerSocket: void close()>:<public>:<android.net.LocalServerSocket>
<android.os.Build: void <init>()>:<public>:<android.os.Build>
<android.app.WallpaperManager: void <init>(android.content.Context,android.os.Handler)>:<public>:<android.app.WallpaperManager>
<android.net.http.Request: void handleSslErrorResponse(boolean)>:<public>:<android.net.http.Request>
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.database.DataSetObservable: void <init>()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.print.PrinterCapabilitiesInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hwtheme.HwThemeManager: boolean installHwTheme(java.lang.String,boolean)>:<public static>:<android.hwtheme.HwThemeManager>
<android.os.IUserManager.Stub.Proxy: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityThread: boolean isProfiling()>:<public>:<android.app.ActivityThread>
<android.os.storage.IMountService.Stub.Proxy: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.backup.IBackupManager.Stub.Proxy: void setBackupProvisioned(boolean)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.backup.BackupAgent: android.os.Handler getHandler()>:<>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.webkit.JsResult: void confirm()>:<public final>:<android.webkit.JsResult>
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.print.PrintAttributes.Resolution: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Resolution>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setYuvFormat(int)>:<public>:<android.renderscript.Type.Builder>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canReverse()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.IUiAutomationConnection: boolean setRotation(int)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.app.ActivityThread: java.lang.String currentProcessName()>:<public static>:<android.app.ActivityThread>
<android.opengl.GLLogWrapper: void glFogfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.NetworkPolicy: int hashCode()>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>:<public static>:<android.app.Instrumentation>
<android.filterfw.io.TextGraphReader.InitFilterCommand: void execute(android.filterfw.io.TextGraphReader)>:<public>:<android.filterfw.io.TextGraphReader.InitFilterCommand:android.filterfw.io.TextGraphReader.Command>
<android.net.IConnectivityManager.Stub.Proxy: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.os.MessageQueue: void removeCallbacksAndMessages(android.os.Handler,java.lang.Object)>:<>:<android.os.MessageQueue>
<android.mtp.MtpPropertyGroup: android.mtp.MtpPropertyList getPropertyList(int,int,int)>:<>:<android.mtp.MtpPropertyGroup>
<android.renderscript.Float3: void negate()>:<public>:<android.renderscript.Float3>
<android.net.LinkQualityInfo: void initializeFromParcel(android.os.Parcel)>:<protected>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.alsa.AlsaDevicesParser: boolean access.102(android.alsa.AlsaDevicesParser,boolean)>:<static>:<android.alsa.AlsaDevicesParser>
<android.alsa.AlsaDevicesParser.AlsaDeviceRecord: void <init>(android.alsa.AlsaDevicesParser)>:<public>:<android.alsa.AlsaDevicesParser.AlsaDeviceRecord>
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])>:<static>:<android.app.DownloadManager>
<android.webkit.WebViewFragment: void onDestroyView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.app.ActivityManagerProxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.IHDMIConnectService: void setDisplayCode(int)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.os.StatFs: long getAvailableBlocksLong()>:<public>:<android.os.StatFs>
<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.hwcontrol.HwWidgetFactory: android.view.View getHwOverflowMenuButton(android.content.Context,android.widget.ActionMenuPresenter)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.net.MailTo: void <init>()>:<private>:<android.net.MailTo>
<android.database.sqlite.SQLiteConnection: void open()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.print.PrintManager: java.util.List getEnabledPrintServices()>:<public>:<android.print.PrintManager>
<android.graphics.Bitmap.2: void <clinit>()>:<static>:<android.graphics.Bitmap.2>
<android.graphics.drawable.RippleBackground: void setOuterOpacity(float)>:<public>:<android.graphics.drawable.RippleBackground>
<android.accounts.AccountManager.BaseFutureTask.1: java.lang.Object call()>:<public>:<android.accounts.AccountManager.BaseFutureTask.1:java.util.concurrent.Callable>
<android.net.wifi.RssiPacketCountInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.RssiPacketCountInfo.1:android.os.Parcelable.Creator>
<android.transition.Explode: float calculateDistance(float,float)>:<private static>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.graphics.pdf.PdfDocument: long nativeCreateDocument()>:<private native>:<android.graphics.pdf.PdfDocument>
<android.graphics.drawable.AnimatedStateListDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ContextImpl.18: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.18:android.app.ContextImpl.ServiceFetcher>
<android.accounts.IAccountAuthenticatorResponse.Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.app.SharedPreferencesImpl: void setMode(int)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.VoiceInteractor: void <init>(com.android.internal.app.IVoiceInteractor,android.content.Context,android.app.Activity,android.os.Looper)>:<>:<android.app.VoiceInteractor>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.IUserManager: android.graphics.Bitmap getUserIcon(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.filterfw.core.Frame: long getTimestamp()>:<public>:<android.filterfw.core.Frame>
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)>:<public>:<android.drm.DrmManagerClient>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addAction(android.app.Notification.Action)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.PendingIntent: void <clinit>()>:<static>:<android.app.PendingIntent:android.os.Parcelable>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Short3: short dotProduct(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.net.Uri,int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.renderscript.FieldPacker: android.renderscript.Matrix3f subMatrix3f()>:<public>:<android.renderscript.FieldPacker>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void removeActiveAdmin(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setColorModes(int,int)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.database.sqlite.SQLiteConnection: int getConnectionId()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: java.lang.String toString(int,float[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.mtp.MtpServer: void <clinit>()>:<static>:<android.mtp.MtpServer:java.lang.Runnable>
<android.database.MatrixCursor: boolean isNull(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.ExitTransitionCoordinator: void finish()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.Paint: int getFlags()>:<public native>:<android.graphics.Paint>
<android.os.INetworkManagementService.Stub.Proxy: void clearPermission(int[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex create()>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.renderscript.Double2: int length()>:<public>:<android.renderscript.Double2>
<android.net.DhcpStateMachine: void access.2300(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.filterfw.core.ShaderProgram: void setDrawMode(int)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.DownloadManager.Request: android.content.ContentValues toContentValues(java.lang.String)>:<>:<android.app.DownloadManager.Request>
<android.filterfw.core.Filter: boolean outputConditionsMet()>:<private final>:<android.filterfw.core.Filter>
<android.hwcontrol.HwWidgetFactory.PermissionInformation.1: void <init>(android.app.AlertDialog)>:<>:<android.hwcontrol.HwWidgetFactory.PermissionInformation.1:android.content.DialogInterface.OnClickListener>
<android.app.MediaRouteButton.MediaRouterCallback: void <init>(android.app.MediaRouteButton)>:<private>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.hwtheme.HwThemeManagerDummy: void updateConfiguration()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.INetworkPolicyManager.Stub: void <init>()>:<public>:<android.net.INetworkPolicyManager.Stub:android.os.Binder,android.net.INetworkPolicyManager>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAllInterfaceNames(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ResultInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ResultInfo.1:android.os.Parcelable.Creator>
<android.graphics.ComposeShader: long nativeCreate1(long,long,long)>:<private static native>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction.Builder setTextureMatrixEnable(boolean)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.graphics.SurfaceTexture: void nativeRelease()>:<private native>:<android.graphics.SurfaceTexture>
<android.webkit.PluginData: int getStatusCode()>:<public>:<android.webkit.PluginData>
<android.renderscript.Mesh: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.app.IAlarmManager: long checkHasDeskClock()>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.os.Debug: java.lang.String getAptempInfo()>:<public static final native>:<android.os.Debug>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ProfilerInfo.1: android.app.ProfilerInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ProfilerInfo.1:android.os.Parcelable.Creator>
<android.os.Binder: void setDumpDisabled(java.lang.String)>:<public static>:<android.os.Binder:android.os.IBinder>
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ApplicationPackageManager: void handlePackageBroadcast(int,java.lang.String[],boolean)>:<static>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.Program.BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>:<protected>:<android.renderscript.Program.BaseProgramBuilder>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>:<public>:<android.app.ActivityManager>
<android.net.LocalSocketImpl.SocketInputStream: void <init>(android.net.LocalSocketImpl)>:<>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.filterfw.core.Frame: android.filterfw.core.Frame release()>:<public>:<android.filterfw.core.Frame>
<android.app.ActivityManager.StackInfo: void <init>()>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void createPhysicalNetwork(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.http.Request: java.lang.String getHostPort()>:<>:<android.net.http.Request>
<android.app.VoiceInteractor.Request: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>:<abstract>:<android.app.VoiceInteractor.Request>
<android.os.Handler.MessengerImpl: void send(android.os.Message)>:<public>:<android.os.Handler.MessengerImpl:android.os.IMessenger.Stub>
<android.opengl.GLLogWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.VertexFrame: int[] getInts()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.filterfw.core.Filter: void setupPorts()>:<public abstract>:<android.filterfw.core.Filter>
<android.webkit.JsDialogHelper: void <init>(android.webkit.JsPromptResult,int,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.JsDialogHelper>
<android.os.UserManager: boolean setRestrictionsChallenge(java.lang.String)>:<public>:<android.os.UserManager>
<android.renderscript.FieldPacker: android.renderscript.Double3 subDouble3()>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiManager: boolean setWifiLog(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType valueOf(java.lang.String)>:<public static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.Fragment: void onDetach()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>:<public>:<android.filterfw.geometry.Point>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkMisc.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkMisc.1:android.os.Parcelable.Creator>
<android.database.CursorWrapper: boolean isBeforeFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.VoiceInteractor.1: void <init>(android.app.VoiceInteractor)>:<>:<android.app.VoiceInteractor.1:com.android.internal.os.HandlerCaller.Callback>
<android.graphics.SurfaceTexture: long getTimestamp()>:<public>:<android.graphics.SurfaceTexture>
<android.filterfw.core.FrameFormat: int getDimension(int)>:<public>:<android.filterfw.core.FrameFormat>
<android.app.ITaskStackListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.ITaskStackListener.Stub.Proxy:android.app.ITaskStackListener>
<android.renderscript.RenderScript: void nMeshGetIndices(long,long[],int[],int)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.ExitTransitionCoordinator.4: void run()>:<public>:<android.app.ExitTransitionCoordinator.4:java.lang.Runnable>
<android.app.SearchableInfo: int getVoiceLanguageId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.ActivityManager.AppTask: void moveToFront()>:<public>:<android.app.ActivityManager.AppTask>
<android.net.INetworkStatsService.Stub.Proxy: void advisePersistThreshold(long)>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.hwtheme.HwThemeManagerDummy: boolean shouldUseAdditionalChnFont(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.webkit.WebView: void flingScroll(int,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.admin.IDevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.IConnectivityManager: boolean setUnderlyingNetworksForVpn(android.net.Network[])>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.transition.ChangeBounds.4: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.4:android.util.Property>
<android.net.wimax.WimaxManagerConstants: void <init>()>:<public>:<android.net.wimax.WimaxManagerConstants>
<android.os.ParcelUuid: java.lang.String toString()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.Debug: void dumpReferenceTables()>:<public static final>:<android.os.Debug>
<android.graphics.drawable.TransitionDrawable: android.graphics.drawable.LayerDrawable.LayerState createConstantState(android.graphics.drawable.LayerDrawable.LayerState,android.content.res.Resources)>:<>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.net.StaticIpConfiguration: void <init>(android.net.StaticIpConfiguration)>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.database.sqlite.SQLiteConnectionPool: void close()>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.Messenger: boolean equals(java.lang.Object)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.accessibilityservice.AccessibilityService.1: void onInterrupt()>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.renderscript.Short3: short elementSum()>:<public>:<android.renderscript.Short3>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int describeContents()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.os.BaseBundle: void putShort(java.lang.String,short)>:<>:<android.os.BaseBundle>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1802(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.IConnectivityManager: void setVpnPackageAuthorization(boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.ActivityThread.ProviderKey: boolean equals(java.lang.Object)>:<public>:<android.app.ActivityThread.ProviderKey>
<android.renderscript.Int4: void mod(int)>:<public>:<android.renderscript.Int4>
<android.app.PendingIntent: void <init>(android.os.IBinder)>:<>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.NetworkScoreManager: boolean updateScores(android.net.ScoredNetwork[])>:<public>:<android.net.NetworkScoreManager>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: void setSubpixelText(boolean)>:<public native>:<android.graphics.Paint>
<android.app.IActivityManager: int getLaunchedFromUid(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.IPowerManager: boolean startDream()>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.Fragment: boolean isInBackStack()>:<final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.AnimatedVectorDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.ActionBar: float getElevation()>:<public>:<android.app.ActionBar>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>:<public>:<android.webkit.WebView.HitTestResult>
<android.net.nsd.NsdManager: java.lang.Object getListener(int)>:<private>:<android.net.nsd.NsdManager>
<android.app.ActivityThread.ActivityClientRecord: boolean isPersistable()>:<public>:<android.app.ActivityThread.ActivityClientRecord>
<android.database.sqlite.SQLiteConnectionPool: void throwIfClosedLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.Region: long access.000(android.os.Parcel)>:<static>:<android.graphics.Region:android.os.Parcelable>
<android.filterfw.core.FrameFormat: void <init>(int,int)>:<public>:<android.filterfw.core.FrameFormat>
<android.print.PrinterDiscoverySession: void handlePrintersAdded(java.util.List)>:<private>:<android.print.PrinterDiscoverySession>
<android.app.NativeActivity: void onPause()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.StaticIpConfiguration.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.StaticIpConfiguration.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glEndQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.LoadedApk.ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.filterfw.core.GLEnvironment: boolean nativeDeallocate()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable.StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable.1)>:<>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.WifiManager.WpsCallback: void onFailed(int)>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.os.Debug: void resetGlobalAllocCount()>:<public static>:<android.os.Debug>
<android.renderscript.Sampler: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.IActivityManager: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.IProcessObserver.Stub.Proxy: void onForegroundActivitiesChanged(int,int,boolean)>:<public>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.app.IUiModeManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.EnterTransitionCoordinator.2: boolean onPreDraw()>:<public>:<android.app.EnterTransitionCoordinator.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Path.Primitive: void <clinit>()>:<static>:<android.renderscript.Path.Primitive:java.lang.Enum>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>:<public>:<android.graphics.Canvas>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.os.IVibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>:<public abstract>:<android.os.IVibratorService:android.os.IInterface>
<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable.LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable.1)>:<>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetHost.UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>:<public>:<android.appwidget.AppWidgetHost.UpdateHandler:android.os.Handler>
<android.net.wifi.WifiInfo: java.lang.String access.102(android.net.wifi.WifiInfo,java.lang.String)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.SearchableInfo.ActionKeyInfo: int getKeyCode()>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.graphics.Atlas.Entry: void <init>()>:<public>:<android.graphics.Atlas.Entry>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>:<public abstract>:<android.app.KeyguardManager.OnKeyguardExitResult>
<android.app.backup.BackupTransport.TransportImpl: long requestBackupTime()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.BackStackRecord: android.app.BackStackRecord.TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiInfo: int getIpAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: void setPivotX(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.INetworkPolicyManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>:<public>:<android.filterfw.io.PatternScanner>
<android.transition.Transition: void captureHierarchy(android.view.View,boolean)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.renderscript.RenderScript: java.lang.String nContextGetErrorMessage(long)>:<native>:<android.renderscript.RenderScript>
<android.os.ParcelFileDescriptor.FileDescriptorDetachedException: void <init>()>:<public>:<android.os.ParcelFileDescriptor.FileDescriptorDetachedException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.app.Notification.Builder: android.graphics.Bitmap getProfileBadge()>:<private>:<android.app.Notification.Builder>
<android.print.IPrintDocumentAdapter: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.os.DropBoxManager.Entry: int describeContents()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Matrix: long native_create(long)>:<private static native>:<android.graphics.Matrix>
<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>:<public>:<android.app.ActivityThread>
<android.renderscript.Script.LaunchOptions: int access.100(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.app.LoadedApk.ServiceDispatcher: int getFlags()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.net.wifi.p2p.WifiP2pInfo.1: android.net.wifi.p2p.WifiP2pInfo[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.backup.IBackupManager.Stub.Proxy: android.content.Intent getConfigurationIntent(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.SSLSessionCache: void install(android.net.SSLSessionCache,javax.net.ssl.SSLContext)>:<public static>:<android.net.SSLSessionCache>
<android.graphics.Matrix: boolean isAffine()>:<public>:<android.graphics.Matrix>
<android.app.Notification.Action.WearableExtender: void <init>(android.app.Notification.Action)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.renderscript.Long4: android.renderscript.Long4 add(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.renderscript.Float3: java.lang.Float dotProduct(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>:<public>:<android.net.ConnectivityManager>
<android.app.Activity: void setImmersive(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>:<public>:<android.webkit.WebChromeClient>
<android.os.PersistableBundle: void <init>(int)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.graphics.pdf.PdfDocument.Page: boolean isFinished()>:<>:<android.graphics.pdf.PdfDocument.Page>
<android.os.Trace: void <clinit>()>:<static>:<android.os.Trace>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiCHRService: void fetchRssi(android.net.wifi.SupplicantState)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)>:<public>:<android.filterfw.core.GLEnvironment>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<private static>:<android.graphics.BitmapFactory>
<android.transition.ChangeTransform.2: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeTransform.2:android.util.Property>
<android.app.job.JobParameters: void <clinit>()>:<static>:<android.app.job.JobParameters:android.os.Parcelable>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>:<public>:<android.webkit.WebChromeClient>
<android.app.ActivityManagerProxy: void notifyEnterAnimationComplete(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.Account.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.net.ConnectivityManager: void decCallbackHandlerRefCount()>:<private>:<android.net.ConnectivityManager>
<android.app.ActivityThread: void access.1800(android.app.ActivityThread,android.os.IBinder,boolean,int,boolean)>:<static>:<android.app.ActivityThread>
<android.net.NetworkScorerAppManager: void <init>()>:<private>:<android.net.NetworkScorerAppManager>
<android.database.ContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.ContentObserver>
<android.os.RegistrantList: void internalNotifyRegistrants(java.lang.Object,java.lang.Throwable)>:<private>:<android.os.RegistrantList>
<android.graphics.drawable.Drawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.RippleDrawable: void <init>(android.graphics.drawable.RippleDrawable.RippleState,android.content.res.Resources)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.ScoredNetwork: void <clinit>()>:<static>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: void unregisterListener(android.os.IBatteryPropertiesListener)>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.netdetect.HwCustNetDetectServiceImpl: void startWiFiWebStateDetect(java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceConnection>
<android.app.SharedPreferencesImpl: void startReloadIfChangedUnexpectedly()>:<>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.LayerDrawable: void addLayer(android.graphics.drawable.LayerDrawable.ChildDrawable)>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.INetworkManagementService.Stub.Proxy: void removeRoute(int,android.net.RouteInfo)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiConfiguration.2: int compare(java.lang.Object,java.lang.Object)>:<public>:<android.net.wifi.WifiConfiguration.2:java.util.Comparator>
<android.graphics.drawable.GradientDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebView: void savePassword(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.SearchableInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.SearchableInfo.1:android.os.Parcelable.Creator>
<android.webkit.WebViewProvider.ViewDelegate: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.os.CommonTimeConfig: void finalize()>:<protected>:<android.os.CommonTimeConfig>
<android.app.UiAutomationConnection: boolean clearWindowContentFrameStats(int)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.os.BatteryStats.Uid: long getFullWifiLockTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.admin.IDevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.ActivityThread: void access.1400(android.app.ActivityThread,android.os.IBinder,boolean,boolean,int,boolean)>:<static>:<android.app.ActivityThread>
<android.app.SearchDialog: int resolveDialogTheme(android.content.Context)>:<static>:<android.app.SearchDialog:android.app.Dialog>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.RegistrantList: void remove(android.os.Handler)>:<public>:<android.os.RegistrantList>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.ChannelListener access.102(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.net.wifi.WifiEnterpriseConfig.1: android.net.wifi.WifiEnterpriseConfig[] newArray(int)>:<public>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.os.Messenger: int describeContents()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.app.ExitTransitionCoordinator.6: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.6:android.app.Activity.TranslucentConversionListener>
<android.hwtheme.HwThemeManager: void removeIconCache(java.lang.String,java.lang.String,int,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.renderscript.Allocation: void data1DChecks(int,int,int,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>:<public>:<android.mtp.MtpDevice>
<android.net.UidRange: int getStartUser()>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.mtp.MtpDevice: int[] native_get_storage_ids()>:<private native>:<android.mtp.MtpDevice>
<android.os.Handler: java.lang.String getMessageName(android.os.Message)>:<public>:<android.os.Handler>
<android.graphics.drawable.NinePatchDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Program: int getTextureCount()>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive valueOf(java.lang.String)>:<public static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.webkit.WebSettings: void setTextZoom(int)>:<public abstract>:<android.webkit.WebSettings>
<android.os.IVibratorService.Stub.Proxy: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)>:<public>:<android.app.StatusBarManager>
<android.app.ActivityTransitionState: void startPostponedEnterTransition()>:<public>:<android.app.ActivityTransitionState>
<android.transition.TransitionSet: android.transition.TransitionSet setStartDelay(long)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager.DiscoveryListener)>:<public>:<android.net.nsd.NsdManager>
<android.accounts.AccountManager.BaseFutureTask: void <init>(android.accounts.AccountManager,android.os.Handler)>:<public>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.renderscript.Float2: int length()>:<public>:<android.renderscript.Float2>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.transition.Transition: void runAnimators()>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.core.Frame: void setReusable(boolean)>:<protected>:<android.filterfw.core.Frame>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.AbstractCursor: boolean onMove(int,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.Uri.Part.EmptyPart: boolean isEmpty()>:<>:<android.net.Uri.Part.EmptyPart:android.net.Uri.Part,android.net.Uri.AbstractPart>
<android.app.backup.BackupHelperDispatcher: void doOneBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,android.app.backup.BackupHelperDispatcher.Header,android.app.backup.BackupHelper)>:<private>:<android.app.backup.BackupHelperDispatcher>
<android.filterfw.core.Filter: boolean isOpen()>:<public>:<android.filterfw.core.Filter>
<android.graphics.drawable.RippleDrawable: void removeRipple(android.graphics.drawable.Ripple)>:<>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetHostView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.os.BaseBundle: char[] getCharArray(java.lang.String)>:<>:<android.os.BaseBundle>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.Path: void native_addPath(long,long)>:<private static native>:<android.graphics.Path>
<android.print.PrinterCapabilitiesInfo: void <init>(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.UserManager: android.content.pm.UserInfo createGuest(android.content.Context,java.lang.String)>:<public>:<android.os.UserManager>
<android.net.LinkQualityInfo: void <init>()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.print.PrintDocumentInfo.Builder: void <init>(java.lang.String)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void lockNow()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.Debug: boolean fieldTypeMatches(java.lang.reflect.Field,java.lang.Class)>:<private static>:<android.os.Debug>
<android.net.http.HttpAuthHeader: void parseParameters(java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.accounts.ChooseAccountActivity: void <init>()>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isWfdEnabled()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.ListFragment: void setListShown(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.app.EnterTransitionCoordinator.5.1: void run()>:<public>:<android.app.EnterTransitionCoordinator.5.1:java.lang.Runnable>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.mtp.MtpDevice: int getDeviceId()>:<public>:<android.mtp.MtpDevice>
<android.net.Uri.OpaqueUri: java.lang.String getUserInfo()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.transition.TransitionSet: void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)>:<protected>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Notification.Builder: java.lang.CharSequence access.900(android.app.Notification.Builder,java.lang.CharSequence)>:<static>:<android.app.Notification.Builder>
<android.net.wifi.WifiCHRStateManager: void updateSSID(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.os.ParcelUuid: void <init>(java.util.UUID)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>:<>:<android.os.ZygoteStartFailedEx:java.lang.Exception,java.lang.Throwable>
<android.net.wifi.ScanResult.1: android.net.wifi.ScanResult[] newArray(int)>:<public>:<android.net.wifi.ScanResult.1:android.os.Parcelable.Creator>
<android.app.backup.BackupHelperDispatcher: int writeHeader_native(android.app.backup.BackupHelperDispatcher.Header,java.io.FileDescriptor,int)>:<private static native>:<android.app.backup.BackupHelperDispatcher>
<android.app.ContextImpl.37: void <init>()>:<>:<android.app.ContextImpl.37:android.app.ContextImpl.ServiceFetcher>
<android.net.dhcp.DhcpPacket: android.net.dhcp.DhcpPacket decodeFullPacket(byte[],int)>:<public static>:<android.net.dhcp.DhcpPacket>
<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.Matrix: long ni()>:<final>:<android.graphics.Matrix>
<android.renderscript.Font.Style: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Font.Style:java.lang.Enum>
<android.webkit.WebViewProvider.ViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.usage.UsageEvents: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ScriptIntrinsicLUT: void setAlpha(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ApplicationThreadProxy: void scheduleConfigurationChanged(android.content.res.Configuration)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.NativeActivity: void onLowMemoryNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>:<protected transient>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.os.IMultiWinService.Stub.Proxy: void moveTask(int,boolean,int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.graphics.drawable.ScaleDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.INetworkStatsService.Stub: void <init>()>:<public>:<android.net.INetworkStatsService.Stub:android.os.Binder,android.net.INetworkStatsService>
<android.app.ActivityManager.CpuStatInfo: void <clinit>()>:<static>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.app.IActivityManager: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.AlarmManager: void setImpl(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager.AlarmClockInfo)>:<private>:<android.app.AlarmManager>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.Process: long getElapsedCpuTime()>:<public static final native>:<android.os.Process>
<android.graphics.drawable.VectorDrawable.VGroup: float access.200(android.graphics.drawable.VectorDrawable.VGroup)>:<static>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.nsd.DnsSdTxtRecord: boolean contains(java.lang.String)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.renderscript.Int3: void sub(int)>:<public>:<android.renderscript.Int3>
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintAttributes.1: void <init>()>:<>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.accounts.CantAddAccountActivity: void <init>()>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.nsd.INsdManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.nsd.INsdManager.Stub.Proxy:android.net.nsd.INsdManager>
<android.net.IConnectivityManager: int findConnectionTypeForIface(java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLES10: void glFogfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.backup.BackupTransport.TransportImpl: void cancelFullBackup()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.ITransientNotification.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.ITransientNotification.Stub.Proxy:android.app.ITransientNotification>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IActivityManager: void appNotRespondingViaProvider(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.Double4: double dotProduct(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.ClipDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.storage.IMountShutdownObserver: void onShutDownComplete(int)>:<public abstract>:<android.os.storage.IMountShutdownObserver:android.os.IInterface>
<android.transition.AutoTransition: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.AutoTransition:android.transition.TransitionSet,android.transition.Transition>
<android.webkit.WebHistoryItem: void <init>()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String trimWhitespace(java.lang.String)>:<private>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.net.dhcp.DhcpAckPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.opengl.EGLLogWrapper: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.print.PrintAttributes: void setResolution(android.print.PrintAttributes.Resolution)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.transition.TransitionManager: void <init>()>:<public>:<android.transition.TransitionManager>
<android.opengl.GLES20: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Double2: void <init>(double,double)>:<public>:<android.renderscript.Double2>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.app.IUserSwitchObserver: void onUserSwitching(int,android.os.IRemoteCallback)>:<public abstract>:<android.app.IUserSwitchObserver:android.os.IInterface>
<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.renderscript.ScriptIntrinsicLUT: void setBlue(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.MergeCursor: int getInt(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.NetworkTemplate: java.lang.String getNetworkId()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.usage.UsageEvents.Event: java.lang.String getPackageName()>:<public>:<android.app.usage.UsageEvents.Event>
<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.opengl.GLES30: void glBindSampler(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.MediaRouteButton.MediaRouterCallback: void <init>(android.app.MediaRouteButton,android.app.MediaRouteButton.1)>:<>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.renderscript.RenderScript: long rsnScriptGetVarJ(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.app.trust.TrustManager: void onError(java.lang.Exception)>:<private>:<android.app.trust.TrustManager>
<android.app.Notification.Builder: int resolveColor()>:<private>:<android.app.Notification.Builder>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.app.backup.BackupTransport: int finishBackup()>:<public>:<android.app.backup.BackupTransport>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.database.BulkCursorDescriptor: int describeContents()>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.app.ContextImpl.58: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.58:android.app.ContextImpl.ServiceFetcher>
<android.filterfw.core.FilterGraph: void setupFilters()>:<>:<android.filterfw.core.FilterGraph>
<android.os.Parcel: java.lang.String nativeReadString(long)>:<private static native>:<android.os.Parcel>
<android.graphics.RegionIterator: void finalize()>:<protected>:<android.graphics.RegionIterator>
<android.app.ActivityManager: int getDefaultAppRecentsLimitStatic()>:<public static>:<android.app.ActivityManager>
<android.net.wifi.IWifiManager.Stub.Proxy: int getSupportedFeatures()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.IBatteryPropertiesListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IBatteryPropertiesListener.Stub.Proxy:android.os.IBatteryPropertiesListener>
<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.renderscript.Long3: long dotProduct(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.TrafficStats: long getMobileTxBytes()>:<public static>:<android.net.TrafficStats>
<android.opengl.GLLogWrapper: java.lang.String getFactor(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.RttManager: android.net.wifi.RttManager.Capabilities getCapabilities()>:<public>:<android.net.wifi.RttManager>
<android.graphics.pdf.PdfEditor: void throwIfPageNotInDocument(int)>:<private>:<android.graphics.pdf.PdfEditor>
<android.os.BatteryStats.Uid: long getWifiBatchedScanTime(int,long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.app.EnterTransitionCoordinator: android.transition.Transition getSharedElementTransition()>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLLogWrapper: void glFlush()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>:<public static native>:<android.opengl.EGL14>
<android.os.IUserManager.Stub.Proxy: android.os.Bundle getUserRestrictions(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.renderscript.Allocation: void validate2DRange(int,int,int,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Notification.Builder: android.content.Context access.1000(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.app.backup.RestoreSet: void <init>()>:<public>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>:<public>:<android.sax.RootElement:android.sax.Element>
<android.app.trust.TrustManager: void registerTrustListener(android.app.trust.TrustManager.TrustListener)>:<public>:<android.app.trust.TrustManager>
<android.os.BatteryProperties: void set(android.os.BatteryProperties)>:<public>:<android.os.BatteryProperties:android.os.Parcelable>
<android.os.WorkSource: void clear()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration.Visibility setVisibility(long)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)>:<public static>:<android.os.Debug>
<android.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.UiAutomationConnection: void unregisterUiTestAutomationServiceLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.net.NetworkState: void <init>(android.os.Parcel)>:<public>:<android.net.NetworkState:android.os.Parcelable>
<android.filterfw.MffEnvironment: void createGLEnvironment()>:<public>:<android.filterfw.MffEnvironment>
<android.os.storage.StorageManager.ObbListenerDelegate: int access.200(android.os.storage.StorageManager.ObbListenerDelegate)>:<static>:<android.os.storage.StorageManager.ObbListenerDelegate>
<android.app.UiAutomationConnection: void throwIfCalledByNotTrustedUidLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.app.job.JobInfo.Builder: android.content.ComponentName access.200(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.os.StrictMode: boolean amTheSystemServerProcess()>:<private static>:<android.os.StrictMode>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener: void onCrossProfileWidgetProvidersChanged(int,java.util.List)>:<public abstract>:<android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener>
<android.renderscript.Short4: android.renderscript.Short4 mod(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>:<public>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.app.Notification: void <init>(android.content.Context,int,java.lang.CharSequence,long,java.lang.CharSequence,java.lang.CharSequence,android.content.Intent)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.renderscript.Script.LaunchOptions: int access.200(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)>:<public final>:<android.filterfw.core.Filter>
<android.renderscript.Matrix2f: float[] getArray()>:<public>:<android.renderscript.Matrix2f>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiScanner.ScanListener: void onPeriodChanged(int)>:<public abstract>:<android.net.wifi.WifiScanner.ScanListener:android.net.wifi.WifiScanner.ActionListener>
<android.drm.DrmManagerClient: void installDrmEngine(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.IActivityManager: android.app.ActivityManager.StackInfo getStackInfo(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings[] values()>:<public static>:<android.net.IpConfiguration.ProxySettings:java.lang.Enum>
<android.database.sqlite.SQLiteConnection.PreparedStatement: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.PreparedStatement>
<android.app.ActivityManager.RecentTaskInfo.1: android.app.ActivityManager.RecentTaskInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RecentTaskInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.LayerDrawable: int getAlpha()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyInfo)>:<public static final>:<android.net.Proxy>
<android.opengl.GLErrorWrapper: void glBindFramebufferOES(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.mtp.MtpDatabase: boolean inStorageRoot(java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.app.ActivityGroup: java.util.HashMap onRetainNonConfigurationChildInstances()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebChromeClient.FileChooserParams: int getMode()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.app.LocalActivityManager: void dispatchStop()>:<public>:<android.app.LocalActivityManager>
<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>:<public>:<android.webkit.WebViewClient>
<android.transition.Slide: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.app.BackStackRecord: java.util.ArrayList captureExitingViews(android.transition.Transition,android.app.Fragment,android.util.ArrayMap,android.view.View)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ActivityThread.ApplicationThread: void setSchedulingGroup(int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.wifi.p2p.WifiP2pGroupList.2: android.net.wifi.p2p.WifiP2pGroupList createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList.2:android.os.Parcelable.Creator>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(java.lang.Class)>:<public>:<android.app.TaskStackBuilder>
<android.opengl.GLLogWrapper: void glClearColorx(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Parcel: void nativeWriteString(long,java.lang.String)>:<private static native>:<android.os.Parcel>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.renderscript.Int2: void mod(int)>:<public>:<android.renderscript.Int2>
<android.webkit.WebView: boolean isEmuiStyle()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.LoadedApk.ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.LoadedApk.ServiceDispatcher>
<android.transition.TransitionSet: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.renderscript.Float3: android.renderscript.Float3 sub(android.renderscript.Float3,android.renderscript.Float3)>:<public static>:<android.renderscript.Float3>
<android.transition.ChangeBounds.6: android.graphics.PointF get(android.view.View)>:<public>:<android.transition.ChangeBounds.6:android.util.Property>
<android.net.nsd.NsdServiceInfo: java.lang.String access.002(android.net.nsd.NsdServiceInfo,java.lang.String)>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.net.http.AndroidHttpClient.LoggingConfiguration: void <init>(java.lang.String,int)>:<private>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.graphics.drawable.VectorDrawable.VGroup: float getPivotY()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.1: void <init>()>:<>:<android.app.ContextImpl.1:android.app.ContextImpl.ServiceFetcher>
<android.filterfw.core.ShaderProgram: void <init>()>:<private>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.os.Debug.MemoryInfo: java.lang.String getOtherLabel(int)>:<public static>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.net.wifi.WifiInfo: void setSSID(android.net.wifi.WifiSsid)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.NetworkStats: long getTotalBytes()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.IUserManager: boolean markGuestForDeletion(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.app.Dialog: android.view.Window getWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.Handler: void removeMessages(int)>:<public final>:<android.os.Handler>
<android.app.Activity: void onResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.storage.StorageResultCode: void <init>()>:<public>:<android.os.storage.StorageResultCode>
<android.opengl.GLErrorWrapper: void glSampleCoveragex(int,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.RippleDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.IMultiWinService.Stub.Proxy: int registerMultiWin(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.opengl.GLES10: void glClearDepthx(int)>:<public static native>:<android.opengl.GLES10>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus _convertData(int,int,byte[])>:<private native>:<android.drm.DrmManagerClient>
<android.app.Notification.Action: void <init>(android.os.Parcel,android.app.Notification.1)>:<>:<android.app.Notification.Action:android.os.Parcelable>
<android.net.wifi.WifiCHRStateManager: void updateWifiSSID(java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.INetworkManagementEventObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.app.backup.IBackupManager.Stub.Proxy: void clearBackupData(java.lang.String,java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.net.INetworkPolicyManager.Stub.Proxy: void unregisterListener(android.net.INetworkPolicyListener)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.filterfw.core.VertexFrame: boolean setNativeInts(int[])>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.Fragment.SavedState: void <init>(android.os.Bundle)>:<>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection.Operation: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.Operation>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>:<public>:<android.app.AlertDialog.Builder>
<android.app.ExitTransitionCoordinator: void access.700(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.nsd.DnsSdTxtRecord: java.lang.String getValueAsString(int)>:<private>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.os.CommonTimeConfig: android.os.CommonTimeConfig create()>:<public static>:<android.os.CommonTimeConfig>
<android.app.BackStackRecord: void callSharedElementEnd(android.app.BackStackRecord.TransitionState,android.app.Fragment,android.app.Fragment,boolean,android.util.ArrayMap)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.BackStackRecord: android.app.FragmentTransaction hide(android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.os.BatteryProperty: void <init>()>:<public>:<android.os.BatteryProperty:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedRotateDrawable: void nextFrame()>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.wifi.WifiConnectionStatistics: java.lang.String toString()>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.net.InterfaceConfiguration: void <init>()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)>:<static>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.accounts.AbstractAccountAuthenticator.2: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>:<>:<android.accounts.AbstractAccountAuthenticator.2:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.GradientDrawable.GradientState: void computeOpacity()>:<private>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.DevicePolicyManager: boolean isProfileOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Notification.Builder: int getActionLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create1D(android.renderscript.RenderScript,android.renderscript.Allocation)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.net.wifi.WifiCHRStateManager: void updateTimeLen(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLLogWrapper: void glPointParameterf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.TrafficStats: long getUidTxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.app.ActivityThread.ApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.transition.ChangeText.6: void onTransitionPause(android.transition.Transition)>:<public>:<android.transition.ChangeText.6:android.transition.Transition.TransitionListenerAdapter>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager.Channel: java.lang.Object getListener(int)>:<private>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.SystemProperties: void native_set(java.lang.String,java.lang.String)>:<private static native>:<android.os.SystemProperties>
<android.app.NativeActivity: void onInputQueueDestroyedNative(long,long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.admin.DeviceAdminInfo: void writePoliciesToXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.AbsWallpaperManager: android.graphics.Bitmap getBlurBitmap(android.graphics.Rect)>:<public>:<android.app.AbsWallpaperManager>
<android.app.ActivityTransitionCoordinator: void clearState()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.Interpolator: void nativeReset(long,int,int)>:<private static native>:<android.graphics.Interpolator>
<android.graphics.RectF: java.lang.String toShortString(java.lang.StringBuilder)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.app.INotificationManager: void cancelNotificationFromListener(android.service.notification.INotificationListener,java.lang.String,java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.database.sqlite.SQLiteSession: void throwIfTransactionMarkedSuccessful()>:<private>:<android.database.sqlite.SQLiteSession>
<android.graphics.PathMeasure: boolean native_getSegment(long,float,float,long,boolean)>:<private static native>:<android.graphics.PathMeasure>
<android.os.storage.StorageManager.ObbStateChangedStorageEvent: void <init>(android.os.storage.StorageManager,java.lang.String,int)>:<public>:<android.os.storage.StorageManager.ObbStateChangedStorageEvent:android.os.storage.StorageManager.StorageEvent>
<android.net.NetworkStatsHistory: long getStart()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.ContextImpl.24: void <init>()>:<>:<android.app.ContextImpl.24:android.app.ContextImpl.ServiceFetcher>
<android.os.INetworkManagementService: void untetherInterface(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.net.NetworkTemplate: boolean matchesMobile(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.renderscript.RenderScript: void rsnContextBindProgramStore(long,long)>:<native>:<android.renderscript.RenderScript>
<android.app.IApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.test.FlakyTest: int tolerance()>:<public abstract>:<android.test.FlakyTest:java.lang.annotation.Annotation>
<android.renderscript.FieldPacker: double subF64()>:<public>:<android.renderscript.FieldPacker>
<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>:<public>:<android.os.Registrant>
<android.net.DhcpStateMachine: void access.700(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.opengl.GLUtils: void setTracingLevel(int)>:<public static native>:<android.opengl.GLUtils>
<android.app.AlarmManager.AlarmClockInfo: void <init>(android.os.Parcel)>:<>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.os.ResultReceiver.1: android.os.ResultReceiver createFromParcel(android.os.Parcel)>:<public>:<android.os.ResultReceiver.1:android.os.Parcelable.Creator>
<android.os.IMultiWinService.Stub.Proxy: void releaseMultiWin(android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.graphics.Atlas.Type: void <clinit>()>:<static>:<android.graphics.Atlas.Type:java.lang.Enum>
<android.opengl.GLES10: void glLoadIdentity()>:<public static native>:<android.opengl.GLES10>
<android.net.NetworkUtils: java.net.InetAddress hexToInet6Address(java.lang.String)>:<public static>:<android.net.NetworkUtils>
<android.app.Fragment: void performStart()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.http.SslCertificate: java.lang.String fingerprint(byte[])>:<private static final>:<android.net.http.SslCertificate>
<android.net.wifi.IWifiManager.Stub.Proxy: int getVerboseLoggingLevel()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.print.PrinterDiscoverySession: boolean isDestroyed()>:<public final>:<android.print.PrinterDiscoverySession>
<android.app.IServiceConnection.Stub: android.app.IServiceConnection asInterface(android.os.IBinder)>:<public static>:<android.app.IServiceConnection.Stub:android.os.Binder,android.app.IServiceConnection>
<android.net.wifi.WifiInfo: void updatePacketRates(long,long)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.net.wifi.WifiScanner: java.lang.Object access.200(int)>:<static>:<android.net.wifi.WifiScanner>
<android.app.ExitTransitionCoordinator: boolean access.500(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.drawable.NinePatchDrawable: void initializeWithState(android.graphics.drawable.NinePatchDrawable.NinePatchState,android.content.res.Resources)>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.job.IJobCallback.Stub.Proxy: void jobFinished(int,boolean)>:<public>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.renderscript.ScriptIntrinsicHistogram: void setOutput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.IPowerManager.Stub.Proxy: int setColorTemperature(int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementTransition()>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.accounts.AccountManager.15: void doWork()>:<public>:<android.accounts.AccountManager.15:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.os.BatteryStats: void <clinit>()>:<static>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.Camera: float getLocationY()>:<public native>:<android.graphics.Camera>
<android.graphics.Matrix.1: boolean preSkew(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.graphics.Bitmap: void checkPixelAccess(int,int)>:<private>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.app.IActivityManager: java.util.List getServices(int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: android.net.LinkProperties access.1000(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.IpConfiguration.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.IpConfiguration.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiLinkLayerStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.IActivityContainer: int startActivityIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.app.IActivityManager: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate,java.lang.String)>:<public>:<android.net.http.SslError>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteActionProvider.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getMessenger()>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.filterfw.core.GLFrame: int[] getInts()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.admin.DevicePolicyManager: java.lang.String getCaCertAlias(byte[])>:<private static>:<android.app.admin.DevicePolicyManager>
<android.app.backup.IBackupManager.Stub.Proxy: boolean hasBackupPassword()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean)>:<>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.Builder: void unshrinkLine3Text(android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.net.http.LoggingEventHandler: void status(int,int,int,java.lang.String)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.print.PrinterCapabilitiesInfo: void <init>()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.print.PrintAttributes: void setColorMode(int)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.graphics.PaintFlagsDrawFilter: long nativeConstructor(int,int)>:<private static native>:<android.graphics.PaintFlagsDrawFilter:android.graphics.DrawFilter>
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.job.IJobCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.graphics.drawable.VectorDrawable.VFullPath: float getStrokeAlpha()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkAgent: void removeUidRanges(android.net.UidRange[])>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.net.dhcp.DhcpAckPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.filterfw.core.FilterSurfaceView: void <init>(android.content.Context)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Notification.WearableExtender: boolean getContentIntentAvailableOffline()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.NativeActivity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.ContextImpl: void revokeUriPermission(android.net.Uri,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>:<public>:<android.app.LoadedApk>
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.graphics.Paint: long native_init()>:<private static native>:<android.graphics.Paint>
<android.app.IAlarmManager: void remove(android.app.PendingIntent)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.DhcpStateMachine: com.android.internal.util.StateMachine access.500(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.accounts.AccountManager.3: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.renderscript.Allocation: void copyFrom(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.pdf.PdfRenderer.Page: void finalize()>:<protected>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.webkit.MimeTypeMap: java.lang.String remapGenericMimeType(java.lang.String,java.lang.String,java.lang.String)>:<>:<android.webkit.MimeTypeMap>
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.INotificationManager.Stub.Proxy: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.wifi.WifiChannel.1: android.net.wifi.WifiChannel[] newArray(int)>:<public>:<android.net.wifi.WifiChannel.1:android.os.Parcelable.Creator>
<android.os.BatteryStats.HistoryTag: boolean equals(java.lang.Object)>:<public>:<android.os.BatteryStats.HistoryTag>
<android.filterfw.core.NativeProgram: void finalize()>:<protected>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.webkit.CacheManager: boolean endCacheTransaction()>:<public static>:<android.webkit.CacheManager>
<android.app.Notification.Builder: void access.1800(android.app.Notification.Builder,android.widget.RemoteViews)>:<static>:<android.app.Notification.Builder>
<android.database.CursorJoiner: java.lang.Object next()>:<public volatile>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getActiveDatabases()>:<private static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.Cursor: android.net.Uri getNotificationUri()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.LinkProperties: boolean hasIPv6()>:<private>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ContextImpl.4: void <init>()>:<>:<android.app.ContextImpl.4:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createTxtServiceQuery(java.lang.String,java.lang.String,android.net.nsd.DnsSdTxtRecord)>:<private static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.net.http.RequestQueue.ActivePool: void startup()>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.graphics.Path.Op: android.graphics.Path.Op[] values()>:<public static>:<android.graphics.Path.Op:java.lang.Enum>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.pdf.PdfEditor: void nativeSetTransformAndClip(long,int,long,int,int,int,int)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.graphics.drawable.Ripple: void removeSelf()>:<private>:<android.graphics.drawable.Ripple>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: void rsnElementGetNativeData(long,long,int[])>:<native>:<android.renderscript.RenderScript>
<android.graphics.pdf.PdfDocument.PageInfo: void <init>()>:<private>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.202(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.EGLLogWrapper: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ActivityManagerProxy: void registerTaskStackListener(android.app.ITaskStackListener)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getSharedAccountsAsUser(int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.FileUtils: boolean isValidFatFilename(java.lang.String)>:<public static>:<android.os.FileUtils>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority[] values()>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.app.admin.IDevicePolicyManager.Stub: void <init>()>:<public>:<android.app.admin.IDevicePolicyManager.Stub:android.os.Binder,android.app.admin.IDevicePolicyManager>
<android.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<private>:<android.transition.ChangeTransform:android.transition.Transition>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>:<public>:<android.drm.DrmRights>
<android.graphics.pdf.PdfEditor: void throwIfOutMediaBoxNull(android.graphics.Rect)>:<private>:<android.graphics.pdf.PdfEditor>
<android.net.http.AndroidHttpClient: java.lang.String access.500(org.apache.http.client.methods.HttpUriRequest,boolean)>:<static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.os.ZygoteStartFailedEx: void <init>(java.lang.String,java.lang.Throwable)>:<>:<android.os.ZygoteStartFailedEx:java.lang.Exception,java.lang.Throwable>
<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>:<public>:<android.app.ActivityOptions>
<android.app.ContextImpl.12: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.12:android.app.ContextImpl.ServiceFetcher>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.Fragment.SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>:<>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.webkit.WebView: void <clinit>()>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.LoaderManagerImpl: void doReportStart()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.renderscript.Short3: void sub(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.net.wifi.BatchedScanSettings: void <init>(android.net.wifi.BatchedScanSettings)>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.print.PrintJobInfo.Builder: void setPages(android.print.PageRange[])>:<public>:<android.print.PrintJobInfo.Builder>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkCapabilities: void setLinkUpstreamBandwidthKbps(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.webkit.JsDialogHelper: void showDialog(android.content.Context)>:<public>:<android.webkit.JsDialogHelper>
<android.os.Process.ProcessStartResult: void <init>()>:<public>:<android.os.Process.ProcessStartResult>
<android.os.BatteryStats.Uid: void noteFullWifiLockAcquiredLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.GLFrame: boolean nativeAllocateExternal(android.filterfw.core.GLEnvironment)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener: boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry,int)>:<public abstract>:<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener>
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Float2: void add(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.app.BackStackRecord: android.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.util.ArrayMap)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.graphics.Rect: void set(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.IPowerManager: boolean isWakeLockLevelSupported(int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.IMultiWinService: boolean getMWMaintained()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Activity: void stopLockTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: void initializeFromState()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.webkit.WebView: void setFavoriteUrlsFromXml(java.lang.String[],int[])>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.net.http.RequestQueue.SyncFeeder: void requeueRequest(android.net.http.Request)>:<public>:<android.net.http.RequestQueue.SyncFeeder:android.net.http.RequestFeeder>
<android.net.http.HttpsConnection: void <clinit>()>:<static>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityView.ActivityContainerCallback: void <init>(android.app.ActivityView)>:<>:<android.app.ActivityView.ActivityContainerCallback:android.app.IActivityContainerCallback.Stub,android.os.Binder>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>:<public static>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.PictureDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.GradientDrawable: void setStrokeInternal(int,int,float,float)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable: boolean isProjected()>:<public>:<android.graphics.drawable.Drawable>
<android.os.StrictMode.3: java.lang.Object initialValue()>:<protected volatile>:<android.os.StrictMode.3:java.lang.ThreadLocal>
<android.database.sqlite.SQLiteClosable: void acquireReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.renderscript.RenderScript: long rsnProgramStoreCreate(long,boolean,boolean,boolean,boolean,boolean,boolean,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.IWifiManager: void enableAggressiveHandover(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.IMultiWinService.Stub.Proxy: boolean isWhitelisted(java.lang.String)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.os.BatteryStats.Uid: void noteWifiMulticastEnabledLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.os.IUserManager: java.util.List getProfiles(int,boolean)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Byte4: void setAt(int,byte)>:<public>:<android.renderscript.Byte4>
<android.net.ConnectivityManager: void captivePortalCheckCompleted(android.net.NetworkInfo,boolean)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintDocumentInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.GLEnvironment: boolean nativeIsActive()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.app.Instrumentation: void onDestroy()>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.AnimatedStateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.RemoteCallback: void <clinit>()>:<static>:<android.os.RemoteCallback:android.os.Parcelable>
<android.graphics.FontFamily: void <init>()>:<public>:<android.graphics.FontFamily>
<android.net.wifi.p2p.WifiP2pDeviceList: void validateDevice(android.net.wifi.p2p.WifiP2pDevice)>:<private>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.net.DhcpResults: void updateFromDhcpRequest(android.net.DhcpResults)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.hsm.HwAudioPermWrapper: int mockRead(short[],int,int)>:<public>:<android.hsm.HwAudioPermWrapper>
<android.opengl.GLLogWrapper: void log(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.transition.Slide.4: float getGoneX(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.4:android.transition.Slide.CalculateSlideHorizontal>
<android.transition.ChangeImageTransform: void <clinit>()>:<static>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.drm.DrmManagerClient: int _getDrmObjectType(int,java.lang.String,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.INotificationManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.database.Cursor: int getPosition()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.renderscript.Int3: void mul(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.app.admin.DevicePolicyManager: void uninstallCaCert(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebSettings: void setSavePassword(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.InterfaceConfiguration.1: android.net.InterfaceConfiguration[] newArray(int)>:<public>:<android.net.InterfaceConfiguration.1:android.os.Parcelable.Creator>
<android.app.ContextImpl: boolean isRestricted()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiManager: boolean isDualBandSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getStorageEncryptionStatus(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.Path: void reset()>:<public>:<android.graphics.Path>
<android.graphics.drawable.ClipDrawable.ClipState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.SELinux: boolean isSELinuxEnabled()>:<public static final native>:<android.os.SELinux>
<android.alsa.AlsaDevicesParser: void <clinit>()>:<static>:<android.alsa.AlsaDevicesParser>
<android.renderscript.Long3: void addAt(int,long)>:<public>:<android.renderscript.Long3>
<android.os.IVibratorService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.app.FragmentManagerImpl: void <init>()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.filterfw.core.NativeBuffer: boolean isReadOnly()>:<public>:<android.filterfw.core.NativeBuffer>
<android.os.IHDMIConnectService.Stub.Proxy: void setDisplayCode(int)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.graphics.Paint: void nativeGetCharArrayBounds(long,long,char[],int,int,int,android.graphics.Rect)>:<private static native>:<android.graphics.Paint>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.INotificationManager.Stub.Proxy: void registerListener(android.service.notification.INotificationListener,android.content.ComponentName,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.print.PrintAttributes: void <init>(android.os.Parcel)>:<private>:<android.print.PrintAttributes:android.os.Parcelable>
<android.renderscript.RenderScript: void nAssignName(long,byte[])>:<>:<android.renderscript.RenderScript>
<android.app.INotificationManager.Stub.Proxy: android.service.notification.ZenModeConfig getZenModeConfig()>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.Manifest.permission_group: void <init>()>:<public>:<android.Manifest.permission_group>
<android.renderscript.RenderScriptGL: void <init>(android.content.Context,android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.os.Binder:android.os.IBinder>
<android.os.storage.StorageManager.ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager.ObbActionListener:android.os.storage.IObbActionListener.Stub,android.os.Binder>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.net.wifi.p2p.WifiP2pGroupList.2: android.net.wifi.p2p.WifiP2pGroupList[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList.2:android.os.Parcelable.Creator>
<android.net.wifi.WifiManager: boolean disconnect()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.IUiModeManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IUiModeManager.Stub:android.os.Binder,android.app.IUiModeManager>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: void setMiracastMode(int)>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap.Config,boolean)>:<private static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.BatteryStats.1: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.os.BatteryStats.1:java.util.Comparator>
<android.graphics.Matrix: void native_preSkew(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.app.DownloadManager: int remove(long[])>:<public transient>:<android.app.DownloadManager>
<android.os.storage.IMountService.Stub.Proxy: void setUsbMassStorageEnabled(boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ApplicationErrorReport.AnrInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.net.UidRange: java.lang.String toString()>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.net.wifi.IWifiScanner.Stub.Proxy: android.os.Messenger getMessenger()>:<public>:<android.net.wifi.IWifiScanner.Stub.Proxy:android.net.wifi.IWifiScanner>
<android.os.Debug: java.lang.String fixTraceName(java.lang.String)>:<private static>:<android.os.Debug>
<android.graphics.Canvas.CanvasFinalizer: void dispose()>:<public>:<android.graphics.Canvas.CanvasFinalizer>
<android.renderscript.Float2: void mul(float)>:<public>:<android.renderscript.Float2>
<android.renderscript.Short4: short get(int)>:<public>:<android.renderscript.Short4>
<android.os.Parcel: void nativeDestroy(long)>:<private static native>:<android.os.Parcel>
<android.opengl.GLLogWrapper: void glPopMatrix()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.LauncherActivity.ActivityAdapter: int getCount()>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Long3: void add(long)>:<public>:<android.renderscript.Long3>
<android.accessibilityservice.IAccessibilityServiceClient: void init(android.accessibilityservice.IAccessibilityServiceConnection,int,android.os.IBinder)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.os.WorkSource: boolean updateUidsLocked(android.os.WorkSource,boolean,boolean)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.database.CursorWindow: boolean putLong(long,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.PorterDuffColorFilter: boolean equals(java.lang.Object)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES20: int glCreateShader(int)>:<public static native>:<android.opengl.GLES20>
<android.app.LoaderManager: void enableDebugLogging(boolean)>:<public static>:<android.app.LoaderManager>
<android.net.Uri: java.util.List getPathSegments()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.filterfw.geometry.Rectangle: void <init>()>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.transition.Transition: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.drawable.BitmapDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.LoaderManagerImpl: java.lang.String toString()>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.R.layout: void <init>()>:<public>:<android.R.layout>
<android.net.SamplingDataTracker: void resetSamplingData()>:<public>:<android.net.SamplingDataTracker>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: void onDestroy(boolean)>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.os.BatteryStats: int getNumDischargeStepDurations()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.mtp.MtpServer: void native_send_device_property_changed(int)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.app.ActivityThread: void handleDestroyActivity(android.os.IBinder,boolean,int,boolean)>:<private>:<android.app.ActivityThread>
<android.net.http.AndroidHttpClient: void <clinit>()>:<static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkTemplate.1: void <init>()>:<>:<android.net.NetworkTemplate.1:android.os.Parcelable.Creator>
<android.os.ParcelFileDescriptor: long seekTo(long)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.IAppTask.Stub.Proxy: void setExcludeFromRecents(boolean)>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.app.Notification.Builder: int getBaseLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.net.wifi.WifiInfo: void reset()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.Path: void native_addArc(long,float,float,float,float,float,float)>:<private static native>:<android.graphics.Path>
<android.app.MediaRouteButton: void jumpDrawablesToCurrentState()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.SearchDialog: void onStart()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.renderscript.RenderScript: void nProgramBindConstants(long,int,long)>:<>:<android.renderscript.RenderScript>
<android.app.LauncherActivity.ActivityAdapter: long getItemId(int)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)>:<protected>:<android.filterfw.core.Frame>
<android.app.IApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.mtp.MtpDevice: void <init>(android.hardware.usb.UsbDevice)>:<public>:<android.mtp.MtpDevice>
<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.os.BatteryStats.HistoryItem: boolean same(android.os.BatteryStats.HistoryItem)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnAllocationGetType(long,long)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.Element.1: void <clinit>()>:<static>:<android.renderscript.Element.1>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>:<public>:<android.appwidget.AppWidgetHost>
<android.graphics.Matrix.1: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.database.AbstractCursor: java.lang.String getString(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ExitTransitionCoordinator.1: void run()>:<public>:<android.app.ExitTransitionCoordinator.1:java.lang.Runnable>
<android.app.ApplicationPackageManager.ResourceName: void <init>(android.content.pm.ApplicationInfo,int)>:<>:<android.app.ApplicationPackageManager.ResourceName>
<android.app.IUiAutomationConnection: void shutdown()>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.renderscript.Long3: void setAt(int,long)>:<public>:<android.renderscript.Long3>
<android.print.PageRange: void <init>(android.os.Parcel)>:<private>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.webkit.WebView.PrivateAccess: void overScrollBy(int,int,int,int,int,int,int,int,boolean)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.net.NetworkQuotaInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkQuotaInfo.1:android.os.Parcelable.Creator>
<android.app.admin.IDevicePolicyManager: long getPasswordExpiration(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>:<public static>:<android.filterfw.format.ImageFormat>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.WorkSource: boolean remove(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.net.http.RequestQueue.ActivePool: void logState()>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid access.002(android.net.wifi.WifiInfo,android.net.wifi.WifiSsid)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.Int3: int length()>:<public>:<android.renderscript.Int3>
<android.app.ContextImpl: void startActivity(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.INotificationManager.Stub.Proxy: int getPackagePriority(java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.IWifiManager: void stopWifi()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.ActivityThread.ApplicationThread: void dumpMemInfo(java.io.PrintWriter,android.os.Debug.MemoryInfo,boolean,boolean,boolean)>:<private>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.app.ActivityThread.StopInfo: void run()>:<public>:<android.app.ActivityThread.StopInfo:java.lang.Runnable>
<android.app.ActivityThread: void access.1900(android.app.ActivityThread,android.app.ActivityThread.AppBindData)>:<static>:<android.app.ActivityThread>
<android.database.SQLException: void <init>()>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLLogWrapper: void glLightx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.FieldPacker: android.renderscript.Double2 subDouble2()>:<public>:<android.renderscript.FieldPacker>
<android.net.UidRange: int hashCode()>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.app.NativeActivity: void onWindowFocusChangedNative(long,boolean)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.PersistableBundle: void <init>(java.util.Map)>:<private>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.os.storage.IMountShutdownObserver.Stub: void <init>()>:<public>:<android.os.storage.IMountShutdownObserver.Stub:android.os.Binder,android.os.storage.IMountShutdownObserver>
<android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)>:<static>:<android.transition.TranslationAnimationCreator>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>:<public final>:<android.os.Parcel>
<android.os.BatteryStats.HistoryTag: void <init>()>:<public>:<android.os.BatteryStats.HistoryTag>
<android.graphics.drawable.RippleBackground.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.graphics.drawable.RippleBackground.2:android.animation.AnimatorListenerAdapter>
<android.opengl.GLLogWrapper: void glFrustumx(int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glGenerateMipmapOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.BaseNetworkStateTracker: void setUserDataEnable(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.INetworkStatsSession.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkStatsSession.Stub:android.os.Binder,android.net.INetworkStatsSession>
<android.os.IMultiWinService: int getTopAreaLaunchFlag()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.database.sqlite.SQLiteQueryBuilder: void validateQuerySql(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteQueryBuilder>
<android.database.CursorJoiner: void incrementCursors()>:<private>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ActivityThread.ApplicationThread: void <init>(android.app.ActivityThread,android.app.ActivityThread.1)>:<>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.graphics.NinePatch: void nativeFinalize(long)>:<private static native>:<android.graphics.NinePatch>
<android.os.PowerManager.BacklightBrightness: void <init>()>:<public>:<android.os.PowerManager.BacklightBrightness>
<android.webkit.IWebViewUpdateService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.webkit.IWebViewUpdateService.Stub.Proxy:android.webkit.IWebViewUpdateService>
<android.graphics.drawable.RotateDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int hashCode()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VPath: java.lang.String getPathName()>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.app.RemoteInput: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle)>:<private>:<android.app.RemoteInput:android.os.Parcelable>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.JsDialogHelper: java.lang.String getJsDialogTitle(android.content.Context)>:<private>:<android.webkit.JsDialogHelper>
<android.net.wifi.RttManager: void validateChannel()>:<private>:<android.net.wifi.RttManager>
<android.os.MessageQueue: void removeSyncBarrier(int)>:<>:<android.os.MessageQueue>
<android.accounts.AccountManager.AmsTask.1: android.os.Bundle call()>:<public>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.mtp.MtpPropertyList: void setResult(int)>:<public>:<android.mtp.MtpPropertyList>
<android.os.BatteryStats: int getWifiStateCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.AndroidHttpClient.2: org.apache.http.protocol.HttpContext createHttpContext()>:<protected>:<android.net.http.AndroidHttpClient.2:org.apache.http.impl.client.DefaultHttpClient,org.apache.http.impl.client.AbstractHttpClient>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.hwcontrol.HwWidgetFactory: boolean checkIsHwTheme(android.content.Context,android.util.AttributeSet)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.renderscript.Float2: android.renderscript.Float2 add(android.renderscript.Float2,float)>:<public static>:<android.renderscript.Float2>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.HwFindActionModeCallback: void findNext(boolean)>:<private>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.os.FileObserver.ObserverThread: int startWatching(int,java.lang.String,int)>:<private native>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.net.http.RequestQueue.1: void <init>(android.net.http.RequestQueue)>:<>:<android.net.http.RequestQueue.1:android.content.BroadcastReceiver>
<android.net.MobileDataStateTracker: void defaultRouteSet(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.IServiceManager: java.lang.String[] listServices()>:<public abstract>:<android.os.IServiceManager:android.os.IInterface>
<android.print.PrintDocumentInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(float,float)>:<public>:<android.filterfw.geometry.Quad>
<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Instrumentation.EmptyRunnable: void <init>(android.app.Instrumentation.1)>:<>:<android.app.Instrumentation.EmptyRunnable:java.lang.Runnable>
<android.drm.DrmInfoStatus: void <init>(int,int,android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmInfoStatus>
<android.app.ActivityManager.TaskDescription: java.lang.String toString()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.ddm.DdmHandleProfiling: void disconnected()>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.Uri.PathSegments: void <clinit>()>:<static>:<android.net.Uri.PathSegments:java.util.AbstractList,java.util.AbstractCollection,java.util.RandomAccess>
<android.hsm.MediaTransactWrapper: java.lang.String playingMusicUidStr()>:<private static>:<android.hsm.MediaTransactWrapper>
<android.app.VoiceInteractor.CommandRequest: void <init>(java.lang.String,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CommandRequest:android.app.VoiceInteractor.Request>
<android.os.Process: long getTotalMemory()>:<public static final native>:<android.os.Process>
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.graphics.RectF: boolean contains(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.IConnectivityManager.Stub: void <init>()>:<public>:<android.net.IConnectivityManager.Stub:android.os.Binder,android.net.IConnectivityManager>
<android.graphics.Color: void colorToHSV(int,float[])>:<public static>:<android.graphics.Color>
<android.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.LoaderManager>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.LocalSocketImpl: int read_native(java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.graphics.Region: void nativeSetRegion(long,long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.net.Uri.PathSegments: void <init>(java.lang.String[],int)>:<>:<android.net.Uri.PathSegments:java.util.AbstractList,java.util.AbstractCollection,java.util.RandomAccess>
<android.net.wifi.PPPOEInfo.Status: android.net.wifi.PPPOEInfo.Status fromInt(int)>:<public static>:<android.net.wifi.PPPOEInfo.Status:java.lang.Enum>
<android.net.NetworkInfo: boolean isAvailable()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<android.app.Fragment: boolean equals(java.lang.Object)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.DownloadManager.CursorTranslator: void <clinit>()>:<static>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.os.StrictMode.9: android.view.IWindowManager create()>:<protected>:<android.os.StrictMode.9:android.util.Singleton>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.renderscript.Int3: void div(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.os.MemoryFile.MemoryInputStream: boolean markSupported()>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.webkit.WebView.PrivateAccess: boolean super_requestFocus(int,android.graphics.Rect)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.filterfw.core.ShaderProgram: boolean setShaderVertexCount(int)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>:<public>:<android.net.ConnectivityManager>
<android.net.NetworkPolicy: int compareTo(java.lang.Object)>:<public volatile>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.app.Fragment: void setSharedElementReturnTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.drm.ProcessedData: void <init>(byte[],java.lang.String)>:<>:<android.drm.ProcessedData>
<android.app.PendingIntent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.PendingIntent.1:android.os.Parcelable.Creator>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.graphics.TableMaskFilter: void <init>(long)>:<private>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.net.VpnService.Builder: void <init>(android.net.VpnService)>:<public>:<android.net.VpnService.Builder>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES31: void glSampleMaski(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetherableUsbRegexs()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.webkit.WebView: int access.2102(android.webkit.WebView,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Short4: short length()>:<public>:<android.renderscript.Short4>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.app.FragmentManagerImpl.3: void <init>(android.app.FragmentManagerImpl,java.lang.String,int)>:<>:<android.app.FragmentManagerImpl.3:java.lang.Runnable>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.storage.IMountServiceListener.Stub.Proxy: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.os.storage.IMountServiceListener.Stub.Proxy:android.os.storage.IMountServiceListener>
<android.os.Process: void setThreadScheduler(int,int,int)>:<public static final native>:<android.os.Process>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.NetworkCapabilities: int[] getTransportTypes()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.ActivityManagerProxy: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.nsd.NsdServiceInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.nsd.NsdServiceInfo.1:android.os.Parcelable.Creator>
<android.database.SQLException: void <init>(java.lang.String)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>:<public static native>:<android.os.Debug>
<android.graphics.drawable.VectorDrawable.VGroup: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.RouteInfo: void <init>(java.net.InetAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.MailTo: java.lang.String getCc()>:<public>:<android.net.MailTo>
<android.hwtheme.HwThemeManager.IHwThemeManager: void setThemeFontOnConfigChg(android.content.res.Configuration)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.sax.Children.Child: void <init>(android.sax.Element,java.lang.String,java.lang.String,int,int)>:<>:<android.sax.Children.Child:android.sax.Element>
<android.database.sqlite.SQLiteConnectionPool: void open()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>:<public>:<android.app.Notification.Action.Builder>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDMultiply()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.dhcp.DhcpPacket: void addTlvEnd(java.nio.ByteBuffer)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.http.EventHandler: void headers(android.net.http.Headers)>:<public abstract>:<android.net.http.EventHandler>
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>:<protected>:<android.net.LocalSocketImpl>
<android.app.ContextImpl.49: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.49:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Short2: short get(int)>:<public>:<android.renderscript.Short2>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,android.app.LoadedApk)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.IActivityManager: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.Uri.StringUri: int describeContents()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.drm.DrmStore.Action: void <init>()>:<public>:<android.drm.DrmStore.Action>
<android.app.backup.FileBackupHelperBase: void <init>(android.content.Context)>:<>:<android.app.backup.FileBackupHelperBase>
<android.app.IActivityManager: void setRequestedOrientation(android.os.IBinder,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkStats.Entry: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkStats.Entry>
<android.net.Uri.PathPart: void <clinit>()>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.net.wifi.RttManager.RttListener: void onFailure(int,java.lang.String)>:<public abstract>:<android.net.wifi.RttManager.RttListener>
<android.app.ActivityManager.AppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>:<public>:<android.app.ActivityManager.AppTask>
<android.app.LauncherActivity.ActivityAdapter: void bindView(android.view.View,android.app.LauncherActivity.ListItem)>:<private>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.database.sqlite.SQLiteDebug: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDebug>
<android.net.INetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.renderscript.Short4: void negate()>:<public>:<android.renderscript.Short4>
<android.app.ActivityManager: java.util.List getAppTasks()>:<public>:<android.app.ActivityManager>
<android.webkit.HwFindActionModeCallback: android.widget.ImageView access.000(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.os.StrictMode: boolean access.400()>:<static>:<android.os.StrictMode>
<android.graphics.Matrix: void setSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.app.ContextImpl: java.lang.String getPackageResourcePath()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.filterfw.GraphEnvironment: android.filterfw.core.FilterGraph getGraph(int)>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String)>:<public>:<android.renderscript.Element.Builder>
<android.graphics.Paint: int native_getStrokeJoin(long)>:<private static native>:<android.graphics.Paint>
<android.hwcontrol.HwWidgetFactory.Factory: android.hwcontrol.HwWidgetFactory.HwToast newHwToast(android.content.Context,android.widget.Toast,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.app.NotificationManager: android.content.ComponentName getEffectsSuppressor()>:<public>:<android.app.NotificationManager>
<android.opengl.GLErrorWrapper: void glTexParameterx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.SurfaceTexture: void updateTexImage()>:<public>:<android.graphics.SurfaceTexture>
<android.graphics.Typeface: int getStyle()>:<public>:<android.graphics.Typeface>
<android.renderscript.Script: void setVar(int,boolean)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.LocalSocketImpl: java.lang.Object access.500(android.net.LocalSocketImpl)>:<static>:<android.net.LocalSocketImpl>
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.netdetect.HwCustNetDetectServiceImpl: android.net.wifi.WifiManager access.200(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.net.http.Headers: java.lang.String getWwwAuthenticate()>:<public>:<android.net.http.Headers>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle addLine(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.app.backup.IBackupManager: java.lang.String[] listAllTransports()>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.WifiManager: boolean isDeviceToDeviceRttSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress access.202(android.net.nsd.NsdServiceInfo,java.net.InetAddress)>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1402(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.Notification.Builder: int getBigPictureLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.accounts.AccountManager.9: void doWork()>:<public>:<android.accounts.AccountManager.9:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.os.BaseBundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>:<>:<android.os.BaseBundle>
<android.graphics.Matrix: void finalizer(long)>:<private static native>:<android.graphics.Matrix>
<android.net.RouteInfo: boolean isHost()>:<private>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.ContextImpl.8: void <init>()>:<>:<android.app.ContextImpl.8:android.app.ContextImpl.ServiceFetcher>
<android.net.Uri.AbstractHierarchicalUri: android.net.Uri.Part getUserInfoPart()>:<private>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.app.Activity: void performPause()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.TimePickerDialog: void updateTime(int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.net.wifi.HiSiWifiComm: void changeShowDialogFlag(java.lang.String,boolean)>:<public>:<android.net.wifi.HiSiWifiComm>
<android.app.backup.IRestoreSession.Stub: android.os.IBinder asBinder()>:<public>:<android.app.backup.IRestoreSession.Stub:android.os.Binder,android.app.backup.IRestoreSession>
<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.BaseNetworkStateTracker: void setDependencyMet(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.filterfw.core.GLFrame: void focus()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.ISearchManagerCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.ISearchManagerCallback.Stub.Proxy:android.app.ISearchManagerCallback>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(java.io.FileDescriptor)>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.app.SharedPreferencesImpl: boolean contains(java.lang.String)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.net.wifi.WifiScanner.ParcelableScanResults.1: android.net.wifi.WifiScanner.ParcelableScanResults createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults.1:android.os.Parcelable.Creator>
<android.os.Debug: void changeDebugPort(int)>:<public static>:<android.os.Debug>
<android.webkit.IWebViewUpdateService.Stub: void <init>()>:<public>:<android.webkit.IWebViewUpdateService.Stub:android.os.Binder,android.webkit.IWebViewUpdateService>
<android.renderscript.Allocation: void copyTo(java.lang.Object,android.renderscript.Element.DataType,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.ScoredNetwork: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.net.ConnectivityManager: java.lang.String getMobileRedirectedProvisioningUrl()>:<public>:<android.net.ConnectivityManager>
<android.renderscript.RenderScript: void nAllocationRead(long,java.lang.Object,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.WifiManager: java.lang.Object getSlistenermaplock()>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.GLEnvironment: boolean nativeInitWithNewContext()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.os.IPermissionController.Stub: android.os.IPermissionController asInterface(android.os.IBinder)>:<public static>:<android.os.IPermissionController.Stub:android.os.Binder,android.os.IPermissionController>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.app.WallpaperManager>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.VectorDrawable.VPath: android.util.PathParser.PathDataNode[] getPathData()>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.print.PrintJobId: int hashCode()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.app.IActivityContainer.Stub.Proxy: void release()>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.app.ListActivity: int getSelectedItemPosition()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.backup.BackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.Uri.StringUri: boolean isRelative()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.BackStackRecord: android.app.FragmentTransaction attach(android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.renderscript.Short2: void addMultiple(android.renderscript.Short2,short)>:<public>:<android.renderscript.Short2>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.UserHandle: boolean isIsolated(int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.os.FileObserver.ObserverThread: void run()>:<public>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.app.Dialog: void openContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean resetPassword(java.lang.String,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.RenderScript: int nContextPeekMessage(long,int[])>:<native>:<android.renderscript.RenderScript>
<android.accounts.AccountAuthenticatorResponse.1: android.accounts.AccountAuthenticatorResponse[] newArray(int)>:<public>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.app.ApplicationPackageManager.ResourceName: void <init>(android.content.pm.ComponentInfo,int)>:<>:<android.app.ApplicationPackageManager.ResourceName>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,java.lang.String,int,int)>:<public final>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Parcel: java.io.FileDescriptor nativeReadFileDescriptor(long)>:<private static native>:<android.os.Parcel>
<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>:<public final>:<android.app.ActivityThread>
<android.graphics.drawable.VectorDrawable.VPathRenderer: android.graphics.drawable.VectorDrawable.VGroup access.000(android.graphics.drawable.VectorDrawable.VPathRenderer)>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsFromOverlay()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.IConnectivityManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.SurfaceTexture: void finalize()>:<protected>:<android.graphics.SurfaceTexture>
<android.app.IActivityController.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.os.BatteryStats: void commitCurrentHistoryBatchLocked()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocketImpl>
<android.app.ContextImpl: android.view.Display access.100(android.app.ContextImpl)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Allocation: void finalize()>:<protected>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.AbstractWindowedCursor: void <init>()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.Instrumentation: android.content.Context getTargetContext()>:<public>:<android.app.Instrumentation>
<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.WifiCHRStateManager: void syncSetScanResultsList(java.util.List)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.filterfw.core.OutputPort: void clear()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.os.FileObserver.ObserverThread: void stopWatching(int)>:<public>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.graphics.drawable.BitmapDrawable.BitmapState: void <init>(android.graphics.drawable.BitmapDrawable.BitmapState)>:<>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.Builder: android.app.Notification getNotification()>:<public>:<android.app.Notification.Builder>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.Canvas: void nativeSetDrawFilter(long,long)>:<private static native>:<android.graphics.Canvas>
<android.app.ActivityManagerProxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.IAccountAuthenticator: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.transition.Rotate: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Rotate:android.transition.Transition>
<android.print.IPrintManager: java.util.List getInstalledPrintServices(int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.NativeActivity.NativeContentView:android.view.View>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.net.NetworkMisc: void <clinit>()>:<static>:<android.net.NetworkMisc:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordQuality(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.net.SamplingDataTracker: long getSampledRxPacketErrorCount()>:<public>:<android.net.SamplingDataTracker>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>:<public static>:<android.graphics.RectF:android.os.Parcelable>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager)>:<public>:<android.accounts.AccountManager>
<android.os.Process: void setThreadGroup(int,int)>:<public static final native>:<android.os.Process>
<android.app.IProcessObserver.Stub: void <init>()>:<public>:<android.app.IProcessObserver.Stub:android.os.Binder,android.app.IProcessObserver>
<android.graphics.Paint: float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int)>:<private static native>:<android.graphics.Paint>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.LinkAddress.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.LinkAddress.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>:<public static>:<android.app.AppOpsManager>
<android.app.ContextImpl.34: void <init>()>:<>:<android.app.ContextImpl.34:android.app.ContextImpl.ServiceFetcher>
<android.app.ListActivity: void onContentChanged()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimatedStateListDrawable: void clearMutated()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.IAlarmManager.Stub.Proxy: boolean setTime(long)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.database.sqlite.SQLiteConnection.OperationLog: void endOperation(int)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.filterfw.GraphEnvironment: int loadGraph(android.content.Context,int)>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.graphics.drawable.VectorDrawable.VFullPath: void setTrimPathEnd(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.database.CursorWrapper: int getCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.net.IConnectivityManager.Stub.Proxy: int tether(java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Notification.Builder: boolean showsTimeOrChronometer()>:<private>:<android.app.Notification.Builder>
<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.UiAutomation: long access.202(android.app.UiAutomation,long)>:<static>:<android.app.UiAutomation>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Matrix: boolean native_invert(long,long)>:<private static native>:<android.graphics.Matrix>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String selectBackupTransport(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.ContextImpl.9: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.9:android.app.ContextImpl.ServiceFetcher>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getUserInfo()>:<public>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.print.IPrintManager.Stub.Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.app.ActivityManagerProxy: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.Filter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>:<protected>:<android.filterfw.core.Filter>
<android.app.ActivityGroup: void <init>()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.ConnectivityManager: boolean setProcessDefaultNetworkForHostResolution(android.net.Network)>:<public static>:<android.net.ConnectivityManager>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.webkit.WebViewFactory: java.lang.String getWebViewPackageName()>:<public static>:<android.webkit.WebViewFactory>
<android.net.dhcp.DhcpStateMachine: void onDeclineReceived(byte[],java.net.InetAddress)>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.net.Uri.PathPart: void <init>(java.lang.String,java.lang.String)>:<private>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>:<public>:<android.webkit.ConsoleMessage>
<android.renderscript.Script.LaunchOptions: int access.300(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.app.ApplicationPackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.WifiLinkQualityInfo: long getTxBad()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.Matrix: void setScale(float,float)>:<public>:<android.graphics.Matrix>
<android.net.StaticIpConfiguration: boolean equals(java.lang.Object)>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.net.EthernetManager: void <init>(android.content.Context,android.net.IEthernetManager)>:<public>:<android.net.EthernetManager>
<android.app.Notification.Builder: android.app.Notification.Builder setShowWhen(boolean)>:<public>:<android.app.Notification.Builder>
<android.app.admin.DevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.print.ILayoutResultCallback: void onLayoutStarted(android.os.ICancellationSignal,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.app.SharedPreferencesImpl.1: void run()>:<public>:<android.app.SharedPreferencesImpl.1:java.lang.Thread>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedRegistrationObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.os.Parcel: void nativeWriteFileDescriptor(long,java.io.FileDescriptor)>:<private static native>:<android.os.Parcel>
<android.mtp.MtpStorage: boolean isRemovable()>:<public final>:<android.mtp.MtpStorage>
<android.app.ActivityView: int access.200(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptGroup.ConnectLine: void <init>(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.FieldID)>:<>:<android.renderscript.ScriptGroup.ConnectLine>
<android.transition.Transition: java.util.List getTargetIds()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.CookieSyncManager: void checkInstanceIsAllowed()>:<private static>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,int)>:<public>:<android.net.ConnectivityManager>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>:<public>:<android.app.LocalActivityManager>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareDnses(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.NetworkCapabilities: int[] getCapabilities()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.FragmentManagerImpl.2: void <init>(android.app.FragmentManagerImpl)>:<>:<android.app.FragmentManagerImpl.2:java.lang.Runnable>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.ScaleDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.RenderScript: void rsnProgramBindTexture(long,long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.net.VpnService: boolean protect(java.net.DatagramSocket)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Path.FillType: void <clinit>()>:<static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAspectScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>:<public static>:<android.app.ActivityOptions>
<android.graphics.Paint: void <init>(int)>:<public>:<android.graphics.Paint>
<android.webkit.WebViewFragment: void onPause()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.net.Network.2: android.net.Network createFromParcel(android.os.Parcel)>:<public>:<android.net.Network.2:android.os.Parcelable.Creator>
<android.os.IPowerManager: void stopWakeUpReady(long,boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDevice: void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection.OperationLog: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.net.wifi.WifiLog.WiFiExceptionType: android.net.wifi.WifiLog.WiFiExceptionType[] values()>:<public static>:<android.net.wifi.WifiLog.WiFiExceptionType:java.lang.Enum>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String getMobileProvisioningUrl()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(float,float,float,float)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.ContextImpl.53: void <init>()>:<>:<android.app.ContextImpl.53:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.WifiScanner: void startTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)>:<public>:<android.net.wifi.WifiScanner>
<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.net.INetworkScoreService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.app.BackStackState: void <init>(android.os.Parcel)>:<public>:<android.app.BackStackState:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.filterfw.core.NativeFrame: int nativeIntSize()>:<private static native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.trust.TrustManager.1: void <init>(android.app.trust.TrustManager,android.app.trust.TrustManager.TrustListener)>:<>:<android.app.trust.TrustManager.1:android.app.trust.ITrustListener.Stub,android.os.Binder>
<android.app.Notification.WearableExtender: boolean getHintShowBackgroundOnly()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.transition.ChangeBounds.9: void onTransitionResume(android.transition.Transition)>:<public>:<android.transition.ChangeBounds.9:android.transition.Transition.TransitionListenerAdapter>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.filterfw.core.Frame: int incRefCount()>:<final>:<android.filterfw.core.Frame>
<android.opengl.GLLogWrapper: void glMatrixMode(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ContextImpl.27: void <init>()>:<>:<android.app.ContextImpl.27:android.app.ContextImpl.ServiceFetcher>
<android.os.SystemVibrator: void <init>()>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,int)>:<public>:<android.app.Notification.Builder>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: android.app.HwCustNonHardwareAcceleratedPackagesManager getDefault()>:<public static>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory sharedFactory()>:<public static>:<android.filterfw.core.FilterFactory>
<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.storage.IMountService: void unmountVolume(java.lang.String,boolean,boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.database.CursorWrapper: int getType(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>:<private>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.http.HttpAuthHeader: int getScheme()>:<public>:<android.net.http.HttpAuthHeader>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionStart(android.transition.Transition)>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager.ActionListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.IpPrefix: byte[] getRawAddress()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.print.PrintJobId.1: android.print.PrintJobId createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.print.IWriteResultCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.graphics.drawable.ClipDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.SearchDialog.SearchBar:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.HwCustSvcFactory: void <init>()>:<public>:<android.app.HwCustSvcFactory>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.graphics.RectF: boolean intersects(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.ComposeShader: android.graphics.Shader copy()>:<protected>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.app.FragmentManagerImpl: void dispatchDestroy()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.IUiModeManager.Stub.Proxy: int getNightMode()>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.app.admin.IDevicePolicyManager: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction.Constants)>:<public>:<android.renderscript.ProgramVertexFixedFunction:android.renderscript.ProgramVertex,android.renderscript.Program,android.renderscript.BaseObj>
<android.app.ActivityThread.ProviderClientRecord: void <init>(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager.ContentProviderHolder)>:<>:<android.app.ActivityThread.ProviderClientRecord>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void recursiveApplyTheme(android.graphics.drawable.VectorDrawable.VGroup,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.graphics.PathMeasure: boolean native_nextContour(long)>:<private static native>:<android.graphics.PathMeasure>
<android.filterfw.core.GenerateFieldPort: java.lang.String name()>:<public abstract>:<android.filterfw.core.GenerateFieldPort:java.lang.annotation.Annotation>
<android.opengl.GLErrorWrapper: void glAlphaFuncx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pConfig.1: android.net.wifi.p2p.WifiP2pConfig createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pConfig.1:android.os.Parcelable.Creator>
<android.os.SystemService: java.lang.Object access.100()>:<static>:<android.os.SystemService>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int,int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.transition.Transition.2: void <init>(android.transition.Transition,android.util.ArrayMap)>:<>:<android.transition.Transition.2:android.animation.AnimatorListenerAdapter>
<android.graphics.drawable.VectorDrawable: int access.800(int,float)>:<static>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.TransitionSet clone()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.BatteryStats: long computeBatteryUptime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: void glPolygonOffset(float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void <init>(android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources)>:<>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintJobInfo.Builder: void setCopies(int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.app.FragmentManagerImpl.5: void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment)>:<>:<android.app.FragmentManagerImpl.5:android.animation.AnimatorListenerAdapter>
<android.transition.ChangeBounds.2: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.2:android.util.Property>
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.SearchDialog: boolean isLandscapeMode(android.content.Context)>:<static>:<android.app.SearchDialog:android.app.Dialog>
<android.net.SamplingDataTracker: long getSampledRxPacketCount()>:<public>:<android.net.SamplingDataTracker>
<android.app.ContextImpl.47: void <init>()>:<>:<android.app.ContextImpl.47:android.app.ContextImpl.ServiceFetcher>
<android.os.RemoteCallbackList: void <init>()>:<public>:<android.os.RemoteCallbackList>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.print.IPrintManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.renderscript.ProgramFragmentFixedFunction.1: void <clinit>()>:<static>:<android.renderscript.ProgramFragmentFixedFunction.1>
<android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>:<private static>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.print.PageRange.1: android.print.PageRange createFromParcel(android.os.Parcel)>:<public>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.renderscript.Long3: void negate()>:<public>:<android.renderscript.Long3>
<android.os.UserManager: java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.filterfw.geometry.Quad: float getBoundingHeight()>:<public>:<android.filterfw.geometry.Quad>
<android.graphics.drawable.AnimatedRotateDrawable: void start()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.Parcel: void writeString(java.lang.String)>:<public final>:<android.os.Parcel>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar.Tab>
<android.hsm.HwSystemManager.HsmDefImpl: void <init>()>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.webkit.WebViewClient.3: void onClick(android.content.DialogInterface,int)>:<public>:<android.webkit.WebViewClient.3:android.content.DialogInterface.OnClickListener>
<android.app.LoadedApk.ServiceDispatcher: void <init>(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable.AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable.1)>:<>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.TokenWatcher: void acquired()>:<public abstract>:<android.os.TokenWatcher>
<android.net.wifi.WifiSsid: void <init>()>:<private>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.app.ContextImpl.40: void <init>()>:<>:<android.app.ContextImpl.40:android.app.ContextImpl.ServiceFetcher>
<android.os.INetworkManagementService.Stub.Proxy: void setFirewallInterfaceRule(java.lang.String,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.Matrix3f: void set(int,int,float)>:<public>:<android.renderscript.Matrix3f>
<android.app.ProfilerInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.os.UserHandle: void <clinit>()>:<static>:<android.os.UserHandle:android.os.Parcelable>
<android.net.wifi.BatchedScanResult.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.BatchedScanResult.1:android.os.Parcelable.Creator>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.net.wifi.PPPOEInfo: void <clinit>()>:<static>:<android.net.wifi.PPPOEInfo:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: void setAllowScansWithTraffic(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ActivityThread: void handleWindowVisibility(android.os.IBinder,boolean)>:<private>:<android.app.ActivityThread>
<android.net.Uri.OpaqueUri: int getPort()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.net.SntpClient: boolean requestTime(java.lang.String,int)>:<public>:<android.net.SntpClient>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.SharedPreferencesImpl.1: void <init>(android.app.SharedPreferencesImpl,java.lang.String)>:<>:<android.app.SharedPreferencesImpl.1:java.lang.Thread>
<android.app.ContextImpl: void startActivities(android.content.Intent[],android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.http.SslError: java.lang.String toString()>:<public>:<android.net.http.SslError>
<android.webkit.WebViewProvider: void setFindListener(android.webkit.WebView.FindListener)>:<public abstract>:<android.webkit.WebViewProvider>
<android.accessibilityservice.AccessibilityServiceInfo: void setComponentName(android.content.ComponentName)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element F64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ApplicationErrorReport.1: android.app.ApplicationErrorReport createFromParcel(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>:<public>:<android.accounts.AccountManager>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hwtheme.HwThemeManagerDummy: boolean makeIconCache(boolean)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.transition.Transition: void end()>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.database.BulkCursorDescriptor.1: void <init>()>:<>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>:<public static>:<android.graphics.BitmapFactory>
<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,android.net.Network,java.lang.String,java.lang.String)>:<public>:<android.net.NetworkState:android.os.Parcelable>
<android.webkit.WebViewDatabase: void clearFormData()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.net.ConnectivityManager: android.net.Network getNetworkForTypeWifi()>:<public>:<android.net.ConnectivityManager>
<android.graphics.Matrix: boolean native_isIdentity(long)>:<private static native>:<android.graphics.Matrix>
<android.print.PrintJobInfo: void setLabel(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.Presentation: boolean isConfigurationStillValid()>:<private>:<android.app.Presentation:android.app.Dialog>
<android.transition.ChangeImageTransform.2: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeImageTransform.2:android.util.Property>
<android.net.IConnectivityManager: void captivePortalCheckCompleted(android.net.NetworkInfo,boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glLoadPaletteFromModelViewMatrixOES()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.BaseObj: void setName(java.lang.String)>:<public>:<android.renderscript.BaseObj>
<android.renderscript.Double2: android.renderscript.Double2 sub(android.renderscript.Double2,android.renderscript.Double2)>:<public static>:<android.renderscript.Double2>
<android.mtp.MtpDevice: byte[] native_get_thumbnail(int)>:<private native>:<android.mtp.MtpDevice>
<android.net.wifi.WifiScanner.ParcelableScanResults: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable.1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.1:android.graphics.drawable.Drawable.Callback>
<android.net.NetworkStats: android.net.NetworkStats clone()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.net.UidRange: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.os.StrictMode: void <clinit>()>:<static>:<android.os.StrictMode>
<android.app.Notification.Builder: android.app.Notification.Builder setContent(android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.http.HttpsConnection.1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>:<public>:<android.net.http.HttpsConnection.1:javax.net.ssl.X509TrustManager>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onEndBackup()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.app.IStopUserCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IStopUserCallback.Stub.Proxy:android.app.IStopUserCallback>
<android.database.CursorWindow: int getInt(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.transition.Transition: void clearValues(boolean)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.StateListDrawable.StateListState: void growArray(int,int)>:<public>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.p2p.WifiP2pGroup: void setOwner(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.Paint: boolean hasShadowLayer()>:<public>:<android.graphics.Paint>
<android.graphics.drawable.RippleDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypesAsUser(int)>:<public>:<android.accounts.AccountManager>
<android.os.FileUtils: boolean isFilenameSafe(java.io.File)>:<public static>:<android.os.FileUtils>
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)>:<public>:<android.net.http.Headers>
<android.database.AbstractCursor: short getShort(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.backup.IBackupManager: void agentConnected(java.lang.String,android.os.IBinder)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean)>:<public>:<android.os.UserManager>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.transition.ChangeBounds: boolean getResizeClip()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getConfirmLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Program: android.renderscript.Program.TextureType getTextureType(int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.Activity: boolean requestVisibleBehind(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.os.UserHandle.1: void <init>()>:<>:<android.os.UserHandle.1:android.os.Parcelable.Creator>
<android.net.LocalSocketImpl.SocketInputStream: void close()>:<public>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.app.admin.DeviceAdminInfo.1: android.app.admin.DeviceAdminInfo[] newArray(int)>:<public>:<android.app.admin.DeviceAdminInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList setSharedElementState(android.os.Bundle,java.util.ArrayList)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.hwtheme.HwThemeManager.IHwThemeManager: void initForThemeFont(android.content.res.Configuration)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.ConnectivityManager: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.http.CharArrayBuffers: char toLower(char)>:<private static>:<android.net.http.CharArrayBuffers>
<android.net.WebAddress: void setHost(java.lang.String)>:<public>:<android.net.WebAddress>
<android.os.IBatteryPropertiesRegistrar.Stub: void <init>()>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub:android.os.Binder,android.os.IBatteryPropertiesRegistrar>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.ClipDrawable.ClipState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Path: void moveTo(float,float)>:<public>:<android.graphics.Path>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,java.lang.Integer)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.os.INetworkActivityListener: void onNetworkActive()>:<public abstract>:<android.os.INetworkActivityListener:android.os.IInterface>
<android.app.DownloadManager: void restartDownload(long[])>:<public transient>:<android.app.DownloadManager>
<android.opengl.EGLObjectHandle: int hashCode()>:<public>:<android.opengl.EGLObjectHandle>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>:<public>:<android.graphics.Paint>
<android.net.wifi.RttManager.ParcelableRttResults: int describeContents()>:<public>:<android.net.wifi.RttManager.ParcelableRttResults:android.os.Parcelable>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Service: void stopForeground(boolean)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,byte[])>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>:<public>:<android.net.ConnectivityManager>
<android.hwtheme.HwThemeManager.IHwThemeManager: int getHwThemeLauncherIconSize(android.app.ActivityManager,android.content.res.Resources)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.webkit.WebView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.INetworkActivityListener.Stub: void <init>()>:<public>:<android.os.INetworkActivityListener.Stub:android.os.Binder,android.os.INetworkActivityListener>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumHeight()>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.io.File)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.net.wifi.WifiNetworkConnectionStatistics.1: android.net.wifi.WifiNetworkConnectionStatistics[] newArray(int)>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics.1:android.os.Parcelable.Creator>
<android.graphics.pdf.PdfDocument: android.graphics.pdf.PdfDocument.Page startPage(android.graphics.pdf.PdfDocument.PageInfo)>:<public>:<android.graphics.pdf.PdfDocument>
<android.net.DhcpResults: boolean hasMeteredHint()>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.graphics.Matrix: void <clinit>()>:<static>:<android.graphics.Matrix>
<android.renderscript.Script.FieldID: void <init>(long,android.renderscript.RenderScript,android.renderscript.Script,int)>:<>:<android.renderscript.Script.FieldID:android.renderscript.BaseObj>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment[] values()>:<public static>:<android.net.IpConfiguration.IpAssignment:java.lang.Enum>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.print.PrintDocumentAdapter: void onStart()>:<public>:<android.print.PrintDocumentAdapter>
<android.renderscript.Byte4: void mul(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.graphics.Canvas: void setNativeBitmap(long)>:<private>:<android.graphics.Canvas>
<android.filterfw.core.FrameFormat: int calcSize(int[])>:<>:<android.filterfw.core.FrameFormat>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.RSTextureView: void <init>(android.content.Context)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.app.DatePickerDialog: void updateTitle(int,int,int)>:<private>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.graphics.drawable.Ripple: void getBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Ripple>
<android.renderscript.Matrix4f: boolean inverseTranspose()>:<public>:<android.renderscript.Matrix4f>
<android.app.Fragment: android.app.Fragment getTargetFragment()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Allocation: void setBitmap(android.graphics.Bitmap)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Instrumentation: void addValue(java.lang.String,int,android.os.Bundle)>:<private>:<android.app.Instrumentation>
<android.app.Fragment: boolean isInLayout()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.YuvImage: int getWidth()>:<public>:<android.graphics.YuvImage>
<android.opengl.GLErrorWrapper: void <init>(javax.microedition.khronos.opengles.GL,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Parcel: void readLongArray(long[])>:<public final>:<android.os.Parcel>
<android.transition.ChangeBounds.3: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.3:android.util.Property>
<android.app.NativeActivity: void onResumeNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.UserHandle: int getUid(int,int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: float getToDegrees()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.LevelListDrawable.LevelListState: void mutate()>:<private>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.os.DropBoxManager: void <init>()>:<protected>:<android.os.DropBoxManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setCameraDisabled(android.content.ComponentName,boolean,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.filterfw.core.MutableFrameFormat: void <init>()>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.net.wifi.WifiCHRStateManager: java.lang.String maskMacAddress(java.lang.String)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.storage.StorageManager.ObbListenerDelegate.1: void <init>(android.os.storage.StorageManager.ObbListenerDelegate,android.os.Looper,android.os.storage.StorageManager)>:<>:<android.os.storage.StorageManager.ObbListenerDelegate.1:android.os.Handler>
<android.app.LoaderManagerImpl.LoaderInfo: void start()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.net.ConnectivityManager: long getLteTotalTxBytes()>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkId(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.net.RssiCurve.1: android.net.RssiCurve[] newArray(int)>:<public>:<android.net.RssiCurve.1:android.os.Parcelable.Creator>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.backup.IBackupManager: void backupNow()>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.renderscript.Double3: android.renderscript.Double3 sub(android.renderscript.Double3,android.renderscript.Double3)>:<public static>:<android.renderscript.Double3>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityThread: void handleOnBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>:<public>:<android.app.ActivityThread>
<android.print.PrintManager: java.util.List getPrintJobs()>:<public>:<android.print.PrintManager>
<android.app.Instrumentation.1MenuRunnable: void run()>:<public>:<android.app.Instrumentation.1MenuRunnable:java.lang.Runnable>
<android.print.PrintAttributes.MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.TrafficStats: void startDataProfiling(android.content.Context)>:<public static>:<android.net.TrafficStats>
<android.graphics.Paint: void set(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.opengl.GLErrorWrapper: boolean glIsBuffer(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Instrumentation.SyncRunnable: void run()>:<public>:<android.app.Instrumentation.SyncRunnable:java.lang.Runnable>
<android.appwidget.AppWidgetProviderInfo.1: android.appwidget.AppWidgetProviderInfo createFromParcel(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.Drawable: int getAlpha()>:<public>:<android.graphics.drawable.Drawable>
<android.filterfw.core.Frame: long getBindingId()>:<public>:<android.filterfw.core.Frame>
<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>:<private>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Element.DataType: void <clinit>()>:<static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.accounts.IAccountManagerResponse.Stub: void <init>()>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.graphics.drawable.ScaleDrawable.ScaleState: void <init>(android.graphics.drawable.ScaleDrawable.ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.AsyncRunner.RunnerResult: void <init>(android.filterfw.core.AsyncRunner)>:<private>:<android.filterfw.core.AsyncRunner.RunnerResult>
<android.app.IActivityManager: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityManagerProxy: void startLockTaskModeOnCurrent()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.NetworkAgent: void sendNetworkInfo(android.net.NetworkInfo)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.app.ContextImpl.54: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.54:android.app.ContextImpl.ServiceFetcher>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>:<public>:<android.net.LocalServerSocket>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.accounts.IAccountManager: android.accounts.Account[] getSharedAccountsAsUser(int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.RouteInfo: boolean isHostRoute()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.Handler.BlockingRunnable: void run()>:<public>:<android.os.Handler.BlockingRunnable:java.lang.Runnable>
<android.os.BatteryStats: long getPhoneSignalScanningTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.StrictMode: long access.1502(long)>:<static>:<android.os.StrictMode>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.filterfw.core.Filter: void addAndSetFinalPorts(android.filterfw.core.KeyValueMap)>:<private final>:<android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glTexGenx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.FieldPacker: void addF32(float)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiEnterpriseConfig: void setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.wifi.RttManager.ParcelableRttResults.1: void <init>()>:<>:<android.net.wifi.RttManager.ParcelableRttResults.1:android.os.Parcelable.Creator>
<android.net.ConnectivityManager: void checkPendingIntent(android.app.PendingIntent)>:<private>:<android.net.ConnectivityManager>
<android.os.PersistableBundle.1: void <init>()>:<>:<android.os.PersistableBundle.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(android.net.wifi.p2p.WifiP2pWfdInfo)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.Notification: java.lang.String access.400(android.app.Notification)>:<static>:<android.app.Notification:android.os.Parcelable>
<android.os.IMultiWinService: void moveTask(int,boolean,int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pManager: void checkServiceInfo(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>:<private static>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.Process: long getFreeMemory()>:<public static final native>:<android.os.Process>
<android.graphics.drawable.GradientDrawable.GradientState: void access.000(android.graphics.drawable.GradientDrawable.GradientState)>:<static>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.net.DhcpStateMachine: void access.1300(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.webkit.SslErrorHandler: void cancel()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.app.IActivityManager: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.shapes.RectShape: void <init>()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.IMultiWinService: boolean isLauncherVisible()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>:<public>:<android.app.Instrumentation>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdminsAsUser(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setMaximumTimeToLock(android.content.ComponentName,long,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.app.ActivityGroup: void onResume()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountManager.4: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String)>:<>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.net.ConnectivityManager: int legacyTypeForNetworkCapabilities(android.net.NetworkCapabilities)>:<private>:<android.net.ConnectivityManager>
<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.renderscript.RenderScript: long nScriptFieldIDCreate(long,int)>:<>:<android.renderscript.RenderScript>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode[] values()>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.transition.Fade.FadeAnimatorListener: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.renderscript.Byte4: void addMultiple(android.renderscript.Byte4,byte)>:<public>:<android.renderscript.Byte4>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>:<public static native>:<android.opengl.GLES20>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>:<public static>:<android.os.Debug>
<android.hwtheme.HwThemeManagerDummy: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,android.app.LoadedApk)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLLogWrapper: java.lang.String getHintTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.transition.TransitionManager.MultiListener: void onViewDetachedFromWindow(android.view.View)>:<public>:<android.transition.TransitionManager.MultiListener:android.view.ViewTreeObserver.OnPreDrawListener,android.view.View.OnAttachStateChangeListener>
<android.os.INetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.INetworkManagementService: void enableIpv6(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>:<protected>:<android.filterfw.core.Filter>
<android.net.nsd.NsdServiceInfo: int describeContents()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void mutate()>:<private>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Insets: void <clinit>()>:<static>:<android.graphics.Insets>
<android.net.http.AndroidHttpClient: void finalize()>:<protected>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode[] values()>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.graphics.drawable.VectorDrawable.VGroup: void <init>(android.graphics.drawable.VectorDrawable.VGroup,android.util.ArrayMap)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.Notification.Action.Builder: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Action.Builder>
<android.net.wifi.WifiManager: void getTxPacketCount(android.net.wifi.WifiManager.TxPacketCountListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.IApplicationThread: void updateTimePrefs(boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.PointF: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.transition.ChangeBounds.ViewBounds: void <init>(android.view.View)>:<public>:<android.transition.ChangeBounds.ViewBounds>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.os.PowerManager: boolean isInteractive()>:<public>:<android.os.PowerManager>
<android.app.INotificationManager: boolean setZenModeConfig(android.service.notification.ZenModeConfig)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.database.AbstractCursor: float getFloat(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.BitmapDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.transition.Crossfade.2: void <init>(android.transition.Crossfade,boolean,android.view.View,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable)>:<>:<android.transition.Crossfade.2:android.animation.AnimatorListenerAdapter>
<android.transition.Transition.EpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>:<public abstract>:<android.transition.Transition.EpicenterCallback>
<android.app.ActivityManagerProxy: android.app.IActivityContainer createActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.EGL14: int eglQueryAPI()>:<public static native>:<android.opengl.EGL14>
<android.app.LoadedApk.WarningContextClassLoader: void <init>()>:<private>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.os.StrictMode: void access.1200(int)>:<static>:<android.os.StrictMode>
<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.app.INotificationManager: boolean areNotificationsEnabledForPackage(java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Element.Builder>
<android.net.wifi.WifiScanner.HotlistSettings: void <clinit>()>:<static>:<android.net.wifi.WifiScanner.HotlistSettings:android.os.Parcelable>
<android.app.ExitTransitionCoordinator: void notifyComplete()>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>:<public>:<android.app.LocalActivityManager>
<android.renderscript.RenderScript: void rsnContextSetSurface(long,int,int,android.view.Surface)>:<native>:<android.renderscript.RenderScript>
<android.filterfw.core.Program: void reset()>:<public>:<android.filterfw.core.Program>
<android.print.IPrinterDiscoveryObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.renderscript.FieldPacker: android.renderscript.Int2 subInt2()>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.RenderScript: void nAllocationData2D(long,int,int,int,int,int,int,long,int,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long,int,int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>:<public>:<android.webkit.WebResourceResponse>
<android.transition.ChangeTransform: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.app.IActivityContainerCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IActivityContainerCallback.Stub:android.os.Binder,android.app.IActivityContainerCallback>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.os.StrictMode: android.util.Singleton access.600()>:<static>:<android.os.StrictMode>
<android.drm.DrmManagerClient: android.content.ContentValues _getMetadata(int,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>:<>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.app.ContextImpl: void enforce(java.lang.String,int,boolean,int,java.lang.String)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.usage.UsageEvents.1: void <init>()>:<>:<android.app.usage.UsageEvents.1:android.os.Parcelable.Creator>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void drawPath(android.graphics.drawable.VectorDrawable.VGroup,android.graphics.drawable.VectorDrawable.VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>:<private>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.app.Activity: void setContentView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl: android.content.Intent registerReceiverInternal(android.content.BroadcastReceiver,int,android.content.IntentFilter,java.lang.String,android.os.Handler,android.content.Context)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.net.http.RequestHandle: java.lang.String computeDigestAuthResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private>:<android.net.http.RequestHandle>
<android.drm.DrmInfoRequest: void <init>(int,java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.net.IpPrefix: void <init>(byte[],int)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.print.PrinterInfo: int hashCode()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)>:<public>:<android.net.ConnectivityManager>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.app.trust.ITrustManager.Stub.Proxy: void reportRequireCredentialEntry(int)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Debug: void resetThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.net.ConnectivityManager: long getLteTotalRxBytes()>:<public>:<android.net.ConnectivityManager>
<android.os.storage.IMountService.Stub.Proxy: int changeEncryptionPassword(int,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.IMultiWinService.Stub.Proxy: void setMultiWinResumed(android.os.IBinder,boolean)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.accounts.AccountManager.16: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,android.app.Activity)>:<>:<android.accounts.AccountManager.16:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.os.UEventObserver: void stopObserving()>:<public final>:<android.os.UEventObserver>
<android.app.LoadedApk: android.content.pm.ApplicationInfo adjustNativeLibraryPaths(android.content.pm.ApplicationInfo)>:<private static>:<android.app.LoadedApk>
<android.os.PowerManager.WakeLock.1: void run()>:<public>:<android.os.PowerManager.WakeLock.1:java.lang.Runnable>
<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element.DataType,int)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.TransitionDrawable.TransitionState,android.content.res.Resources)>:<private>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.WorkSource: boolean updateLocked(android.os.WorkSource,boolean,boolean)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.os.IPowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.FieldPacker: void addBoolean(boolean)>:<public>:<android.renderscript.FieldPacker>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.net.NetworkTemplate: boolean matchesMobile4g(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.NetworkTemplate: void ensureSubtypeAvailable()>:<private static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.Double3: void <init>(double,double,double)>:<public>:<android.renderscript.Double3>
<android.app.Instrumentation: void start()>:<public>:<android.app.Instrumentation>
<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.accounts.ChooseAccountTypeActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseAccountTypeActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.graphics.PathMeasure: boolean native_getMatrix(long,float,long,int)>:<private static native>:<android.graphics.PathMeasure>
<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.wifi.WifiActivityEnergyInfo: int describeContents()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.graphics.Rect.UnflattenHelper: void <clinit>()>:<static>:<android.graphics.Rect.UnflattenHelper>
<android.app.SharedPreferencesImpl: int access.310(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.IpConfiguration: android.net.IpConfiguration.IpAssignment getIpAssignment()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.KeyguardManager: boolean isKeyguardSecure()>:<public>:<android.app.KeyguardManager>
<android.graphics.Paint: java.util.Locale getTextLocale()>:<public>:<android.graphics.Paint>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.WifiChannel: int describeContents()>:<public>:<android.net.wifi.WifiChannel:android.os.Parcelable>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.backup.IRestoreSession.Stub.Proxy: int restoreAll(long,android.app.backup.IRestoreObserver)>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.os.Registrant: void clear()>:<public>:<android.os.Registrant>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.pdf.PdfDocument: java.util.List getPages()>:<public>:<android.graphics.pdf.PdfDocument>
<android.os.BatteryStats.HistoryItem: void clear()>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.net.INetworkScoreCache.Stub.Proxy: void clearScores()>:<public>:<android.net.INetworkScoreCache.Stub.Proxy:android.net.INetworkScoreCache>
<android.app.IApplicationThread: void scheduleTrimMemory(int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.os.storage.StorageManager.ListenerDelegate: void <init>(android.os.storage.StorageManager,android.os.storage.StorageEventListener)>:<>:<android.os.storage.StorageManager.ListenerDelegate>
<android.net.ConnectivityManager: android.net.NetworkRequest findRequestForFeature(android.net.NetworkCapabilities)>:<private>:<android.net.ConnectivityManager>
<android.app.ActivityTransitionCoordinator: void setOriginalSharedElementState(java.util.ArrayList,java.util.ArrayList)>:<protected static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.database.sqlite.SQLiteConnectionPool: void logConnectionPoolBusyLocked(long,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String removeDoubleQuotes(java.lang.String)>:<private>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable.ColorState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.FilterGraph: boolean readyForProcessing(android.filterfw.core.Filter,java.util.Set)>:<private>:<android.filterfw.core.FilterGraph>
<android.renderscript.Double3: void add(double)>:<public>:<android.renderscript.Double3>
<android.os.IMultiWinService.Stub.Proxy: boolean getMWMaintained()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.ExpandableListActivity: long getSelectedId()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.IConnectivityManager.Stub.Proxy: android.net.Network[] getAllNetworks()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.IWallpaperManager.Stub.Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.test.AndroidTestCase: void assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.job.IJobCallback: void jobFinished(int,boolean)>:<public abstract>:<android.app.job.IJobCallback:android.os.IInterface>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.os.MemoryFile.MemoryInputStream: int read()>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.os.ParcelFileDescriptor.ListenerBridge: void <init>(java.io.FileDescriptor,android.os.Looper,android.os.ParcelFileDescriptor.OnCloseListener)>:<public>:<android.os.ParcelFileDescriptor.ListenerBridge:java.lang.Thread>
<android.app.IActivityManager: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.LoadedApk.WarningContextClassLoader: void clearAssertionStatus()>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.os.Parcel: byte[] nativeCreateByteArray(long)>:<private static native>:<android.os.Parcel>
<android.os.MemoryFile: void <init>(java.lang.String,int)>:<public>:<android.os.MemoryFile>
<android.graphics.Matrix: void native_setConcat(long,long,long)>:<private static native>:<android.graphics.Matrix>
<android.graphics.drawable.ShapeDrawable: void updateShape()>:<private>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.renderscript.ProgramFragment: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramFragment:android.renderscript.Program,android.renderscript.BaseObj>
<android.app.Instrumentation: void onStart()>:<public>:<android.app.Instrumentation>
<android.renderscript.ProgramVertexFixedFunction.Builder: void buildShaderString()>:<private>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.graphics.drawable.GradientDrawable: void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.HwCustSvcFactory: void <clinit>()>:<static>:<android.app.HwCustSvcFactory>
<android.os.Vibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>:<public abstract>:<android.os.Vibrator>
<android.net.ParseException: void <init>(java.lang.String)>:<>:<android.net.ParseException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.trust.ITrustListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.trust.ITrustListener.Stub.Proxy:android.app.trust.ITrustListener>
<android.filterfw.core.FrameFormat: int[] getDimensions()>:<public>:<android.filterfw.core.FrameFormat>
<android.renderscript.ScriptGroup.Builder: void validateDAGRecurse(android.renderscript.ScriptGroup.Node,int)>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.graphics.Bitmap.UidMatcher: int matchUid()>:<private static>:<android.graphics.Bitmap.UidMatcher>
<android.os.BaseBundle: void putCharArray(java.lang.String,char[])>:<>:<android.os.BaseBundle>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.app.EnterTransitionCoordinator: android.transition.Transition getViewsTransition()>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.accounts.GrantCredentialsPermissionActivity: android.view.View newPackageView(java.lang.String)>:<private>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.app.ActivityManager: boolean removeTask(int)>:<public>:<android.app.ActivityManager>
<android.app.LauncherActivity.ActivityAdapter: java.lang.Object access.200(android.app.LauncherActivity.ActivityAdapter)>:<static>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>:<private static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebView.PrivateAccess: void setScrollYRaw(int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.AlarmManager: int getWakeUpNum(int,java.lang.String)>:<public>:<android.app.AlarmManager>
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>:<public>:<android.app.ActivityThread>
<android.app.IActivityManager: java.util.List getRecentTasks(int,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.RemoteInput.Builder: android.os.Bundle getExtras()>:<public>:<android.app.RemoteInput.Builder>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Region: boolean nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.Path: void set(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.os.Bundle: short getShort(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.WebViewProvider: void postUrl(java.lang.String,byte[])>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.Int3: void <init>(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.net.NetworkCapabilities: void <clinit>()>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.ActivityThread: void handleResumeActivity(android.os.IBinder,boolean,boolean,boolean)>:<final>:<android.app.ActivityThread>
<android.app.Fragment.InstantiationException: void <init>(java.lang.String,java.lang.Exception)>:<public>:<android.app.Fragment.InstantiationException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.Application: void onTerminate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.renderscript.RenderScript: void nScriptGetVarV(long,int,byte[])>:<>:<android.renderscript.RenderScript>
<android.opengl.GLErrorWrapper: void glRenderbufferStorageOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>:<public static final>:<android.net.ConnectivityManager>
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>:<public>:<android.app.backup.FullBackupDataOutput>
<android.app.IActivityContainer: boolean injectEvent(android.view.InputEvent)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.os.ParcelFileDescriptor: void close()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.storage.IObbActionListener: void onObbResult(java.lang.String,int,int)>:<public abstract>:<android.os.storage.IObbActionListener:android.os.IInterface>
<android.netdetect.HwCustNetDetectServiceImpl: void access.1000(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String,long)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.IWallpaperManagerCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IWallpaperManagerCallback.Stub.Proxy:android.app.IWallpaperManagerCallback>
<android.app.UiAutomation: android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>:<public>:<android.app.UiAutomation>
<android.os.Trace: void setTracingEnabled(boolean)>:<public static>:<android.os.Trace>
<android.net.http.Headers: int getConnectionType()>:<public>:<android.net.http.Headers>
<android.app.ContextImpl.21: void <init>()>:<>:<android.app.ContextImpl.21:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.DrawableContainer: void setCurrentIndex(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebViewProvider: void stopLoading()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>:<public>:<android.os.UserManager>
<android.opengl.Visibility: void <init>()>:<public>:<android.opengl.Visibility>
<android.mtp.MtpObjectInfo: int getAssociationDesc()>:<public final>:<android.mtp.MtpObjectInfo>
<android.filterfw.core.ShaderProgram: void finalize()>:<protected>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.graphics.drawable.BitmapDrawable: void updateMirrorMatrix(float)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.SearchableInfo.ActionKeyInfo: void <init>(android.content.Context,android.util.AttributeSet)>:<>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.os.SELinux: boolean checkSELinuxAccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public static final native>:<android.os.SELinux>
<android.os.DropBoxManager.Entry.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.DropBoxManager.Entry.1:android.os.Parcelable.Creator>
<android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.SearchDialog.2: void onClick(android.view.View)>:<public>:<android.app.SearchDialog.2:android.view.View.OnClickListener>
<android.net.http.RequestQueue.ConnectionManager: org.apache.http.HttpHost getProxyHost()>:<public abstract>:<android.net.http.RequestQueue.ConnectionManager>
<android.app.IActivityManager: java.util.List getRunningExternalApplications()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.usage.UsageStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.print.PageRange: boolean contains(int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.filterfw.core.GLFrame: boolean setNativeData(byte[],int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.Activity: void invalidateOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.GraphRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.webkit.WebView: void access.301(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.RippleBackground.1: void <init>(android.graphics.drawable.RippleBackground,int)>:<>:<android.graphics.drawable.RippleBackground.1:android.animation.AnimatorListenerAdapter>
<android.app.IActivityManager: boolean isInHomeStack(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmUtils.ExtendedMetadataParser: void <init>(byte[])>:<private>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.app.ApplicationPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>()>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.BitmapDrawable: int getAlpha()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleTHEN(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.webkit.UrlInterceptHandler: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>:<public abstract>:<android.webkit.UrlInterceptHandler>
<android.database.sqlite.SQLiteConnectionPool: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.app.Notification.Builder: android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.hwcontrol.HwWidgetFactory: int getThemeId(android.os.Bundle,android.content.res.Resources)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.net.IConnectivityManager: void registerNetworkFactory(android.os.Messenger,java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.ContextImpl.40: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.40:android.app.ContextImpl.ServiceFetcher>
<android.webkit.WebViewProvider: boolean zoomOut()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.WebView: android.webkit.PluginList getPluginList()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.IMultiWinService: void releaseTokens(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.database.sqlite.SQLiteAccessPermException: void <init>()>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>:<public static>:<android.graphics.Typeface>
<android.os.UserManager: boolean isManagedProfile()>:<public>:<android.os.UserManager>
<android.graphics.Region: boolean nativeOp(long,long,long,int)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.net.wifi.WifiChannel.1: void <init>()>:<>:<android.net.wifi.WifiChannel.1:android.os.Parcelable.Creator>
<android.renderscript.Element: void <init>(long,android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind,boolean,int)>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.admin.DeviceAdminInfo.1: android.app.admin.DeviceAdminInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.admin.DeviceAdminInfo.1:android.os.Parcelable.Creator>
<android.app.backup.IRestoreObserver: void onUpdate(int,java.lang.String)>:<public abstract>:<android.app.backup.IRestoreObserver:android.os.IInterface>
<android.os.UserHandle: int getUserId(int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.Path: void native_close(long)>:<private static native>:<android.graphics.Path>
<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.renderscript.Byte4: void div(byte)>:<public>:<android.renderscript.Byte4>
<android.renderscript.Short4: short dotProduct(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.net.NetworkFactory: void setScoreFilter(int)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.os.BaseBundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>:<>:<android.os.BaseBundle>
<android.hsm.HwMediaPermWrapper: void setOutputFile(android.media.MediaRecorder,java.io.FileDescriptor,long,long)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.os.storage.IMountService: java.lang.String getSecureContainerPath(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>:<public>:<android.graphics.Outline>
<android.graphics.Bitmap: void nativeSetPixel(long,int,int,int)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.ActivityManagerProxy: void stopAppSwitches()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Bitmap: boolean nativeIsPremultiplied(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.AbstractCursor: int getColumnCount()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Program: int getConstantCount()>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.INotificationManager.Stub.Proxy: void setPackageVisibilityOverride(java.lang.String,int,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.renderscript.ScriptGroup.ConnectLine: void <init>(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.KernelID)>:<>:<android.renderscript.ScriptGroup.ConnectLine>
<android.graphics.ComposePathEffect: long nativeCreate(long,long)>:<private static native>:<android.graphics.ComposePathEffect:android.graphics.PathEffect>
<android.app.ActivityThread: void main(java.lang.String[])>:<public static>:<android.app.ActivityThread>
<android.renderscript.Element: android.renderscript.Element I8_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.IActivityContainerCallback.Stub: void <init>()>:<public>:<android.app.IActivityContainerCallback.Stub:android.os.Binder,android.app.IActivityContainerCallback>
<android.app.ActivityThread: void access.1500(android.app.ActivityThread,android.os.IBinder,boolean,int)>:<static>:<android.app.ActivityThread>
<android.net.http.RequestQueue.ActivePool: void stopTiming()>:<public>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.os.BatteryStats: int getNumConnectivityChange(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.Parcel: int nativeDataPosition(long)>:<private static native>:<android.os.Parcel>
<android.database.sqlite.SQLiteDebug: boolean shouldLogSlowQuery(long)>:<public static final>:<android.database.sqlite.SQLiteDebug>
<android.graphics.Bitmap: void checkRecycled(java.lang.String)>:<private>:<android.graphics.Bitmap:android.os.Parcelable>
<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.os.Debug: void resetThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.net.BaseNetworkStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: void enter()>:<public>:<android.net.DhcpStateMachine.WaitBeforeRenewalState:com.android.internal.util.State>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.transition.ChangeTransform.PathAnimatorMatrix: android.graphics.Matrix getMatrix()>:<public>:<android.transition.ChangeTransform.PathAnimatorMatrix>
<android.transition.ChangeText: android.transition.ChangeText setChangeBehavior(int)>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.renderscript.FieldPacker: void addU8(short)>:<public>:<android.renderscript.FieldPacker>
<android.os.JankBdItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.JankBdItem>
<android.net.NetworkStats: long getElapsedRealtimeAge()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.graphics.Matrix: void native_reset(long)>:<private static native>:<android.graphics.Matrix>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: android.appwidget.AppWidgetHostView.ParcelableSparseArray[] newArray(int)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.app.EnterTransitionCoordinator.9: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.EnterTransitionCoordinator.9:android.transition.Transition.TransitionListenerAdapter>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.storage.IMountService: int decryptStorage(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.wifi.SupplicantState.1: android.net.wifi.SupplicantState[] newArray(int)>:<public>:<android.net.wifi.SupplicantState.1:android.os.Parcelable.Creator>
<android.net.NetworkPolicy: boolean isOverWarning(long)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.filterfw.core.FilterPort: boolean isBlocking()>:<public>:<android.filterfw.core.FilterPort>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: void <init>(java.lang.String,int,int)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.accounts.AccountManager.1: void doWork()>:<public>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.filterfw.core.FilterSurfaceView: void registerSurface()>:<private>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.renderscript.ScriptIntrinsicResize: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.NetworkPolicyManager: void setUidPolicy(int,int)>:<public>:<android.net.NetworkPolicyManager>
<android.net.LocalSocketImpl: int available_native(java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.transition.Transition.3: void <init>(android.transition.Transition)>:<>:<android.transition.Transition.3:android.animation.AnimatorListenerAdapter>
<android.filterfw.core.AsyncRunner.RunnerResult: void <init>(android.filterfw.core.AsyncRunner,android.filterfw.core.AsyncRunner.1)>:<>:<android.filterfw.core.AsyncRunner.RunnerResult>
<android.renderscript.Element: int getSubElementArraySize(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.EGLLogWrapper: void flush()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.os.INetworkManagementService.Stub.Proxy: void setSoftapMacFilter(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Script.LaunchOptions: int access.400(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.accounts.AuthenticatorDescription.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.os.IPowerManager.Stub.Proxy: boolean stopDream()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.dhcp.DhcpDeclinePacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpDeclinePacket:android.net.dhcp.DhcpPacket>
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getAllowableAccountSet(android.content.Intent)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.os.Debug: int getGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.graphics.RectF: boolean equals(java.lang.Object)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.VpnService.Builder: android.os.ParcelFileDescriptor establish()>:<public>:<android.net.VpnService.Builder>
<android.database.IBulkCursor: int requery(android.database.IContentObserver)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.net.wifi.HwWifiStatStore: boolean hasDataToTrigger()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.drm.DrmInfo: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfo>
<android.net.wifi.HwWifiStatStore: void rstDisconnectFlg()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.app.SearchableInfo: int getSuggestThreshold()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.ConnectivityManager.CallbackHandler: android.net.ConnectivityManager.NetworkCallback getCallbacks(android.net.NetworkRequest)>:<private>:<android.net.ConnectivityManager.CallbackHandler:android.os.Handler>
<android.app.ActivityManagerProxy: void backgroundResourcesReleased(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.SystemService: java.util.HashMap access.000()>:<static>:<android.os.SystemService>
<android.net.wifi.WifiManager: boolean startScan(android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.http.AndroidHttpClient.LoggingConfiguration: void <init>(java.lang.String,int,android.net.http.AndroidHttpClient.1)>:<>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.app.backup.RestoreSession.RestoreObserverWrapper: void restoreFinished(int)>:<public>:<android.app.backup.RestoreSession.RestoreObserverWrapper:android.app.backup.IRestoreObserver.Stub,android.os.Binder>
<android.app.Activity: void recreate()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES11: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()>:<public>:<android.os.PowerManager>
<android.graphics.Rect: int width()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: long nProgramRasterCreate(boolean,int)>:<>:<android.renderscript.RenderScript>
<android.database.CursorJoiner.Result: void <clinit>()>:<static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.app.IActivityManager: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Bundle: char[] getCharArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.job.IJobService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.job.IJobService.Stub.Proxy:android.app.job.IJobService>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])>:<public static>:<android.os.storage.StorageManager>
<android.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.alsa.AlsaDevicesParser: void scan()>:<public>:<android.alsa.AlsaDevicesParser>
<android.net.IConnectivityManager: android.net.LinkProperties getLinkPropertiesForType(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.app.LoadedApk.ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.filterfw.core.Filter: void initWithValueMap(android.filterfw.core.KeyValueMap)>:<public final>:<android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnectionPool: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: boolean canReuseBitmap(int,int)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.database.AbstractCursor: boolean moveToPrevious()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.wifi.BatchedScanResult.1: void <init>()>:<>:<android.net.wifi.BatchedScanResult.1:android.os.Parcelable.Creator>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStopped(java.lang.String)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getApLinkedStaList()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.LoaderManagerImpl: void doRetain()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.backup.RestoreSet: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>:<public>:<android.os.TokenWatcher>
<android.graphics.pdf.PdfRenderer: void finalize()>:<protected>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.net.http.DelegatingSSLSession: java.lang.String getCipherSuite()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.graphics.Canvas: int getWidth()>:<public>:<android.graphics.Canvas>
<android.net.INetworkStatsService: void setUidForeground(int,boolean)>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat[] values()>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.ProgramStore: boolean isDitherEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.net.VpnService: android.net.IConnectivityManager getService()>:<private static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.FieldPacker: long subI64()>:<public>:<android.renderscript.FieldPacker>
<android.net.IConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.INonHardwareAcceleratedPackagesManager.Stub: android.app.INonHardwareAcceleratedPackagesManager asInterface(android.os.IBinder)>:<public static>:<android.app.INonHardwareAcceleratedPackagesManager.Stub:android.os.Binder,android.app.INonHardwareAcceleratedPackagesManager>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config nativeToConfig(int)>:<static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.renderscript.Long2: void mul(long)>:<public>:<android.renderscript.Long2>
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>:<public static>:<android.os.FileUtils>
<android.accounts.ChooseAccountTypeActivity.1: void <init>(android.accounts.ChooseAccountTypeActivity)>:<>:<android.accounts.ChooseAccountTypeActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.app.IActivityManager: int getTaskForActivity(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable: void <clinit>()>:<static>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>:<public static>:<android.os.SystemProperties>
<android.app.backup.IRestoreObserver.Stub: android.app.backup.IRestoreObserver asInterface(android.os.IBinder)>:<public static>:<android.app.backup.IRestoreObserver.Stub:android.os.Binder,android.app.backup.IRestoreObserver>
<android.graphics.TableMaskFilter: long nativeNewGamma(float)>:<private static native>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_FRONT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.app.ActivityThread: void doGcIfNeeded()>:<>:<android.app.ActivityThread>
<android.graphics.Matrix: int hashCode()>:<public>:<android.graphics.Matrix>
<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>:<public>:<android.app.IntentReceiverLeaked:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.LevelListDrawable.LevelListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createPtrServiceQuery(java.lang.String,java.lang.String)>:<private static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.graphics.Canvas: void restore()>:<public>:<android.graphics.Canvas>
<android.net.NetworkCapabilities: java.lang.String access.402(android.net.NetworkCapabilities,java.lang.String)>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.filterfw.FilterFunctionEnvironment: android.filterfw.core.FilterFunction createFunction(java.lang.Class,java.lang.Object[])>:<public transient>:<android.filterfw.FilterFunctionEnvironment:android.filterfw.MffEnvironment>
<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition: void start()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.os.BatteryStats: long getHistoryBaseTime()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: void pollBatchedScan()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.drawable.StateListDrawable.StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>:<>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.Dialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ApplicationPackageManager.ResourceName: int hashCode()>:<public>:<android.app.ApplicationPackageManager.ResourceName>
<android.transition.ChangeText: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.app.usage.IUsageStatsManager.Stub.Proxy: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)>:<public>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.filterfw.core.FilterGraph: void checkConnections()>:<private>:<android.filterfw.core.FilterGraph>
<android.webkit.WebIconDatabase: void close()>:<public abstract>:<android.webkit.WebIconDatabase>
<android.os.IMultiWinServiceCallBack.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IMultiWinServiceCallBack.Stub:android.os.Binder,android.os.IMultiWinServiceCallBack>
<android.renderscript.Byte3: byte dotProduct(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.net.dhcp.DhcpRequestPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpRequestPacket:android.net.dhcp.DhcpPacket>
<android.app.backup.RestoreDescription.1: android.app.backup.RestoreDescription createFromParcel(android.os.Parcel)>:<public>:<android.app.backup.RestoreDescription.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setMaxThroughput(int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLSurfaceView.DefaultContextFactory: void <init>(android.opengl.GLSurfaceView,android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.app.FragmentState.1: android.app.FragmentState createFromParcel(android.os.Parcel)>:<public>:<android.app.FragmentState.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiActivityEnergyInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiActivityEnergyInfo.1:android.os.Parcelable.Creator>
<android.app.Fragment: android.transition.Transition loadTransition(android.content.Context,android.content.res.TypedArray,android.transition.Transition,android.transition.Transition,int)>:<private static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.RenderScript: void rsnMeshGetVertices(long,long,long[],int)>:<native>:<android.renderscript.RenderScript>
<android.app.admin.IDevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.OutputPort: void open()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.os.SystemProperties: void native_add_change_callback()>:<private static native>:<android.os.SystemProperties>
<android.os.StrictMode: void onIntentReceiverLeaked(java.lang.Throwable)>:<public static>:<android.os.StrictMode>
<android.app.ActivityTransitionState: void enterReady(android.app.Activity)>:<public>:<android.app.ActivityTransitionState>
<android.net.dhcp.DhcpPacket: android.net.dhcp.DhcpPacket decodeFullPacket(java.nio.ByteBuffer,int)>:<public static>:<android.net.dhcp.DhcpPacket>
<android.app.UiAutomationConnection: void executeShellCommand(java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.os.NullVibrator: void <init>()>:<private>:<android.os.NullVibrator:android.os.Vibrator>
<android.webkit.WebViewProvider: android.graphics.Bitmap getFavicon()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void removePackage(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.renderscript.Element: int getSubElementCount()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: boolean isTopActivityImmersive()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Int4: void <init>(int)>:<public>:<android.renderscript.Int4>
<android.app.ActionBar: boolean openOptionsMenu()>:<public>:<android.app.ActionBar>
<android.app.backup.BackupTransport.TransportImpl: void finishRestore()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.SearchDialog: void createContentView()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ApplicationPackageManager: void installPackageWithVerification(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point center()>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.app.ActivityThread: android.app.ActivityThread.ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager.ContentProviderHolder)>:<private>:<android.app.ActivityThread>
<android.os.BatteryStats.Uid.Proc.ExcessivePower: void <init>()>:<public>:<android.os.BatteryStats.Uid.Proc.ExcessivePower>
<android.net.wifi.WpsInfo.1: void <init>()>:<>:<android.net.wifi.WpsInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition: void <init>(android.graphics.drawable.Animatable)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.os.Bundle: void <init>()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur[] values()>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.graphics.Matrix.1: void setSkew(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.graphics.Paint: int native_breakText(long,long,char[],int,int,float,int,float[])>:<private static native>:<android.graphics.Paint>
<android.webkit.WebViewProvider: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.graphics.drawable.VectorDrawable.VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.os.Debug: void enableEmulatorTraceOutput()>:<public static>:<android.os.Debug>
<android.transition.Slide.CalculateSlideHorizontal: float getGoneY(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.CalculateSlideHorizontal:android.transition.Slide.CalculateSlide>
<android.app.IWallpaperManagerCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IWallpaperManagerCallback.Stub:android.os.Binder,android.app.IWallpaperManagerCallback>
<android.app.backup.BackupTransport: android.content.Intent dataManagementIntent()>:<public>:<android.app.backup.BackupTransport>
<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable.NinePatchState)>:<>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.AliasActivity: void <init>()>:<public>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.SamplingDataTracker: long getSampledTxPacketErrorCount()>:<public>:<android.net.SamplingDataTracker>
<android.os.BatteryStats: java.lang.String getStartPlatformVersion()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.database.sqlite.SQLiteOpenHelper: void <clinit>()>:<static>:<android.database.sqlite.SQLiteOpenHelper>
<android.netdetect.HwCustNetDetectServiceImpl.2: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.2:android.content.BroadcastReceiver>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution)>:<public>:<android.print.PrintAttributes.Builder>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.accounts.AccountManager.AmsTask.Response: void <init>(android.accounts.AccountManager.AmsTask)>:<private>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.renderscript.Allocation: void ioReceive()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.print.PrintAttributes.Resolution: java.lang.String getLabel()>:<public>:<android.print.PrintAttributes.Resolution>
<android.filterfw.core.VertexFrame: boolean setNativeFloats(float[])>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.graphics.Rect: void <init>()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.NetworkMisc: void <init>(android.net.NetworkMisc)>:<public>:<android.net.NetworkMisc:android.os.Parcelable>
<android.os.storage.StorageVolume: long getMaxFileSize()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.net.INetworkManagementEventObserver: void limitReached(java.lang.String,java.lang.String)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.os.DeadObjectException: void <init>()>:<public>:<android.os.DeadObjectException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.net.LinkProperties: void setDnsServers(java.util.Collection)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLES20: void glFinish()>:<public static native>:<android.opengl.GLES20>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.net.wifi.WifiScanner: void <init>(android.content.Context,android.net.wifi.IWifiScanner)>:<public>:<android.net.wifi.WifiScanner>
<android.opengl.GLErrorWrapper: void glFogfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.IPowerManager.Stub.Proxy: void nap(long)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.os.Broadcaster: void <init>()>:<public>:<android.os.Broadcaster>
<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.transition.ChangeTransform: boolean getReparent()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.RemoteCallback.RemoteCallbackProxy: void onResult(android.os.Bundle)>:<protected>:<android.os.RemoteCallback.RemoteCallbackProxy:android.os.RemoteCallback>
<android.transition.ChangeBounds.1: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.1:android.util.Property>
<android.net.wifi.WifiActivityEnergyInfo: java.lang.String toString()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.os.Debug: boolean cacheRegisterMap(java.lang.String)>:<public static final>:<android.os.Debug>
<android.net.wifi.RttManager.RttListener: void onSuccess(android.net.wifi.RttManager.RttResult[])>:<public abstract>:<android.net.wifi.RttManager.RttListener>
<android.graphics.drawable.PaintDrawable: void <init>(int)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.accounts.ChooseAccountActivity: android.graphics.drawable.Drawable getDrawableForType(java.lang.String)>:<private>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.ApplicationThreadProxy: void updateTimeZone()>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchManager: void stopSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.accounts.GrantCredentialsPermissionActivity.1.1: void <init>(android.accounts.GrantCredentialsPermissionActivity.1,java.lang.String)>:<>:<android.accounts.GrantCredentialsPermissionActivity.1.1:java.lang.Runnable>
<android.net.Network.NetworkBoundSocketFactory: void <init>(android.net.Network,int)>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>:<public>:<android.os.RegistrantList>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionCancel(android.transition.Transition)>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.os.Process: long getPss(int)>:<public static final native>:<android.os.Process>
<android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager.NetworkScorerAppData getScorer(android.content.Context,java.lang.String)>:<public static>:<android.net.NetworkScorerAppManager>
<android.ddm.DdmHandleHeap: void <init>()>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.wifi.p2p.WifiP2pGroupList.1: void entryRemoved(boolean,java.lang.Integer,android.net.wifi.p2p.WifiP2pGroup,android.net.wifi.p2p.WifiP2pGroup)>:<protected>:<android.net.wifi.p2p.WifiP2pGroupList.1:android.util.LruCache>
<android.filterfw.core.FilterPort: void setChecksType(boolean)>:<public>:<android.filterfw.core.FilterPort>
<android.print.PrinterCapabilitiesInfo: void readMediaSizes(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.database.IContentObserver.Stub.Proxy: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.webkit.WebView.PrivateAccess: float getHorizontalScrollFactor()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.DownloadManager.Request: void <init>(java.lang.String)>:<>:<android.app.DownloadManager.Request>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ActionBar: void setHomeAsUpIndicator(int)>:<public>:<android.app.ActionBar>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: void setRecoveryWifiFlag(boolean)>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.app.IAlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager.AlarmClockInfo)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.print.IPrintSpooler.Stub.Proxy: void createPrintJob(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.net.NetworkInfo: java.lang.String getTypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.502(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation[] values()>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLLogWrapper: void glDrawTexsOES(short,short,short,short,short)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glScalex(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Builder: android.app.Notification.Builder addExtras(android.os.Bundle)>:<public>:<android.app.Notification.Builder>
<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Handler: java.lang.String toString()>:<public>:<android.os.Handler>
<android.app.IUserSwitchObserver: void onUserSwitchComplete(int)>:<public abstract>:<android.app.IUserSwitchObserver:android.os.IInterface>
<android.webkit.ConsoleMessage.MessageLevel: void <init>(java.lang.String,int)>:<private>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.accounts.AccountManager.2: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.net.nsd.INsdManager.Stub.Proxy: android.os.Messenger getMessenger()>:<public>:<android.net.nsd.INsdManager.Stub.Proxy:android.net.nsd.INsdManager>
<android.net.ConnectivityManager.NetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.renderscript.Short3: android.renderscript.Short3 mul(android.renderscript.Short3,short)>:<public static>:<android.renderscript.Short3>
<android.opengl.GLES10: void glMatrixMode(int)>:<public static native>:<android.opengl.GLES10>
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.app.job.JobParameters.1: android.app.job.JobParameters[] newArray(int)>:<public>:<android.app.job.JobParameters.1:android.os.Parcelable.Creator>
<android.net.EthernetManager: void setConfiguration(android.net.IpConfiguration)>:<public>:<android.net.EthernetManager>
<android.graphics.drawable.AnimatedVectorDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.renderscript.FieldPacker: android.renderscript.Byte4 subByte4()>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.EGLLogWrapper: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.IProcessObserver.Stub.Proxy: void onProcessDied(int,int)>:<public>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.drm.DrmStore.Playback: boolean isValid(int)>:<static>:<android.drm.DrmStore.Playback>
<android.net.wifi.IWifiScanner.Stub: void <init>()>:<public>:<android.net.wifi.IWifiScanner.Stub:android.os.Binder,android.net.wifi.IWifiScanner>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.app.VoiceInteractor.CompleteVoiceRequest: void onCompleteResult(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CompleteVoiceRequest:android.app.VoiceInteractor.Request>
<android.graphics.Xfermode: void finalize()>:<protected>:<android.graphics.Xfermode>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.FragmentManager.BackStackEntry: int getId()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.net.MobileLinkQualityInfo: int getEvdoEcio()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.hwcontrol.HwWidgetFactory: android.widget.ListPopupWindow getHwListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.graphics.drawable.Drawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet,int[])>:<static>:<android.graphics.drawable.Drawable>
<android.app.SharedPreferencesImpl: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.net.NetworkInfo: int getConvertedSubtype(int)>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.IActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.webkit.HwFindActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.INetworkStatsSession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.net.wifi.WifiLog.1: void <init>(android.net.wifi.WifiLog)>:<>:<android.net.wifi.WifiLog.1:java.util.TimerTask>
<android.renderscript.RenderScript: void nAllocationData3D(long,int,int,int,int,int,int,int,java.lang.Object,int,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.appwidget.AppWidgetProvider: void onRestored(android.content.Context,int[],int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.renderscript.Type: void updateFromNative()>:<>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.database.Observable: void unregisterAll()>:<public>:<android.database.Observable>
<android.app.AppImportanceMonitor: int getImportance(int)>:<public>:<android.app.AppImportanceMonitor>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.RenderScript: void rsnContextBindProgramFragment(long,long)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLLogWrapper: void glBlendEquationSeparate(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.storage.IMountService: long lastMaintenance()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.graphics.pdf.PdfRenderer: int nativeGetPageCount(long)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.filterfw.core.RandomScheduler: void reset()>:<public>:<android.filterfw.core.RandomScheduler:android.filterfw.core.Scheduler>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: void access.200(android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState)>:<static>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintAttributes.Margins: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.Margins>
<android.graphics.drawable.NinePatchDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.ISearchManager.Stub.Proxy: java.util.List getSearchablesInGlobalSearch()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.NetworkStateTracker: void setTeardownRequested(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.net.http.EventHandler: void endData()>:<public abstract>:<android.net.http.EventHandler>
<android.os.Parcel: byte readByte()>:<public final>:<android.os.Parcel>
<android.net.BaseNetworkStateTracker: boolean isAvailable()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getCrossProfileCallerIdDisabledForUser(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.LauncherActivity.IconResizer: void <init>(android.app.LauncherActivity)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.os.CancellationSignal: void <init>()>:<public>:<android.os.CancellationSignal>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment valueOf(java.lang.String)>:<public static>:<android.net.IpConfiguration.IpAssignment:java.lang.Enum>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStartedLocked(int,long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ContextImpl.63: void <init>()>:<>:<android.app.ContextImpl.63:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.WifiScanner: int getListenerKey(java.lang.Object)>:<private static>:<android.net.wifi.WifiScanner>
<android.graphics.Matrix: void native_preTranslate(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.app.BackStackRecord: void setNameOverrides(android.app.BackStackRecord.TransitionState,java.util.ArrayList,java.util.ArrayList)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.Ripple.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.graphics.drawable.Ripple.1:android.animation.AnimatorListenerAdapter>
<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.app.IActivityManager: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.VertexFrame: void releaseNativeAllocation()>:<protected>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.app.ActivityView: android.app.ActivityView.ActivityContainerWrapper access.100(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.app.ActivityManager.MemoryInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.MemoryInfo.1:android.os.Parcelable.Creator>
<android.net.http.IdleCache.Entry: void <init>(android.net.http.IdleCache)>:<>:<android.net.http.IdleCache.Entry>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.filterfw.MffEnvironment: void setGLEnvironment(android.filterfw.core.GLEnvironment)>:<public>:<android.filterfw.MffEnvironment>
<android.app.ActivityOptions: int getResultCode()>:<public>:<android.app.ActivityOptions>
<android.app.ActionBar: void setShowHideAnimationEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.graphics.Matrix.1: void <init>()>:<>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrc()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Parcel: int nativeDataCapacity(long)>:<private static native>:<android.os.Parcel>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void finish()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.graphics.Bitmap: android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int)>:<private>:<android.net.LinkAddress:android.os.Parcelable>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.net.DnsPinger: int pingDnsAsync(java.net.InetAddress,int,int)>:<public>:<android.net.DnsPinger:android.os.Handler>
<android.print.IPrintSpooler: void removeObsoletePrintJobs()>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.io.TextGraphReader.AddLibraryCommand: void execute(android.filterfw.io.TextGraphReader)>:<public>:<android.filterfw.io.TextGraphReader.AddLibraryCommand:android.filterfw.io.TextGraphReader.Command>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glDrawTexfOES(float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.ScriptC: void <init>(long,android.renderscript.RenderScript)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.net.IConnectivityManager.Stub.Proxy: boolean requestRouteToHostAddress(int,byte[])>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.Canvas: void native_getCTM(long,long)>:<private static native>:<android.graphics.Canvas>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable.LevelListState cloneConstantState()>:<>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.HwWifiCHRService: void updateConnectState(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.renderscript.Short2: void sub(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.app.IActivityManager: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.RippleDrawable: void <init>(android.graphics.drawable.RippleDrawable.RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable.1)>:<>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.GLFrame: void initWithTexture(int)>:<private>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.transition.ChangeBounds.2: void set(android.transition.ChangeBounds.ViewBounds,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.2:android.util.Property>
<android.os.ParcelUuid.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.ParcelUuid.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pManager.Channel.P2pHandler: void <init>(android.net.wifi.p2p.WifiP2pManager.Channel,android.os.Looper)>:<>:<android.net.wifi.p2p.WifiP2pManager.Channel.P2pHandler:android.os.Handler>
<android.app.DownloadManager.CursorTranslator: long getLong(int)>:<public>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.webkit.CookieSyncManager: void stopSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.opengl.GLES10: void glShadeModel(int)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.core.Filter: void process(android.filterfw.core.FilterContext)>:<public abstract>:<android.filterfw.core.Filter>
<android.net.NetworkRequest: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>:<final>:<android.app.ContextImpl:android.content.Context>
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.Uri.OpaqueUri: int describeContents()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>:<public abstract>:<android.webkit.GeolocationPermissions.Callback>
<android.net.DhcpStateMachine: void onQuitting()>:<protected>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.net.http.RequestHandle: int getRedirectCount()>:<public>:<android.net.http.RequestHandle>
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebViewProvider: void evaluateJavaScript(java.lang.String,android.webkit.ValueCallback)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.ActivityManager.CpuStatInfo: float getIrqTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.app.LoaderManagerImpl: void doDestroy()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.opengl.GLLogWrapper: void returns(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator iterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager.WpsCallback)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.WpsInfo.1: android.net.wifi.WpsInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WpsInfo.1:android.os.Parcelable.Creator>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.net.Uri.Part: android.net.Uri.Part readFrom(android.os.Parcel)>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace[] values()>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.net.LinkProperties: boolean isIdenticalDnses(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.INetworkManagementService: void setSoftapDisassociateSta(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.emoji.EmojiFactory: int nativeGetMaximumAndroidPua(long)>:<private native>:<android.emoji.EmojiFactory>
<android.renderscript.Sampler.Builder: void setAnisotropy(float)>:<public>:<android.renderscript.Sampler.Builder>
<android.print.PrintDocumentInfo: int access.202(android.print.PrintDocumentInfo,int)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.filterfw.core.NativeProgram: boolean bindProcessFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.app.AppOpsManager: boolean opAllowsReset(int)>:<public static>:<android.app.AppOpsManager>
<android.database.CursorWindow: void <init>(boolean)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.IStopUserCallback.Stub.Proxy: void userStopAborted(int)>:<public>:<android.app.IStopUserCallback.Stub.Proxy:android.app.IStopUserCallback>
<android.transition.ChangeTransform.Transforms: void <init>(android.view.View)>:<public>:<android.transition.ChangeTransform.Transforms>
<android.app.IntentService.ServiceHandler: void <init>(android.app.IntentService,android.os.Looper)>:<public>:<android.app.IntentService.ServiceHandler:android.os.Handler>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.VpnService.Builder: android.net.VpnService.Builder addSearchDomain(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.ddm.DdmHandleHello: void register()>:<public static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.transition.Transition.1: void <init>()>:<>:<android.transition.Transition.1:android.transition.PathMotion>
<android.webkit.WebView: boolean canGoBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.accounts.AccountManagerResponse: void <clinit>()>:<static>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String parseUserInfo()>:<private>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.os.SystemProperties: int getInt(java.lang.String,int)>:<public static>:<android.os.SystemProperties>
<android.graphics.Rect: void offset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void stopClatd(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.Debug.MemoryInfo: int getTotalUss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.IWifiManager: boolean doArpTest(int,int,int,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.ProxyDataTracker: java.lang.String getTcpBufferSizesPropName()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.net.wifi.WifiSsid: boolean isEncodedWithCharset(byte[],java.lang.String)>:<private>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>:<public static>:<android.app.Notification:android.os.Parcelable>
<android.webkit.WebViewFactory: void prepareWebViewInSystemServer()>:<public static>:<android.webkit.WebViewFactory>
<android.app.Notification.BigPictureStyle: void restoreFromExtras(android.os.Bundle)>:<protected>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.os.StrictMode.ViolationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.StrictMode.ViolationInfo>
<android.opengl.GLES10: void glVertexPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.net.INetworkPolicyManager: void setUidPolicy(int,int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.graphics.Path: void native_moveTo(long,float,float)>:<private static native>:<android.graphics.Path>
<android.database.sqlite.SQLiteProgram: void onCorruption()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectActivityLeaks()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.HwWifiStatStore: void <init>()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.os.MemoryFile: java.io.FileDescriptor native_open(java.lang.String,int)>:<private static native>:<android.os.MemoryFile>
<android.app.Instrumentation.ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>:<final>:<android.app.Instrumentation.ActivityMonitor>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int)>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable.ChildDrawable)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: void setNetworkAvailable(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldReleaseEGLContextWhenPausing()>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getCapacity()>:<final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.os.SystemService: void <clinit>()>:<static>:<android.os.SystemService>
<android.graphics.Rect: float exactCenterY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.ddm.DdmHandleThread: void disconnected()>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void glGenTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.RectF: void round(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Float2: void <init>(float,float)>:<public>:<android.renderscript.Float2>
<android.app.FragmentManagerImpl: void dispatchDestroyView()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.FragmentManagerImpl: java.lang.String toString()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.WifiManager: void setSoftapDisassociateSta(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.Notification.Builder: void stripForDelivery(android.app.Notification)>:<public static>:<android.app.Notification.Builder>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleFEAT(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void clearMutated()>:<final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.net.http.RequestQueue: android.net.http.Request getRequest()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.net.MobileLinkQualityInfo: android.net.MobileLinkQualityInfo createFromParcelBody(android.os.Parcel)>:<public static>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.Paint: void setAlpha(int)>:<public native>:<android.graphics.Paint>
<android.graphics.PathMeasure: boolean native_isClosed(long)>:<private static native>:<android.graphics.PathMeasure>
<android.renderscript.Double2: double get(int)>:<public>:<android.renderscript.Double2>
<android.net.wifi.IWifiManager: void stopPPPOE()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur valueOf(java.lang.String)>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean performGlobalAction(int)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.filterfw.core.NativeFrame: boolean setNativeFloats(float[])>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: void setRippleActive(boolean)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.print.IPrinterDiscoveryObserver.Stub: void <init>()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.mtp.MtpDatabase: void sessionEnded()>:<private>:<android.mtp.MtpDatabase>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.graphics.Path: long init1()>:<private static native>:<android.graphics.Path>
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.netdetect.INetDetectService.Stub: android.os.IBinder asBinder()>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.app.MediaRouteButton: void onDraw(android.graphics.Canvas)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.os.storage.IMountService.Stub.Proxy: int getPasswordType()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.opengl.EGL14: boolean eglWaitNative(int)>:<public static native>:<android.opengl.EGL14>
<android.os.Build.VERSION_CODES: void <init>()>:<public>:<android.os.Build.VERSION_CODES>
<android.appwidget.AppWidgetHost: boolean isLocalBinder()>:<private>:<android.appwidget.AppWidgetHost>
<android.net.http.RequestQueue: android.net.http.Request removeFirst(java.util.LinkedHashMap)>:<private>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.net.wifi.HwWifiStatStore: android.net.wifi.HwWifiStatStore getInstance()>:<public static>:<android.net.wifi.HwWifiStatStore>
<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.drm.DrmConvertedStatus: boolean isValidStatusCode(int)>:<private>:<android.drm.DrmConvertedStatus>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutCancelled()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.renderscript.Float3: void <init>(float,float,float)>:<public>:<android.renderscript.Float3>
<android.print.IPrintManager.Stub.Proxy: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.renderscript.Double3: double dotProduct(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.app.ContextImpl: java.lang.String uriModeFlagToString(int)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.graphics.Interpolator: void <init>(int,int)>:<public>:<android.graphics.Interpolator>
<android.net.wifi.WifiManager: int access.500(android.net.wifi.WifiManager)>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.net.MobileDataStateTracker: void getPhoneService(boolean)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.job.JobService: void <init>()>:<public>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.LoadedApk.WarningContextClassLoader: void <clinit>()>:<static>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Int3: void div(int)>:<public>:<android.renderscript.Int3>
<android.os.RemoteCallback.LocalCallback: void <init>(android.os.RemoteCallback)>:<>:<android.os.RemoteCallback.LocalCallback:android.os.IRemoteCallback.Stub>
<android.accounts.GrantCredentialsPermissionActivity: void onClick(android.view.View)>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.app.job.JobInfo.Builder: boolean access.300(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.os.CommonClock: void release()>:<public>:<android.os.CommonClock>
<android.opengl.GLErrorWrapper: void glCurrentPaletteMatrixOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.FrameFormat: java.lang.String dimensionsToString(int[])>:<public static>:<android.filterfw.core.FrameFormat>
<android.graphics.drawable.DrawableContainer.1: void <init>(android.graphics.drawable.DrawableContainer)>:<>:<android.graphics.drawable.DrawableContainer.1:java.lang.Runnable>
<android.net.INetworkStatsService.Stub.Proxy: void setUidForeground(int,boolean)>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.opengl.GLSurfaceView: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.Rect: void inset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.Matrix: boolean native_setPolyToPoly(long,float[],int,float[],int,int)>:<private static native>:<android.graphics.Matrix>
<android.app.admin.DevicePolicyManager: boolean hasCaCertInstalled(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLErrorWrapper: void glColor4x(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame findAvailableFrame(android.filterfw.core.FrameFormat,int,long)>:<private>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Matrix2f: float get(int,int)>:<public>:<android.renderscript.Matrix2f>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.renderscript.Long3: void mod(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.graphics.drawable.VectorDrawable: void <init>(android.graphics.drawable.VectorDrawable.VectorDrawableState,android.graphics.drawable.VectorDrawable.1)>:<>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.Paint: void setTextLocale(java.util.Locale)>:<public>:<android.graphics.Paint>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.SearchableInfo: void addActionKey(android.app.SearchableInfo.ActionKeyInfo)>:<private>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Allocation: void copyTo(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.Parcel: long readLong()>:<public final>:<android.os.Parcel>
<android.os.StrictMode.ViolationInfo: void <init>(android.os.Parcel,boolean)>:<public>:<android.os.StrictMode.ViolationInfo>
<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.Picture: long nativeCreateFromStream(java.io.InputStream,byte[])>:<private static native>:<android.graphics.Picture>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteConstraintException: void <init>()>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.UserHandle.1: android.os.UserHandle createFromParcel(android.os.Parcel)>:<public>:<android.os.UserHandle.1:android.os.Parcelable.Creator>
<android.net.http.HttpsConnection: void <init>(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.app.ContextImpl: java.io.File createFilesDirLocked(java.io.File)>:<private static>:<android.app.ContextImpl:android.content.Context>
<android.mtp.MtpStorage: java.lang.String getPath()>:<public final>:<android.mtp.MtpStorage>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureLayers(android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.AlarmManager.AlarmClockInfo: android.app.PendingIntent getShowIntent()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context,java.lang.String)>:<public static>:<android.os.RecoverySystem>
<android.accessibilityservice.AccessibilityServiceInfo: void appendCapabilities(java.lang.StringBuilder,int)>:<private static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.Binder: int getCallingPid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.graphics.drawable.ShapeDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Font: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.os.NullVibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>:<public>:<android.os.NullVibrator:android.os.Vibrator>
<android.transition.Slide: void <clinit>()>:<static>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.net.EthernetManager: android.os.Handler access.100(android.net.EthernetManager)>:<static>:<android.net.EthernetManager>
<android.drm.DrmOutputStream: void finish()>:<public>:<android.drm.DrmOutputStream:java.io.OutputStream>
<android.net.NetworkInfo: void setSubtype(int,java.lang.String)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.IMultiWinService: int[] getResumedTasks()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.database.sqlite.SQLiteStatementInfo: void <init>()>:<public>:<android.database.sqlite.SQLiteStatementInfo>
<android.database.MatrixCursor: short getShort(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.filterfw.core.NativeBuffer: boolean nativeCopyTo(android.filterfw.core.NativeBuffer)>:<private native>:<android.filterfw.core.NativeBuffer>
<android.app.EnterTransitionCoordinator: android.app.SharedElementCallback getListener(android.app.Activity,boolean)>:<private static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.IConnectivityManager: void setLteMobileDataEnabled(boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.Notification.Builder: android.widget.RemoteViews generateActionButton(android.app.Notification.Action)>:<private>:<android.app.Notification.Builder>
<android.app.Activity: void setRequestedOrientation(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.RenderScript: long rsnFileA3DCreateFromAsset(long,android.content.res.AssetManager,java.lang.String)>:<native>:<android.renderscript.RenderScript>
<android.filterfw.core.FieldPort: boolean hasFrame()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.admin.DevicePolicyManager: void addUserRestriction(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebViewProvider.ViewDelegate: void onFinishTemporaryDetach()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.NetworkTemplate: void <init>(android.os.Parcel,android.net.NetworkTemplate.1)>:<>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.RemoteInput.Builder: void <init>(java.lang.String)>:<public>:<android.app.RemoteInput.Builder>
<android.app.ContextImpl.ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.ServiceFetcher>
<android.app.IAlarmManager.Stub.Proxy: void setTimeZone(java.lang.String)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.net.wifi.PPPOEConfig: java.lang.String toString()>:<public>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.Byte2: void mul(byte)>:<public>:<android.renderscript.Byte2>
<android.app.ExpandableListActivity: void ensureList()>:<private>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.database.CursorWindow: boolean nativePutString(long,java.lang.String,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.Allocation: void copyFrom(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.WifiLog: void wifiexception(android.content.Context,android.net.wifi.WifiLog.WiFiExceptionType)>:<public static>:<android.net.wifi.WifiLog>
<android.app.IActivityManager: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.ShapeDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void finishActivity(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.IActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.net.Uri.Part: java.lang.String getEncoded()>:<>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.app.VoiceInteractor.Request: void onAttached(android.app.Activity)>:<public>:<android.app.VoiceInteractor.Request>
<android.net.DhcpStateMachine: void access.2100(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.os.BatteryManagerInternal: boolean getBatteryLevelLow()>:<public abstract>:<android.os.BatteryManagerInternal>
<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>:<public static>:<android.appwidget.AppWidgetHost>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.util.Date access.2700(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.IBatteryPropertiesRegistrar.Stub: android.os.IBatteryPropertiesRegistrar asInterface(android.os.IBinder)>:<public static>:<android.os.IBatteryPropertiesRegistrar.Stub:android.os.Binder,android.os.IBatteryPropertiesRegistrar>
<android.graphics.drawable.Ripple: void cancelHardwareAnimations(boolean)>:<private>:<android.graphics.drawable.Ripple>
<android.app.IActivityManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats.NonMonotonicObserver,java.lang.Object)>:<public static>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Float3: void div(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.FactoryTest: void <init>()>:<public>:<android.os.FactoryTest>
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])>:<public>:<android.app.backup.RestoreSession>
<android.database.CursorToBulkCursorAdaptor: void binderDied()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.graphics.Region: android.graphics.Region obtain(android.graphics.Region)>:<public static>:<android.graphics.Region:android.os.Parcelable>
<android.accounts.AccountManager: void ensureNotOnMainThread()>:<private>:<android.accounts.AccountManager>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Service: void onCreate()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.Activity: boolean isAPSReady()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String,java.lang.String)>:<public>:<android.os.UEventObserver.UEvent>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL getRenderScriptGL()>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSubtract()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.HwCustActionListener: void onFailure(int)>:<public abstract>:<android.net.wifi.HwCustActionListener:android.net.wifi.WifiManager.ActionListener>
<android.mtp.MtpPropertyList: void append(int,int,int,long)>:<public>:<android.mtp.MtpPropertyList>
<android.app.ActivityTransitionCoordinator: void notifySharedElementEnd(java.util.ArrayList)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <init>()>:<private>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.os.TokenWatcher: void released()>:<public abstract>:<android.os.TokenWatcher>
<android.net.NetworkInfo.1: void <init>()>:<>:<android.net.NetworkInfo.1:android.os.Parcelable.Creator>
<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>:<protected>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.database.sqlite.SQLiteConnectionPool: void cancelConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.opengl.GLES20: void glReleaseShaderCompiler()>:<public static native>:<android.opengl.GLES20>
<android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.BitmapFactory>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleOpenGlTrace(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.app.ApplicationPackageManager: void maybeAdjustApplicationInfo(android.content.pm.ApplicationInfo)>:<private static>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.os.IPowerManager.Stub.Proxy: void setStayOnSetting(int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.ActionBar: int getDisplayOptions()>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.admin.IDevicePolicyManager: int getCurrentFailedPasswordAttempts(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.storage.IMountService: int changeEncryptionPassword(int,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.dhcp.DhcpRequestPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpRequestPacket:android.net.dhcp.DhcpPacket>
<android.net.LocalSocket: java.io.InputStream getInputStream()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.graphics.Region: boolean nativeEquals(long,long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.os.BatteryStats: long computeChargeTimeRemaining(long)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.mtp.MtpDatabase: int access.102(android.mtp.MtpDatabase,int)>:<static>:<android.mtp.MtpDatabase>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.EnterTransitionCoordinator.4: void run()>:<public>:<android.app.EnterTransitionCoordinator.4:java.lang.Runnable>
<android.print.IPrintSpooler.Stub.Proxy: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.Uri.OpaqueUri: java.lang.String getScheme()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.app.ActivityThread.ProviderRefCount: void <init>(android.app.IActivityManager.ContentProviderHolder,android.app.ActivityThread.ProviderClientRecord,int,int)>:<>:<android.app.ActivityThread.ProviderRefCount>
<android.filterfw.core.FrameFormat: int getBaseType()>:<public>:<android.filterfw.core.FrameFormat>
<android.renderscript.Short2: void add(short)>:<public>:<android.renderscript.Short2>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Picture.RecordingCanvas: void drawPicture(android.graphics.Picture)>:<public>:<android.graphics.Picture.RecordingCanvas:android.graphics.Canvas>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setColorMaskEnabled(boolean,boolean,boolean,boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.app.EnterTransitionCoordinator: android.transition.Transition beginTransition(android.view.ViewGroup,boolean,boolean)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.String,java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.lang.String,int)>:<public>:<android.net.VpnService.Builder>
<android.filterfw.core.NativeProgram: boolean openNativeLibrary(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.transition.Transition.3: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Transition.3:android.animation.AnimatorListenerAdapter>
<android.print.PrintJobId.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.net.IpPrefix: int getPrefixLength()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()>:<public static>:<android.app.ActivityThread>
<android.graphics.Typeface: android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser.Family)>:<private static>:<android.graphics.Typeface>
<android.app.INotificationManager: void setPackageVisibilityOverride(java.lang.String,int,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.NativeFrame: int getCapacity()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.VoiceInteractor: void attachActivity(android.app.Activity)>:<>:<android.app.VoiceInteractor>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings: void setSaveFormData(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.filterfw.core.Filter: android.filterfw.core.Frame pullInput(java.lang.String)>:<protected final>:<android.filterfw.core.Filter>
<android.renderscript.Element: android.renderscript.Element I64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.print.PrinterId: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebViewDelegate.1: void <init>(android.webkit.WebViewDelegate,android.webkit.WebViewDelegate.OnTraceEnabledChangeListener)>:<>:<android.webkit.WebViewDelegate.1:java.lang.Runnable>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: int getProperty(int,android.os.BatteryProperty)>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.opengl.GLES20: void <clinit>()>:<static>:<android.opengl.GLES20>
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.IAccountManager: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteSession>
<android.net.MobileLinkQualityInfo: int getLteRsrq()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.opengl.GLES10: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.EnterTransitionCoordinator: void namedViewsReady(java.util.ArrayList,java.util.ArrayList)>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.AsyncTask.Status: void <init>(java.lang.String,int)>:<private>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>:<protected>:<android.os.ResultReceiver:android.os.Parcelable>
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>:<public final>:<android.mtp.MtpObjectInfo>
<android.os.UEventObserver: void nativeSetup()>:<private static native>:<android.os.UEventObserver>
<android.net.wifi.IWifiManager.Stub.Proxy: void setWifiEnableForP2p(boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.drawable.AnimatedRotateDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.VectorDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance()>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.webkit.CookieManager: void removeAllCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.net.wifi.WifiManager: void setSoftapMacFilter(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.app.AppOpsManager: void resetAllModes()>:<public>:<android.app.AppOpsManager>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable.InsetState,android.content.res.Resources)>:<private>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiCHRStateManager: android.net.wifi.WifiCHRStateManager getInstance()>:<public static>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Double4: void mul(double)>:<public>:<android.renderscript.Double4>
<android.os.IPowerManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.print.PrinterId: int hashCode()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>:<private static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.app.ActivityManagerProxy: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.SSLCertificateSocketFactory: void setAlpnProtocols(byte[][])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.renderscript.RenderScript: void nContextSetPriority(int)>:<>:<android.renderscript.RenderScript>
<android.app.admin.IDevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.opengl.GLLogWrapper: void glClearStencil(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActionBar.Tab: void <init>()>:<public>:<android.app.ActionBar.Tab>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.app.HwCustNotificationDummy: void <init>()>:<public>:<android.app.HwCustNotificationDummy:android.app.IHwCustNotification>
<android.net.arp.MultiGW: int getGWNum()>:<public>:<android.net.arp.MultiGW>
<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>:<>:<android.os.BaseBundle>
<android.graphics.Matrix.1: void setSkew(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.app.ExitTransitionCoordinator: android.animation.ObjectAnimator access.902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.webkit.CacheManager.CacheResult: void setContentLength(long)>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.AnimatedVectorDrawable: void <init>(android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable.1)>:<>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.Activity: void onBackPressed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.BackupTransport: java.lang.String transportDirName()>:<public>:<android.app.backup.BackupTransport>
<android.accounts.IAccountAuthenticator: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.graphics.NinePatch: void <init>(android.graphics.NinePatch)>:<public>:<android.graphics.NinePatch>
<android.app.ActivityManager.StackInfo: java.lang.String toString(java.lang.String)>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetherableBluetoothRegexs()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.webkit.CacheManager.CacheResult: java.io.OutputStream getOutputStream()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.filterfw.io.TextGraphReader.ImportPackageCommand: void execute(android.filterfw.io.TextGraphReader)>:<public>:<android.filterfw.io.TextGraphReader.ImportPackageCommand:android.filterfw.io.TextGraphReader.Command>
<android.app.EnterTransitionCoordinator: void startRejectedAnimations(java.util.ArrayList)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.Proxy: java.lang.String getDefaultHost()>:<public static final>:<android.net.Proxy>
<android.app.IActivityManager: void keyguardWaitingForActivityDrawn()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.Notification.Builder: void shrinkLine3Text(android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.renderscript.Short3: short dotProduct(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.database.MatrixCursor: byte[] getBlob(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.GLErrorWrapper: void glStencilFunc(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.VoiceInteractor: android.app.VoiceInteractor.Request pullRequest(com.android.internal.app.IVoiceInteractorRequest,boolean)>:<>:<android.app.VoiceInteractor>
<android.app.EnterTransitionCoordinator: android.transition.Transition access.700(android.app.EnterTransitionCoordinator,android.view.ViewGroup,boolean,boolean)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.filterfw.core.GLFrame: boolean generateNativeMipMap()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.SearchableInfo.ActionKeyInfo: int describeContents()>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: int getMaskType()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ResultInfo.1: void <init>()>:<>:<android.app.ResultInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pManagerHisiExt: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pManagerHisiExt>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.FilterGraph getGraph()>:<public>:<android.filterfw.GraphEnvironment.GraphHandle>
<android.webkit.WebView: java.lang.String getOriginalUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityThread: android.app.ActivityThread.ApplicationThread getApplicationThread()>:<public>:<android.app.ActivityThread>
<android.hwcontrol.HwWidgetFactory.HwTextView: android.widget.Editor getEditor(android.widget.TextView)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.app.Dialog: void sendShowMessage()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ActionBar: void <init>()>:<public>:<android.app.ActionBar>
<android.app.ProgressDialog: void onStop()>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.p2p.WifiP2pGroupList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants.DataState access.400(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.renderscript.Script.LaunchOptions: int access.500(android.renderscript.Script.LaunchOptions)>:<static>:<android.renderscript.Script.LaunchOptions>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.LinkProperties: boolean removeRoute(android.net.RouteInfo)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.Path: boolean native_isRect(long,android.graphics.RectF)>:<private static native>:<android.graphics.Path>
<android.os.IPowerManager: void startWakeUpReady(long)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.os.INetworkManagementService: void setInterfaceQuota(java.lang.String,long)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.R.menu: void <init>()>:<public>:<android.R.menu>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: void <init>(android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>:<public static>:<android.renderscript.RenderScript>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.graphics.Rect.1: void <init>()>:<>:<android.graphics.Rect.1:android.os.Parcelable.Creator>
<android.app.FragmentManagerState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.FragmentManagerState.1:android.os.Parcelable.Creator>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean packageHasActiveAdmins(java.lang.String,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.print.PrinterDiscoverySession: boolean isDestroyedNoCheck()>:<private>:<android.print.PrinterDiscoverySession>
<android.renderscript.Short2: short elementSum()>:<public>:<android.renderscript.Short2>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore create()>:<public>:<android.renderscript.ProgramStore.Builder>
<android.app.IBackupAgent: void doRestoreFinished(int,android.app.backup.IBackupManager)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.renderscript.Byte3: void add(byte)>:<public>:<android.renderscript.Byte3>
<android.os.Handler: boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long)>:<private>:<android.os.Handler>
<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.database.ContentObserver: void access.000(android.database.ContentObserver,boolean,android.net.Uri,int)>:<static>:<android.database.ContentObserver>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.os.Debug: void dumpNativeBacktraceToFile(int,java.lang.String)>:<public static native>:<android.os.Debug>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.Parcel: void readBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.opengl.GLErrorWrapper: void glDrawTexxOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2202(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.filterfw.core.VertexFrame: float[] getFloats()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.renderscript.FieldPacker: void addU64(long)>:<public>:<android.renderscript.FieldPacker>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.drm.DrmManagerClient: void createEventThreads()>:<private>:<android.drm.DrmManagerClient>
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.app.backup.IRestoreObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.os.TokenWatcher: void sendNotificationLocked(boolean)>:<private>:<android.os.TokenWatcher>
<android.database.sqlite.SQLiteDirectCursorDriver: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isLockTaskPermitted(java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.IMultiWinService.Stub.Proxy: int getNextTaskAtPos(int,int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Point: void <clinit>()>:<static>:<android.graphics.Point:android.os.Parcelable>
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Fragment: boolean isAdded()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.LinkProperties: boolean hasGlobalIPv6Address()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.WallpaperManager: android.content.ComponentName getDefaultWallpaperComponent(android.content.Context)>:<public static>:<android.app.WallpaperManager>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<protected>:<android.drm.DrmEvent>
<android.transition.ChangeBounds.5: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.5:android.util.Property>
<android.os.WorkSource: android.os.WorkSource addReturningNewbs(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable.InsetState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Mesh.Builder.Entry: void <init>(android.renderscript.Mesh.Builder)>:<>:<android.renderscript.Mesh.Builder.Entry>
<android.renderscript.Script: void setVar(int,long)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable.Orientation getOrientation()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkStatsHistory: void dumpCheckin(java.io.PrintWriter)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.graphics.Bitmap.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.Bitmap.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.net.wifi.p2p.WifiP2pManager: void checkServiceRequest(android.net.wifi.p2p.nsd.WifiP2pServiceRequest)>:<private static>:<android.net.wifi.p2p.WifiP2pManager>
<android.database.sqlite.SQLiteCursor: void finalize()>:<protected>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.DownloadManager.CursorTranslator: long getErrorCode(int)>:<private>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.app.EnterTransitionCoordinator: void access.300(android.app.EnterTransitionCoordinator)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.RegionIterator: boolean nativeNext(long,android.graphics.Rect)>:<private static native>:<android.graphics.RegionIterator>
<android.graphics.pdf.PdfEditor: void nativeSetPageCropBox(long,int,android.graphics.Rect)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.app.IActivityController.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IActivityController.Stub:android.os.Binder,android.app.IActivityController>
<android.database.sqlite.SQLiteConnection.OperationLog: android.database.sqlite.SQLiteConnection.Operation getOperationLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.os.SystemProperties: long getLong(java.lang.String,long)>:<public static>:<android.os.SystemProperties>
<android.renderscript.Int3: void addAt(int,int)>:<public>:<android.renderscript.Int3>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: int modulateAlpha(int,int)>:<private static>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.drm.DrmManagerClient: int _initialize()>:<private native>:<android.drm.DrmManagerClient>
<android.hsm.HwCameraPermWrapper: void confirmPermission()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.app.SharedPreferencesImpl: int access.300(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.Dialog: android.view.View onCreatePanelView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Short4: void mul(short)>:<public>:<android.renderscript.Short4>
<android.mtp.HwMtpDatabaseManager: android.mtp.MtpPropertyList getObjectPropertyList(long,long)>:<public abstract>:<android.mtp.HwMtpDatabaseManager>
<android.net.INetworkStatsService: void forceUpdateIfaces()>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.print.IPrintManager: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.net.INetworkPolicyListener.Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkPolicyListener.Stub:android.os.Binder,android.net.INetworkPolicyListener>
<android.transition.Transition: void cancel()>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.net.ConnectivityManager: boolean removeRequestForFeature(android.net.NetworkCapabilities)>:<private>:<android.net.ConnectivityManager>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.IPrintManager: void cancelPrintJob(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.core.GLFrame: void generateMipMap()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.NetworkInfo: int convertSubtype(int)>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>:<public abstract>:<android.filterfw.core.Program>
<android.app.ActionBar: void setHomeActionContentDescription(int)>:<public>:<android.app.ActionBar>
<android.transition.TransitionInflater: java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)>:<private>:<android.transition.TransitionInflater>
<android.opengl.GLLogWrapper: void glRenderbufferStorageOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.PPPOEConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.PPPOEConfig.1:android.os.Parcelable.Creator>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Element,int)>:<public>:<android.renderscript.Mesh.Builder>
<android.app.SearchManager: boolean launchAssistAction(int,java.lang.String,int)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Long2: android.renderscript.Long2 mul(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.graphics.Point.1: android.graphics.Point[] newArray(int)>:<public>:<android.graphics.Point.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: void nObjDestroy(long)>:<>:<android.renderscript.RenderScript>
<android.app.backup.IBackupManager.Stub.Proxy: void restoreAtInstall(java.lang.String,int)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()>:<public final>:<android.filterfw.core.Filter>
<android.os.FileUtils: java.lang.String buildValidFatFilename(java.lang.String)>:<public static>:<android.os.FileUtils>
<android.os.IMultiWinService.Stub.Proxy: int getMultiWinCount()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl: android.content.res.AssetManager getAssets()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.SearchDialog: void updateSearchAppIcon()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager.RegistrationListener)>:<public>:<android.net.nsd.NsdManager>
<android.app.admin.IDevicePolicyManager: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.StrictMode: void onBinderStrictModePolicyChange(int)>:<private static>:<android.os.StrictMode>
<android.app.NativeActivity: void onStartNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.print.PrintAttributes.MediaSize: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.MediaSize>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.dhcp.DhcpRequestPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpRequestPacket:android.net.dhcp.DhcpPacket>
<android.opengl.GLLogWrapper: void glDepthRangef(float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>:<public static>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.graphics.Paint: float native_measureText(java.lang.String,int)>:<private native>:<android.graphics.Paint>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>:<public abstract>:<android.filterfw.core.FrameManager>
<android.filterfw.core.Filter: void addFieldGenerator(android.filterfw.core.GenerateFieldPort,java.lang.reflect.Field)>:<private final>:<android.filterfw.core.Filter>
<android.renderscript.Matrix2f: void scale(float,float)>:<public>:<android.renderscript.Matrix2f>
<android.app.Dialog: void setCancelable(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats.Uid: long getAudioTurnedOnTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.renderscript.Byte2: void <init>(byte,byte)>:<public>:<android.renderscript.Byte2>
<android.app.admin.DevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.INotificationManager.Stub: void <init>()>:<public>:<android.app.INotificationManager.Stub:android.os.Binder,android.app.INotificationManager>
<android.os.storage.StorageManager.ObbActionListener: void onObbResult(java.lang.String,int,int)>:<public>:<android.os.storage.StorageManager.ObbActionListener:android.os.storage.IObbActionListener.Stub,android.os.Binder>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask access.102(android.netdetect.HwCustNetDetectServiceImpl,android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.ExitTransitionCoordinator: void access.200(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.Renderer access.1000(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildDiscoverPacket(int,int,byte[],boolean,byte[])>:<public static>:<android.net.dhcp.DhcpPacket>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.sax.Children: void <init>()>:<>:<android.sax.Children>
<android.renderscript.Float4: void addMultiple(android.renderscript.Float4,float)>:<public>:<android.renderscript.Float4>
<android.graphics.drawable.VectorDrawable.VGroup: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.Notification: java.lang.String access.500(android.app.Notification)>:<static>:<android.app.Notification:android.os.Parcelable>
<android.app.ContextImpl.8: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.8:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1702(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDitherEnabled(boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>:<public>:<android.webkit.WebChromeClient>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.webkit.WebViewDelegate: void setOnTraceEnabledChangeListener(android.webkit.WebViewDelegate.OnTraceEnabledChangeListener)>:<public>:<android.webkit.WebViewDelegate>
<android.graphics.BitmapRegionDecoder: void <init>(long)>:<private>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.mtp.MtpConstants: void <init>()>:<public>:<android.mtp.MtpConstants>
<android.renderscript.RenderScript: void rsnAllocationSetSurface(long,long,android.view.Surface)>:<native>:<android.renderscript.RenderScript>
<android.net.INetworkScoreCache.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkScoreCache.Stub.Proxy:android.net.INetworkScoreCache>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.LauncherActivity.1: void onClick(android.view.View)>:<public>:<android.app.LauncherActivity.1:android.view.View.OnClickListener>
<android.app.BackStackRecord.2: void <init>(android.app.BackStackRecord,android.view.ViewGroup,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.ArrayList,android.transition.Transition)>:<>:<android.app.BackStackRecord.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AccountAuthenticatorResponse: void <clinit>()>:<static>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>:<public>:<android.renderscript.FieldPacker>
<android.print.IPrintDocumentAdapter: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.app.Fragment: void registerForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.print.PageRange: void <clinit>()>:<static>:<android.print.PageRange:android.os.Parcelable>
<android.app.ActionBar.Tab: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.app.ActionBar.Tab>
<android.os.BatteryStats.Uid: long getWifiRunningTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.opengl.GLLogWrapper: void glColor4x(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>:<public>:<android.graphics.Canvas>
<android.graphics.RectF: java.lang.String toString()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable.LayerState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLErrorWrapper: void glMultMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Script: void bindAllocation(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.renderscript.Double4: void copyTo(double[],int)>:<public>:<android.renderscript.Double4>
<android.renderscript.ProgramStore.BlendSrcFunc: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.renderscript.ProgramStore.BlendDstFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.content.Context,int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.os.Process: int getUidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.net.IEthernetManager.Stub.Proxy: void removeListener(android.net.IEthernetServiceListener)>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.graphics.drawable.VectorDrawable.VGroup: void setRotation(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.print.PrintDocumentAdapter: void onFinish()>:<public>:<android.print.PrintDocumentAdapter>
<android.print.IPrintDocumentAdapter.Stub: void <init>()>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.storage.IMountService: int formatVolume(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.hwtheme.HwThemeManager: int getThemeColor(int[],int,android.util.TypedValue,android.content.res.Resources,boolean)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.ddm.DdmHandleHeap: void register()>:<public static>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.INetworkPolicyManager.Stub.Proxy: void addUidPolicy(int,int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.BitmapFactory>
<android.net.DhcpInfo: java.lang.String toString()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.renderscript.RenderScript: void nElementGetNativeData(long,int[])>:<>:<android.renderscript.RenderScript>
<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,int,long,long,long,long,long)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.RenderScript: void nFileA3DGetIndexEntries(long,int,int[],java.lang.String[])>:<>:<android.renderscript.RenderScript>
<android.app.IActivityManager: long inputDispatchingTimedOut(int,boolean,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.webkit.WebSyncManager: void onSyncInit()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.app.ActivityThread.ActivityClientRecord: void <init>()>:<>:<android.app.ActivityThread.ActivityClientRecord>
<android.app.ActivityManager.ProcessErrorStateInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.ProcessErrorStateInfo.1:android.os.Parcelable.Creator>
<android.graphics.Camera: void rotateY(float)>:<public native>:<android.graphics.Camera>
<android.app.backup.FileBackupHelperBase: void performBackup_checked(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,java.lang.String[],java.lang.String[])>:<static>:<android.app.backup.FileBackupHelperBase>
<android.app.SearchableInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.SearchableInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.backup.BackupAgent.BackupServiceBinder: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.net.wifi.WifiScanner: void <clinit>()>:<static>:<android.net.wifi.WifiScanner>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.NetworkQuotaInfo: void <clinit>()>:<static>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.app.IApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.PorterDuff.Mode: void <clinit>()>:<static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.os.Handler: void handleCallback(android.os.Message)>:<private static>:<android.os.Handler>
<android.webkit.ClientCertRequest: java.lang.String getHost()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String getCurrentTransport()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.transition.ChangeScroll: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.graphics.Paint: long native_setPathEffect(long,long)>:<private static native>:<android.graphics.Paint>
<android.net.http.HttpAuthHeader: boolean getStale()>:<public>:<android.net.http.HttpAuthHeader>
<android.app.ActivityThread.ApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.Uri.OpaqueUri: boolean isHierarchical()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.os.BatteryStats: long computeBatteryTimeRemaining(long)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.FragmentManagerImpl: void makeInactive(android.app.Fragment)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.IWifiManager: java.util.List getBatchedScanResults(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2602(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.LinkAddress: int describeContents()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.app.IActivityContainer.Stub.Proxy: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.mtp.HwMtpDatabaseManagerDummy: android.mtp.MtpPropertyList getObjectPropertyList(long,long)>:<public>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.app.ActivityManagerProxy: android.os.Bundle getAssistContextExtras(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IWallpaperManager: java.lang.String getName()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glColorMask(boolean,boolean,boolean,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeTransportType(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.webkit.WebView: boolean access.801(android.webkit.WebView,android.view.KeyEvent)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.http.AndroidHttpClient.1: void <init>()>:<>:<android.net.http.AndroidHttpClient.1:org.apache.http.HttpRequestInterceptor>
<android.graphics.pdf.PdfDocument: void dispose()>:<private>:<android.graphics.pdf.PdfDocument>
<android.net.wifi.p2p.WifiP2pGroup: boolean isClientListEmpty()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.app.usage.UsageEvents.Event: int getEventType()>:<public>:<android.app.usage.UsageEvents.Event>
<android.renderscript.RenderScript: void rsnScriptForEachClipped(long,long,int,long,long,int,int,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLLogWrapper: void glLightModelx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ContextImpl: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.GradientDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.BatteryProperties.1: void <init>()>:<>:<android.os.BatteryProperties.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiLinkLayerStats: java.lang.String toString()>:<public>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.SupplicantState: void <clinit>()>:<static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.graphics.Xfermode: void <init>()>:<public>:<android.graphics.Xfermode>
<android.app.FragmentManagerImpl: void dispatchResume()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.pdf.PdfDocument: void nativeClose(long)>:<private native>:<android.graphics.pdf.PdfDocument>
<android.graphics.pdf.PdfEditor: void nativeWrite(long,int)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.os.Parcel.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.Parcel.1:android.os.Parcelable.Creator>
<android.net.wifi.SupplicantState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.SupplicantState.1:android.os.Parcelable.Creator>
<android.net.INetworkStatsService.Stub.Proxy: void forceUpdateIfaces()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.graphics.drawable.NinePatchDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Matrix3f: void multiply(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.renderscript.RenderScript: long nMeshCreate(long[],long[],int[])>:<>:<android.renderscript.RenderScript>
<android.print.ILayoutResultCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.net.http.DelegatingSSLSession: boolean isValid()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStartTiming(java.lang.String)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.graphics.drawable.BitmapDrawable: void verifyState(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.http.RequestHandle: java.lang.String authorizationHeader(boolean)>:<public static>:<android.net.http.RequestHandle>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.accounts.IAccountAuthenticator.Stub: void <init>()>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>:<public final>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.admin.IDevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.webkit.WebChromeClient: boolean onJsTimeout()>:<public>:<android.webkit.WebChromeClient>
<android.app.ActivityManagerNative: boolean isSystemReady()>:<public static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.net.Uri.StringUri: java.lang.String parsePath(java.lang.String,int)>:<static>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>:<public>:<android.webkit.WebChromeClient>
<android.transition.TransitionSet: android.transition.TransitionSet addListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.StrictMode.AndroidBlockGuardPolicy: int getPolicyMask()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.database.CursorWindow: java.lang.String nativeGetName(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.Allocation: long getIDSafe()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.hwtheme.HwThemeManagerDummy: android.content.res.IHwConfiguration initHwConfiguration()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.SearchableInfo: void <clinit>()>:<static>:<android.app.SearchableInfo:android.os.Parcelable>
<android.print.PrintAttributes.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.app.ActivityManager: void dumpService(java.io.PrintWriter,java.io.FileDescriptor,java.lang.String,java.lang.String[])>:<private static>:<android.app.ActivityManager>
<android.app.IApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.ActivityManager.TaskDescription: java.lang.String getIconFilename()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>:<public>:<android.graphics.Canvas>
<android.app.IActivityManager: boolean isTopActivityImmersive()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>:<public>:<android.drm.DrmManagerClient>
<android.net.ConnectivityManager: int setUsbTethering(boolean)>:<public>:<android.net.ConnectivityManager>
<android.net.ConnectivityManager: boolean isNetworkTypeWifi(int)>:<public static>:<android.net.ConnectivityManager>
<android.app.IActivityManager: boolean finishActivityAffinity(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.net.wifi.HwWifiStatStore: void readWifiCHRStat()>:<public>:<android.net.wifi.HwWifiStatStore>
<android.transition.ChangeBounds.4: void set(android.view.View,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.4:android.util.Property>
<android.net.wifi.WifiConfiguration: boolean hasNoInternetAccess()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.LauncherActivity.ActivityAdapter: android.widget.Filter getFilter()>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,int,int,long,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.ActivityThread: android.app.ActivityThread.ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean)>:<public final>:<android.app.ActivityThread>
<android.app.ActivityTransitionCoordinator: void showViews(java.util.ArrayList,boolean)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.ContextImpl: int resolveUserId(android.net.Uri)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.webkit.WebViewProvider: void addJavascriptInterface(java.lang.Object,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>:<public static>:<android.net.TrafficStats>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.ActionBar: void setDisplayOptions(int)>:<public abstract>:<android.app.ActionBar>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.GLFrame: boolean getNativeBitmap(android.graphics.Bitmap)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.LauncherActivity: void updateAlertTitle()>:<private>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.LocalSocketImpl: void bindLocal(java.io.FileDescriptor,java.lang.String,int)>:<private native>:<android.net.LocalSocketImpl>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread: void access.2600(android.app.ActivityThread,android.os.IBinder)>:<static>:<android.app.ActivityThread>
<android.graphics.Paint: boolean isStrikeThruText()>:<public final>:<android.graphics.Paint>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void start()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.net.MobileLinkQualityInfo: int getCdmaEcio()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.os.StatFs: android.system.StructStatVfs doStat(java.lang.String)>:<private static>:<android.os.StatFs>
<android.os.IMultiWinService: int getFocusMultiWinFrame(android.graphics.Rect)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.wifi.WifiScanner.WifiChangeSettings.1: void <init>()>:<>:<android.net.wifi.WifiScanner.WifiChangeSettings.1:android.os.Parcelable.Creator>
<android.net.WifiKey: int describeContents()>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.Drawable: boolean setState(int[])>:<public>:<android.graphics.drawable.Drawable>
<android.app.backup.BackupAgent.BackupServiceBinder: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.dhcp.DhcpInformPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpInformPacket:android.net.dhcp.DhcpPacket>
<android.net.MobileDataStateTracker.1: void onSignalStrengthsChanged(android.telephony.SignalStrength)>:<public>:<android.net.MobileDataStateTracker.1:android.telephony.PhoneStateListener>
<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.ImageFormat: void <init>()>:<public>:<android.graphics.ImageFormat>
<android.database.CursorWindow: double getDouble(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>:<protected>:<android.net.LocalSocketImpl>
<android.net.wifi.p2p.WifiP2pManager: void checkP2pConfig(android.net.wifi.p2p.WifiP2pConfig)>:<private static>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.INotificationManager.Stub: android.app.INotificationManager asInterface(android.os.IBinder)>:<public static>:<android.app.INotificationManager.Stub:android.os.Binder,android.app.INotificationManager>
<android.net.wifi.BatchedScanResult: void <init>()>:<public>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.app.WallpaperInfo.1: android.app.WallpaperInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.WallpaperInfo.1:android.os.Parcelable.Creator>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews.OnClickHandler,android.os.Looper)>:<public>:<android.appwidget.AppWidgetHost>
<android.renderscript.Element: android.renderscript.Element U16_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: int getOpacity()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.database.CursorWrapper: boolean isAfterLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.RenderScript: void nScriptSetVarObj(long,int,long)>:<>:<android.renderscript.RenderScript>
<android.renderscript.Long2: void <init>()>:<public>:<android.renderscript.Long2>
<android.app.ContextImpl: java.lang.String[] databaseList()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.PowerManager.WakeLock: void release()>:<public>:<android.os.PowerManager.WakeLock>
<android.hsm.HwMediaPermWrapper: boolean confirmMediaPreparePermission()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.renderscript.ScriptIntrinsicColorMatrix: void setMatrix()>:<private>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.LargeBitmap: void checkRecycled(java.lang.String)>:<private>:<android.graphics.LargeBitmap>
<android.transition.ChangeBounds.9: void <init>(android.transition.ChangeBounds,android.view.ViewGroup)>:<>:<android.transition.ChangeBounds.9:android.transition.Transition.TransitionListenerAdapter>
<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)>:<public static>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Float4: android.renderscript.Float4 mul(android.renderscript.Float4,android.renderscript.Float4)>:<public static>:<android.renderscript.Float4>
<android.graphics.Interpolator: int nativeTimeToValues(long,int,float[])>:<private static native>:<android.graphics.Interpolator>
<android.net.VpnService: boolean setUnderlyingNetworks(android.net.Network[])>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActivityTransitionCoordinator: void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean)>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Byte4: void <init>(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.graphics.PointF: int hashCode()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.webkit.URLUtil: byte[] decode(byte[])>:<public static>:<android.webkit.URLUtil>
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)>:<>:<android.net.http.IdleCache>
<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.transition.Transition: long getDuration()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.os.storage.IMountService: int verifyEncryptionPassword(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.Parcel: java.io.FileDescriptor dupFileDescriptor(java.io.FileDescriptor)>:<static native>:<android.os.Parcel>
<android.app.ApplicationThreadProxy: void scheduleEnterAnimationComplete(android.os.IBinder)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.LocalSocket: void shutdownOutput()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.accounts.ChooseAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLLogWrapper: void glShadeModel(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Int4: android.renderscript.Int4 add(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.net.wifi.WifiInfo: void setMacAddress(java.lang.String)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.Paint: boolean isElegantTextHeight()>:<public native>:<android.graphics.Paint>
<android.renderscript.RenderScript: long nSamplerCreate(int,int,int,int,int,float)>:<>:<android.renderscript.RenderScript>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.alsa.AlsaDevicesParser: android.alsa.AlsaDevicesParser.AlsaDeviceRecord getDeviceRecordAt(int)>:<public>:<android.alsa.AlsaDevicesParser>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityThread.ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.IUiAutomationConnection.Stub.Proxy: boolean setRotation(int)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.net.ProxyInfo: boolean equals(java.lang.Object)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.filterfw.io.PatternScanner: int lineNo()>:<public>:<android.filterfw.io.PatternScanner>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.os.BatteryStats: long getWifiSupplStateTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Presentation.1: void <init>(android.content.Context,int,android.view.WindowManagerImpl)>:<>:<android.app.Presentation.1:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.webkit.Plugin.DefaultClickHandler: void handleClickEvent(android.content.Context)>:<public>:<android.webkit.Plugin.DefaultClickHandler:android.webkit.Plugin.PreferencesClickHandler,android.content.DialogInterface.OnClickListener>
<android.os.UEventObserver.UEventThread: void run()>:<public>:<android.os.UEventObserver.UEventThread:java.lang.Thread>
<android.database.CursorWindow: boolean setNumColumns(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.http.ConnectionThread: java.lang.String toString()>:<public>:<android.net.http.ConnectionThread:java.lang.Thread>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.ColorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebViewProvider: void flingScroll(int,int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.print.PrintJobInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper.PointerInfo,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Path.Direction: void <clinit>()>:<static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.print.PrinterCapabilitiesInfo: java.util.List access.000(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.filterfw.core.InputPort: java.lang.Object getTarget()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.Rect: boolean isEmpty()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType valueOf(java.lang.String)>:<public static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.net.INetworkPolicyManager: boolean getRestrictBackground()>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiCHRStateManager: int getDhcpSerialNo()>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.net.Uri: java.lang.String getEncodedFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.InterfaceConfiguration: boolean isActive()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress,java.lang.String)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.IMultiWinService.Stub.Proxy: int getIsTopMWFlag()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.webkit.IWebViewUpdateService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.webkit.IWebViewUpdateService.Stub.Proxy:android.webkit.IWebViewUpdateService>
<android.app.SearchDialog.SearchBar: void setSearchDialog(android.app.SearchDialog)>:<public>:<android.app.SearchDialog.SearchBar:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.filterfw.core.GLFrame: boolean hasNativeAllocation()>:<protected>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.Dialog: void onContentChanged()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebViewFactory.1: void run()>:<public>:<android.webkit.WebViewFactory.1:java.lang.Runnable>
<android.transition.Transition.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Transition.2:android.animation.AnimatorListenerAdapter>
<android.renderscript.Long3: android.renderscript.Long3 div(android.renderscript.Long3,long)>:<public static>:<android.renderscript.Long3>
<android.opengl.GLErrorWrapper: void glDepthRangex(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActionBar: android.content.Context getThemedContext()>:<public>:<android.app.ActionBar>
<android.renderscript.RenderScript: long rsnAllocationCreateBitmapRef(long,long,android.graphics.Bitmap)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.hsm.HwSystemManager: boolean allowOp(android.net.Uri,int)>:<public static>:<android.hsm.HwSystemManager>
<android.app.ActivityOptions: android.os.ResultReceiver getResultReceiver()>:<public>:<android.app.ActivityOptions>
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.http.Connection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>:<abstract>:<android.net.http.Connection>
<android.net.NetworkRequest: java.lang.String toString()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.net.IEthernetManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.database.sqlite.SQLiteConnection: void finalizePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Debug: int setAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.net.arp.MultiGW: void setGWMACAddr(java.lang.String)>:<public>:<android.net.arp.MultiGW>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.PowerManager.WakeLock: void acquire()>:<public>:<android.os.PowerManager.WakeLock>
<android.net.IEthernetServiceListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.IEthernetServiceListener.Stub.Proxy:android.net.IEthernetServiceListener>
<android.os.StrictMode.VmPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.VmPolicy>
<android.graphics.Paint: int native_getTextWidths(long,long,java.lang.String,int,int,int,float[])>:<private static native>:<android.graphics.Paint>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType[] values()>:<public static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.transition.ChangeScroll: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.net.wifi.HwWifiCHRService: void setRssi(int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.net.http.HttpsConnection: void closeConnection()>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.graphics.Matrix: void native_preConcat(long,long)>:<private static native>:<android.graphics.Matrix>
<android.graphics.drawable.ColorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.MemoryFile: java.io.InputStream getInputStream()>:<public>:<android.os.MemoryFile>
<android.renderscript.RenderScript: void nAllocationSetSurface(long,android.view.Surface)>:<>:<android.renderscript.RenderScript>
<android.app.backup.BackupDataInput: int readNextHeader_native(long,android.app.backup.BackupDataInput.EntityHeader)>:<private native>:<android.app.backup.BackupDataInput>
<android.net.Proxy: boolean isLocalHost(java.lang.String)>:<private static final>:<android.net.Proxy>
<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ActivityManager.ProcessErrorStateInfo.1: android.app.ActivityManager.ProcessErrorStateInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo.1:android.os.Parcelable.Creator>
<android.os.Process: int getParentPid(int)>:<public static final>:<android.os.Process>
<android.net.LinkQualityInfo.1: android.net.LinkQualityInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.LinkQualityInfo.1:android.os.Parcelable.Creator>
<android.app.ActionBar: boolean isTitleTruncated()>:<public>:<android.app.ActionBar>
<android.os.WorkSource: int get(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.Canvas: boolean native_clipPath(long,long,int)>:<private static native>:<android.graphics.Canvas>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: int getCurrentIndex()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Bundle: short getShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLLogWrapper: boolean glIsFramebufferOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glMultMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>:<public>:<android.filterfw.core.FilterGraph>
<android.drm.DrmStore.RightsStatus: void <init>()>:<public>:<android.drm.DrmStore.RightsStatus>
<android.app.ActionBar: boolean invalidateOptionsMenu()>:<public>:<android.app.ActionBar>
<android.os.INetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>:<public abstract>:<android.os.Parcelable.Creator>
<android.appwidget.AppWidgetHost.Callbacks: void <init>(android.appwidget.AppWidgetHost)>:<>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glScalef(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiConfiguration: void trimScanResultsCache(int)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.hwtheme.HwThemeManager.IHwThemeManager: void setThemeFont()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.graphics.PointF: float length()>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.transition.ChangeTransform.3: void <init>(android.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.transition.ChangeTransform.Transforms,android.transition.ChangeTransform.PathAnimatorMatrix)>:<>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getMountedObbPath(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.DrawableContainer: boolean needsMirroring()>:<private>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrinterDiscoverySession: void stopPrinterDiscovery()>:<public final>:<android.print.PrinterDiscoverySession>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.net.nsd.INsdManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.nsd.INsdManager.Stub:android.os.Binder,android.net.nsd.INsdManager>
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.print.PrinterCapabilitiesInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String compressDnsName(java.lang.String)>:<private static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.database.IBulkCursor: void close()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int,java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.app.LocalActivityManager: void dispatchPause(boolean)>:<public>:<android.app.LocalActivityManager>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setZ(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.app.Notification.Style: void restoreFromExtras(android.os.Bundle)>:<protected>:<android.app.Notification.Style>
<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.Trace: void beginSection(java.lang.String)>:<public static>:<android.os.Trace>
<android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.transition.Slide.3: float getGoneY(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.3:android.transition.Slide.CalculateSlideVertical>
<android.appwidget.AppWidgetHostView: int generateId()>:<private>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.app.UiAutomation: void connect()>:<public>:<android.app.UiAutomation>
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrintAttributes: void copyFrom(android.print.PrintAttributes)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.hsm.HwMediaPermWrapper: void setOutputFile(android.media.MediaRecorder,java.lang.String,long,long)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.filterfw.io.TextGraphReader.AddLibraryCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader.AddLibraryCommand:android.filterfw.io.TextGraphReader.Command>
<android.net.Uri.StringUri: java.lang.String parseSsp()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.NetworkCapabilities.1: android.net.NetworkCapabilities[] newArray(int)>:<public>:<android.net.NetworkCapabilities.1:android.os.Parcelable.Creator>
<android.net.TrafficStats: void incrementOperationCount(int)>:<public static>:<android.net.TrafficStats>
<android.renderscript.RenderScript: void rsnScriptSetVarV(long,long,int,byte[])>:<native>:<android.renderscript.RenderScript>
<android.graphics.drawable.Ripple.LogInterpolator: float getInterpolation(float)>:<public>:<android.graphics.drawable.Ripple.LogInterpolator:android.animation.TimeInterpolator>
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.database.sqlite.SQLiteConnectionPool: void wakeConnectionWaitersLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.BatteryStats.Uid.Proc: long getForegroundTime(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.net.StaticIpConfiguration: void <init>()>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.os.BatteryStats: java.lang.String getGpsdWakeLock(int)>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.WorkSource.1: android.os.WorkSource[] newArray(int)>:<public>:<android.os.WorkSource.1:android.os.Parcelable.Creator>
<android.graphics.Region.1: android.graphics.Region[] newArray(int)>:<public>:<android.graphics.Region.1:android.os.Parcelable.Creator>
<android.net.LinkProperties: boolean isIdenticalMtu(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.Handler: boolean hasMessages(int)>:<public final>:<android.os.Handler>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void buildShaderString()>:<private>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.app.Notification.BuilderRemoteViews: java.lang.Object clone()>:<public volatile>:<android.app.Notification.BuilderRemoteViews:android.widget.RemoteViews>
<android.graphics.drawable.ClipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Service: void stopSelf()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.NetworkStats.NonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.Object)>:<public abstract>:<android.net.NetworkStats.NonMonotonicObserver>
<android.os.BatteryStats: int getDischargeCurrentLevel()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.database.MatrixCursor: long getLong(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.os.Process: int getThreadGroupLeader(int)>:<public static final>:<android.os.Process>
<android.graphics.drawable.TransitionDrawable: void <init>()>:<>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Trace: void setAppTracingAllowed(boolean)>:<public static>:<android.os.Trace>
<android.net.wifi.WifiEnterpriseConfig.Phase2: void <init>()>:<private>:<android.net.wifi.WifiEnterpriseConfig.Phase2>
<android.os.Debug: void resetThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object[])>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLLogWrapper: void glMaterialx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.SharedPreferencesImpl: java.util.Map access.400(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.transition.CircularPropagation: void <init>()>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.BackStackRecord: android.util.ArrayMap access.100(android.app.BackStackRecord,android.app.BackStackRecord.TransitionState,boolean,android.app.Fragment)>:<static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.TrafficStats: long getTotalRxPackets()>:<public static>:<android.net.TrafficStats>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setX(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getScanResults(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.SurfaceTexture: void nativeSetDefaultBufferSize(int,int)>:<private native>:<android.graphics.SurfaceTexture>
<android.app.Notification.Action.1: android.app.Notification.Action createFromParcel(android.os.Parcel)>:<public>:<android.app.Notification.Action.1:android.os.Parcelable.Creator>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebChromeClient>
<android.accounts.ChooseAccountTypeActivity: void <init>()>:<public>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.http.DelegatingSSLSession.CertificateWrap: void <init>(java.security.cert.Certificate)>:<public>:<android.net.http.DelegatingSSLSession.CertificateWrap:android.net.http.DelegatingSSLSession>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDropBox()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.print.PrinterCapabilitiesInfo: void readResolutions(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.os.ResultReceiver.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.ResultReceiver.1:android.os.Parcelable.Creator>
<android.net.http.HttpLog: void e(java.lang.String)>:<static>:<android.net.http.HttpLog>
<android.graphics.Canvas.EdgeType: void <clinit>()>:<static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.app.ListActivity: void onDestroy()>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiManager: int getAllowScansWithTraffic()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.drawable.PaintDrawable: void <init>()>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.graphics.drawable.LayerDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiManager: void init()>:<private>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Instrumentation.SyncRunnable: void waitForComplete()>:<public>:<android.app.Instrumentation.SyncRunnable:java.lang.Runnable>
<android.net.Uri: java.lang.String getUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Activity.1: android.view.View findViewById(int)>:<public>:<android.app.Activity.1:android.app.FragmentContainer>
<android.app.FragmentTransaction: android.app.FragmentTransaction setSharedElements(android.util.Pair[])>:<public abstract transient>:<android.app.FragmentTransaction>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent)>:<public static>:<android.app.ActivityOptions>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,java.lang.String)>:<public static>:<android.os.RecoverySystem>
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.PrinterDiscoverySession: void destroyNoCheck()>:<private>:<android.print.PrinterDiscoverySession>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.graphics.Path: void native_arcTo(long,float,float,float,float,float,float,boolean)>:<private static native>:<android.graphics.Path>
<android.app.ActivityManager.RecentTaskInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Long3: void copyTo(long[],int)>:<public>:<android.renderscript.Long3>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.renderscript.Float2: android.renderscript.Float2 sub(android.renderscript.Float2,android.renderscript.Float2)>:<public static>:<android.renderscript.Float2>
<android.app.IUserSwitchObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IUserSwitchObserver.Stub:android.os.Binder,android.app.IUserSwitchObserver>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.SntpClient: void writeTimeStamp(byte[],int,long)>:<private>:<android.net.SntpClient>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.ColorDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.accounts.ChooseAccountActivity.ViewHolder: void <init>()>:<private>:<android.accounts.ChooseAccountActivity.ViewHolder>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.RenderScript: void rsnScriptGroupExecute(long,long)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLES11: void <clinit>()>:<static>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.core.Filter: int getSleepDelay()>:<public final>:<android.filterfw.core.Filter>
<android.graphics.Region.Op: android.graphics.Region.Op[] values()>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.mtp.MtpDevice: boolean open(android.hardware.usb.UsbDeviceConnection)>:<public>:<android.mtp.MtpDevice>
<android.filterfw.io.TextGraphReader.AllocateFilterCommand: void execute(android.filterfw.io.TextGraphReader)>:<public>:<android.filterfw.io.TextGraphReader.AllocateFilterCommand:android.filterfw.io.TextGraphReader.Command>
<android.app.SearchDialog: void updateSearchAutoComplete()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.graphics.drawable.RotateDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: void <init>(android.app.UiAutomation)>:<>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.print.PrinterDiscoverySession: void throwIfNotCalledOnMainThread()>:<private static>:<android.print.PrinterDiscoverySession>
<android.renderscript.Long4: android.renderscript.Long4 add(android.renderscript.Long4,long)>:<public static>:<android.renderscript.Long4>
<android.app.Application: void dispatchActivityStopped(android.app.Activity)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.wifi.ScanResult: void averageRssi(int,long,int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.os.Parcel: double nativeReadDouble(long)>:<private static native>:<android.os.Parcel>
<android.graphics.Paint: long native_setXfermode(long,long)>:<private static native>:<android.graphics.Paint>
<android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>:<public>:<android.os.BaseBundle>
<android.os.IRemoteCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IRemoteCallback.Stub.Proxy:android.os.IRemoteCallback>
<android.appwidget.AppWidgetHost.Callbacks: void providersChanged()>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.graphics.drawable.ClipDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiManager: void setWifiApStateByManual(boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.AppOpsManager: boolean opAllowSystemBypassRestriction(int)>:<public static>:<android.app.AppOpsManager>
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])>:<static>:<android.app.DownloadManager>
<android.graphics.Path: void native_rewind(long)>:<private static native>:<android.graphics.Path>
<android.print.PrintAttributes: android.print.PrintAttributes asPortrait()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.net.LocalSocket: void <init>(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.IActivityManager: void requestBugReport()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.print.PrintDocumentInfo.1: void <init>()>:<>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.app.Notification.Action.WearableExtender: void setFlag(int,boolean)>:<private>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.graphics.Matrix: boolean preSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.net.http.IdleCache: void access.200(android.net.http.IdleCache)>:<static>:<android.net.http.IdleCache>
<android.app.Notification.Builder: void resetStandardTemplate(android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.app.IAppTask.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IAppTask.Stub:android.os.Binder,android.app.IAppTask>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock()>:<public>:<android.app.AlarmManager>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLLogWrapper: java.nio.ByteBuffer access.000(android.opengl.GLLogWrapper,int,java.nio.Buffer)>:<static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,java.net.InetAddress)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLES20: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES20>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>:<public static>:<android.transition.TransitionManager>
<android.print.PrintJobId: void <init>()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)>:<public static>:<android.transition.Scene>
<android.app.job.JobInfo: void <init>(android.app.job.JobInfo.Builder)>:<private>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.ActivityThread.ReceiverData: java.lang.String toString()>:<public>:<android.app.ActivityThread.ReceiverData:android.content.BroadcastReceiver.PendingResult>
<android.opengl.GLES10: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ContextImpl.50: void <init>()>:<>:<android.app.ContextImpl.50:android.app.ContextImpl.ServiceFetcher>
<android.accounts.IAccountAuthenticator: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.print.PrintJobInfo: void setPages(android.print.PageRange[])>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)>:<private>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.os.storage.IMountShutdownObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountShutdownObserver.Stub:android.os.Binder,android.os.storage.IMountShutdownObserver>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode.VmPolicy)>:<public static>:<android.os.StrictMode>
<android.net.NetworkStateTracker: void setNetId(int)>:<public abstract>:<android.net.NetworkStateTracker>
<android.net.MobileDataStateTracker: void sloge(java.lang.String)>:<private static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IUiAutomationConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.app.ContextImpl: android.content.Context getApplicationContext()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>:<public>:<android.app.ResultInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: android.database.sqlite.SQLiteSession.Transaction obtainTransaction(int,android.database.sqlite.SQLiteTransactionListener)>:<private>:<android.database.sqlite.SQLiteSession>
<android.graphics.drawable.AnimatedRotateDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>:<public>:<android.app.RemoteInput.Builder>
<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.os.INetworkManagementService: void stopClatd(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.accounts.AccountManagerResponse.1: android.accounts.AccountManagerResponse createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.os.BatteryProperty: void readFromParcel(android.os.Parcel)>:<public>:<android.os.BatteryProperty:android.os.Parcelable>
<android.app.backup.BackupTransport.TransportImpl: int finishBackup()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.database.CursorWrapper: boolean requery()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)>:<private static final>:<android.database.DatabaseUtils>
<android.app.ExitTransitionCoordinator.7: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.7:java.lang.Runnable>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.app.IStopUserCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IStopUserCallback.Stub.Proxy:android.app.IStopUserCallback>
<android.os.storage.StorageManager.ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()>:<>:<android.os.storage.StorageManager.ObbListenerDelegate>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.transition.ChangeTransform.1: void set(android.transition.ChangeTransform.PathAnimatorMatrix,float[])>:<public>:<android.transition.ChangeTransform.1:android.util.Property>
<android.app.Fragment: void performDestroyView()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.backup.FullBackupDataOutput: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FullBackupDataOutput>
<android.graphics.drawable.RotateDrawable: void <init>()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)>:<>:<android.os.BaseBundle>
<android.print.IPrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public abstract>:<android.print.IPrinterDiscoveryObserver:android.os.IInterface>
<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,int,int,java.lang.String)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.app.ActivityView.ActivityContainerWrapper: void attachToDisplay(int)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.os.UserManager: boolean markGuestForDeletion(int)>:<public>:<android.os.UserManager>
<android.net.http.RequestHandle: java.lang.String computeDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private>:<android.net.http.RequestHandle>
<android.net.arp.ArpPeer: boolean doArp(java.lang.String,android.net.LinkProperties,int,int,int)>:<public static>:<android.net.arp.ArpPeer>
<android.webkit.WebView: void clearFormData()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Bitmap: void setHeight(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.mtp.HwMtpDatabaseManager: void hwStoreObjects(int,android.database.Cursor)>:<public abstract>:<android.mtp.HwMtpDatabaseManager>
<android.app.Activity.NonConfigurationInstances: void <init>()>:<>:<android.app.Activity.NonConfigurationInstances>
<android.net.wifi.WifiManager: boolean startScan()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ActivityTransitionCoordinator: void setSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF,int[])>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.Uri.StringUri: java.lang.String getFragment()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <init>(android.appwidget.AppWidgetHostView.1)>:<>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.transition.ChangeImageTransform.2: void set(android.widget.ImageView,android.graphics.Matrix)>:<public>:<android.transition.ChangeImageTransform.2:android.util.Property>
<android.app.ActivityThread.Profiler: void stopProfiling()>:<public>:<android.app.ActivityThread.Profiler>
<android.filterfw.core.Filter: void setInitialInputValues(android.filterfw.core.KeyValueMap)>:<private final>:<android.filterfw.core.Filter>
<android.app.SharedPreferencesImpl: java.lang.Object access.700(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.renderscript.Font.FontFamily: void <init>()>:<private>:<android.renderscript.Font.FontFamily>
<android.app.BackStackRecord: void access.000(android.app.BackStackRecord,java.util.ArrayList,int,android.transition.Transition)>:<static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.admin.IDevicePolicyManager.Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>:<public static>:<android.app.admin.IDevicePolicyManager.Stub:android.os.Binder,android.app.admin.IDevicePolicyManager>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.LayerDrawable.ChildDrawable: void <init>()>:<>:<android.graphics.drawable.LayerDrawable.ChildDrawable>
<android.webkit.WebViewProvider: android.graphics.Picture capturePicture()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.TokenWatcher: void dump(java.io.PrintWriter)>:<public>:<android.os.TokenWatcher>
<android.app.backup.BackupTransport: java.lang.String dataManagementLabel()>:<public>:<android.app.backup.BackupTransport>
<android.mtp.MtpDevice: boolean importFile(int,java.lang.String)>:<public>:<android.mtp.MtpDevice>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.database.CursorToBulkCursorAdaptor: void deactivate()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.accounts.Account: int hashCode()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.drm.DrmUtils: android.drm.DrmUtils.ExtendedMetadataParser getExtendedMetadataParser(byte[])>:<public static>:<android.drm.DrmUtils>
<android.transition.ChangeBounds.2: android.graphics.PointF get(android.transition.ChangeBounds.ViewBounds)>:<public>:<android.transition.ChangeBounds.2:android.util.Property>
<android.app.ResourcesManager: boolean applyCompatConfiguration(int,android.content.res.Configuration)>:<public>:<android.app.ResourcesManager>
<android.app.ProfilerInfo.1: android.app.ProfilerInfo[] newArray(int)>:<public>:<android.app.ProfilerInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstIn()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.filterfw.core.NativeFrame: void setInts(int[])>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.drawable.ColorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.Notification.BigPictureStyle: void populateBigContentView(android.app.Notification)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.net.LinkAddress: int getNetworkPrefixLength()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.http.LoggingEventHandler: void endData()>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.backup.BackupHelperDispatcher: int readHeader_native(android.app.backup.BackupHelperDispatcher.Header,java.io.FileDescriptor)>:<private static native>:<android.app.backup.BackupHelperDispatcher>
<android.net.wifi.WifiManager: void enableAggressiveHandover(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)>:<protected>:<android.filterfw.core.Filter>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.database.DatabaseUtils.InsertHelper: void close()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.os.BatteryStats: boolean getIsOnBattery()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ActivityManagerProxy: void appNotRespondingViaProvider(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accessibilityservice.IAccessibilityServiceConnection: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.os.Parcel: long nativeCreate()>:<private static native>:<android.os.Parcel>
<android.net.wifi.IWifiManager.Stub.Proxy: int getAggressiveHandover()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setConfirmLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.net.wifi.IWifiManager: android.os.Messenger getWifiServiceMessenger()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.IActivityContainer.Stub.Proxy: int getDisplayId()>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.graphics.drawable.NinePatchDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.WifiP2pGroupList: void remove(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.transition.ChangeBounds.4: android.graphics.PointF get(android.view.View)>:<public>:<android.transition.ChangeBounds.4:android.util.Property>
<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.VpnService.Builder: android.net.VpnService.Builder setUnderlyingNetworks(android.net.Network[])>:<public>:<android.net.VpnService.Builder>
<android.hwcontrol.HwWidgetFactory.Factory: com.android.internal.app.WindowDecorActionBar getHuaweiActionBarImpl(android.app.Dialog)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.opengl.EGLExt: void <clinit>()>:<static>:<android.opengl.EGLExt>
<android.renderscript.RenderScript: long rsnFontCreateFromFile(long,java.lang.String,float,int)>:<native>:<android.renderscript.RenderScript>
<android.transition.Transition: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.IWallpaperManager.Stub: android.app.IWallpaperManager asInterface(android.os.IBinder)>:<public static>:<android.app.IWallpaperManager.Stub:android.os.Binder,android.app.IWallpaperManager>
<android.net.EthernetManager: java.util.ArrayList access.000(android.net.EthernetManager)>:<static>:<android.net.EthernetManager>
<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityManager.StackInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setLinkDownstreamBandwidthKbps(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.net.http.RequestHandle: java.lang.String computeCnonce()>:<private>:<android.net.http.RequestHandle>
<android.os.IMultiWinServiceCallBack.Stub: android.os.IMultiWinServiceCallBack asInterface(android.os.IBinder)>:<public static>:<android.os.IMultiWinServiceCallBack.Stub:android.os.Binder,android.os.IMultiWinServiceCallBack>
<android.app.MediaRouteButton: void <clinit>()>:<static>:<android.app.MediaRouteButton:android.view.View>
<android.os.Parcel: void nativeWriteStrongBinder(long,android.os.IBinder)>:<private static native>:<android.os.Parcel>
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer.Page openPage(int)>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.app.ContextImpl: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.BaseBundle: float[] getFloatArray(java.lang.String)>:<>:<android.os.BaseBundle>
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>:<public static>:<android.net.http.ErrorStrings>
<android.app.Notification.Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int)>:<private>:<android.app.Notification.Builder>
<android.graphics.drawable.ShapeDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: int getLightParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.BaseBundle: void putInt(java.lang.String,int)>:<public>:<android.os.BaseBundle>
<android.net.Uri.Builder: android.net.Uri.Builder clearQuery()>:<public>:<android.net.Uri.Builder>
<android.graphics.drawable.VectorDrawable.VPathRenderer: float getAlpha()>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.net.DnsPinger.ActivePing: void <init>(android.net.DnsPinger)>:<private>:<android.net.DnsPinger.ActivePing>
<android.app.FragmentManagerImpl: void makeActive(android.app.Fragment)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.database.sqlite.SQLiteSession: boolean yieldTransaction(long,boolean,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.os.AsyncTask.3: void done()>:<protected>:<android.os.AsyncTask.3:java.util.concurrent.FutureTask>
<android.net.NetworkStatsHistory: java.lang.String toString()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.opengl.GLLogWrapper: void glDepthMask(boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiLog: void <init>()>:<private>:<android.net.wifi.WifiLog>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable.ConstantState: boolean isAtlasable(android.graphics.Bitmap)>:<protected final>:<android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIntentAvailableOffline(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance()>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.app.ITaskStackListener: void onTaskStackChanged()>:<public abstract>:<android.app.ITaskStackListener:android.os.IInterface>
<android.filterfw.core.GLFrame: int getNativeTextureId()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.drawable.VectorDrawable.VGroup: android.graphics.Matrix access.600(android.graphics.drawable.VectorDrawable.VGroup)>:<static>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.net.InterfaceConfiguration: void setInterfaceDown()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.Region: long ni()>:<final>:<android.graphics.Region:android.os.Parcelable>
<android.net.wifi.WifiManager: com.android.internal.util.AsyncChannel access.102(com.android.internal.util.AsyncChannel)>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.BatteryStats.Uid.Proc: android.os.BatteryStats.Uid.Proc.ExcessivePower getExcessivePower(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.graphics.Paint: int native_getStyle(long)>:<private static native>:<android.graphics.Paint>
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.os.ParcelFileDescriptor: long getStatSize()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.hsm.HwAudioPermWrapper: boolean isBlocked()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.net.NetworkStats: android.net.NetworkStats groupedByUid()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.app.IAlarmManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.transition.Explode: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActionBar: void hide()>:<public abstract>:<android.app.ActionBar>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceLinkStateChanged(java.lang.String,boolean)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.net.Uri.OpaqueUri: android.net.Uri.Builder buildUpon()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.os.INetworkManagementService: void setFirewallEgressSourceRule(java.lang.String,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)>:<public static>:<android.app.ActivityOptions>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>:<public>:<android.app.ActivityManager>
<android.app.ExitTransitionCoordinator: android.app.SharedElementCallback getListener(android.app.Activity,boolean)>:<private static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.wifi.WifiCHRStateManager: void updateSSID_BSSIDs(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.os.StrictMode.AndroidBlockGuardPolicy: void <init>(int)>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.appwidget.AppWidgetHost: void stopListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.app.ActivityThread: void handleTranslucentConversionComplete(android.os.IBinder,boolean)>:<public>:<android.app.ActivityThread>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>:<public static>:<android.graphics.BitmapFactory>
<android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>:<private static>:<android.os.ServiceManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.ConnectivityManager: int untether(java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.io.TextGraphReader.Command: void execute(android.filterfw.io.TextGraphReader)>:<public abstract>:<android.filterfw.io.TextGraphReader.Command>
<android.accounts.IAccountManager.Stub.Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.graphics.drawable.VectorDrawable.VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.VectorDrawable.VClipPath:android.graphics.drawable.VectorDrawable.VPath>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.ScanResult)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.ActivityManager.RunningTaskInfo.1: void <init>()>:<>:<android.app.ActivityManager.RunningTaskInfo.1:android.os.Parcelable.Creator>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.os.ParcelFileDescriptor: void writeCommStatusAndClose(int,java.lang.String)>:<private>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.ContextImpl: java.io.File getCodeCacheDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>:<public static>:<android.database.DatabaseUtils>
<android.os.BatteryManager: int getIntProperty(int)>:<public>:<android.os.BatteryManager>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Long4: void addAt(int,long)>:<public>:<android.renderscript.Long4>
<android.graphics.YuvImage: void adjustRectangle(android.graphics.Rect)>:<private>:<android.graphics.YuvImage>
<android.filterfw.core.GLEnvironment: boolean nativeActivateSurfaceId(int)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.transition.ChangeTransform: void setMatricesForParent(android.transition.TransitionValues,android.transition.TransitionValues)>:<private>:<android.transition.ChangeTransform:android.transition.Transition>
<android.app.ListActivity: void ensureList()>:<private>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.http.SslCertificate: java.lang.String getDigest(java.security.cert.X509Certificate,java.lang.String)>:<private static>:<android.net.http.SslCertificate>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.trust.ITrustListener.Stub: void <init>()>:<public>:<android.app.trust.ITrustListener.Stub:android.os.Binder,android.app.trust.ITrustListener>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLSurfaceView.EglHelper: javax.microedition.khronos.opengles.GL createGL()>:<>:<android.opengl.GLSurfaceView.EglHelper>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.ConnectivityManager: java.lang.String[] getFeature(java.lang.String)>:<private>:<android.net.ConnectivityManager>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.GradientState)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>:<public>:<android.app.job.JobInfo.Builder>
<android.renderscript.Matrix4f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.SumPathEffect: long nativeCreate(long,long)>:<private static native>:<android.graphics.SumPathEffect:android.graphics.PathEffect>
<android.net.wifi.IWifiManager.Stub.Proxy: int getWifiApEnabledState()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.renderscript.AllocationAdapter: void readData(int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.IHDMIConnectService.Stub.Proxy: void setCecCmd(java.lang.String)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.DownloadManager.Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)>:<>:<android.app.DownloadManager.Query>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.http.AndroidHttpClient: boolean isBinaryContent(org.apache.http.client.methods.HttpUriRequest)>:<private static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.renderscript.Double4: void <init>()>:<public>:<android.renderscript.Double4>
<android.database.Cursor: boolean moveToPosition(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.wifi.WifiEnterpriseConfig: void setSubjectMatch(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String getMobileRedirectedProvisioningUrl()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.INetworkStatsService: java.lang.String[] getMobileIfaces()>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.app.ApplicationPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.dhcp.DhcpStateMachine: void onRequestReceived(boolean,int,byte[],java.net.InetAddress,byte[],java.lang.String)>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.net.wifi.WifiConnectionStatistics: int describeContents()>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.app.KeyguardManager: android.view.IWindowManager access.000(android.app.KeyguardManager)>:<static>:<android.app.KeyguardManager>
<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.SamplingDataTracker: long getSampledRxByteCount()>:<public>:<android.net.SamplingDataTracker>
<android.app.ActivityManager: int getLauncherLargeIconSizeInner(android.content.Context)>:<static>:<android.app.ActivityManager>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Notification.Builder: android.app.Notification.Builder setPriority(int)>:<public>:<android.app.Notification.Builder>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void <init>(android.app.Activity,android.print.PrintDocumentAdapter)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.database.Cursor: float getFloat(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.os.BatteryStats.HistoryItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.opengl.GLES20: void glLineWidth(float)>:<public static native>:<android.opengl.GLES20>
<android.transition.Scene: void exit()>:<public>:<android.transition.Scene>
<android.print.IPrintDocumentAdapter: void finish()>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress,java.lang.String,int)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.renderscript.ScriptIntrinsicLUT: void validate(int,int)>:<private>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ContextImpl: java.io.File getExternalCacheDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.backup.BackupTransport: android.app.backup.RestoreDescription nextRestorePackage()>:<public>:<android.app.backup.BackupTransport>
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>:<public>:<android.filterfw.core.FilterGraph>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style valueOf(java.lang.String)>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.os.Bundle: void putChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Region: void <init>(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.transition.Visibility.2: void onAnimationPause(android.animation.Animator)>:<public>:<android.transition.Visibility.2:android.animation.AnimatorListenerAdapter>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.hwtheme.HwThemeManagerDummy: int getThemeColor(int[],int,android.util.TypedValue,android.content.res.Resources,boolean)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.NativeActivity: void onStart()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.IActivityManager: void unregisterProcessObserver(android.app.IProcessObserver)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.sqlite.SQLiteGlobal: int releaseMemory()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.mtp.MtpDevice: long getParent(int)>:<public>:<android.mtp.MtpDevice>
<android.app.SearchManager: boolean isVisible()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.filterfw.core.ShaderProgram: boolean setShaderClearColor(float,float,float)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.renderscript.Long4: android.renderscript.Long4 sub(android.renderscript.Long4,long)>:<public static>:<android.renderscript.Long4>
<android.graphics.Rect: java.lang.String toString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.Dialog: void invalidateOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.ParcelUuid.1: void <init>()>:<>:<android.os.ParcelUuid.1:android.os.Parcelable.Creator>
<android.app.backup.BackupTransport.TransportImpl: android.content.Intent configurationIntent()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.graphics.drawable.VectorDrawable.VGroup: void setTranslateX(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IWallpaperManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.net.http.RequestHandle: void pauseRequest(boolean)>:<public>:<android.net.http.RequestHandle>
<android.hsm.MediaTransactWrapper: void recycleParcel(android.os.Parcel)>:<private static>:<android.hsm.MediaTransactWrapper>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView: boolean canZoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.AppOpsManager: int startOp(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.SearchableInfo: int getVoiceMaxResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.net.ConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.core.NativeFrame: boolean setNativeBitmap(android.graphics.Bitmap,int,int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.usage.IUsageStatsManager: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)>:<public abstract>:<android.app.usage.IUsageStatsManager:android.os.IInterface>
<android.net.http.RequestQueue: void enablePlatformNotifications()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.mtp.MtpObjectInfo: int getProtectionStatus()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.SearchDialog: void hide()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.renderscript.Int4: void add(int)>:<public>:<android.renderscript.Int4>
<android.renderscript.FieldPacker: void addU32(long)>:<public>:<android.renderscript.FieldPacker>
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)>:<public>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1002(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityThread.ApplicationThread: void setProcessState(int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.transition.ChangeTransform: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.os.IJankShield: boolean getState(java.lang.String)>:<public abstract>:<android.os.IJankShield:android.os.IInterface>
<android.opengl.GLSurfaceView.GLThread: void onPause()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.accounts.AbstractAccountAuthenticator.Transport: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.net.Uri.OpaqueUri: int compareTo(java.lang.Object)>:<public volatile>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.net.nsd.NsdServiceInfo: void removeAttribute(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.transition.ChangeScroll: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeScroll:android.transition.Transition>
<android.database.CursorWrapper: short getShort(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.IntentService: void onCreate()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.INetworkStatsService: void forceUpdate()>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.net.wifi.IWifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable.LayerState: boolean isStateful()>:<public final>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.IDevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.RenderScript: void nContextBindProgramRaster(long)>:<>:<android.renderscript.RenderScript>
<android.app.RemoteInput: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle,android.app.RemoteInput.1)>:<>:<android.app.RemoteInput:android.os.Parcelable>
<android.database.ContentObserver.Transport: void <init>(android.database.ContentObserver)>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.webkit.PluginData: long getContentLength()>:<public>:<android.webkit.PluginData>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.602(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.BatteryStats.HistoryTag: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.BatteryStats.HistoryTag>
<android.app.ISearchManager.Stub: void <init>()>:<public>:<android.app.ISearchManager.Stub:android.os.Binder,android.app.ISearchManager>
<android.app.IActivityController.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>:<public final>:<android.filterfw.core.Filter>
<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.ShapeDrawable: void initializeWithState(android.graphics.drawable.ShapeDrawable.ShapeState,android.content.res.Resources)>:<private>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.Camera: void finalize()>:<protected>:<android.graphics.Camera>
<android.transition.Transition: android.transition.Transition excludeTarget(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.geometry.Rectangle: float getHeight()>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.MediaRouteButton: int getRouteTypes()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.net.IConnectivityManager: void registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.SearchDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.alsa.AlsaDevicesParser: int getNumDeviceRecords()>:<public>:<android.alsa.AlsaDevicesParser>
<android.renderscript.Int4: android.renderscript.Int4 add(android.renderscript.Int4,int)>:<public static>:<android.renderscript.Int4>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>:<public>:<android.graphics.Paint>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.Activity: java.lang.String savedDialogKeyFor(int)>:<private static>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiLinkLayerStats.1: android.net.wifi.WifiLinkLayerStats[] newArray(int)>:<public>:<android.net.wifi.WifiLinkLayerStats.1:android.os.Parcelable.Creator>
<android.graphics.Region: boolean nativeOp(long,int,int,int,int,int)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.MobileDataStateTracker: android.net.LinkProperties access.1002(android.net.MobileDataStateTracker,android.net.LinkProperties)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Short2: void <init>()>:<public>:<android.renderscript.Short2>
<android.accounts.AccountAuthenticatorResponse.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)>:<public>:<android.emoji.EmojiFactory>
<android.app.Activity: void registerForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.MemoryFile: boolean allowPurging(boolean)>:<public>:<android.os.MemoryFile>
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.INetworkManagementService.Stub.Proxy: java.lang.String[] getDnsForwarders()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.Matrix.1: boolean postSkew(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.Uri.HierarchicalUri: java.lang.String getFragment()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.BackStackRecord: boolean hasSimpleTarget(android.transition.Transition)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.webkit.WebViewProvider.ViewDelegate: void onOverScrolled(int,int,boolean,boolean)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.wifi.WifiManager: boolean isPasspointSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager.RegistrationListener)>:<public>:<android.net.nsd.NsdManager>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>:<public abstract>:<android.opengl.GLSurfaceView.GLWrapper>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>:<public>:<android.sax.Element>
<android.os.Parcel: void nativeWriteInterfaceToken(long,java.lang.String)>:<private static native>:<android.os.Parcel>
<android.app.Notification: boolean isGroupSummary()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.opengl.GLES20: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int,int)>:<protected>:<android.renderscript.Script.FieldBase>
<android.database.CursorWindow: java.lang.String toString()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.wifi.WifiManager: void disable(int,android.net.wifi.WifiManager.ActionListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.LoaderManagerImpl: void <init>(java.lang.String,android.app.Activity,boolean)>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.net.Network: java.net.InetAddress getByName(java.lang.String)>:<public>:<android.net.Network:android.os.Parcelable>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAndroidDataDirs()>:<public>:<android.os.Environment.UserEnvironment>
<android.net.wifi.HwWifiStatStore: void LOGW(java.lang.String)>:<private>:<android.net.wifi.HwWifiStatStore>
<android.net.RouteInfo: int hashCode()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.graphics.Region: void <clinit>()>:<static>:<android.graphics.Region:android.os.Parcelable>
<android.net.ConnectivityManager: void removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>:<public>:<android.net.ConnectivityManager>
<android.webkit.WebViewProvider: void notifyFindDialogDismissed()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.SslErrorHandler: void proceed()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.app.ActivityThread: void access.2800(android.app.ActivityThread,android.app.ActivityThread.CreateBackupAgentData)>:<static>:<android.app.ActivityThread>
<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getInProgressLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.app.backup.BackupHelperDispatcher: int allocateHeader_native(android.app.backup.BackupHelperDispatcher.Header,java.io.FileDescriptor)>:<private static native>:<android.app.backup.BackupHelperDispatcher>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.Activity: void showDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.MediaRouteButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.net.DhcpResults.1: android.net.DhcpResults createFromParcel(android.os.Parcel)>:<public>:<android.net.DhcpResults.1:android.os.Parcelable.Creator>
<android.app.ActivityOptions: android.app.ActivityOptions makeAspectScaledThumbnailAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener,boolean)>:<private static>:<android.app.ActivityOptions>
<android.graphics.Color: int HSVToColor(int,float[])>:<public static>:<android.graphics.Color>
<android.renderscript.RSTextureView: void resume()>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public final>:<android.os.Binder:android.os.IBinder>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.mtp.MtpDevice: boolean native_import_file(int,java.lang.String)>:<private native>:<android.mtp.MtpDevice>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.os.IPermissionController: boolean checkPermission(java.lang.String,int,int)>:<public abstract>:<android.os.IPermissionController:android.os.IInterface>
<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()>:<public>:<android.os.CommonTimeConfig>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.ScriptIntrinsic3DLUT create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.INetworkManagementService.Stub.Proxy: void flushNetworkDnsCache(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.TrafficStats: void setThreadStatsTag(int)>:<public static>:<android.net.TrafficStats>
<android.net.http.AndroidHttpClientConnection: int getRemotePort()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void getNfcHandoverSelect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.webkit.IWebViewUpdateService: void notifyRelroCreationCompleted(boolean,boolean)>:<public abstract>:<android.webkit.IWebViewUpdateService:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.ChannelListener access.100(android.net.wifi.p2p.WifiP2pManager.Channel)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.app.IUiModeManager.Stub: android.app.IUiModeManager asInterface(android.os.IBinder)>:<public static>:<android.app.IUiModeManager.Stub:android.os.Binder,android.app.IUiModeManager>
<android.transition.Slide.5: float getGoneX(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.5:android.transition.Slide.CalculateSlideHorizontal>
<android.os.Parcel: java.lang.String[] createStringArray()>:<public final>:<android.os.Parcel>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>:<public>:<android.app.Notification.Action.Builder>
<android.graphics.drawable.ScaleDrawable.ScaleState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.net.MailTo: java.lang.String getBody()>:<public>:<android.net.MailTo>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IMultiWinService: int getMultiWinCount()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.pdf.PdfRenderer: int getPageCount()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.app.backup.IBackupManager: void fullRestore(android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.MobileDataStateTracker: android.os.Handler access.800(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.EGLConfig: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.filterfw.format.PrimitiveFormat: void <init>()>:<public>:<android.filterfw.format.PrimitiveFormat>
<android.database.sqlite.SQLiteConnection: long nativePrepareStatement(long,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ActivityThread: boolean scanArgs(java.lang.String[],java.lang.String)>:<private static>:<android.app.ActivityThread>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,int,int)>:<public final>:<android.os.BatteryStats:android.os.Parcelable>
<android.hwtheme.HwThemeManagerDummy: boolean isTNotifications(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.renderscript.Float4: void add(float)>:<public>:<android.renderscript.Float4>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.print.IPrintManager.Stub.Proxy: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.database.CursorWindow: java.lang.String printStats()>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebViewProvider: boolean canGoBack()>:<public abstract>:<android.webkit.WebViewProvider>
<android.appwidget.AppWidgetHost: void <clinit>()>:<static>:<android.appwidget.AppWidgetHost>
<android.app.Activity: android.os.IBinder getActivityToken()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.112(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.WallpaperManager: void <clinit>()>:<static>:<android.app.WallpaperManager>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>:<public>:<android.net.ConnectivityManager>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.Handler: void removeMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>:<public final>:<android.mtp.MtpStorageInfo>
<android.net.wifi.WifiSsid: java.lang.String getHexString()>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.net.NetworkAgent: void sendNetworkCapabilities(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.wifi.p2p.WifiP2pManagerHisiExt: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pManagerHisiExt>
<android.net.wifi.RssiPacketCountInfo: void <clinit>()>:<static>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.os.BatteryStats: long[] getDischargeStepDurationsArray()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>:<public static>:<android.net.ConnectivityManager>
<android.net.RouteInfo: boolean equals(java.lang.Object)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable.ShapeState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.ShapeDrawable.ShapeState:android.graphics.drawable.Drawable.ConstantState>
<android.os.storage.IMountService.Stub.Proxy: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>:<public>:<android.webkit.WebChromeClient>
<android.webkit.Plugin: java.lang.String getFileName()>:<public>:<android.webkit.Plugin>
<android.app.ActivityThread: android.content.Context getContextForClassLoader(android.content.pm.ApplicationInfo,android.content.Context,android.content.Context)>:<private>:<android.app.ActivityThread>
<android.app.backup.IBackupManager.Stub.Proxy: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.renderscript.Long3: android.renderscript.Long3 mul(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.FileBridge.FileBridgeOutputStream: void write(int)>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.os.INetworkManagementService: void stopTethering()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.PowerManagerInternal: boolean isInteractive(int)>:<public static>:<android.os.PowerManagerInternal>
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.Uri: int compareTo(java.lang.Object)>:<public volatile>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.Uri.Builder: android.net.Uri build()>:<public>:<android.net.Uri.Builder>
<android.net.InterfaceConfiguration: java.util.HashSet access.200(android.net.InterfaceConfiguration)>:<static>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri,int)>:<private>:<android.database.ContentObserver>
<android.os.Parcel: android.os.Parcel obtain(int)>:<protected static final>:<android.os.Parcel>
<android.app.ApplicationErrorReport.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ApplicationErrorReport.1:android.os.Parcelable.Creator>
<android.app.backup.BackupTransport: java.lang.String name()>:<public>:<android.app.backup.BackupTransport>
<android.app.AppOpsManager: void <clinit>()>:<static>:<android.app.AppOpsManager>
<android.print.PrintJobInfo.Builder: void <init>(android.print.PrintJobInfo)>:<public>:<android.print.PrintJobInfo.Builder>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getIdentity()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.EnterTransitionCoordinator.7: void <init>(android.app.EnterTransitionCoordinator,java.util.ArrayList)>:<>:<android.app.EnterTransitionCoordinator.7:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.net.http.AndroidHttpClientConnection: java.lang.String toString()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.ddm.DdmHandleExit: void disconnected()>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.Notification.InboxStyle: void restoreFromExtras(android.os.Bundle)>:<protected>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.net.DhcpStateMachine.DhcpAction: android.net.DhcpStateMachine.DhcpAction[] values()>:<public static>:<android.net.DhcpStateMachine.DhcpAction:java.lang.Enum>
<android.app.ApplicationThreadProxy: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.StreamPort: void transfer(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.sax.RootElement.Handler: void startRoot(java.lang.String,java.lang.String,org.xml.sax.Attributes)>:<>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.webkit.CookieManager: void setAcceptThirdPartyCookies(android.webkit.WebView,boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.transition.TransitionSet: void setPropagation(android.transition.TransitionPropagation)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Presentation: void show()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.accounts.AccountManager.16: void doWork()>:<public>:<android.accounts.AccountManager.16:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.graphics.pdf.PdfRenderer: boolean nativeScaleForPrinting(long)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void drawGroupTree(android.graphics.drawable.VectorDrawable.VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>:<private>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.accounts.GrantCredentialsPermissionActivity.1: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.GrantCredentialsPermissionActivity.1:android.accounts.AccountManagerCallback>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiScanner.OperationResult.1: void <init>()>:<>:<android.net.wifi.WifiScanner.OperationResult.1:android.os.Parcelable.Creator>
<android.app.Activity.1: void <init>(android.app.Activity)>:<>:<android.app.Activity.1:android.app.FragmentContainer>
<android.print.IPrintManager: void validatePrinters(java.util.List,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.os.storage.StorageVolume: java.io.File getPathFile()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.IProcessObserver.Stub.Proxy: void onProcessStateChanged(int,int,int)>:<public>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.AppOpsManager.OpEntry: int getMode()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.print.PrintAttributes.Margins: void <init>(int,int,int,int)>:<public>:<android.print.PrintAttributes.Margins>
<android.app.ExitTransitionCoordinator: android.transition.Transition getViewsTransition()>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.INotificationManager.Stub.Proxy: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ActivityThread: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,int,boolean)>:<public final>:<android.app.ActivityThread>
<android.accounts.IAccountAuthenticatorResponse.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.app.UiAutomationConnection: boolean injectInputEvent(android.view.InputEvent,boolean)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.graphics.pdf.PdfEditor: void write(android.os.ParcelFileDescriptor)>:<public>:<android.graphics.pdf.PdfEditor>
<android.filterfw.core.NativeProgram: boolean callNativeSetValue(java.lang.String,java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Byte3: void div(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.app.job.JobInfo: void <init>(android.app.job.JobInfo.Builder,android.app.job.JobInfo.1)>:<>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.trust.TrustManager: void reportKeyguardShowingChanged()>:<public>:<android.app.trust.TrustManager>
<android.webkit.WebView: boolean performLongClick()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: void <init>()>:<public>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.database.MatrixCursor: int getType(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.graphics.drawable.AnimationDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addMediaSize(android.print.PrintAttributes.MediaSize,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.net.http.SSLConnectionClosedByUserException: void <init>(java.lang.String)>:<public>:<android.net.http.SSLConnectionClosedByUserException:javax.net.ssl.SSLException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.os.INetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.LauncherActivity.ListItem: void <init>()>:<public>:<android.app.LauncherActivity.ListItem>
<android.opengl.GLErrorWrapper: void glLightf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityTransitionState: void postponeEnterTransition()>:<public>:<android.app.ActivityTransitionState>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiEnterpriseConfig: void setIdentity(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.renderscript.RenderScript.ContextType: void <clinit>()>:<static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>:<public>:<android.graphics.Paint>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.PrinterCapabilitiesInfo: java.util.List access.002(android.print.PrinterCapabilitiesInfo,java.util.List)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.IActivityManager: void activityPaused(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>:<public>:<android.filterfw.core.Filter>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>:<public abstract>:<android.accounts.AccountManagerCallback>
<android.os.Debug: void startMethodTracing(java.lang.String)>:<public static>:<android.os.Debug>
<android.mtp.HwMtpDatabaseManager: boolean hwGetObjectReferences(int)>:<public abstract>:<android.mtp.HwMtpDatabaseManager>
<android.net.wifi.IWifiManager.Stub.Proxy: int getFrequencyBand()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>:<public static>:<android.webkit.WebSettings>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.LoadedApk.ServiceDispatcher.RunConnection: void <init>(android.app.LoadedApk.ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>:<>:<android.app.LoadedApk.ServiceDispatcher.RunConnection:java.lang.Runnable>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Int2: void <init>(int,int)>:<public>:<android.renderscript.Int2>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setContentType(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.net.NetworkCapabilities: java.lang.String getNetworkSpecifier()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.WallpaperManager.FastBitmapDrawable: void <init>(android.graphics.Bitmap)>:<private>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.Paint: void setStrokeWidth(float)>:<public native>:<android.graphics.Paint>
<android.os.ParcelUuid.1: android.os.ParcelUuid[] newArray(int)>:<public>:<android.os.ParcelUuid.1:android.os.Parcelable.Creator>
<android.filterfw.core.StreamPort: void clear()>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.VoiceInteractor: java.util.ArrayList makeRequestList()>:<private>:<android.app.VoiceInteractor>
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>:<public static>:<android.app.ActivityThread>
<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.app.ContextImpl.29: void <init>()>:<>:<android.app.ContextImpl.29:android.app.ContextImpl.ServiceFetcher>
<android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>:<private>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.graphics.Camera: void nativeDestructor()>:<private native>:<android.graphics.Camera>
<android.os.RemoteCallback.DeliverResult: void <init>(android.os.RemoteCallback,android.os.Bundle)>:<>:<android.os.RemoteCallback.DeliverResult:java.lang.Runnable>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.app.ActivityManagerProxy: java.util.List getAppTasks(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLSurfaceView.BaseConfigChooser: void <init>(android.opengl.GLSurfaceView,int[])>:<public>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.graphics.Rect: boolean equals(java.lang.Object)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.webkit.WebResourceRequest: boolean hasGesture()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.os.Debug: void getMemInfo(long[])>:<public static native>:<android.os.Debug>
<android.os.PerformanceCollector: void stopAllocCounting()>:<private static>:<android.os.PerformanceCollector>
<android.os.PowerManager: boolean startDream()>:<public>:<android.os.PowerManager>
<android.net.NetworkUtils: boolean runDhcp(java.lang.String,android.net.DhcpResults)>:<public static native>:<android.net.NetworkUtils>
<android.net.wifi.WifiEnterpriseConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.app.backup.BackupTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.IPrintManager.Stub.Proxy: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.print.PrintAttributes.Resolution: int getVerticalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.net.http.HttpResponseCache: void <init>(com.android.okhttp.HttpResponseCache)>:<private>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.os.IPowerManager: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>:<public>:<android.app.LoadedApk>
<android.os.IMultiWinService: int getRootMWFlag()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.http.HttpConnection: java.lang.String getScheme()>:<>:<android.net.http.HttpConnection:android.net.http.Connection>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String getFilenameHint()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String readMultipleBytes(byte[],int,int)>:<private>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.app.ContextImpl.37: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.37:android.app.ContextImpl.ServiceFetcher>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: void <init>(int,int,int)>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer.1)>:<>:<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture>
<android.app.ActivityThread: void access.3300(android.app.ActivityThread,android.os.Bundle)>:<static>:<android.app.ActivityThread>
<android.filterfw.core.GLFrame: void initWithFbo(int)>:<private>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.webkit.WebViewProvider.ViewDelegate: void onFocusChanged(boolean,int,android.graphics.Rect)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.NetworkTemplate: boolean matchesWifiWildcard(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.YuvImage: int[] calculateStrides(int,int)>:<private>:<android.graphics.YuvImage>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Notification.Builder: void processSmallRightIcon(int,android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.FragmentManagerImpl: void saveFragmentViewState(android.app.Fragment)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>:<public>:<android.filterfw.geometry.Point>
<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>:<private>:<android.net.http.Connection>
<android.os.StrictMode: void clearGatheredViolations()>:<static>:<android.os.StrictMode>
<android.app.Notification.Builder: boolean isLegacy()>:<private>:<android.app.Notification.Builder>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.IActivityManager: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Parcel.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.Parcel.1:android.os.Parcelable.Creator>
<android.app.SearchDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.os.storage.StorageVolume.1: android.os.storage.StorageVolume createFromParcel(android.os.Parcel)>:<public>:<android.os.storage.StorageVolume.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo[] newArray(int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1:android.os.Parcelable.Creator>
<android.graphics.RectF: void setEmpty()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.IActivityManager: void startLockTaskModeOnCurrent()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTranslatex(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.INotificationManager.Stub.Proxy: boolean matchesCallFilter(android.os.Bundle)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.test.InstrumentationTestSuite: void addTestSuite(java.lang.Class)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.net.NetworkStats.1: android.net.NetworkStats[] newArray(int)>:<public>:<android.net.NetworkStats.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.ProxyDataTracker: boolean reconnect()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.drm.DrmEvent: int getUniqueId()>:<public>:<android.drm.DrmEvent>
<android.os.StrictMode.InstanceCountViolation: void <clinit>()>:<static>:<android.os.StrictMode.InstanceCountViolation:java.lang.Throwable>
<android.opengl.GLU: void <clinit>()>:<static>:<android.opengl.GLU>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.app.ExitTransitionCoordinator: void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean)>:<public>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.SurfaceTexture: void releaseTexImage()>:<public>:<android.graphics.SurfaceTexture>
<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin.PreferencesClickHandler)>:<public>:<android.webkit.Plugin>
<android.app.SharedPreferencesImpl: void access.800(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl.MemoryCommitResult)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: boolean releaseInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)>:<>:<android.os.BaseBundle>
<android.app.Notification.MediaStyle: int getBigLayoutResource(int)>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.graphics.Paint.Align: void <clinit>()>:<static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.net.http.RequestHandle: void handleSslErrorResponse(boolean)>:<public>:<android.net.http.RequestHandle>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiNetworkConnectionStatistics: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.mtp.MtpDatabase: boolean inStorageSubDirectory(java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.drawable.AnimationDrawable.AnimationState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.print.PrinterDiscoverySession.SessionHandler: void <init>(android.print.PrinterDiscoverySession,android.os.Looper)>:<public>:<android.print.PrinterDiscoverySession.SessionHandler:android.os.Handler>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void handleMessage(android.os.Message)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler:android.os.Handler>
<android.app.INotificationManager: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>:<public>:<android.app.LocalActivityManager>
<android.hwtheme.HwThemeManager: int getShadowcolor(android.content.res.TypedArray,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.webkit.ConsoleMessage: int lineNumber()>:<public>:<android.webkit.ConsoleMessage>
<android.net.wifi.WifiInfo: int getRssi()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.Notification.WearableExtender: boolean getStartScrollBottom()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.ScriptIntrinsicBlur: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long[])>:<public transient>:<android.app.DownloadManager.Query>
<android.graphics.Bitmap.CompressFormat: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.net.LocalSocketImpl: void <init>(java.io.FileDescriptor)>:<>:<android.net.LocalSocketImpl>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,byte[])>:<protected>:<android.net.dhcp.DhcpPacket>
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.webkit.WebView: boolean setFrame(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode[] values()>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.app.admin.DevicePolicyManager: boolean hasUserSetupCompleted()>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.RenderScriptGL.SurfaceConfig: void validateRange(int,int,int,int)>:<private>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.Mesh getMesh()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.graphics.Rect: int hashCode()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.accounts.IAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.hwtheme.HwThemeManager.IHwThemeManager: void retrieveSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.graphics.Paint: int initDigitFlag()>:<public static>:<android.graphics.Paint>
<android.print.PrintJobInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityManager.TaskDescription: void setIconFilename(java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.os.NullVibrator: void cancel()>:<public>:<android.os.NullVibrator:android.os.Vibrator>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState cloneConstantState()>:<>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.Debug: int getThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.mtp.MtpDeviceInfo: java.lang.String getModel()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.os.storage.IMountService: void setField(java.lang.String,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.webkit.JsDialogHelper.CancelListener: void <init>(android.webkit.JsDialogHelper,android.webkit.JsDialogHelper.1)>:<>:<android.webkit.JsDialogHelper.CancelListener:android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnClickListener>
<android.net.ScoredNetwork.1: android.net.ScoredNetwork createFromParcel(android.os.Parcel)>:<public>:<android.net.ScoredNetwork.1:android.os.Parcelable.Creator>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedPath()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.app.Application: void dispatchActivityCreated(android.app.Activity,android.os.Bundle)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.drawable.VectorDrawable.VFullPath: android.graphics.Paint.Join getStrokeLineJoin(int,android.graphics.Paint.Join)>:<private>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.opengl.GLErrorWrapper: boolean glIsFramebufferOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.SharedPreferencesImpl: void access.000(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.os.BatteryStats: java.util.Map getKernelWakelockStats()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.IContentObserver.Stub: void <init>()>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>:<public>:<android.app.job.JobInfo.Builder>
<android.hwtheme.HwThemeManagerDummy: int getShadowcolor(android.content.res.TypedArray,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getBatchedScanResults(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>:<public>:<android.app.Instrumentation>
<android.net.Uri.AbstractHierarchicalUri: void <init>(android.net.Uri.1)>:<>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.webkit.CacheManager.CacheResult: void setEncoding(java.lang.String)>:<public>:<android.webkit.CacheManager.CacheResult>
<android.os.Parcel: void readStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.renderscript.Short2: android.renderscript.Short2 mod(android.renderscript.Short2,short)>:<public static>:<android.renderscript.Short2>
<android.app.ApplicationErrorReport.CrashInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.app.Instrumentation.ActivityWaiter: void <init>(android.content.Intent)>:<public>:<android.app.Instrumentation.ActivityWaiter>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.ParcelFileDescriptor.1: void <init>()>:<>:<android.os.ParcelFileDescriptor.1:android.os.Parcelable.Creator>
<android.app.trust.ITrustManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.net.NetworkStatsHistory.Entry: void <init>()>:<public>:<android.net.NetworkStatsHistory.Entry>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.Fragment: void setEnterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.IConnectivityManager.Stub.Proxy: int checkLteConnectState()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.renderscript.RenderScript: void nProgramBindTexture(long,int,long)>:<>:<android.renderscript.RenderScript>
<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)>:<public>:<android.emoji.EmojiFactory>
<android.transition.Slide.CalculateSlideVertical: float getGoneX(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.CalculateSlideVertical:android.transition.Slide.CalculateSlide>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.Parcel: void writeValue(java.lang.Object)>:<public final>:<android.os.Parcel>
<android.app.backup.IBackupManager.Stub.Proxy: void agentDisconnected(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.ConnectivityManager.LegacyRequest: void access.000(android.net.ConnectivityManager.LegacyRequest)>:<static>:<android.net.ConnectivityManager.LegacyRequest>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.app.BackStackRecord: void calculateBackFragments(android.util.SparseArray,android.util.SparseArray)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.String,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.database.sqlite.SQLiteConnectionPool: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.webkit.WebView: void <init>(android.content.Context)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.ParcelFileDescriptor.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.ParcelFileDescriptor.1:android.os.Parcelable.Creator>
<android.renderscript.Double2: android.renderscript.Double2 add(android.renderscript.Double2,android.renderscript.Double2)>:<public static>:<android.renderscript.Double2>
<android.database.CursorWindow: void finalize()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.NetworkState.1: void <init>()>:<>:<android.net.NetworkState.1:android.os.Parcelable.Creator>
<android.app.DownloadManager.Request: void encodeHttpHeaders(android.content.ContentValues)>:<private>:<android.app.DownloadManager.Request>
<android.os.INetworkManagementService: void setAccessPointHw(android.net.wifi.HuaweiApConfiguration,java.lang.String,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.wifi.HwWifiCHRService: void handleSupplicantStateChange(android.net.wifi.SupplicantState)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager.WpsCallback)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ContextImpl.47: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.47:android.app.ContextImpl.ServiceFetcher>
<android.app.IApplicationThread: void processInBackground()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.RemoteCallbackList: void kill()>:<public>:<android.os.RemoteCallbackList>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript.ContextType,int)>:<public static>:<android.renderscript.RenderScript>
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>:<public>:<android.app.LoadedApk>
<android.renderscript.Type.CubemapFace: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.os.IRemoteCallback.Stub.Proxy: void sendResult(android.os.Bundle)>:<public>:<android.os.IRemoteCallback.Stub.Proxy:android.os.IRemoteCallback>
<android.filterfw.core.NativeBuffer: void attachToFrame(android.filterfw.core.Frame)>:<>:<android.filterfw.core.NativeBuffer>
<android.app.NativeActivity: void onLowMemory()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.ExitTransitionCoordinator.3: void <init>(android.app.ExitTransitionCoordinator,android.view.ViewGroup,java.util.ArrayList)>:<>:<android.app.ExitTransitionCoordinator.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.IAccountAuthenticator: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.hsm.HwSystemManager: java.util.ArrayList getAllowedApplyBatchOp(java.lang.String,java.util.ArrayList)>:<public static>:<android.hsm.HwSystemManager>
<android.graphics.Movie: android.graphics.Movie nativeDecodeAsset(long)>:<private static native>:<android.graphics.Movie>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: boolean shouldForceEnabled(android.content.pm.ActivityInfo,android.content.ComponentName)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setProfileName(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.NetworkInfo.DetailedState: void <init>(java.lang.String,int)>:<private>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.os.StrictMode.4: java.lang.Object initialValue()>:<protected volatile>:<android.os.StrictMode.4:java.lang.ThreadLocal>
<android.app.Activity: void performCreate(android.os.Bundle,android.os.PersistableBundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityTransitionCoordinator: void setSharedElements(android.util.ArrayMap)>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.Uri.HierarchicalUri: java.lang.String makeSchemeSpecificPart()>:<private>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.filterfw.core.SerializedFrame.DirectByteInputStream: long skip(long)>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteInputStream:java.io.InputStream>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: boolean shouldForceEnabled(android.content.pm.ActivityInfo,android.content.ComponentName)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.webkit.PermissionRequest: android.net.Uri getOrigin()>:<public abstract>:<android.webkit.PermissionRequest>
<android.transition.ArcMotion: float getMinimumHorizontalAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.backup.BackupDataOutput: void dtor(long)>:<private static native>:<android.app.backup.BackupDataOutput>
<android.app.Notification.Style: void populateTickerView(android.app.Notification)>:<protected>:<android.app.Notification.Style>
<android.opengl.GLErrorWrapper: void glPointParameterf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.UpdateLock: void <init>(java.lang.String)>:<public>:<android.os.UpdateLock>
<android.os.Parcel: android.os.IBinder readStrongBinder()>:<public final>:<android.os.Parcel>
<android.database.sqlite.SQLiteSession.Transaction: void <init>(android.database.sqlite.SQLiteSession.1)>:<>:<android.database.sqlite.SQLiteSession.Transaction>
<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,int,int,java.lang.Object,int,int)>:<native>:<android.renderscript.RenderScript>
<android.net.Uri.StringUri: android.net.Uri.Part getQueryPart()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.trust.TrustManager.1: void onTrustChanged(boolean,int,boolean)>:<public>:<android.app.trust.TrustManager.1:android.app.trust.ITrustListener.Stub,android.os.Binder>
<android.net.NetworkStateTracker: void defaultRouteSet(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.MediaRouteActionProvider: boolean overridesItemVisibility()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.net.DhcpResults: void readFromParcel(android.net.DhcpResults,android.os.Parcel)>:<private static>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.job.JobInfo.Builder: boolean access.800(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.app.EnterTransitionCoordinator.3: boolean onPreDraw()>:<public>:<android.app.EnterTransitionCoordinator.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.accounts.AccountManager.4: android.accounts.Account bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.filterfw.core.MutableFrameFormat: void setTarget(int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.backup.BackupAgent.BackupServiceBinder: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.net.DhcpInfo.1: android.net.DhcpInfo[] newArray(int)>:<public>:<android.net.DhcpInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiCHRStateManager: void updateMobileQosLevel(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.WifiManager: int getInvalidKey()>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.BatchedScanResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTexEnvx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.Transition: void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WpsResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Drawable>
<android.alsa.AlsaCardsParser: void Log()>:<public>:<android.alsa.AlsaCardsParser>
<android.graphics.Path: void incReserve(int)>:<public>:<android.graphics.Path>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.app.backup.BackupTransport: long getCurrentRestoreSet()>:<public>:<android.app.backup.BackupTransport>
<android.app.VoiceInteractor.ConfirmationRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.ConfirmationRequest:android.app.VoiceInteractor.Request>
<android.hwtheme.HwThemeManager.IconType: void <init>()>:<public>:<android.hwtheme.HwThemeManager.IconType>
<android.os.BatteryStats: long computeBatteryScreenOffUptime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.IPowerManager.Stub.Proxy: boolean setPowerSaveMode(boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision: void <init>()>:<private>:<android.graphics.Atlas.SlicePolicy.MinAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.os.RemoteCallback.DeliverResult: void run()>:<public>:<android.os.RemoteCallback.DeliverResult:java.lang.Runnable>
<android.net.INetworkPolicyListener.Stub.Proxy: void onUidRulesChanged(int,int)>:<public>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.mtp.MtpStorage: int getStorageId()>:<public final>:<android.mtp.MtpStorage>
<android.net.nsd.INsdManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.nsd.INsdManager.Stub.Proxy:android.net.nsd.INsdManager>
<android.app.backup.IBackupManager: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.database.CrossProcessCursor: boolean onMove(int,int)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.content.res.Resources getResources()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.transition.TransitionManager: void setDefaultTransition(android.transition.Transition)>:<public>:<android.transition.TransitionManager>
<android.app.ContextImpl.13: void <init>()>:<>:<android.app.ContextImpl.13:android.app.ContextImpl.ServiceFetcher>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode.ThreadPolicy)>:<public static>:<android.os.StrictMode>
<android.print.PrinterId: android.content.ComponentName getServiceName()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.database.MergeCursor.1: void <init>(android.database.MergeCursor)>:<>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.ConnectivityManager: android.net.ConnectivityManager 'from'(android.content.Context)>:<public static>:<android.net.ConnectivityManager>
<android.app.IActivityContainer: int startActivity(android.content.Intent)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.graphics.Movie: boolean isOpaque()>:<public native>:<android.graphics.Movie>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Matrix: void native_postSkew(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.print.IPrintSpooler.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.renderscript.Script: void setVar(int,double)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.database.AbstractWindowedCursor: void checkPosition()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.R.styleable: void <clinit>()>:<static>:<android.R.styleable>
<android.webkit.WebView: int access.2002(android.webkit.WebView,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.WifiLog.1: void run()>:<public>:<android.net.wifi.WifiLog.1:java.util.TimerTask>
<android.graphics.drawable.InsetDrawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.UserHandle.1: android.os.UserHandle[] newArray(int)>:<public>:<android.os.UserHandle.1:android.os.Parcelable.Creator>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.Parcel: void setDataCapacity(int)>:<public final>:<android.os.Parcel>
<android.app.backup.BackupTransport: long requestBackupTime()>:<public>:<android.app.backup.BackupTransport>
<android.database.CursorWindow: int getNumRows()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.trust.TrustManager: void reportRequireCredentialEntry(int)>:<public>:<android.app.trust.TrustManager>
<android.app.Application: java.lang.Object[] collectActivityLifecycleCallbacks()>:<private>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLSurfaceView.LogWriter: void flushBuilder()>:<private>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.net.INetworkPolicyManager.Stub.Proxy: void setUidPolicy(int,int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.accounts.IAccountManagerResponse.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.database.sqlite.SQLiteDatabase.CustomFunction: void callback(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CustomFunction>
<android.os.storage.IMountService: boolean isSecureContainerMounted(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.Parcel: int nativeDataSize(long)>:<private static native>:<android.os.Parcel>
<android.app.ActivityTransitionCoordinator: void <clinit>()>:<static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.NetworkAgent: void log(java.lang.String)>:<protected>:<android.net.NetworkAgent:android.os.Handler>
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.Visibility: void forceVisibility(int,boolean)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.Drawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.Drawable>
<android.net.ProxyInfo.1: android.net.ProxyInfo[] newArray(int)>:<public>:<android.net.ProxyInfo.1:android.os.Parcelable.Creator>
<android.os.UEventObserver.UEventThread: void <init>()>:<public>:<android.os.UEventObserver.UEventThread:java.lang.Thread>
<android.app.admin.IDevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.EGLLogWrapper: int eglGetError()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ISearchManagerCallback.Stub: android.app.ISearchManagerCallback asInterface(android.os.IBinder)>:<public static>:<android.app.ISearchManagerCallback.Stub:android.os.Binder,android.app.ISearchManagerCallback>
<android.ddm.DdmHandleHello: void connected()>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.SELinux: boolean restorecon(java.lang.String)>:<public static>:<android.os.SELinux>
<android.filterfw.core.FinalPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>:<public>:<android.filterfw.core.FinalPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.app.admin.DevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.pdf.PdfEditor: void setPageCropBox(int,android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfEditor>
<android.net.Uri.HierarchicalUri: java.lang.String getQuery()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.filterfw.core.NativeBuffer: void assertReadable()>:<protected>:<android.filterfw.core.NativeBuffer>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hwcontrol.HwWidgetFactory.HwDialogStub: boolean hasButtons()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwDialogStub>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addResolution(android.print.PrintAttributes.Resolution,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeath()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.NetworkStateTracker: boolean setRadio(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.print.PrinterInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.StatusBarManager: com.android.internal.statusbar.IStatusBarService getService()>:<private>:<android.app.StatusBarManager>
<android.accounts.AuthenticatorDescription: void <init>(android.os.Parcel)>:<private>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.usage.UsageEvents: void <init>(java.util.List,java.lang.String[])>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.transition.ChangeBounds: void <init>()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.os.BatteryProperty.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.BatteryProperty.1:android.os.Parcelable.Creator>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.app.admin.IDevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.StaticIpConfiguration: android.net.LinkProperties toLinkProperties(java.lang.String)>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.ActivityManagerProxy: int stopUser(int,android.app.IStopUserCallback)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.StrictMode: void <init>()>:<private>:<android.os.StrictMode>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: void <init>(android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Activity: void onActivityReenter(int,android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebView: void findNext(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.Uri.AbstractHierarchicalUri: int compareTo(java.lang.Object)>:<public volatile>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.app.job.IJobService.Stub: void <init>()>:<public>:<android.app.job.IJobService.Stub:android.os.Binder,android.app.job.IJobService>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.renderscript.RenderScript: void rsnScriptSetVarD(long,long,int,double)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Matrix: void native_preSkew(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.FragmentManager: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>:<public abstract>:<android.app.FragmentManager>
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityThread: void access.1000(android.app.ActivityThread,java.io.FileDescriptor)>:<static>:<android.app.ActivityThread>
<android.filterfw.core.GLFrame: java.lang.String toString()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.DrawFilter: void <init>()>:<public>:<android.graphics.DrawFilter>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.app.ActivityView: void onAttachedToWindow()>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>:<public>:<android.app.Instrumentation>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public abstract>:<android.os.IBinder>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>:<public static>:<android.net.http.SslCertificate>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.drawable.RotateDrawable: void setPivotXRelative(boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManager.TaskDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.graphics.pdf.PdfRenderer: void nativeClosePage(long)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.net.http.HttpLog: void v(java.lang.String)>:<static>:<android.net.http.HttpLog>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.NetworkInfo.1: android.net.NetworkInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkInfo.1:android.os.Parcelable.Creator>
<android.app.Activity: void startActivityAsCaller(android.content.Intent,android.os.Bundle,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int,int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.os.IRemoteCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IRemoteCallback.Stub.Proxy:android.os.IRemoteCallback>
<android.opengl.GLLogWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Process: int[] getPidsByUids(int[])>:<public static final native>:<android.os.Process>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setMasterVolumeMuted(android.content.ComponentName,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.LinkProperties: void setDomains(java.lang.String)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ActivityTransitionCoordinator: void scheduleSetSharedElementEnd(java.util.ArrayList)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.LocalServerSocket: void <init>(java.lang.String)>:<public>:<android.net.LocalServerSocket>
<android.app.Activity: void finish(boolean)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>:<public>:<android.app.DownloadManager>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String,int)>:<public>:<android.renderscript.Element.Builder>
<android.net.NetworkStats.Entry: void <init>()>:<public>:<android.net.NetworkStats.Entry>
<android.os.ParcelFileDescriptor: void <clinit>()>:<static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.ActivityView.ActivityContainerWrapper: int startActivityIntentSender(android.content.IIntentSender)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.test.PerformanceTestCase.Intermediates: void setInternalIterations(int)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.webkit.WebViewFactory: void <init>()>:<public>:<android.webkit.WebViewFactory>
<android.graphics.drawable.LayerDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult()>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.net.wifi.WifiManager: java.util.List getBatchedScanResults()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.WifiCHRStateManager: void writeNETInfo(int,java.lang.String)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLErrorWrapper: int glGetError()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread: void access.1600(android.app.ActivityThread,android.os.IBinder,boolean)>:<static>:<android.app.ActivityThread>
<android.app.ContextImpl: java.io.File[] getObbDirs()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.SumPathEffect:android.graphics.PathEffect>
<android.os.SystemVibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.net.RouteInfo: boolean matches(java.net.InetAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void reportSuccessfulPasswordAttempt(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.filterfw.io.TextGraphReader.ConnectCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader.ConnectCommand:android.filterfw.io.TextGraphReader.Command>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.FrameManager>
<android.net.Uri: boolean equals(java.lang.Object)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.Short4: android.renderscript.Short4 add(android.renderscript.Short4,short)>:<public static>:<android.renderscript.Short4>
<android.net.wifi.p2p.WifiP2pInfo.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pInfo.1:android.os.Parcelable.Creator>
<android.webkit.WebViewProvider: android.webkit.WebViewProvider.ScrollDelegate getScrollDelegate()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.os.UserHandle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.app.ApplicationPackageManager: void replacePreferredActivityAsUser(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.StrictMode.AndroidCloseGuardReporter: void <init>(android.os.StrictMode.1)>:<>:<android.os.StrictMode.AndroidCloseGuardReporter:dalvik.system.CloseGuard.Reporter>
<android.database.CursorWrapper: int getInt(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.mtp.MtpStorageInfo: int getStorageId()>:<public final>:<android.mtp.MtpStorageInfo>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>:<public>:<android.net.UrlQuerySanitizer>
<android.net.ConnectivityManager: void registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>:<public>:<android.net.ConnectivityManager>
<android.app.Service: void onTaskRemoved(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate access.102(android.net.wifi.WifiEnterpriseConfig,java.security.cert.X509Certificate)>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.NetworkState.1: android.net.NetworkState[] newArray(int)>:<public>:<android.net.NetworkState.1:android.os.Parcelable.Creator>
<android.graphics.Path: void detectSimplePath(float,float,float,float,android.graphics.Path.Direction)>:<private>:<android.graphics.Path>
<android.graphics.pdf.PdfEditor: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.graphics.pdf.PdfEditor>
<android.os.IUserManager.Stub.Proxy: android.content.pm.UserInfo createUser(java.lang.String,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.os.storage.IMountService.Stub.Proxy: int unmountSecureContainer(java.lang.String,boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.hwtheme.HwThemeManager.IHwThemeManager: void updateSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.WifiKey: void <init>(android.os.Parcel,android.net.WifiKey.1)>:<>:<android.net.WifiKey:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceQuota(java.lang.String,long)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.ETC1Util: boolean isETC1Supported()>:<public static>:<android.opengl.ETC1Util>
<android.database.ContentObservable: void registerObserver(java.lang.Object)>:<public volatile>:<android.database.ContentObservable:android.database.Observable>
<android.os.MessageQueue: void <init>(boolean)>:<>:<android.os.MessageQueue>
<android.opengl.GLES30: void glVertexAttribIPointerBounds(int,int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.UiAutomation: void clearWindowAnimationFrameStats()>:<public>:<android.app.UiAutomation>
<android.app.IActivityController.Stub: void <init>()>:<public>:<android.app.IActivityController.Stub:android.os.Binder,android.app.IActivityController>
<android.app.ActivityManagerProxy: void bootAnimationComplete()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.Uri.StringUri: java.lang.String getAuthority()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.net.ConnectivityManager.NetworkCallback: void onLosing(android.net.Network,int)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.TrafficStats: void <clinit>()>:<static>:<android.net.TrafficStats>
<android.app.ActivityManager.CpuStatInfo: float getSystemTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void <clinit>()>:<static>:<android.database.DatabaseUtils>
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.AlarmManager.AlarmClockInfo.1: android.app.AlarmManager.AlarmClockInfo[] newArray(int)>:<public>:<android.app.AlarmManager.AlarmClockInfo.1:android.os.Parcelable.Creator>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>:<protected>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.graphics.Bitmap: boolean nativeCompress(long,int,int,java.io.OutputStream,byte[])>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: android.filterfw.core.AsyncRunner.RunnerResult doInBackground(android.filterfw.core.SyncRunner[])>:<protected transient>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.accounts.AccountManager.2: void doWork()>:<public>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.Activity: void onCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Double3: void setAt(int,double)>:<public>:<android.renderscript.Double3>
<android.os.storage.StorageManager: java.util.List access.000(android.os.storage.StorageManager)>:<static>:<android.os.storage.StorageManager>
<android.renderscript.Float4: void mul(float)>:<public>:<android.renderscript.Float4>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.os.SELinux: boolean setBooleanValue(java.lang.String,boolean)>:<public static final native>:<android.os.SELinux>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.ScriptIntrinsicHistogram create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteConnectionPool: void setMaxConnectionPoolSizeLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.Messenger: int hashCode()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.app.Activity: java.lang.String savedDialogArgsKeyFor(int)>:<private static>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.WorkSource.1: void <init>()>:<>:<android.os.WorkSource.1:android.os.Parcelable.Creator>
<android.transition.ChangeBounds.4: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.4:android.util.Property>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit valueOf(java.lang.String)>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDisallowedApplication(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.accounts.Account: void <init>(android.os.Parcel)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.IUserManager: android.os.Bundle getDefaultGuestRestrictions()>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.SerializedFrame: void setInts(int[])>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.renderscript.RenderScript: void rsnAllocationCopyToBitmap(long,long,android.graphics.Bitmap)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.Parcel: void writeSizeF(android.util.SizeF)>:<public final>:<android.os.Parcel>
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.net.NetworkTemplate: boolean matchesMobileWildcard(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.Rect: boolean intersect(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.IMultiWinService.Stub.Proxy: int[] getResumedTasks()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.backup.IBackupManager.Stub.Proxy: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.os.CommonClock.1: void <init>(android.os.CommonClock)>:<>:<android.os.CommonClock.1:android.os.IBinder.DeathRecipient>
<android.app.NotificationManager: void <init>(android.content.Context,android.os.Handler)>:<>:<android.app.NotificationManager>
<android.drm.DrmInfoEvent: void checkTypeValidity(int)>:<private>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.app.ActivityThread: void handleStopActivity(android.os.IBinder,boolean,int)>:<private>:<android.app.ActivityThread>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus valueOf(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.transition.Visibility: void <init>()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.app.admin.IDevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.Activity: void openContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Int4: void div(int)>:<public>:<android.renderscript.Int4>
<android.net.http.HttpsConnection: java.lang.String getScheme()>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebViewDelegate.OnTraceEnabledChangeListener: void onTraceEnabledChange(boolean)>:<public abstract>:<android.webkit.WebViewDelegate.OnTraceEnabledChangeListener>
<android.app.Notification.Builder: android.app.Notification.Builder setNumber(int)>:<public>:<android.app.Notification.Builder>
<android.filterfw.core.Filter: void unsetStatus(int)>:<final>:<android.filterfw.core.Filter>
<android.os.UEventObserver.UEventThread: void sendEvent(java.lang.String)>:<private>:<android.os.UEventObserver.UEventThread:java.lang.Thread>
<android.net.wifi.WpsResult.1: void <init>()>:<>:<android.net.wifi.WpsResult.1:android.os.Parcelable.Creator>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.ddm.DdmHandleHeap: void <clinit>()>:<static>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.print.IPrintSpoolerClient: void onAllPrintJobsHandled()>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.print.PrinterInfo: void copyFrom(android.print.PrinterInfo)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.SharedPreferencesImpl.EditorImpl: void apply()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.VectorDrawable create(android.content.res.Resources,int)>:<public static>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.INotificationManager.Stub.Proxy: void notifyConditions(java.lang.String,android.service.notification.IConditionProvider,android.service.notification.Condition[])>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.storage.IMountService: java.lang.String getVolumeState(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>:<public>:<android.net.http.SslCertificate>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.PointF: float length(float,float)>:<public static>:<android.graphics.PointF:android.os.Parcelable>
<android.net.http.AndroidHttpClient.CurlLogger: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient.CurlLogger:org.apache.http.HttpRequestInterceptor>
<android.app.LoaderManagerImpl: void <clinit>()>:<static>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.VpnService.Builder: android.net.VpnService.Builder setMtu(int)>:<public>:<android.net.VpnService.Builder>
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>:<public>:<android.webkit.WebSettings>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.net.Proxy: int getDefaultPort()>:<public static final>:<android.net.Proxy>
<android.webkit.WebViewProvider.ViewDelegate: void setOverScrollMode(int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.appwidget.AppWidgetHost: void startListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.renderscript.Int3: android.renderscript.Int3 mul(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.graphics.drawable.RotateDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.DownloadManager: void setAccessAllDownloads(boolean)>:<public>:<android.app.DownloadManager>
<android.net.wifi.WifiManager: int access.510(android.net.wifi.WifiManager)>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.filterfw.core.GraphRunner: java.lang.Exception getError()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.app.JobSchedulerImpl: java.util.List getAllPendingJobs()>:<public>:<android.app.JobSchedulerImpl:android.app.job.JobScheduler>
<android.hwtheme.HwThemeManager.IHwThemeManager: int getThemeColor(int[],int,android.util.TypedValue,android.content.res.Resources,boolean)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLES11Ext: void glWeightPointerOESBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11Ext>
<android.hsm.HwSystemManager: boolean allowOp(int)>:<public static>:<android.hsm.HwSystemManager>
<android.app.backup.BackupDataOutput: void finalize()>:<protected>:<android.app.backup.BackupDataOutput>
<android.app.LauncherActivity: java.util.List makeListItems()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Bitmap: void setHasAlpha(boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.PathEffect: void <init>()>:<public>:<android.graphics.PathEffect>
<android.net.dhcp.DhcpPacket: void <init>(int,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,byte[],boolean)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.graphics.LargeBitmap: android.graphics.Bitmap nativeDecodeRegion(long,int,int,int,int,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.LargeBitmap>
<android.transition.Transition: void setCanRemoveViews(boolean)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.800(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.Matrix: void setIdentityM(float[],int)>:<public static>:<android.opengl.Matrix>
<android.os.INetworkManagementService: void setFirewallEgressDestRule(java.lang.String,int,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteSession: boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.FragmentManagerImpl: void addBackStackState(android.app.BackStackRecord)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.hwcontrol.HwWidgetFactory.HwTextView: boolean isCustomStyle()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile4g(java.lang.String)>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.transition.ChangeClipBounds: void <init>()>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.ScoredNetwork.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.ScoredNetwork.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pWfdInfo.1: android.net.wifi.p2p.WifiP2pWfdInfo[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo.1:android.os.Parcelable.Creator>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.os.CommonTimeConfig: int setClientSyncInterval(int)>:<public>:<android.os.CommonTimeConfig>
<android.accounts.AuthenticatorException: void <init>()>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.os.storage.IObbActionListener.Stub: void <init>()>:<public>:<android.os.storage.IObbActionListener.Stub:android.os.Binder,android.os.storage.IObbActionListener>
<android.graphics.pdf.PdfEditor: void throwIfOutCropBoxNull(android.graphics.Rect)>:<private>:<android.graphics.pdf.PdfEditor>
<android.app.DialogFragment: void setCancelable(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLLogWrapper: void glViewport(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void <clinit>()>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.view.DisplayAdjustments)>:<public>:<android.app.ResourcesManager>
<android.app.UiAutomation: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public final>:<android.app.UiAutomation>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityManagerProxy: boolean shutdown(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>:<public static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void setAutoCheckpointInterval()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.CursorWrapper: boolean isNull(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.webkit.WebViewProvider: void init(java.util.Map,boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.drawable.VectorDrawable.VPath: void setPathData(android.util.PathParser.PathDataNode[])>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.net.SntpClient: long getNtpTimeReference()>:<public>:<android.net.SntpClient>
<android.os.SystemVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Long4: android.renderscript.Long4 sub(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.os.BaseBundle: void putByte(java.lang.String,byte)>:<>:<android.os.BaseBundle>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldTerminateEGLWhenPausing()>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.os.MessageQueue: void nativeDestroy(long)>:<private static native>:<android.os.MessageQueue>
<android.net.NetworkAgent: void explicitlyUnselected()>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.app.DialogFragment: void setShowsDialog(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.webkit.HwFindActionModeCallback: void afterTextChanged(android.text.Editable)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller getPackageInstaller()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.wifi.WifiConfiguration.GroupCipher: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.BitmapDrawable.BitmapState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrinterInfo: void <init>(android.print.PrinterInfo.1)>:<>:<android.print.PrinterInfo:android.os.Parcelable>
<android.transition.Fade.FadeAnimatorListener: void onAnimationResume(android.animation.Animator)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: void <init>(android.app.ActivityTransitionCoordinator.1)>:<>:<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback:android.transition.Transition.EpicenterCallback>
<android.os.ResultReceiver.1: android.os.ResultReceiver[] newArray(int)>:<public>:<android.os.ResultReceiver.1:android.os.Parcelable.Creator>
<android.filterfw.core.ShaderProgram: boolean allocate(android.filterfw.core.GLEnvironment,java.lang.String,java.lang.String)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.database.CursorWindow: boolean nativePutNull(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.Crossfade:android.transition.Transition>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>:<public>:<android.graphics.Path>
<android.renderscript.RenderScript: void rsnContextSetPriority(long,int)>:<native>:<android.renderscript.RenderScript>
<android.transition.Crossfade.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Crossfade.2:android.animation.AnimatorListenerAdapter>
<android.app.VoiceInteractor.Request: android.content.Context getContext()>:<public>:<android.app.VoiceInteractor.Request>
<android.renderscript.RenderScript: void nScriptInvoke(long,int)>:<>:<android.renderscript.RenderScript>
<android.filterfw.core.NativeProgram: void setHostValue(java.lang.String,java.lang.Object)>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.os.MessageQueue: void dump(android.util.Printer,java.lang.String)>:<>:<android.os.MessageQueue>
<android.os.Process: int getProcessGroup(int)>:<public static final native>:<android.os.Process>
<android.net.INetworkStatsService.Stub.Proxy: void forceUpdate()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.app.EnterTransitionCoordinator: boolean access.000(android.app.EnterTransitionCoordinator)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ActionBar: boolean isShowing()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebSettings: int getUserAgent()>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.IRttManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.wifi.IRttManager.Stub:android.os.Binder,android.net.wifi.IRttManager>
<android.graphics.Region.Op: void <clinit>()>:<static>:<android.graphics.Region.Op:java.lang.Enum>
<android.opengl.GLSurfaceView: void onResume()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.Ripple: void cancelSoftwareAnimations()>:<private>:<android.graphics.drawable.Ripple>
<android.os.IBatteryPropertiesListener.Stub.Proxy: void batteryPropertiesChanged(android.os.BatteryProperties)>:<public>:<android.os.IBatteryPropertiesListener.Stub.Proxy:android.os.IBatteryPropertiesListener>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.database.sqlite.SQLiteConnection.OperationLog: void failOperation(int,java.lang.Exception)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.CookieManager>
<android.app.IActivityManager: void setFrontActivityScreenCompatMode(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.job.IJobScheduler.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.job.IJobScheduler.Stub:android.os.Binder,android.app.job.IJobScheduler>
<android.os.Debug: void startAllocCounting()>:<public static>:<android.os.Debug>
<android.os.NullVibrator: boolean hasVibrator()>:<public>:<android.os.NullVibrator:android.os.Vibrator>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.800(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse newInstance(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>:<static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.net.wifi.WifiScanner: java.lang.Object access.300(int)>:<static>:<android.net.wifi.WifiScanner>
<android.graphics.drawable.Ripple: float getYGravity()>:<public>:<android.graphics.drawable.Ripple>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.renderscript.Int4: android.renderscript.Int4 mul(android.renderscript.Int4,int)>:<public static>:<android.renderscript.Int4>
<android.hwcontrol.HwWidgetFactory.Factory: android.hwcontrol.HwWidgetFactory.HwDialogStub newHwDialogStub(android.content.Context,android.view.Window,android.app.Dialog,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.net.wifi.p2p.WifiP2pGroup: void setIsGroupOwner(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.Filter: void prepare(android.filterfw.core.FilterContext)>:<protected>:<android.filterfw.core.Filter>
<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>:<public abstract>:<android.net.http.RequestFeeder>
<android.os.IMultiWinServiceCallBack.Stub.Proxy: void multiWindowClose()>:<public>:<android.os.IMultiWinServiceCallBack.Stub.Proxy:android.os.IMultiWinServiceCallBack>
<android.net.InterfaceConfiguration: android.net.LinkAddress access.102(android.net.InterfaceConfiguration,android.net.LinkAddress)>:<static>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.net.RssiCurve.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.RssiCurve.1:android.os.Parcelable.Creator>
<android.net.Uri: void <init>(android.net.Uri.1)>:<>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.RenderScript: long nScriptIntrinsicCreate(int,long)>:<>:<android.renderscript.RenderScript>
<android.app.ContextImpl.4: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.4:android.app.ContextImpl.ServiceFetcher>
<android.app.ActivityManagerProxy: void killAllBackgroundProcesses()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.dhcp.DhcpDiscoverPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpDiscoverPacket:android.net.dhcp.DhcpPacket>
<android.net.wifi.RttManager.ParcelableRttParams: void <init>(android.net.wifi.RttManager.RttParams[])>:<>:<android.net.wifi.RttManager.ParcelableRttParams:android.os.Parcelable>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.net.ConnectivityManager: void setDataDependency(int,boolean)>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener: void onHandoverMessageAvailable(java.lang.String)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener>
<android.net.DhcpStateMachine.DhcpAction: void <clinit>()>:<static>:<android.net.DhcpStateMachine.DhcpAction:java.lang.Enum>
<android.net.NetworkScoreManager: void <init>(android.content.Context)>:<public>:<android.net.NetworkScoreManager>
<android.renderscript.FieldPacker: void <init>(int)>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.Type: int getCount()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.hsm.HsmTransactExt: void <init>()>:<public>:<android.hsm.HsmTransactExt>
<android.net.LinkProperties.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.LinkProperties.1:android.os.Parcelable.Creator>
<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.print.PrintManager.PrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>:<public abstract>:<android.print.PrintManager.PrintJobStateChangeListener>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.os.BatteryManagerInternal: int getInvalidCharger()>:<public abstract>:<android.os.BatteryManagerInternal>
<android.os.SystemProperties: long native_get_long(java.lang.String,long)>:<private static native>:<android.os.SystemProperties>
<android.app.IWallpaperManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.app.trust.ITrustManager: void registerTrustListener(android.app.trust.ITrustListener)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.renderscript.RenderScript: double nScriptGetVarD(long,int)>:<>:<android.renderscript.RenderScript>
<android.app.ListActivity: android.widget.ListView getListView()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Color: int red(int)>:<public static>:<android.graphics.Color>
<android.appwidget.AppWidgetManager: void bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.os.IBinder)>:<public>:<android.appwidget.AppWidgetManager>
<android.print.IPrintSpooler.Stub: void <init>()>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.os.BatteryStats: long getLowPowerModeEnabledTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.core.FrameManager: void setContext(android.filterfw.core.FilterContext)>:<>:<android.filterfw.core.FrameManager>
<android.os.Process: boolean supportsProcesses()>:<public static final>:<android.os.Process>
<android.app.Notification.BuilderRemoteViews: android.widget.RemoteViews clone()>:<public volatile>:<android.app.Notification.BuilderRemoteViews:android.widget.RemoteViews>
<android.filterfw.core.SyncRunner.1: void run()>:<public>:<android.filterfw.core.SyncRunner.1:java.lang.Runnable>
<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>:<public>:<android.net.http.CertificateChainValidator>
<android.app.Activity: void performSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.DelegatingSSLSession: java.lang.String[] getValueNames()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>:<public>:<android.os.UserManager>
<android.app.AppOpsManager.PackageOps: int describeContents()>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.renderscript.Path.Primitive: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Path.Primitive:java.lang.Enum>
<android.app.PendingIntent: void <init>(android.content.IIntentSender)>:<>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.wifi.WifiInfo.1: android.net.wifi.WifiInfo[] newArray(int)>:<public>:<android.net.wifi.WifiInfo.1:android.os.Parcelable.Creator>
<android.app.LoadedApk.ReceiverDispatcher: void saveReceiverTime(android.app.ActivityThread.ActionTimeType)>:<private>:<android.app.LoadedApk.ReceiverDispatcher>
<android.net.wifi.RttManager.ParcelableRttResults.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.RttManager.ParcelableRttResults.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: void native_drawRect(long,float,float,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.graphics.PathDashPathEffect.Style: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.graphics.drawable.VectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.os.INetworkManagementService.Stub.Proxy: void setAccessPointHw(android.net.wifi.HuaweiApConfiguration,java.lang.String,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.database.sqlite.SQLiteConnection: void nativeResetStatementAndClearBindings(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.Canvas: void <init>()>:<public>:<android.graphics.Canvas>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.app.ContextImpl.42: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.42:android.app.ContextImpl.ServiceFetcher>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRE(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.DhcpStateMachine.StoppedState: boolean processMessage(android.os.Message)>:<public>:<android.net.DhcpStateMachine.StoppedState:com.android.internal.util.State>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setGravity(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.IWifiManager: void setWifiApStateByManual(boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.renderscript.Float3: java.lang.Float dotProduct(android.renderscript.Float3,android.renderscript.Float3)>:<public static>:<android.renderscript.Float3>
<android.net.wifi.WpsResult: int describeContents()>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.SystemVibrator: int usageForAttributes(android.media.AudioAttributes)>:<private static>:<android.os.SystemVibrator:android.os.Vibrator>
<android.accounts.AccountManager: java.lang.Exception access.400(android.accounts.AccountManager,int,java.lang.String)>:<static>:<android.accounts.AccountManager>
<android.graphics.drawable.InsetDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Atlas.SlicePolicy.Cell: java.lang.String toString()>:<public>:<android.graphics.Atlas.SlicePolicy.Cell>
<android.app.backup.IBackupManager.Stub.Proxy: void fullTransportBackup(java.lang.String[])>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.os.INetworkManagementService.Stub.Proxy: void detachPppd(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()>:<public>:<android.os.PowerManager>
<android.opengl.GLES11: void <init>()>:<public>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.CursorWindow: boolean nativePutBlob(long,byte[],int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo native_get_storage_info(int)>:<private native>:<android.mtp.MtpDevice>
<android.transition.TransitionPropagation: void <init>()>:<public>:<android.transition.TransitionPropagation>
<android.app.ITransientNotification: void hide()>:<public abstract>:<android.app.ITransientNotification:android.os.IInterface>
<android.net.http.RequestHandle: void setRedirectCount(int)>:<public>:<android.net.http.RequestHandle>
<android.os.SystemProperties: java.lang.String get(java.lang.String)>:<public static>:<android.os.SystemProperties>
<android.net.wifi.WifiManager: boolean isWifiScannerSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Paint: boolean isFilterBitmap()>:<public final>:<android.graphics.Paint>
<android.app.BackStackRecord: void run()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.emoji.EmojiFactory: int getMinimumAndroidPua()>:<public>:<android.emoji.EmojiFactory>
<android.renderscript.FieldPacker: void align(int)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Path: void native_lineTo(long,float,float)>:<private static native>:<android.graphics.Path>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean doArpTest(int,int,int,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.DatabaseErrorHandler>
<android.opengl.GLLogWrapper: void glPointParameterx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.backup.IFullBackupRestoreObserver.Stub: void <init>()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub:android.os.Binder,android.app.backup.IFullBackupRestoreObserver>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.renderscript.Double4: android.renderscript.Double4 mul(android.renderscript.Double4,android.renderscript.Double4)>:<public static>:<android.renderscript.Double4>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.app.admin.IDevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.IWallpaperManager: void setDisplayPadding(android.graphics.Rect)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.net.LinkAddress.1: android.net.LinkAddress createFromParcel(android.os.Parcel)>:<public>:<android.net.LinkAddress.1:android.os.Parcelable.Creator>
<android.app.ContextImpl.64: void <init>()>:<>:<android.app.ContextImpl.64:android.app.ContextImpl.ServiceFetcher>
<android.mtp.MtpDevice: byte[] native_get_object(int,int)>:<private native>:<android.mtp.MtpDevice>
<android.database.Observable: void unregisterObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.graphics.Paint: void <init>()>:<public>:<android.graphics.Paint>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isTNotifications(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLErrorWrapper: void glFogf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: long nScriptKernelIDCreate(long,int,int)>:<>:<android.renderscript.RenderScript>
<android.transition.Transition: void <init>()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.renderscript.AllocationAdapter: void resize(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.app.ProgressDialog: android.widget.TextView access.400(android.app.ProgressDialog)>:<static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.filterfw.core.GLEnvironment: void initWithCurrentContext()>:<public>:<android.filterfw.core.GLEnvironment>
<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.LoaderManagerImpl.LoaderInfo: void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.net.wifi.WifiSsid: void <clinit>()>:<static>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.app.ActivityManagerProxy: boolean isInHomeStack(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>:<public static native>:<android.opengl.ETC1>
<android.net.wifi.HwWifiStatStore.SSIDStat: void <init>(android.net.wifi.HwWifiStatStore,android.net.wifi.HwWifiStatStore.1)>:<>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.FragmentTransaction: android.app.FragmentTransaction attach(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.EthernetManager: void addListener(android.net.EthernetManager.Listener)>:<public>:<android.net.EthernetManager>
<android.app.backup.BackupHelperDispatcher: void addHelper(java.lang.String,android.app.backup.BackupHelper)>:<public>:<android.app.backup.BackupHelperDispatcher>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.renderscript.Int3: void add(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.graphics.LightingColorFilter: void setColorMultiply(int)>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.net.http.HttpAuthHeader: java.lang.String getOpaque()>:<public>:<android.net.http.HttpAuthHeader>
<android.opengl.EGL14: boolean eglReleaseThread()>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLES10: void glPopMatrix()>:<public static native>:<android.opengl.GLES10>
<android.app.ApplicationPackageManager: void verifyPendingInstall(int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.Uri: android.net.Uri getCanonicalUri()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.hwtheme.HwThemeManager: boolean isTNotifications(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.ActionBar.LayoutParams: void <init>(int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES30: boolean glIsQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.ChooseTypeAndAccountActivity: void populateUIAccountList(java.lang.String[])>:<private final>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.database.sqlite.SQLiteDirectCursorDriver: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.net.http.HttpResponseCache: void flush()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.Notification.Builder: int access.302(android.app.Notification.Builder,int)>:<static>:<android.app.Notification.Builder>
<android.os.BatteryProperties.1: android.os.BatteryProperties createFromParcel(android.os.Parcel)>:<public>:<android.os.BatteryProperties.1:android.os.Parcelable.Creator>
<android.app.Notification: void <clinit>()>:<static>:<android.app.Notification:android.os.Parcelable>
<android.net.NetworkIdentity: int getSubType()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.os.BatteryStats.Uid: boolean hasNetworkActivity()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.renderscript.Short3: void add(short)>:<public>:<android.renderscript.Short3>
<android.app.SharedPreferencesImpl.2: void <init>(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl.MemoryCommitResult,java.lang.Runnable)>:<>:<android.app.SharedPreferencesImpl.2:java.lang.Runnable>
<android.app.ContextImpl: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.renderscript.Script: int getVarI(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.Application: void onLowMemory()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.VpnService: boolean removeAddress(java.net.InetAddress,int)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.p2p.WifiP2pGroupList.2: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pGroupList.2:android.os.Parcelable.Creator>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>:<public static>:<android.graphics.PixelFormat>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getAutoTimeRequired()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.JankEventData.1: android.os.JankEventData[] newArray(int)>:<public>:<android.os.JankEventData.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerNative: void <init>()>:<public>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.graphics.drawable.GradientDrawable.GradientState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.net.http.Request: void setConnection(android.net.http.Connection)>:<>:<android.net.http.Request>
<android.os.Debug: void resetGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.app.IActivityPendingResult.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IActivityPendingResult.Stub.Proxy:android.app.IActivityPendingResult>
<android.net.IpConfiguration: android.net.ProxyInfo getHttpProxy()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.app.IActivityManager: android.os.IBinder newUriPermissionOwner(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.Plugin: java.lang.String getDescription()>:<public>:<android.webkit.Plugin>
<android.renderscript.Matrix3f: void <init>()>:<public>:<android.renderscript.Matrix3f>
<android.filterfw.core.StreamPort: java.lang.String toString()>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.os.UserHandle: int getAppId(int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.app.job.JobService: boolean onStartJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.208(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES30: void glUniform1ui(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.os.Looper)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler:android.os.Handler>
<android.net.ScoredNetwork: void <init>(android.os.Parcel,android.net.ScoredNetwork.1)>:<>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.ScriptIntrinsicLUT create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>:<public>:<android.net.UrlQuerySanitizer>
<android.net.Network: int describeContents()>:<public>:<android.net.Network:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.emoji.EmojiFactory: int nativeGetMinimumVendorSpecificPua(long)>:<private native>:<android.emoji.EmojiFactory>
<android.os.Debug.MemoryInfo: void <init>()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.webkit.JsDialogHelper.PositiveListener: void <init>(android.webkit.JsDialogHelper,android.widget.EditText)>:<public>:<android.webkit.JsDialogHelper.PositiveListener:android.content.DialogInterface.OnClickListener>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.http.RequestQueue: android.content.Context access.000(android.net.http.RequestQueue)>:<static>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.database.MergeCursor: short getShort(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.renderscript.Long2: android.renderscript.Long2 sub(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.app.ActivityManager: void dumpPackageStateStatic(java.io.FileDescriptor,java.lang.String)>:<public static>:<android.app.ActivityManager>
<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.Paint: void native_setTextLocale(long,java.lang.String)>:<private static native>:<android.graphics.Paint>
<android.accounts.AccountManager.14: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.Bundle,android.app.Activity,int)>:<>:<android.accounts.AccountManager.14:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.os.SystemService.1: void <init>()>:<>:<android.os.SystemService.1:java.lang.Runnable>
<android.filterfw.core.NativeBuffer: void <clinit>()>:<static>:<android.filterfw.core.NativeBuffer>
<android.webkit.WebView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.admin.DeviceAdminReceiver: void <clinit>()>:<static>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.opengl.GLLogWrapper: void glStencilOp(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.Bundle: char getChar(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.renderscript.Double3: void negate()>:<public>:<android.renderscript.Double3>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap access.000(android.net.wifi.WifiEnterpriseConfig)>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.Shader.TileMode: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.graphics.RectF: float width()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.net.ConnectivityManager: void releaseNetworkRequest(android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>:<public abstract>:<android.app.ActionBar>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.webkit.WebViewClient: void onSavePassword(android.webkit.WebView)>:<public final>:<android.webkit.WebViewClient>
<android.net.wifi.WifiManager: int getWifiState()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.IActivityManager: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.StrictMode: java.lang.ThreadLocal access.500()>:<static>:<android.os.StrictMode>
<android.net.wifi.WifiCHRStateManager: void updateGateWay(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.IpConfiguration: void <init>(android.net.IpConfiguration)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.accounts.IAccountAuthenticatorResponse.Stub: void <init>()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.app.ApplicationPackageManager: void removeCacheIcon(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.MobileLinkQualityInfo: void setLteRsrp(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.app.ActivityThread.Idler: boolean queueIdle()>:<public final>:<android.app.ActivityThread.Idler:android.os.MessageQueue.IdleHandler>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.mtp.MtpServer: void native_cleanup()>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Matrix: void setSinCos(float,float)>:<public>:<android.graphics.Matrix>
<android.os.INetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppFilesDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.app.IStopUserCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IStopUserCallback.Stub:android.os.Binder,android.app.IStopUserCallback>
<android.net.ConnectivityManager: int tether(java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>:<public abstract>:<android.filterfw.core.FrameManager>
<android.app.ContextImpl.23: void <init>()>:<>:<android.app.ContextImpl.23:android.app.ContextImpl.ServiceFetcher>
<android.accounts.AuthenticatorDescription.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ApplicationErrorReport.BatteryInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.filterfw.core.FilterGraph: void discardUnconnectedOutputs()>:<private>:<android.filterfw.core.FilterGraph>
<android.'annotation'.SdkConstant.SdkConstantType: void <init>(java.lang.String,int)>:<private>:<android.annotation.SdkConstant.SdkConstantType:java.lang.Enum>
<android.app.AppOpsManager: int strOpToOp(java.lang.String)>:<public static>:<android.app.AppOpsManager>
<android.os.WorkSource: boolean diff(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.BackStackRecord: android.app.FragmentTransaction addToBackStack(java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.MobileLinkQualityInfo: void setLteRsrq(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.print.PrinterInfo: void <init>()>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.backup.IRestoreObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.app.backup.IRestoreObserver.Stub:android.os.Binder,android.app.backup.IRestoreObserver>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.PrintDocumentInfo: long getDataSize()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean initializeMulticastFiltering()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.YuvImage: byte[] getYuvData()>:<public>:<android.graphics.YuvImage>
<android.app.IWallpaperManager.Stub.Proxy: int getWidthHint()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.filterfw.core.ProgramVariable: android.filterfw.core.Program getProgram()>:<public>:<android.filterfw.core.ProgramVariable>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>:<public>:<android.graphics.drawable.Drawable>
<android.os.IMultiWinService.Stub.Proxy: boolean isLauncherVisible()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.test.AndroidTestCase: void tearDown()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc[] values()>:<public static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.renderscript.RenderScript: void rsnAllocationRead(long,long,java.lang.Object,int)>:<native>:<android.renderscript.RenderScript>
<android.app.backup.BackupTransport.TransportImpl: int initializeDevice()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.hwtheme.HwThemeManagerDummy: android.content.res.Resources getResources()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.EnterTransitionCoordinator: void startSharedElementTransition(android.os.Bundle)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.Fragment: void performStop()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.backup.IRestoreObserver.Stub.Proxy: void restoreFinished(int)>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.os.INetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.accounts.ChooseAccountActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ActivityThread>
<android.opengl.GLErrorWrapper: void glActiveTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.RequestQueue: void requeueRequest(android.net.http.Request)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.net.wifi.WifiInfo: void setFrequency(int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.ProgramFragment.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramFragment.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.os.ResultReceiver: void <init>(android.os.Parcel)>:<>:<android.os.ResultReceiver:android.os.Parcelable>
<android.os.Broadcaster: void request(int,android.os.Handler,int)>:<public>:<android.os.Broadcaster>
<android.filterfw.geometry.Point: void <init>()>:<public>:<android.filterfw.geometry.Point>
<android.os.PowerManager: void startWakeUpReady(long)>:<public>:<android.os.PowerManager>
<android.accounts.IAccountManager: boolean addSharedAccountAsUser(android.accounts.Account,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.os.storage.StorageManager.ObbListenerDelegate: void sendObbStateChanged(java.lang.String,int)>:<>:<android.os.storage.StorageManager.ObbListenerDelegate>
<android.graphics.Path: void toggleInverseFillType()>:<public>:<android.graphics.Path>
<android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>:<public static>:<android.os.FileUtils>
<android.graphics.pdf.PdfDocument: void finishPage(android.graphics.pdf.PdfDocument.Page)>:<public>:<android.graphics.pdf.PdfDocument>
<android.os.CommonClock: void throwOnDeadServer()>:<private>:<android.os.CommonClock>
<android.os.storage.StorageManager.MountServiceBinderListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.os.storage.StorageManager.MountServiceBinderListener:android.os.storage.IMountServiceListener.Stub,android.os.Binder>
<android.os.IUserManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.Fragment.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)>:<static>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.app.admin.DevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Parcel: long getGlobalAllocSize()>:<public static native>:<android.os.Parcel>
<android.app.INotificationManager.Stub.Proxy: android.content.ComponentName getEffectsSuppressor()>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)>:<public>:<android.graphics.Paint>
<android.hwcontrol.HwWidgetFactory.HwToast: void initialToast(android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwToast>
<android.database.CursorWindow: boolean isNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.IPowerManager: void wakeUp(long)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>:<public static final>:<android.database.DatabaseUtils>
<android.net.NetworkCapabilities: boolean equalsSpecifier(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.Uri.OpaqueUri: java.lang.String getQuery()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.webkit.CacheManager: boolean startCacheTransaction()>:<public static>:<android.webkit.CacheManager>
<android.app.ActivityThread.3: void <init>(android.app.ActivityThread)>:<>:<android.app.ActivityThread.3:android.content.ComponentCallbacks2>
<android.renderscript.Allocation: void validateIsFloat64()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.PendingIntent: int describeContents()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.PendingIntent: void cancel()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDeviceList.1: android.net.wifi.p2p.WifiP2pDeviceList createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList.1:android.os.Parcelable.Creator>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: long getMaximumTimeToLock(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.RenderScript: void rsnContextSendMessage(long,int,int[])>:<native>:<android.renderscript.RenderScript>
<android.filterfw.core.SerializedFrame.DirectByteInputStream: int read(byte[],int,int)>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteInputStream:java.io.InputStream>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.transition.ChangeText: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.mtp.HwMtpDatabaseManagerDummy: int hwBeginSendObject(java.lang.String,android.database.Cursor)>:<public>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.RouteInfo: void <init>(android.net.LinkAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>:<public>:<android.graphics.Paint>
<android.print.PrinterCapabilitiesInfo: int access.402(android.print.PrinterCapabilitiesInfo,int)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.ConnectivityManager: void <clinit>()>:<static>:<android.net.ConnectivityManager>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean deliverSelfNotifications()>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForCursorWindow(long,long,long,int,int,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.BatteryStats: int getDischargeAmountScreenOffSinceCharge()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.backup.BackupAgent.BackupServiceBinder: void doRestoreFinished(int,android.app.backup.IBackupManager)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.webkit.WebSyncManager: void run()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.webkit.WebSettings: int getTextZoom()>:<public abstract>:<android.webkit.WebSettings>
<android.app.IUiModeManager.Stub.Proxy: void enableCarMode(int)>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.http.DelegatingSSLSession: long getCreationTime()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.AsyncRunner: void <init>(android.filterfw.core.FilterContext,java.lang.Class)>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.filterfw.core.FilterPort: void checkFrameManager(android.filterfw.core.Frame,android.filterfw.core.FilterContext)>:<protected>:<android.filterfw.core.FilterPort>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.filterfw.core.RoundRobinScheduler: void <init>(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.core.RoundRobinScheduler:android.filterfw.core.Scheduler>
<android.app.WallpaperInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.WallpaperInfo.1:android.os.Parcelable.Creator>
<android.app.trust.TrustManager: void <init>(android.os.IBinder)>:<public>:<android.app.trust.TrustManager>
<android.print.IPrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.app.ISearchManagerCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.app.ISearchManagerCallback.Stub:android.os.Binder,android.app.ISearchManagerCallback>
<android.net.wifi.ScanSettings.1: android.net.wifi.ScanSettings[] newArray(int)>:<public>:<android.net.wifi.ScanSettings.1:android.os.Parcelable.Creator>
<android.database.CursorWindow: void nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void executeMessage(android.os.Message)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.app.ContextImpl.52: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.52:android.app.ContextImpl.ServiceFetcher>
<android.print.PrintAttributes.Resolution: java.lang.String getId()>:<public>:<android.print.PrintAttributes.Resolution>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebHistoryItem: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.app.IApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.database.IContentObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.filterfw.core.FilterPort: java.lang.String getName()>:<public>:<android.filterfw.core.FilterPort>
<android.app.ActivityManagerProxy: int getActivityDisplayId(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLLogWrapper: void glFrontFace(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.test.InstrumentationTestCase: void sendKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.Short3: android.renderscript.Short3 mul(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.graphics.Canvas: int native_getHeight(long)>:<private static native>:<android.graphics.Canvas>
<android.app.ActivityThread.TimeProfileData: void <init>()>:<>:<android.app.ActivityThread.TimeProfileData>
<android.os.Debug: void resetGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.app.ActivityManager.RunningTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.print.PrinterInfo: void <clinit>()>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(short[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Bitmap: long ni()>:<final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.ActivityManager.TaskDescription: void <init>()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.os.SELinux: boolean restorecon(java.io.File)>:<public static>:<android.os.SELinux>
<android.net.wifi.IWifiManager: void enableVerboseLogging(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.IWifiManager: int getFrequencyBand()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.renderscript.RenderScript: void rsnAllocationData3D(long,long,int,int,int,int,int,int,int,java.lang.Object,int,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.BitmapShader: android.graphics.Shader copy()>:<protected>:<android.graphics.BitmapShader:android.graphics.Shader>
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc[] values()>:<public static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.transition.ChangeBounds.1: android.graphics.PointF get(android.graphics.drawable.Drawable)>:<public>:<android.transition.ChangeBounds.1:android.util.Property>
<android.app.IActivityContainer.Stub.Proxy: void setSurface(android.view.Surface,int,int,int)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>:<public>:<android.filterfw.core.FilterFunction>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Int2: void negate()>:<public>:<android.renderscript.Int2>
<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator access.202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator)>:<static>:<android.graphics.drawable.RippleBackground>
<android.app.ActivityView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: void release()>:<public>:<android.graphics.Canvas>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.Ripple.LogInterpolator: void <init>(android.graphics.drawable.Ripple.1)>:<>:<android.graphics.drawable.Ripple.LogInterpolator:android.animation.TimeInterpolator>
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()>:<public>:<android.filterfw.core.FilterPort>
<android.opengl.GLES10: void glNormalPointerBounds(int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.opengl.GLES20: void glUniform2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.app.IWallpaperManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IWallpaperManager.Stub:android.os.Binder,android.app.IWallpaperManager>
<android.app.SearchDialog: void setUserQuery(java.lang.String)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.renderscript.ScriptGroup.Node: void <init>(android.renderscript.Script)>:<>:<android.renderscript.ScriptGroup.Node>
<android.net.LocalSocketImpl.SocketOutputStream: void <init>(android.net.LocalSocketImpl)>:<>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.os.UpdateLock: void acquireLocked()>:<private>:<android.os.UpdateLock>
<android.app.IActivityManager: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.IWifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.database.CursorWindow: boolean allocRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.admin.DeviceAdminInfo: void <init>(android.os.Parcel)>:<>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.os.storage.StorageVolume: java.lang.String getState()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.os.PowerManager.BacklightBrightness: void <init>(int,int,int)>:<public>:<android.os.PowerManager.BacklightBrightness>
<android.print.PrinterInfo.1: android.print.PrinterInfo[] newArray(int)>:<public>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.BitmapFactory>
<android.renderscript.ScriptGroup.Builder: void mergeDAGs(int,int)>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.CommonTimeConfig: void release()>:<public>:<android.os.CommonTimeConfig>
<android.os.UEventObserver: void access.000()>:<static>:<android.os.UEventObserver>
<android.app.ContextImpl.65: void run()>:<public>:<android.app.ContextImpl.65:java.lang.Thread>
<android.drm.DrmManagerClient: boolean _canHandle(int,java.lang.String,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.os.IHDMIConnectService: void setReproductionWidthRatio(float)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.os.storage.IMountService: void clearPassword()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.ActivityThread: void access.2000(android.app.ActivityThread,android.app.ActivityThread.NewIntentData)>:<static>:<android.app.ActivityThread>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.transition.Scene: boolean isCreatedFromLayoutResource()>:<>:<android.transition.Scene>
<android.os.storage.IMountServiceListener.Stub.Proxy: void onUsbMassStorageConnectionChanged(boolean)>:<public>:<android.os.storage.IMountServiceListener.Stub.Proxy:android.os.storage.IMountServiceListener>
<android.app.ISearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onRequestContinued()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.database.MergeCursor: float getFloat(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.Uri: java.lang.String decode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>:<public>:<android.filterfw.core.GLEnvironment>
<android.opengl.GLException: java.lang.String getErrorString(int)>:<private static>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.INetworkPolicyManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState access.402(android.net.wifi.WifiInfo,android.net.wifi.SupplicantState)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.Matrix.1: boolean postScale(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.wifi.WifiScanner.WifiChangeListener: void onChanging(android.net.wifi.ScanResult[])>:<public abstract>:<android.net.wifi.WifiScanner.WifiChangeListener:android.net.wifi.WifiScanner.ActionListener>
<android.hwtheme.HwThemeManager.IHwThemeManager: void updateConfiguration()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.Bitmap.Config: void <clinit>()>:<static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.renderscript.Short3: void <init>(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.ddm.DdmHandleViewDebug.1: void <init>(android.ddm.DdmHandleViewDebug,android.view.View,android.view.View)>:<>:<android.ddm.DdmHandleViewDebug.1:java.lang.Runnable>
<android.app.ActivityManager.TaskDescription: void <clinit>()>:<static>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.os.BaseBundle: void <init>(java.lang.ClassLoader)>:<>:<android.os.BaseBundle>
<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl: android.net.wifi.IHwCustWifiManager getHwCustWifiManager()>:<public>:<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl:android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.net.ProxyInfo: java.lang.String[] getExclusionList()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean isPortableHotspotSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.Process: void establishZygoteConnectionForAbi(java.lang.String)>:<public static>:<android.os.Process>
<android.webkit.WebView: void setEnableAdblockFeature(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String,java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WifiConfiguration.3: void <init>()>:<>:<android.net.wifi.WifiConfiguration.3:android.os.Parcelable.Creator>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>:<public final>:<android.os.Parcel>
<android.renderscript.Matrix3f: float get(int,int)>:<public>:<android.renderscript.Matrix3f>
<android.net.wifi.WifiLog: boolean needToTrigger(android.net.wifi.WifiLog.WiFiExceptionType)>:<private static>:<android.net.wifi.WifiLog>
<android.graphics.PointF.1: void <init>()>:<>:<android.graphics.PointF.1:android.os.Parcelable.Creator>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setBackoffCriteria(long,int)>:<public>:<android.app.job.JobInfo.Builder>
<android.net.wifi.WifiManager.WifiLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.WifiLock>
<android.app.job.IJobScheduler.Stub.Proxy: void cancel(int)>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.app.EnterTransitionCoordinator: void requestLayoutForSharedElements()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()>:<public>:<android.app.ActivityManager>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.admin.DeviceAdminInfo: void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.accessibilityservice.IAccessibilityServiceClient.Stub: android.os.IBinder asBinder()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceClient>
<android.os.Handler.MessengerImpl: void <init>(android.os.Handler)>:<private>:<android.os.Handler.MessengerImpl:android.os.IMessenger.Stub>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1508(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityThread: void handleDumpHeap(boolean,android.app.ActivityThread.DumpHeapData)>:<static final>:<android.app.ActivityThread>
<android.filterfw.core.NativeProgram: boolean callNativeTeardown()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.os.Parcel.2: void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader)>:<>:<android.os.Parcel.2:java.io.ObjectInputStream,java.io.InputStream>
<android.renderscript.RenderScript: void rsnScriptForEach(long,long,int,long,long,byte[])>:<native>:<android.renderscript.RenderScript>
<android.filterfw.core.SyncRunner: int step()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.net.BaseNetworkStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.SearchableInfo: int getImeOptions()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.ActivityOptions: void abort()>:<public>:<android.app.ActivityOptions>
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)>:<public>:<android.filterfw.core.Frame>
<android.filterfw.core.Program: java.lang.Object getHostValue(java.lang.String)>:<public abstract>:<android.filterfw.core.Program>
<android.hwtheme.HwThemeManager: void <clinit>()>:<static>:<android.hwtheme.HwThemeManager>
<android.renderscript.Element: android.renderscript.Element I64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: void scale(float)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.app.ActivityThread.StopInfo: void <init>()>:<private>:<android.app.ActivityThread.StopInfo:java.lang.Runnable>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void onCancelled(java.lang.Object)>:<protected volatile>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.transition.ArcMotion: void setMaximumAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.app.ActivityManagerProxy: void unhandledBack()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.net.NetworkTemplate.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkTemplate.1:android.os.Parcelable.Creator>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: boolean canReuseCache()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.os.BaseBundle: void putFloat(java.lang.String,float)>:<>:<android.os.BaseBundle>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.StrictMode: java.lang.Object trackActivity(java.lang.Object)>:<public static>:<android.os.StrictMode>
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Paint: void setStrikeThruText(boolean)>:<public native>:<android.graphics.Paint>
<android.app.IBackupAgent.Stub.Proxy: void fail(java.lang.String)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition: void start()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.app.ApplicationThreadProxy: void scheduleSuicide()>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.INetworkManagementService: void setPermission(java.lang.String,int[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.os.Process: void <init>()>:<public>:<android.os.Process>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebViewProvider: boolean zoomIn()>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.RenderScript: void rsnScriptSetVarJ(long,long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.transition.Transition: android.transition.Transition excludeChildren(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)>:<public>:<android.filterfw.core.FilterFactory>
<android.opengl.GLLogWrapper: void glBindBuffer(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.INotificationManager.Stub.Proxy: boolean isSystemConditionProviderEnabled(java.lang.String)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ActivityManagerProxy: void notifyLaunchTaskBehindComplete(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setDisplayIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)>:<public>:<android.drm.DrmManagerClient>
<android.net.http.HttpResponseCache: void delete()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials_native(java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.SurfaceTexture: void nativeClassInit()>:<private static native>:<android.graphics.SurfaceTexture>
<android.drm.DrmOutputStream: void close()>:<public>:<android.drm.DrmOutputStream:java.io.OutputStream>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>:<public>:<android.app.Instrumentation>
<android.os.storage.IMountService: boolean isObbMounted(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.BaseBundle: void putDouble(java.lang.String,double)>:<public>:<android.os.BaseBundle>
<android.app.backup.RestoreDescription: int getDataType()>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.renderscript.Int2: void copyTo(int[],int)>:<public>:<android.renderscript.Int2>
<android.opengl.GLES10: void glLogicOp(int)>:<public static native>:<android.opengl.GLES10>
<android.os.WorkSource.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.WorkSource.1:android.os.Parcelable.Creator>
<android.opengl.GLES10: void glColorPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Long2: void mul(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.os.BatteryStats.Timer: void <init>()>:<public>:<android.os.BatteryStats.Timer>
<android.graphics.Rect: void scale(float)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>:<public final>:<android.os.Parcel>
<android.graphics.Canvas: int native_save(long,int)>:<private static native>:<android.graphics.Canvas>
<android.renderscript.Long2: long dotProduct(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.os.StrictMode: void dropboxViolationAsync(int,android.os.StrictMode.ViolationInfo)>:<private static>:<android.os.StrictMode>
<android.app.Instrumentation.1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>:<public>:<android.app.Instrumentation.1ContextMenuRunnable:java.lang.Runnable>
<android.app.BackStackRecord: android.util.ArrayMap mapEnteringSharedElements(android.app.BackStackRecord.TransitionState,android.app.Fragment,boolean)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.renderscript.ProgramStore: boolean isColorMaskRedEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.os.IPowerManager.Stub.Proxy: void setAttentionLight(boolean,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.EnterTransitionCoordinator: void triggerViewsReady(android.util.ArrayMap)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void init(android.accessibilityservice.IAccessibilityServiceConnection,int,android.os.IBinder)>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.app.Notification.Action.Builder: android.app.Notification.Action build()>:<public>:<android.app.Notification.Action.Builder>
<android.os.storage.StorageManager.ListenerDelegate: void sendStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>:<>:<android.os.storage.StorageManager.ListenerDelegate>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isTargetFamily(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_TEST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.webkit.WebViewProvider: boolean overlayVerticalScrollbar()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.trust.TrustManager.1: void onTrustManagedChanged(boolean,int)>:<public>:<android.app.trust.TrustManager.1:android.app.trust.ITrustListener.Stub,android.os.Binder>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.os.INetworkManagementService: void removeInterfaceFromLocalNetwork(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ActivityThread.ApplicationThread: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.renderscript.RenderScript: long nAllocationCreateBitmapRef(long,android.graphics.Bitmap)>:<>:<android.renderscript.RenderScript>
<android.net.http.AndroidHttpClientConnection: void flush()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.net.BaseNetworkStateTracker: void dispatchConfigurationChanged()>:<protected final>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.IEthernetServiceListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.IEthernetServiceListener.Stub.Proxy:android.net.IEthernetServiceListener>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterId,java.lang.String,int)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.backup.BackupHelperDispatcher: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupHelperDispatcher>
<android.webkit.WebChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient.FileChooserParams)>:<public>:<android.webkit.WebChromeClient>
<android.webkit.WebView: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.BackStackRecord: android.app.FragmentTransaction remove(android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.net.Uri,int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.renderscript.Short4: android.renderscript.Short4 div(android.renderscript.Short4,short)>:<public static>:<android.renderscript.Short4>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Int4: void mod(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.os.Handler: void <init>(android.os.Handler.Callback,boolean)>:<public>:<android.os.Handler>
<android.opengl.GLES20: boolean glIsProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebView.PrivateAccess: int super_getScrollBarStyle()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.app.usage.UsageStats: void <init>()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.net.VpnService: android.net.IConnectivityManager access.200()>:<static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.INetworkPolicyManager.Stub.Proxy: void snoozeLimit(android.net.NetworkTemplate)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.transition.ChangeText: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeText:android.transition.Transition>
<android.net.NetworkTemplate.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkTemplate.1:android.os.Parcelable.Creator>
<android.filterfw.core.GLFrame: void onFrameFetch()>:<protected>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor remove(java.lang.String)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.ClipDrawable.ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable.1)>:<>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.DhcpInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.DhcpInfo.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.RotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.HwWifiCHRService: void connectFromUser(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.renderscript.Matrix4f: void translate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.app.Notification.Builder: android.app.Notification.Builder setContentIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.net.wifi.HwWifiCHRService: void authFailEvent(int)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.netdetect.INetDetectService.Stub: android.netdetect.INetDetectService asInterface(android.os.IBinder)>:<public static>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.os.BatteryStats.HistoryItem: int describeContents()>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.net.wifi.HwCustAbsWifiManager: void <init>()>:<public>:<android.net.wifi.HwCustAbsWifiManager:android.net.wifi.IHwCustWifiManager>
<android.app.EnterTransitionCoordinator: void sendSharedElementDestination()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.wifi.HwInnerWifiManager: java.lang.String getWpaSuppConfig()>:<public abstract>:<android.net.wifi.HwInnerWifiManager>
<android.opengl.GLES10: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ProfilerInfo: void <init>(android.os.Parcel,android.app.ProfilerInfo.1)>:<>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.graphics.Atlas.Policy: android.graphics.Atlas.Entry pack(int,int,android.graphics.Atlas.Entry)>:<abstract>:<android.graphics.Atlas.Policy>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PageRange: void <init>(android.os.Parcel,android.print.PageRange.1)>:<>:<android.print.PageRange:android.os.Parcelable>
<android.net.nsd.NsdServiceInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.nsd.NsdServiceInfo.1:android.os.Parcelable.Creator>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display,int)>:<public>:<android.app.Presentation:android.app.Dialog>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>:<public>:<android.net.http.SslCertificate>
<android.graphics.Color: int HSBtoColor(float,float,float)>:<public static>:<android.graphics.Color>
<android.net.NetworkInfo: int getSubtype()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.wifi.WifiCHRStateManager: void updateSimStatus(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.INonHardwareAcceleratedPackagesManager.Stub: void <init>()>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub:android.os.Binder,android.app.INonHardwareAcceleratedPackagesManager>
<android.drm.DrmStore: void <init>()>:<public>:<android.drm.DrmStore>
<android.graphics.Bitmap: android.graphics.Bitmap nativeExtractAlpha(long,long,int[])>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnElementCreate(long,long,int,boolean,int)>:<native>:<android.renderscript.RenderScript>
<android.app.IActivityManager: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.http.RequestQueue.SyncFeeder: android.net.http.Request getRequest()>:<public>:<android.net.http.RequestQueue.SyncFeeder:android.net.http.RequestFeeder>
<android.net.IConnectivityManager.Stub.Proxy: void reportInetCondition(int,int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Activity: void finishAffinity()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.GradientDrawable: int getOpacity()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.http.RequestHandle: boolean isRedirectMax()>:<public>:<android.net.http.RequestHandle>
<android.graphics.drawable.InsetDrawable.InsetState: boolean canConstantState()>:<>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.os.StrictMode.ViolationInfo: void <init>()>:<public>:<android.os.StrictMode.ViolationInfo>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.renderscript.RenderScriptGL: void bindProgramVertex(android.renderscript.ProgramVertex)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.filterfw.core.FilterContext: void tearDown()>:<public>:<android.filterfw.core.FilterContext>
<android.app.Fragment: void onPause()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>:<public>:<android.mtp.MtpDevice>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2608(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.wifi.IWifiManager: android.net.wifi.WifiInfo getConnectionInfo()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType valueOf(java.lang.String)>:<public static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Double3: android.renderscript.Double3 sub(android.renderscript.Double3,double)>:<public static>:<android.renderscript.Double3>
<android.renderscript.Matrix4f: float computeCofactor(int,int)>:<private>:<android.renderscript.Matrix4f>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.DrawableContainer.DrawableContainerState cloneConstantState()>:<volatile>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.StrictMode.8: android.os.StrictMode.ThreadSpanState initialValue()>:<protected>:<android.os.StrictMode.8:java.lang.ThreadLocal>
<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.os.IJankShield: void insertJankEvent(android.os.JankEventData)>:<public abstract>:<android.os.IJankShield:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pGroup: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.app.backup.BackupAgent.BackupServiceBinder: void fail(java.lang.String)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.PowerManagerInternal: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>:<public abstract>:<android.os.PowerManagerInternal>
<android.net.LinkAddress: int getPrefixLength()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.webkit.WebSettings: boolean getAllowFileAccessFromFileURLs()>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.Long2: void addMultiple(android.renderscript.Long2,long)>:<public>:<android.renderscript.Long2>
<android.app.SharedElementCallback: void onRejectSharedElements(java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.accounts.IAccountManager.Stub.Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.opengl.GLLogWrapper: void glLightxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.1: void <init>(android.print.PrintManager,android.os.Looper,android.os.Handler.Callback,boolean)>:<>:<android.print.PrintManager.1:android.os.Handler>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)>:<public static>:<android.os.MemoryFile>
<android.app.usage.UsageEvents.Event: java.lang.String getClassName()>:<public>:<android.app.usage.UsageEvents.Event>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.app.IActivityManager: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Service: void stopSelf(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.app.ActivityGroup: void onPause()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.IMultiWinService: java.util.List getResumedPackages()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.job.IJobCallback: void acknowledgeStartMessage(int,boolean)>:<public abstract>:<android.app.job.IJobCallback:android.os.IInterface>
<android.net.wifi.WifiScanner: java.lang.Object removeListener(int)>:<private static>:<android.net.wifi.WifiScanner>
<android.renderscript.FieldPacker: void addI64(long)>:<public>:<android.renderscript.FieldPacker>
<android.net.Uri: android.net.Uri normalizeScheme()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.EGL14: android.opengl.EGLSurface _eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<private static native>:<android.opengl.EGL14>
<android.os.IMultiWinService.Stub.Proxy: boolean isResumedMultiWin(android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.net.http.HttpAuthHeader: java.lang.String trimDoubleQuotesIfAny(java.lang.String)>:<private static>:<android.net.http.HttpAuthHeader>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.TransitionSet: android.transition.TransitionSet setSceneRoot(android.view.ViewGroup)>:<>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.Debug.InstructionCount: boolean resetAndStart()>:<public>:<android.os.Debug.InstructionCount>
<android.os.IHDMIConnectService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.app.trust.ITrustListener.Stub.Proxy: void onTrustManagedChanged(boolean,int)>:<public>:<android.app.trust.ITrustListener.Stub.Proxy:android.app.trust.ITrustListener>
<android.print.PrintDocumentInfo: void <clinit>()>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.graphics.Path: void native_setLastPoint(long,float,float)>:<private static native>:<android.graphics.Path>
<android.app.IActivityContainerCallback: void onAllActivitiesComplete(android.os.IBinder)>:<public abstract>:<android.app.IActivityContainerCallback:android.os.IInterface>
<android.renderscript.FieldPacker: android.renderscript.Double4 subDouble4()>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.RttManager.RttParams: void <init>()>:<public>:<android.net.wifi.RttManager.RttParams>
<android.app.FragmentManagerState.1: android.app.FragmentManagerState createFromParcel(android.os.Parcel)>:<public>:<android.app.FragmentManagerState.1:android.os.Parcelable.Creator>
<android.app.ActivityView.ActivityViewCallback: void <init>()>:<public>:<android.app.ActivityView.ActivityViewCallback>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransitionStyle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.Notification.BigTextStyle: void restoreFromExtras(android.os.Bundle)>:<protected>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.transition.Transition.2: void onAnimationStart(android.animation.Animator)>:<public>:<android.transition.Transition.2:android.animation.AnimatorListenerAdapter>
<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>:<public>:<android.net.NetworkScoreManager>
<android.os.Parcel: byte[] nativeMarshall(long)>:<private static native>:<android.os.Parcel>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsToOverlay()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void reportFailedPasswordAttempt(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Dialog: void setVolumeControlStream(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.VectorDrawable.VPathRenderer: boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable.VGroup)>:<private>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.graphics.drawable.AnimationDrawable: void stop()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.Process: int[] getPids(java.lang.String,int[])>:<public static final native>:<android.os.Process>
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesCount(int)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>:<public>:<android.graphics.Path>
<android.graphics.drawable.GradientDrawable: android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable.GradientState)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.INotificationManager: void cancelNotificationWithTag(java.lang.String,java.lang.String,int,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.TransitionDrawable.TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable.1)>:<>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.os.CommonClock: long getTime()>:<public>:<android.os.CommonClock>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: boolean hasPackage(java.lang.String)>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.app.job.JobParameters: void <init>(android.os.IBinder,int,android.os.PersistableBundle,boolean)>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.net.IConnectivityManager: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.renderscript.RenderScript: void rsnScriptForEach(long,long,int,long,long)>:<native>:<android.renderscript.RenderScript>
<android.os.Debug: int getMethodTracingMode()>:<public static>:<android.os.Debug>
<android.net.wifi.WifiManager: boolean saveConfiguration()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.BackStackRecord: void setLastIn(android.util.SparseArray,android.app.Fragment)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiScanner: java.util.concurrent.CountDownLatch access.100()>:<static>:<android.net.wifi.WifiScanner>
<android.net.wifi.p2p.WifiP2pManager.Channel: void <init>(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>:<>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.accounts.AccountManager.AmsTask.1: java.lang.Object call()>:<public volatile>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.app.NotificationManager: void cancel(int)>:<public>:<android.app.NotificationManager>
<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.net.http.RequestQueue: void dump()>:<>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.graphics.drawable.RippleDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.backup.IBackupManager: java.lang.String getCurrentTransport()>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.os.IMultiWinService: int registerMultiWin(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.renderscript.Int4: void copyTo(int[],int)>:<public>:<android.renderscript.Int4>
<android.os.Binder: android.os.UserHandle getCallingUserHandle()>:<public static final>:<android.os.Binder:android.os.IBinder>
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public final>:<android.app.UiAutomation>
<android.app.Fragment: android.transition.Transition getEnterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>:<public>:<android.net.http.SslCertificate>
<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.opengl.GLES10: void glLineWidthx(int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebView: boolean onHoverEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.accounts.AbstractAccountAuthenticator.2: void run()>:<public>:<android.accounts.AbstractAccountAuthenticator.2:java.lang.Runnable>
<android.accounts.AbstractAccountAuthenticator.Transport: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.graphics.Path: void native_addRect(long,float,float,float,float,int)>:<private static native>:<android.graphics.Path>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.WebAddress: void <init>(java.lang.String)>:<public>:<android.net.WebAddress>
<android.graphics.Region: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.app.ActivityManager.TaskDescription.1: void <init>()>:<>:<android.app.ActivityManager.TaskDescription.1:android.os.Parcelable.Creator>
<android.renderscript.ScriptIntrinsic: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ScriptIntrinsic:android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Region: long nativeCreateFromParcel(android.os.Parcel)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.accounts.NetworkErrorException: void <init>()>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.app.ActivityManager: void dumpPackageState(java.io.FileDescriptor,java.lang.String)>:<public>:<android.app.ActivityManager>
<android.os.BatteryStats.Uid: int getUserActivityCount(int,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.RSSurfaceView: void setRenderScriptGL(android.renderscript.RenderScriptGL)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.net.http.LoggingEventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.transition.TransitionSet: void pause(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,boolean[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.GLEnvironment: boolean nativeSwapBuffers()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.net.IConnectivityManager.Stub.Proxy: android.net.Network getNetworkForTypeWifi()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.ActivityThread: void attach(boolean)>:<private>:<android.app.ActivityThread>
<android.graphics.Typeface: java.io.File getSystemFontConfigLocation()>:<private static>:<android.graphics.Typeface>
<android.graphics.Bitmap.UidMatcher: void <clinit>()>:<static>:<android.graphics.Bitmap.UidMatcher>
<android.webkit.JsPromptResult: java.lang.String getStringResult()>:<public>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutCancelled()>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.net.NetworkUtils: java.lang.String getDhcpError()>:<public static native>:<android.net.NetworkUtils>
<android.app.ActivityView: void release()>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.print.pdf.PrintedPdfDocument: android.graphics.Rect getPageContentRect()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.net.DnsPinger: void cancelPings()>:<public>:<android.net.DnsPinger:android.os.Handler>
<android.mtp.MtpConstants: boolean isAbstractObject(int)>:<public static>:<android.mtp.MtpConstants>
<android.net.SSLCertificateSocketFactory.1: java.security.cert.X509Certificate[] getAcceptedIssuers()>:<public>:<android.net.SSLCertificateSocketFactory.1:javax.net.ssl.X509TrustManager>
<android.renderscript.Int2: android.renderscript.Int2 div(android.renderscript.Int2,int)>:<public static>:<android.renderscript.Int2>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy getThreadPolicy()>:<public static>:<android.os.StrictMode>
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>:<public>:<android.app.WallpaperManager>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.opengl.GLLogWrapper: boolean glIsTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.PendingIntent: boolean equals(java.lang.Object)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.IWifiManager.Stub.Proxy: void releaseMulticastLock()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.INetworkStatsSession.Stub.Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.filterfw.core.InputPort: boolean filterMustClose()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.graphics.PointF.1: android.graphics.PointF createFromParcel(android.os.Parcel)>:<public>:<android.graphics.PointF.1:android.os.Parcelable.Creator>
<android.graphics.drawable.Drawable: void setXfermode(android.graphics.Xfermode)>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.WpsInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WpsInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.renderscript.RSSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.os.MemoryFile: void close()>:<public>:<android.os.MemoryFile>
<android.net.wifi.WpsResult.1: android.net.wifi.WpsResult createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WpsResult.1:android.os.Parcelable.Creator>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.net.wifi.WifiCHRConst: void <init>()>:<public>:<android.net.wifi.WifiCHRConst>
<android.app.trust.ITrustManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.trust.ITrustManager.Stub:android.os.Binder,android.app.trust.ITrustManager>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>:<public final>:<android.graphics.Canvas>
<android.app.IActivityManager: void hang(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: void getSharedElementParentMatrix(android.view.View,android.graphics.Matrix)>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.NetworkStatsHistory.DataStreamUtils: void <init>()>:<public>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.net.ConnectivityManager: android.net.NetworkRequest requestNetworkForFeatureLocked(android.net.NetworkCapabilities)>:<private>:<android.net.ConnectivityManager>
<android.webkit.WebView: void notifyFindDialogDismissed()>:<>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.Trace.1: void <init>()>:<>:<android.os.Trace.1:java.lang.Runnable>
<android.net.NetworkStatsHistory: int getIndexAfter(long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.NetworkStatsHistory: int getIndexBefore(long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.renderscript.Short3: android.renderscript.Short3 add(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.opengl.EGLLogWrapper: java.lang.String toString(int,java.lang.Object[],int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.Notification.Builder: int access.2000(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.renderscript.RenderScript: void nScriptGroupSetOutput(long,long,long)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.ColorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.database.MatrixCursor.RowBuilder: void <init>(android.database.MatrixCursor,int)>:<>:<android.database.MatrixCursor.RowBuilder>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>:<public>:<android.graphics.Paint>
<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.ActivityManager.MemoryInfo: void <clinit>()>:<static>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.ArcMotion: void <clinit>()>:<static>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.app.LocalActivityManager: void performPause(android.app.LocalActivityManager.LocalActivityRecord,boolean)>:<private>:<android.app.LocalActivityManager>
<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Font: android.renderscript.Font createFromAsset(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.filterfw.core.ShaderProgram: boolean setShaderTileCounts(int,int)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.Fragment: android.app.Fragment getParentFragment()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.app.ActivityManagerProxy: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.IUserManager: int getUserHandle(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.opengl.EGLObjectHandle: void <init>(long)>:<protected>:<android.opengl.EGLObjectHandle>
<android.net.INetworkPolicyManager.Stub.Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.net.wifi.WifiManager: boolean is5GHzBandSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.sax.EndElementListener: void end()>:<public abstract>:<android.sax.EndElementListener>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.app.INotificationManager: android.content.ComponentName getEffectsSuppressor()>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable.LayerState: void invalidateCache()>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.IInstrumentationWatcher.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IInstrumentationWatcher.Stub:android.os.Binder,android.app.IInstrumentationWatcher>
<android.app.MediaRouteButton: void setCheatSheetEnabled(boolean)>:<>:<android.app.MediaRouteButton:android.view.View>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.net.WifiLinkQualityInfo: void setTxGood(long)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.opengl.GLSurfaceView.EglHelper: void logEglErrorAsWarning(java.lang.String,java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.renderscript.RenderScript: long nFileA3DCreateFromAsset(android.content.res.AssetManager,java.lang.String)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.Ripple: void setOpacity(float)>:<public>:<android.graphics.drawable.Ripple>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.DatabaseUtils.InsertHelper: long execute()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.MemoryFile: void native_close(java.io.FileDescriptor)>:<private static native>:<android.os.MemoryFile>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>:<public>:<android.app.Instrumentation>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2912(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.StrictMode: void enableDefaults()>:<public static>:<android.os.StrictMode>
<android.os.WorkSource: void <init>(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.opengl.EGLLogWrapper: boolean eglReleaseThread()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.RouteInfo: void <init>(android.net.IpPrefix)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.DownloadManager.Request: void setDestinationFromBase(java.io.File,java.lang.String)>:<private>:<android.app.DownloadManager.Request>
<android.net.TrafficStats: long getMobileTxPackets()>:<public static>:<android.net.TrafficStats>
<android.app.job.JobParameters: android.app.job.IJobCallback getCallback()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.GradientDrawable: void clearMutated()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.EthernetManager.1: void <init>(android.net.EthernetManager)>:<>:<android.net.EthernetManager.1:android.os.Handler>
<android.filterfw.core.FieldPort: java.lang.Object getTarget()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.opengl.GLLogWrapper: void glDrawTexiOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.IConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.print.PageRange: java.lang.String toString()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.net.wifi.WifiScanner: void stopTrackingBssids(android.net.wifi.WifiScanner.BssidListener)>:<public>:<android.net.wifi.WifiScanner>
<android.app.job.IJobCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.job.IJobCallback.Stub:android.os.Binder,android.app.job.IJobCallback>
<android.os.RemoteException: void <init>()>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Long4: android.renderscript.Long4 mul(android.renderscript.Long4,long)>:<public static>:<android.renderscript.Long4>
<android.opengl.EGLLogWrapper: java.lang.String getHex(int)>:<private static>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.Uri.StringUri: java.lang.String getEncodedSchemeSpecificPart()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setNormal(float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.os.BatteryProperties.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.BatteryProperties.1:android.os.Parcelable.Creator>
<android.app.usage.UsageStatsManagerInternal: void prepareShutdown()>:<public abstract>:<android.app.usage.UsageStatsManagerInternal>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onStartRestore()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.mtp.MtpDeviceInfo: void <init>()>:<private>:<android.mtp.MtpDeviceInfo>
<android.graphics.Path: void addArc(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.FragmentManager: void invalidateOptionsMenu()>:<public>:<android.app.FragmentManager>
<android.os.INetworkManagementService.Stub: void <init>()>:<public>:<android.os.INetworkManagementService.Stub:android.os.Binder,android.os.INetworkManagementService>
<android.test.InstrumentationTestCase.1: void run()>:<public>:<android.test.InstrumentationTestCase.1:java.lang.Runnable>
<android.net.wifi.p2p.WifiP2pDevice.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pDevice.1:android.os.Parcelable.Creator>
<android.os.ParcelFileDescriptor.1: android.os.ParcelFileDescriptor createFromParcel(android.os.Parcel)>:<public>:<android.os.ParcelFileDescriptor.1:android.os.Parcelable.Creator>
<android.renderscript.Double3: android.renderscript.Double3 add(android.renderscript.Double3,double)>:<public static>:<android.renderscript.Double3>
<android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram nativeCreateIdentity(android.filterfw.core.GLEnvironment)>:<private static native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.Network: void bindSocketFd(java.io.FileDescriptor)>:<private>:<android.net.Network:android.os.Parcelable>
<android.database.AbstractCursor: void onChange(boolean)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.os.Process: void setThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.transition.Slide.1: void <init>()>:<>:<android.transition.Slide.1:android.transition.Slide.CalculateSlideHorizontal>
<android.webkit.WebSettings.RenderPriority: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.webkit.WebViewProvider: boolean canGoForward()>:<public abstract>:<android.webkit.WebViewProvider>
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient.OnEventListener)>:<public>:<android.drm.DrmManagerClient>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.renderscript.Int3: void mod(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float,float)>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.app.ApplicationThreadProxy: void <init>(android.os.IBinder)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.VectorDrawable.VGroup: int access.100(android.graphics.drawable.VectorDrawable.VGroup)>:<static>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.net.ProxyInfo: java.net.InetSocketAddress getSocketAddress()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.os.ServiceManager: java.lang.String[] listServices()>:<public static>:<android.os.ServiceManager>
<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IUserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.opengl.GLES30: void glResumeTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.shapes.Shape: void <init>()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.os.INetworkManagementService.Stub.Proxy: boolean getIpForwardingEnabled()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.IConnectivityManager: android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: boolean teardown()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.IServiceConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IServiceConnection.Stub.Proxy:android.app.IServiceConnection>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationUri(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.app.ActivityView.ActivityContainerCallback.1: void run()>:<public>:<android.app.ActivityView.ActivityContainerCallback.1:java.lang.Runnable>
<android.graphics.Matrix: void mapPoints(float[],float[])>:<public>:<android.graphics.Matrix>
<android.database.CursorWindow.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.renderscript.Int2: void setAt(int,int)>:<public>:<android.renderscript.Int2>
<android.filterfw.core.MutableFrameFormat: void setBaseType(int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.app.ContextImpl: int getDisplayId()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.PackageDeleteObserver: android.content.pm.IPackageDeleteObserver2 getBinder()>:<public>:<android.app.PackageDeleteObserver>
<android.graphics.Path: void native_rQuadTo(long,float,float,float,float)>:<private static native>:<android.graphics.Path>
<android.app.Notification: android.app.Notification[] access.2500(android.os.Bundle,java.lang.String)>:<static>:<android.app.Notification:android.os.Parcelable>
<android.net.wifi.ScanSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.os.TokenWatcher: java.util.WeakHashMap access.000(android.os.TokenWatcher)>:<static>:<android.os.TokenWatcher>
<android.hwtheme.HwThemeManager: java.io.InputStream getDefaultWallpaperIS(android.content.Context)>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.pdf.PdfRenderer: void throwIfPageNotInDocument(int)>:<private>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.webkit.WebSettings: void setAllowUniversalAccessFromFileURLs(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.os.FileObserver.ObserverThread: int init()>:<private native>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.net.wifi.WifiManager: boolean stopWifi()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Activity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ExitTransitionCoordinator: void startSharedElementExit(android.view.ViewGroup)>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupHelperDispatcher>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>:<public>:<android.net.UrlQuerySanitizer>
<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>:<public final>:<android.app.ActivityThread>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>:<public>:<android.drm.DrmEvent>
<android.app.ActivityThread.ApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.wifi.ScanResult.1: void <init>()>:<>:<android.net.wifi.ScanResult.1:android.os.Parcelable.Creator>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: void <init>(android.content.Context,int,java.util.ArrayList)>:<public>:<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.os.ParcelUuid: int describeContents()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.print.PrintJobInfo: java.lang.String toString()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.DnsPinger: void log(java.lang.String)>:<private>:<android.net.DnsPinger:android.os.Handler>
<android.net.WifiLinkQualityInfo: long getTxGood()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.CacheManager.CacheResult: java.lang.String getETag()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.accounts.IAccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.opengl.GLSurfaceView.GLThread: boolean readyToDraw()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.app.WallpaperInfo: int getThumbnailResource()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>:<public static>:<android.graphics.ImageFormat>
<android.renderscript.Sampler.Builder: void setMagnification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.net.DhcpStateMachine.RunningState: boolean processMessage(android.os.Message)>:<public>:<android.net.DhcpStateMachine.RunningState:com.android.internal.util.State>
<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.IActivityManager: void unregisterReceiver(android.content.IIntentReceiver)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.WifiManager.WpsCallback: void onStarted(java.lang.String)>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.os.Trace: void nativeTraceCounter(long,java.lang.String,int)>:<private static native>:<android.os.Trace>
<android.net.wifi.HwWifiStatStore.SSIDStat: boolean hasDataToTrigger()>:<public>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.webkit.FindActionModeCallback: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.app.backup.BackupDataInput: void finalize()>:<protected>:<android.app.backup.BackupDataInput>
<android.net.wifi.RttManager.ParcelableRttResults.1: android.net.wifi.RttManager.ParcelableRttResults createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.RttManager.ParcelableRttResults.1:android.os.Parcelable.Creator>
<android.graphics.Movie: android.graphics.Movie decodeTempStream(java.io.InputStream)>:<private static>:<android.graphics.Movie>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.RssiCurve: void <init>(android.os.Parcel)>:<private>:<android.net.RssiCurve:android.os.Parcelable>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.app.IInstrumentationWatcher.Stub: void <init>()>:<public>:<android.app.IInstrumentationWatcher.Stub:android.os.Binder,android.app.IInstrumentationWatcher>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getPreviousName(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.IActivityContainer: void attachToDisplay(int)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.renderscript.AllocationAdapter: void subElementData(int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.AsyncTask.InternalHandler: void <init>()>:<public>:<android.os.AsyncTask.InternalHandler:android.os.Handler>
<android.net.BaseNetworkStateTracker: void <init>(int)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.wifi.IWifiManager: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.INetworkScoreCache.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkScoreCache.Stub:android.os.Binder,android.net.INetworkScoreCache>
<android.mtp.MtpDatabase: int setObjectProperty(int,int,long,java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.filterfw.core.NativeProgram: void <init>(java.lang.String,java.lang.String)>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.IConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.IpConfiguration.ProxySettings: void <init>(java.lang.String,int)>:<private>:<android.net.IpConfiguration.ProxySettings:java.lang.Enum>
<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Activity.TranslucentConversionListener: void onTranslucentConversionComplete(boolean)>:<public abstract>:<android.app.Activity.TranslucentConversionListener>
<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>:<static>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.http.SslCertificate.DName: void <init>(android.net.http.SslCertificate,java.lang.String)>:<public>:<android.net.http.SslCertificate.DName>
<android.net.Uri.1: android.net.Uri createFromParcel(android.os.Parcel)>:<public>:<android.net.Uri.1:android.os.Parcelable.Creator>
<android.os.FileUtils: java.lang.String rewriteAfterRename(java.io.File,java.io.File,java.lang.String)>:<public static>:<android.os.FileUtils>
<android.app.Service: void startForeground(int,android.app.Notification)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyDown(int,android.view.KeyEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.renderscript.RenderScript: void nAllocationData2D(long,int,int,int,int,android.graphics.Bitmap)>:<>:<android.renderscript.RenderScript>
<android.accounts.AccountManager.12: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.UserHandle)>:<>:<android.accounts.AccountManager.12:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setCoefficients(float[])>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: boolean switchUser(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.PendingIntent: int getCreatorUid()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.database.ContentObserver: void <init>(android.os.Handler)>:<public>:<android.database.ContentObserver>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.os.StrictMode: int parsePolicyFromMessage(java.lang.String)>:<private static>:<android.os.StrictMode>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.net.UidRange: boolean equals(java.lang.Object)>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.accounts.AccountManager.5: void doWork()>:<public>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.usage.UsageStatsManager: void <clinit>()>:<static>:<android.app.usage.UsageStatsManager>
<android.app.Notification: java.lang.String access.402(android.app.Notification,java.lang.String)>:<static>:<android.app.Notification:android.os.Parcelable>
<android.os.BatteryStats.Uid: java.util.Map getProcessStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.os.Build: java.lang.String hide_build_info(java.lang.String,java.lang.String)>:<public static final>:<android.os.Build>
<android.net.wifi.WifiCHRStateManager: void updateNetMonitorType(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult()>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.BatteryProperties: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.BatteryProperties:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexGenf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Long4: long dotProduct(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.Callback getCallback()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Byte4: byte elementSum()>:<public>:<android.renderscript.Byte4>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.net.ConnectivityManager.LegacyRequest: void clearDnsBinding()>:<private>:<android.net.ConnectivityManager.LegacyRequest>
<android.filterfw.core.Frame: boolean isReusable()>:<final>:<android.filterfw.core.Frame>
<android.app.IInstrumentationWatcher.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IInstrumentationWatcher.Stub.Proxy:android.app.IInstrumentationWatcher>
<android.os.storage.IMountService: boolean isUsbMassStorageConnected()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents.Event)>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.os.WorkSource: int size()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.net.INetworkPolicyListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.net.wifi.WifiCHRStateManager: void updateApVendorInfo(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.BatchedScanResult.1: android.net.wifi.BatchedScanResult[] newArray(int)>:<public>:<android.net.wifi.BatchedScanResult.1:android.os.Parcelable.Creator>
<android.filterfw.MffEnvironment: void deactivateGLEnvironment()>:<public>:<android.filterfw.MffEnvironment>
<android.os.storage.StorageVolume: void setState(java.lang.String)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.IApplicationThread: void updateTimeZone()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.net.NetworkInfo: void setRoaming(boolean)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.webkit.WebViewClient.2: void <init>(android.webkit.WebViewClient,android.webkit.WebView)>:<>:<android.webkit.WebViewClient.2:android.content.DialogInterface.OnClickListener>
<android.filterfw.core.ShaderProgram: boolean setUniformValue(java.lang.String,java.lang.Object)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.os.UserHandle: int describeContents()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.graphics.Path: void rLineTo(float,float)>:<public>:<android.graphics.Path>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition: void start()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.app.FragmentState: int describeContents()>:<public>:<android.app.FragmentState:android.os.Parcelable>
<android.net.UidRange: int describeContents()>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.os.StrictMode.AndroidBlockGuardPolicy.1: void run()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy.1:java.lang.Runnable>
<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.IpConfiguration: int hashCode()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo native_get_device_info()>:<private native>:<android.mtp.MtpDevice>
<android.app.BackStackRecord.1: boolean onPreDraw()>:<public>:<android.app.BackStackRecord.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.PendingIntent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.PendingIntent.1:android.os.Parcelable.Creator>
<android.app.SearchableInfo.ActionKeyInfo: void <init>(android.os.Parcel,android.app.SearchableInfo.1)>:<>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.graphics.Bitmap: void nativeDestructor(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Matrix.1: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.transition.Transition: boolean isValidMatch(int)>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WifiActivityEnergyInfo: void <init>(int,int,int,int,int)>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glEnableClientState(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.drm.DrmInfo: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfo>
<android.app.EnterTransitionCoordinator.6: void onTransitionStart(android.transition.Transition)>:<public>:<android.app.EnterTransitionCoordinator.6:android.transition.Transition.TransitionListenerAdapter>
<android.os.Debug: long countInstancesOfClass(java.lang.Class)>:<public static>:<android.os.Debug>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeCapability(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.app.Fragment: void <clinit>()>:<static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.storage.IMountService: int getEncryptionState()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.IUiAutomationConnection.Stub.Proxy: android.graphics.Bitmap takeScreenshot(int,int)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.graphics.pdf.PdfEditor: void setPageMediaBox(int,android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfEditor>
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.net.http.Headers: java.lang.String getRefresh()>:<public>:<android.net.http.Headers>
<android.appwidget.AppWidgetHostView.1: boolean onLoadClass(java.lang.Class)>:<public>:<android.appwidget.AppWidgetHostView.1:android.view.LayoutInflater.Filter>
<android.renderscript.Short3: void mul(short)>:<public>:<android.renderscript.Short3>
<android.os.IHardwareService.Stub: void <init>()>:<public>:<android.os.IHardwareService.Stub:android.os.Binder,android.os.IHardwareService>
<android.app.FragmentManagerState.1: void <init>()>:<>:<android.app.FragmentManagerState.1:android.os.Parcelable.Creator>
<android.graphics.drawable.GradientDrawable: void updateDrawableCorners(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.ApplicationThreadNative: void dumpReceiverTimeStamp()>:<protected>:<android.app.ApplicationThreadNative:android.os.Binder,android.app.IApplicationThread>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle()>:<public final>:<android.os.Parcel>
<android.opengl.GLSurfaceView.GLThreadManager: void threadExiting(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.renderscript.FieldPacker: android.renderscript.Long3 subLong3()>:<public>:<android.renderscript.FieldPacker>
<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Long4: long dotProduct(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus _closeConvertSession(int,int)>:<private native>:<android.drm.DrmManagerClient>
<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest build()>:<public>:<android.net.NetworkRequest.Builder>
<android.app.BackStackRecord: android.util.ArrayMap remapSharedElements(android.app.BackStackRecord.TransitionState,android.app.Fragment,boolean)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.Uri.StringUri: java.lang.String getScheme()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.os.IRemoteCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IRemoteCallback.Stub.Proxy:android.os.IRemoteCallback>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>:<public>:<android.os.MemoryFile>
<android.net.INetworkPolicyManager: void removeUidPolicy(int,int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.filterfw.MffEnvironment: android.filterfw.core.FilterContext getContext()>:<public>:<android.filterfw.MffEnvironment>
<android.app.IActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.Double3: void mul(double)>:<public>:<android.renderscript.Double3>
<android.opengl.GLLogWrapper: void glClearDepthf(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.IBatteryPropertiesRegistrar: void unregisterListener(android.os.IBatteryPropertiesListener)>:<public abstract>:<android.os.IBatteryPropertiesRegistrar:android.os.IInterface>
<android.alsa.AlsaCardsParser: void <init>()>:<public>:<android.alsa.AlsaCardsParser>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.net.IConnectivityManager.Stub.Proxy: void setGlobalProxy(android.net.ProxyInfo)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.UiAutomation: java.lang.Object access.000(android.app.UiAutomation)>:<static>:<android.app.UiAutomation>
<android.mtp.MtpDevice: byte[] getThumbnail(int)>:<public>:<android.mtp.MtpDevice>
<android.net.LinkProperties: java.lang.String getTcpBufferSizes()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.FragmentManagerState: void <init>()>:<public>:<android.app.FragmentManagerState:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: void <init>(android.os.Parcel,android.print.PrinterCapabilitiesInfo.1)>:<>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.NetworkFactory: void handleMessage(android.os.Message)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.renderscript.Script.KernelID: void <init>(long,android.renderscript.RenderScript,android.renderscript.Script,int,int)>:<>:<android.renderscript.Script.KernelID:android.renderscript.BaseObj>
<android.net.NetworkStatsHistory: void addLong(long[],int,long)>:<private static>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.ActivityThread: void handleDumpService(android.app.ActivityThread.DumpComponentInfo)>:<private>:<android.app.ActivityThread>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.app.admin.IDevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.INetworkPolicyManager: void snoozeLimit(android.net.NetworkTemplate)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.os.INetworkManagementService: java.lang.String[] listTetheredInterfaces()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setBlendFunc(android.renderscript.ProgramStore.BlendSrcFunc,android.renderscript.ProgramStore.BlendDstFunc)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.ddm.DdmHandleHeap: void disconnected()>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.app.ApplicationPackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>:<public>:<android.net.LocalSocketAddress>
<android.app.ActivityThread.NewIntentData: java.lang.String toString()>:<public>:<android.app.ActivityThread.NewIntentData>
<android.app.backup.FileBackupHelperBase: long ctor()>:<private static native>:<android.app.backup.FileBackupHelperBase>
<android.os.Build: java.lang.String[] getStringList(java.lang.String,java.lang.String)>:<private static>:<android.os.Build>
<android.filterfw.core.NativeProgram: java.lang.String callNativeGetValue(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.app.admin.DevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Trace: void <init>()>:<private>:<android.os.Trace>
<android.net.Uri.StringUri: android.net.Uri.Part getFragmentPart()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.drawable.AnimatedVectorDrawable.1: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.1:android.graphics.drawable.Drawable.Callback>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void <init>(android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.os.BatteryStats: void formatTimeMsNoSpace(java.lang.StringBuilder,long)>:<public static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.StrictMode.4: android.os.StrictMode.AndroidBlockGuardPolicy initialValue()>:<protected>:<android.os.StrictMode.4:java.lang.ThreadLocal>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.WorkSource: java.lang.String getName(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.renderscript.Short3: void set(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.net.wifi.WifiConfiguration: int describeContents()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.os.StrictMode: int getThreadPolicyMask()>:<public static>:<android.os.StrictMode>
<android.graphics.drawable.Drawable: void clearMutated()>:<public>:<android.graphics.drawable.Drawable>
<android.app.IUiModeManager: void disableCarMode(int)>:<public abstract>:<android.app.IUiModeManager:android.os.IInterface>
<android.app.AlarmManager.AlarmClockInfo: long getTriggerTime()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.job.IJobService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobService.Stub.Proxy:android.app.job.IJobService>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.WorkSource: boolean add(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.renderscript.Font: void initFontFamilyMap()>:<private static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.renderscript.Element: int getBytesSize()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.Drawable: int getLevel()>:<public final>:<android.graphics.drawable.Drawable>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()>:<public>:<android.filterfw.core.FrameFormat>
<android.net.LinkQualityInfo: void setTheoreticalLatency(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.ActivityThread: void access.2500(android.app.ActivityThread,android.app.ActivityThread.ServiceArgsData)>:<static>:<android.app.ActivityThread>
<android.app.ContextImpl: android.view.DisplayAdjustments getDisplayAdjustments(int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.net.ConnectivityManager.NetworkCallback: void onUnavailable()>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.database.MergeCursor: int getType(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.renderscript.Int4: void add(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.accounts.IAccountAuthenticatorResponse.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.renderscript.Allocation: android.renderscript.Element elementFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.WifiManager: boolean isTdlsSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.VectorDrawable.VGroup: android.graphics.Matrix getLocalMatrix()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.opengl.GLUtils: void <init>()>:<private>:<android.opengl.GLUtils>
<android.net.http.Headers: java.util.ArrayList getSetCookie()>:<public>:<android.net.http.Headers>
<android.app.Notification.BigPictureStyle: void <init>()>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.graphics.Paint: void native_reset(long)>:<private static native>:<android.graphics.Paint>
<android.app.Notification.Action: java.lang.Object clone()>:<public volatile>:<android.app.Notification.Action:android.os.Parcelable>
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>:<public>:<android.app.UiAutomation>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.UEventObserver: void nativeAddMatch(java.lang.String)>:<private static native>:<android.os.UEventObserver>
<android.accounts.IAccountManager: boolean removeSharedAccountAsUser(android.accounts.Account,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.ApplicationPackageManager: int getPackageUid(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.http.DelegatingSSLSession: long getLastAccessedTime()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.app.ActivityManagerProxy: android.os.IBinder asBinder()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.IConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.filterfw.core.VertexFrame: boolean setNativeData(byte[],int,int)>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.app.admin.IDevicePolicyManager: void enforceCanManageCaCerts(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.SurfaceTexture: void nativeReleaseTexImage()>:<private native>:<android.graphics.SurfaceTexture>
<android.renderscript.Byte3: void addAt(int,byte)>:<public>:<android.renderscript.Byte3>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.IUserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.IActivityManager: void backgroundResourcesReleased(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[])>:<private>:<android.app.Notification.Action:android.os.Parcelable>
<android.net.INetworkPolicyManager.Stub.Proxy: void registerListener(android.net.INetworkPolicyListener)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.net.wifi.WifiScanner.HotlistSettings.1: android.net.wifi.WifiScanner.HotlistSettings[] newArray(int)>:<public>:<android.net.wifi.WifiScanner.HotlistSettings.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.os.CommonClock: void setTimelineChangedListener(android.os.CommonClock.OnTimelineChangedListener)>:<public>:<android.os.CommonClock>
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.transition.Transition: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.ContextImpl.44: void <init>()>:<>:<android.app.ContextImpl.44:android.app.ContextImpl.ServiceFetcher>
<android.filterfw.core.NativeFrame: float[] getNativeFloats(int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.NetworkTemplate: android.net.NetworkTemplate normalize(android.net.NetworkTemplate,java.lang.String[])>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>:<public>:<android.app.ActionBar>
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.ShaderProgram: boolean setTargetRegion(float,float,float,float,float,float,float,float)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.ActivityThread.ProviderKey: void <init>(java.lang.String,int)>:<public>:<android.app.ActivityThread.ProviderKey>
<android.app.NotificationManager: boolean matchesCallFilter(android.os.Bundle)>:<public>:<android.app.NotificationManager>
<android.net.Uri.OpaqueUri: java.util.List getPathSegments()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.graphics.PorterDuffXfermode: long nativeCreateXfermode(int)>:<private static native>:<android.graphics.PorterDuffXfermode:android.graphics.Xfermode>
<android.app.UiAutomation: void <init>(android.os.Looper,android.app.IUiAutomationConnection)>:<public>:<android.app.UiAutomation>
<android.os.Parcel: void nativeSetDataCapacity(long,int)>:<private static native>:<android.os.Parcel>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.hwtheme.HwThemeManagerDummy: android.graphics.Bitmap getThemeBitmap(android.content.res.Resources,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.ActivityThread: android.app.Activity performLaunchActivity(android.app.ActivityThread.ActivityClientRecord,android.content.Intent)>:<private>:<android.app.ActivityThread>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLSurfaceView.GLThread: void guardedRun()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.graphics.Rect: void <init>(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.Notification.Builder: boolean addProfileBadge(android.widget.RemoteViews,int)>:<private>:<android.app.Notification.Builder>
<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.graphics.drawable.LevelListDrawable: void clearMutated()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.TaskStackBuilder: int getIntentCount()>:<public>:<android.app.TaskStackBuilder>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Rect: void offsetTo(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)>:<public>:<android.transition.TransitionManager>
<android.opengl.GLErrorWrapper: void glDepthFunc(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.RequestQueue.ActivePool: int access.408(android.net.http.RequestQueue.ActivePool)>:<static>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.app.IActivityContainer.Stub.Proxy: boolean injectEvent(android.view.InputEvent)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.app.IActivityManager: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.PPPOEConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.PPPOEConfig.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>:<public>:<android.graphics.Canvas>
<android.app.admin.IDevicePolicyManager: java.util.List getActiveAdmins(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.EnterTransitionCoordinator: void access.200(android.app.EnterTransitionCoordinator)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.NetworkInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkInfo.1:android.os.Parcelable.Creator>
<android.graphics.ColorMatrix: void setRGB2YUV()>:<public>:<android.graphics.ColorMatrix>
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)>:<public>:<android.net.NetworkPolicyManager>
<android.os.Messenger: void <init>(android.os.Handler)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.app.ITaskStackListener.Stub: android.app.ITaskStackListener asInterface(android.os.IBinder)>:<public static>:<android.app.ITaskStackListener.Stub:android.os.Binder,android.app.ITaskStackListener>
<android.ddm.DdmHandleHeap: void connected()>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.JobSchedulerImpl: int schedule(android.app.job.JobInfo)>:<public>:<android.app.JobSchedulerImpl:android.app.job.JobScheduler>
<android.app.LoadedApk.ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.net.wifi.RttManager.ServiceHandler: void <init>(android.os.Looper)>:<>:<android.net.wifi.RttManager.ServiceHandler:android.os.Handler>
<android.net.wifi.WifiCHRStateManager: void uploadWifiStat()>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.WifiLog: void updateLogDelayed(java.lang.String,long)>:<private>:<android.net.wifi.WifiLog>
<android.filterfw.core.GLEnvironment: void <init>()>:<public>:<android.filterfw.core.GLEnvironment>
<android.graphics.Path: void addRoundRect(float,float,float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: void init(int,android.os.IBinder)>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.app.LoadedApk.ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.app.ActivityThread: void unscheduleGcIdler()>:<>:<android.app.ActivityThread>
<android.graphics.drawable.RotateDrawable: boolean isPivotYRelative()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.PPPOEConfig: void <clinit>()>:<static>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator.Transport: void <init>(android.accounts.AbstractAccountAuthenticator)>:<private>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.os.UserManager: void setUserEnabled(int)>:<public>:<android.os.UserManager>
<android.netdetect.INetDetectService.Stub: void <init>()>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.app.AppOpsManager.OpEntry: int describeContents()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.app.trust.ITrustManager: void unregisterTrustListener(android.app.trust.ITrustListener)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: void open()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityManager: void forceStopPackageAsUser(java.lang.String,int)>:<public>:<android.app.ActivityManager>
<android.net.ConnectivityManager: void <init>(android.net.IConnectivityManager)>:<public>:<android.net.ConnectivityManager>
<android.app.ContextImpl.3: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.3:android.app.ContextImpl.ServiceFetcher>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.net.http.AndroidHttpClientConnection: void <init>()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.print.IPrintDocumentAdapterObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.net.NetworkMisc: void <init>()>:<public>:<android.net.NetworkMisc:android.os.Parcelable>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>:<public>:<android.drm.DrmSupportInfo>
<android.graphics.Matrix: boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int)>:<private static native>:<android.graphics.Matrix>
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.print.PrintJob: boolean isCompleted()>:<public>:<android.print.PrintJob>
<android.graphics.LightingColorFilter: void <init>(int,int)>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.net.wifi.WifiManager: void pollBatchedScan()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.WifiKey: void <init>(java.lang.String,java.lang.String)>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDAdd()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats.HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats.HistoryItem,long,boolean,boolean)>:<public>:<android.os.BatteryStats.HistoryPrinter>
<android.opengl.GLUtils: int native_texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<private static native>:<android.opengl.GLUtils>
<android.alsa.AlsaDevicesParser: void Log()>:<public>:<android.alsa.AlsaDevicesParser>
<android.net.Uri: java.lang.String encode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.INetworkManagementService.Stub.Proxy: void disableIpv6(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>:<>:<android.os.BaseBundle>
<android.net.wifi.IWifiManager: boolean isScanAlwaysAvailable()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>:<public>:<android.net.Network:android.os.Parcelable>
<android.print.IPrintSpooler.Stub.Proxy: void setClient(android.print.IPrintSpoolerClient)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getKeyId(android.net.wifi.WifiEnterpriseConfig)>:<>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: boolean getForceEnabled(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.net.StaticIpConfiguration: int describeContents()>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.app.backup.BackupManager: void setBackupEnabled(boolean)>:<public>:<android.app.backup.BackupManager>
<android.print.IPrintManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.IConnectivityManager.Stub.Proxy: void setLteMobileDataEnabled(boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.filterfw.core.SerializedFrame: java.lang.String toString()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.graphics.drawable.Ripple: boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.Ripple>
<android.mtp.MtpServer: void sendObjectInfoChanged(int)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.app.ActivityThread.ApplicationThread: void unstableProviderDied(android.os.IBinder)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.Notification.Builder: void access.1600(android.app.Notification.Builder,android.app.Notification,android.widget.RemoteViews)>:<static>:<android.app.Notification.Builder>
<android.os.BaseBundle: byte getByte(java.lang.String)>:<>:<android.os.BaseBundle>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>:<public>:<android.app.backup.BackupManager>
<android.app.UiAutomation: boolean injectInputEvent(android.view.InputEvent,boolean)>:<public>:<android.app.UiAutomation>
<android.net.wifi.p2p.WifiP2pDeviceList.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pDeviceList.1:android.os.Parcelable.Creator>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteClosable: void close()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.net.INetworkStatsService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.net.wifi.WifiScanner.HotlistSettings.1: void <init>()>:<>:<android.net.wifi.WifiScanner.HotlistSettings.1:android.os.Parcelable.Creator>
<android.app.EnterTransitionCoordinator: void sharedElementTransitionStarted()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.filterfw.core.FilterContext: void initGLEnvironment(android.filterfw.core.GLEnvironment)>:<public>:<android.filterfw.core.FilterContext>
<android.app.ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.HwCustRegisterServiceHelper: java.util.List getCustomizedServiceKeys()>:<public>:<android.app.HwCustRegisterServiceHelper>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Fragment.SavedState.1: android.app.Fragment.SavedState[] newArray(int)>:<public>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.graphics.Matrix.1: boolean preScale(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.BatteryStats: void finishIteratingHistoryLocked()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTexParameteri(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.MobileDataStateTracker: void supplyMessenger(android.os.Messenger)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>:<public static>:<android.os.ServiceManager>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Byte3: void mul(byte)>:<public>:<android.renderscript.Byte3>
<android.os.Broadcaster: void dumpRegistrations()>:<public>:<android.os.Broadcaster>
<android.app.ActionBar.TabListener: void onTabUnselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.net.wifi.HwWifiCHRService: void LOGW(java.lang.String)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.net.wifi.IWifiManager: int getAggressiveHandover()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>:<public>:<android.renderscript.FieldPacker>
<android.app.backup.RestoreDescription: int describeContents()>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.app.ListFragment: android.widget.ListView getListView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.app.AppGlobals: void <init>()>:<public>:<android.app.AppGlobals>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.renderscript.Allocation: void copyFromUnchecked(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.print.PageRange: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.renderscript.Int4: android.renderscript.Int4 mod(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.accounts.AccountManager.19: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.19:android.content.BroadcastReceiver>
<android.renderscript.RenderScript: void nAllocationRead1D(long,int,int,int,java.lang.Object,int,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.mtp.MtpDatabase: android.database.Cursor createObjectQuery(int,int,int)>:<private>:<android.mtp.MtpDatabase>
<android.app.ActivityManager.TaskThumbnail.1: android.app.ActivityManager.TaskThumbnail[] newArray(int)>:<public>:<android.app.ActivityManager.TaskThumbnail.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.widget.RemoteViews makeContentView()>:<private>:<android.app.Notification.Builder>
<android.net.wifi.WifiCHRStateManager: void updateLeaseIP(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.BaseNetworkStateTracker: void dispatchStateChanged()>:<protected final>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBindVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.net.wifi.p2p.WifiP2pGroup.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pGroup.1:android.os.Parcelable.Creator>
<android.os.ResultReceiver: void <init>(android.os.Handler)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.filterfw.core.SimpleFrameManager: void <init>()>:<public>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: void <init>(java.util.List)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.app.PackageDeleteObserver: void onPackageDeleted(java.lang.String,int,java.lang.String)>:<public>:<android.app.PackageDeleteObserver>
<android.webkit.WebView: int computeVerticalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.UserManager: java.util.List getProfiles(int)>:<public>:<android.os.UserManager>
<android.net.wifi.WifiCHRStateManager: void updateWhiteNum(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.renderscript.RenderScript: void nScriptBindAllocation(long,long,int)>:<>:<android.renderscript.RenderScript>
<android.renderscript.Allocation: void <clinit>()>:<static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.NinePatchDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Long4: long get(int)>:<public>:<android.renderscript.Long4>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.net.INetworkManagementEventObserver: void addressUpdated(java.lang.String,android.net.LinkAddress)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.renderscript.Float4: android.renderscript.Float4 add(android.renderscript.Float4,float)>:<public static>:<android.renderscript.Float4>
<android.print.pdf.PrintedPdfDocument: android.graphics.pdf.PdfDocument.Page startPage(int)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.net.nsd.NsdServiceInfo: int access.302(android.net.nsd.NsdServiceInfo,int)>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.database.AbstractCursor: boolean isFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.InsetDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.backup.IBackupManager: void setAutoRestore(boolean)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.filterfw.core.KeyValueMap: java.lang.String toString()>:<public>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean)>:<public>:<android.app.DownloadManager>
<android.net.http.HttpResponseCache: int getNetworkCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxyLocked(android.database.IContentObserver)>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>:<public>:<android.filterfw.core.FrameManager>
<android.opengl.GLSurfaceView.EglHelper: int swap()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.net.INetworkStatsService.Stub.Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.renderscript.Sampler.Value: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.opengl.GLErrorWrapper: void glDrawTexiOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Short2: android.renderscript.Short2 div(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.graphics.drawable.VectorDrawable.VClipPath: boolean isClipPath()>:<public>:<android.graphics.drawable.VectorDrawable.VClipPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.job.JobInfo: boolean isPeriodic()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.ContextImpl: void <clinit>()>:<static>:<android.app.ContextImpl:android.content.Context>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>:<public>:<android.graphics.Paint>
<android.app.ContextImpl.39: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.39:android.app.ContextImpl.ServiceFetcher>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Allocation: void validateIsObject()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.WifiInfo: java.lang.String toString()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.ApplicationErrorReport.1: android.app.ApplicationErrorReport[] newArray(int)>:<public>:<android.app.ApplicationErrorReport.1:android.os.Parcelable.Creator>
<android.app.ActionBar: void selectTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.app.SearchableInfo.ActionKeyInfo: void <init>(android.os.Parcel)>:<private>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.opengl.GLES20: void glUniform1i(int,int)>:<public static native>:<android.opengl.GLES20>
<android.os.IUserManager.Stub.Proxy: int getUserHandle(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void ensureFit(int)>:<private final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.opengl.GLErrorWrapper: void glBindBuffer(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.http.RequestHandle>
<android.os.Parcel: java.io.Serializable readSerializable(java.lang.ClassLoader)>:<private final>:<android.os.Parcel>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.renderscript.RenderScript: void nScriptSetVarD(long,int,double)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.graphics.drawable.VectorDrawable.VGroup: float getTranslateX()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.graphics.drawable.shapes.RectShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.app.Fragment: boolean isHidden()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.BitmapShader:android.graphics.Shader>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES11: void glPointParameterx(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.LocalSocket: boolean isBound()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.print.PrintJob: boolean isBlocked()>:<public>:<android.print.PrintJob>
<android.os.Bundle: void clear()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.1: void <clinit>()>:<static>:<android.graphics.drawable.GradientDrawable.1>
<android.app.IActivityController.Stub.Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.accounts.ChooseAccountActivity.1: void <init>(android.accounts.ChooseAccountActivity)>:<>:<android.accounts.ChooseAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.app.Fragment: void onResume()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.job.JobParameters.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.job.JobParameters.1:android.os.Parcelable.Creator>
<android.hwcontrol.HwWidgetFactory.Factory: android.widget.ListPopupWindow newHwListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.app.WallpaperManager.FastBitmapDrawable: int getOpacity()>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.print.PrintJobInfo: long getCreationTime()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void onChange(boolean,android.net.Uri)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.opengl.GLErrorWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.PathMeasure: void finalize()>:<protected>:<android.graphics.PathMeasure>
<android.app.ExitTransitionCoordinator: void access.1400(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.INetworkActivityListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.INetworkActivityListener.Stub.Proxy:android.os.INetworkActivityListener>
<android.graphics.drawable.RippleBackground: void cancelHardwareAnimations(boolean)>:<private>:<android.graphics.drawable.RippleBackground>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.hwcontrol.HwWidgetFactory.Factory: int getHuaweiRealThemeImpl(int)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.renderscript.Long3: void sub(long)>:<public>:<android.renderscript.Long3>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setValues(float[])>:<public>:<android.transition.ChangeTransform.PathAnimatorMatrix>
<android.os.Parcel: void readArrayMap(android.util.ArrayMap,java.lang.ClassLoader)>:<public>:<android.os.Parcel>
<android.opengl.GLES20: void glUniform1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.os.INetworkManagementService.Stub.Proxy: void setFirewallEgressDestRule(java.lang.String,int,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.RenderScript: void rsnAllocationGenerateMipmaps(long,long)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.RenderScript: int nScriptGetVarI(long,int)>:<>:<android.renderscript.RenderScript>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>:<public>:<android.app.LocalActivityManager>
<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>:<public>:<android.webkit.WebChromeClient>
<android.opengl.GLSurfaceView.GLThreadManager: void checkGLDriver(javax.microedition.khronos.opengles.GL10)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.renderscript.Short3: void div(short)>:<public>:<android.renderscript.Short3>
<android.os.Parcel: byte[] readBlob()>:<public final>:<android.os.Parcel>
<android.print.PrinterInfo.Builder: boolean isValidStatus(int)>:<private>:<android.print.PrinterInfo.Builder>
<android.graphics.Path: void native_addRoundRect(long,float,float,float,float,float[],int)>:<private static native>:<android.graphics.Path>
<android.os.IMultiWinService.Stub.Proxy: java.lang.String[] getResumedActivities()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.os.Binder.1: void run()>:<public>:<android.os.Binder.1:java.lang.Thread>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor.OnCloseListener)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.storage.IMountService: int mountSecureContainer(java.lang.String,java.lang.String,int,boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.database.ContentObserver: void dispatchChange(boolean)>:<public final>:<android.database.ContentObserver>
<android.app.FragmentManagerState.1: android.app.FragmentManagerState[] newArray(int)>:<public>:<android.app.FragmentManagerState.1:android.os.Parcelable.Creator>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.wifi.WifiActivityEnergyInfo: void <clinit>()>:<static>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.app.PackageDeleteObserver: void onUserActionRequired(android.content.Intent)>:<public>:<android.app.PackageDeleteObserver>
<android.transition.TransitionManager: void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition)>:<private static>:<android.transition.TransitionManager>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerIdleTimeMillis()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.os.IMultiWinService: int getIsTopMWFlag()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.pdf.PdfRenderer: void close()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.print.PrinterInfo: java.lang.String toString()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.ContextImpl.17: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.17:android.app.ContextImpl.ServiceFetcher>
<android.filterfw.FilterFunctionEnvironment: void <init>()>:<public>:<android.filterfw.FilterFunctionEnvironment:android.filterfw.MffEnvironment>
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.EnterTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.http.Connection: boolean getCanPersist()>:<>:<android.net.http.Connection>
<android.renderscript.Long2: void <init>(long,long)>:<public>:<android.renderscript.Long2>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>:<public>:<android.appwidget.AppWidgetManager>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)>:<public static>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.renderscript.Float2: void <init>()>:<public>:<android.renderscript.Float2>
<android.print.PageRange: int getStart()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Int2: android.renderscript.Int2 mod(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.renderscript.Allocation: void copyFromUnchecked(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.StateListDrawable: int getStateCount()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.IUpdateLock.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IUpdateLock.Stub.Proxy:android.os.IUpdateLock>
<android.database.CursorWindow: boolean nativePutLong(long,long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.SurfaceTexture: void <init>(int,boolean)>:<public>:<android.graphics.SurfaceTexture>
<android.ddm.DdmHandleViewDebug: void <init>()>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ActivityThread.ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder,int)>:<public>:<android.app.ActivityThread.ReceiverData:android.content.BroadcastReceiver.PendingResult>
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()>:<public>:<android.filterfw.core.Frame>
<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult.Status)>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>:<public>:<android.app.Instrumentation>
<android.app.Instrumentation: boolean isProfiling()>:<public>:<android.app.Instrumentation>
<android.app.trust.ITrustManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.os.SystemService.State: void <init>(java.lang.String,int,java.lang.String)>:<private>:<android.os.SystemService.State:java.lang.Enum>
<android.os.IMultiWinService: java.lang.String[] getResumedActivities()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.transition.ChangeBounds.2: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.2:android.util.Property>
<android.renderscript.Allocation: void copy3DRangeFromUnchecked(int,int,int,int,int,int,java.lang.Object,android.renderscript.Element.DataType,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.nsd.INsdManager: void setEnabled(boolean)>:<public abstract>:<android.net.nsd.INsdManager:android.os.IInterface>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public abstract>:<android.os.IBinder>
<android.app.ActivityThread: java.lang.String currentPackageName()>:<public static>:<android.app.ActivityThread>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.IActivityManager: void resumeAppSwitches()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.FragmentBreadCrumbs: android.app.FragmentManager.BackStackEntry getPreEntry(int)>:<private>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.SearchableInfo: android.app.SearchableInfo.ActionKeyInfo findActionKey(int)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.InterfaceConfiguration.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.InterfaceConfiguration.1:android.os.Parcelable.Creator>
<android.test.AndroidTestCase: void setTestContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>:<public>:<android.app.LocalActivityManager>
<android.renderscript.ScriptIntrinsicColorMatrix: void setYUVtoRGB()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.http.RequestQueue: boolean haveRequest(org.apache.http.HttpHost)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.IActivityManager: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.BaseBundle: void putAll(java.util.Map)>:<>:<android.os.BaseBundle>
<android.webkit.WebViewProvider: boolean overlayHorizontalScrollbar()>:<public abstract>:<android.webkit.WebViewProvider>
<android.database.sqlite.SQLiteConnection: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Binder: void finalize()>:<protected>:<android.os.Binder:android.os.IBinder>
<android.app.Notification.Builder: void resetStandardTemplateWithActions(android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.webkit.CacheManager.CacheResult: void setInputStream(java.io.InputStream)>:<public>:<android.webkit.CacheManager.CacheResult>
<android.renderscript.Byte4: void addAt(int,byte)>:<public>:<android.renderscript.Byte4>
<android.net.DnsPinger: void loge(java.lang.String)>:<private>:<android.net.DnsPinger:android.os.Handler>
<android.graphics.Path: void rMoveTo(float,float)>:<public>:<android.graphics.Path>
<android.os.IMultiWinService: boolean isCloseChangeViewVisible()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,int,android.content.Intent,int,int,android.app.Activity,android.os.Bundle)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.VpnService: android.content.Intent prepare(android.content.Context)>:<public static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.PathMeasure: boolean native_getPosTan(long,float,float[],float[])>:<private static native>:<android.graphics.PathMeasure>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.INotificationManager: int getPackagePriority(java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.filterfw.core.ShaderProgram: boolean deallocate()>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.graphics.drawable.InsetDrawable: void clearMutated()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.NetworkTemplate: boolean matchesBluetooth(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.accounts.Account: void <clinit>()>:<static>:<android.accounts.Account:android.os.Parcelable>
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(android.webkit.UrlInterceptHandler)>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.graphics.Matrix: boolean native_isAffine(long)>:<private static native>:<android.graphics.Matrix>
<android.app.backup.BackupTransport.TransportImpl: android.content.Intent dataManagementIntent()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onBackupPackage(java.lang.String)>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.database.DatabaseUtils.InsertHelper: long insertInternal(android.content.ContentValues,boolean)>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.app.ProgressDialog: int getSecondaryProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.RippleBackground: android.animation.TimeInterpolator access.000()>:<static>:<android.graphics.drawable.RippleBackground>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.app.IActivityManager: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.transition.ChangeTransform: void access.100(android.view.View)>:<static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.net.IConnectivityManager.Stub.Proxy: android.net.Network getNetworkForType(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.ContextImpl: java.io.File validateFilePath(java.lang.String,boolean)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>:<public>:<android.os.UserManager>
<android.mtp.MtpDatabase: void setServer(android.mtp.MtpServer)>:<public>:<android.mtp.MtpDatabase>
<android.os.Parcel.1: java.lang.String createFromParcel(android.os.Parcel)>:<public>:<android.os.Parcel.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask: void <init>(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask:java.util.TimerTask>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<public static>:<android.opengl.EGL14>
<android.drm.DrmInfo: int getInfoType()>:<public>:<android.drm.DrmInfo>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.opengl.EGLLogWrapper: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.EGLDisplay: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)>:<public>:<android.filterfw.core.FilterFunction>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLLogWrapper: void returns(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.LightingColorFilter: int getColorMultiply()>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.net.NetworkStateTracker: void setPolicyDataEnable(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.net.wifi.SupplicantState: boolean isDriverActive(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.app.Fragment: void onDestroyOptionsMenu()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.usage.UsageStats.1: android.app.usage.UsageStats[] newArray(int)>:<public>:<android.app.usage.UsageStats.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.widget.RemoteViews makeHeadsUpContentView()>:<private>:<android.app.Notification.Builder>
<android.app.NativeActivity: void onConfigurationChangedNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerTxTimeMillis()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.700(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceUnregistered(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.3002(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.accounts.ChooseTypeAndAccountActivity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.renderscript.RenderScript: long rsnScriptFieldIDCreate(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.app.DialogFragment: void onStart()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.ApplicationPackageManager: void removePermission(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.database.MatrixCursor: java.lang.String[] access.200(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.http.Headers: void setEtag(java.lang.String)>:<public>:<android.net.http.Headers>
<android.net.Uri: java.lang.String getEncodedQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.alsa.AlsaDevicesParser: boolean isLineDeviceRecord(java.lang.String)>:<private>:<android.alsa.AlsaDevicesParser>
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.ActivityManagerProxy: void addPackageDependency(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.backup.RestoreDescription.1: void <init>()>:<>:<android.app.backup.RestoreDescription.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkStateTracker: boolean isDefaultRouteSet()>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.Notification.Builder: android.app.Notification buildUnstyled()>:<public>:<android.app.Notification.Builder>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.IActivityManager: void activityResumed(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.IActivityManager: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: java.lang.String getHintMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition: void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.graphics.drawable.ClipDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.ShapeDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.webkit.URLUtil: boolean verifyURLEncoding(java.lang.String)>:<static>:<android.webkit.URLUtil>
<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>:<>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.ArcMotion: void <init>()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.net.Uri.StringUri: int findSchemeSeparator()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.wifi.WifiInfo: void setLinkSpeed(int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDevice: boolean isDeviceLimit()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.net.Uri.AbstractHierarchicalUri: void <init>()>:<private>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.app.usage.UsageStatsManagerInternal: void <init>()>:<public>:<android.app.usage.UsageStatsManagerInternal>
<android.webkit.Plugin: java.lang.String getName()>:<public>:<android.webkit.Plugin>
<android.net.Uri.OpaqueUri: java.lang.String getPath()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.graphics.drawable.StateListDrawable.StateListState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.BackStackRecord: boolean isNullOrEmpty(java.util.List)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.Canvas: void drawRGB(int,int,int)>:<public>:<android.graphics.Canvas>
<android.app.Notification.Builder: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Builder>
<android.app.Activity: boolean moveTaskToBack(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.ServiceManager: void <init>()>:<public>:<android.os.ServiceManager>
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.ProxyInfo: void <init>(java.lang.String)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.filterfw.core.Filter: void addInputPort(java.lang.String)>:<protected>:<android.filterfw.core.Filter>
<android.transition.Rotate: void <init>()>:<public>:<android.transition.Rotate:android.transition.Transition>
<android.webkit.CookieManager: boolean hasCookies(boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteConnectionPool: java.lang.Object access.000(android.database.sqlite.SQLiteConnectionPool)>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.600(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.IConnectivityManager: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.graphics.Matrix: boolean postScale(float,float)>:<public>:<android.graphics.Matrix>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.IApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.net.http.IdleCache.IdleReaper: void <init>(android.net.http.IdleCache)>:<private>:<android.net.http.IdleCache.IdleReaper:java.lang.Thread>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int,int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.widget.ImageView getPermissionItemViewOldImgView(android.view.View)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.ddm.DdmRegister: void <init>()>:<private>:<android.ddm.DdmRegister>
<android.app.admin.IDevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.net.wifi.IWifiManager.Stub.Proxy: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.MaskFilter: void nativeDestructor(long)>:<private static native>:<android.graphics.MaskFilter>
<android.renderscript.Short4: android.renderscript.Short4 mul(android.renderscript.Short4,short)>:<public static>:<android.renderscript.Short4>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: void <init>()>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.mtp.MtpObjectInfo: int getThumbPixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.graphics.CanvasProperty: android.graphics.CanvasProperty createPaint(android.graphics.Paint)>:<public static>:<android.graphics.CanvasProperty>
<android.graphics.pdf.PdfEditor: void close()>:<public>:<android.graphics.pdf.PdfEditor>
<android.net.MobileLinkQualityInfo: void setLteSignalStrength(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.INotificationManager: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.os.Trace: void traceCounter(long,java.lang.String,int)>:<public static>:<android.os.Trace>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ActivityView: void access.400(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.app.admin.IDevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.ConnectivityManager: android.net.ProxyInfo getGlobalProxy()>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo newInstance(java.lang.String,java.lang.String,java.util.List)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.database.CursorWindow: boolean isLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.IpConfiguration: android.net.IpConfiguration.ProxySettings getProxySettings()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.os.IPowerManager: void setAttentionLight(boolean,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.Double4: void add(double)>:<public>:<android.renderscript.Double4>
<android.net.INetworkStatsService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.INetworkPolicyManager.Stub.Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.app.ContextImpl: java.lang.String[] fileList()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.BaseBundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>:<>:<android.os.BaseBundle>
<android.graphics.drawable.GradientDrawable.GradientState: void setGradientCenter(float,float)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.os.Process: java.lang.String access.000(java.io.BufferedWriter,java.io.DataInputStream)>:<static>:<android.os.Process>
<android.os.storage.IMountService.Stub.Proxy: void unmountVolume(java.lang.String,boolean,boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.graphics.Bitmap: int nativeGetPixel(long,int,int)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.hwtheme.HwThemeManagerDummy: void retrieveSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.Paint.Align: android.graphics.Paint.Align[] values()>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceUp(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void routeUpdated(android.net.RouteInfo)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.app.ActivityManager.RunningAppProcessInfo.1: android.app.ActivityManager.RunningAppProcessInfo[] newArray(int)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.widget.RemoteViews access.2200(android.app.Notification.Builder,int,boolean)>:<static>:<android.app.Notification.Builder>
<android.alsa.AlsaDevicesParser: boolean hasCaptureDevices()>:<public>:<android.alsa.AlsaDevicesParser>
<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.FileA3D.EntryType: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.app.usage.UsageEvents: void writeEventToParcel(android.app.usage.UsageEvents.Event,android.os.Parcel,int)>:<private>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.app.INonHardwareAcceleratedPackagesManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub:android.os.Binder,android.app.INonHardwareAcceleratedPackagesManager>
<android.os.BaseBundle: short[] getShortArray(java.lang.String)>:<>:<android.os.BaseBundle>
<android.app.IUiAutomationConnection.Stub.Proxy: void executeShellCommand(java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.net.wifi.ScanResult.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.ScanResult.1:android.os.Parcelable.Creator>
<android.filterfw.core.Filter: java.util.Collection getInputPorts()>:<final>:<android.filterfw.core.Filter>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.filterfw.io.TextGraphReader.AllocateFilterCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader.AllocateFilterCommand:android.filterfw.io.TextGraphReader.Command>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.ScanSettings: void <init>(android.net.wifi.ScanSettings)>:<public>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void setIpForwardingEnabled(boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.transition.ChangeImageTransform.1: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeImageTransform.1:android.animation.TypeEvaluator>
<android.net.LinkAddress: boolean isSameAddressAs(android.net.LinkAddress)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.renderscript.Float2: void copyTo(float[],int)>:<public>:<android.renderscript.Float2>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.content.Context,int,boolean)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.renderscript.RenderScript: void rsnContextFinish(long)>:<native>:<android.renderscript.RenderScript>
<android.net.SSLSessionCache: void <init>(java.io.File)>:<public>:<android.net.SSLSessionCache>
<android.os.IUserManager.Stub.Proxy: void removeRestrictions()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.graphics.drawable.RotateDrawable: void setPivotY(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.INotificationManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificate(java.security.cert.X509Certificate)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.os.IMultiWinService.Stub.Proxy: void setMultiWinSoftKeyBoardInvisible(android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.opengl.GLLogWrapper: void glRotatex(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Handler: boolean sendEmptyMessage(int)>:<public final>:<android.os.Handler>
<android.webkit.CacheManager.CacheResult: long getContentLength()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.opengl.GLLogWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getSubjectMatch()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void uninstallCaCert(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable.VFullPath: float getStrokeWidth()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.Notification.Builder: android.app.Notification rebuild(android.content.Context,android.app.Notification)>:<public static>:<android.app.Notification.Builder>
<android.os.Debug: long getNativeHeapSize()>:<public static native>:<android.os.Debug>
<android.filterfw.io.PatternScanner: void updateLineCount(int,int)>:<public>:<android.filterfw.io.PatternScanner>
<android.app.INotificationManager: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.webkit.WebBackForwardList: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.os.PowerManager: boolean getWakeLockByUid(int,int)>:<public>:<android.os.PowerManager>
<android.os.FileUtils: boolean isValidExtFilenameChar(char)>:<private static>:<android.os.FileUtils>
<android.opengl.GLErrorWrapper: void glPushMatrix()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager.ContentProviderHolder.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.IActivityManager.ContentProviderHolder.1:android.os.Parcelable.Creator>
<android.hwtheme.HwThemeManager.IHwThemeManager: void restoreIconCache(java.lang.String,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.Binder:android.os.IBinder>
<android.database.sqlite.SQLiteSession: void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.app.usage.TimeSparseArray: void <init>(int)>:<public>:<android.app.usage.TimeSparseArray:android.util.LongSparseArray>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.ContentObserver.NotificationRunnable: void run()>:<public>:<android.database.ContentObserver.NotificationRunnable:java.lang.Runnable>
<android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)>:<public static>:<android.os.FileUtils>
<android.app.IWallpaperManager.Stub.Proxy: int getHeightHint()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.os.BaseBundle: char getChar(java.lang.String,char)>:<>:<android.os.BaseBundle>
<android.app.IActivityPendingResult.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IActivityPendingResult.Stub.Proxy:android.app.IActivityPendingResult>
<android.graphics.Paint: void setTextSkewX(float)>:<public native>:<android.graphics.Paint>
<android.print.IPrintManager.Stub.Proxy: void cancelPrintJob(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.app.IWallpaperManager.Stub.Proxy: void setDisplayPadding(android.graphics.Rect)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean)>:<public>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.renderscript.RenderScript: void <clinit>()>:<static>:<android.renderscript.RenderScript>
<android.app.TimePickerDialog.1: void onValidationChanged(boolean)>:<public>:<android.app.TimePickerDialog.1:android.widget.TimePicker.ValidationCallback>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.transition.ChangeBounds.7: void <init>(android.transition.ChangeBounds,android.transition.ChangeBounds.ViewBounds)>:<>:<android.transition.ChangeBounds.7:android.animation.AnimatorListenerAdapter>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewDatabase getWebViewDatabase(android.content.Context)>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.os.Vibrator: boolean hasVibrator()>:<public abstract>:<android.os.Vibrator>
<android.os.CommonTimeConfig: java.lang.Object access.000(android.os.CommonTimeConfig)>:<static>:<android.os.CommonTimeConfig>
<android.hwcontrol.HwWidgetFactory.HwTextView: void setError(android.widget.TextView,android.content.Context,java.lang.CharSequence)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.RenderScript: void nScriptInvokeV(long,int,byte[])>:<>:<android.renderscript.RenderScript>
<android.app.ContextImpl: java.io.File getCacheDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.print.PrintJobInfo.Builder: void setAttributes(android.print.PrintAttributes)>:<public>:<android.print.PrintJobInfo.Builder>
<android.net.LinkQualityInfo: void setTheoreticalRxBandwidth(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.print.PrinterInfo: void <init>(android.os.Parcel,android.print.PrinterInfo.1)>:<>:<android.print.PrinterInfo:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.500(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean setWifiLog(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.wifi.WifiManager: void stopPPPOE()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Allocation.MipmapControl: void <clinit>()>:<static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.opengl.GLErrorWrapper: void glFrustumf(float,float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.backup.IRestoreObserver.Stub.Proxy: void onUpdate(int,java.lang.String)>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.opengl.GLLogWrapper: void glBindRenderbufferOES(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<android.app.IBackupAgent: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.app.IAppTask: void finishAndRemoveTask()>:<public abstract>:<android.app.IAppTask:android.os.IInterface>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.os.FileObserver: void finalize()>:<protected>:<android.os.FileObserver>
<android.os.IServiceManager: void setPermissionController(android.os.IPermissionController)>:<public abstract>:<android.os.IServiceManager:android.os.IInterface>
<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.app.ActivityThread: void access.3400(android.app.ActivityThread,android.app.ActivityThread.UpdateCompatibilityData)>:<static>:<android.app.ActivityThread>
<android.drm.DrmUtils: void writeToFile(java.lang.String,byte[])>:<static>:<android.drm.DrmUtils>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Registrant: void notifyRegistrant()>:<public>:<android.os.Registrant>
<android.os.IPowerManager: void updateWakeLockUids(android.os.IBinder,int[])>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.graphics.Paint.Align: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Paint.Align:java.lang.Enum>
<android.webkit.FindActionModeCallback: void afterTextChanged(android.text.Editable)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.renderscript.Program: void bindSampler(android.renderscript.Sampler,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.LoadedApk: java.lang.String[] getSplitResDirs()>:<public>:<android.app.LoadedApk>
<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLSurfaceView.LogWriter: void flush()>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.net.MobileLinkQualityInfo: void setRssi(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.os.WorkSource: boolean equals(java.lang.Object)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.filterfw.geometry.Rectangle: void <init>(float,float,float,float)>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.graphics.drawable.shapes.PathShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.accessibilityservice.AccessibilityService.1: boolean onKeyEvent(android.view.KeyEvent)>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.ActivityThread.StopInfo: void <init>(android.app.ActivityThread.1)>:<>:<android.app.ActivityThread.StopInfo:java.lang.Runnable>
<android.renderscript.FieldPacker: android.renderscript.Int3 subInt3()>:<public>:<android.renderscript.FieldPacker>
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status[] values()>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.graphics.drawable.ClipDrawable.ClipState: void <init>(android.graphics.drawable.ClipDrawable.ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.os.BatteryProperty: int describeContents()>:<public>:<android.os.BatteryProperty:android.os.Parcelable>
<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>:<public>:<android.app.ResourcesManager>
<android.app.Fragment.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.renderscript.Allocation: void copyFrom(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteConnectionPool.1: void onCancel()>:<public>:<android.database.sqlite.SQLiteConnectionPool.1:android.os.CancellationSignal.OnCancelListener>
<android.os.Debug.MemoryInfo: int getOtherSharedDirty(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.FragmentManagerState: void <init>(android.os.Parcel)>:<public>:<android.app.FragmentManagerState:android.os.Parcelable>
<android.app.ExitTransitionCoordinator: android.os.Bundle captureExitSharedElementsState()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.print.PrintManager: void removePrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>:<public>:<android.print.PrintManager>
<android.renderscript.Float4: void div(float)>:<public>:<android.renderscript.Float4>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiScanner.ParcelableScanResults.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiScanner.ParcelableScanResults.1:android.os.Parcelable.Creator>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowBypass()>:<public>:<android.net.VpnService.Builder>
<android.os.INetworkManagementService: void setUidNetworkRules(int,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.accounts.IAccountManager: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: void openInner()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getPermittedInputMethodsForCurrentUser()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.accounts.AccountManager.BaseFutureTask.Response: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>:<public final>:<android.filterfw.core.Filter>
<android.graphics.Paint: boolean isAntiAlias()>:<public final>:<android.graphics.Paint>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.graphics.Canvas: int getMaximumBitmapHeight()>:<public>:<android.graphics.Canvas>
<android.net.NetworkInfo: int getType()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.alsa.AlsaCardsParser: android.alsa.LineTokenizer access.000()>:<static>:<android.alsa.AlsaCardsParser>
<android.net.wifi.HwWifiStatStore: void clearStatInfo()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.os.IPowerManager.Stub.Proxy: void goToSleep(long,int,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.Matrix: void native_mapPoints(long,float[],int,float[],int,int,boolean)>:<private static native>:<android.graphics.Matrix>
<android.app.Instrumentation.ActivityGoing: boolean queueIdle()>:<public final>:<android.app.Instrumentation.ActivityGoing:android.os.MessageQueue.IdleHandler>
<android.graphics.drawable.RotateDrawable: float getPivotY()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiManager.WifiLock: void <init>(android.net.wifi.WifiManager,int,java.lang.String,android.net.wifi.WifiManager.1)>:<>:<android.net.wifi.WifiManager.WifiLock>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1308(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.backup.BackupDataOutput: long ctor(java.io.FileDescriptor)>:<private static native>:<android.app.backup.BackupDataOutput>
<android.os.PowerManager: void reboot(java.lang.String)>:<public>:<android.os.PowerManager>
<android.app.BackStackRecord: java.lang.String getName()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.accounts.ChooseTypeAndAccountActivity: int access.002(android.accounts.ChooseTypeAndAccountActivity,int)>:<static>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.graphics.Canvas: boolean isHardwareAccelerated()>:<public>:<android.graphics.Canvas>
<android.accessibilityservice.IAccessibilityServiceClient: void onKeyEvent(android.view.KeyEvent,int)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.os.WorkSource: void insert(int,int,java.lang.String)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ActivityThread.ActionTimeType: android.app.ActivityThread.ActionTimeType valueOf(java.lang.String)>:<public static>:<android.app.ActivityThread.ActionTimeType:java.lang.Enum>
<android.net.wifi.HuaweiApConfiguration.1: android.net.wifi.HuaweiApConfiguration[] newArray(int)>:<public>:<android.net.wifi.HuaweiApConfiguration.1:android.os.Parcelable.Creator>
<android.app.ContextImpl.39: void <init>()>:<>:<android.app.ContextImpl.39:android.app.ContextImpl.ServiceFetcher>
<android.print.PrintAttributes.Resolution: android.print.PrintAttributes.Resolution createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.Resolution>
<android.app.admin.IDevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>:<public>:<android.app.Notification.Builder>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.dhcp.DhcpRequestPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpRequestPacket:android.net.dhcp.DhcpPacket>
<android.net.wifi.IWifiScanner.Stub.Proxy: android.os.Bundle getAvailableChannels(int)>:<public>:<android.net.wifi.IWifiScanner.Stub.Proxy:android.net.wifi.IWifiScanner>
<android.database.Cursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.drawable.GradientDrawable: int getAlpha()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.lang.String bin2HexStr(byte[])>:<static>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.os.Handler: void <init>(android.os.Looper)>:<public>:<android.os.Handler>
<android.accounts.AccountManager: void postToHandler(android.os.Handler,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<private>:<android.accounts.AccountManager>
<android.net.NetworkTemplate: java.lang.String toString()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.R.styleable: void <init>()>:<public>:<android.R.styleable>
<android.accounts.IAccountManager.Stub.Proxy: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.transition.ChangeTransform: android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues,android.transition.TransitionValues,boolean)>:<private>:<android.transition.ChangeTransform:android.transition.Transition>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManager.MemoryInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.MemoryInfo.1:android.os.Parcelable.Creator>
<android.os.JankBdData: java.util.List getItems()>:<public>:<android.os.JankBdData:android.os.Parcelable>
<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker.SamplingSnapshot,android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.SamplingDataTracker>
<android.renderscript.Float3: int length()>:<public>:<android.renderscript.Float3>
<android.app.ActivityThread.H: java.lang.String codeToString(int)>:<>:<android.app.ActivityThread.H:android.os.Handler>
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.Bitmap.1: android.graphics.Bitmap[] newArray(int)>:<public>:<android.graphics.Bitmap.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager.OpEntry.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.AppOpsManager.OpEntry.1:android.os.Parcelable.Creator>
<android.os.ICancellationSignal.Stub: android.os.IBinder asBinder()>:<public>:<android.os.ICancellationSignal.Stub:android.os.Binder,android.os.ICancellationSignal>
<android.filterfw.core.FrameFormat: java.lang.String targetToString(int)>:<public static>:<android.filterfw.core.FrameFormat>
<android.graphics.BitmapFactory: boolean nativeIsSeekable(java.io.FileDescriptor)>:<private static native>:<android.graphics.BitmapFactory>
<android.net.wifi.WifiConfiguration.Status: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Status>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.FrameFormat: int getTarget()>:<public>:<android.filterfw.core.FrameFormat>
<android.os.storage.StorageManager: android.os.storage.StorageManager 'from'(android.content.Context)>:<public static>:<android.os.storage.StorageManager>
<android.net.INetworkManagementEventObserver: void routeUpdated(android.net.RouteInfo)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.app.Activity: void closeOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>:<public>:<android.graphics.Picture>
<android.print.PrinterCapabilitiesInfo: void readDefaults(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.PowerManagerInternal.LowPowerModeListener: void onLowPowerModeChanged(boolean)>:<public abstract>:<android.os.PowerManagerInternal.LowPowerModeListener>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.renderscript.Allocation: void setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element I32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.transition.Crossfade: int access.000(android.transition.Crossfade)>:<static>:<android.transition.Crossfade:android.transition.Transition>
<android.os.INetworkManagementService.Stub.Proxy: android.net.NetworkStats getNetworkStatsDetail()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.LoadedApk.ReceiverDispatcher: void validate(android.content.Context,android.os.Handler)>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.database.Cursor: boolean move(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActivityThread: void onNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>:<public>:<android.app.ActivityThread>
<android.net.Credentials: int getPid()>:<public>:<android.net.Credentials>
<android.graphics.FontListParser.Font: void <init>(java.lang.String,int,boolean)>:<>:<android.graphics.FontListParser.Font>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,java.lang.String,int,int,boolean)>:<public final>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.Crossfade: int getFadeBehavior()>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void <clinit>()>:<static>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.accounts.IAccountManager: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.os.FileObserver.ObserverThread: void observe(int)>:<private native>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Path.Primitive: android.renderscript.Path.Primitive[] values()>:<public static>:<android.renderscript.Path.Primitive:java.lang.Enum>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.008(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.NetworkInfo: java.lang.String toString()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.IActivityManager: void restart()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>:<public>:<android.app.ActionBar>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollRange()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.net.dhcp.DhcpNakPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpNakPacket:android.net.dhcp.DhcpPacket>
<android.opengl.GLErrorWrapper: void glClearStencil(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.net.wifi.IWifiManager: void reassociate()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.renderscript.Short2: android.renderscript.Short2 add(android.renderscript.Short2,short)>:<public static>:<android.renderscript.Short2>
<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.app.ActivityOptions: void <init>(android.os.Bundle)>:<public>:<android.app.ActivityOptions>
<android.net.wifi.WifiManager: int getSupportedFeatures()>:<private>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Paint: float getLetterSpacing()>:<public>:<android.graphics.Paint>
<android.print.PrintDocumentInfo: java.lang.String contentTyepToString(int)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.print.PrintJobInfo: java.lang.String getTag()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.NetworkInfo: boolean access.502(android.net.NetworkInfo,boolean)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnSamplerCreate(long,int,int,int,int,int,float)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.WifiManager: void save(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager.ActionListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction create()>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.webkit.WebViewProvider.ViewDelegate: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Matrix: boolean isIdentity()>:<public>:<android.graphics.Matrix>
<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request,android.net.http.Connection)>:<public>:<android.net.http.RequestHandle>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.StateListDrawable: void <clinit>()>:<static>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>:<public static>:<android.os.AsyncResult>
<android.accounts.ChooseAccountActivity.AccountInfo: void <init>(java.lang.String,android.graphics.drawable.Drawable)>:<>:<android.accounts.ChooseAccountActivity.AccountInfo>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap[] values()>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.net.wifi.WifiScanner: void startBackgroundScan(android.net.wifi.WifiScanner.ScanSettings,android.net.wifi.WifiScanner.ScanListener)>:<public>:<android.net.wifi.WifiScanner>
<android.graphics.drawable.Ripple: void setYGravity(float)>:<public>:<android.graphics.drawable.Ripple>
<android.renderscript.Byte4: void set(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.renderscript.Matrix3f: void rotate(float)>:<public>:<android.renderscript.Matrix3f>
<android.os.MemoryFile: void native_write(java.io.FileDescriptor,long,byte[],int,int,int,boolean)>:<private static native>:<android.os.MemoryFile>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.accessibilityservice.AccessibilityService.Callbacks: boolean onGesture(int)>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.net.WebAddress: void setAuthInfo(java.lang.String)>:<public>:<android.net.WebAddress>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.graphics.Bitmap generateBitmap(android.content.Context,android.graphics.Bitmap,int,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.BackStackRecord: void removeTargets(android.transition.Transition,java.util.ArrayList)>:<public static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.IAppTask.Stub: android.app.IAppTask asInterface(android.os.IBinder)>:<public static>:<android.app.IAppTask.Stub:android.os.Binder,android.app.IAppTask>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.AlertDialog.Builder>
<android.transition.TransitionUtils.MatrixEvaluator: void <init>()>:<public>:<android.transition.TransitionUtils.MatrixEvaluator:android.animation.TypeEvaluator>
<android.net.wifi.p2p.IWifiP2pManager: boolean setWifiP2pEnabled(int)>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumWidth()>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.Instrumentation: android.content.Context getContext()>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.RippleDrawable: int getMaxRadius()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.LoadedApk.WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1800(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityThread.UpdateCompatibilityData: void <init>()>:<>:<android.app.ActivityThread.UpdateCompatibilityData>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.Uri.Part: android.net.Uri.Part fromDecoded(java.lang.String)>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.renderscript.ProgramVertexFixedFunction: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramVertexFixedFunction:android.renderscript.ProgramVertex,android.renderscript.Program,android.renderscript.BaseObj>
<android.app.Instrumentation.SyncRunnable: void <init>(java.lang.Runnable)>:<public>:<android.app.Instrumentation.SyncRunnable:java.lang.Runnable>
<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.transition.Transition: boolean isValueChanged(android.transition.TransitionValues,android.transition.TransitionValues,java.lang.String)>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Fragment.1: boolean hasView()>:<public>:<android.app.Fragment.1:android.app.FragmentContainer>
<android.net.INetworkStatsService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkStatsService.Stub:android.os.Binder,android.net.INetworkStatsService>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void updateCacheStates()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.os.storage.IMountService: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.EnterTransitionCoordinator: void <init>(android.app.Activity,android.os.ResultReceiver,java.util.ArrayList,boolean)>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.RenderScript: void rsnAllocationResize1D(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2808(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.netdetect.INetDetectService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.transition.Transition: android.transition.Transition setSceneRoot(android.view.ViewGroup)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.app.usage.ConfigurationStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.usage.ConfigurationStats.1:android.os.Parcelable.Creator>
<android.app.admin.IDevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.UserManager: boolean supportsMultipleUsers()>:<public static>:<android.os.UserManager>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode[] values()>:<public static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverMetered(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.os.IMultiWinService: int getTaskPosition(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.usage.UsageEvents: void readEventFromParcel(android.os.Parcel,android.app.usage.UsageEvents.Event)>:<private>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void overrideDescriptionIfSupplied(java.lang.String)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>:<public>:<android.app.WallpaperManager>
<android.os.Build: java.lang.String getRadioVersion()>:<public static>:<android.os.Build>
<android.os.Binder: int getThreadStrictModePolicy()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.net.http.RequestFeeder: android.net.http.Request getRequest()>:<public abstract>:<android.net.http.RequestFeeder>
<android.graphics.Bitmap: void setNinePatchChunk(byte[])>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnScriptForEachMultiClipped(long,long,int,long[],long,int,int,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.drawable.shapes.Shape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.app.job.JobInfo.Builder: int access.000(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.app.WallpaperManager.FastBitmapDrawable: void setAlpha(int)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.IAlarmManager: int getWakeUpNum(int,java.lang.String)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.app.SharedPreferencesImpl.EditorImpl.1: void <init>(android.app.SharedPreferencesImpl.EditorImpl,android.app.SharedPreferencesImpl.MemoryCommitResult)>:<>:<android.app.SharedPreferencesImpl.EditorImpl.1:java.lang.Runnable>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.os.BatteryStats: long getGlobalWifiRunningTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.accounts.AuthenticatorDescription.1: android.accounts.AuthenticatorDescription createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.filterfw.core.GLEnvironment: int nativeAddSurfaceWidthHeight(android.view.Surface,int,int)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.os.ResultReceiver: int describeContents()>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.app.Notification.Action: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>:<public>:<android.os.DropBoxManager>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: void <init>(java.lang.String)>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.CursorWindow: void <init>(java.lang.String)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.filterfw.core.CachedFrameManager: void dropOldestFrame()>:<private>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.print.PrintJobInfo: boolean hasAdvancedOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.NetworkCapabilities: boolean hasTransport(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.renderscript.Double3: void mul(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.app.INotificationManager.Stub.Proxy: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.NetworkStateTracker: void setUserDataEnable(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.graphics.Bitmap: void checkPixelsAccess(int,int,int,int,int,int,int[])>:<private>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiSsid.1: void <init>()>:<>:<android.net.wifi.WifiSsid.1:android.os.Parcelable.Creator>
<android.app.ApplicationPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.drm.DrmInfoRequest: boolean isValid()>:<>:<android.drm.DrmInfoRequest>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForLong(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.app.FragmentManagerImpl: void checkStateLoss()>:<private>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.os.IPowerManager.Stub.Proxy: void crash(java.lang.String)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.webkit.WebView: java.lang.String getTouchIconUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>:<public static>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.mtp.MtpStorage: long getMaxFileSize()>:<public>:<android.mtp.MtpStorage>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.app.LoaderManagerImpl: void doStop()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.alsa.AlsaCardsParser: android.alsa.AlsaCardsParser.AlsaCardRecord getCardRecordAt(int)>:<public>:<android.alsa.AlsaCardsParser>
<android.os.CommonTimeConfig: int setNetworkBinding(java.lang.String)>:<public>:<android.os.CommonTimeConfig>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.GradientDrawable.GradientState: void setColors(int[])>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.webkit.PermissionRequest: void <init>()>:<public>:<android.webkit.PermissionRequest>
<android.graphics.drawable.VectorDrawable.VPath: void toPath(android.graphics.Path)>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccounts(java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.transition.Transition: void <clinit>()>:<static>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDClear()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManager.CpuStatInfo.1: android.app.ActivityManager.CpuStatInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.CpuStatInfo.1:android.os.Parcelable.Creator>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onGesture(int)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.app.ActivityThread.Profiler: void <init>()>:<>:<android.app.ActivityThread.Profiler>
<android.filterfw.core.FieldPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.mtp.MtpDatabase: int deleteFile(int)>:<private>:<android.mtp.MtpDatabase>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.RotateDrawable: boolean isPivotXRelative()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.INetworkPolicyManager.Stub.Proxy: boolean isNetworkMetered(android.net.NetworkState)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.graphics.Shader: android.graphics.Shader copy()>:<protected>:<android.graphics.Shader>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificateAlias(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo build()>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.net.wifi.WifiEnterpriseConfig: void <init>()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.IUpdateLock: void releaseUpdateLock(android.os.IBinder)>:<public abstract>:<android.os.IUpdateLock:android.os.IInterface>
<android.accessibilityservice.AccessibilityService: void sendServiceInfo()>:<private>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.RenderScript: int rsnScriptGetVarI(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.ScriptC: void <init>(int,android.renderscript.RenderScript)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.os.CancellationSignal.Transport: void <init>(android.os.CancellationSignal.1)>:<>:<android.os.CancellationSignal.Transport:android.os.ICancellationSignal.Stub,android.os.Binder>
<android.renderscript.Long3: void setValues(long,long,long)>:<public>:<android.renderscript.Long3>
<android.accounts.GrantCredentialsPermissionActivity: java.lang.String getAccountLabel(android.accounts.Account)>:<private>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.net.UrlQuerySanitizer: void <clinit>()>:<static>:<android.net.UrlQuerySanitizer>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ContextImpl.63: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.63:android.app.ContextImpl.ServiceFetcher>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.net.LocalSocketImpl: void connectLocal(java.io.FileDescriptor,java.lang.String,int)>:<private native>:<android.net.LocalSocketImpl>
<android.filterfw.core.RoundRobinScheduler: void reset()>:<public>:<android.filterfw.core.RoundRobinScheduler:android.filterfw.core.Scheduler>
<android.net.wifi.WifiNetworkConnectionStatistics.1: android.net.wifi.WifiNetworkConnectionStatistics createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics.1:android.os.Parcelable.Creator>
<android.filterfw.core.InputPort: void transfer(android.filterfw.core.FilterContext)>:<public abstract>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.net.wifi.BatchedScanResult: java.lang.String toString()>:<public>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.app.INotificationManager: boolean isSystemConditionProviderEnabled(java.lang.String)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.webkit.WebView: void onDetachedFromWindowInternal()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.appwidget.AppWidgetProviderInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.app.SharedPreferencesImpl.EditorImpl.3: void <init>(android.app.SharedPreferencesImpl.EditorImpl,android.app.SharedPreferencesImpl.MemoryCommitResult)>:<>:<android.app.SharedPreferencesImpl.EditorImpl.3:java.lang.Runnable>
<android.net.ConnectivityManager: void incCallbackHandlerRefCount()>:<private>:<android.net.ConnectivityManager>
<android.renderscript.Float4: void sub(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.netdetect.HwCustNetDetectServiceImpl: boolean disconnectAndDisableAP(java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.ApplicationPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Debug.MemoryInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.Debug.MemoryInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLSurfaceView.LogWriter: void close()>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.net.wifi.WifiManager: android.util.SparseArray access.400()>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.RttManager.ParcelableRttParams: void <clinit>()>:<static>:<android.net.wifi.RttManager.ParcelableRttParams:android.os.Parcelable>
<android.os.INetworkManagementService: void setDefaultNetId(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.print.IPrintManager: void stopPrinterStateTracking(android.print.PrinterId,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public abstract>:<android.net.UrlQuerySanitizer.ValueSanitizer>
<android.graphics.drawable.ColorDrawable: void clearMutated()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Sampler.Builder>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.CursorWrapper: void deactivate()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Typeface: void nativeSetDefault(long)>:<private static native>:<android.graphics.Typeface>
<android.accounts.GrantCredentialsPermissionActivity.1.1: void run()>:<public>:<android.accounts.GrantCredentialsPermissionActivity.1.1:java.lang.Runnable>
<android.filterfw.core.SerializedFrame.DirectByteInputStream: void <init>(android.filterfw.core.SerializedFrame,byte[],int)>:<public>:<android.filterfw.core.SerializedFrame.DirectByteInputStream:java.io.InputStream>
<android.app.Dialog: void onDetachedFromWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean)>:<public static>:<android.os.RecoverySystem>
<android.net.wifi.WifiManager: android.net.wifi.WifiActivityEnergyInfo getControllerActivityEnergyInfo(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Program.ProgramParam: void <clinit>()>:<static>:<android.renderscript.Program.ProgramParam:java.lang.Enum>
<android.app.BackStackRecord: void setFirstOut(android.util.SparseArray,android.app.Fragment)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.transition.Crossfade: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.print.IPrintDocumentAdapterObserver: void onDestroy(boolean)>:<public abstract>:<android.print.IPrintDocumentAdapterObserver:android.os.IInterface>
<android.app.SearchableInfo: int getSettingsDescriptionId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.dhcp.DhcpInformPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpInformPacket:android.net.dhcp.DhcpPacket>
<android.accounts.AccountManager.8: void doWork()>:<public>:<android.accounts.AccountManager.8:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.emoji.EmojiFactory: int access.000(android.emoji.EmojiFactory)>:<static>:<android.emoji.EmojiFactory>
<android.app.ActivityThread: void access.3000(android.app.ActivityThread,android.app.ActivityThread.DumpComponentInfo)>:<static>:<android.app.ActivityThread>
<android.app.backup.IRestoreSession.Stub.Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.database.MatrixCursor: int getInt(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.ISearchManager.Stub.Proxy: android.content.ComponentName getAssistIntent(int)>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.ActivityThread.ApplicationThread: void scheduleExit()>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.EGLLogWrapper: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.os.IPowerManager.Stub.Proxy: void releaseWakeLock(android.os.IBinder,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.pdf.PdfRenderer.Page: void doClose()>:<private>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.app.AppOpsManager: int noteOp(int)>:<public>:<android.app.AppOpsManager>
<android.database.sqlite.SQLiteSession: void <clinit>()>:<static>:<android.database.sqlite.SQLiteSession>
<android.accessibilityservice.AccessibilityService: android.os.IBinder access.102(android.accessibilityservice.AccessibilityService,android.os.IBinder)>:<static>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ITransientNotification.Stub: android.app.ITransientNotification asInterface(android.os.IBinder)>:<public static>:<android.app.ITransientNotification.Stub:android.os.Binder,android.app.ITransientNotification>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.net.wifi.RttManager.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.net.wifi.RttManager.ServiceHandler:android.os.Handler>
<android.net.NetworkTemplate: int getMatchRule()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.NetworkAgent: void handleMessage(android.os.Message)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.app.ContextImpl: boolean deleteFile(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.BitmapShader: long nativeCreate(long,int,int)>:<private static native>:<android.graphics.BitmapShader:android.graphics.Shader>
<android.app.Activity: void onWindowDismissed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>:<private static>:<android.webkit.UrlInterceptRegistry>
<android.net.DhcpStateMachine: void access.1000(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiManager: com.android.internal.util.AsyncChannel access.100()>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Byte3: byte get(int)>:<public>:<android.renderscript.Byte3>
<android.alsa.AlsaCardsParser.AlsaCardRecord: java.lang.String textFormat()>:<public>:<android.alsa.AlsaCardsParser.AlsaCardRecord>
<android.ddm.DdmHandleViewDebug: void <clinit>()>:<static>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.Network: boolean equals(java.lang.Object)>:<public>:<android.net.Network:android.os.Parcelable>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addTriangle(int,int,int)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.net.NetworkInfo: boolean isContain(java.lang.String)>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>:<public abstract>:<android.os.IRemoteCallback:android.os.IInterface>
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.net.wifi.IWifiManager.Stub.Proxy: java.lang.String getConfigFile()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: int access.1202(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,int)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.graphics.drawable.ScaleDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Node findNode(android.renderscript.Script)>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.WebSettings: void <init>()>:<public>:<android.webkit.WebSettings>
<android.os.SystemService: void waitForState(java.lang.String,android.os.SystemService.State,long)>:<public static>:<android.os.SystemService>
<android.renderscript.Byte3: void negate()>:<public>:<android.renderscript.Byte3>
<android.os.TokenWatcher: java.lang.String access.200(android.os.TokenWatcher)>:<static>:<android.os.TokenWatcher>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>:<public>:<android.os.PowerManager.WakeLock>
<android.net.NetworkPolicy.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkPolicy.1:android.os.Parcelable.Creator>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.Uri.StringUri: java.lang.String getEncodedAuthority()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.os.Process: int[] getPidsForCommands(java.lang.String[])>:<public static final native>:<android.os.Process>
<android.app.Notification.1: android.app.Notification[] newArray(int)>:<public>:<android.app.Notification.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IActivityManager: void notifyLaunchTaskBehindComplete(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setNetworkSpecifier(java.lang.String)>:<public>:<android.net.NetworkRequest.Builder>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setPageCount(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.app.WallpaperManager: android.graphics.RectF getMaxCropRect(int,int,int,int,float,float)>:<private static>:<android.app.WallpaperManager>
<android.app.IActivityManager: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.BaseNetworkStateTracker: boolean setRadio(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.mtp.MtpDatabase: void removeStorage(android.mtp.MtpStorage)>:<public>:<android.mtp.MtpDatabase>
<android.os.Debug.MemoryInfo: void <init>(android.os.Parcel)>:<private>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.transition.TransitionSet: android.transition.Transition addTarget(java.lang.Class)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.RemoteInput.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.RemoteInput.1:android.os.Parcelable.Creator>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Long4: android.renderscript.Long4 mod(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.filterfw.core.FilterPort: void close()>:<public>:<android.filterfw.core.FilterPort>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setControlPort(int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pConfig: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.net.ConnectivityManager.NetworkCallback: void <init>()>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2900(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.admin.DevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.security.PrivateKey,java.security.cert.Certificate,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.AllocationAdapter: void initLOD(int)>:<>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>:<public final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.backup.WallpaperBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.WallpaperBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.SurfaceTexture: void nativeUpdateTexImage()>:<private native>:<android.graphics.SurfaceTexture>
<android.transition.TransitionInflater: android.transition.TransitionManager createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup)>:<private>:<android.transition.TransitionInflater>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.wifi.WifiChannel.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiChannel.1:android.os.Parcelable.Creator>
<android.app.Service: void <init>()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManager.Stub.Proxy: boolean removeAccountExplicitly(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.backup.IRestoreObserver.Stub: void <init>()>:<public>:<android.app.backup.IRestoreObserver.Stub:android.os.Binder,android.app.backup.IRestoreObserver>
<android.renderscript.Script: void setVar(int,float)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.IUserSwitchObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IUserSwitchObserver.Stub:android.os.Binder,android.app.IUserSwitchObserver>
<android.graphics.drawable.ScaleDrawable.ScaleState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.net.BaseNetworkStateTracker: boolean isTeardownRequested()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.SSLCertificateSocketFactory: void setSoWriteTimeout(java.net.Socket,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.app.IActivityController.Stub.Proxy: boolean activityResuming(java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.app.EnterTransitionCoordinator: void removeNullViews(java.util.ArrayList)>:<private static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.nsd.NsdManager.DiscoveryListener: void onStartDiscoveryFailed(java.lang.String,int)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.os.ConditionVariable: void open()>:<public>:<android.os.ConditionVariable>
<android.webkit.WebView: void setIsSpecCacheEnabled(boolean,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIconGravity(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.os.storage.StorageVolume.1: void <init>()>:<>:<android.os.storage.StorageVolume.1:android.os.Parcelable.Creator>
<android.app.IActivityContainer.Stub: void <init>()>:<public>:<android.app.IActivityContainer.Stub:android.os.Binder,android.app.IActivityContainer>
<android.net.LinkProperties.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.LinkProperties.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.graphics.Bitmap access.1202(android.app.Notification.Builder,android.graphics.Bitmap)>:<static>:<android.app.Notification.Builder>
<android.database.sqlite.SQLiteConnection: void nativeRegisterCustomFunction(long,android.database.sqlite.SQLiteCustomFunction)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void <init>(android.view.View,android.view.View,int,int,float,float)>:<private>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.transition.TransitionSet: void <init>()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.RemoteCallback: boolean equals(java.lang.Object)>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.net.ProxyInfo: void <init>(android.net.ProxyInfo)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable.ColorState: void <init>(android.graphics.drawable.ColorDrawable.ColorState)>:<>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.MediaStyle: boolean hasProgress()>:<protected>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getExitFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.os.ParcelFileDescriptor.1: android.os.ParcelFileDescriptor[] newArray(int)>:<public>:<android.os.ParcelFileDescriptor.1:android.os.Parcelable.Creator>
<android.print.IWriteResultCallback: void onWriteCanceled(int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.webkit.WebViewFactory.RelroFileCreator: void <init>()>:<private>:<android.webkit.WebViewFactory.RelroFileCreator>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvParamName(float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Mesh: int getPrimitiveCount()>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedHelper(boolean,long)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView.PrivateAccess: boolean super_onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.PrintFileDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>:<public>:<android.net.LocalSocketImpl>
<android.net.wifi.WifiScanner.ParcelableScanResults: void <init>(android.net.wifi.ScanResult[])>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void nativeBindDouble(long,long,int,double)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glLightModelf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager.WaitResult.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.IActivityManager.WaitResult.1:android.os.Parcelable.Creator>
<android.filterfw.core.FilterFunction: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.Filter)>:<public>:<android.filterfw.core.FilterFunction>
<android.filterfw.core.GLFrame: boolean nativeAllocateWithFbo(android.filterfw.core.GLEnvironment,int,int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.renderscript.Int4: void <init>(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeEntering(android.content.Context,android.content.Intent,java.lang.String)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.net.http.DelegatingSSLSession: void putValue(java.lang.String,java.lang.Object)>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService access.000()>:<static>:<android.webkit.WebViewFactory>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>:<public>:<android.app.RemoteInput.Builder>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.Path: void native_set(long,long)>:<private static native>:<android.graphics.Path>
<android.os.IUserManager: java.util.List getUsers(boolean)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.FragmentContainer: boolean hasView()>:<public abstract>:<android.app.FragmentContainer>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.InputStream,byte[],boolean)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.net.wifi.WpsResult.Status: android.net.wifi.WpsResult.Status valueOf(java.lang.String)>:<public static>:<android.net.wifi.WpsResult.Status:java.lang.Enum>
<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.database.StaleDataException: void <init>()>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.core.OneShotScheduler: android.filterfw.core.Filter scheduleNextNode()>:<public>:<android.filterfw.core.OneShotScheduler:android.filterfw.core.RoundRobinScheduler,android.filterfw.core.Scheduler>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.IMultiWinService.Stub.Proxy: int getFlagMW()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.admin.IDevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.backup.RecentsBackupHelper: void <init>(android.content.Context)>:<public>:<android.app.backup.RecentsBackupHelper:android.app.backup.BackupHelper>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.job.JobService.1: void startJob(android.app.job.JobParameters)>:<public>:<android.app.job.JobService.1:android.app.job.IJobService.Stub,android.os.Binder>
<android.opengl.GLErrorWrapper: void glMatrixMode(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.nsd.NsdManager.RegistrationListener: void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.app.backup.RestoreDescription.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.backup.RestoreDescription.1:android.os.Parcelable.Creator>
<android.app.ActivityTransitionCoordinator: java.lang.Runnable access.200(android.app.ActivityTransitionCoordinator)>:<static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>:<public abstract>:<android.webkit.ValueCallback>
<android.renderscript.Float4: float get(int)>:<public>:<android.renderscript.Float4>
<android.transition.Transition: android.transition.PathMotion getPathMotion()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.ApplicationThreadProxy: void scheduleInstallProvider(android.content.pm.ProviderInfo)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ContextImpl.26: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.26:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.RSSurfaceView: void init()>:<private>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ResultInfo: int describeContents()>:<public>:<android.app.ResultInfo:android.os.Parcelable>
<android.graphics.PorterDuffColorFilter: android.graphics.PorterDuff.Mode getMode()>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintScreenTimeout(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void write(byte[])>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.graphics.drawable.ClipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.HttpAuthHeader: void parseStale(java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.transition.ChangeText.6: void onTransitionResume(android.transition.Transition)>:<public>:<android.transition.ChangeText.6:android.transition.Transition.TransitionListenerAdapter>
<android.print.PrintJobInfo: java.lang.String getLabel()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.os.RemoteMailException: void <init>()>:<public>:<android.os.RemoteMailException:java.lang.Exception,java.lang.Throwable>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.app.IWallpaperManagerCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IWallpaperManagerCallback.Stub.Proxy:android.app.IWallpaperManagerCallback>
<android.app.ApplicationPackageManager: void installPackage(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.job.IJobService.Stub.Proxy: void stopJob(android.app.job.JobParameters)>:<public>:<android.app.job.IJobService.Stub.Proxy:android.app.job.IJobService>
<android.transition.ChangeBounds.3: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.3:android.util.Property>
<android.accounts.AccountManager.BaseFutureTask: void postRunnableToHandler(java.lang.Runnable)>:<protected>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.net.wifi.WifiManager: java.util.List getChannelList()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.backup.IBackupManager.Stub.Proxy: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.RenderScript: void rsnProgramBindSampler(long,long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.graphics.drawable.RippleDrawable.RippleState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.RippleDrawable.RippleState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.IActivityManager: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.WifiConfiguration: java.util.BitSet readBitSet(android.os.Parcel)>:<private static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.net.IpConfiguration: void <init>()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.nsd.INsdManager.Stub.Proxy: void setEnabled(boolean)>:<public>:<android.net.nsd.INsdManager.Stub.Proxy:android.net.nsd.INsdManager>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.RssiCurve.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.RssiCurve.1:android.os.Parcelable.Creator>
<android.app.Activity: void startPostponedEnterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.ScriptIntrinsicColorMatrix: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>:<public>:<android.net.http.SslCertificate.DName>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateEthernet()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.Fragment: android.app.Activity getActivity()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.ChangeBounds: boolean parentMatches(android.view.View,android.view.View)>:<private>:<android.transition.ChangeBounds:android.transition.Transition>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadComplete(android.content.Loader,java.lang.Object)>:<public>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IWallpaperManager.Stub: void <init>()>:<public>:<android.app.IWallpaperManager.Stub:android.os.Binder,android.app.IWallpaperManager>
<android.app.UiAutomationConnection: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.app.RemoteInput: void <clinit>()>:<static>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Fragment: void performDestroy()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ContextImpl.31: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.31:android.app.ContextImpl.ServiceFetcher>
<android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>:<public static>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.mtp.MtpDatabase: void addStorage(android.mtp.MtpStorage)>:<public>:<android.mtp.MtpDatabase>
<android.renderscript.Script: long getVarJ(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.accounts.ChooseAccountTypeActivity: void buildTypeToAuthDescriptionMap()>:<private>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.backup.IBackupManager.Stub.Proxy: void setBackupEnabled(boolean)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.webkit.WebViewProvider: void setNetworkAvailable(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.NetworkPolicyManager: void dumpPolicy(java.io.PrintWriter,int)>:<public static>:<android.net.NetworkPolicyManager>
<android.app.Notification.Builder: int sanitizeColor()>:<private>:<android.app.Notification.Builder>
<android.filterfw.core.FrameFormat: int getDepth()>:<public>:<android.filterfw.core.FrameFormat>
<android.app.backup.BackupAgent: void fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)>:<public final>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.app.ContextImpl: void unbindService(android.content.ServiceConnection)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Presentation: android.content.Context createPresentationContext(android.content.Context,android.view.Display,int)>:<private static>:<android.app.Presentation:android.app.Dialog>
<android.app.ActivityTransitionState: void startExitOutTransition(android.app.Activity,android.os.Bundle)>:<public>:<android.app.ActivityTransitionState>
<android.accessibilityservice.AccessibilityServiceInfo: void setCapabilities(int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.app.IApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.renderscript.RenderScript: long nScriptCCreate(java.lang.String,java.lang.String,byte[],int)>:<>:<android.renderscript.RenderScript>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.100(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.database.MatrixCursor: int getCount()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>:<public>:<android.graphics.Paint>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void createAllFutures()>:<private final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.accessibilityservice.AccessibilityService.Callbacks: void onInterrupt()>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.mtp.MtpStorage: int getStorageId(int)>:<public static>:<android.mtp.MtpStorage>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.transition.Transition: java.util.List getTargetViewNames()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>:<private>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.WorkSource: void insert(int,int)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.INetworkPolicyListener.Stub.Proxy: void onRestrictBackgroundChanged(boolean)>:<public>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.hwtheme.HwThemeManager: void addSimpleUIConfig(android.content.pm.PackageParser.Activity)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.IActivityManager.WaitResult: void <init>(android.os.Parcel,android.app.IActivityManager.1)>:<>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int describeContents()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.print.PrintAttributes: android.print.PrintAttributes.Resolution getResolution()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.net.TrafficStats: android.net.INetworkStatsService getStatsService()>:<private static>:<android.net.TrafficStats>
<android.app.ActivityManagerNative: android.os.IBinder asBinder()>:<public>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.net.IConnectivityManager: com.android.internal.net.VpnConfig getVpnConfig()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.transition.Transition: void start()>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void setSrcDevice(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix.1: void setRotate(float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.emoji.EmojiFactory.CustomLinkedHashMap: boolean removeEldestEntry(java.util.Map.Entry)>:<protected>:<android.emoji.EmojiFactory.CustomLinkedHashMap:java.util.LinkedHashMap,java.util.HashMap,java.util.AbstractMap>
<android.app.INotificationManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.os.UEventObserver.UEventThread: void removeObserver(android.os.UEventObserver)>:<public>:<android.os.UEventObserver.UEventThread:java.lang.Thread>
<android.graphics.Paint.Join: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Paint.Join:java.lang.Enum>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>:<public>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.net.DhcpStateMachine.StoppedState: void enter()>:<public>:<android.net.DhcpStateMachine.StoppedState:com.android.internal.util.State>
<android.graphics.drawable.InsetDrawable: int getAlpha()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>:<protected>:<android.filterfw.core.Filter>
<android.filterfw.core.GenerateProgramPort: boolean hasDefault()>:<public abstract>:<android.filterfw.core.GenerateProgramPort:java.lang.annotation.Annotation>
<android.mtp.MtpServer: void native_send_object_info_changed(int)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.JankSqlite: boolean getProp()>:<public static>:<android.database.sqlite.JankSqlite>
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>:<public>:<android.filterfw.core.FrameFormat>
<android.filterfw.format.ObjectFormat: void <init>()>:<public>:<android.filterfw.format.ObjectFormat>
<android.graphics.drawable.VectorDrawable.VGroup: void updateLocalMatrix()>:<private>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.net.Uri.StringUri: java.lang.String getQuery()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.webkit.HwFindActionModeCallback: void setImageView(android.widget.ImageView,android.graphics.drawable.Drawable)>:<private>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.io.PatternScanner: boolean atEnd()>:<public>:<android.filterfw.io.PatternScanner>
<android.app.Activity: android.net.Uri getReferrer()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.PrintDocumentInfo.1: android.print.PrintDocumentInfo[] newArray(int)>:<public>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebView: void setOverScrollMode(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Allocation: void copyFrom(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ResultInfo.1: android.app.ResultInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ResultInfo.1:android.os.Parcelable.Creator>
<android.os.IMultiWinService: void removeFromTaskList(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.webkit.FindActionModeCallback: void showSoftInput()>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.core.SerializedFrame: void setFloats(float[])>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.app.IActivityManager: void setAlwaysFinish(boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: android.net.NetworkStats getNetworkStatsSummaryDev()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.drawable.GradientDrawable.GradientState: void setStroke(int,android.content.res.ColorStateList,float,float)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintAttributes.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void init(android.accessibilityservice.IAccessibilityServiceConnection,int,android.os.IBinder)>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityThread.BindServiceData: java.lang.String toString()>:<public>:<android.app.ActivityThread.BindServiceData>
<android.app.admin.IDevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>:<public>:<android.app.job.JobInfo.Builder>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glFogf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.net.LinkAddress: boolean isGlobalPreferred()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnScriptSetTimeZone(long,long,byte[])>:<native>:<android.renderscript.RenderScript>
<android.print.IPrintSpoolerClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.app.ResultInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ResultInfo.1:android.os.Parcelable.Creator>
<android.graphics.Path.FillType: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Path.FillType:java.lang.Enum>
<android.app.AppOpsManager: java.util.List getPackagesForOps(int[])>:<public>:<android.app.AppOpsManager>
<android.app.ActivityManager.MemoryInfo: int describeContents()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.net.SntpClient: long getNtpTime()>:<public>:<android.net.SntpClient>
<android.filterfw.core.FieldPort: void pushFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.accessibilityservice.IAccessibilityServiceClient: void onGesture(int)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.net.Uri.HierarchicalUri: boolean isHierarchical()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.FieldID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.INetworkManagementService: void removeRoute(int,android.net.RouteInfo)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: void setEpicenter()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.Rect: void sort()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext.DebugProcKHR glGetDebugMessageCallbackKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.app.INotificationManager: void requestZenModeConditions(android.service.notification.IConditionListener,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.backup.BackupDataInput: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInput>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.Dialog: boolean hasButtons()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.drm.DrmManagerClient: android.drm.DrmManagerClient.OnInfoListener access.700(android.drm.DrmManagerClient)>:<static>:<android.drm.DrmManagerClient>
<android.renderscript.Float4: void sub(float)>:<public>:<android.renderscript.Float4>
<android.app.ISearchManagerCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ISearchManagerCallback.Stub:android.os.Binder,android.app.ISearchManagerCallback>
<android.app.EnterTransitionCoordinator: void stop()>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.INetworkPolicyManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkPolicyManager.Stub:android.os.Binder,android.net.INetworkPolicyManager>
<android.net.DhcpStateMachine: android.net.DhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>:<public static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.app.ExpandableListActivity: void onContentChanged()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityDestroyed(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.usage.IUsageStatsManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.usage.IUsageStatsManager.Stub:android.os.Binder,android.app.usage.IUsageStatsManager>
<android.os.FileUtils: long checksumCrc32(java.io.File)>:<public static>:<android.os.FileUtils>
<android.os.RecoverySystem: void hwBootCommand(android.content.Context,java.lang.String)>:<public static>:<android.os.RecoverySystem>
<android.os.StrictMode.ThreadPolicy: void <init>(int,android.os.StrictMode.1)>:<>:<android.os.StrictMode.ThreadPolicy>
<android.net.http.SslCertificate: java.lang.String formatDate(java.util.Date)>:<private static>:<android.net.http.SslCertificate>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.admin.IDevicePolicyManager: java.lang.String getDeviceOwner()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.ActivityThread.ApplicationThread: void access.1100(android.app.ActivityThread.ApplicationThread,java.io.FileDescriptor,java.lang.String[])>:<static>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.INotificationManager.Stub.Proxy: void cancelToast(java.lang.String,android.app.ITransientNotification)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.wifi.WifiManager: boolean isBatchedScanSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.DhcpResults: void setLeaseDuration(int)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.net.NetworkState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkState.1:android.os.Parcelable.Creator>
<android.os.Bundle: void <clinit>()>:<static>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.filterfw.core.AsyncRunner: void close()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.net.wifi.p2p.WifiP2pManager: void setWifiP2pChannels(android.net.wifi.p2p.WifiP2pManager.Channel,int,int,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.ContextImpl.18: void <init>()>:<>:<android.app.ContextImpl.18:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.RotateDrawable: void setDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.os.storage.StorageVolume: void <init>(android.os.Parcel)>:<private>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.filterfw.core.FilterContext: void addGraph(android.filterfw.core.FilterGraph)>:<final>:<android.filterfw.core.FilterContext>
<android.app.backup.BackupTransport: int getRestoreData(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport>
<android.app.backup.IBackupManager: void setBackupServiceActive(int,boolean)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.renderscript.ProgramRaster.CullMode: void <clinit>()>:<static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.graphics.RectF.1: android.graphics.RectF[] newArray(int)>:<public>:<android.graphics.RectF.1:android.os.Parcelable.Creator>
<android.net.IpPrefix: int describeContents()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VFullPath: void setFillAlpha(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.renderscript.Short4: android.renderscript.Short4 div(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityResumed(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.webkit.WebViewProvider: android.view.View findHierarchyView(java.lang.String,int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.KernelID getKernelID_Separate()>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.app.BackStackRecord.TransitionState: void <init>(android.app.BackStackRecord)>:<public>:<android.app.BackStackRecord.TransitionState>
<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper: void emuiMeasureContentWidth(android.widget.ListAdapter,com.android.internal.view.menu.MenuPopupHelper)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper>
<android.app.ActionBar: java.lang.CharSequence getTitle()>:<public abstract>:<android.app.ActionBar>
<android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.transition.TransitionManager: void go(android.transition.Scene)>:<public static>:<android.transition.TransitionManager>
<android.transition.SidePropagation: int distance(android.view.View,int,int,int,int,int,int,int,int)>:<private>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.renderscript.RSDriverException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSDriverException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getProfileWithMinimumFailedPasswordsForWipe(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.os.Parcel: void nativeFreeBuffer(long)>:<private static native>:<android.os.Parcel>
<android.webkit.CookieSyncManager: void <init>()>:<private>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.net.wifi.WpsResult.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WpsResult.1:android.os.Parcelable.Creator>
<android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>:<public>:<android.os.BaseBundle>
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfoRequest>
<android.graphics.Matrix: boolean rectStaysRect()>:<public>:<android.graphics.Matrix>
<android.app.ActivityThread.H: void <init>(android.app.ActivityThread)>:<>:<android.app.ActivityThread.H:android.os.Handler>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.net.DhcpStateMachine: android.content.Context access.200(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.filterfw.core.Filter: java.lang.String getFilterClassName()>:<public>:<android.filterfw.core.Filter>
<android.drm.DrmInfo: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfo>
<android.app.Notification.Builder: android.app.Notification rebuild()>:<private>:<android.app.Notification.Builder>
<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.app.ISearchManager: android.content.ComponentName getAssistIntent(int)>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.net.INetworkPolicyManager.Stub.Proxy: void removeUidPolicy(int,int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.app.ActivityManagerProxy: void setProcessLimit(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.NetworkStats: void <init>(long,int)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.INetworkManagementService: void clearDefaultNetId()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.LocalSocketImpl: void writeba_native(byte[],int,int,java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.PowerManager: void setForbidWakeLockList(java.lang.String)>:<public>:<android.os.PowerManager>
<android.print.PrintJobInfo: void <init>(android.os.Parcel,android.print.PrintJobInfo.1)>:<>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.print.IPrintSpooler.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Insets: void <init>(int,int,int,int)>:<private>:<android.graphics.Insets>
<android.print.PrintAttributes.MediaSize: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.graphics.drawable.RippleBackground: void createPendingHardwareExit(int,int,int)>:<private>:<android.graphics.drawable.RippleBackground>
<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiConnectionStatistics.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiConnectionStatistics.1:android.os.Parcelable.Creator>
<android.hwtheme.HwThemeManager: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],android.app.LoadedApk)>:<public static>:<android.hwtheme.HwThemeManager>
<android.transition.Transition: java.lang.String getName()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.FragmentManagerImpl.5: void onAnimationEnd(android.animation.Animator)>:<public>:<android.app.FragmentManagerImpl.5:android.animation.AnimatorListenerAdapter>
<android.net.INetworkPolicyListener.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkPolicyListener.Stub:android.os.Binder,android.net.INetworkPolicyListener>
<android.renderscript.Byte2: byte dotProduct(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.graphics.Point: int hashCode()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.filterfw.core.Frame: void onFrameFetch()>:<protected>:<android.filterfw.core.Frame>
<android.app.ActivityView.ActivityContainerWrapper: void <init>(android.app.IActivityContainer)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.os.Debug: java.lang.String getCallers(int)>:<public static>:<android.os.Debug>
<android.app.HwCustSvcFactory.DummyFactoryImpl: void <init>(android.app.HwCustSvcFactory.1)>:<>:<android.app.HwCustSvcFactory.DummyFactoryImpl:android.app.HwCustSvcFactory.Factory>
<android.accounts.IAccountAuthenticator.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.app.ContextImpl: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.storage.IMountService.Stub.Proxy: void registerListener(android.os.storage.IMountServiceListener)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.renderscript.ScriptIntrinsicLUT: void setGreen(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.ScaleDrawable.ScaleState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: void onAttach(android.app.Activity)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.AnimationDrawable.AnimationState: void <init>(android.graphics.drawable.AnimationDrawable.AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster create()>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.graphics.Paint: void nativeGetStringBounds(long,long,java.lang.String,int,int,int,android.graphics.Rect)>:<private static native>:<android.graphics.Paint>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.net.wifi.RttManager.RttResult: void <init>()>:<public>:<android.net.wifi.RttManager.RttResult>
<android.app.IHwCustNotification: void setNotiActionButtonTextSize(android.content.Context,android.widget.RemoteViews,int)>:<public abstract>:<android.app.IHwCustNotification>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteCancelled()>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onResult(android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.os.Trace: void nativeTraceBegin(long,java.lang.String)>:<private static native>:<android.os.Trace>
<android.accounts.IAccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: long getFadeDuration()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.net.wifi.IWifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.FragmentManagerState:android.os.Parcelable>
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.os.PowerManager: void userActivity(long,boolean)>:<public>:<android.os.PowerManager>
<android.net.Uri: java.lang.String access.600()>:<static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.TrafficStats: android.net.NetworkStats getDataLayerSnapshotForUid(android.content.Context)>:<private static>:<android.net.TrafficStats>
<android.graphics.drawable.InsetDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.IPrintManager: void startPrinterStateTracking(android.print.PrinterId,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.renderscript.Byte2: android.renderscript.Byte2 div(android.renderscript.Byte2,android.renderscript.Byte2)>:<public static>:<android.renderscript.Byte2>
<android.net.wifi.HwWifiStatStore: void handleSupplicantStateChange(android.net.wifi.SupplicantState)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.graphics.PathMeasure: void native_setPath(long,long,boolean)>:<private static native>:<android.graphics.PathMeasure>
<android.renderscript.Float4: void negate()>:<public>:<android.renderscript.Float4>
<android.transition.TransitionInflater: void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition)>:<private>:<android.transition.TransitionInflater>
<android.app.ContextImpl: boolean bindServiceCommon(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.os.AsyncTask.3: void <init>(android.os.AsyncTask,java.util.concurrent.Callable)>:<>:<android.os.AsyncTask.3:java.util.concurrent.FutureTask>
<android.os.IUserManager.Stub.Proxy: android.os.Bundle getDefaultGuestRestrictions()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.webkit.Plugin: java.lang.String access.200(android.webkit.Plugin)>:<static>:<android.webkit.Plugin>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.graphics.RectF.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.RectF.1:android.os.Parcelable.Creator>
<android.os.Messenger: void send(android.os.Message)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.content.Context,int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.app.ActivityView: void setCallback(android.app.ActivityView.ActivityViewCallback)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.webkit.Plugin.PreferencesClickHandler: void handleClickEvent(android.content.Context)>:<public abstract>:<android.webkit.Plugin.PreferencesClickHandler>
<android.os.IMultiWinServiceCallBack.Stub: void <init>()>:<public>:<android.os.IMultiWinServiceCallBack.Stub:android.os.Binder,android.os.IMultiWinServiceCallBack>
<android.os.BaseBundle: java.lang.String getPairValue()>:<public>:<android.os.BaseBundle>
<android.net.LinkQualityInfo: void setLastDataSampleTime(long)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManager.Stub.Proxy: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.net.wifi.p2p.WifiP2pGroupList: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.webkit.WebView: boolean access.401(android.webkit.WebView,android.view.MotionEvent)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.filterfw.core.GLEnvironment: boolean nativeIsAnyContextActive()>:<private static native>:<android.filterfw.core.GLEnvironment>
<android.test.InstrumentationTestCase: void <init>()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.net.wifi.WifiScanner.HotlistSettings.1: android.net.wifi.WifiScanner.HotlistSettings createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiScanner.HotlistSettings.1:android.os.Parcelable.Creator>
<android.os.SystemVibrator: boolean hasVibrator()>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.graphics.drawable.ShapeDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiConfiguration.1: void <init>(android.net.wifi.WifiConfiguration)>:<>:<android.net.wifi.WifiConfiguration.1:java.util.Comparator>
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.graphics.PointF: boolean equals(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.1: void run()>:<public>:<android.graphics.drawable.DrawableContainer.1:java.lang.Runnable>
<android.app.usage.IUsageStatsManager.Stub.Proxy: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)>:<public>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.net.wifi.PPPOEInfo: void <init>(android.net.wifi.PPPOEInfo.Status,long)>:<public>:<android.net.wifi.PPPOEInfo:android.os.Parcelable>
<android.app.TabActivity: void ensureTabHost()>:<private>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.transition.ChangeTransform: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeTransform:android.transition.Transition>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.StopWatchMap: void start(java.lang.String)>:<public>:<android.filterfw.core.StopWatchMap>
<android.os.IMultiWinService.Stub.Proxy: void changeFrameSize(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.print.PrinterDiscoverySession: void handlePrintersRemoved(java.util.List)>:<private>:<android.print.PrinterDiscoverySession>
<android.os.StrictMode: void executeDeathPenalty(android.os.StrictMode.ViolationInfo)>:<private static>:<android.os.StrictMode>
<android.net.ConnectivityManager: boolean setProcessDefaultNetwork(android.net.Network)>:<public static>:<android.net.ConnectivityManager>
<android.graphics.pdf.PdfRenderer.Page: int getHeight()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.os.IUpdateLock.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IUpdateLock.Stub.Proxy:android.os.IUpdateLock>
<android.accounts.AccountManager.8: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.app.Activity,android.os.UserHandle)>:<>:<android.accounts.AccountManager.8:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.graphics.drawable.AnimatedVectorDrawable: void reverse()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.DhcpInfo: int describeContents()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.renderscript.Short4: android.renderscript.Short4 add(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.app.job.JobInfo.Builder: boolean access.400(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>:<public>:<android.os.PowerManager>
<android.net.IConnectivityManager: java.lang.String[] getTetheredDhcpRanges()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.renderscript.Allocation: void validateBitmapSize(android.graphics.Bitmap)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.drm.DrmManagerClient: int access.400(android.drm.DrmManagerClient,int)>:<static>:<android.drm.DrmManagerClient>
<android.hwtheme.HwThemeManager: boolean installDefaultHwTheme(android.content.Context)>:<public static>:<android.hwtheme.HwThemeManager>
<android.os.FileUtils: boolean isValidExtFilename(java.lang.String)>:<public static>:<android.os.FileUtils>
<android.app.usage.ConfigurationStats: long getLastTimeActive()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.graphics.Path: void native_addCircle(long,float,float,float,int)>:<private static native>:<android.graphics.Path>
<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.Frame: int decRefCount()>:<final>:<android.filterfw.core.Frame>
<android.os.BatteryStats: long getNetworkActivityBytes(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.Parcel: void writeByteArray(byte[],int,int)>:<public final>:<android.os.Parcel>
<android.net.wifi.IWifiManager: int getWifiApEnabledState()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.Uri.PathSegments: java.lang.Object get(int)>:<public volatile>:<android.net.Uri.PathSegments:java.util.AbstractList,java.util.AbstractCollection,java.util.RandomAccess>
<android.graphics.drawable.AnimatedVectorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Short3: void mod(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getSecureContainerPath(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.backup.BackupTransport.TransportImpl: android.app.backup.RestoreDescription nextRestorePackage()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.webkit.WebView: android.view.View getZoomControls()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.INetworkManagementService: void allowProtect(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteStatement: long executeInsert()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.app.Activity.ManagedCursor: boolean access.202(android.app.Activity.ManagedCursor,boolean)>:<static>:<android.app.Activity.ManagedCursor>
<android.net.http.HttpAuthHeader: boolean isDigest()>:<public>:<android.net.http.HttpAuthHeader>
<android.renderscript.RenderScript: void nScriptSetVarV(long,int,byte[])>:<>:<android.renderscript.RenderScript>
<android.app.IApplicationThread: void scheduleCancelVisibleBehind(android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setInProgressLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.app.WallpaperInfo: java.lang.String getPackageName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.wifi.WifiCHRStateManager: void updateAPSsid(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.os.IUserManager.Stub.Proxy: java.util.List getProfiles(int,boolean)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.http.AndroidHttpClientConnection: void doFlush()>:<protected>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.app.FragmentManagerImpl: int getBackStackEntryCount()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.job.JobInfo: android.content.ComponentName getService()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.drawable.RippleBackground: void getBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.RippleBackground>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.net.DhcpResults.1: android.net.DhcpResults[] newArray(int)>:<public>:<android.net.DhcpResults.1:android.os.Parcelable.Creator>
<android.filterfw.core.NativeProgram: boolean callNativeInit()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.opengl.GLU: void <init>()>:<public>:<android.opengl.GLU>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>:<public abstract>:<android.sax.StartElementListener>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>:<public>:<android.os.UserManager>
<android.app.IActivityManager: void enterSafeMode()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glLoadMatrixf(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Path: void native_offset(long,float,float,long)>:<private static native>:<android.graphics.Path>
<android.net.VpnService.Builder: android.net.VpnService.Builder setBlocking(boolean)>:<public>:<android.net.VpnService.Builder>
<android.net.LinkProperties: java.util.List getAllLinkAddresses()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.renderscript.Double3: int length()>:<public>:<android.renderscript.Double3>
<android.os.BaseBundle: int getInt(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>:<public>:<android.sax.Element>
<android.app.Fragment: void onLowMemory()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.LoadedApk.WarningContextClassLoader: java.net.URL getResource(java.lang.String)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.print.IPrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>:<final>:<android.app.ActivityThread>
<android.app.ContextImpl.43: void <init>()>:<>:<android.app.ContextImpl.43:android.app.ContextImpl.ServiceFetcher>
<android.accounts.AuthenticatorDescription.1: void <init>()>:<>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.graphics.drawable.BitmapDrawable: void initializeWithState(android.graphics.drawable.BitmapDrawable.BitmapState,android.content.res.Resources)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.webkit.EventLogTags: void writeBrowserDoubleTapDuration(int,long)>:<public static>:<android.webkit.EventLogTags>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.net.wifi.SupplicantState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.SupplicantState.1:android.os.Parcelable.Creator>
<android.print.PrinterId: void <init>(android.os.Parcel,android.print.PrinterId.1)>:<>:<android.print.PrinterId:android.os.Parcelable>
<android.net.ProxyDataTracker: void startMonitoring(android.content.Context,android.os.Handler)>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.database.CursorWindow: boolean isBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.INetworkManagementService: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])>:<public transient>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.os.TokenWatcher.1: void <init>(android.os.TokenWatcher)>:<>:<android.os.TokenWatcher.1:java.lang.Runnable>
<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>:<public>:<android.app.ActivityTransitionState>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()>:<public>:<android.filterfw.core.FilterFunction>
<android.app.job.JobInfo.1: android.app.job.JobInfo[] newArray(int)>:<public>:<android.app.job.JobInfo.1:android.os.Parcelable.Creator>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>:<public>:<android.filterfw.geometry.Point>
<android.os.INetworkManagementService: void removeInterfaceQuota(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.CommonClock: int getEstimatedError()>:<public>:<android.os.CommonClock>
<android.filterfw.core.FilterGraph: void removeFilter(android.filterfw.core.Filter)>:<private>:<android.filterfw.core.FilterGraph>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.IActivityManager: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityThread: android.os.Handler getHandler()>:<final>:<android.app.ActivityThread>
<android.app.ActivityThread: void callCallActivityOnSaveInstanceState(android.app.ActivityThread.ActivityClientRecord)>:<private>:<android.app.ActivityThread>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.nsd.NsdManager: void init()>:<private>:<android.net.nsd.NsdManager>
<android.opengl.GLLogWrapper: void glLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.nsd.NsdServiceInfo: void <init>()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.os.Bundle: void putShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.WebSettings: void setCacheMode(int)>:<public abstract>:<android.webkit.WebSettings>
<android.filterfw.core.NativeFrame: boolean nativeDeallocate()>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>:<public static native>:<android.graphics.NinePatch>
<android.os.INetworkManagementService: java.lang.String[] listTtys()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.ColorMatrix: void <init>(float[])>:<public>:<android.graphics.ColorMatrix>
<android.database.AbstractCursor: boolean isBeforeFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.ActivityOptions.1: void <init>(android.app.ActivityOptions,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>:<>:<android.app.ActivityOptions.1:android.os.IRemoteCallback.Stub>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>:<public final>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.arp.MultiGW: java.lang.String macByte2String(byte[])>:<private>:<android.net.arp.MultiGW>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void <init>(android.app.ActivityView)>:<private>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.webkit.WebSettings: void setMinimumFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.print.PrintManager: void cancelPrintJob(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.app.IActivityManager: android.graphics.Point getAppTaskThumbnailSize()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.LinkQualityInfo: int getTheoreticalRxBandwidth()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.net.wifi.IWifiManager: int getVerboseLoggingLevel()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.NetworkStateTracker: boolean teardown()>:<public abstract>:<android.net.NetworkStateTracker>
<android.webkit.WebViewProvider: void setHorizontalScrollbarOverlay(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.Notification.WearableExtender: void <init>()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.NetworkInfo.1: android.net.NetworkInfo[] newArray(int)>:<public>:<android.net.NetworkInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiCHRStateManager: void updateStrucRoutes(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.ActionBar: int getHideOffset()>:<public>:<android.app.ActionBar>
<android.app.backup.WallpaperBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.WallpaperBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>:<public>:<android.graphics.Interpolator>
<android.net.wifi.HwWifiStatStore.SSIDStat: void <init>(android.net.wifi.HwWifiStatStore)>:<private>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLLogWrapper: void glRotatef(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.WallpaperInfo: java.lang.String getServiceName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.os.Parcel: void writeList(java.util.List)>:<public final>:<android.os.Parcel>
<android.net.wifi.RttManager.ParcelableRttResults.1: android.net.wifi.RttManager.ParcelableRttResults[] newArray(int)>:<public>:<android.net.wifi.RttManager.ParcelableRttResults.1:android.os.Parcelable.Creator>
<android.app.admin.DeviceAdminInfo.PolicyInfo: void <init>(int,java.lang.String,int,int)>:<public>:<android.app.admin.DeviceAdminInfo.PolicyInfo>
<android.filterfw.core.FilterPort: android.filterfw.core.Frame pullFrame()>:<public abstract>:<android.filterfw.core.FilterPort>
<android.app.IUiAutomationConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IUiAutomationConnection.Stub:android.os.Binder,android.app.IUiAutomationConnection>
<android.graphics.Camera: float dotWithNormal(float,float,float)>:<public native>:<android.graphics.Camera>
<android.renderscript.Element: android.renderscript.Element.DataKind getDataKind()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.DialogFragment: boolean getShowsDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.os.IBatteryPropertiesRegistrar: void registerListener(android.os.IBatteryPropertiesListener)>:<public abstract>:<android.os.IBatteryPropertiesRegistrar:android.os.IInterface>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>:<public>:<android.graphics.NinePatch>
<android.net.dhcp.DhcpDiscoverPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpDiscoverPacket:android.net.dhcp.DhcpPacket>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap getDefaultWallpaperLocked(android.content.Context)>:<private>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.app.ContextImpl.35: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.35:android.app.ContextImpl.ServiceFetcher>
<android.database.CursorWindow: int describeContents()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.JobSchedulerImpl: void <init>(android.app.job.IJobScheduler)>:<>:<android.app.JobSchedulerImpl:android.app.job.JobScheduler>
<android.app.MediaRouteButton: void showDialog()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: android.graphics.Paint getPaint(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.accounts.IAccountManager.Stub.Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.job.IJobScheduler.Stub.Proxy: void cancelAll()>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.transition.Scene: void <init>(android.view.ViewGroup)>:<public>:<android.transition.Scene>
<android.graphics.Interpolator.Result: void <clinit>()>:<static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.print.PrinterInfo: android.print.PrinterId getId()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam[] values()>:<public static>:<android.renderscript.Program.ProgramParam:java.lang.Enum>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.String,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.PendingIntent.FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>:<public>:<android.app.PendingIntent.FinishedDispatcher:android.content.IIntentReceiver.Stub,java.lang.Runnable>
<android.renderscript.Byte2: android.renderscript.Byte2 add(android.renderscript.Byte2,android.renderscript.Byte2)>:<public static>:<android.renderscript.Byte2>
<android.webkit.WebChromeClient: void setupAutoFill(android.os.Message)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.SurfaceTexture: void nativeFinalize()>:<private native>:<android.graphics.SurfaceTexture>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void stopAllocCounting()>:<public>:<android.app.Instrumentation>
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.os.Debug: int getGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.app.ITransientNotification: void show()>:<public abstract>:<android.app.ITransientNotification:android.os.IInterface>
<android.app.ContextImpl.59: void <init>()>:<>:<android.app.ContextImpl.59:android.app.ContextImpl.ServiceFetcher>
<android.print.PrintJobInfo: void setState(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.NetworkTemplate: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glClearDepthf(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityContainer.Stub.Proxy: void checkEmbeddedAllowed(android.content.Intent)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>:<public static>:<android.app.RemoteInput:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.ActivityManagerProxy: void releasePersistableUriPermission(android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.CursorWrapper: boolean moveToFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.net.MobileDataStateTracker.2: void <clinit>()>:<static>:<android.net.MobileDataStateTracker.2>
<android.print.PrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.accounts.AccountAndUser: int hashCode()>:<public>:<android.accounts.AccountAndUser>
<android.app.IWallpaperManager: void setWallpaperComponent(android.content.ComponentName)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.graphics.Region: java.lang.String nativeToString(long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getVibratorOnTimer()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.EnterTransitionCoordinator.2: void <init>(android.app.EnterTransitionCoordinator,android.view.ViewGroup,android.util.ArrayMap)>:<>:<android.app.EnterTransitionCoordinator.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.http.HttpConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>:<>:<android.net.http.HttpConnection:android.net.http.Connection>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void setTransactionId(int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Type: int getX()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.app.UiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityThread: void handleBindApplication(android.app.ActivityThread.AppBindData)>:<private>:<android.app.ActivityThread>
<android.print.PrintJobId.1: android.print.PrintJobId[] newArray(int)>:<public>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.net.Network: void bindSocket(java.net.DatagramSocket)>:<public>:<android.net.Network:android.os.Parcelable>
<android.app.BackStackRecord: void bumpBackStackNesting(int)>:<>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query orderBy(java.lang.String,int)>:<public>:<android.app.DownloadManager.Query>
<android.net.wifi.p2p.WifiP2pDevice: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.hwtheme.HwThemeManager: android.graphics.Bitmap generateBitmap(android.content.Context,android.graphics.Bitmap,int,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.SurfaceTexture.1: void <init>(android.graphics.SurfaceTexture,android.os.Looper,android.os.Handler.Callback,boolean,android.graphics.SurfaceTexture.OnFrameAvailableListener)>:<>:<android.graphics.SurfaceTexture.1:android.os.Handler>
<android.net.wifi.IWifiManager: void enableTdlsWithMacAddress(java.lang.String,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>:<public>:<android.app.SharedElementCallback>
<android.hsm.HwSystemManager: void <clinit>()>:<static>:<android.hsm.HwSystemManager>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.UserHandle: java.lang.String toString()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.net.wifi.WifiScanner.ServiceHandler: void <init>(android.os.Looper)>:<>:<android.net.wifi.WifiScanner.ServiceHandler:android.os.Handler>
<android.app.SearchDialog: boolean isOutOfBounds(android.view.View,android.view.MotionEvent)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.net.http.Headers: java.lang.String getProxyAuthenticate()>:<public>:<android.net.http.Headers>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.app.FragmentManagerImpl: void reportBackStackChanged()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.'annotation'.SdkConstant: android.'annotation'.SdkConstant.SdkConstantType value()>:<public abstract>:<android.annotation.SdkConstant:java.lang.annotation.Annotation>
<android.opengl.GLES20: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object)>:<private static>:<android.os.Handler>
<android.app.ActivityThread.1: void <init>(android.app.ActivityThread)>:<>:<android.app.ActivityThread.1:java.lang.Runnable>
<android.app.ActivityManagerProxy: boolean isInLockTaskMode()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>:<public>:<android.os.UserManager>
<android.os.ParcelUuid: void <clinit>()>:<static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.net.BaseNetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.job.IJobCallback.Stub: android.app.job.IJobCallback asInterface(android.os.IBinder)>:<public static>:<android.app.job.IJobCallback.Stub:android.os.Binder,android.app.job.IJobCallback>
<android.webkit.WebViewProvider: void invokeZoomPicker()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Bitmap.UidMatcher: void <init>()>:<>:<android.graphics.Bitmap.UidMatcher>
<android.net.NetworkStats: int describeContents()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.database.AbstractCursor: boolean isNull(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.webkit.WebViewProvider: void findNext(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.Parcel: void readBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<android.graphics.Matrix: boolean postRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.hwtheme.HwThemeManagerDummy: boolean isTRingtones(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.wifi.p2p.WifiP2pManager: void deletePersistentGroup(android.net.wifi.p2p.WifiP2pManager.Channel,int,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.WebBackForwardList: void <init>()>:<public>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.IMultiWinService: void setMWOtherTaskID(android.os.IBinder,int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.drawable.GradientDrawable.GradientState: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: void performActivityCreated(android.os.Bundle)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public static>:<android.graphics.drawable.Drawable>
<android.app.Dialog: android.content.Context getContext()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.AsyncTask.4: void <clinit>()>:<static>:<android.os.AsyncTask.4>
<android.app.backup.BackupManager: java.lang.String selectBackupTransport(java.lang.String)>:<public>:<android.app.backup.BackupManager>
<android.app.SearchDialog: void launchQuerySearch(int,java.lang.String)>:<protected>:<android.app.SearchDialog:android.app.Dialog>
<android.os.ConditionVariable: void <init>(boolean)>:<public>:<android.os.ConditionVariable>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)>:<public>:<android.app.ActionBar>
<android.database.sqlite.SQLiteConnection: void finalize()>:<protected>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.storage.StorageVolume: boolean equals(java.lang.Object)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.graphics.Point: boolean equals(java.lang.Object)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Float3: java.lang.Float elementSum()>:<public>:<android.renderscript.Float3>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupLimit()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.mtp.MtpDatabase: boolean getObjectInfo(int,int[],char[],long[])>:<private>:<android.mtp.MtpDatabase>
<android.renderscript.RenderScript: long nAllocationCreateFromBitmap(long,int,android.graphics.Bitmap,int)>:<>:<android.renderscript.RenderScript>
<android.renderscript.RenderScript: void nProgramBindSampler(long,int,long)>:<>:<android.renderscript.RenderScript>
<android.net.NetworkIdentity: void <init>(int,int,java.lang.String,java.lang.String,boolean)>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.graphics.drawable.VectorDrawable.VFullPath: float getTrimPathOffset()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.renderscript.RenderScript: android.view.Surface rsnAllocationGetSurface(long,long)>:<native>:<android.renderscript.RenderScript>
<android.drm.DrmUtils: void removeFile(java.lang.String)>:<static>:<android.drm.DrmUtils>
<android.opengl.GLLogWrapper: void glGetFixedv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.filterfw.core.NativeFrame: void releaseNativeAllocation()>:<protected>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.TemporaryBuffer: void recycle(char[])>:<public static>:<android.graphics.TemporaryBuffer>
<android.opengl.GLException: void <init>(int,java.lang.String)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.graphics.drawable.StateListDrawable.StateListState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintAttributes.Builder: void <init>()>:<public>:<android.print.PrintAttributes.Builder>
<android.app.backup.IRestoreObserver: void restoreStarting(int)>:<public abstract>:<android.app.backup.IRestoreObserver:android.os.IInterface>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.os.Trace: void nativeTraceEnd(long)>:<private static native>:<android.os.Trace>
<android.app.ActivityManagerProxy: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.JankEventData: void <clinit>()>:<static>:<android.os.JankEventData:android.os.Parcelable>
<android.renderscript.Allocation: void updateFromNative()>:<>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.Bundle: float getFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.ResultReceiver.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.ResultReceiver.1:android.os.Parcelable.Creator>
<android.os.BatteryStats.Uid: void <init>()>:<public>:<android.os.BatteryStats.Uid>
<android.emoji.EmojiFactory: android.emoji.EmojiFactory newAvailableInstance()>:<public static native>:<android.emoji.EmojiFactory>
<android.opengl.GLSurfaceView.ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>:<private>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.app.LoadedApk.ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.ConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActionBar: void setSelectedNavigationItem(int)>:<public abstract>:<android.app.ActionBar>
<android.app.IActivityManager: boolean isIntentSenderAnActivity(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Parcel: void destroy()>:<private>:<android.os.Parcel>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>:<public static native>:<android.opengl.EGL14>
<android.graphics.FontListParser: void <init>()>:<public>:<android.graphics.FontListParser>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void _nativeClassInit()>:<private static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.io.TextGraphReader.ImportPackageCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader.ImportPackageCommand:android.filterfw.io.TextGraphReader.Command>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.webkit.WebSettings.ZoomDensity: void <clinit>()>:<static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.os.INetworkActivityListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.INetworkActivityListener.Stub:android.os.Binder,android.os.INetworkActivityListener>
<android.renderscript.Long2: void div(long)>:<public>:<android.renderscript.Long2>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asLandscape()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection.PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.http.HttpsConnection: java.lang.String toString()>:<public volatile>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.net.ScoredNetwork: java.lang.String toString()>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.print.PrintDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float)>:<public>:<android.filterfw.geometry.Quad>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertexFixedFunction.InternalBuilder:android.renderscript.Program.BaseProgramBuilder>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>:<public>:<android.webkit.WebViewClient>
<android.net.http.RequestQueue.SyncFeeder: void <init>()>:<>:<android.net.http.RequestQueue.SyncFeeder:android.net.http.RequestFeeder>
<android.hsm.MediaTransactWrapper: void musicPlaying(int,int)>:<public static>:<android.hsm.MediaTransactWrapper>
<android.graphics.Paint.Style: android.graphics.Paint.Style valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.os.BatteryStats: long computeWakeLock(android.os.BatteryStats.Timer,long,int)>:<private static>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.nsd.NsdManager: int getListenerKey(java.lang.Object)>:<private>:<android.net.nsd.NsdManager>
<android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>:<public static final native>:<android.os.Process>
<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.os.IBinder,boolean,boolean)>:<final>:<android.app.ActivityThread>
<android.net.wifi.BatchedScanResult: void <clinit>()>:<static>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.IConnectivityManager: java.lang.String[] getTetherableIfaces()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.filterfw.core.ShaderProgram: void setTimer()>:<private>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.wifi.WifiManager: void forget(int,android.net.wifi.WifiManager.ActionListener)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean)>:<private static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.app.PackageInstallObserver.1: void onUserActionRequired(android.content.Intent)>:<public>:<android.app.PackageInstallObserver.1:android.content.pm.IPackageInstallObserver2.Stub>
<android.mtp.MtpObjectInfo: int getParent()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.FragmentManager: void popBackStack(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Atlas.Policy: void <init>()>:<private>:<android.graphics.Atlas.Policy>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.os.WorkSource: void set(int,java.lang.String)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator.1: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>:<>:<android.accounts.AbstractAccountAuthenticator.1:java.lang.Runnable>
<android.app.backup.AbsoluteFileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.AbsoluteFileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.IEthernetManager.Stub.Proxy: void setConfiguration(android.net.IpConfiguration)>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.os.IMultiWinService.Stub.Proxy: int getTaskPosition(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.NetworkInfo.DetailedState: void <clinit>()>:<static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.FontListParser: android.graphics.FontListParser.Alias readAlias(org.xmlpull.v1.XmlPullParser)>:<private static>:<android.graphics.FontListParser>
<android.net.nsd.DnsSdTxtRecord.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.nsd.DnsSdTxtRecord.1:android.os.Parcelable.Creator>
<android.net.WifiKey: int hashCode()>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)>:<public abstract>:<android.filterfw.io.GraphReader>
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>:<public>:<android.app.ApplicationLoaders>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.NetworkKey.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkKey.1:android.os.Parcelable.Creator>
<android.renderscript.Double4: void setAt(int,double)>:<public>:<android.renderscript.Double4>
<android.app.ContextImpl: android.content.res.Resources getResources()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.IActivityManager: boolean willActivityBeVisible(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.BitmapDrawable.BitmapState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.VectorDrawable.VFullPath: void setTrimPathStart(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.drm.DrmManagerClient: void createListeners()>:<private>:<android.drm.DrmManagerClient>
<android.database.sqlite.SQLiteConnection.Operation: void describe(java.lang.StringBuilder,boolean)>:<public>:<android.database.sqlite.SQLiteConnection.Operation>
<android.app.IActivityManager: int startActivityFromRecents(int,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.MffEnvironment: void <init>(android.filterfw.core.FrameManager)>:<protected>:<android.filterfw.MffEnvironment>
<android.webkit.WebViewProvider.ViewDelegate: void setScrollBarStyle(int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.storage.IMountShutdownObserver.Stub: android.os.storage.IMountShutdownObserver asInterface(android.os.IBinder)>:<public static>:<android.os.storage.IMountShutdownObserver.Stub:android.os.Binder,android.os.storage.IMountShutdownObserver>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.Activity: void initWindowDecorActionBar()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.io.TextGraphReader: void expectSettingClass(java.lang.String,java.lang.Object,java.lang.Class)>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.net.LocalSocketImpl: void close()>:<public>:<android.net.LocalSocketImpl>
<android.net.wifi.p2p.WifiP2pConfig: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean saveConfiguration()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.RenderScript: void validate()>:<>:<android.renderscript.RenderScript>
<android.renderscript.Byte4: byte length()>:<public>:<android.renderscript.Byte4>
<android.net.wifi.PPPOEInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.PPPOEInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: void invalidateSelf()>:<public>:<android.graphics.drawable.Drawable>
<android.net.NetworkStatsHistory.1: android.net.NetworkStatsHistory[] newArray(int)>:<public>:<android.net.NetworkStatsHistory.1:android.os.Parcelable.Creator>
<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Font.1: void <clinit>()>:<static>:<android.renderscript.Font.1>
<android.app.Notification.BigTextStyle: void populateBigContentView(android.app.Notification)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.app.Fragment: void performLowMemory()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ActivityThread.H: void maybeSnapshot()>:<private>:<android.app.ActivityThread.H:android.os.Handler>
<android.renderscript.RSTextureView: void destroyRenderScriptGL()>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.os.FileBridge.FileBridgeOutputStream: void writeCommandAndBlock(int,java.lang.String)>:<private>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.os.PowerManager: void boostScreenBrightness(long)>:<public>:<android.os.PowerManager>
<android.app.Activity: void openOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.LevelListDrawable.LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getHost()>:<public>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.accessibilityservice.AccessibilityService: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(java.lang.String)>:<private>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.ContextImpl.9: void <init>()>:<>:<android.app.ContextImpl.9:android.app.ContextImpl.ServiceFetcher>
<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)>:<public>:<android.net.http.RequestHandle>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode valueOf(java.lang.String)>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.net.wifi.p2p.WifiP2pGroupList.2: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pGroupList.2:android.os.Parcelable.Creator>
<android.app.Notification.MediaStyle: void populateBigContentView(android.app.Notification)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.app.IActivityManager: void setImmersive(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ExitTransitionCoordinator: boolean access.1002(android.app.ExitTransitionCoordinator,boolean)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.IUserManager.Stub.Proxy: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.http.ConnectionThread: void run()>:<public>:<android.net.http.ConnectionThread:java.lang.Thread>
<android.transition.Crossfade: int getResizeBehavior()>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.InsetDrawable: int getOpacity()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.IPrintDocumentAdapterObserver.Stub: void <init>()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.app.backup.IRestoreObserver: void restoreFinished(int)>:<public abstract>:<android.app.backup.IRestoreObserver:android.os.IInterface>
<android.print.IPrintSpoolerCallbacks.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.app.ActivityManagerProxy: int startActivityFromRecents(int,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Handler: boolean post(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.app.BackStackRecord: void setSharedElementEpicenter(android.transition.Transition,android.app.BackStackRecord.TransitionState)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.RippleDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.print.PrinterDiscoverySession: void validatePrinters(java.util.List)>:<public final>:<android.print.PrinterDiscoverySession>
<android.app.VoiceInteractor.2: void deliverAbortVoiceResult(com.android.internal.app.IVoiceInteractorRequest,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.Movie: int duration()>:<public native>:<android.graphics.Movie>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.os.FileUtils: int setPermissions(java.io.FileDescriptor,int,int,int)>:<public static>:<android.os.FileUtils>
<android.graphics.Outline: void set(android.graphics.Outline)>:<public>:<android.graphics.Outline>
<android.app.Presentation: void handleDisplayRemoved()>:<private>:<android.app.Presentation:android.app.Dialog>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.graphics.NinePatch: void nativeDraw(long,android.graphics.RectF,long,long,long,int,int)>:<private static native>:<android.graphics.NinePatch>
<android.hsm.HwSystemManager.HsmInterface: android.location.Location getFakeLocation(java.lang.String)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.opengl.GLErrorWrapper: boolean glIsRenderbufferOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Byte2: void add(byte)>:<public>:<android.renderscript.Byte2>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel valueOf(java.lang.String)>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.app.BackStackRecord: java.util.ArrayList addTransitionTargets(android.app.BackStackRecord.TransitionState,android.transition.Transition,android.transition.Transition,android.transition.Transition,android.view.View,android.app.Fragment,android.app.Fragment,java.util.ArrayList,boolean,java.util.ArrayList)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectFileUriExposure()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.renderscript.RenderScriptGL: int getWidth()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.app.Dialog: void hide()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.http.Headers: void <init>()>:<public>:<android.net.http.Headers>
<android.net.INetworkScoreService.Stub: android.net.INetworkScoreService asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkScoreService.Stub:android.os.Binder,android.net.INetworkScoreService>
<android.os.storage.StorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.os.storage.StorageEventListener>
<android.graphics.pdf.PdfDocument: void <init>()>:<public>:<android.graphics.pdf.PdfDocument>
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>:<public>:<android.net.ConnectivityManager>
<android.webkit.WebView: void stopLoading()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.IActivityManager: boolean startUserInBackground(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.AnimatedVectorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: void onStart()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLErrorWrapper: void glScalex(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiInfo: void <init>(android.net.wifi.WifiInfo)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setActiveAdmin(android.content.ComponentName,boolean,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.webkit.WebView: void destroy()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliableSocketPair()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.IUiModeManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,int,android.content.ComponentName,android.os.Bundle)>:<private>:<android.appwidget.AppWidgetManager>
<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.filterfw.core.NativeProgram: boolean bindTeardownFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.webkit.WebViewProvider.ScrollDelegate: void computeScroll()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.AppOpsManager.OnOpChangedInternalListener: void onOpChanged(java.lang.String,java.lang.String)>:<public>:<android.app.AppOpsManager.OnOpChangedInternalListener:android.app.AppOpsManager.OnOpChangedListener>
<android.graphics.Canvas: void drawColor(int)>:<public>:<android.graphics.Canvas>
<android.mtp.MtpPropertyGroup: android.mtp.MtpPropertyGroup.Property createProperty(int,java.util.ArrayList)>:<private>:<android.mtp.MtpPropertyGroup>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiScanner.ScanListener: void onResults(android.net.wifi.ScanResult[])>:<public abstract>:<android.net.wifi.WifiScanner.ScanListener:android.net.wifi.WifiScanner.ActionListener>
<android.accessibilityservice.IAccessibilityServiceConnection: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.VoiceInteractor.2: void deliverCancel(com.android.internal.app.IVoiceInteractorRequest)>:<public>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.filterfw.core.FieldPort: android.filterfw.core.Frame pullFrame()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.os.IMultiWinService: int updateMultiWinPosition(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.BatteryStats.Uid: java.util.Map getJobStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.transition.Transition: boolean alreadyContains(int[],int)>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.net.LocalSocketImpl: void listen(int)>:<protected>:<android.net.LocalSocketImpl>
<android.net.wifi.IRttManager: android.os.Messenger getMessenger()>:<public abstract>:<android.net.wifi.IRttManager:android.os.IInterface>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(long,long,long,android.net.NetworkStatsHistory.Entry)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.WallpaperManager: void initGlobals(android.os.Looper)>:<static>:<android.app.WallpaperManager>
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.NetworkCapabilities: boolean satisfiedBySpecifier(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.os.BatteryStats.HistoryItem: void <init>(long,android.os.Parcel)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.graphics.drawable.LevelListDrawable.LevelListState: int indexOfLevel(int)>:<public>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.transition.ChangeBounds.6: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.6:android.util.Property>
<android.net.INetworkManagementEventObserver.Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkManagementEventObserver.Stub:android.os.Binder,android.net.INetworkManagementEventObserver>
<android.print.IPrintSpoolerClient.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.filterfw.core.GLEnvironment: void tearDown()>:<public>:<android.filterfw.core.GLEnvironment>
<android.webkit.WebViewProvider: boolean pageDown(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>:<public>:<android.graphics.Paint>
<android.app.Notification.InboxStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterGraph getGraph()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkMisc.1: android.net.NetworkMisc createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkMisc.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Notification.BuilderRemoteViews: android.app.Notification.BuilderRemoteViews clone()>:<public>:<android.app.Notification.BuilderRemoteViews:android.widget.RemoteViews>
<android.net.NetworkStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>:<public abstract>:<android.net.NetworkStateTracker>
<android.net.ConnectivityManager: void sendExpireMsgForFeature(android.net.NetworkCapabilities,int,int)>:<private>:<android.net.ConnectivityManager>
<android.os.storage.IMountService: int unmountSecureContainer(java.lang.String,boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.renderscript.ScriptIntrinsicLUT: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentState.1: void <init>()>:<>:<android.app.FragmentState.1:android.os.Parcelable.Creator>
<android.renderscript.Int2: void <init>(int)>:<public>:<android.renderscript.Int2>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public static>:<android.hsm.HwSystemManager>
<android.os.storage.IMountService.Stub.Proxy: int mountSecureContainer(java.lang.String,java.lang.String,int,boolean)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ActivityManager.MemoryInfo.1: android.app.ActivityManager.MemoryInfo[] newArray(int)>:<public>:<android.app.ActivityManager.MemoryInfo.1:android.os.Parcelable.Creator>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean setDeviceOwner(java.lang.String,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.drm.ProcessedData: byte[] getData()>:<public>:<android.drm.ProcessedData>
<android.net.MobileLinkQualityInfo: int getLteRssnr()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.appwidget.AppWidgetProviderInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.net.Uri.PathSegments: java.lang.String get(int)>:<public>:<android.net.Uri.PathSegments:java.util.AbstractList,java.util.AbstractCollection,java.util.RandomAccess>
<android.graphics.Camera: void <init>()>:<public>:<android.graphics.Camera>
<android.os.Process.ZygoteState: void <init>(android.net.LocalSocket,java.io.DataInputStream,java.io.BufferedWriter,java.util.List)>:<private>:<android.os.Process.ZygoteState>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>:<protected abstract>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.PrinterCapabilitiesInfo: java.lang.String toString()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.nsd.NsdManager: void removeListener(int)>:<private>:<android.net.nsd.NsdManager>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.os.Parcel: void writeLongArray(long[])>:<public final>:<android.os.Parcel>
<android.os.Binder: boolean isBinderAlive()>:<public>:<android.os.Binder:android.os.IBinder>
<android.graphics.drawable.RippleBackground: boolean draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.RippleBackground>
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean releaseWifiLock(android.os.IBinder)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.accounts.IAccountAuthenticator.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.database.CursorJoiner: void <clinit>()>:<static>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.app.ISearchManager.Stub.Proxy: boolean launchAssistAction(int,java.lang.String,int)>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.transition.Transition: android.transition.Transition removeTarget(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase.1: void <init>(android.database.sqlite.SQLiteDatabase)>:<>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.os.FileBridge: void <init>()>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.app.backup.RestoreSession.RestoreObserverWrapper: void restoreSetsAvailable(android.app.backup.RestoreSet[])>:<public>:<android.app.backup.RestoreSession.RestoreObserverWrapper:android.app.backup.IRestoreObserver.Stub,android.os.Binder>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.INotificationManager: android.service.notification.ZenModeConfig getZenModeConfig()>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.Registrant: android.os.Message messageForRegistrant()>:<public>:<android.os.Registrant>
<android.transition.TransitionSet: java.lang.Object clone()>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ExpandableListActivity: void onGroupExpand(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>:<final>:<android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection: boolean isCacheable(int)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.BaseNetworkStateTracker: void setPolicyDataEnable(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.wifi.WifiScanner.ScanSettings.1: android.net.wifi.WifiScanner.ScanSettings[] newArray(int)>:<public>:<android.net.wifi.WifiScanner.ScanSettings.1:android.os.Parcelable.Creator>
<android.graphics.Path: void addPath(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.os.StrictMode.5: void run()>:<public>:<android.os.StrictMode.5:java.lang.Thread>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.opengl.GLSurfaceView.EglHelper: void destroySurfaceImp()>:<private>:<android.opengl.GLSurfaceView.EglHelper>
<android.webkit.WebView.PrivateAccess: float getVerticalScrollFactor()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.net.InterfaceConfiguration: void validateFlag(java.lang.String)>:<private static>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.graphics.Region: void <init>(long)>:<>:<android.graphics.Region:android.os.Parcelable>
<android.net.http.SslCertificate: java.lang.String formatCertificateDate(android.content.Context,java.util.Date)>:<private>:<android.net.http.SslCertificate>
<android.os.IHDMIConnectService: void enableFullScreen(boolean)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean performGlobalAction(int)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.IMultiWinServiceCallBack.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IMultiWinServiceCallBack.Stub.Proxy:android.os.IMultiWinServiceCallBack>
<android.app.job.JobInfo: java.lang.String toString()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.os.Debug.MemoryInfo: int getOtherSwappablePss(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.opengl.GLDebugHelper: void <init>()>:<public>:<android.opengl.GLDebugHelper>
<android.net.IpPrefix.1: android.net.IpPrefix[] newArray(int)>:<public>:<android.net.IpPrefix.1:android.os.Parcelable.Creator>
<android.net.Uri.HierarchicalUri: boolean isRelative()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.Notification.Builder: boolean access.2400(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.database.CursorWindow: void nativeCopyStringToBuffer(long,int,int,android.database.CharArrayBuffer)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.IHardwareService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IHardwareService.Stub:android.os.Binder,android.os.IHardwareService>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList saveState(android.os.Bundle)>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>:<public>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.renderscript.Double3: double get(int)>:<public>:<android.renderscript.Double3>
<android.database.CharArrayBuffer: void <init>(int)>:<public>:<android.database.CharArrayBuffer>
<android.graphics.NinePatch.InsetStruct: void <init>(int,int,int,int,int,int,int,int,float,int,float)>:<>:<android.graphics.NinePatch.InsetStruct>
<android.accounts.IAccountManager.Stub.Proxy: void copyAccountToUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.net.LinkProperties: void setLinkAddresses(java.util.Collection)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>:<public>:<android.net.ConnectivityManager>
<android.app.trust.TrustManager.TrustListener: void onTrustManagedChanged(boolean,int)>:<public abstract>:<android.app.trust.TrustManager.TrustListener>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.net.NetworkUtils: boolean releaseDhcpLease(java.lang.String)>:<public static native>:<android.net.NetworkUtils>
<android.app.ExitTransitionCoordinator.10: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.ExitTransitionCoordinator.10:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.ActionBar>
<android.graphics.drawable.shapes.Shape: float getWidth()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.app.backup.BackupTransport.TransportImpl: java.lang.String dataManagementLabel()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.opengl.GLLogWrapper: void glFogfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.appwidget.AppWidgetProviderInfo: java.lang.String loadLabel(android.content.pm.PackageManager)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glFinish()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.String,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.filterfw.core.Scheduler: void reset()>:<abstract>:<android.filterfw.core.Scheduler>
<android.os.IMultiWinService.Stub.Proxy: int getTaskCountAtPos(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.http.HttpResponseCache: long maxSize()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.webkit.WebChromeClient: void <init>()>:<public>:<android.webkit.WebChromeClient>
<android.print.PrintJobInfo: java.lang.String getAdvancedStringOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.os.Parcel: void unmarshall(byte[],int,int)>:<public final>:<android.os.Parcel>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.VectorDrawable.VGroup: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.os.IMultiWinService.Stub.Proxy: boolean hasMwSession()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.BackStackState.1: android.app.BackStackState createFromParcel(android.os.Parcel)>:<public>:<android.app.BackStackState.1:android.os.Parcelable.Creator>
<android.graphics.Matrix: void mapVectors(float[],float[])>:<public>:<android.graphics.Matrix>
<android.app.job.IJobScheduler.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.graphics.pdf.PdfRenderer.Page: void <init>(android.graphics.pdf.PdfRenderer,int,android.graphics.pdf.PdfRenderer.1)>:<>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.os.storage.IMountService: int mkdirs(java.lang.String,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.webkit.WebViewFactoryProvider.Statics: void setWebContentsDebuggingEnabled(boolean)>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.RemoteCallback.1: void <init>()>:<>:<android.os.RemoteCallback.1:android.os.Parcelable.Creator>
<android.os.BaseBundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>:<>:<android.os.BaseBundle>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.graphics.pdf.PdfDocument: void writeTo(java.io.OutputStream)>:<public>:<android.graphics.pdf.PdfDocument>
<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>:<public static>:<android.app.ActivityOptions>
<android.graphics.LinearGradient: long nativeCreate1(float,float,float,float,int[],float[],int)>:<private native>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ContextImpl.5: void <init>()>:<>:<android.app.ContextImpl.5:android.app.ContextImpl.ServiceFetcher>
<android.accounts.AccountManager.Future2Task.1: void <init>(android.accounts.AccountManager.Future2Task)>:<>:<android.accounts.AccountManager.Future2Task.1:java.lang.Runnable>
<android.graphics.Canvas: void scale(float,float,float,float)>:<public final>:<android.graphics.Canvas>
<android.net.wifi.RttManager.ParcelableRttParams: int describeContents()>:<public>:<android.net.wifi.RttManager.ParcelableRttParams:android.os.Parcelable>
<android.filterfw.core.FilterContext.OnFrameReceivedListener: void onFrameReceived(android.filterfw.core.Filter,android.filterfw.core.Frame,java.lang.Object)>:<public abstract>:<android.filterfw.core.FilterContext.OnFrameReceivedListener>
<android.drm.DrmRights: java.lang.String getMimeType()>:<public>:<android.drm.DrmRights>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.wifi.HwWifiCHRService: int getPersistedScanAlwaysAvailable()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.webkit.WebSettings: void setForceUserScalable(boolean)>:<public>:<android.webkit.WebSettings>
<android.print.IPrintManager: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.graphics.drawable.ColorDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String capabilityToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.app.Activity: void setActionBar(android.widget.Toolbar)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkIdentity: int compareTo(android.net.NetworkIdentity)>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.hsm.HwSystemManager: android.hsm.HwSystemManager.HsmInterface getImplObject()>:<private static>:<android.hsm.HwSystemManager>
<android.net.IConnectivityManager.Stub.Proxy: void registerNetworkFactory(android.os.Messenger,java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.wifi.p2p.WifiP2pGroupList: void <init>(android.net.wifi.p2p.WifiP2pGroupList,android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.ActivityThread: void <clinit>()>:<static>:<android.app.ActivityThread>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.graphics.drawable.VectorDrawable.VFullPath: float getTrimPathStart()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.filterfw.core.StreamPort: android.filterfw.core.Frame pullFrame()>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.os.storage.StorageVolume: void <init>(android.os.Parcel,android.os.storage.StorageVolume.1)>:<>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.os.Bundle: void putParcelableList(java.lang.String,java.util.List)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.transition.TransitionInflater: void <clinit>()>:<static>:<android.transition.TransitionInflater>
<android.renderscript.Short3: android.renderscript.Short3 div(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.webkit.WebViewFactory: void createRelroFile(boolean,java.lang.String[])>:<private static>:<android.webkit.WebViewFactory>
<android.webkit.Plugin.DefaultClickHandler: void <init>(android.webkit.Plugin)>:<private>:<android.webkit.Plugin.DefaultClickHandler:android.webkit.Plugin.PreferencesClickHandler,android.content.DialogInterface.OnClickListener>
<android.opengl.EGLLogWrapper: void returns(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context)>:<public static>:<android.os.RecoverySystem>
<android.app.BackStackRecord: android.transition.Transition getEnterTransition(android.app.Fragment,boolean)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener,android.os.Handler)>:<public>:<android.graphics.SurfaceTexture>
<android.net.ConnectivityManager.NetworkCallback: void onAvailable(android.net.Network)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.net.wifi.BatchedScanSettings.1: android.net.wifi.BatchedScanSettings[] newArray(int)>:<public>:<android.net.wifi.BatchedScanSettings.1:android.os.Parcelable.Creator>
<android.net.wifi.ScanSettings.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.ScanSettings.1:android.os.Parcelable.Creator>
<android.app.backup.RestoreSet: void <init>(android.os.Parcel)>:<private>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.net.wifi.HwCustBaseWifiFactory: android.net.wifi.HwCustBaseWifiFactory.Factory getInstance()>:<public static>:<android.net.wifi.HwCustBaseWifiFactory>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix.1: void setSinCos(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.app.IActivityManager: int getActivityDisplayId(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.http.Request: void complete()>:<>:<android.net.http.Request>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.hwtheme.HwThemeManager: boolean installHwTheme(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.WifiManager: int getFrequencyBand()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void <init>(android.accounts.AccountManager,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Short3: void sub(short)>:<public>:<android.renderscript.Short3>
<android.net.dhcp.DhcpStateMachine: void onDiscoverReceived(boolean,int,byte[],byte[])>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.os.BatteryStats: boolean startIteratingHistoryLocked()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>:<public>:<android.net.http.SslCertificate.DName>
<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4f(int,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.GLFrame: boolean nativeDetachTexFromFbo()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.mtp.MtpDatabase: int setObjectReferences(int,int[])>:<private>:<android.mtp.MtpDatabase>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.RectF: void union(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.IPowerManager.Stub.Proxy: void reboot(boolean,java.lang.String,boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.opengl.EGLLogWrapper: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.renderscript.Double4: void div(double)>:<public>:<android.renderscript.Double4>
<android.app.Activity: void onNewIntent(android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.IActivityManager: void stopLockTaskModeOnCurrent()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Trace: void traceEnd(long)>:<public static>:<android.os.Trace>
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>:<public>:<android.database.ContentObserver>
<android.app.WallpaperManager.FastBitmapDrawable: void setBounds(int,int,int,int)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionResume(android.transition.Transition)>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManager.RunningServiceInfo.1: android.app.ActivityManager.RunningServiceInfo[] newArray(int)>:<public>:<android.app.ActivityManager.RunningServiceInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.ClipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: long rsnContextCreate(long,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.os.CommonTimeConfig: boolean getAutoDisable()>:<public>:<android.os.CommonTimeConfig>
<android.net.NetworkInfo: boolean isRoaming()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.print.PrintDocumentInfo: int access.302(android.print.PrintDocumentInfo,int)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: int resizeSecureContainer(java.lang.String,int,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.DhcpResults: boolean setGateway(java.lang.String)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.SharedElementCallback: void <init>()>:<public>:<android.app.SharedElementCallback>
<android.filterfw.core.ShaderProgram: void beginDrawing()>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1908(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Atlas.Policy: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.Policy>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>:<public>:<android.sax.Element>
<android.graphics.drawable.RotateDrawable: void setToDegrees(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.VectorDrawable.VGroup: android.graphics.Matrix access.700(android.graphics.drawable.VectorDrawable.VGroup)>:<static>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.graphics.drawable.Ripple: android.graphics.Paint getTempPaint(android.graphics.Paint)>:<private>:<android.graphics.drawable.Ripple>
<android.net.RssiCurve: void <clinit>()>:<static>:<android.net.RssiCurve:android.os.Parcelable>
<android.print.PrintAttributes.Margins: int getTopMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.app.AppOpsManager.OpEntry: int getOp()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.net.http.AndroidHttpClient.2: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>:<protected>:<android.net.http.AndroidHttpClient.2:org.apache.http.impl.client.DefaultHttpClient,org.apache.http.impl.client.AbstractHttpClient>
<android.app.ApplicationThreadProxy: void processInBackground()>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.mtp.MtpObjectInfo: int getFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.filterfw.core.NativeFrame: void <clinit>()>:<static>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.IUserManager.Stub.Proxy: int getUserSerialNumber(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.transition.Fade: android.animation.Animator createAnimation(android.view.View,float,float)>:<private>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.opengl.GLErrorWrapper: void glClientActiveTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.IWifiManager: boolean releaseWifiLock(android.os.IBinder)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.EGLObjectHandle: void <init>(int)>:<protected>:<android.opengl.EGLObjectHandle>
<android.net.DhcpStateMachine: void access.2200(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.app.IActivityManager: void moveTaskBackwards(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.TransitionValues: void <init>()>:<public>:<android.transition.TransitionValues>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintAvoidBackgroundClipping(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.opengl.GLES31: void glBindProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean installDefaultHwTheme(android.content.Context)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.backup.FileBackupHelperBase: int writeSnapshot_native(long,java.io.FileDescriptor)>:<private static native>:<android.app.backup.FileBackupHelperBase>
<android.renderscript.Short3: void copyTo(short[],int)>:<public>:<android.renderscript.Short3>
<android.renderscript.Double3: void add(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.webkit.WebView.PrivateAccess: void super_computeScroll()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.transition.ChangeTransform: void setReparent(boolean)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.database.MatrixCursor: double getDouble(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.net.wifi.p2p.WifiP2pConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pConfig.1:android.os.Parcelable.Creator>
<android.webkit.GeolocationPermissions: void clearAll()>:<public>:<android.webkit.GeolocationPermissions>
<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int)>:<private>:<android.app.ActivityThread>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.app.IActivityManager: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ListFragment.2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.app.ListFragment.2:android.widget.AdapterView.OnItemClickListener>
<android.renderscript.Path: void <init>(long,android.renderscript.RenderScript,android.renderscript.Path.Primitive,android.renderscript.Allocation,android.renderscript.Allocation,float)>:<>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.webkit.WebSettings: int getMinimumFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.util.List newInstance(java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.os.PowerManager: boolean isScreenOn()>:<public>:<android.os.PowerManager>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.graphics.Bitmap: void nativeReconfigure(long,int,int,int,int,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.LinkQualityInfo: int getNormalizedSignalStrength()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void unregisterListener(android.service.notification.INotificationListener,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.http.Timer: void <init>()>:<public>:<android.net.http.Timer>
<android.app.IActivityManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ProgressDialog: void <init>(android.content.Context)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.Matrix: void native_postScale(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.net.wifi.WifiLinkLayerStats.1: android.net.wifi.WifiLinkLayerStats createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiLinkLayerStats.1:android.os.Parcelable.Creator>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setTexture(float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.os.INetworkManagementService.Stub.Proxy: void setFirewallUidRule(int,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.INetworkManagementService: void setInterfaceAlert(java.lang.String,long)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ContextImpl: void preloadSharedPrefs()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.Visibility.2: void <init>(android.transition.Visibility,boolean,android.view.View,int)>:<>:<android.transition.Visibility.2:android.animation.AnimatorListenerAdapter>
<android.netdetect.HwCustNetDetectServiceImpl: boolean isInternetConnected()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.mtp.MtpServer: void native_send_all_storage_info_changed_if_needed()>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.webkit.WebSettings: boolean getSavePassword()>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.WifiScanner.OperationResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiScanner.OperationResult:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean reconnect()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>:<public>:<android.net.LocalSocketImpl>
<android.net.wifi.p2p.WifiP2pDevice: void update(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.app.Activity: void onPause()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Canvas: long initRaster(long)>:<private static native>:<android.graphics.Canvas>
<android.net.UidRange.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.UidRange.1:android.os.Parcelable.Creator>
<android.app.ActivityThread.ApplicationThread: void scheduleTrimMemory(int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES10: void glPointSizex(int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.IpConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.graphics.FontFamily: boolean nAddFont(long,java.lang.String)>:<private static native>:<android.graphics.FontFamily>
<android.netdetect.HwCustNetDetectServiceImpl: void <init>(android.content.Context)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.net.DnsPinger: java.util.List getDnsList()>:<public>:<android.net.DnsPinger:android.os.Handler>
<android.net.TrafficStats: long getUidTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.accounts.IAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.renderscript.Byte2: void div(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.transition.Transition: void captureValues(android.view.ViewGroup,boolean)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.app.BackStackState: void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord)>:<public>:<android.app.BackStackState:android.os.Parcelable>
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>:<public static>:<android.opengl.GLUtils>
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.IActivityManager: void takePersistableUriPermission(android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.NativeFrame: int nativeFloatSize()>:<private static native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.Process: java.lang.String getAbiList(java.io.BufferedWriter,java.io.DataInputStream)>:<private static>:<android.os.Process>
<android.webkit.ConsoleMessage.MessageLevel: void <clinit>()>:<static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1600(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.INotificationManager.Stub.Proxy: int getHintsFromListener(android.service.notification.INotificationListener)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.Activity: java.lang.CharSequence getTitle()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ProfilerInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.DropBoxManager.Entry.1: android.os.DropBoxManager.Entry[] newArray(int)>:<public>:<android.os.DropBoxManager.Entry.1:android.os.Parcelable.Creator>
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>:<public>:<android.os.storage.StorageManager>
<android.os.IBatteryPropertiesListener.Stub: void <init>()>:<public>:<android.os.IBatteryPropertiesListener.Stub:android.os.Binder,android.os.IBatteryPropertiesListener>
<android.os.Debug: void printLoadedClasses(int)>:<public static>:<android.os.Debug>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Short2: void <init>(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh create()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.opengl.GLLogWrapper.PointerInfo: int getStride()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.app.job.IJobScheduler.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.os.Build: java.lang.String deriveFingerprint()>:<private static>:<android.os.Build>
<android.graphics.drawable.ColorDrawable: void setColor(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void invalidateFragment(java.lang.String)>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.IRestoreSession.Stub.Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.net.IEthernetManager.Stub.Proxy: android.net.IpConfiguration getConfiguration()>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.WebAddress: java.lang.String getHost()>:<public>:<android.net.WebAddress>
<android.app.ActivityManager: void restartPackage(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void clearCrossProfileIntentFilters(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.transition.TransitionUtils: void <clinit>()>:<static>:<android.transition.TransitionUtils>
<android.net.wifi.HuaweiApConfiguration.1: android.net.wifi.HuaweiApConfiguration createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.HuaweiApConfiguration.1:android.os.Parcelable.Creator>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.net.wifi.WifiManager: void disableEphemeralNetwork(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.job.JobService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.INotificationManager.Stub.Proxy: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.opengl.GLErrorWrapper: void glLineWidthx(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.wifi.RttManager: int putListener(java.lang.Object)>:<private static>:<android.net.wifi.RttManager>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket()>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>:<public static>:<android.graphics.drawable.Drawable>
<android.os.INetworkManagementService: void setMtu(java.lang.String,int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.backup.RestoreDescription: java.lang.String access.100(android.app.backup.RestoreDescription)>:<static>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.renderscript.RenderScript: long rsnProgramVertexCreate(long,java.lang.String,java.lang.String[],long[])>:<native>:<android.renderscript.RenderScript>
<android.net.NetworkFactory: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.renderscript.Double4: double get(int)>:<public>:<android.renderscript.Double4>
<android.renderscript.Allocation: void validateBitmapFormat(android.graphics.Bitmap)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.WebAddress: int getPort()>:<public>:<android.net.WebAddress>
<android.accounts.IAccountManager: java.lang.String getPreviousName(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.filterfw.core.RandomScheduler: void <init>(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.core.RandomScheduler:android.filterfw.core.Scheduler>
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()>:<>:<android.filterfw.core.Scheduler>
<android.app.backup.IFullBackupRestoreObserver: void onStartRestore()>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.opengl.GLES30: void glDeleteSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.InputPort: boolean isConnected()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.print.ILayoutResultCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.os.storage.StorageManager.ObbListenerDelegate.1: void handleMessage(android.os.Message)>:<public>:<android.os.storage.StorageManager.ObbListenerDelegate.1:android.os.Handler>
<android.app.TaskStackBuilder: void startActivities()>:<public>:<android.app.TaskStackBuilder>
<android.app.backup.WallpaperBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.WallpaperBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.renderscript.Allocation: void copyFrom(android.renderscript.Allocation)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.RippleDrawable.RippleState createConstantState(android.graphics.drawable.LayerDrawable.LayerState,android.content.res.Resources)>:<>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)>:<protected>:<android.filterfw.core.Filter>
<android.os.StrictMode.ViolationInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.os.StrictMode.ViolationInfo>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.IWifiManager.Stub.Proxy: void startWifi()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.mtp.MtpServer: void start()>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.renderscript.FieldPacker: short subI16()>:<public>:<android.renderscript.FieldPacker>
<android.app.Notification.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.Notification.1:android.os.Parcelable.Creator>
<android.graphics.Matrix.1: boolean postRotate(float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.app.Presentation.2: void onDisplayRemoved(int)>:<public>:<android.app.Presentation.2:android.hardware.display.DisplayManager.DisplayListener>
<android.os.AsyncTask.WorkerRunnable: void <init>()>:<private>:<android.os.AsyncTask.WorkerRunnable:java.util.concurrent.Callable>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.SearchableInfo: int getIconId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.net.wifi.IWifiManager.Stub.Proxy: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.IConnectivityManager: void setAirplaneMode(boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.wifi.IWifiManager: java.lang.String getWpsNfcConfigurationToken(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.filterfw.core.NativeProgram: boolean callNativeProcess(android.filterfw.core.NativeFrame[],android.filterfw.core.NativeFrame)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.webkit.CookieManager: void removeSessionCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Double4: void addAt(int,double)>:<public>:<android.renderscript.Double4>
<android.webkit.WebSyncManager: void resetSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.os.Parcel: void writeDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.DialogFragment: void dismissAllowingStateLoss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLErrorWrapper: void glGenTextures(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.RssiCurve: java.lang.String toString()>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.renderscript.Script: float getVarF(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config[] values()>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.database.BulkCursorToCursorAdaptor: boolean requery()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.os.TokenWatcher: int access.102(android.os.TokenWatcher,int)>:<static>:<android.os.TokenWatcher>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>:<public abstract>:<android.webkit.WebStorage.QuotaUpdater>
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>:<public>:<android.app.AlertDialog.Builder>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.accounts.GrantCredentialsPermissionActivity.1: void <init>(android.accounts.GrantCredentialsPermissionActivity,android.widget.TextView)>:<>:<android.accounts.GrantCredentialsPermissionActivity.1:android.accounts.AccountManagerCallback>
<android.net.NetworkInfo: void setType(int)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.database.Observable: void registerObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ActivityOptions: int getExitCoordinatorKey()>:<public>:<android.app.ActivityOptions>
<android.net.http.AndroidHttpClient: java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest,boolean)>:<private static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.LocalSocketImpl: void write_native(int,java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.app.NativeActivity: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.IAppTask.Stub.Proxy: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()>:<public>:<android.filterfw.core.FrameManager>
<android.opengl.GLLogWrapper: void glFogx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.RectF.1: android.graphics.RectF createFromParcel(android.os.Parcel)>:<public>:<android.graphics.RectF.1:android.os.Parcelable.Creator>
<android.webkit.WebBackForwardList: int getSize()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.graphics.Bitmap: void setPremultiplied(boolean)>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.RenderScript: void nAllocationRead2D(long,int,int,int,int,int,int,java.lang.Object,int,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.accounts.AbstractAccountAuthenticator: void checkBinderPermission()>:<private>:<android.accounts.AbstractAccountAuthenticator>
<android.net.SSLCertificateSocketFactory.1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>:<public>:<android.net.SSLCertificateSocketFactory.1:javax.net.ssl.X509TrustManager>
<android.os.UserManager: boolean isUserAGoat()>:<public>:<android.os.UserManager>
<android.graphics.NinePatch: void finalize()>:<protected>:<android.graphics.NinePatch>
<android.database.ContentObservable: void <init>()>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.print.PrintAttributes.Resolution: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.Resolution>
<android.graphics.Canvas: void native_drawTextOnPath(long,java.lang.String,long,float,float,int,long,long)>:<private static native>:<android.graphics.Canvas>
<android.net.NetworkUtils: boolean bindProcessToNetworkForHostResolution(int)>:<public static native>:<android.net.NetworkUtils>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Bitmap: android.graphics.NinePatch.InsetStruct getNinePatchInsets()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void onCancelled(android.filterfw.core.AsyncRunner.RunnerResult)>:<protected>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.app.ActivityThread.GcIdler: boolean queueIdle()>:<public final>:<android.app.ActivityThread.GcIdler:android.os.MessageQueue.IdleHandler>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String)>:<public static>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Byte3: void copyTo(byte[],int)>:<public>:<android.renderscript.Byte3>
<android.net.nsd.NsdManager.ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.ResolveListener>
<android.opengl.GLLogWrapper: void glBlendEquation(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Short2: void setValues(short,short)>:<public>:<android.renderscript.Short2>
<android.graphics.Insets: android.graphics.Insets of(android.graphics.Rect)>:<public static>:<android.graphics.Insets>
<android.net.NetworkPolicy: java.lang.String toString()>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.net.IConnectivityManager: int setUsbTethering(boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.print.IPrintDocumentAdapter: void kill(java.lang.String)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: void dumpUnsafe(android.util.Printer,boolean)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.Point: boolean equals(int,int)>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.graphics.Path: boolean isInverseFillType()>:<public>:<android.graphics.Path>
<android.hwtheme.HwThemeManagerDummy: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],android.app.LoadedApk)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.MobileDataStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.Uri: boolean isAllowed(char,java.lang.String)>:<private static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebViewDelegate.1: void run()>:<public>:<android.webkit.WebViewDelegate.1:java.lang.Runnable>
<android.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestFocus(int,android.graphics.Rect)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.app.backup.BackupTransport: int startRestore(long,android.content.pm.PackageInfo[])>:<public>:<android.app.backup.BackupTransport>
<android.webkit.WebViewProvider.ViewDelegate: void preDispatchDraw(android.graphics.Canvas)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.renderscript.RenderScript: void nDeviceDestroy(long)>:<native>:<android.renderscript.RenderScript>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>:<public>:<android.net.http.SslCertificate>
<android.app.Notification: boolean isValid()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.graphics.Atlas: void <init>(android.graphics.Atlas.Type,int,int)>:<public>:<android.graphics.Atlas>
<android.net.ConnectivityManager: void access.200(android.net.ConnectivityManager,android.net.NetworkCapabilities,int)>:<static>:<android.net.ConnectivityManager>
<android.net.MobileLinkQualityInfo: void setEvdoSnr(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.webkit.WebView: boolean canZoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.ProxyInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.ProxyInfo.1:android.os.Parcelable.Creator>
<android.net.DhcpInfo.1: android.net.DhcpInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.DhcpInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: android.renderscript.ProgramFragmentFixedFunction.Builder.Format[] values()>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.WebViewProvider: void onResume()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.os.Debug: void dumpHprofDataDdms()>:<public static>:<android.os.Debug>
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>:<public final>:<android.app.LoadedApk>
<android.app.ActivityManager.StackInfo.1: android.app.ActivityManager.StackInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.StackInfo.1:android.os.Parcelable.Creator>
<android.os.INetworkManagementService.Stub.Proxy: void stopAccessPoint(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.NetworkFactory: void unregister()>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.util.Date access.3102(android.net.wifi.HwWifiStatStore.SSIDStat,java.util.Date)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ISearchManager.Stub.Proxy: java.util.List getGlobalSearchActivities()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.Network.1: java.net.InetAddress[] getAllByName(java.lang.String)>:<public>:<android.net.Network.1:com.android.okhttp.HostResolver>
<android.app.AppOpsManager.OpEntry: boolean isRunning()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void buildSQL()>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountManager.7: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.UserHandle)>:<>:<android.accounts.AccountManager.7:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.graphics.Shader: void init(long)>:<protected>:<android.graphics.Shader>
<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.database.CursorWindow: int getType(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.alsa.AlsaDevicesParser: boolean access.302(android.alsa.AlsaDevicesParser,boolean)>:<static>:<android.alsa.AlsaDevicesParser>
<android.appwidget.AppWidgetHost.UpdateHandler: void handleMessage(android.os.Message)>:<public>:<android.appwidget.AppWidgetHost.UpdateHandler:android.os.Handler>
<android.os.WorkSource: boolean removeUidsAndNames(android.os.WorkSource)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(float,float)>:<public>:<android.filterfw.geometry.Point>
<android.webkit.WebView.PrivateAccess: void super_scrollTo(int,int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.graphics.Canvas.CanvasFinalizer: void <init>(long)>:<public>:<android.graphics.Canvas.CanvasFinalizer>
<android.accounts.AccountManagerFuture: boolean isDone()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.net.wifi.WifiManager: void enableVerboseLogging(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ActivityThread.ApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.accounts.AccountManager.3: android.accounts.Account[] bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.net.ProxyInfo: java.lang.String toString()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>:<public static final native>:<android.os.Process>
<android.os.UpdateLock: void checkService()>:<private static>:<android.os.UpdateLock>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.graphics.Canvas: boolean native_clipRegion(long,long,int)>:<private static native>:<android.graphics.Canvas>
<android.os.Binder: void setThreadStrictModePolicy(int)>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.app.IActivityPendingResult.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IActivityPendingResult.Stub:android.os.Binder,android.app.IActivityPendingResult>
<android.net.ConnectivityManager.LegacyRequest.1: void onLost(android.net.Network)>:<public>:<android.net.ConnectivityManager.LegacyRequest.1:android.net.ConnectivityManager.NetworkCallback>
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void access.100(android.print.PrintManager.PrintDocumentAdapterDelegate)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.Fragment: android.transition.Transition getReenterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.GradientDrawable: void updateGradientDrawableStroke(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.INetworkScoreService.Stub.Proxy: void disableScoring()>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.database.AbstractWindowedCursor: boolean hasWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.alsa.AlsaDevicesParser.AlsaDeviceRecord: java.lang.String textFormat()>:<public>:<android.alsa.AlsaDevicesParser.AlsaDeviceRecord>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.net.http.CertificateChainValidator: void handleTrustStorageUpdate()>:<public static>:<android.net.http.CertificateChainValidator>
<android.filterfw.core.NativeProgram: void <clinit>()>:<static>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.os.Parcel: void writeByte(byte)>:<public final>:<android.os.Parcel>
<android.graphics.Paint: float native_measureText(char[],int,int,int)>:<private native>:<android.graphics.Paint>
<android.drm.DrmErrorEvent: void checkTypeValidity(int)>:<private>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.accessibilityservice.AccessibilityServiceInfo: void access.000(android.accessibilityservice.AccessibilityServiceInfo,android.os.Parcel)>:<static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.webkit.WebViewProvider: void clearFormData()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomTransition(int,int)>:<public>:<android.app.FragmentTransaction>
<android.graphics.drawable.VectorDrawable.VFullPath: void setFillColor(int)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.LoaderManagerImpl.LoaderInfo: void destroy()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>:<public final>:<android.os.Handler>
<android.mtp.MtpDevice: java.lang.String toString()>:<public>:<android.mtp.MtpDevice>
<android.net.Uri.Builder: android.net.Uri.Builder query(android.net.Uri.Part)>:<>:<android.net.Uri.Builder>
<android.app.ExitTransitionCoordinator: void exitTransitionComplete()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLSurfaceView: void onPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.mtp.HwMtpDatabaseManagerDummy: void <init>()>:<private>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.webkit.HwFindActionModeCallback: int getActionModeGlobalBottom()>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.accounts.IAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.SamplingDataTracker: long getSampledTxPacketCount()>:<public>:<android.net.SamplingDataTracker>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.DatabaseUtils.InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable.StateListState getStateListState()>:<>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String getProfileOwnerName(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkStatsHistory.ParcelUtils: void <init>()>:<public>:<android.net.NetworkStatsHistory.ParcelUtils>
<android.net.VpnService: void prepareAndAuthorize(android.content.Context)>:<public static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.NetworkStatsHistory: void <init>(java.io.DataInputStream)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.UrlQuerySanitizer: void <init>()>:<public>:<android.net.UrlQuerySanitizer>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.Parcel: void writeException(java.lang.Exception)>:<public final>:<android.os.Parcel>
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.app.Notification.Builder: android.app.Notification.Builder setExtras(android.os.Bundle)>:<public>:<android.app.Notification.Builder>
<android.accounts.IAccountManager: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.AppOpsManager.OnOpChangedInternalListener: void <init>()>:<public>:<android.app.AppOpsManager.OnOpChangedInternalListener:android.app.AppOpsManager.OnOpChangedListener>
<android.webkit.WebViewProvider: java.lang.String getTouchIconUrl()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.WorkSource: android.os.WorkSource addWork(android.os.WorkSource,int,java.lang.String)>:<private static>:<android.os.WorkSource:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.webkit.WebViewProvider: int getVisibleTitleHeight()>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification: void <init>()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>:<public>:<android.os.BaseBundle>
<android.os.BatteryStats: long getFlashlightOnTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.ResourcesManager: android.app.ResourcesManager getInstance()>:<public static>:<android.app.ResourcesManager>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.WifiConnectionStatistics.1: void <init>()>:<>:<android.net.wifi.WifiConnectionStatistics.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.app.ActivityManager.MemoryInfo: void <init>()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.ContextImpl: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.FileObserver: void onEvent(int,java.lang.String)>:<public abstract>:<android.os.FileObserver>
<android.net.NetworkStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkStats.1:android.os.Parcelable.Creator>
<android.print.IPrintSpoolerCallbacks.Stub: void <init>()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.net.wifi.p2p.WifiP2pGroupList: boolean access.100(android.net.wifi.p2p.WifiP2pGroupList)>:<static>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.Notification.WearableExtender: int getHintScreenTimeout()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.AlertDialog: void setButtonPanelLayoutHint(int)>:<>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.ExitTransitionCoordinator: void sharedElementExitBack()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.print.PrintFileDocumentAdapter: void <init>(android.content.Context,java.io.File,android.print.PrintDocumentInfo)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.IConnectivityManager.Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>:<public static>:<android.net.IConnectivityManager.Stub:android.os.Binder,android.net.IConnectivityManager>
<android.os.RemoteCallback: void <init>(android.os.Handler)>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.net.ProxyInfo: java.lang.String getHost()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.database.CursorJoiner: void remove()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.os.Parcel: void readFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.app.Dialog: void setContentView(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.'annotation'.TargetApi: int value()>:<public abstract>:<android.annotation.TargetApi:java.lang.annotation.Annotation>
<android.app.ActivityManager.ProcessErrorStateInfo.1: void <init>()>:<>:<android.app.ActivityManager.ProcessErrorStateInfo.1:android.os.Parcelable.Creator>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Bitmap: void setConfig(android.graphics.Bitmap.Config)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.graphics.Bitmap: void access.200(long)>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ActivityView.ActivityContainerCallback: void setVisible(android.os.IBinder,boolean)>:<public>:<android.app.ActivityView.ActivityContainerCallback:android.app.IActivityContainerCallback.Stub,android.os.Binder>
<android.filterfw.core.SerializedFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.renderscript.Script: void invoke(int)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.net.Uri.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.Uri.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager.PackageOps.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.AppOpsManager.PackageOps.1:android.os.Parcelable.Creator>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.LargeBitmap: int nativeGetWidth(long)>:<private static native>:<android.graphics.LargeBitmap>
<android.graphics.Matrix.1: void reset()>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.os.JankBdItem: boolean add(android.os.JankBdItem)>:<public>:<android.os.JankBdItem>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType[] values()>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.app.FragmentTransaction: android.app.FragmentTransaction show(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.renderscript.Font: android.renderscript.Font createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.accounts.IAccountManagerResponse.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.app.Dialog: boolean hasDismissMask()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.IDevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.wifi.WifiEnterpriseConfig: void setAnonymousIdentity(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager.CacheResult)>:<public static>:<android.webkit.CacheManager>
<android.graphics.Canvas: void setViewport(int,int)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiManager.WpsCallback: void onSucceeded()>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.graphics.drawable.AnimationDrawable: void start()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.StrictMode.StrictModeDiskReadViolation: void <init>(int)>:<public>:<android.os.StrictMode.StrictModeDiskReadViolation:android.os.StrictMode.StrictModeViolation>
<android.net.RssiCurve: void <init>(android.os.Parcel,android.net.RssiCurve.1)>:<>:<android.net.RssiCurve:android.os.Parcelable>
<android.net.nsd.NsdServiceInfo: int getTxtRecordSize()>:<private>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.ListFragment.1: void <init>(android.app.ListFragment)>:<>:<android.app.ListFragment.1:java.lang.Runnable>
<android.filterfw.core.KeyValueMap: void <init>()>:<public>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.app.ActivityManager: int getMemoryClass()>:<public>:<android.app.ActivityManager>
<android.opengl.GLLogWrapper: void formattedAppend(java.lang.StringBuilder,int,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.MobileDataStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.AlarmManager.AlarmClockInfo.1: void <init>()>:<>:<android.app.AlarmManager.AlarmClockInfo.1:android.os.Parcelable.Creator>
<android.os.IPowerManager: boolean isPowerSaveMode()>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>:<public>:<android.graphics.Interpolator>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int,int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.app.BackStackRecord: android.app.FragmentTransaction detach(android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.Class)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.IMultiWinService: void getMultiWinFrame(android.os.IBinder,android.graphics.Rect)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.app.admin.IDevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.webkit.WebChromeClient: void onPermissionRequestCanceled(android.webkit.PermissionRequest)>:<public>:<android.webkit.WebChromeClient>
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.ActivityManagerProxy: android.graphics.Point getAppTaskThumbnailSize()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.admin.DevicePolicyManager: void wipeData(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Program.ProgramParam: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Program.ProgramParam:java.lang.Enum>
<android.app.ProgressDialog: android.widget.ProgressBar access.000(android.app.ProgressDialog)>:<static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.database.MatrixCursor: void ensureCapacity(int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.webkit.ClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>:<public abstract>:<android.webkit.ClientCertRequest>
<android.app.ActivityManagerProxy: void performIdleMaintenance()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Parcel: java.io.FileDescriptor openFileDescriptor(java.lang.String,int)>:<static native>:<android.os.Parcel>
<android.app.Fragment.1: void <init>(android.app.Fragment)>:<>:<android.app.Fragment.1:android.app.FragmentContainer>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>:<public static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.BaseBundle: boolean isEmpty()>:<public>:<android.os.BaseBundle>
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.AnimatedRotateDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.AbstractCursor: boolean move(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.wifi.WifiScanner.OperationResult: int describeContents()>:<public>:<android.net.wifi.WifiScanner.OperationResult:android.os.Parcelable>
<android.transition.Crossfade.1: void onAnimationUpdate(android.animation.ValueAnimator)>:<public>:<android.transition.Crossfade.1:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.transition.ChangeTransform: void access.200(android.view.View,float,float,float,float,float,float,float,float)>:<static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.database.CursorWrapper: boolean isFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>:<protected>:<android.filterfw.core.FinalPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.database.CursorWindow: void onAllReferencesReleased()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl valueOf(java.lang.String)>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.os.PowerManager.WakeLock: void setHistoryTag(java.lang.String)>:<public>:<android.os.PowerManager.WakeLock>
<android.accounts.IAccountManager.Stub.Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDst()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.ErrorStrings: void <init>()>:<private>:<android.net.http.ErrorStrings>
<android.renderscript.Double3: void addMultiple(android.renderscript.Double3,double)>:<public>:<android.renderscript.Double3>
<android.app.Activity: void onNewActivityOptions(android.app.ActivityOptions)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initializeInternal(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable: void <init>()>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.GLFrame: boolean nativeCopyFromNative(android.filterfw.core.NativeFrame)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.WifiScanner.ScanSettings: void <clinit>()>:<static>:<android.net.wifi.WifiScanner.ScanSettings:android.os.Parcelable>
<android.net.wifi.HwWifiCHRService: void <init>(android.os.Looper)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.BackStackRecord.4: void <init>(android.app.BackStackRecord,android.app.BackStackRecord.TransitionState)>:<>:<android.app.BackStackRecord.4:android.transition.Transition.EpicenterCallback>
<android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>:<public>:<android.app.LocalActivityManager>
<android.net.http.AndroidHttpClientConnection: long determineLength(android.net.http.Headers)>:<private>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.app.Activity: void performSaveInstanceState(android.os.Bundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>:<public>:<android.webkit.ConsoleMessage>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void clearProfileOwner(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.pdf.PdfRenderer: android.graphics.Point access.100(android.graphics.pdf.PdfRenderer)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.app.IActivityController: boolean activityResuming(java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.renderscript.Allocation: void validateIsInt64()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest[] newArray(int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1:android.os.Parcelable.Creator>
<android.app.backup.BackupDataInput: int readEntityData_native(long,byte[],int,int)>:<private native>:<android.app.backup.BackupDataInput>
<android.graphics.drawable.InsetDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.trust.ITrustManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable>
<android.app.IUserSwitchObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IUserSwitchObserver.Stub.Proxy:android.app.IUserSwitchObserver>
<android.os.INetworkManagementService.Stub.Proxy: void enableIpv6(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.BaseBundle: void <init>()>:<>:<android.os.BaseBundle>
<android.app.ActivityManager.RecentTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.webkit.WebResourceResponse: int getStatusCode()>:<public>:<android.webkit.WebResourceResponse>
<android.graphics.Region: void setEmpty()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.transition.Visibility: void captureValues(android.transition.TransitionValues,int)>:<private>:<android.transition.Visibility:android.transition.Transition>
<android.net.NetworkAgent: void addUidRanges(android.net.UidRange[])>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.net.NetworkIdentity: java.lang.String[] scrubSubscriberId(java.lang.String[])>:<public static>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.net.wifi.RttManager.ParcelableRttResults: void <clinit>()>:<static>:<android.net.wifi.RttManager.ParcelableRttResults:android.os.Parcelable>
<android.print.PrintJobId.1: void <init>()>:<>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.Element: android.renderscript.Element I64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Service: boolean stopSelfResult(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.app.Notification.Builder: void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.graphics.Region.Op: android.graphics.Region.Op valueOf(java.lang.String)>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.PowerManager: void userActivity(long,int,int)>:<public>:<android.os.PowerManager>
<android.graphics.RegionIterator: void nativeDestructor(long)>:<private static native>:<android.graphics.RegionIterator>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void refreshRoute(android.media.MediaRouter)>:<private>:<android.app.MediaRouteActionProvider.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.net.wifi.p2p.IWifiP2pManager: void setRecoveryWifiFlag(boolean)>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>:<public abstract>:<android.accounts.OnAccountsUpdateListener>
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>:<public static>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.transition.Transition: android.transition.Transition excludeChildren(java.lang.Class,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: java.util.List getWindows()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.renderscript.ProgramVertex: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramVertex:android.renderscript.Program,android.renderscript.BaseObj>
<android.graphics.pdf.PdfEditor: int nativeGetPageCount(long)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.os.PowerManagerInternal: boolean getLowPowerModeEnabled()>:<public abstract>:<android.os.PowerManagerInternal>
<android.os.StrictMode.6: void <init>()>:<>:<android.os.StrictMode.6:android.os.MessageQueue.IdleHandler>
<android.net.ConnectivityManager.NetworkCallback: void onPreCheck(android.net.Network)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.graphics.drawable.Ripple: boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.Ripple>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.renderscript.FieldPacker: android.renderscript.Float3 subFloat3()>:<public>:<android.renderscript.FieldPacker>
<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>:<public>:<android.filterfw.core.Frame>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.SimpleFrame: void setInts(int[])>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteDatabase.1: java.lang.Object initialValue()>:<protected volatile>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.os.BaseBundle: void <init>(android.os.BaseBundle)>:<>:<android.os.BaseBundle>
<android.app.ActivityThread: java.lang.String getProfileFilePath()>:<public>:<android.app.ActivityThread>
<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Paint: boolean isSubpixelText()>:<public final>:<android.graphics.Paint>
<android.filterfw.core.SimpleScheduler: android.filterfw.core.Filter scheduleNextNode()>:<public>:<android.filterfw.core.SimpleScheduler:android.filterfw.core.Scheduler>
<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable.RotateState,android.content.res.Resources)>:<private>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.WifiConfiguration: java.lang.String trimStringForKeyId(java.lang.String)>:<private>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getClientCertificateAlias()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>:<public abstract>:<android.webkit.WebSettings>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.opengl.EGLSurface: void <init>(long)>:<private>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.net.MobileDataStateTracker.MobileDataStateReceiver: void <init>(android.net.MobileDataStateTracker,android.net.MobileDataStateTracker.1)>:<>:<android.net.MobileDataStateTracker.MobileDataStateReceiver:android.content.BroadcastReceiver>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerName()>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.IPowerManager: boolean stopDream()>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.net.LocalSocket: void setSoTimeout(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.print.PrinterDiscoverySession: java.util.List getPrinters()>:<public final>:<android.print.PrinterDiscoverySession>
<android.os.IMultiWinService: boolean registerMWCallBack(android.os.IMultiWinServiceCallBack)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.graphics.Paint: int getAlpha()>:<public native>:<android.graphics.Paint>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onAllPrintJobsHandled()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.app.job.JobInfo.1: android.app.job.JobInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.job.JobInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityOptions.1: void sendResult(android.os.Bundle)>:<public>:<android.app.ActivityOptions.1:android.os.IRemoteCallback.Stub>
<android.os.JankBdData: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.JankBdData:android.os.Parcelable>
<android.os.IUserManager.Stub.Proxy: android.os.Bundle getApplicationRestrictions(java.lang.String)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.wifi.WifiCHRStateManager: void preWifiException(boolean)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.app.backup.IBackupManager: android.content.Intent getConfigurationIntent(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.QueuedWork: java.util.concurrent.ExecutorService singleThreadExecutor()>:<public static>:<android.app.QueuedWork>
<android.transition.TransitionInflater: android.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup)>:<public>:<android.transition.TransitionInflater>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.transition.ChangeBounds.1: void set(android.graphics.drawable.Drawable,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.1:android.util.Property>
<android.os.storage.IMountService: java.lang.String[] getSecureContainerList()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,int)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.database.Cursor: boolean isBeforeFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.NetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.Notification.Builder: java.lang.CharSequence access.600(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Drawable>
<android.os.CommonClock: int getState()>:<public>:<android.os.CommonClock>
<android.net.nsd.DnsSdTxtRecord.1: void <init>()>:<>:<android.net.nsd.DnsSdTxtRecord.1:android.os.Parcelable.Creator>
<android.graphics.Matrix: void native_setSinCos(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.net.wifi.IWifiManager: android.net.wifi.PPPOEInfo getPPPOEInfo()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>:<public>:<android.graphics.PaintFlagsDrawFilter:android.graphics.DrawFilter>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog.Builder>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.app.SharedPreferencesImpl.MemoryCommitResult: void <init>(android.app.SharedPreferencesImpl.1)>:<>:<android.app.SharedPreferencesImpl.MemoryCommitResult>
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void handlePackageRemoved(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.app.Activity: java.lang.IllegalArgumentException missingDialog(int)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Int2: android.renderscript.Int2 add(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>:<public>:<android.drm.DrmManagerClient>
<android.opengl.GLLogWrapper: void glPointSize(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType,java.lang.String)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: boolean glIsSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.UiAutomation: void <clinit>()>:<static>:<android.app.UiAutomation>
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.IdleCache: void <init>()>:<>:<android.net.http.IdleCache>
<android.filterfw.core.FilterSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getQueryActionMsg()>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.WifiLinkQualityInfo: java.lang.String getBssid()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.renderscript.Double4: void mul(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.app.ActivityManager.RunningServiceInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.renderscript.RenderScript: void nMeshGetVertices(long,long[],int)>:<>:<android.renderscript.RenderScript>
<android.transition.Transition: java.util.List getTargets()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.core.GLFrame: boolean setNativeInts(int[])>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.IMultiWinService.Stub.Proxy: void updateTaskList(int,int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: int describeContents()>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.net.IConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.wifi.WifiScanner: com.android.internal.util.AsyncChannel access.002(com.android.internal.util.AsyncChannel)>:<static>:<android.net.wifi.WifiScanner>
<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants.DataState access.402(android.net.MobileDataStateTracker,com.android.internal.telephony.PhoneConstants.DataState)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.ActivityManagerProxy: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IApplicationThread: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.print.ILayoutResultCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public abstract>:<android.net.dhcp.DhcpPacket>
<android.renderscript.RenderScript: void nContextSetSurfaceTexture(int,int,android.graphics.SurfaceTexture)>:<>:<android.renderscript.RenderScript>
<android.app.backup.BackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport>
<android.app.BackStackRecord: int getId()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityView.ActivityContainerCallback: void onAllActivitiesComplete(android.os.IBinder)>:<public>:<android.app.ActivityView.ActivityContainerCallback:android.app.IActivityContainerCallback.Stub,android.os.Binder>
<android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>:<public static>:<android.graphics.Insets>
<android.app.backup.BackupManager: void backupNow()>:<public>:<android.app.backup.BackupManager>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.os.IUserManager: void setDefaultGuestRestrictions(android.os.Bundle)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendEncodedSegment(android.net.Uri.PathPart,java.lang.String)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.webkit.WebResourceRequest: java.util.Map getRequestHeaders()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.transition.ChangeTransform: void setReparentWithOverlay(boolean)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.os.JankEventData.1: void <init>()>:<>:<android.os.JankEventData.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.BatteryStats.Uid: void noteWifiScanStartedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.database.CursorWindow: boolean isString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.NetworkStats.Entry: boolean isNegative()>:<public>:<android.net.NetworkStats.Entry>
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.transition.ChangeClipBounds: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.os.FileUtils: boolean deleteOlderFiles(java.io.File,int,long)>:<public static>:<android.os.FileUtils>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.ActivityManagerNative.1: android.app.IActivityManager create()>:<protected>:<android.app.ActivityManagerNative.1:android.util.Singleton>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Rectangle boundingBox()>:<public>:<android.filterfw.geometry.Quad>
<android.app.trust.ITrustListener.Stub.Proxy: void onTrustChanged(boolean,int,boolean)>:<public>:<android.app.trust.ITrustListener.Stub.Proxy:android.app.trust.ITrustListener>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>:<public>:<android.net.http.SslCertificate>
<android.database.AbstractWindowedCursor: boolean isNull(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.app.admin.IDevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.MobileDataStateTracker: java.lang.String access.300(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.backup.IBackupManager.Stub.Proxy: boolean setBackupPassword(java.lang.String,java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.BackStackRecord: void setBackNameOverrides(android.app.BackStackRecord.TransitionState,android.util.ArrayMap,boolean)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix3f)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.VectorDrawable: java.lang.Object getTargetByName(java.lang.String)>:<>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.dhcp.DhcpStateMachine: void onNakReceived()>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.net.wifi.WifiScanner.WifiChangeSettings.1: android.net.wifi.WifiScanner.WifiChangeSettings createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiScanner.WifiChangeSettings.1:android.os.Parcelable.Creator>
<android.print.PrinterDiscoverySession: void notifyOnPrintersChanged()>:<private>:<android.print.PrinterDiscoverySession>
<android.os.StrictMode.InstanceTracker: void <clinit>()>:<static>:<android.os.StrictMode.InstanceTracker>
<android.drm.DrmUtils: byte[] readBytes(java.lang.String)>:<static>:<android.drm.DrmUtils>
<android.app.ExitTransitionCoordinator: boolean isReadyToNotify()>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.filterfw.core.GLFrame: boolean nativeAllocate(android.filterfw.core.GLEnvironment,int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.webkit.WebSettings: boolean getUseWideViewPort()>:<public abstract>:<android.webkit.WebSettings>
<android.database.sqlite.SQLiteConnection: long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.NetworkStats: long getTotalPackets()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType[] values()>:<public static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.webkit.HwFindActionModeCallback.HwNoAction: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public>:<android.webkit.HwFindActionModeCallback.HwNoAction:android.view.ActionMode.Callback>
<android.webkit.HwFindActionModeCallback.HwNoAction: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.HwFindActionModeCallback.HwNoAction:android.view.ActionMode.Callback>
<android.app.IActivityContainerCallback: void setVisible(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityContainerCallback:android.os.IInterface>
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.p2p.WifiP2pManager.ChannelListener: void onChannelDisconnected()>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ChannelListener>
<android.app.FragmentManagerImpl.2: void run()>:<public>:<android.app.FragmentManagerImpl.2:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glPointParameterx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.3008(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLLogWrapper: void glBufferData(int,int,java.nio.Buffer,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.alsa.AlsaCardsParser.AlsaCardRecord: boolean parse(java.lang.String,int)>:<public>:<android.alsa.AlsaCardsParser.AlsaCardRecord>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.app.ContextImpl.49: void <init>()>:<>:<android.app.ContextImpl.49:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.lang.String toString()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.io.PatternScanner: void skip(java.util.regex.Pattern)>:<public>:<android.filterfw.io.PatternScanner>
<android.net.wifi.WifiCHRStateManager: void updateNoInet(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.Short4: android.renderscript.Short4 mod(android.renderscript.Short4,short)>:<public static>:<android.renderscript.Short4>
<android.os.Parcel: void writeCharArray(char[])>:<public final>:<android.os.Parcel>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>:<public>:<android.graphics.RegionIterator>
<android.net.RouteInfo.1: void <init>()>:<>:<android.net.RouteInfo.1:android.os.Parcelable.Creator>
<android.net.IConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.os.FileUtils: boolean deleteContents(java.io.File)>:<public static>:<android.os.FileUtils>
<android.graphics.Matrix: float native_mapRadius(long,float)>:<private static native>:<android.graphics.Matrix>
<android.filterfw.core.GLFrame: int getFboId()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.backup.IBackupManager: void clearBackupData(java.lang.String,java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.FindActionModeCallback: void onClick(android.view.View)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.WallpaperManager: void setWallpaper(java.io.InputStream,java.io.FileOutputStream)>:<private>:<android.app.WallpaperManager>
<android.os.INetworkManagementService.Stub.Proxy: android.net.NetworkStats getNetworkStatsSummaryXt()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.filterfw.core.Frame: int getCapacity()>:<public>:<android.filterfw.core.Frame>
<android.renderscript.RenderScript: long rsnAllocationCreateBitmapBackedAllocation(long,long,int,android.graphics.Bitmap,int)>:<native>:<android.renderscript.RenderScript>
<android.os.MemoryFile.MemoryOutputStream: void write(byte[],int,int)>:<public>:<android.os.MemoryFile.MemoryOutputStream:java.io.OutputStream>
<android.app.ContextImpl: java.io.File getDataDirFile()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.graphics.Paint: int getBidiFlags()>:<public>:<android.graphics.Paint>
<android.renderscript.Long4: void mod(long)>:<public>:<android.renderscript.Long4>
<android.net.http.SslError: void <clinit>()>:<static>:<android.net.http.SslError>
<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.graphics.RadialGradient: long nativeCreate2(float,float,float,int,int,int)>:<private static native>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.database.CursorJoiner: int compareStrings(java.lang.String[])>:<private static transient>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.renderscript.Byte2: void <init>()>:<public>:<android.renderscript.Byte2>
<android.os.BatteryStats.Uid.Pkg.Serv: int getStarts(int)>:<public abstract>:<android.os.BatteryStats.Uid.Pkg.Serv>
<android.filterfw.core.AsyncRunner: void <init>(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.graphics.drawable.GradientDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.opengl.EGLLogWrapper: boolean eglWaitNative(int,java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.nsd.DnsSdTxtRecord: java.lang.String getKey(int)>:<private>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition: boolean canReverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.IpPrefix.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.IpPrefix.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.CursorWindow: void <init>(android.os.Parcel)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getCurrentFailedPasswordAttempts(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.webkit.JsResult: void cancel()>:<public final>:<android.webkit.JsResult>
<android.webkit.JsDialogHelper.CancelListener: void <init>(android.webkit.JsDialogHelper)>:<private>:<android.webkit.JsDialogHelper.CancelListener:android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnClickListener>
<android.webkit.Plugin: java.lang.String toString()>:<public>:<android.webkit.Plugin>
<android.app.ResultInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ResultInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.net.wifi.WifiManager.TxPacketCountListener: void onFailure(int)>:<public abstract>:<android.net.wifi.WifiManager.TxPacketCountListener>
<android.sax.Element: java.lang.String toString(java.lang.String,java.lang.String)>:<static>:<android.sax.Element>
<android.database.AbstractCursor: int getInt(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Double3: double elementSum()>:<public>:<android.renderscript.Double3>
<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean disableNetwork(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ResourcesManager: void applyNonDefaultDisplayMetricsToConfigurationLocked(android.util.DisplayMetrics,android.content.res.Configuration)>:<final>:<android.app.ResourcesManager>
<android.os.IUserManager.Stub.Proxy: boolean hasUserRestriction(java.lang.String,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>:<public>:<android.app.ActivityManager>
<android.net.VpnService.Callback: void <init>(android.net.VpnService)>:<private>:<android.net.VpnService.Callback:android.os.Binder>
<android.os.Debug.MemoryInfo: int getOtherPss(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.os.IMultiWinService: int getFlagMW()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.BaseNetworkStateTracker: void captivePortalCheckCompleted(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.wifi.WifiActivityEnergyInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.net.Network: void <init>(int)>:<public>:<android.net.Network:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pGroup: boolean contains(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityThread: android.app.ActivityThread.ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean,int,boolean)>:<private>:<android.app.ActivityThread>
<android.app.WallpaperManager: void setDisplayOffset(android.os.IBinder,int,int)>:<public>:<android.app.WallpaperManager>
<android.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.os.storage.IMountServiceListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.storage.IMountServiceListener.Stub:android.os.Binder,android.os.storage.IMountServiceListener>
<android.app.ActivityThread.ApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.wifi.WifiCHRStateManager: void updateSwitch(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.DummyHwInnerWifiManager: boolean setWifiEnterpriseConfigEapMethod(int,java.util.HashMap)>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.net.wifi.WpsResult.Status: void <clinit>()>:<static>:<android.net.wifi.WpsResult.Status:java.lang.Enum>
<android.database.sqlite.SQLiteCursor: void close()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.Int3: android.renderscript.Int3 div(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.net.wifi.p2p.WifiP2pManager.Channel.P2pHandler: void handleMessage(android.os.Message)>:<public>:<android.net.wifi.p2p.WifiP2pManager.Channel.P2pHandler:android.os.Handler>
<android.app.ActivityOptions: int getCustomEnterResId()>:<public>:<android.app.ActivityOptions>
<android.graphics.drawable.VectorDrawable.VFullPath: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.net.WifiKey: void <init>(android.os.Parcel)>:<private>:<android.net.WifiKey:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.JankEventData.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.JankEventData.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: void rsnScriptSetVarObj(long,long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture copyAccountToUser(android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildRequestPacket(int,int,java.net.InetAddress,boolean,byte[],java.net.InetAddress,java.net.InetAddress,byte[],java.lang.String)>:<public static>:<android.net.dhcp.DhcpPacket>
<android.graphics.RectF: int hashCode()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.print.PrintAttributes.MediaSize: void <clinit>()>:<static>:<android.print.PrintAttributes.MediaSize>
<android.app.ISearchManager.Stub.Proxy: android.content.ComponentName getGlobalSearchActivity()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.opengl.GLLogWrapper: void glFrustumf(float,float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.INetworkScoreService.Stub.Proxy: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.app.IActivityManager: android.app.IActivityContainer createActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable: boolean isProjected()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.UserHandle: boolean equals(java.lang.Object)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>:<public>:<android.graphics.Paint>
<android.opengl.GLSurfaceView.GLThread: void surfaceCreated()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.StatusBarManager: void expandSettingsPanel()>:<public>:<android.app.StatusBarManager>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.SamplingDataTracker: void <init>()>:<public>:<android.net.SamplingDataTracker>
<android.app.Fragment.SavedState.1: android.app.Fragment.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.app.Activity: boolean convertToTranslucent(android.app.Activity.TranslucentConversionListener,android.app.ActivityOptions)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.IpConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.wifi.DummyHwInnerWifiManager: android.net.wifi.HwInnerWifiManager getDefault()>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.app.usage.UsageEvents.1: android.app.usage.UsageEvents[] newArray(int)>:<public>:<android.app.usage.UsageEvents.1:android.os.Parcelable.Creator>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<android.net.Uri: android.net.Uri parse(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.INetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>:<public abstract>:<android.net.INetworkScoreService:android.os.IInterface>
<android.app.HwCustSvcFactory.DummyFactoryImpl: void <init>()>:<private>:<android.app.HwCustSvcFactory.DummyFactoryImpl:android.app.HwCustSvcFactory.Factory>
<android.print.IPrintSpooler.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.app.IActivityContainerCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IActivityContainerCallback.Stub.Proxy:android.app.IActivityContainerCallback>
<android.appwidget.AppWidgetHost: void bindService()>:<private static>:<android.appwidget.AppWidgetHost>
<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.BackStackState:android.os.Parcelable>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeEndSnapshot(android.os.Bundle)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.renderscript.Long2: void copyTo(long[],int)>:<public>:<android.renderscript.Long2>
<android.os.Parcel: void <init>(long)>:<private>:<android.os.Parcel>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>:<public>:<android.net.ConnectivityManager>
<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>:<public abstract>:<android.net.http.RequestFeeder>
<android.renderscript.RenderScript: void rsnScriptForEachMultiClipped(long,long,int,long[],long,byte[],int,int,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Debug.MemoryInfo: void <clinit>()>:<static>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.graphics.BitmapFactory.Options: void <init>()>:<public>:<android.graphics.BitmapFactory.Options>
<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>:<public abstract>:<android.app.FragmentTransaction>
<android.graphics.YuvImage: int[] calculateOffsets(int,int)>:<>:<android.graphics.YuvImage>
<android.os.IMultiWinService.Stub.Proxy: android.content.Intent buildMultiWinIntent(android.content.Intent)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.filterfw.core.SerializedFrame: boolean hasNativeAllocation()>:<protected>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.net.wifi.WifiScanner: android.net.wifi.ScanResult[] getScanResults()>:<public>:<android.net.wifi.WifiScanner>
<android.opengl.GLES10: void glLightModelx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hwtheme.HwThemeManagerDummy: boolean isTargetFamily(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.accounts.IAccountManager: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.transition.ChangeTransform.3: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ActivityThread.ApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLES20: void glAttachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Short2: android.renderscript.Short2 mul(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setMimeType(java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.renderscript.Short3: void add(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.job.JobScheduler: void cancelAll()>:<public abstract>:<android.app.job.JobScheduler>
<android.accounts.AccountAuthenticatorResponse.1: android.accounts.AccountAuthenticatorResponse createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.Path: void native_quadTo(long,float,float,float,float)>:<private static native>:<android.graphics.Path>
<android.net.wifi.DummyHwInnerWifiManager: int calculateSignalLevelHW(int)>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.graphics.drawable.AnimationDrawable.AnimationState: boolean access.102(android.graphics.drawable.AnimationDrawable.AnimationState,boolean)>:<static>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.MediaRouteActionProvider: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.os.BatteryStats.Uid: void noteWifiMulticastDisabledLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.os.INetworkManagementService.Stub.Proxy: void createVirtualNetwork(int,boolean,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.drawable.DrawableContainer: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.sax.Element: void <init>(android.sax.Element,java.lang.String,java.lang.String,int)>:<>:<android.sax.Element>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>:<public>:<android.app.Notification.Builder>
<android.net.NetworkStatsHistory: void <init>(long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.IActivityManager: boolean isImmersive(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: void setDefaultNetId(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>:<public>:<android.webkit.WebResourceResponse>
<android.net.wifi.WifiSsid: boolean isHidden()>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicColorMatrix: void setGreyscale()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES10: void <clinit>()>:<static>:<android.opengl.GLES10>
<android.filterfw.core.Frame: boolean isReadOnly()>:<public>:<android.filterfw.core.Frame>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.Allocation: void sendBufferNotification(long)>:<static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.filterfw.core.SyncRunner: void stop()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.net.ProxyInfo: int hashCode()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.graphics.PathEffect: void finalize()>:<protected>:<android.graphics.PathEffect>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.database.AbstractCursor: boolean moveToNext()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>:<public static>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.WifiCHRStateManager: void updateMobileSignalLeve(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLErrorWrapper: void checkThread()>:<private>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.graphics.drawable.RippleDrawable: void setBackgroundActive(boolean,boolean)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.NetworkAgent: void networkStatus(int)>:<protected>:<android.net.NetworkAgent:android.os.Handler>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.AlertDialog: android.widget.Button getButton(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.hwcontrol.HwWidgetFactory.Factory: android.graphics.drawable.Drawable getGlowEffectImpl(android.content.res.Resources)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.filterfw.core.GLFrame: void assertGLEnvValid()>:<private>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.ApplicationPackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.drm.DrmManagerClient.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.drm.DrmManagerClient.EventHandler:android.os.Handler>
<android.app.backup.BackupTransport.TransportImpl: long getCurrentRestoreSet()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getProfileOwner(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.NinePatchDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.ExitTransitionCoordinator: void stopCancel()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.pdf.PdfDocument.PageInfo: int access.002(android.graphics.pdf.PdfDocument.PageInfo,int)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.hsm.HwMediaPermWrapper: android.view.Surface setPreviewDisplay(android.view.Surface)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearPages()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.transition.ChangeTransform.1: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeTransform.1:android.util.Property>
<android.net.wifi.WifiCHRStateManager: void updateDNS(java.util.Collection)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.os.Registrant: void notifyResult(java.lang.Object)>:<public>:<android.os.Registrant>
<android.os.Message.1: android.os.Message[] newArray(int)>:<public>:<android.os.Message.1:android.os.Parcelable.Creator>
<android.renderscript.Element: android.renderscript.Element U32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ITransientNotification.Stub.Proxy: void hide()>:<public>:<android.app.ITransientNotification.Stub.Proxy:android.app.ITransientNotification>
<android.app.job.JobParameters: void <init>(android.os.Parcel)>:<private>:<android.app.job.JobParameters:android.os.Parcelable>
<android.net.NetworkCapabilities: int describeContents()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.Uri.1: void <init>()>:<>:<android.net.Uri.1:android.os.Parcelable.Creator>
<android.graphics.drawable.VectorDrawable.VFullPath: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.RssiPacketCountInfo: int describeContents()>:<public>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.net.LocalSocketAddress: java.lang.String getName()>:<public>:<android.net.LocalSocketAddress>
<android.graphics.Atlas: android.graphics.Atlas.Entry pack(int,int,android.graphics.Atlas.Entry)>:<public>:<android.graphics.Atlas>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.graphics.BitmapRegionDecoder: void recycle()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.graphics.Typeface: long nativeCreateWeightAlias(long,int)>:<private static native>:<android.graphics.Typeface>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable.RippleState: void <init>(android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources)>:<public>:<android.graphics.drawable.RippleDrawable.RippleState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLLogWrapper: void glGenBuffers(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiCHRService: void fillUserConnectModel(com.huawei.device.connectivitychrlog.CSegEVENT_WIFI_USER_CONNECT)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.IHDMIConnectService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.webkit.CookieSyncManager: void run()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.os.WorkSource: void <init>(android.os.Parcel)>:<>:<android.os.WorkSource:android.os.Parcelable>
<android.net.NetworkKey: void <init>(android.os.Parcel,android.net.NetworkKey.1)>:<>:<android.net.NetworkKey:android.os.Parcelable>
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript.Priority)>:<public>:<android.renderscript.RenderScript>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.content.Context,int,boolean)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.VectorDrawable: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkPolicy.1: android.net.NetworkPolicy createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkPolicy.1:android.os.Parcelable.Creator>
<android.app.SearchDialog: void updateSearchBadge()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.app.backup.IFullBackupRestoreObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub:android.os.Binder,android.app.backup.IFullBackupRestoreObserver>
<android.transition.Transition: boolean isValidTarget(android.view.View)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.net.http.ConnectionThread: void <init>(android.content.Context,int,android.net.http.RequestQueue.ConnectionManager,android.net.http.RequestFeeder)>:<>:<android.net.http.ConnectionThread:java.lang.Thread>
<android.opengl.GLES30: boolean glIsVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.storage.StorageManager.ObbListenerDelegate: void <init>(android.os.storage.StorageManager,android.os.storage.OnObbStateChangeListener)>:<>:<android.os.storage.StorageManager.ObbListenerDelegate>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.print.PrintAttributes: int describeContents()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.net.http.Headers: java.lang.String getExpires()>:<public>:<android.net.http.Headers>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.FileObserver.ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)>:<public>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.WebViewProvider: void reload()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.ActivityManager.TaskDescription: void setPrimaryColor(int)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.SharedPreferencesImpl: java.io.File makeBackupFile(java.io.File)>:<private static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.renderscript.Long3: android.renderscript.Long3 mul(android.renderscript.Long3,long)>:<public static>:<android.renderscript.Long3>
<android.app.ActionBar.Tab: java.lang.CharSequence getText()>:<public abstract>:<android.app.ActionBar.Tab>
<android.os.IPermissionController.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IPermissionController.Stub:android.os.Binder,android.os.IPermissionController>
<android.net.http.Headers: java.lang.String getAcceptRanges()>:<public>:<android.net.http.Headers>
<android.net.http.AndroidHttpClient: void disableCurlLogging()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.ActivityManager.CpuStatInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.os.BatteryStats: long computeUptime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.IBatteryPropertiesRegistrar.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IBatteryPropertiesRegistrar.Stub.Proxy:android.os.IBatteryPropertiesRegistrar>
<android.net.wifi.WifiConfiguration.Protocol: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.Protocol>
<android.transition.ChangeText: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.graphics.drawable.RippleBackground: void enter(boolean)>:<public>:<android.graphics.drawable.RippleBackground>
<android.os.CountDownTimer: void cancel()>:<public final>:<android.os.CountDownTimer>
<android.filterfw.core.GraphRunner: void close()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.app.RemoteInput: android.os.Bundle getExtras()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.renderscript.Double4: void addMultiple(android.renderscript.Double4,double)>:<public>:<android.renderscript.Double4>
<android.app.ContextImpl.12: void <init>()>:<>:<android.app.ContextImpl.12:android.app.ContextImpl.ServiceFetcher>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.DhcpStateMachine.WaitBeforeStartState: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.WaitBeforeStartState:com.android.internal.util.State>
<android.app.trust.ITrustManager.Stub.Proxy: void reportEnabledTrustAgentsChanged(int)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.os.BatteryStats: int getBluetoothPingCount()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.job.IJobCallback.Stub.Proxy: void acknowledgeStopMessage(int,boolean)>:<public>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.hsm.HwSystemManager: boolean shouldInterceptAudience(java.lang.String[])>:<public static>:<android.hsm.HwSystemManager>
<android.webkit.WebView: void onWindowVisibilityChanged(int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.HwWifiStatStore: void updateWifiTriggerState(boolean)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.webkit.HwFindActionModeCallback: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void <init>()>:<private>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.RemoteCallbackList: void finishBroadcast()>:<public>:<android.os.RemoteCallbackList>
<android.graphics.Paint: int native_getTextWidths(long,long,char[],int,int,int,float[])>:<private static native>:<android.graphics.Paint>
<android.drm.DrmUtils: void quietlyDispose(java.io.OutputStream)>:<private static>:<android.drm.DrmUtils>
<android.os.FileUtils: java.io.File rewriteAfterRename(java.io.File,java.io.File,java.io.File)>:<public static>:<android.os.FileUtils>
<android.transition.ChangeClipBounds: void <clinit>()>:<static>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>:<public static native>:<android.graphics.Movie>
<android.app.ExitTransitionCoordinator: void hideSharedElements()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.Long3: void <init>(long,long,long)>:<public>:<android.renderscript.Long3>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onPrintJobQueued(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.net.IEthernetServiceListener.Stub.Proxy: void onAvailabilityChanged(boolean)>:<public>:<android.net.IEthernetServiceListener.Stub.Proxy:android.net.IEthernetServiceListener>
<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.RenderScript: void nContextResume()>:<>:<android.renderscript.RenderScript>
<android.app.SearchManager: void ensureSearchDialog()>:<private>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.RenderScript: void nAllocationSyncAll(long,int)>:<>:<android.renderscript.RenderScript>
<android.database.sqlite.SQLiteConnection: int nativeGetParameterCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Parcel: void readArrayMapSafelyInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>:<>:<android.os.Parcel>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSInvalidStateException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.filterfw.core.AsyncRunner: boolean isRunning()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int,java.util.List)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.http.SslError: int getPrimaryError()>:<public>:<android.net.http.SslError>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Movie: void <init>(long)>:<private>:<android.graphics.Movie>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.TableMaskFilter: long nativeNewClip(int,int)>:<private static native>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.graphics.Matrix: void mapVectors(float[])>:<public>:<android.graphics.Matrix>
<android.graphics.drawable.ColorDrawable: void <init>(android.graphics.drawable.ColorDrawable.ColorState)>:<private>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.os.INetworkManagementService: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.Typeface: void init()>:<private static>:<android.graphics.Typeface>
<android.net.wifi.p2p.WifiP2pManager: void responderReportNfcHandover(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: void <init>(android.content.Context,int,android.accounts.ChooseAccountActivity.AccountInfo[])>:<public>:<android.accounts.ChooseAccountActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.os.MemoryFile: void native_munmap(long,int)>:<private static native>:<android.os.MemoryFile>
<android.app.NotificationManager: android.app.INotificationManager getService()>:<public static>:<android.app.NotificationManager>
<android.app.ActivityGroup: void <init>(boolean)>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Script: double getVarD(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.NetworkStats: void <init>(android.os.Parcel)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.net.SamplingDataTracker: void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo)>:<public>:<android.net.SamplingDataTracker>
<android.renderscript.Int2: int length()>:<public>:<android.renderscript.Int2>
<android.net.wifi.p2p.WifiP2pManager: void initiatorReportNfcHandover(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)>:<>:<android.net.http.Connection>
<android.net.wifi.RttManager: com.android.internal.util.AsyncChannel access.002(com.android.internal.util.AsyncChannel)>:<static>:<android.net.wifi.RttManager>
<android.renderscript.Element: android.renderscript.Element I8_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.RippleBackground: void setup(int,float)>:<public>:<android.graphics.drawable.RippleBackground>
<android.transition.ChangeTransform: boolean getReparentWithOverlay()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.os.BatteryProperties: void <init>(android.os.Parcel)>:<private>:<android.os.BatteryProperties:android.os.Parcelable>
<android.database.ContentObserver.Transport: void releaseContentObserver()>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.transition.TransitionManager: android.transition.Transition getTransition(android.transition.Scene)>:<private>:<android.transition.TransitionManager>
<android.net.wifi.WifiManager: boolean isWifiApEnabled()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.database.sqlite.SQLiteCursor: void fillWindow(int)>:<private>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.os.SystemService.State: android.os.SystemService.State[] values()>:<public static>:<android.os.SystemService.State:java.lang.Enum>
<android.webkit.WebView.PrivateAccess: boolean super_performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.filterfw.core.GLEnvironment: boolean isContextActive()>:<public>:<android.filterfw.core.GLEnvironment>
<android.net.wifi.WifiManager.WifiLock: void release()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.net.wifi.PPPOEConfig: java.lang.String[] getArgs()>:<public>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getCap(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.GLFrame: boolean nativeFocus()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.renderscript.Short3: void addAt(int,short)>:<public>:<android.renderscript.Short3>
<android.renderscript.Float3: void addAt(int,float)>:<public>:<android.renderscript.Float3>
<android.net.http.AndroidHttpClient.LoggingConfiguration: boolean isLoggable()>:<private>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.print.PrintJobInfo: java.lang.String stateToString(int)>:<public static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.RectF: boolean isEmpty()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.CursorWrapper: boolean isLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.job.IJobService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.job.IJobService.Stub.Proxy:android.app.job.IJobService>
<android.graphics.Canvas: void native_scale(long,float,float)>:<private static native>:<android.graphics.Canvas>
<android.os.BatteryStats.Uid: long getNetworkActivityPackets(int,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.renderscript.AllocationAdapter: void subData1D(int,int,byte[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.http.HttpConnection: void closeConnection()>:<>:<android.net.http.HttpConnection:android.net.http.Connection>
<android.print.PrintAttributes.Margins: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Margins>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>:<public>:<android.print.PrintJob>
<android.app.backup.BackupDataInput.EntityHeader: void <init>()>:<private>:<android.app.backup.BackupDataInput.EntityHeader>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.webkit.WebViewProvider: void clearSslPreferences()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.backup.IBackupManager: void opComplete(int)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>:<protected>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.graphics.Matrix: void printShortString(java.io.PrintWriter)>:<public>:<android.graphics.Matrix>
<android.net.wifi.WifiManager: int putListener(java.lang.Object)>:<private static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.webkit.WebViewFragment: void <init>()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.app.Activity: java.lang.String getLocalClassName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityGroup: void onDestroy()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.LoaderManager.LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.app.ContextImpl: java.io.File getNoBackupFilesDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.WifiInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.storage.StorageVolume: int getMtpReserveSpace()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.sax.RootElement: void <init>(java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<android.net.http.DelegatingSSLSession: java.security.cert.Certificate[] getPeerCertificates()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.BatteryStats: int getDischargeAmount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.database.sqlite.SQLiteDebug: void <init>()>:<private>:<android.database.sqlite.SQLiteDebug>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>:<public abstract>:<android.app.backup.IRestoreSession:android.os.IInterface>
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.app.LoadedApk>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: void <clinit>()>:<static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.ClipDrawable: void <init>()>:<>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>:<public>:<android.os.storage.StorageManager>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiLinkLayerStats.1: void <init>()>:<>:<android.net.wifi.WifiLinkLayerStats.1:android.os.Parcelable.Creator>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.http.SslCertificate>
<android.hwtheme.HwThemeManager: void retrieveSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration)>:<public static>:<android.hwtheme.HwThemeManager>
<android.webkit.CacheManager.CacheResult: java.lang.String getExpiresString()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.net.NetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>:<protected>:<android.net.NetworkFactory:android.os.Handler>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>:<public>:<android.app.Instrumentation>
<android.net.BaseNetworkStateTracker: boolean isPrivateDnsRouteSet()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.wifi.p2p.WifiP2pGroup: void setPassphrase(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.Insets: java.lang.String toString()>:<public>:<android.graphics.Insets>
<android.renderscript.Script: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.mtp.MtpObjectInfo: int getImagePixDepth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.os.ISchedulingPolicyService.Stub: void <init>()>:<public>:<android.os.ISchedulingPolicyService.Stub:android.os.Binder,android.os.ISchedulingPolicyService>
<android.hwtheme.HwThemeManagerDummy: java.io.InputStream getDefaultWallpaperIS(android.content.Context)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.ddm.DdmHandleExit: void connected()>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>:<public abstract>:<android.app.ActionBar>
<android.graphics.PathEffect: void nativeDestructor(long)>:<private static native>:<android.graphics.PathEffect>
<android.app.DialogFragment: int getTheme()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.Long3: android.renderscript.Long3 sub(android.renderscript.Long3,long)>:<public static>:<android.renderscript.Long3>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.graphics.TableMaskFilter: void <init>(byte[])>:<public>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.graphics.Paint: void setBidiFlags(int)>:<public>:<android.graphics.Paint>
<android.mtp.HwMtpDatabaseManagerDummy: boolean hwGetObjectReferences(int)>:<public>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.graphics.drawable.ScaleDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Process: boolean isIsolated()>:<public static final>:<android.os.Process>
<android.mtp.MtpDevice: byte[] getObject(int,int)>:<public>:<android.mtp.MtpDevice>
<android.net.wifi.PPPOEInfo.Status: void <init>(java.lang.String,int)>:<private>:<android.net.wifi.PPPOEInfo.Status:java.lang.Enum>
<android.app.BackStackRecord: android.transition.Transition cloneTransition(android.transition.Transition)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.BatteryStats: long getMobileRadioActiveUnknownTime(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.IActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.storage.StorageVolume: java.lang.String getUserLabel()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.renderscript.Type: android.renderscript.Type createX(android.renderscript.RenderScript,android.renderscript.Element,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.app.Notification.Builder: int calculateTopPadding(android.content.Context,boolean,float)>:<public static>:<android.app.Notification.Builder>
<android.graphics.drawable.Drawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Program: void bindConstants(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,boolean)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.net.LinkProperties: int describeContents()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.IActivityContainerCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IActivityContainerCallback.Stub.Proxy:android.app.IActivityContainerCallback>
<android.net.wifi.p2p.WifiP2pConfig: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.os.BatteryProperties: void <clinit>()>:<static>:<android.os.BatteryProperties:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.DropBoxManager.Entry: void close()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.hwtheme.HwThemeManager: android.content.res.Resources getResources(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public static>:<android.hwtheme.HwThemeManager>
<android.webkit.WebView.PrivateAccess: boolean super_setFrame(int,int,int,int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManagerProxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.ChooseTypeAndAccountActivity: java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>:<public>:<android.sax.Element>
<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.transition.Slide: int getSlideEdge()>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread.CreateServiceData: java.lang.String toString()>:<public>:<android.app.ActivityThread.CreateServiceData>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.storage.IObbActionListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.storage.IObbActionListener.Stub.Proxy:android.os.storage.IObbActionListener>
<android.transition.Slide.2: float getGoneX(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.2:android.transition.Slide.CalculateSlideHorizontal>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.Notification.1: android.app.Notification createFromParcel(android.os.Parcel)>:<public>:<android.app.Notification.1:android.os.Parcelable.Creator>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.app.EnterTransitionCoordinator: android.transition.Transition access.402(android.app.EnterTransitionCoordinator,android.transition.Transition)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.job.JobInfo.Builder: long access.600(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.webkit.WebView: void selectText()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Object)>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.os.DropBoxManager.Entry: void <clinit>()>:<static>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.ActivityThread: void installSystemProviders(java.util.List)>:<public final>:<android.app.ActivityThread>
<android.database.ContentObservable: void notifyChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace[] values()>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener: void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener>
<android.database.AbstractWindowedCursor: double getDouble(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.net.NetworkStatsHistory.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkStatsHistory.1:android.os.Parcelable.Creator>
<android.database.BulkCursorProxy: void close()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.webkit.WebView: void ensureProviderCreated()>:<private>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Path: void native_reset(long)>:<private static native>:<android.graphics.Path>
<android.net.wifi.HiSiWifiComm: int getSettingsGlobalIntValue(java.lang.String)>:<public>:<android.net.wifi.HiSiWifiComm>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.RenderScript: void nAllocationCopyFromBitmap(long,android.graphics.Bitmap)>:<>:<android.renderscript.RenderScript>
<android.os.Process: int myTid()>:<public static final>:<android.os.Process>
<android.accounts.ChooseAccountTypeActivity.ViewHolder: void <init>(android.accounts.ChooseAccountTypeActivity.1)>:<>:<android.accounts.ChooseAccountTypeActivity.ViewHolder>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.TransitionDrawable.TransitionState,android.graphics.drawable.Drawable[])>:<private>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.IPrintManager: java.util.List getEnabledPrintServices(int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.app.Notification.Builder: android.app.Notification.Builder setSubText(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleDownAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>:<public static>:<android.app.ActivityOptions>
<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.net.wifi.HiSiWifiComm: boolean hisiWifiEnabled()>:<public static>:<android.net.wifi.HiSiWifiComm>
<android.os.storage.StorageVolume: int getStorageId()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.os.RemoteCallback: void sendResult(android.os.Bundle)>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.net.IConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.NativeActivity: void onPauseNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()>:<public>:<android.filterfw.core.FrameManager>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.p2p.WifiP2pDeviceList.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pDeviceList.1:android.os.Parcelable.Creator>
<android.renderscript.Byte2: void add(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.graphics.Bitmap: void setWidth(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.IpConfiguration: void init(android.net.IpConfiguration.IpAssignment,android.net.IpConfiguration.ProxySettings,android.net.StaticIpConfiguration,android.net.ProxyInfo)>:<private>:<android.net.IpConfiguration:android.os.Parcelable>
<android.os.BatteryStats.Uid: android.util.SparseArray getSensorStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>:<public abstract>:<android.transition.PathMotion>
<android.webkit.WebViewFactory: boolean nativeCreateRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private static native>:<android.webkit.WebViewFactory>
<android.opengl.GLSurfaceView.EglHelper: void <init>(java.lang.ref.WeakReference)>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.os.INetworkManagementService.Stub.Proxy: void removeVpnUidRanges(int,android.net.UidRange[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.Matrix: void setTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.app.LoadedApk.ReceiverDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>:<public>:<android.app.LoadedApk.ReceiverDispatcher>
<android.net.http.Headers: void setContentType(java.lang.String)>:<public>:<android.net.http.Headers>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <clinit>()>:<static>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAndroidObbDirs()>:<public>:<android.os.Environment.UserEnvironment>
<android.graphics.drawable.GradientDrawable: void setShape(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.storage.IMountService: int resizeSecureContainer(java.lang.String,int,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.wifi.ScanResult: void <init>()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.graphics.Canvas: void native_setMatrix(long,long)>:<private static native>:<android.graphics.Canvas>
<android.renderscript.Script.LaunchOptions: int getZStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.webkit.WebView: void saveWebArchive(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.IConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.os.MemoryFile: void native_pin(java.io.FileDescriptor,boolean)>:<private static native>:<android.os.MemoryFile>
<android.os.BatteryProperties.1: android.os.BatteryProperties[] newArray(int)>:<public>:<android.os.BatteryProperties.1:android.os.Parcelable.Creator>
<android.mtp.MtpServer: void native_remove_storage(int)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult()>:<public volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.os.Parcel: void writeParcelableCreator(android.os.Parcelable)>:<public final>:<android.os.Parcel>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Long2: android.renderscript.Long2 add(android.renderscript.Long2,long)>:<public static>:<android.renderscript.Long2>
<android.net.wifi.ScanSettings.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.ScanSettings.1:android.os.Parcelable.Creator>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.RotateDrawable.RotateState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.os.TokenWatcher: boolean isAcquired()>:<public>:<android.os.TokenWatcher>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Byte3: void set(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.graphics.Region: boolean nativeSetRect(long,int,int,int,int)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.webkit.WebView: void setFindListener(android.webkit.WebView.FindListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.PowerManagerInternal: void setUserActivityTimeoutOverrideFromWindowManager(long)>:<public abstract>:<android.os.PowerManagerInternal>
<android.transition.ChangeBounds.8: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.ChangeBounds.8:android.animation.AnimatorListenerAdapter>
<android.webkit.WebView.PrivateAccess: boolean super_dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.drm.DrmSupportInfo: java.lang.String getDescription()>:<public>:<android.drm.DrmSupportInfo>
<android.net.INetworkScoreCache.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkScoreCache.Stub:android.os.Binder,android.net.INetworkScoreCache>
<android.database.CursorWrapper: double getDouble(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ActionBar: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.ActionBar>
<android.app.WallpaperInfo: java.lang.String toString()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.renderscript.Type: int getYuv()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.net.Uri.StringUri: void <init>(java.lang.String,android.net.Uri.1)>:<>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ActivityView: void onDetachedFromWindow()>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.graphics.Typeface: android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[])>:<public static>:<android.graphics.Typeface>
<android.net.NetworkStats: long getElapsedRealtime()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.app.backup.BackupTransport: int initializeDevice()>:<public>:<android.app.backup.BackupTransport>
<android.accounts.IAccountManager: java.lang.String getPassword(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.graphics.Matrix: void setScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.opengl.GLES10: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.VectorDrawable: float getPixelSize()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebView.PrivateAccess: void super_onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSIllegalArgumentException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.IWifiManager.Stub.Proxy: void reconnect()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.IApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.renderscript.RenderScript: void nAllocationCopyToBitmap(long,android.graphics.Bitmap)>:<>:<android.renderscript.RenderScript>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo build()>:<public>:<android.print.PrinterInfo.Builder>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.RenderScript: void rsnAllocationIoReceive(long,long)>:<native>:<android.renderscript.RenderScript>
<android.net.nsd.NsdManager: android.os.Messenger getMessenger()>:<private>:<android.net.nsd.NsdManager>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>:<public>:<android.app.KeyguardManager>
<android.graphics.drawable.BitmapDrawable: int getGravity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.trust.ITrustManager: void reportKeyguardShowingChanged()>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.net.Network.2: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.Network.2:android.os.Parcelable.Creator>
<android.net.wifi.RttManager: java.util.concurrent.CountDownLatch access.100()>:<static>:<android.net.wifi.RttManager>
<android.database.MergeCursor: int getCount()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.Dialog.ListenersHandler: void handleMessage(android.os.Message)>:<public>:<android.app.Dialog.ListenersHandler:android.os.Handler>
<android.graphics.Rect: boolean contains(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.Matrix.1: boolean preSkew(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.renderscript.RenderScript: void nContextSetSurface(int,int,android.view.Surface)>:<>:<android.renderscript.RenderScript>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.transition.Fade.FadeAnimatorListener: void <init>(android.view.View)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.transition.TransitionSet: void setCanRemoveViews(boolean)>:<>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void <init>(android.app.ActivityView,android.app.ActivityView.1)>:<>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.renderscript.RenderScript.RSErrorHandler: void run()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>:<public final>:<android.graphics.Canvas>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceAdded(java.lang.String)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.transition.Transition: void matchInstances(android.util.ArrayMap,android.util.ArrayMap)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.accounts.IAccountManager.Stub.Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.net.INetworkScoreCache.Stub: void <init>()>:<public>:<android.net.INetworkScoreCache.Stub:android.os.Binder,android.net.INetworkScoreCache>
<android.renderscript.Byte2: void addMultiple(android.renderscript.Byte2,byte)>:<public>:<android.renderscript.Byte2>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Allocation: void copyFrom(android.renderscript.BaseObj[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ContextImpl.28: void <init>()>:<>:<android.app.ContextImpl.28:android.app.ContextImpl.ServiceFetcher>
<android.net.Uri.PathSegmentsBuilder: void add(java.lang.String)>:<>:<android.net.Uri.PathSegmentsBuilder>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.core.SimpleFrame: android.filterfw.core.SimpleFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)>:<static>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.graphics.drawable.VectorDrawable.VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.webkit.WebView: int getContentHeight()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.net.wifi.HuaweiApConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.HuaweiApConfiguration:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetPointerv(int,java.nio.Buffer[])>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkStateTracker: java.lang.String getTcpBufferSizesPropName()>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration access.102(android.net.wifi.WifiConfiguration,android.net.IpConfiguration)>:<static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>:<public>:<android.filterfw.core.FilterGraph>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.mtp.MtpStorageInfo: void <init>()>:<private>:<android.mtp.MtpStorageInfo>
<android.transition.Transition: android.util.ArrayMap getNameOverrides()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Dialog: void onStop()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.hsm.HwSystemManager.HsmInterface: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.net.LocalSocketImpl: int getOption_native(java.io.FileDescriptor,int)>:<private native>:<android.net.LocalSocketImpl>
<android.app.TabActivity: void setDefaultTab(int)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.ParcelFileDescriptor.ListenerBridge.1: void handleMessage(android.os.Message)>:<public>:<android.os.ParcelFileDescriptor.ListenerBridge.1:android.os.Handler>
<android.print.IPrintManager: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void <init>(android.netdetect.HwCustNetDetectServiceImpl,android.netdetect.HwCustNetDetectServiceImpl.1)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.net.NetworkStats.1: void <init>()>:<>:<android.net.NetworkStats.1:android.os.Parcelable.Creator>
<android.app.Notification.Style: void populateHeadsUpContentView(android.app.Notification)>:<protected>:<android.app.Notification.Style>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.GLEnvironment: int nativeAddSurfaceFromMediaRecorder(android.media.MediaRecorder)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.net.TrafficStats: long getUidRxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.net.DhcpStateMachine.StoppedState: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.StoppedState:com.android.internal.util.State>
<android.app.VoiceInteractor.AbortVoiceRequest: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>:<>:<android.app.VoiceInteractor.AbortVoiceRequest:android.app.VoiceInteractor.Request>
<android.print.PrinterCapabilitiesInfo.1: android.print.PrinterCapabilitiesInfo[] newArray(int)>:<public>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteCursor: boolean requery()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_TEST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.renderscript.Matrix3f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.graphics.drawable.GradientDrawable.GradientState: void setColorStateList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityThread.ApplicationThread: void setCoreSettings(android.os.Bundle)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.ActivityOptions: boolean getLaunchTaskBehind()>:<public>:<android.app.ActivityOptions>
<android.graphics.drawable.VectorDrawable.VGroup: void setScaleY(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.IAppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>:<public abstract>:<android.app.IAppTask:android.os.IInterface>
<android.database.ContentObserver: void onChange(boolean)>:<public>:<android.database.ContentObserver>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>:<public>:<android.app.AlertDialog.Builder>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1502(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.trust.ITrustManager.Stub.Proxy: void reportUnlockAttempt(boolean,int)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.graphics.Paint: void reset()>:<public>:<android.graphics.Paint>
<android.graphics.Color: float saturation(int)>:<public static>:<android.graphics.Color>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2402(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.WorkSource: void <init>()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.RectF: void <init>(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Byte4: void <init>()>:<public>:<android.renderscript.Byte4>
<android.accounts.AccountManagerResponse.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.database.Cursor: int getCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.DrawFilter: void finalize()>:<protected>:<android.graphics.DrawFilter>
<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap peekBlurWallpaperBitmap(android.graphics.Rect)>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.webkit.WebView: void onPause()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>:<public>:<android.app.WallpaperManager>
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.RSTextureView: void init()>:<private>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>:<protected>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.graphics.BitmapRegionDecoder: int nativeGetWidth(long)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.app.Notification: java.lang.String toString()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig.Eap: void <clinit>()>:<static>:<android.net.wifi.WifiEnterpriseConfig.Eap>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActionBar: void setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar>
<android.app.ActivityManagerProxy: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.transition.Fade: void <init>(int)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.BaseNetworkStateTracker: android.net.Network getNetwork()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.os.CountDownTimer: boolean access.000(android.os.CountDownTimer)>:<static>:<android.os.CountDownTimer>
<android.os.Debug: long getPss()>:<public static native>:<android.os.Debug>
<android.accounts.IAccountManager.Stub.Proxy: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.os.Bundle.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.Bundle.1:android.os.Parcelable.Creator>
<android.os.BatteryStats: void prepareForDumpLocked()>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener: void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>:<public>:<android.renderscript.Mesh.Builder>
<android.app.Notification.WearableExtender: int getCustomContentHeight()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.Short3: short length()>:<public>:<android.renderscript.Short3>
<android.graphics.Canvas: int native_saveLayer(long,float,float,float,float,long,int)>:<private static native>:<android.graphics.Canvas>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<android.net.BaseNetworkStateTracker: void privateDnsRouteSet(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.graphics.drawable.AnimatedStateListDrawable: void init()>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ActivityManager: android.app.ActivityManager.CpuStatInfo getCpuStatInfo()>:<public static>:<android.app.ActivityManager>
<android.webkit.WebViewProvider: int findAll(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm[] values()>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.net.LinkAddress.1: void <init>()>:<>:<android.net.LinkAddress.1:android.os.Parcelable.Creator>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>:<public>:<android.net.http.SslError>
<android.os.INetworkManagementService.Stub.Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiCHRStateManager: void updateChannel(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<final>:<android.filterfw.core.Filter>
<android.net.DhcpStateMachine.RunningState: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.RunningState:com.android.internal.util.State>
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.IWifiManager: void acquireMulticastLock(android.os.IBinder,java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.backup.BackupTransport.TransportImpl: java.lang.String transportDirName()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.http.AndroidHttpClient: void enableCurlLogging(java.lang.String,int)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.renderscript.Int2: void mul(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.webkit.WebView.HitTestResult: void <init>()>:<public>:<android.webkit.WebView.HitTestResult>
<android.app.admin.DevicePolicyManager: void <init>(android.content.Context,android.os.Handler)>:<private>:<android.app.admin.DevicePolicyManager>
<android.app.ActivityView: android.view.Surface access.502(android.app.ActivityView,android.view.Surface)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.app.LoadedApk.ReceiverDispatcher.Args: void <init>(android.app.LoadedApk.ReceiverDispatcher,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>:<public>:<android.app.LoadedApk.ReceiverDispatcher.Args:android.content.BroadcastReceiver.PendingResult,java.lang.Runnable>
<android.filterfw.io.GraphReader: void addReference(java.lang.String,java.lang.Object)>:<public>:<android.filterfw.io.GraphReader>
<android.graphics.TableMaskFilter: long nativeNewTable(byte[])>:<private static native>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.filterfw.core.ProgramVariable: void <init>(android.filterfw.core.Program,java.lang.String)>:<public>:<android.filterfw.core.ProgramVariable>
<android.net.NetworkInfo.State: void <clinit>()>:<static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.IPowerManager: int setChargeHotLimit(int,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.RenderScript: void rsnScriptForEachClipped(long,long,int,long,long,byte[],int,int,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.os.Parcel.1: java.lang.String[] newArray(int)>:<public>:<android.os.Parcel.1:android.os.Parcelable.Creator>
<android.filterfw.core.FilterSurfaceView: int getSurfaceId()>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.wifi.WifiScanner.OperationResult.1: android.net.wifi.WifiScanner.OperationResult createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiScanner.OperationResult.1:android.os.Parcelable.Creator>
<android.app.ExpandableListActivity: long getSelectedPosition()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.net.wifi.WifiManager: java.util.List getApLinkedStaList()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ContextImpl.22: void <init>()>:<>:<android.app.ContextImpl.22:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLLogWrapper: java.lang.String getShadeModel(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.GLFrame: void flushGPU(java.lang.String)>:<>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.print.PrintJob: void <init>(android.print.PrintJobInfo,android.print.PrintManager)>:<>:<android.print.PrintJob>
<android.app.ApplicationErrorReport.RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.app.Instrumentation: void startProfiling()>:<public>:<android.app.Instrumentation>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.100(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.Uri: void <init>()>:<private>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.backup.BackupDataInputStream: int read()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.os.BaseBundle: void writeToParcelInner(android.os.Parcel,int)>:<>:<android.os.BaseBundle>
<android.app.backup.BackupManager: java.lang.String[] listAllTransports()>:<public>:<android.app.backup.BackupManager>
<android.net.DhcpStateMachine.WaitBeforeStartState: boolean processMessage(android.os.Message)>:<public>:<android.net.DhcpStateMachine.WaitBeforeStartState:com.android.internal.util.State>
<android.app.LoadedApk.ServiceDispatcher.DeathMonitor: void binderDied()>:<public>:<android.app.LoadedApk.ServiceDispatcher.DeathMonitor:android.os.IBinder.DeathRecipient>
<android.database.sqlite.SQLiteException: void <init>()>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.admin.IDevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteConnection: void recyclePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.sqlite.JankSqlite: boolean addQuery(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.webkit.WebSettings: void setAllowFileAccessFromFileURLs(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.backup.IFullBackupRestoreObserver: void onTimeout()>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDU(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.backup.IRestoreSession: void endRestoreSession()>:<public abstract>:<android.app.backup.IRestoreSession:android.os.IInterface>
<android.app.IActivityContainer.Stub.Proxy: void attachToDisplay(int)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.renderscript.Float3: android.renderscript.Float3 sub(android.renderscript.Float3,float)>:<public static>:<android.renderscript.Float3>
<android.net.DhcpResults: boolean setIpAddress(java.lang.String,int)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.IActivityManager: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glSampleCoverage(float,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.StrictMode: boolean hasGatheredViolations()>:<static>:<android.os.StrictMode>
<android.net.wifi.IRttManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.wifi.IRttManager.Stub.Proxy:android.net.wifi.IRttManager>
<android.app.ContextImpl.54: void <init>()>:<>:<android.app.ContextImpl.54:android.app.ContextImpl.ServiceFetcher>
<android.os.RemoteCallback: int describeContents()>:<public>:<android.os.RemoteCallback:android.os.Parcelable>
<android.app.IStopUserCallback.Stub.Proxy: void userStopped(int)>:<public>:<android.app.IStopUserCallback.Stub.Proxy:android.app.IStopUserCallback>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.os.BatteryStats.HistoryTag: void setTo(java.lang.String,int)>:<public>:<android.os.BatteryStats.HistoryTag>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.webkit.WebView: void clearUsernamePassword()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.IUiModeManager.Stub.Proxy: void disableCarMode(int)>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1400(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.renderscript.RenderScript: long rsnAllocationCreateFromBitmap(long,long,int,android.graphics.Bitmap,int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.FileA3D: int getIndexEntryCount()>:<public>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.transition.ChangeBounds.10: void <init>(android.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float)>:<>:<android.transition.ChangeBounds.10:android.animation.AnimatorListenerAdapter>
<android.mtp.MtpDatabase: int[] getSupportedObjectProperties(int)>:<private>:<android.mtp.MtpDatabase>
<android.drm.DrmManagerClient: android.content.ContentValues _getConstraints(int,java.lang.String,int)>:<private native>:<android.drm.DrmManagerClient>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>:<public final>:<android.os.Parcel>
<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ActivityManager: java.lang.String access.1000()>:<static>:<android.app.ActivityManager>
<android.app.backup.RestoreSession.RestoreObserverWrapper.1: void handleMessage(android.os.Message)>:<public>:<android.app.backup.RestoreSession.RestoreObserverWrapper.1:android.os.Handler>
<android.opengl.GLLogWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiLog.WifiExceptionRecord: void <init>(android.net.wifi.WifiLog.WiFiExceptionType,int)>:<public>:<android.net.wifi.WifiLog.WifiExceptionRecord>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: boolean canConstantState()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.FieldPacker: android.renderscript.Short3 subShort3()>:<public>:<android.renderscript.FieldPacker>
<android.net.http.RequestQueue: void disablePlatformNotifications()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.IAlarmManager: void setTimeZone(java.lang.String)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.os.SystemVibrator: void <init>(android.content.Context)>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.graphics.NinePatch: void drawSoftware(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint)>:<>:<android.graphics.NinePatch>
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.os.BatteryStats: void formatTimeRaw(java.lang.StringBuilder,long)>:<private static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.HwCustNotificationDummy: void setNotiActionButtonTextSize(android.content.Context,android.widget.RemoteViews,int)>:<public>:<android.app.HwCustNotificationDummy:android.app.IHwCustNotification>
<android.opengl.GLErrorWrapper: void glDisable(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: void setAPSOnPause()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.IHwWallpaperInfoStub: android.graphics.drawable.Drawable loadThumbnailWithoutTheme(android.content.pm.PackageManager)>:<public abstract>:<android.app.IHwWallpaperInfoStub>
<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>:<public>:<android.filterfw.core.GLEnvironment>
<android.graphics.drawable.NinePatchDrawable: int getAlpha()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.LoadedApk.ServiceDispatcher.InnerConnection: void <init>(android.app.LoadedApk.ServiceDispatcher)>:<>:<android.app.LoadedApk.ServiceDispatcher.InnerConnection:android.app.IServiceConnection.Stub,android.os.Binder>
<android.graphics.drawable.LayerDrawable: int getPaddingMode()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.TransitionInflater: void loadTransition(android.util.AttributeSet,android.view.ViewGroup,android.transition.TransitionManager)>:<private>:<android.transition.TransitionInflater>
<android.app.Activity: void startLockTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebViewProvider: android.webkit.WebSettings getSettings()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.RegistrantList: void add(android.os.Registrant)>:<public>:<android.os.RegistrantList>
<android.net.NetworkStatsHistory: void recordData(long,long,android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1100(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.IActivityManager: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Typeface: int nativeGetStyle(long)>:<private static native>:<android.graphics.Typeface>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.String)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.IUiAutomationConnection.Stub.Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.print.PrintAttributes.1: android.print.PrintAttributes[] newArray(int)>:<public>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.net.ScoredNetwork: int hashCode()>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomContentHeight(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.os.BatteryProperties: void <init>(android.os.Parcel,android.os.BatteryProperties.1)>:<>:<android.os.BatteryProperties:android.os.Parcelable>
<android.os.FileUtils: java.lang.String buildValidExtFilename(java.lang.String)>:<public static>:<android.os.FileUtils>
<android.app.backup.AbsoluteFileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.AbsoluteFileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.INetworkScoreCache.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkScoreCache.Stub.Proxy:android.net.INetworkScoreCache>
<android.app.Notification.BigTextStyle: int calculateMaxLines()>:<private>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)>:<public>:<android.emoji.EmojiFactory>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(int,android.net.NetworkStatsHistory.Entry)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.appwidget.AppWidgetHost: void onProvidersChanged()>:<protected>:<android.appwidget.AppWidgetHost>
<android.accounts.ChooseTypeAndAccountActivity: void onAccountSelected(android.accounts.Account)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.webkit.WebView: void freeMemoryForTests()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getNetworkInfoForNetwork(android.net.Network)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.wifi.HwCustAbsWifiConfiguration: void <init>()>:<public>:<android.net.wifi.HwCustAbsWifiConfiguration>
<android.graphics.BitmapRegionDecoder: void finalize()>:<protected>:<android.graphics.BitmapRegionDecoder>
<android.net.Uri.Builder: boolean hasSchemeOrAuthority()>:<private>:<android.net.Uri.Builder>
<android.accounts.AccountManager.5: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.ddm.DdmHandleAppName: java.lang.String getAppName()>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.BatteryStats: void formatTime(java.lang.StringBuilder,long)>:<public static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>:<public>:<android.app.ActionBar>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>:<public>:<android.webkit.WebSettings>
<android.os.BatteryStats.Uid: android.util.SparseArray getPidStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ITransientNotification.Stub: void <init>()>:<public>:<android.app.ITransientNotification.Stub:android.os.Binder,android.app.ITransientNotification>
<android.graphics.Point: void <init>()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDepthRangef(float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.DnsPinger.ActivePing: void <init>(android.net.DnsPinger,android.net.DnsPinger.1)>:<>:<android.net.DnsPinger.ActivePing>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.ConnectivityManager: boolean updateLockdownVpn()>:<public>:<android.net.ConnectivityManager>
<android.net.ProxyDataTracker: void <init>()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.net.TrafficStats: void clearThreadStatsUid()>:<public static>:<android.net.TrafficStats>
<android.renderscript.Long3: android.renderscript.Long3 add(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>:<public>:<android.app.TaskStackBuilder>
<android.os.PowerManager.BacklightBrightness: boolean isValid()>:<public>:<android.os.PowerManager.BacklightBrightness>
<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>:<final>:<android.filterfw.core.Filter>
<android.net.wifi.HwWifiStatStore: void updateDhcpState(int)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.filterfw.core.FilterSurfaceView: void unbind()>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void <init>()>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.NetworkCapabilities: void setLinkDownstreamBandwidthKbps(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.hwtheme.HwThemeManager.IHwThemeManager: void applyDefaultHwTheme(boolean,android.content.Context)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.ActivityManager.RecentTaskInfo.1: android.app.ActivityManager.RecentTaskInfo[] newArray(int)>:<public>:<android.app.ActivityManager.RecentTaskInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.http.RequestQueue.ActivePool: void <init>(android.net.http.RequestQueue,int)>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.net.ConnectivityManager: int getNetworkPreference()>:<public>:<android.net.ConnectivityManager>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.net.dhcp.DhcpInformPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpInformPacket:android.net.dhcp.DhcpPacket>
<android.graphics.drawable.Ripple: float getRadiusGravity()>:<public>:<android.graphics.drawable.Ripple>
<android.graphics.Bitmap: void setPixel(int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>:<public>:<android.app.TaskStackBuilder>
<android.renderscript.Int2: int get(int)>:<public>:<android.renderscript.Int2>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void handlePackageRemoved(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.os.StrictMode.ThreadPolicy: void <clinit>()>:<static>:<android.os.StrictMode.ThreadPolicy>
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.StrictMode: long access.1500()>:<static>:<android.os.StrictMode>
<android.renderscript.Script: boolean getVarB(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.Paint: void native_setStrokeJoin(long,int)>:<private static native>:<android.graphics.Paint>
<android.net.LinkAddress: java.lang.String toString()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.os.IMultiWinService: boolean unregisterMWCallBack(android.os.IMultiWinServiceCallBack)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.Uri.StringUri: java.lang.String getSchemeSpecificPart()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.NetworkStatsHistory: int size()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppDataDirsForVold(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.net.wifi.WifiScanner.ScanSettings.1: void <init>()>:<>:<android.net.wifi.WifiScanner.ScanSettings.1:android.os.Parcelable.Creator>
<android.app.ISearchManager.Stub.Proxy: android.content.ComponentName getWebSearchActivity()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.wifi.WpsResult.Status: void <init>(java.lang.String,int)>:<private>:<android.net.wifi.WpsResult.Status:java.lang.Enum>
<android.database.CursorWrapper: boolean move(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.IUserManager.Stub.Proxy: java.util.List getUsers(boolean)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] hexStr2Bin(java.lang.String)>:<private static>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void clearAccessibilityCache()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.filterfw.core.SyncRunner: boolean isRunning()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.print.PrintJobInfo: java.lang.String getPrinterName()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.pdf.PdfRenderer: void access.400(long,long,long,int,int,int,int,long,int)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.app.WallpaperManager.Globals: void onWallpaperChanged()>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.renderscript.RenderScript: long nFontCreateFromAsset(android.content.res.AssetManager,java.lang.String,float,int)>:<>:<android.renderscript.RenderScript>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.app.ActivityManager.RunningAppProcessInfo.1: android.app.ActivityManager.RunningAppProcessInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo.1:android.os.Parcelable.Creator>
<android.app.ExitTransitionCoordinator: void startExit()>:<public>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.database.IBulkCursor: android.database.CursorWindow getWindow(int)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.net.wifi.RttManager.ParcelableRttResults.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.RttManager.ParcelableRttResults.1:android.os.Parcelable.Creator>
<android.net.wifi.BatchedScanSettings: void <clinit>()>:<static>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.net.Uri.StringUri: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ApplicationPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ITransientNotification.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.ITransientNotification.Stub.Proxy:android.app.ITransientNotification>
<android.os.PowerManager: void wakeUp(long)>:<public>:<android.os.PowerManager>
<android.app.Notification.Builder: void restoreFromNotification(android.app.Notification)>:<private>:<android.app.Notification.Builder>
<android.os.Parcel: void nativeAppendFrom(long,long,int,int)>:<private static native>:<android.os.Parcel>
<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.database.MergeCursor: java.lang.String getString(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAspectScaleDownAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>:<public static>:<android.app.ActivityOptions>
<android.os.Process: int getGidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.os.BaseBundle: int getInt(java.lang.String,int)>:<public>:<android.os.BaseBundle>
<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.graphics.drawable.BitmapDrawable: boolean needMirroring()>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.net.http.SslError: java.lang.String getUrl()>:<public>:<android.net.http.SslError>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiCHRStateManager: void uploadDisconnectException(int)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.HwKeyguardManager: boolean isLockScreenDisabled(android.content.Context)>:<public abstract>:<android.app.HwKeyguardManager>
<android.renderscript.Byte3: android.renderscript.Byte3 sub(android.renderscript.Byte3,android.renderscript.Byte3)>:<public static>:<android.renderscript.Byte3>
<android.graphics.drawable.ShapeDrawable: void clearMutated()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.RemoteInput: boolean getAllowFreeFormInput()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.filterfw.core.StopWatchMap: void stop(java.lang.String)>:<public>:<android.filterfw.core.StopWatchMap>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceStatusChanged(java.lang.String,boolean)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.app.EnterTransitionCoordinator: void prepareEnter()>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.IAlarmManager.Stub.Proxy: void remove(android.app.PendingIntent)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.app.IUiModeManager: int getNightMode()>:<public abstract>:<android.app.IUiModeManager:android.os.IInterface>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.opengl.GLSurfaceView.EglHelper: void destroySurface()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.graphics.drawable.BitmapDrawable: boolean hasMipMap()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.AnimatedVectorDrawable: void clearMutated()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.Activity: void dismissDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.StrictMode.5: void <init>(java.lang.String,int,android.os.StrictMode.ViolationInfo)>:<>:<android.os.StrictMode.5:java.lang.Thread>
<android.transition.ChangeBounds.ViewBounds: void setBottomRight(android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.ViewBounds>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.ILayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.ConnectivityManager: boolean isTetheringSupported()>:<public>:<android.net.ConnectivityManager>
<android.app.ActivityTransitionCoordinator: int scaleTypeToInt(android.widget.ImageView.ScaleType)>:<private static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.Build.VERSION: void <init>()>:<public>:<android.os.Build.VERSION>
<android.accounts.AccountManager.AmsTask: void set(android.os.Bundle)>:<protected>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.UiAutomationConnection: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.Uri.OpaqueUri: java.lang.String getHost()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.app.AlarmManager: long changeGcmHeartbeat(long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.408(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.net.LinkQualityInfo.1: void <init>()>:<>:<android.net.LinkQualityInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void <init>(android.filterfw.core.AsyncRunner,android.filterfw.core.AsyncRunner.1)>:<>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.opengl.GLSurfaceView: void <clinit>()>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.accounts.IAccountAuthenticator.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.renderscript.Script.LaunchOptions: int getYStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(long,boolean)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.filterfw.core.GLFrame: float[] getNativeFloats()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.hsm.HwSystemManager.HsmInterface: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.os.PowerManager: void setLcdRatio(int,boolean)>:<public>:<android.os.PowerManager>
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)>:<protected>:<android.filterfw.core.Filter>
<android.app.ActivityManager.StackInfo: void <clinit>()>:<static>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glLoadMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>:<public abstract>:<android.net.http.EventHandler>
<android.os.SystemProperties: void <init>()>:<public>:<android.os.SystemProperties>
<android.renderscript.Float2: void sub(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.net.wifi.WifiEnterpriseConfig: void writeCertificate(android.os.Parcel,java.security.cert.X509Certificate)>:<private>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.WifiManager.ActionListener: void onSuccess()>:<public abstract>:<android.net.wifi.WifiManager.ActionListener>
<android.accounts.IAccountManager: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: void setSoftapDisassociateSta(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,long,long,long,long,long)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.webkit.WebViewProvider: boolean restorePicture(android.os.Bundle,java.io.File)>:<public abstract>:<android.webkit.WebViewProvider>
<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.renderscript.RenderScript: void setupDiskCache(java.io.File)>:<public static>:<android.renderscript.RenderScript>
<android.app.ContextImpl.33: void <init>()>:<>:<android.app.ContextImpl.33:android.app.ContextImpl.ServiceFetcher>
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.SharedPreferencesImpl.EditorImpl.3: void run()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl.3:java.lang.Runnable>
<android.os.AsyncTask.1: java.lang.Thread newThread(java.lang.Runnable)>:<public>:<android.os.AsyncTask.1:java.util.concurrent.ThreadFactory>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.IBackupManager.Stub.Proxy: void fullRestore(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwner()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.job.JobService.JobHandler: void ackStopMessage(android.app.job.JobParameters,boolean)>:<private>:<android.app.job.JobService.JobHandler:android.os.Handler>
<android.app.ITaskStackListener.Stub.Proxy: void onTaskStackChanged()>:<public>:<android.app.ITaskStackListener.Stub.Proxy:android.app.ITaskStackListener>
<android.opengl.GLLogWrapper: void glBindTexture(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.UserManager: android.os.UserManager get(android.content.Context)>:<public static>:<android.os.UserManager>
<android.net.dhcp.DhcpDiscoverPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpDiscoverPacket:android.net.dhcp.DhcpPacket>
<android.net.WifiKey.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.WifiKey.1:android.os.Parcelable.Creator>
<android.filterfw.core.GLEnvironment: boolean nativeAllocate()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.graphics.Matrix: boolean preScale(float,float)>:<public>:<android.graphics.Matrix>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.IpPrefix: java.lang.String toString()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTexGeni(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.storage.StorageVolume: android.os.storage.StorageVolume fromTemplate(android.os.storage.StorageVolume,java.io.File,android.os.UserHandle)>:<public static>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.ActivityView: int access.202(android.app.ActivityView,int)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.Activity: android.app.ActionBar getActionBar()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.Bundle: void putByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Paint: void setFontFeatureSettings(java.lang.String)>:<public>:<android.graphics.Paint>
<android.net.wifi.HwCustActionListener: void onSuccess()>:<public abstract>:<android.net.wifi.HwCustActionListener:android.net.wifi.WifiManager.ActionListener>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.emoji.EmojiFactory: void nativeDestructor(long)>:<private native>:<android.emoji.EmojiFactory>
<android.os.FileUtils: void <clinit>()>:<static>:<android.os.FileUtils>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityPaused(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.opengl.GLSurfaceView.EglHelper: boolean createSurface()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.opengl.GLLogWrapper: void glTexEnvf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.app.Activity: void restoreManagedDialogs(android.os.Bundle)>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Long4: void add(long)>:<public>:<android.renderscript.Long4>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.INotificationManager: void requestHintsFromListener(android.service.notification.INotificationListener,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.graphics.pdf.PdfEditor: boolean nativeScaleForPrinting(long)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.graphics.BitmapRegionDecoder: void nativeClean(long)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFinished(android.print.PageRange[])>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.graphics.pdf.PdfDocument: long nativeStartPage(long,int,int,int,int,int,int)>:<private static native>:<android.graphics.pdf.PdfDocument>
<android.app.ExitTransitionCoordinator.2: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.2:android.transition.Transition.TransitionListenerAdapter>
<android.app.SharedPreferencesImpl: int access.308(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.renderscript.Element: android.renderscript.Element U16_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.VoiceInteractor.Request: void onCancel()>:<public>:<android.app.VoiceInteractor.Request>
<android.app.ContextImpl.19: java.lang.Object createStaticService()>:<public>:<android.app.ContextImpl.19:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.net.IConnectivityManager.Stub.Proxy: boolean isNetworkSupported(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.net.Network.1: void <init>(android.net.Network)>:<>:<android.net.Network.1:com.android.okhttp.HostResolver>
<android.filterfw.core.InputPort: void open()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.graphics.Outline: void <init>(android.graphics.Outline)>:<public>:<android.graphics.Outline>
<android.renderscript.RenderScript: long nAllocationCreateFromAssetStream(int,int,int)>:<>:<android.renderscript.RenderScript>
<android.renderscript.Double3: void <init>()>:<public>:<android.renderscript.Double3>
<android.net.IConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.IAlarmManager: boolean setTime(long)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.filterfw.core.GLFrame: void init(android.filterfw.core.GLEnvironment)>:<>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.SearchableInfo: int getLabelId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>:<protected>:<android.net.LocalSocketImpl>
<android.net.NetworkStatsHistory: void <init>(long,int)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.IActivityController.Stub.Proxy: int systemNotResponding(java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>:<public>:<android.app.ActivityManager>
<android.app.ActivityThread: void access.300(android.app.ActivityThread,int,java.lang.Object)>:<static>:<android.app.ActivityThread>
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.renderscript.ScriptIntrinsicHistogram: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AccountManager.Future2Task: java.lang.Object internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>:<private>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.graphics.drawable.RippleDrawable: void setMaxRadius(int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.PerformanceCollector: android.os.Bundle endSnapshot()>:<public>:<android.os.PerformanceCollector>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>:<public>:<android.graphics.Path>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.wifi.WifiInfo getConnectionInfo()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.backup.FileBackupHelperBase: boolean writeFile(java.io.File,android.app.backup.BackupDataInputStream)>:<>:<android.app.backup.FileBackupHelperBase>
<android.net.NetworkStats: void dump(java.lang.String,java.io.PrintWriter)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1708(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,int,java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.backup.RestoreSet.1: void <init>()>:<>:<android.app.backup.RestoreSet.1:android.os.Parcelable.Creator>
<android.os.UpdateLock: void finalize()>:<protected>:<android.os.UpdateLock>
<android.filterfw.core.FrameFormat: boolean isReplaceableBy(android.filterfw.core.FrameFormat)>:<>:<android.filterfw.core.FrameFormat>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.app.SearchDialog: void onConfigurationChanged()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.app.Activity: void onDestroy()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.RestoreDescription: void <init>(android.os.Parcel,android.app.backup.RestoreDescription.1)>:<>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.Paint.Align: android.graphics.Paint.Align valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.renderscript.Matrix2f: void loadIdentity()>:<public>:<android.renderscript.Matrix2f>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.LoaderManagerImpl: void doStart()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.net.Uri.Builder: java.lang.String toString()>:<public>:<android.net.Uri.Builder>
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.net.DhcpStateMachine: android.app.PendingIntent access.1500(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>:<public>:<android.graphics.PathMeasure>
<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener: void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener>
<android.app.ActivityManagerProxy: boolean requestVisibleBehind(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo,android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkState[] getAllNetworkState()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ApplicationErrorReport.CrashInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.mtp.MtpPropertyGroup.Property: void <init>(android.mtp.MtpPropertyGroup,int,int,int)>:<>:<android.mtp.MtpPropertyGroup.Property>
<android.filterfw.core.AsyncRunner: void stop()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.renderscript.Allocation: void setSurface(android.view.Surface)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>:<public>:<android.net.LocalServerSocket>
<android.os.BatteryStats: void printSizeValue(java.io.PrintWriter,long)>:<private>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.FindActionModeCallback.NoAction: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public>:<android.webkit.FindActionModeCallback.NoAction:android.view.ActionMode.Callback>
<android.app.IActivityManager: void startLockTaskMode(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager.Request)>:<public>:<android.app.DownloadManager>
<android.os.UEventObserver: java.lang.String access.100()>:<static>:<android.os.UEventObserver>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean installHwTheme(java.lang.String,boolean)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.SntpClient: long read32(byte[],int)>:<private>:<android.net.SntpClient>
<android.graphics.Canvas: void native_translate(long,float,float)>:<private static native>:<android.graphics.Canvas>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.WallpaperManager: boolean access.100()>:<static>:<android.app.WallpaperManager>
<android.os.IPermissionController.Stub.Proxy: boolean checkPermission(java.lang.String,int,int)>:<public>:<android.os.IPermissionController.Stub.Proxy:android.os.IPermissionController>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.database.MatrixCursor: java.lang.Object get(int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.AnimatedStateListDrawable: int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.ParcelUuid: int hashCode()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.app.ActivityManager.CpuStatInfo.1: void <init>()>:<>:<android.app.ActivityManager.CpuStatInfo.1:android.os.Parcelable.Creator>
<android.os.ISchedulingPolicyService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.ISchedulingPolicyService.Stub:android.os.Binder,android.os.ISchedulingPolicyService>
<android.graphics.drawable.Drawable: void setAlpha(int)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.IConnectivityManager: java.lang.String getMobileRedirectedProvisioningUrl()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.renderscript.Int2: void div(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.os.storage.StorageManager.ObbActionListener: void <init>(android.os.storage.StorageManager,android.os.storage.StorageManager.1)>:<>:<android.os.storage.StorageManager.ObbActionListener:android.os.storage.IObbActionListener.Stub,android.os.Binder>
<android.app.DownloadManager.CursorTranslator: long getReason(int)>:<private>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.Uri.AbstractPart: void <init>(java.lang.String,java.lang.String)>:<>:<android.net.Uri.AbstractPart>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.webkit.WebViewFactory: java.lang.String[] getWebViewNativeLibraryPaths()>:<private static>:<android.webkit.WebViewFactory>
<android.net.wifi.HuaweiApConfiguration.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.HuaweiApConfiguration.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Builder: android.app.Notification.Builder setOngoing(boolean)>:<public>:<android.app.Notification.Builder>
<android.os.StrictMode.StrictModeDiskWriteViolation: void <init>(int)>:<public>:<android.os.StrictMode.StrictModeDiskWriteViolation:android.os.StrictMode.StrictModeViolation>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>:<protected>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.net.DhcpStateMachine: boolean access.400(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.LocalSocket: boolean isInputShutdown()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.Fragment: boolean isDetached()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.AnimatedVectorDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>:<private>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.opengl.GLES10: void glNormal3f(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.os.IUserManager: void setUserEnabled(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.LoaderManagerImpl: void destroyLoader(int)>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.database.CursorWindow: void nativeClear(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityThread.1: void run()>:<public>:<android.app.ActivityThread.1:java.lang.Runnable>
<android.app.ITaskStackListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.ITaskStackListener.Stub.Proxy:android.app.ITaskStackListener>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintAttributes: android.print.PrintAttributes.MediaSize getMediaSize()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.app.ActivityManagerProxy: void keyguardWaitingForActivityDrawn()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Debug: java.lang.String getCpuInfo()>:<public static final native>:<android.os.Debug>
<android.graphics.SweepGradient: long nativeCreate1(float,float,int[],float[])>:<private static native>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.opengl.GLES20: void glGenerateMipmap(int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManager: int getCurrentUser()>:<public static>:<android.app.ActivityManager>
<android.app.Notification.BigPictureStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.app.Activity: android.transition.Scene getContentScene()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.AnimatedVectorDrawable.1: void <init>(android.graphics.drawable.AnimatedVectorDrawable)>:<>:<android.graphics.drawable.AnimatedVectorDrawable.1:android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.LayerDrawable: void setOpacity(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.IUserManager.Stub.Proxy: void setUserEnabled(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.MobileDataStateTracker: boolean isDefaultRouteSet()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.VpnService: void check(java.net.InetAddress,int)>:<private static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.BaseBundle: java.lang.ClassLoader getClassLoader()>:<>:<android.os.BaseBundle>
<android.os.storage.IMountService: java.lang.String getPassword()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.opengl.GLES20: void glLinkProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.backup.IBackupManager: java.lang.String getDataManagementLabel(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager create(android.content.Context,android.os.Handler)>:<public static>:<android.app.admin.DevicePolicyManager>
<android.net.WifiLinkQualityInfo: void setTxBad(long)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteConnection: void releasePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.print.PrintDocumentInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.IActivityManager: java.lang.String getCallingPackage(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDevice: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.app.Activity: void overridePendingTransition(int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiEnterpriseConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.opengl.GLES10: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES10>
<android.app.Instrumentation: void startPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.accounts.AccountAndUser: void <init>(android.accounts.Account,int)>:<public>:<android.accounts.AccountAndUser>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.FragmentManagerImpl.1: void <init>(android.app.FragmentManagerImpl)>:<>:<android.app.FragmentManagerImpl.1:java.lang.Runnable>
<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.os.IMultiWinService.Stub.Proxy: void setCloseChangeViewInvisible()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.alsa.AlsaDevicesParser: boolean hasCaptureDevices(int)>:<public>:<android.alsa.AlsaDevicesParser>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.ShortBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.ColorMatrixColorFilter: void update()>:<private>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.os.ConditionVariable: void close()>:<public>:<android.os.ConditionVariable>
<android.graphics.Bitmap: void nativePrepareToDraw(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getPermittedInputMethods(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.filterfw.core.NativeFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.database.BulkCursorToCursorAdaptor: int getCount()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)>:<public>:<android.app.ActivityManager>
<android.os.BaseBundle: short getShort(java.lang.String,short)>:<>:<android.os.BaseBundle>
<android.graphics.drawable.RotateDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>:<public>:<android.app.Notification.Builder>
<android.graphics.Picture: int getHeight()>:<public>:<android.graphics.Picture>
<android.renderscript.Short2: void mod(short)>:<public>:<android.renderscript.Short2>
<android.app.ActivityManager: boolean switchUser(int)>:<public>:<android.app.ActivityManager>
<android.app.ActivityManagerInternal: void <init>()>:<public>:<android.app.ActivityManagerInternal>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStopTiming(android.os.Bundle)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.filterfw.core.CachedFrameManager: void tearDown()>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.os.IHDMIConnectService.Stub.Proxy: void setHDCPEnable(boolean)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)>:<public static>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.renderscript.Short3: void <init>(short,short,short)>:<public>:<android.renderscript.Short3>
<android.net.wifi.IWifiManager: void initializeMulticastFiltering()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh create()>:<public>:<android.renderscript.Mesh.Builder>
<android.renderscript.Script: void getVarV(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.Fragment: void onDestroyView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: boolean access.901(android.webkit.WebView,android.view.MotionEvent)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ActivityTransitionCoordinator.2: void <init>(android.app.ActivityTransitionCoordinator,android.view.View,int)>:<>:<android.app.ActivityTransitionCoordinator.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebViewProvider.ViewDelegate: void onVisibilityChanged(android.view.View,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.os.FileUtils: java.lang.String[] rewriteAfterRename(java.io.File,java.io.File,java.lang.String[])>:<public static>:<android.os.FileUtils>
<android.database.BulkCursorDescriptor.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.app.LoadedApk: java.lang.String[] getSplitAppDirs()>:<public>:<android.app.LoadedApk>
<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>:<private>:<android.app.ActivityThread>
<android.net.wifi.RttManager: void startRanging(android.net.wifi.RttManager.RttParams[],android.net.wifi.RttManager.RttListener)>:<public>:<android.net.wifi.RttManager>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>:<public final>:<android.os.Handler>
<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.app.job.JobInfo.Builder: long access.1100(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.filterfw.core.SimpleFrame: boolean hasNativeAllocation()>:<protected>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>:<public static>:<android.net.TrafficStats>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Parcel: long getGlobalAllocCount()>:<public static native>:<android.os.Parcel>
<android.os.TransactionTooLargeException: void <init>()>:<public>:<android.os.TransactionTooLargeException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.accounts.AccountManager.13: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.13:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.EnterTransitionCoordinator: void makeOpaque()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.net.wifi.ScanResult: boolean is24GHz(int)>:<public static>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: void glDrawTexfOES(float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void finish()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.graphics.Paint: void setARGB(int,int,int,int)>:<public>:<android.graphics.Paint>
<android.app.Notification.Builder: java.lang.CharSequence access.1402(android.app.Notification.Builder,java.lang.CharSequence)>:<static>:<android.app.Notification.Builder>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.net.LocalSocketImpl: void finalize()>:<protected>:<android.net.LocalSocketImpl>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.renderscript.Double2: void add(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.opengl.GLLogWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.BaseObj: java.lang.String getName()>:<public>:<android.renderscript.BaseObj>
<android.opengl.EGL14: int eglGetError()>:<public static native>:<android.opengl.EGL14>
<android.net.BaseNetworkStateTracker: void setNetId(int)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.webkit.WebViewClient: void onUnhandledInputEventInternal(android.webkit.WebView,android.view.InputEvent)>:<private>:<android.webkit.WebViewClient>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Double4: void negate()>:<public>:<android.renderscript.Double4>
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.app.Instrumentation.InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>:<public>:<android.app.Instrumentation.InstrumentationThread:java.lang.Thread>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onCustomSlowCall(java.lang.String)>:<>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.graphics.drawable.VectorDrawable: void <init>(android.graphics.drawable.VectorDrawable.VectorDrawableState)>:<private>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.FilterGraph: void connect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.filterfw.core.FilterGraph>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: void endLogIndices()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Action.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.Notification.Action.1:android.os.Parcelable.Creator>
<android.mtp.MtpServer: void sendObjectAdded(int)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.net.nsd.DnsSdTxtRecord: void <init>(byte[])>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.net.wifi.BatchedScanSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.drm.DrmStore.Action: boolean isValid(int)>:<static>:<android.drm.DrmStore.Action>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.graphics.Matrix.1: boolean postSkew(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.graphics.Bitmap: int nativeGenerationId(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.ConnectivityManager: void expireRequest(android.net.NetworkCapabilities,int)>:<private>:<android.net.ConnectivityManager>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.renderscript.RSTextureView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.hsm.HwSystemManager: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static>:<android.hsm.HwSystemManager>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.FactoryTest: boolean isLongPressOnPowerOffEnabled()>:<public static>:<android.os.FactoryTest>
<android.net.wifi.HuaweiApConfiguration.1: void <init>()>:<>:<android.net.wifi.HuaweiApConfiguration.1:android.os.Parcelable.Creator>
<android.graphics.drawable.GradientDrawable: void applyThemeChildElements(android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.Parcel: void recycle()>:<public final>:<android.os.Parcel>
<android.transition.Transition: java.lang.Object clone()>:<public volatile>:<android.transition.Transition:java.lang.Cloneable>
<android.app.backup.IRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver)>:<public abstract>:<android.app.backup.IRestoreSession:android.os.IInterface>
<android.graphics.Bitmap: int getDensity()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getEnterFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintAttributes.Resolution: int getHorizontalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.app.SearchDialog: void <init>(android.content.Context,android.app.SearchManager)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.app.usage.IUsageStatsManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.usage.IUsageStatsManager.Stub:android.os.Binder,android.app.usage.IUsageStatsManager>
<android.app.Notification.WearableExtender: void setFlag(int,boolean)>:<private>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.graphics.Paint: boolean native_getFillPath(long,long,long)>:<private static native>:<android.graphics.Paint>
<android.renderscript.Allocation: void copyFrom(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.graphics.Paint: long native_setMaskFilter(long,long)>:<private static native>:<android.graphics.Paint>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPages(java.util.List)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.sax.Children: android.sax.Element get(java.lang.String,java.lang.String)>:<>:<android.sax.Children>
<android.net.wifi.HwWifiStatStore: void setApVendorInfo(java.lang.String)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.filterfw.core.FilterGraph: java.util.HashSet getSourceFilters()>:<private>:<android.filterfw.core.FilterGraph>
<android.accessibilityservice.AccessibilityService: int access.002(android.accessibilityservice.AccessibilityService,int)>:<static>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Parcel: void writeArrayMap(android.util.ArrayMap)>:<public>:<android.os.Parcel>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterfw.core.FinalPort: java.lang.String toString()>:<public>:<android.filterfw.core.FinalPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.transition.TransitionInflater: android.transition.TransitionInflater 'from'(android.content.Context)>:<public static>:<android.transition.TransitionInflater>
<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl.LoaderInfo)>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedSqlLiteObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.os.storage.IMountService.Stub.Proxy: void unregisterListener(android.os.storage.IMountServiceListener)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.storage.IMountService.Stub.Proxy: void clearPassword()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.graphics.RectF: void <init>(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.opengl.GLES20: int glGetError()>:<public static native>:<android.opengl.GLES20>
<android.os.Process: int setUid(int)>:<public static final native>:<android.os.Process>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.wifi.PPPOEConfig: int describeContents()>:<public>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.net.NetworkUtils: boolean protectFromVpn(int)>:<public static native>:<android.net.NetworkUtils>
<android.app.ActivityManager: java.util.List getRunningServices(int)>:<public>:<android.app.ActivityManager>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.PowerManager.WakeLock: boolean isHeld()>:<public>:<android.os.PowerManager.WakeLock>
<android.net.wifi.PPPOEInfo.1: android.net.wifi.PPPOEInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.PPPOEInfo.1:android.os.Parcelable.Creator>
<android.app.ContextImpl: android.content.Context createConfigurationContext(android.content.res.Configuration)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],android.app.LoadedApk)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.database.CursorJoiner.1: void <clinit>()>:<static>:<android.database.CursorJoiner.1>
<android.app.Fragment.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public volatile>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>:<public final>:<android.os.Parcel>
<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.Parcel: boolean pushAllowFds(boolean)>:<public final>:<android.os.Parcel>
<android.app.Notification.WearableExtender: java.util.List getActions()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.NativeActivity: void onSurfaceCreatedNative(long,android.view.Surface)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.storage.StorageManager.ListenerDelegate: void sendShareAvailabilityChanged(boolean)>:<>:<android.os.storage.StorageManager.ListenerDelegate>
<android.renderscript.Int4: void negate()>:<public>:<android.renderscript.Int4>
<android.net.http.Timer: void mark(java.lang.String)>:<public>:<android.net.http.Timer>
<android.net.NetworkStats.1: android.net.NetworkStats createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkStats.1:android.os.Parcelable.Creator>
<android.net.wifi.PPPOEInfo.Status: android.net.wifi.PPPOEInfo.Status valueOf(java.lang.String)>:<public static>:<android.net.wifi.PPPOEInfo.Status:java.lang.Enum>
<android.app.Notification.Action.Extender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>:<public abstract>:<android.app.Notification.Action.Extender>
<android.graphics.Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiCHRStateManager: boolean needDayliUpload()>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.os.Parcel: void clearFileDescriptor(java.io.FileDescriptor)>:<static native>:<android.os.Parcel>
<android.app.FragmentManager: void popBackStack(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.accounts.AccountManager.5: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>:<private>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.transition.ChangeImageTransform: android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)>:<private>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>:<protected>:<android.net.LocalSocketImpl>
<android.hwcontrol.HwWidgetFactory: android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper getHwMenuPopupHelper(android.content.Context,com.android.internal.view.menu.MenuPopupHelper,android.util.AttributeSet)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.opengl.GLLogWrapper: void glDisable(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.pdf.PrintedPdfDocument: int getPageWidth()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.app.usage.IUsageStatsManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.renderscript.AllocationAdapter: void subData1D(int,int,short[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>:<public>:<android.graphics.Paint>
<android.opengl.GLErrorWrapper: void glMultMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isTAlarms(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.hwtheme.HwThemeManagerDummy: boolean isTAlarms(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>:<public static final>:<android.webkit.URLUtil>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.usage.UsageEvents: void resetToStart()>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory: void <clinit>()>:<static>:<android.hwcontrol.HwWidgetFactory>
<android.net.wifi.IWifiManager.Stub.Proxy: void addToBlacklist(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.EnterTransitionCoordinator.6: void <init>(android.app.EnterTransitionCoordinator)>:<>:<android.app.EnterTransitionCoordinator.6:android.transition.Transition.TransitionListenerAdapter>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.IMultiWinService: boolean isRootIntent(android.content.Intent)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Activity: android.content.Intent getParentActivityIntent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteOpenHelper: void close()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.HwCustRegisterServiceHelper: void <init>()>:<public>:<android.app.HwCustRegisterServiceHelper>
<android.app.SharedPreferencesImpl.2: void run()>:<public>:<android.app.SharedPreferencesImpl.2:java.lang.Runnable>
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.transition.ChangeImageTransform.2: android.graphics.Matrix get(android.widget.ImageView)>:<public>:<android.transition.ChangeImageTransform.2:android.util.Property>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.net.ProxyInfo: java.net.Proxy makeProxy()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>:<protected>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap getCurrentWallpaperLocked(android.content.Context)>:<private>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getActiveAdmins(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.drawable.ScaleDrawable.ScaleState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationPause(android.animation.Animator)>:<public>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.renderscript.Byte2: void set(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Region.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.Region.1:android.os.Parcelable.Creator>
<android.accounts.IAccountManager.Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.accounts.ChooseTypeAndAccountActivity: void onDestroy()>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.net.wifi.p2p.WifiP2pGroupList.1: void <init>(android.net.wifi.p2p.WifiP2pGroupList,int)>:<>:<android.net.wifi.p2p.WifiP2pGroupList.1:android.util.LruCache>
<android.filterfw.core.SerializedFrame: java.lang.Object deserializeObjectValue()>:<private final>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: void nativeDrawVertices(long,int,int,float[],int,float[],int,int[],int,short[],int,int,long)>:<private static native>:<android.graphics.Canvas>
<android.net.NetworkKey: int describeContents()>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>:<public>:<android.graphics.Paint>
<android.os.MemoryFile: void finalize()>:<protected>:<android.os.MemoryFile>
<android.webkit.WebSettings: boolean supportMultipleWindows()>:<public abstract>:<android.webkit.WebSettings>
<android.net.IConnectivityManager.Stub.Proxy: boolean isTetheringSupported()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmManagerClient: void finalize()>:<protected>:<android.drm.DrmManagerClient>
<android.app.INotificationManager.Stub.Proxy: void cancelNotificationFromListener(android.service.notification.INotificationListener,java.lang.String,java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ContextImpl.33: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.33:android.app.ContextImpl.ServiceFetcher>
<android.transition.Recolor: void <init>()>:<public>:<android.transition.Recolor:android.transition.Transition>
<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision: boolean splitHorizontal(int,int,int,int)>:<public>:<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>:<public>:<android.graphics.Interpolator>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>:<public>:<android.app.ActivityManager>
<android.transition.TransitionSet: android.transition.Transition removeTarget(int)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.renderscript.Script.LaunchOptions: int getXStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Matrix: void native_setTranslate(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.transition.Visibility.1: void <init>(android.transition.Visibility,android.view.ViewGroup,android.view.View)>:<>:<android.transition.Visibility.1:android.animation.AnimatorListenerAdapter>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>:<public final>:<android.os.Parcel>
<android.app.IProcessObserver: void onProcessDied(int,int)>:<public abstract>:<android.app.IProcessObserver:android.os.IInterface>
<android.app.Activity: void performUserLeaving()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.mtp.MtpStorageInfo: long getFreeSpace()>:<public final>:<android.mtp.MtpStorageInfo>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>:<public>:<android.graphics.Paint>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.Build: long getLong(java.lang.String)>:<private static>:<android.os.Build>
<android.graphics.Path: long init2(long)>:<private static native>:<android.graphics.Path>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.net.wifi.WifiScanner.ParcelableScanResults: void <clinit>()>:<static>:<android.net.wifi.WifiScanner.ParcelableScanResults:android.os.Parcelable>
<android.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.net.wifi.ScanResult: boolean is5GHz(int)>:<public static>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Region: void <init>(long,int)>:<private>:<android.graphics.Region:android.os.Parcelable>
<android.netdetect.HwCustNetDetectServiceImpl.1: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.app.backup.BackupManager: void dataChanged()>:<public>:<android.app.backup.BackupManager>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(android.renderscript.RenderScript,int,int)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.net.wifi.WifiSsid: java.lang.String encodingWithCharset(byte[],java.lang.String)>:<private>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>:<public abstract>:<android.app.IInstrumentationWatcher:android.os.IInterface>
<android.os.Debug: void startMethodTracing()>:<public static>:<android.os.Debug>
<android.app.ActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>:<public abstract>:<android.app.ActionBar>
<android.app.admin.DevicePolicyManager: void reportFailedPasswordAttempt(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.HwWifiStatStore: void updateScreenState(boolean)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int hashCode()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.http.HttpConnection: void restartConnection(boolean)>:<>:<android.net.http.HttpConnection:android.net.http.Connection>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.Presentation.2: void onDisplayChanged(int)>:<public>:<android.app.Presentation.2:android.hardware.display.DisplayManager.DisplayListener>
<android.accounts.AccountsException: void <init>(java.lang.String)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1:android.os.Parcelable.Creator>
<android.graphics.drawable.InsetDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ContextImpl: java.io.File getPreferencesDir()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.RotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.app.Activity: void finishAndRemoveTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.mtp.MtpDatabase: int getNumObjects(int,int,int)>:<private>:<android.mtp.MtpDatabase>
<android.app.FragmentManagerImpl: boolean isDestroyed()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>:<public>:<android.app.ActivityThread>
<android.net.SamplingDataTracker: int getSampleDuration()>:<public>:<android.net.SamplingDataTracker>
<android.graphics.drawable.VectorDrawable: void setAllowCaching(boolean)>:<>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.TrafficStats: long getTotalTxBytes()>:<public static>:<android.net.TrafficStats>
<android.database.sqlite.DatabaseObjectNotClosedException: void <init>()>:<public>:<android.database.sqlite.DatabaseObjectNotClosedException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.PowerManager: int setChargeHotLimit(int,int)>:<public>:<android.os.PowerManager>
<android.os.Parcel: long nativeReadLong(long)>:<private static native>:<android.os.Parcel>
<android.print.PrinterCapabilitiesInfo.1: android.print.PrinterCapabilitiesInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityManager: void forceStopPackage(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.app.ActivityManager: int getLauncherLargeIconSize()>:<public>:<android.app.ActivityManager>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicHeight()>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiScanner.ParcelableScanResults.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiScanner.ParcelableScanResults.1:android.os.Parcelable.Creator>
<android.os.UserHandle: boolean isOwner()>:<public final>:<android.os.UserHandle:android.os.Parcelable>
<android.app.job.JobService.JobHandler: void handleMessage(android.os.Message)>:<public>:<android.app.job.JobService.JobHandler:android.os.Handler>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.nsd.DnsSdTxtRecord: void <init>()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.graphics.PathMeasure: float native_getLength(long)>:<private static native>:<android.graphics.PathMeasure>
<android.hwcontrol.HwWidgetFactory.Factory: boolean initAddtionalStyle(android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()>:<public>:<android.app.WallpaperManager>
<android.net.ConnectivityManager: int checkMobileProvisioning(int)>:<public>:<android.net.ConnectivityManager>
<android.net.IConnectivityManager.Stub.Proxy: void setDataDependency(int,boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.accounts.AccountManager.17: void <init>(android.accounts.AccountManager,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<>:<android.accounts.AccountManager.17:java.lang.Runnable>
<android.app.ExitTransitionCoordinator: void startExit(int,android.content.Intent)>:<public>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.Drawable>
<android.os.SELinux: java.lang.String[] getBooleanNames()>:<public static final native>:<android.os.SELinux>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.graphics.Bitmap: boolean nativeHasMipMap(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Build: void <clinit>()>:<static>:<android.os.Build>
<android.app.ActivityThread: void handleLaunchActivity(android.app.ActivityThread.ActivityClientRecord,android.content.Intent)>:<private>:<android.app.ActivityThread>
<android.net.IConnectivityManager.Stub.Proxy: boolean updateLockdownVpn()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.ContextImpl: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.BaseObj internalCreate(android.renderscript.RenderScript,android.renderscript.FileA3D.IndexEntry)>:<static>:<android.renderscript.FileA3D.IndexEntry>
<android.filterfw.core.StreamPort: void <init>(android.filterfw.core.Filter,java.lang.String)>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.opengl.GLSurfaceView.SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>:<public>:<android.opengl.GLSurfaceView.SimpleEGLConfigChooser:android.opengl.GLSurfaceView.ComponentSizeChooser,android.opengl.GLSurfaceView.BaseConfigChooser>
<android.app.IActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.accounts.Account: java.lang.String toString()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>:<public>:<android.app.job.JobInfo.Builder>
<android.net.wifi.HwWifiStatStore: void updateConnectState(boolean)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.renderscript.Long4: void addMultiple(android.renderscript.Long4,long)>:<public>:<android.renderscript.Long4>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.app.Fragment: android.transition.Transition getExitTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.UiAutomation: boolean isConnectedLocked()>:<private>:<android.app.UiAutomation>
<android.os.IPowerManager.Stub.Proxy: void shutdown(boolean,boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.ActionBar: void setTitle(int)>:<public abstract>:<android.app.ActionBar>
<android.os.BatteryStats: int getHistoryTotalSize()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2500(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setTitle(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.os.Bundle: void <init>(android.os.PersistableBundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLConfigChooser access.300(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.NetworkKey: void <init>(android.net.WifiKey)>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.os.BatteryStats.BitDescription: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.os.BatteryStats.BitDescription>
<android.app.backup.BackupTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport>
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.net.LocalSocket: int getSoTimeout()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,long)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.os.Parcel: int readExceptionCode()>:<public final>:<android.os.Parcel>
<android.net.IConnectivityManager: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.filterfw.core.VertexFrame: void setFloats(float[])>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.VoiceInteractor.ConfirmationRequest: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>:<>:<android.app.VoiceInteractor.ConfirmationRequest:android.app.VoiceInteractor.Request>
<android.database.sqlite.SQLiteQuery: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal)>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.transition.ChangeImageTransform: android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix)>:<private>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.os.Broadcaster: void broadcast(android.os.Message)>:<public>:<android.os.Broadcaster>
<android.app.ActivityThread.3: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.ActivityThread.3:android.content.ComponentCallbacks2>
<android.graphics.Paint: void setHinting(int)>:<public native>:<android.graphics.Paint>
<android.graphics.Path.Op: void <clinit>()>:<static>:<android.graphics.Path.Op:java.lang.Enum>
<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.graphics.Canvas: void nativeDrawBitmapMatrix(long,long,long,long)>:<private static native>:<android.graphics.Canvas>
<android.app.backup.BackupAgent.BackupServiceBinder: void <init>(android.app.backup.BackupAgent,android.app.backup.BackupAgent.1)>:<>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.accounts.AccountManager.10: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<>:<android.accounts.AccountManager.10:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.os.FileUtils: int setPermissions(java.io.File,int,int,int)>:<public static>:<android.os.FileUtils>
<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.000(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.CommonClock.OnTimelineChangedListener: void onTimelineChanged(long)>:<public abstract>:<android.os.CommonClock.OnTimelineChangedListener>
<android.print.PrintAttributes.Resolution: int hashCode()>:<public>:<android.print.PrintAttributes.Resolution>
<android.print.IPrintSpooler.Stub: android.print.IPrintSpooler asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1300(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.sqlite.SQLiteConnectionPool: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.database.sqlite.SQLiteConnectionPool: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.hwtheme.HwThemeManager: android.graphics.Bitmap getThemeBitmap(android.content.res.Resources,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.Canvas: void native_drawLines(long,float[],int,int,long)>:<private static native>:<android.graphics.Canvas>
<android.graphics.Bitmap: int getWidth()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Interpolator: void nativeSetKeyFrame(long,int,int,float[],float[])>:<private static native>:<android.graphics.Interpolator>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Paint: int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int)>:<private native>:<android.graphics.Paint>
<android.database.sqlite.SQLiteDatabase: void addCustomFunction(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.drm.DrmSupportInfo: boolean equals(java.lang.Object)>:<public>:<android.drm.DrmSupportInfo>
<android.graphics.Bitmap: void nativeSetPremultiplied(long,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>:<public static>:<android.app.backup.FullBackup>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Path: void native_computeBounds(long,android.graphics.RectF)>:<private static native>:<android.graphics.Path>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwCameraPermWrapper: boolean isBlocked()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.app.IAlarmManager.Stub: void <init>()>:<public>:<android.app.IAlarmManager.Stub:android.os.Binder,android.app.IAlarmManager>
<android.net.NetworkStats.Entry: void <init>(java.lang.String,int,int,int,long,long,long,long,long)>:<public>:<android.net.NetworkStats.Entry>
<android.net.SSLCertificateSocketFactory: void <init>(int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.drawable.LevelListDrawable.LevelListState: void growArray(int,int)>:<public>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean shouldUseAdditionalChnFont(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.drawable.RippleDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.filterfw.core.FrameFormat: java.lang.String baseTypeToString(int)>:<public static>:<android.filterfw.core.FrameFormat>
<android.net.http.RequestHandle: java.lang.String doubleQuote(java.lang.String)>:<private>:<android.net.http.RequestHandle>
<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point normalize()>:<public>:<android.filterfw.geometry.Point>
<android.os.BatteryStats: int getStartCount()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.Uri: java.lang.String getAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.transition.Explode: void <clinit>()>:<static>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.net.Uri: boolean isOpaque()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.SearchableInfo: int getSearchButtonText()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.graphics.pdf.PdfEditor: void nativeClose(long)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getVolumeState(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.VertexFrame: int getNativeVboId()>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.renderscript.RenderScript: long nPathCreate(int,boolean,long,long,float)>:<>:<android.renderscript.RenderScript>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>:<public>:<android.graphics.Paint>
<android.accounts.AccountManager.14: void doWork()>:<public>:<android.accounts.AccountManager.14:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>:<public>:<android.graphics.SurfaceTexture>
<android.app.SharedPreferencesImpl.MemoryCommitResult: void <init>()>:<private>:<android.app.SharedPreferencesImpl.MemoryCommitResult>
<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.os.IHDMIConnectService: void setHDMIEnable(boolean)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.IActivityManager: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebViewProvider: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.wifi.BatchedScanSettings: int describeContents()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.56: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.56:android.app.ContextImpl.ServiceFetcher>
<android.net.Uri.Part.EmptyPart: void <init>(java.lang.String)>:<public>:<android.net.Uri.Part.EmptyPart:android.net.Uri.Part,android.net.Uri.AbstractPart>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.transition.Transition: void matchIds(android.util.ArrayMap,android.util.ArrayMap,android.util.SparseArray,android.util.SparseArray)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.net.ScoredNetwork.1: void <init>()>:<>:<android.net.ScoredNetwork.1:android.os.Parcelable.Creator>
<android.database.AbstractCursor: int getType(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.VectorDrawable.VGroup: float getRotation()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.ActivityManagerProxy: void startLockTaskMode(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.BatteryStats.Uid: void noteActivityPausedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.netdetect.INetDetectService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind[] values()>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.os.UserManager: boolean hasRestrictionsChallenge()>:<public>:<android.os.UserManager>
<android.app.Notification.Style: void internalSetSummaryText(java.lang.CharSequence)>:<protected>:<android.app.Notification.Style>
<android.app.Activity: void performDestroy()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.RemoteInput: java.lang.CharSequence getLabel()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.os.SystemService: void stop(java.lang.String)>:<public static>:<android.os.SystemService>
<android.renderscript.Short4: void setAt(int,short)>:<public>:<android.renderscript.Short4>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintHideIcon(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.EnterTransitionCoordinator.7: void onTransitionStart(android.transition.Transition)>:<public>:<android.app.EnterTransitionCoordinator.7:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>:<public>:<android.net.http.SslCertificate.DName>
<android.app.UiAutomationConnection: void clearWindowAnimationFrameStats()>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.accounts.IAccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.drm.DrmManagerClient.EventHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>:<public>:<android.drm.DrmManagerClient.EventHandler:android.os.Handler>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.Matrix: float length(float,float,float)>:<public static>:<android.opengl.Matrix>
<android.net.wifi.WifiChannel: void <init>()>:<public>:<android.net.wifi.WifiChannel:android.os.Parcelable>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize)>:<public>:<android.print.PrintAttributes.Builder>
<android.renderscript.RenderScriptGL: void setSurface(android.view.SurfaceHolder,int,int)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.filterfw.core.GLFrame: boolean setNativeViewport(int,int,int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.wifi.WpsInfo: void <init>(android.net.wifi.WpsInfo)>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.graphics.SweepGradient: long nativeCreate2(float,float,int,int)>:<private static native>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.print.PrintAttributes.MediaSize: int hashCode()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.net.SSLCertificateSocketFactory: boolean isSslCheckRelaxed()>:<private static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.webkit.WebViewProvider.ViewDelegate: void onSizeChanged(int,int,int,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.NetworkRequest.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkRequest.1:android.os.Parcelable.Creator>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.EnterTransitionCoordinator.9: void <init>(android.app.EnterTransitionCoordinator)>:<>:<android.app.EnterTransitionCoordinator.9:android.transition.Transition.TransitionListenerAdapter>
<android.graphics.drawable.GradientDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Mesh.Builder: android.renderscript.Type newType(android.renderscript.Element,int)>:<>:<android.renderscript.Mesh.Builder>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>:<public>:<android.net.http.SslCertificate.DName>
<android.database.MergeCursor: byte[] getBlob(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.LinkQualityInfo: void setPacketCount(long)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.os.CountDownTimer: void onFinish()>:<public abstract>:<android.os.CountDownTimer>
<android.filterfw.core.FilterPort: boolean hasFrame()>:<public abstract>:<android.filterfw.core.FilterPort>
<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteDebug>
<android.app.FragmentTransaction: android.app.FragmentTransaction setSharedElement(android.view.View,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.os.RemoteCallback.LocalCallback: void sendResult(android.os.Bundle)>:<public>:<android.os.RemoteCallback.LocalCallback:android.os.IRemoteCallback.Stub>
<android.net.UidRange: void <clinit>()>:<static>:<android.net.UidRange:android.os.Parcelable>
<android.net.wifi.WpsInfo: java.lang.String toString()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.os.ParcelableParcel.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.app.Instrumentation: void <init>()>:<public>:<android.app.Instrumentation>
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.net.MobileDataStateTracker.1: void <init>(android.net.MobileDataStateTracker)>:<>:<android.net.MobileDataStateTracker.1:android.telephony.PhoneStateListener>
<android.os.storage.StorageEventListener: void <init>()>:<public>:<android.os.storage.StorageEventListener>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.graphics.LightingColorFilter: long native_CreateLightingFilter(int,int)>:<private static native>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.app.backup.BackupDataInputStream: int read(byte[])>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.graphics.Matrix: void native_postRotate(long,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.renderscript.Long3: android.renderscript.Long3 add(android.renderscript.Long3,long)>:<public static>:<android.renderscript.Long3>
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.opengl.GLSurfaceView.GLThread: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.os.StrictMode: android.os.StrictMode.Span enterCriticalSpan(java.lang.String)>:<public static>:<android.os.StrictMode>
<android.app.TimePickerDialog: int resolveDialogTheme(android.content.Context,int)>:<static>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.renderscript.AllocationAdapter: void setLOD(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.net.arp.MultiGW: void setGWIPAddr(java.lang.String)>:<public>:<android.net.arp.MultiGW>
<android.transition.TransitionPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public abstract>:<android.transition.TransitionPropagation>
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug.PagerStats getDatabaseInfo()>:<public static>:<android.database.sqlite.SQLiteDebug>
<android.os.Message.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.Message.1:android.os.Parcelable.Creator>
<android.app.StatusBarManager: void collapsePanels()>:<public>:<android.app.StatusBarManager>
<android.webkit.ClientCertRequest: java.lang.String[] getKeyTypes()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.app.ContextImpl.28: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.28:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState: void <init>(android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState,android.graphics.drawable.Drawable.Callback,android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.net.nsd.NsdServiceInfo.1: android.net.nsd.NsdServiceInfo[] newArray(int)>:<public>:<android.net.nsd.NsdServiceInfo.1:android.os.Parcelable.Creator>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.WifiManager.WpsCallback: void <init>()>:<public>:<android.net.wifi.WifiManager.WpsCallback>
<android.net.INetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>:<public abstract>:<android.webkit.WebSettings>
<android.app.trust.ITrustManager: void reportRequireCredentialEntry(int)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.app.job.IJobCallback.Stub: void <init>()>:<public>:<android.app.job.IJobCallback.Stub:android.os.Binder,android.app.job.IJobCallback>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ContextImpl.61: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.61:android.app.ContextImpl.ServiceFetcher>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActionBar.Tab: java.lang.CharSequence getContentDescription()>:<public abstract>:<android.app.ActionBar.Tab>
<android.graphics.pdf.PdfEditor: void throwIfNotNullAndNotAfine(android.graphics.Matrix)>:<private>:<android.graphics.pdf.PdfEditor>
<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.database.DataSetObservable: void notifyInvalidated()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>:<public>:<android.webkit.WebView.WebViewTransport>
<android.app.Instrumentation.ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation.ActivityWaiter)>:<public>:<android.app.Instrumentation.ActivityGoing:android.os.MessageQueue.IdleHandler>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>:<public abstract>:<android.webkit.WebSettings>
<android.app.ContextImpl.48: void <init>()>:<>:<android.app.ContextImpl.48:android.app.ContextImpl.ServiceFetcher>
<android.os.INetworkActivityListener.Stub.Proxy: void onNetworkActive()>:<public>:<android.os.INetworkActivityListener.Stub.Proxy:android.os.INetworkActivityListener>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>:<abstract>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>:<public final transient>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>:<public final>:<android.os.Handler>
<android.app.EnterTransitionCoordinator.5: boolean onPreDraw()>:<public>:<android.app.EnterTransitionCoordinator.5:android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.arp.ArpPeer: byte[] doGratuitousArp(int)>:<public>:<android.net.arp.ArpPeer>
<android.app.ActivityManagerProxy: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.AccountManager.AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.app.AppImportanceMonitor.1: void <init>(android.app.AppImportanceMonitor)>:<>:<android.app.AppImportanceMonitor.1:android.app.IProcessObserver.Stub,android.os.Binder>
<android.os.IUserManager: void removeRestrictions()>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.renderscript.Byte3: void div(byte)>:<public>:<android.renderscript.Byte3>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.accounts.AccountManagerFuture: boolean isCancelled()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.app.job.IJobScheduler.Stub: void <init>()>:<public>:<android.app.job.IJobScheduler.Stub:android.os.Binder,android.app.job.IJobScheduler>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteActionProvider.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.net.wifi.p2p.WifiP2pGroup: void addClient(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VFullPath: android.graphics.Paint.Cap getStrokeLineCap(int,android.graphics.Paint.Cap)>:<private>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>:<>:<android.os.Parcel>
<android.net.http.RequestQueue: void startTiming()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.Activity: void setProgressBarVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.mtp.MtpObjectInfo: java.lang.String getName()>:<public final>:<android.mtp.MtpObjectInfo>
<android.hwcontrol.HwWidgetFactory.Factory: android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper newHwMenuPopupHelper(android.content.Context,com.android.internal.view.menu.MenuPopupHelper,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.os.Parcel: void nativeWriteFloat(long,float)>:<private static native>:<android.os.Parcel>
<android.filterfw.core.FrameFormat: boolean isBinaryDataType()>:<public>:<android.filterfw.core.FrameFormat>
<android.app.SearchDialog.4: void <init>(android.app.SearchDialog)>:<>:<android.app.SearchDialog.4:android.widget.SearchView.OnQueryTextListener>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>:<public>:<android.accounts.AccountManager>
<android.net.NetworkStatsHistory: long getLong(long[],int,long)>:<private static>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>:<public static>:<android.app.ApplicationLoaders>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.RippleBackground: void exit()>:<public>:<android.graphics.drawable.RippleBackground>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: void <clinit>()>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.Bundle: void <init>(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.job.JobService: void ensureHandler()>:<>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.PPPOEConfig.1: void <init>()>:<>:<android.net.wifi.PPPOEConfig.1:android.os.Parcelable.Creator>
<android.app.ContextImpl.32: void <init>()>:<>:<android.app.ContextImpl.32:android.app.ContextImpl.ServiceFetcher>
<android.hsm.HwSystemManager: boolean allowOp(android.content.Context,int)>:<public static>:<android.hsm.HwSystemManager>
<android.os.RecoverySystem: void RecoverySystem()>:<private>:<android.os.RecoverySystem>
<android.os.BaseBundle: void putLongArray(java.lang.String,long[])>:<public>:<android.os.BaseBundle>
<android.net.arp.ArpPeer: android.net.arp.MultiGW getGateWayARPResponses(int)>:<public>:<android.net.arp.ArpPeer>
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>:<public>:<android.graphics.drawable.Drawable>
<android.accounts.ChooseTypeAndAccountActivity: void onCancelButtonClicked(android.view.View)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.net.http.RequestFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>:<public abstract>:<android.net.http.RequestFeeder>
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.LauncherActivity: void updateButtonText()>:<private>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLErrorWrapper: void glDisableClientState(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>:<private>:<android.net.http.Request>
<android.os.PerformanceCollector: void startTiming(java.lang.String)>:<public>:<android.os.PerformanceCollector>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.os.BatteryStats.Uid.Proc: int getNumAnrs(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.net.NetworkCapabilities.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkCapabilities.1:android.os.Parcelable.Creator>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.os.UserManager: java.util.List getUsers(boolean)>:<public>:<android.os.UserManager>
<android.opengl.GLES20: boolean glIsShader(int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiConfiguration: void <init>()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,boolean)>:<public abstract>:<android.app.ActionBar>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<android.app.ActivityThread: void handleDestroyBackupAgent(android.app.ActivityThread.CreateBackupAgentData)>:<private>:<android.app.ActivityThread>
<android.webkit.WebView: void loadUrl(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.SurfaceTexture: void attachToGLContext(int)>:<public>:<android.graphics.SurfaceTexture>
<android.filterfw.core.Filter: void addProgramGenerator(android.filterfw.core.GenerateProgramPort,java.lang.reflect.Field)>:<private final>:<android.filterfw.core.Filter>
<android.hwtheme.HwThemeManagerDummy: android.graphics.Bitmap generateBitmap(android.content.Context,android.graphics.Bitmap,int,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.drawable.ShapeDrawable.ShapeState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ShapeDrawable.ShapeState:android.graphics.drawable.Drawable.ConstantState>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.net.InetAddress,int)>:<public>:<android.net.VpnService.Builder>
<android.app.SharedPreferencesImpl: void awaitLoadedLocked()>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager.NetworkScorerAppData getActiveScorer(android.content.Context)>:<public static>:<android.net.NetworkScorerAppManager>
<android.accounts.AccountManager: boolean addSharedAccount(android.accounts.Account,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.app.ISearchManager: android.content.ComponentName getWebSearchActivity()>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.app.ApplicationPackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Activity: void setVisible(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.Uri.PathPart: java.lang.String getEncoded()>:<>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.app.ActivityOptions.1.1: void run()>:<public>:<android.app.ActivityOptions.1.1:java.lang.Runnable>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setPointSpriteTexCoordinateReplacement(boolean)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.net.wifi.p2p.WifiP2pDevice: boolean isInvitationCapable()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.net.NetworkTemplate: void <init>(android.os.Parcel)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexParameteri(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.StrictMode.InstanceTracker: void finalize()>:<protected>:<android.os.StrictMode.InstanceTracker>
<android.opengl.GLLogWrapper: void glBlendFuncSeparate(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IUiModeManager: int getCurrentModeType()>:<public abstract>:<android.app.IUiModeManager:android.os.IInterface>
<android.graphics.drawable.InsetDrawable: android.graphics.Insets getOpticalInsets()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.MobileDataStateTracker: boolean isPrivateDnsRouteSet()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.usage.ConfigurationStats: int getActivationCount()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.Bitmap: void nativeSetPixels(long,int[],int,int,int,int,int,int)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.nsd.INsdManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.nsd.INsdManager.Stub:android.os.Binder,android.net.nsd.INsdManager>
<android.drm.DrmRights: void <init>(android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.renderscript.Long2: void <init>(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getNetworkInfo(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.accounts.ChooseAccountTypeActivity: void setResultAndFinish(java.lang.String)>:<private>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.Bitmap: void getOpticalInsets(android.graphics.Rect)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.wifi.IWifiManager: java.util.List getApLinkedStaList()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.accounts.ChooseAccountTypeActivity: void access.100(android.accounts.ChooseAccountTypeActivity,java.lang.String)>:<static>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.hsm.HwAudioPermWrapper: void <init>()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.app.Notification.Extender: android.app.Notification.Builder extend(android.app.Notification.Builder)>:<public abstract>:<android.app.Notification.Extender>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>:<public>:<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback:android.transition.Transition.EpicenterCallback>
<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.net.wifi.p2p.WifiP2pManager.Channel: void handleUpnpServiceResponse(android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse)>:<private>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.graphics.drawable.shapes.Shape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.net.IConnectivityManager: boolean addVpnAddress(java.lang.String,int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ApplicationPackageManager: boolean isSafeMode()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.Allocation: void copyFromUnchecked(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.webkit.WebView: void onStartTemporaryDetach()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.print.IPrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>:<public abstract>:<android.print.IPrintJobStateChangeListener:android.os.IInterface>
<android.os.IUserManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.app.ContextImpl.45: void <init>()>:<>:<android.app.ContextImpl.45:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.Drawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff.Mode)>:<>:<android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteConnection: void setJournalMode(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.wifi.WifiChannel: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiChannel:android.os.Parcelable>
<android.app.Activity.ManagedCursor: boolean access.300(android.app.Activity.ManagedCursor)>:<static>:<android.app.Activity.ManagedCursor>
<android.webkit.WebChromeClient: void onHideCustomView()>:<public>:<android.webkit.WebChromeClient>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.app.AppOpsManager.PackageOps: void <clinit>()>:<static>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo newInstance(java.lang.String,java.lang.String,java.util.Map)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IHDMIConnectService.Stub.Proxy: void setReproductionWidthRatio(float)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.app.HwCustSvcFactoryImpl: void <init>()>:<public>:<android.app.HwCustSvcFactoryImpl:android.app.HwCustSvcFactory.Factory>
<android.app.backup.FullBackupAgent: void <init>()>:<public>:<android.app.backup.FullBackupAgent:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.transition.ChangeTransform.2: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeTransform.2:android.util.Property>
<android.net.wifi.IWifiManager: boolean enableNetwork(int,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.NetworkUtils: boolean addressTypeMatches(java.net.InetAddress,java.net.InetAddress)>:<public static>:<android.net.NetworkUtils>
<android.graphics.Typeface: boolean equals(java.lang.Object)>:<public>:<android.graphics.Typeface>
<android.net.http.HttpAuthHeader: boolean isSupportedScheme()>:<public>:<android.net.http.HttpAuthHeader>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>:<public>:<android.sax.Element>
<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String,java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.database.sqlite.SQLiteConnection: void setWalModeFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.filterfw.core.SerializedFrame.DirectByteInputStream: int available()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteInputStream:java.io.InputStream>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.ScriptIntrinsicResize create(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityThread.ActionTimeType: void <init>(java.lang.String,int)>:<private>:<android.app.ActivityThread.ActionTimeType:java.lang.Enum>
<android.graphics.Canvas: void checkRange(int,int,int)>:<protected static>:<android.graphics.Canvas>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.net.WebAddress: java.lang.String getScheme()>:<public>:<android.net.WebAddress>
<android.net.NetworkStats: java.lang.Object clone()>:<public volatile>:<android.net.NetworkStats:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.Channel.P2pHandler access.300(android.net.wifi.p2p.WifiP2pManager.Channel)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.net.IConnectivityManager.Stub.Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.opengl.GLES30: void glPauseTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.app.LoadedApk: void initializeJavaContextClassLoader()>:<private>:<android.app.LoadedApk>
<android.net.nsd.DnsSdTxtRecord: int size()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.os.BaseBundle: float getFloat(java.lang.String)>:<>:<android.os.BaseBundle>
<android.renderscript.Float2: float elementSum()>:<public>:<android.renderscript.Float2>
<android.os.IMultiWinService: android.content.Intent buildMultiWinIntent(android.content.Intent)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.transition.Transition: java.util.List getTargetNames()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.admin.IDevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.app.usage.IUsageStatsManager: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)>:<public abstract>:<android.app.usage.IUsageStatsManager:android.os.IInterface>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.HwFindActionModeCallback.1: void <init>(android.webkit.HwFindActionModeCallback)>:<>:<android.webkit.HwFindActionModeCallback.1:android.view.View.OnTouchListener>
<android.renderscript.Int3: void mod(int)>:<public>:<android.renderscript.Int3>
<android.net.NetworkQuotaInfo: void <init>(long,long,long)>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.net.wifi.WifiLinkLayerStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiLinkLayerStats.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: int access.002(android.print.PrintJobInfo,int)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.LoadedApk.ServiceDispatcher: void death(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.LoadedApk.ServiceDispatcher>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void <init>(android.graphics.drawable.VectorDrawable.VPathRenderer)>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.job.IJobService: void startJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.IJobService:android.os.IInterface>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.DhcpStateMachine.DefaultState: void exit()>:<public>:<android.net.DhcpStateMachine.DefaultState:com.android.internal.util.State>
<android.app.ActivityManagerProxy: void notifyActivityDrawn(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Element: android.renderscript.Element F64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.RectF: void inset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glLightModelx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Builder: java.lang.CharSequence access.800(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.graphics.drawable.BitmapDrawable: boolean isAutoMirrored()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi(java.lang.String)>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceRegistered(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.app.Dialog: void takeKeyEvents(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.DashPathEffect: long nativeCreate(float[],float)>:<private static native>:<android.graphics.DashPathEffect:android.graphics.PathEffect>
<android.graphics.RectF: java.lang.String toShortString()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onError(int,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.graphics.Paint: float getStrokeMiter()>:<public native>:<android.graphics.Paint>
<android.net.wifi.WifiManager: void setsListenerKey(int)>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.ParcelFileDescriptor: java.lang.String toString()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.graphics.Canvas: boolean native_quickReject(long,long)>:<private static native>:<android.graphics.Canvas>
<android.webkit.MimeTypeMap: java.lang.String mimeTypeFromExtension(java.lang.String)>:<private static>:<android.webkit.MimeTypeMap>
<android.app.Notification.MediaStyle: void <init>()>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.net.http.RequestQueue.ActivePool: android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.webkit.WebViewDelegate: void invokeDrawGlFunctor(android.view.View,long,boolean)>:<public>:<android.webkit.WebViewDelegate>
<android.net.wifi.WifiInfo: void setMeteredHint(boolean)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.LauncherActivity.ListItem: void <init>(android.content.pm.PackageManager,android.content.pm.ResolveInfo,android.app.LauncherActivity.IconResizer)>:<>:<android.app.LauncherActivity.ListItem>
<android.os.INetworkManagementService: void startTethering(java.lang.String[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.BitmapRegionDecoder: int getWidth()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.hwtheme.IHwThemeManagerFactory: android.hwtheme.HwThemeManager.IHwThemeManager getThemeManagerInstance()>:<public abstract>:<android.hwtheme.IHwThemeManagerFactory>
<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.webkit.WebViewProvider.ViewDelegate: void setBackgroundColor(int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.wifi.WifiSsid: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>:<public static>:<android.net.RouteInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper.PointerInfo: void unbindByteBuffer()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.app.Notification.Style: void setBuilder(android.app.Notification.Builder)>:<public>:<android.app.Notification.Style>
<android.os.BatteryProperty: long getLong()>:<public>:<android.os.BatteryProperty:android.os.Parcelable>
<android.filterfw.core.Filter: java.lang.String getName()>:<public final>:<android.filterfw.core.Filter>
<android.filterfw.geometry.Point: java.lang.String toString()>:<public>:<android.filterfw.geometry.Point>
<android.app.Activity: boolean hasWindowFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.PrintJob: boolean isQueued()>:<public>:<android.print.PrintJob>
<android.app.usage.UsageStats: int describeContents()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.os.storage.StorageVolume: void <clinit>()>:<static>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition: void reverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.transition.ChangeTransform: void <clinit>()>:<static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.transition.Visibility: boolean isVisible(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.net.wifi.IWifiManager: boolean setWifiLog(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.webkit.JsDialogHelper.PositiveListener: void onClick(android.content.DialogInterface,int)>:<public>:<android.webkit.JsDialogHelper.PositiveListener:android.content.DialogInterface.OnClickListener>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.os.MessageQueue: boolean enqueueMessage(android.os.Message,long)>:<>:<android.os.MessageQueue>
<android.net.IpConfiguration: int describeContents()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.WifiLinkQualityInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.renderscript.Short3: void <init>(short)>:<public>:<android.renderscript.Short3>
<android.filterfw.core.GLEnvironment: boolean nativeDeactivate()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void wipeData(int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.accounts.AccountManager.13: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.13:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.os.StrictMode: void writeGatheredViolationsToParcel(android.os.Parcel)>:<static>:<android.os.StrictMode>
<android.graphics.Region: void <init>()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.print.PrinterInfo: int describeContents()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void clearAccessibilityCache()>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.renderscript.Long3: void div(long)>:<public>:<android.renderscript.Long3>
<android.transition.Crossfade: android.transition.Crossfade setResizeBehavior(int)>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.INetworkManagementService.Stub.Proxy: void allowProtect(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.PointF: void <init>(android.graphics.Point)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.app.SearchableInfo: boolean useBadgeIcon()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase.2: void <init>(java.lang.String)>:<>:<android.database.sqlite.SQLiteDatabase.2:java.io.FileFilter>
<android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.ArcMotion: void setMinimumHorizontalAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.os.StrictMode.InstanceTracker: void <init>(java.lang.Object)>:<public>:<android.os.StrictMode.InstanceTracker>
<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>:<public static native>:<android.opengl.GLES20>
<android.app.ContextImpl.58: void <init>()>:<>:<android.app.ContextImpl.58:android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLLogWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Presentation.2: void onDisplayAdded(int)>:<public>:<android.app.Presentation.2:android.hardware.display.DisplayManager.DisplayListener>
<android.filterfw.core.ProtocolException: void <init>()>:<public>:<android.filterfw.core.ProtocolException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteConnection: void access.200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection.PreparedStatement)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.IConnectivityManager.Stub.Proxy: int getRestoreDefaultNetworkDelay(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.PackageInstallObserver.1: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.PackageInstallObserver.1:android.content.pm.IPackageInstallObserver2.Stub>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.app.Notification.BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>:<public>:<android.app.Notification.BuilderRemoteViews:android.widget.RemoteViews>
<android.net.MobileLinkQualityInfo: int getEvdoDbm()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.hsm.MediaTransactWrapper: void <init>()>:<public>:<android.hsm.MediaTransactWrapper>
<android.graphics.pdf.PdfEditor: void throwIfOutSizeNull(android.graphics.Point)>:<private>:<android.graphics.pdf.PdfEditor>
<android.app.NativeActivity: void hideIme(int)>:<>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.Network: void bindSocket(java.net.Socket)>:<public>:<android.net.Network:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable.InsetState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Element: int getSubElementOffsetBytes(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.os.StrictMode.6: boolean queueIdle()>:<public>:<android.os.StrictMode.6:android.os.MessageQueue.IdleHandler>
<android.graphics.drawable.LayerDrawable.LayerState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.app.job.IJobService: void stopJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.IJobService:android.os.IInterface>
<android.renderscript.Byte3: void addMultiple(android.renderscript.Byte3,byte)>:<public>:<android.renderscript.Byte3>
<android.app.ActionBar: void setHideOffset(int)>:<public>:<android.app.ActionBar>
<android.net.DhcpStateMachine: com.android.internal.util.State access.1800(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.IBulkCursor: void deactivate()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.graphics.drawable.BitmapDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.SimpleFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.renderscript.Byte4: android.renderscript.Byte4 sub(android.renderscript.Byte4,byte)>:<public static>:<android.renderscript.Byte4>
<android.opengl.EGLLogWrapper: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.os.INetworkManagementService.Stub.Proxy: void setFirewallEnabled(boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ContextImpl.10: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.10:android.app.ContextImpl.ServiceFetcher>
<android.graphics.pdf.PdfEditor: void nativeGetPageSize(long,int,android.graphics.Point)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.app.IActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.transition.ChangeTransform.3: void onAnimationResume(android.animation.Animator)>:<public>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.backup.BackupAgent: android.os.IBinder onBind()>:<public final>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.app.ActivityThread: android.app.Application currentApplication()>:<public static>:<android.app.ActivityThread>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetheringErroredIfaces()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>:<public static>:<android.filterfw.format.ImageFormat>
<android.graphics.drawable.LayerDrawable.LayerState: boolean access.002(android.graphics.drawable.LayerDrawable.LayerState,boolean)>:<static>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Path.Direction: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Path.Direction:java.lang.Enum>
<android.app.admin.IDevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glMaterialx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActionBar: void show()>:<public abstract>:<android.app.ActionBar>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ColorDrawable: int getColor()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.os.IHDMIConnectService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IHDMIConnectService.Stub:android.os.Binder,android.os.IHDMIConnectService>
<android.filterfw.core.SimpleScheduler: void reset()>:<public>:<android.filterfw.core.SimpleScheduler:android.filterfw.core.Scheduler>
<android.renderscript.RenderScript: int rsnFileA3DGetNumIndexEntries(long,long)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.net.DnsPinger.DnsArg: void <init>(android.net.DnsPinger,java.net.InetAddress,int)>:<>:<android.net.DnsPinger.DnsArg>
<android.app.NativeActivity: void onSurfaceRedrawNeededNative(long,android.view.Surface)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.ContextImpl.19: void <init>()>:<>:<android.app.ContextImpl.19:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.Canvas>
<android.app.ApplicationPackageManager.ResourceName: java.lang.String toString()>:<public>:<android.app.ApplicationPackageManager.ResourceName>
<android.app.BackStackRecord: void calculateFragments(android.util.SparseArray,android.util.SparseArray)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiEnterpriseConfig: void setClientCertificateAlias(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setStatus(int)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.os.Parcel: java.io.Serializable readSerializable()>:<public final>:<android.os.Parcel>
<android.os.FileUtils: boolean contains(java.io.File,java.io.File)>:<public static>:<android.os.FileUtils>
<android.os.Parcel: long[] createLongArray()>:<public final>:<android.os.Parcel>
<android.app.job.IJobScheduler: java.util.List getAllPendingJobs()>:<public abstract>:<android.app.job.IJobScheduler:android.os.IInterface>
<android.renderscript.RenderScript: long rsnFileA3DCreateFromFile(long,java.lang.String)>:<native>:<android.renderscript.RenderScript>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.drawable.VectorDrawable.VFullPath: int getStrokeColor()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.net.wifi.HwWifiCHRService: void forgetFromUser(int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.LoadedApk: java.lang.String[] getOverlayDirs()>:<public>:<android.app.LoadedApk>
<android.app.usage.ConfigurationStats: void <clinit>()>:<static>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>:<public>:<android.emoji.EmojiFactory>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimatedRotateDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityManager.TaskThumbnail: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.net.NetworkStatsHistory: void <init>(long,int,int)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.NetworkScorerAppManager.NetworkScorerAppData: void <init>(java.lang.String,java.lang.CharSequence,java.lang.String)>:<public>:<android.net.NetworkScorerAppManager.NetworkScorerAppData>
<android.os.BatteryStats.Uid: int getMobileRadioActiveCount(int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>:<>:<android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcAtop()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.IActivityManager: void startLockTaskMode(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.DialogFragment: void <init>()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.Path: int native_getFillType(long)>:<private static native>:<android.graphics.Path>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.lang.String,int)>:<public>:<android.net.VpnService.Builder>
<android.net.StaticIpConfiguration: java.lang.String toString()>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.os.IVibratorService: void cancelVibrate(android.os.IBinder)>:<public abstract>:<android.os.IVibratorService:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.os.IUpdateLock.Stub.Proxy: void releaseUpdateLock(android.os.IBinder)>:<public>:<android.os.IUpdateLock.Stub.Proxy:android.os.IUpdateLock>
<android.graphics.drawable.VectorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.RenderScript: void nAllocationData3D(long,int,int,int,int,int,int,int,long,int,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityManagerProxy: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>:<public>:<android.sax.Element>
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDXor()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.BatteryProperty: void <init>(android.os.Parcel)>:<private>:<android.os.BatteryProperty:android.os.Parcelable>
<android.os.BatteryStats: boolean startIteratingOldHistoryLocked()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.database.AbstractCursor: android.os.Bundle getExtras()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromCenterVerticalAxis(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>:<public static>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.BaseObj: boolean equals(java.lang.Object)>:<public>:<android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityServiceInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accessibilityservice.AccessibilityServiceInfo.1:android.os.Parcelable.Creator>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.app.DialogFragment: void dismissInternal(boolean)>:<>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.transition.Visibility: android.transition.Visibility.VisibilityInfo getVisibilityChangeInfo(android.transition.TransitionValues,android.transition.TransitionValues)>:<private>:<android.transition.Visibility:android.transition.Transition>
<android.database.Cursor: boolean isLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.wifi.WifiSsid: byte[] getOctets()>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.opengl.GLErrorWrapper: java.lang.String glGetString(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumLength(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ResultInfo: void <clinit>()>:<static>:<android.app.ResultInfo:android.os.Parcelable>
<android.app.ProgressDialog: android.widget.TextView access.200(android.app.ProgressDialog)>:<static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.filterfw.core.AsyncRunner: java.lang.Exception getError()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.app.ActivityManager.TaskDescription.1: android.app.ActivityManager.TaskDescription createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.TaskDescription.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.webkit.WebViewProvider: void setFavoriteUrlsFromXml(java.lang.String[],int[])>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebViewFactoryProvider: android.webkit.CookieManager getCookieManager()>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.filterfw.core.FilterContext: android.filterfw.core.Frame fetchFrame(java.lang.String)>:<public>:<android.filterfw.core.FilterContext>
<android.os.IPowerManager: void setForbidWakeLockList(java.lang.String)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.RenderScript: long rsnFileA3DCreateFromAssetStream(long,long)>:<native>:<android.renderscript.RenderScript>
<android.webkit.WebViewProvider: void saveWebArchive(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable.StateListState)>:<>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.BatteryStats.HistoryItem: void <init>()>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glMultMatrixf(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Element: android.renderscript.Element getSubElement(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.RectF: void sort()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ApplicationPackageManager: void extendVerificationTimeout(int,int,long)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Color: int rgb(int,int,int)>:<public static>:<android.graphics.Color>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int)>:<public>:<android.app.Notification.Builder>
<android.accessibilityservice.AccessibilityServiceInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accessibilityservice.AccessibilityServiceInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.SimpleFrame: void initWithFormat(android.filterfw.core.FrameFormat)>:<private>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.os.RecoverySystem: void <clinit>()>:<static>:<android.os.RecoverySystem>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.AlarmManager: long legacyExactLength()>:<private>:<android.app.AlarmManager>
<android.app.Notification.BigTextStyle: void <init>()>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.renderscript.RenderScript: int rsnMeshGetIndexCount(long,long)>:<native>:<android.renderscript.RenderScript>
<android.os.IMultiWinService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IMultiWinService.Stub:android.os.Binder,android.os.IMultiWinService>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.webkit.JsDialogHelper: void <init>(android.webkit.JsPromptResult,android.os.Message)>:<public>:<android.webkit.JsDialogHelper>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.webkit.WebView: float getScale()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.LocalSocket: void <init>()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>:<protected abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2008(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.database.sqlite.SQLiteConnection: void setPageSize()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>:<public>:<android.os.PowerManager>
<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>:<public abstract>:<android.net.INetworkStatsSession:android.os.IInterface>
<android.os.BatteryProperties.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.BatteryProperties.1:android.os.Parcelable.Creator>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Float2: android.renderscript.Float2 mul(android.renderscript.Float2,android.renderscript.Float2)>:<public static>:<android.renderscript.Float2>
<android.os.PowerManager: void stopWakeUpReady(long,boolean)>:<public>:<android.os.PowerManager>
<android.net.http.RequestQueue.ActivePool: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>:<public>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.renderscript.Byte2: byte length()>:<public>:<android.renderscript.Byte2>
<android.transition.Transition: void addUnmatched(android.util.ArrayMap,android.util.ArrayMap)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.accounts.IAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.opengl.EGL14: boolean eglWaitClient()>:<public static native>:<android.opengl.EGL14>
<android.net.http.HttpAuthHeader: java.lang.String getAlgorithm()>:<public>:<android.net.http.HttpAuthHeader>
<android.transition.Transition: android.graphics.Rect getEpicenter()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.filterfw.core.GLEnvironment: boolean nativeActivate()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.app.Notification.WearableExtender: android.app.PendingIntent getDisplayIntent()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2108(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.IPowerManager.Stub.Proxy: void stopWakeUpReady(long,boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.NetworkIdentity: java.lang.String scrubSubscriberId(java.lang.String)>:<public static>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.opengl.GLES20: void <init>()>:<public>:<android.opengl.GLES20>
<android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkInfo getNetworkInfoForWifi()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Notification.WearableExtender: int getGravity()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.os.Debug.InstructionCount: int globalTotal()>:<public>:<android.os.Debug.InstructionCount>
<android.graphics.Typeface: int hashCode()>:<public>:<android.graphics.Typeface>
<android.app.job.JobService.1: void stopJob(android.app.job.JobParameters)>:<public>:<android.app.job.JobService.1:android.app.job.IJobService.Stub,android.os.Binder>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Bitmap: int getPixel(int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>:<public static native>:<android.opengl.ETC1>
<android.app.ActivityManager: int getMaxAppRecentsLimitStatic()>:<public static>:<android.app.ActivityManager>
<android.net.wifi.HwInnerWifiManager: java.lang.String getAppendSsidWithRandomUuid(android.net.wifi.WifiConfiguration,android.content.Context)>:<public abstract>:<android.net.wifi.HwInnerWifiManager>
<android.app.Activity: void <init>()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Double2: void addMultiple(android.renderscript.Double2,double)>:<public>:<android.renderscript.Double2>
<android.webkit.WebSettings: void setVideoOverlayForEmbeddedEncryptedVideoEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.IDevicePolicyManager: int getProfileWithMinimumFailedPasswordsForWipe(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void end()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore: void incrAccessWebCnt()>:<public>:<android.net.wifi.HwWifiStatStore>
<android.app.trust.ITrustListener.Stub: android.app.trust.ITrustListener asInterface(android.os.IBinder)>:<public static>:<android.app.trust.ITrustListener.Stub:android.os.Binder,android.app.trust.ITrustListener>
<android.app.WallpaperManager: void setCallback(android.app.AbsWallpaperManager.IBlurWallpaperCallback)>:<public>:<android.app.WallpaperManager>
<android.webkit.WebView.FindListenerDistributor: void onFindResultReceived(int,int,boolean)>:<public>:<android.webkit.WebView.FindListenerDistributor:android.webkit.WebView.FindListener>
<android.net.ProxyInfo: void <init>(android.net.Uri)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.database.CursorWindow: boolean isFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.UserHandle.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.UserHandle.1:android.os.Parcelable.Creator>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>:<public static>:<android.webkit.GeolocationPermissions>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.database.CursorWindow: void <clinit>()>:<static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.PluginData: java.io.InputStream getInputStream()>:<public>:<android.webkit.PluginData>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor.Status access.000(java.io.FileDescriptor,byte[])>:<static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.net.http.CharArrayBuffers: boolean containsIgnoreCaseTrimmed(org.apache.http.util.CharArrayBuffer,int,java.lang.String)>:<static>:<android.net.http.CharArrayBuffers>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.os.Parcel: java.lang.Object[] readTypedArray(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.app.UiAutomation: float getDegreesForRotation(int)>:<private static>:<android.app.UiAutomation>
<android.opengl.GLLogWrapper: void glSampleCoverage(float,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.HttpAuthHandler: boolean suppressDialog()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.Drawable>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>:<public static>:<android.net.NetworkUtils>
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()>:<public static>:<android.net.ConnectivityManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1302(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.transition.Slide.6: float getGoneY(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.6:android.transition.Slide.CalculateSlideVertical>
<android.print.IPrintManager.Stub.Proxy: void validatePrinters(java.util.List,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.renderscript.Double2: void mul(double)>:<public>:<android.renderscript.Double2>
<android.renderscript.Sampler.Builder: void setMinification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.ActivityOptions: int getWidth()>:<public>:<android.app.ActivityOptions>
<android.net.wifi.p2p.WifiP2pManager.Channel: void handleDnsSdServiceResponse(android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse)>:<private>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.renderscript.Double3: android.renderscript.Double3 mul(android.renderscript.Double3,double)>:<public static>:<android.renderscript.Double3>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.transition.Transition: android.transition.Transition.EpicenterCallback getEpicenterCallback()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.DialogFragment: void onCancel(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.net.wifi.HwCustAbsWifiManager: void initHwCustWifiManager()>:<public>:<android.net.wifi.HwCustAbsWifiManager:android.net.wifi.IHwCustWifiManager>
<android.webkit.FindActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.IpPrefix: java.net.InetAddress getAddress()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.app.UiAutomation: boolean clearWindowContentFrameStats(int)>:<public>:<android.app.UiAutomation>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void handlePackageAdded(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.accessibilityservice.IAccessibilityServiceClient: void clearAccessibilityCache()>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.os.UserHandle: void <init>(int)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedUserInfo()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.app.ActionBar.Tab: int getPosition()>:<public abstract>:<android.app.ActionBar.Tab>
<android.opengl.GLES10: void glPushMatrix()>:<public static native>:<android.opengl.GLES10>
<android.net.NetworkKey: void <init>(android.os.Parcel)>:<private>:<android.net.NetworkKey:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.filterfw.core.ShaderProgram: boolean beginShaderDrawing()>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.EnterTransitionCoordinator: void viewInstancesReady(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.Debug: int getGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.opengl.GLES20: void glFrontFace(int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>:<public static>:<android.graphics.PixelFormat>
<android.renderscript.Long3: void mul(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.net.http.Request: void reset()>:<>:<android.net.http.Request>
<android.accessibilityservice.IAccessibilityServiceConnection: void setOnKeyEventResult(boolean,int)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.print.PrintJobInfo: void setCopies(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.renderscript.Int2: android.renderscript.Int2 sub(android.renderscript.Int2,int)>:<public static>:<android.renderscript.Int2>
<android.app.IUiModeManager: void setNightMode(int)>:<public abstract>:<android.app.IUiModeManager:android.os.IInterface>
<android.app.IInstrumentationWatcher.Stub: android.app.IInstrumentationWatcher asInterface(android.os.IBinder)>:<public static>:<android.app.IInstrumentationWatcher.Stub:android.os.Binder,android.app.IInstrumentationWatcher>
<android.os.storage.StorageManager.StorageEvent: void <init>(android.os.storage.StorageManager,int)>:<public>:<android.os.storage.StorageManager.StorageEvent>
<android.renderscript.RenderScript: void rsnScriptGetVarV(long,long,int,byte[])>:<native>:<android.renderscript.RenderScript>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfoResult(android.print.PrintJobInfo,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.app.ContextImpl: void startActivities(android.content.Intent[])>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2600(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.drawable.InsetDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityThread.ApplicationThread: void updateTimePrefs(boolean)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.os.storage.IMountService: android.os.storage.StorageVolume[] getVolumeList()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.mtp.MtpPropertyGroup: java.lang.String queryString(int,java.lang.String)>:<private>:<android.mtp.MtpPropertyGroup>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>:<public>:<android.graphics.Paint>
<android.net.wifi.RssiPacketCountInfo.1: void <init>()>:<>:<android.net.wifi.RssiPacketCountInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES10: void glTexCoordPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>:<public>:<android.net.ConnectivityManager>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.SerializedFrame: float[] getFloats()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.hsm.HwAudioPermWrapper: void confirmPermission()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.test.InstrumentationTestSuite: void <init>(java.lang.Class,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String[] getAcceptTypes()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.database.Cursor: int getInt(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>:<public>:<android.os.RemoteCallbackList>
<android.graphics.pdf.PdfDocument: void close()>:<public>:<android.graphics.pdf.PdfDocument>
<android.app.LoadedApk.ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.app.Activity.ManagedCursor: boolean access.302(android.app.Activity.ManagedCursor,boolean)>:<static>:<android.app.Activity.ManagedCursor>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.ActivityOptions: android.app.ActivityOptions forTargetActivity()>:<public>:<android.app.ActivityOptions>
<android.app.backup.IBackupManager.Stub.Proxy: void dataChanged(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.renderscript.FieldPacker: android.renderscript.Int4 subInt4()>:<public>:<android.renderscript.FieldPacker>
<android.app.ActivityThread: void setupGraphicsSupport(android.app.LoadedApk,java.io.File)>:<private>:<android.app.ActivityThread>
<android.renderscript.Double2: double dotProduct(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.opengl.GLSurfaceView.EglHelper: void finish()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.os.StrictMode.9: java.lang.Object create()>:<protected volatile>:<android.os.StrictMode.9:android.util.Singleton>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.app.ActionBar: boolean isHideOnContentScrollEnabled()>:<public>:<android.app.ActionBar>
<android.os.BatteryStats.Counter: void <init>()>:<public>:<android.os.BatteryStats.Counter>
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.app.IBackupAgent.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IBackupAgent.Stub:android.os.Binder,android.app.IBackupAgent>
<android.app.VoiceInteractor: boolean[] supportsCommands(java.lang.String[])>:<public>:<android.app.VoiceInteractor>
<android.renderscript.Float3: android.renderscript.Float3 div(android.renderscript.Float3,float)>:<public static>:<android.renderscript.Float3>
<android.app.ActivityManagerProxy: void restart()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.accounts.IAccountManager: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.ActionBar: android.app.ActionBar.Tab newTab()>:<public abstract>:<android.app.ActionBar>
<android.app.IActivityManager: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[],int,int)>:<public>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.filterfw.core.FilterGraph: void runTypeCheckOn(android.filterfw.core.Filter)>:<private>:<android.filterfw.core.FilterGraph>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>:<public static>:<android.os.ServiceManager>
<android.os.Messenger: android.os.IBinder getBinder()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.Region: boolean union(android.graphics.Rect)>:<public final>:<android.graphics.Region:android.os.Parcelable>
<android.hwtheme.HwThemeManager: void restoreIconCache(java.lang.String,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.print.IPrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.app.Dialog: boolean requestWindowFeature(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.MessageQueue: void dispose()>:<private>:<android.os.MessageQueue>
<android.graphics.drawable.RippleDrawable.RippleState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.RippleDrawable.RippleState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.transition.ArcMotion: void setMinimumVerticalAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.os.MessageQueue: void removeAllFutureMessagesLocked()>:<private>:<android.os.MessageQueue>
<android.accounts.IAccountAuthenticator: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.net.IConnectivityManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.IConnectivityManager.Stub:android.os.Binder,android.net.IConnectivityManager>
<android.app.SharedPreferencesImpl: java.util.WeakHashMap access.500(android.app.SharedPreferencesImpl)>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.EnterTransitionCoordinator.10: void onAnimationEnd(android.animation.Animator)>:<public>:<android.app.EnterTransitionCoordinator.10:android.animation.AnimatorListenerAdapter>
<android.app.Fragment: boolean isVisible()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.EGLContext: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.RemoteInput.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.RemoteInput.1:android.os.Parcelable.Creator>
<android.app.HwCustSvcFactory.DummyFactoryImpl: android.app.IHwCustNotification createNotificationCust()>:<public>:<android.app.HwCustSvcFactory.DummyFactoryImpl:android.app.HwCustSvcFactory.Factory>
<android.net.http.RequestHandle: void createAndQueueNewRequest()>:<private>:<android.net.http.RequestHandle>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.802(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.StrictMode.AndroidBlockGuardPolicy: void handleViolation(android.os.StrictMode.ViolationInfo)>:<>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.renderscript.Short4: void add(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.filterfw.io.TextGraphReader: void checkReferences()>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>:<public>:<android.graphics.Path>
<android.net.wifi.WifiScanner.OperationResult.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiScanner.OperationResult.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerInternal: void onWakefulnessChanged(int)>:<public abstract>:<android.app.ActivityManagerInternal>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.IWifiManager.Stub.Proxy: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ActivityManagerProxy: void <init>(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.DhcpInfo: void <clinit>()>:<static>:<android.net.DhcpInfo:android.os.Parcelable>
<android.graphics.drawable.RippleBackground: void onHotspotBoundsChanged()>:<public>:<android.graphics.drawable.RippleBackground>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Type: int getY()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.drawable.shapes.RoundRectShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.renderscript.FieldPacker: void addI32(int)>:<public>:<android.renderscript.FieldPacker>
<android.webkit.WebSyncManager: void syncFromRamToFlash()>:<abstract>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.app.backup.BackupTransport.TransportImpl: long requestFullBackupTime()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>:<public static>:<android.webkit.CookieManager>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>:<public>:<android.os.RemoteCallbackList>
<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.webkit.WebSettings: java.lang.String getPluginsPath()>:<public>:<android.webkit.WebSettings>
<android.accounts.AccountManager.AmsTask: void set(java.lang.Object)>:<protected volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.app.RemoteInput: int describeContents()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.os.INetworkActivityListener.Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>:<public static>:<android.os.INetworkActivityListener.Stub:android.os.Binder,android.os.INetworkActivityListener>
<android.app.HwCustRegisterServiceHelper: java.lang.Object getServiceManager(android.content.Context,java.lang.String)>:<public>:<android.app.HwCustRegisterServiceHelper>
<android.graphics.Matrix: void finalize()>:<protected>:<android.graphics.Matrix>
<android.app.IAlarmManager: void removeDeskClockAlarm()>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.DownloadManager: void validateArgumentIsNonEmpty(java.lang.String,java.lang.String)>:<private static>:<android.app.DownloadManager>
<android.renderscript.RenderScript: void nContextPause()>:<>:<android.renderscript.RenderScript>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.Parcel: int dataAvail()>:<public final>:<android.os.Parcel>
<android.os.Debug: void resetThreadAllocSize()>:<public static>:<android.os.Debug>
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.drawable.RippleDrawable: void <init>()>:<>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ActivityThread.ApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ContextImpl: java.io.File[] ensureDirsExistOrFilter(java.io.File[])>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.admin.DevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ContextImpl.65.1: boolean accept(java.io.File,java.lang.String)>:<public>:<android.app.ContextImpl.65.1:java.io.FilenameFilter>
<android.app.usage.UsageStats.1: void <init>()>:<>:<android.app.usage.UsageStats.1:android.os.Parcelable.Creator>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedAuthority()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.os.StrictMode.7: void finish()>:<public>:<android.os.StrictMode.7:android.os.StrictMode.Span>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAnonymousIdentity()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.NetworkMisc.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkMisc.1:android.os.Parcelable.Creator>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void <init>(android.app.ActivityTransitionCoordinator)>:<protected>:<android.app.ActivityTransitionCoordinator.ContinueTransitionListener:android.transition.Transition.TransitionListenerAdapter>
<android.graphics.Color: int alpha(int)>:<public static>:<android.graphics.Color>
<android.net.NetworkPolicy: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.Paint: float getTextScaleX()>:<public native>:<android.graphics.Paint>
<android.app.AlarmManager.AlarmClockInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.AlarmManager.AlarmClockInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glStencilMask(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.NativeActivity: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.backup.IBackupManager: void restoreAtInstall(java.lang.String,int)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.os.BaseBundle: double getDouble(java.lang.String,double)>:<public>:<android.os.BaseBundle>
<android.app.ActivityManager.TaskDescription: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.ActivityManager.RunningServiceInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory: int getHuaweiRealTheme(int)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>:<public static>:<android.graphics.Movie>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.Dialog: boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.database.sqlite.SQLiteConnection: void nativeCancel(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Debug: int getBinderSentTransactions()>:<public static native>:<android.os.Debug>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Int3: android.renderscript.Int3 mod(android.renderscript.Int3,int)>:<public static>:<android.renderscript.Int3>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>:<public>:<android.net.ConnectivityManager>
<android.os.BaseBundle: boolean getBoolean(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.graphics.drawable.VectorDrawable.VGroup: float getScaleY()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOver()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.filterfw.core.Filter: void performTearDown(android.filterfw.core.FilterContext)>:<final>:<android.filterfw.core.Filter>
<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutStarted(android.os.ICancellationSignal,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.net.SntpClient: void <init>()>:<public>:<android.net.SntpClient>
<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener: void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener>
<android.net.IEthernetManager.Stub.Proxy: void addListener(android.net.IEthernetServiceListener)>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.graphics.Canvas: void insertInorderBarrier()>:<public>:<android.graphics.Canvas>
<android.filterfw.io.GraphReader: void <init>()>:<public>:<android.filterfw.io.GraphReader>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.BulkCursorToCursorAdaptor: void deactivate()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.Mesh: int getVertexAllocationCount()>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.app.backup.IRestoreSession: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>:<public abstract>:<android.app.backup.IRestoreSession:android.os.IInterface>
<android.os.MemoryFile: long native_mmap(java.io.FileDescriptor,int,int)>:<private static native>:<android.os.MemoryFile>
<android.net.wifi.p2p.WifiP2pWfdInfo: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.BackStackRecord.3: void <init>(android.graphics.Rect)>:<>:<android.app.BackStackRecord.3:android.transition.Transition.EpicenterCallback>
<android.print.PrinterInfo: int access.302(android.print.PrinterInfo,int)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.AppOpsManager.OnOpChangedInternalListener: void onOpChanged(int,java.lang.String)>:<public>:<android.app.AppOpsManager.OnOpChangedInternalListener:android.app.AppOpsManager.OnOpChangedListener>
<android.webkit.Plugin: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.Plugin>
<android.opengl.GLES20: void glClear(int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiManager: java.lang.String getConfigFile()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.DhcpStateMachine: void access.1900(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>:<public>:<android.database.ContentObserver>
<android.graphics.drawable.LayerDrawable: void computeNestedPadding(android.graphics.Rect)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.VpnService: boolean protect(int)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.drm.DrmManagerClient.InfoHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>:<public>:<android.drm.DrmManagerClient.InfoHandler:android.os.Handler>
<android.app.backup.IBackupManager: boolean setBackupPassword(java.lang.String,java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.EnterTransitionCoordinator.1: void <init>(android.app.EnterTransitionCoordinator,android.view.View)>:<>:<android.app.EnterTransitionCoordinator.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.wifi.IWifiManager: boolean saveConfiguration()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setExitFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.transition.TransitionManager.MultiListener.1: void <init>(android.transition.TransitionManager.MultiListener,android.util.ArrayMap)>:<>:<android.transition.TransitionManager.MultiListener.1:android.transition.Transition.TransitionListenerAdapter>
<android.opengl.GLES20: void glUniform2i(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteConnection: void nativeFinalizeStatement(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.filterfw.core.GLFrame: boolean nativeAllocateWithTexture(android.filterfw.core.GLEnvironment,int,int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.os.IMultiWinService.Stub: android.os.IMultiWinService asInterface(android.os.IBinder)>:<public static>:<android.os.IMultiWinService.Stub:android.os.Binder,android.os.IMultiWinService>
<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrinterCapabilitiesInfo: void copyFrom(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.webkit.WebView: void goForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.hwcontrol.HwWidgetFactory: android.hwcontrol.HwWidgetFactory.HwDialogStub getHwDialogStub(android.content.Context,android.view.Window,android.app.Dialog,android.util.AttributeSet)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.DownloadManager.Query: java.lang.String joinStrings(java.lang.String,java.lang.Iterable)>:<private>:<android.app.DownloadManager.Query>
<android.webkit.WebViewProvider.ViewDelegate: void onScrollChanged(int,int,int,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.print.PrintJobInfo: int getState()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.wifi.WifiCHRStateManager: void updateBSSID(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.ActivityTransitionState: int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator)>:<public>:<android.app.ActivityTransitionState>
<android.webkit.ClientCertRequest: void ignore()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.graphics.Path.Direction: android.graphics.Path.Direction valueOf(java.lang.String)>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.opengl.GLSurfaceView.GLThreadManager: void <clinit>()>:<static>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.app.MediaRouteButton: void onMeasure(int,int)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.app.usage.IUsageStatsManager.Stub: void <init>()>:<public>:<android.app.usage.IUsageStatsManager.Stub:android.os.Binder,android.app.usage.IUsageStatsManager>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path.Op)>:<public>:<android.graphics.Path>
<android.mtp.MtpObjectInfo: void <init>()>:<private>:<android.mtp.MtpObjectInfo>
<android.os.BatteryStats: int getDischargeAmountScreenOff()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,java.lang.String)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.NetworkTemplate: int hashCode()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.IActivityPendingResult.Stub.Proxy: boolean sendResult(int,java.lang.String,android.os.Bundle)>:<public>:<android.app.IActivityPendingResult.Stub.Proxy:android.app.IActivityPendingResult>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.renderscript.Sampler: float getAnisotropy()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.INetworkManagementService: boolean isClatdStarted(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.WifiLinkQualityInfo: int getType()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.backup.RecentsBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.RecentsBackupHelper:android.app.backup.BackupHelper>
<android.app.ActivityTransitionState: void readState(android.os.Bundle)>:<public>:<android.app.ActivityTransitionState>
<android.app.job.JobInfo.Builder: int access.500(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.net.NetworkFactory: boolean acceptRequest(android.net.NetworkRequest,int)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.graphics.ColorMatrixColorFilter: void setColorMatrix(float[])>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiManager: boolean reassociate()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.BatteryStats.HistoryTag: int hashCode()>:<public>:<android.os.BatteryStats.HistoryTag>
<android.hsm.HwSystemManager: android.location.Location getFakeLocation(java.lang.String)>:<public static>:<android.hsm.HwSystemManager>
<android.app.ActivityManagerProxy: android.app.ActivityManager.StackInfo getStackInfo(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Canvas: void native_restore(long)>:<private static native>:<android.graphics.Canvas>
<android.webkit.WebView: boolean access.1200(android.webkit.WebView,int,int,int,int,int,int,int,int,boolean)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.SearchDialog: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.test.RepetitiveTest: int numIterations()>:<public abstract>:<android.test.RepetitiveTest:java.lang.annotation.Annotation>
<android.app.backup.IFullBackupRestoreObserver: void onStartBackup()>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.net.dhcp.DhcpPacket: void fillInPacket(int,java.net.InetAddress,java.net.InetAddress,short,short,java.nio.ByteBuffer,byte,boolean)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.accounts.AccountManager.AmsTask: android.os.Bundle internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>:<private>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendDecodedSegment(android.net.Uri.PathPart,java.lang.String)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnDismissListener(android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.FontFamily: boolean addFont(java.lang.String)>:<public>:<android.graphics.FontFamily>
<android.os.BaseBundle: void putLong(java.lang.String,long)>:<public>:<android.os.BaseBundle>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>:<public>:<android.graphics.Paint>
<android.net.NetworkStats: java.lang.String tagToString(int)>:<public static>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.os.Binder:android.os.IBinder>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onFailure(int)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ActionListener>
<android.graphics.drawable.ColorDrawable.ColorState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.SimpleScheduler: void <init>(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.core.SimpleScheduler:android.filterfw.core.Scheduler>
<android.graphics.Paint.Join: android.graphics.Paint.Join valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.filterfw.io.TextGraphReader: void executeCommands()>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.os.Handler: android.os.IMessenger getIMessenger()>:<final>:<android.os.Handler>
<android.net.SSLCertificateSocketFactory: void <clinit>()>:<static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.filterfw.core.SimpleFrame: java.lang.String toString()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.os.storage.StorageVolume: boolean isEmulated()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.opengl.GLES10: void glClientActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.os.MessageQueue: boolean hasMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>:<>:<android.os.MessageQueue>
<android.transition.PatternPathMotion: void <init>()>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.net.RssiCurve: int hashCode()>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.renderscript.Matrix3f: void loadIdentity()>:<public>:<android.renderscript.Matrix3f>
<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.net.LocalSocketImpl: void setOption_native(java.io.FileDescriptor,int,int,int)>:<private native>:<android.net.LocalSocketImpl>
<android.app.NativeActivity: void <init>()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.DatePickerDialog: int resolveDialogTheme(android.content.Context,int)>:<static>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyLog()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.net.wifi.WifiScanner.OperationResult: void <clinit>()>:<static>:<android.net.wifi.WifiScanner.OperationResult:android.os.Parcelable>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.app.Application: void attach(android.content.Context)>:<final>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.filterfw.core.FilterFactory: void addFilterLibrary(java.lang.String)>:<public static>:<android.filterfw.core.FilterFactory>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.app.backup.BackupTransport.TransportImpl: java.lang.String name()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.http.LoggingEventHandler: void certificate(android.net.http.SslCertificate)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.app.ActivityThread.ApplicationThread: void clearDnsCache()>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.webkit.WebResourceResponse: void setStatusCodeAndReasonPhrase(int,java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.opengl.GLLogWrapper: void glGenBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.graphics.BlurMaskFilter.Blur: void <clinit>()>:<static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.app.backup.IBackupManager: void setBackupProvisioned(boolean)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.os.Bundle.1: android.os.Bundle[] newArray(int)>:<public>:<android.os.Bundle.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: int save()>:<public>:<android.graphics.Canvas>
<android.app.IApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.opengl.GLLogWrapper: java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.NetworkTemplate: boolean isMatchRuleMobile()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.Byte3: byte elementSum()>:<public>:<android.renderscript.Byte3>
<android.webkit.WebViewProvider: boolean canZoomOut()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.ConsoleMessage: java.lang.String message()>:<public>:<android.webkit.ConsoleMessage>
<android.graphics.ColorMatrixColorFilter: long nativeColorMatrixFilter(float[])>:<private static native>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.print.PrinterId: java.lang.String getLocalId()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.400(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.webkit.WebViewProvider: void setEnableAdblockFeature(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.ActivityThread.Idler: void <init>(android.app.ActivityThread)>:<private>:<android.app.ActivityThread.Idler:android.os.MessageQueue.IdleHandler>
<android.app.Activity: void onWindowFocusChanged(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats: java.lang.String getEndPlatformVersion()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.WifiConfiguration: java.lang.String getKeyIdForCredentials(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.'annotation'.SdkConstant.SdkConstantType: android.'annotation'.SdkConstant.SdkConstantType valueOf(java.lang.String)>:<public static>:<android.annotation.SdkConstant.SdkConstantType:java.lang.Enum>
<android.net.IpConfiguration.IpAssignment: void <init>(java.lang.String,int)>:<private>:<android.net.IpConfiguration.IpAssignment:java.lang.Enum>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapT()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.BackStackState: void <clinit>()>:<static>:<android.app.BackStackState:android.os.Parcelable>
<android.opengl.GLSurfaceView.GLThread: void onResume()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Region.Op: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Region.Op:java.lang.Enum>
<android.app.Instrumentation.EmptyRunnable: void run()>:<public>:<android.app.Instrumentation.EmptyRunnable:java.lang.Runnable>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.FieldPacker: android.renderscript.Matrix2f subMatrix2f()>:<public>:<android.renderscript.FieldPacker>
<android.os.Messenger.1: android.os.Messenger[] newArray(int)>:<public>:<android.os.Messenger.1:android.os.Parcelable.Creator>
<android.net.NetworkIdentity: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.net.ProxyInfo: boolean isValid()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.wifi.RssiPacketCountInfo.1: android.net.wifi.RssiPacketCountInfo[] newArray(int)>:<public>:<android.net.wifi.RssiPacketCountInfo.1:android.os.Parcelable.Creator>
<android.app.Activity: boolean onSearchRequested()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>:<public>:<android.app.backup.BackupDataInput>
<android.renderscript.Byte3: void sub(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClass(java.lang.Class,java.lang.String)>:<public>:<android.filterfw.core.FilterFactory>
<android.app.Notification.InboxStyle: android.widget.RemoteViews makeBigContentView()>:<private>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.app.ContextImpl: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)>:<static>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.app.ContextImpl.ApplicationContentResolver: void appNotRespondingViaProvider(android.content.IContentProvider)>:<public>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeBeginSnapshot(java.lang.String)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.graphics.Shader: void <init>()>:<public>:<android.graphics.Shader>
<android.database.Cursor: int getType(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void <init>(android.filterfw.core.SerializedFrame,int)>:<public>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.renderscript.Float2: android.renderscript.Float2 mul(android.renderscript.Float2,float)>:<public static>:<android.renderscript.Float2>
<android.net.EthernetManager.2: void <init>(android.net.EthernetManager)>:<>:<android.net.EthernetManager.2:android.net.IEthernetServiceListener.Stub,android.os.Binder>
<android.transition.Transition: void playTransition(android.view.ViewGroup)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Fragment: void onViewStateRestored(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebViewFactory: boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private static native>:<android.webkit.WebViewFactory>
<android.app.ActivityThread: void performRestartActivity(android.os.IBinder)>:<final>:<android.app.ActivityThread>
<android.os.FileBridge: java.io.FileDescriptor getClientSocket()>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.os.PerformanceCollector: void <init>(android.os.PerformanceCollector.PerformanceResultsWriter)>:<public>:<android.os.PerformanceCollector>
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.net.NetworkFactory: void handleSetFilter(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.os.CommonClock: android.os.CommonClock.OnServerDiedListener access.100(android.os.CommonClock)>:<static>:<android.os.CommonClock>
<android.print.PrintDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.renderscript.Allocation: android.renderscript.Element getElement()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.filterfw.core.Filter: android.filterfw.core.Frame wrapInputValue(java.lang.String,java.lang.Object)>:<private final>:<android.filterfw.core.Filter>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLSurfaceView.GLThread: void stopEglContextLocked()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.mtp.MtpDevice: long native_get_storage_id(int)>:<private native>:<android.mtp.MtpDevice>
<android.app.VoiceInteractor: void detachActivity()>:<>:<android.app.VoiceInteractor>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.drawable.Drawable>
<android.transition.Transition: android.transition.Transition excludeChildren(int,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.MobileLinkQualityInfo: int getEvdoSnr()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1: android.net.wifi.p2p.nsd.WifiP2pServiceResponse[] newArray(int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1:android.os.Parcelable.Creator>
<android.app.usage.TimeSparseArray: int closestIndexOnOrAfter(long)>:<public>:<android.app.usage.TimeSparseArray:android.util.LongSparseArray>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.ConnectivityManager.LegacyRequest: void <init>()>:<private>:<android.net.ConnectivityManager.LegacyRequest>
<android.accounts.AccountManagerResponse.1: void <init>()>:<>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.webkit.URLUtil: int parseHex(byte)>:<private static>:<android.webkit.URLUtil>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageNumber()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.net.ProxyDataTracker: java.util.concurrent.atomic.AtomicBoolean access.000(android.net.ProxyDataTracker)>:<static>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.os.MemoryFile.MemoryInputStream: void mark(int)>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.app.INotificationManager.Stub.Proxy: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.print.PrintManager.1: void handleMessage(android.os.Message)>:<public>:<android.print.PrintManager.1:android.os.Handler>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationToSystemCache()>:<public>:<android.app.DownloadManager.Request>
<android.database.MatrixCursor: java.lang.String getString(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.os.INetworkManagementService.Stub.Proxy: void registerNetworkActivityListener(android.os.INetworkActivityListener)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>:<public>:<android.app.SharedElementCallback>
<android.renderscript.Element.DataKind: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiScanner.OperationResult.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiScanner.OperationResult.1:android.os.Parcelable.Creator>
<android.graphics.Typeface: long nativeCreateFromArray(long[])>:<private static native>:<android.graphics.Typeface>
<android.net.wifi.IWifiManager.Stub.Proxy: void setCountryCode(java.lang.String,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.INetworkManagementService.Stub.Proxy: void removeIdleTimer(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.net.http.DelegatingSSLSession.CertificateWrap: java.security.cert.Certificate[] getPeerCertificates()>:<public>:<android.net.http.DelegatingSSLSession.CertificateWrap:android.net.http.DelegatingSSLSession>
<android.graphics.SurfaceTexture: void nativeGetTransformMatrix(float[])>:<private native>:<android.graphics.SurfaceTexture>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceIpv6NdOffload(java.lang.String,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.drawable.Ripple: void setXGravity(float)>:<public>:<android.graphics.drawable.Ripple>
<android.net.nsd.NsdServiceInfo: java.lang.String toString()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.ActionBar: int getNavigationItemCount()>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLErrorWrapper: void glLightx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pManager: void getNfcHandoverRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.print.IPrintManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.graphics.drawable.LayerDrawable.LayerState: int access.102(android.graphics.drawable.LayerDrawable.LayerState,int)>:<static>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Float3: void setAt(int,float)>:<public>:<android.renderscript.Float3>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.RegistrantList: void notifyResult(java.lang.Object)>:<public>:<android.os.RegistrantList>
<android.graphics.Bitmap.BitmapFinalizer: void <init>(long,int)>:<>:<android.graphics.Bitmap.BitmapFinalizer>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.os.INetworkManagementService: java.lang.String[] getDnsForwarders()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: void addIdleTimer(java.lang.String,int,int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: void <clinit>()>:<static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.mtp.MtpDevice: boolean deleteObject(int)>:<public>:<android.mtp.MtpDevice>
<android.net.wifi.WifiScanner.ActionListener: void onFailure(int,java.lang.String)>:<public abstract>:<android.net.wifi.WifiScanner.ActionListener>
<android.graphics.PixelFormat: boolean isPublicFormat(int)>:<public static>:<android.graphics.PixelFormat>
<android.os.IUserManager.Stub.Proxy: void setUserName(int,java.lang.String)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGenerateMipmapOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.Drawable: android.graphics.PorterDuff.Mode parseTintMode(int,android.graphics.PorterDuff.Mode)>:<public static>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.RotateDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.ColorDrawable: void <init>(android.graphics.drawable.ColorDrawable.ColorState,android.graphics.drawable.ColorDrawable.1)>:<>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <clinit>()>:<static>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.renderscript.RenderScript: void destroy()>:<public>:<android.renderscript.RenderScript>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.app.BackStackRecord: boolean isEmpty()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ActionBar: void setDisplayOptions(int,int)>:<public abstract>:<android.app.ActionBar>
<android.app.trust.ITrustManager.Stub.Proxy: void unregisterTrustListener(android.app.trust.ITrustListener)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.app.Fragment.SavedState.1: android.app.Fragment.SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.os.Process: int myPid()>:<public static final>:<android.os.Process>
<android.net.Uri.AbstractPart: java.lang.String getEncoded()>:<abstract>:<android.net.Uri.AbstractPart>
<android.app.Notification.Builder: android.app.Notification.Builder setContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.transition.Crossfade: void <init>()>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.IActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.SurfaceTexture: int nativeDetachFromGLContext()>:<private native>:<android.graphics.SurfaceTexture>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: byte[] getByteArray()>:<public>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.Handler: android.os.Looper getLooper()>:<public final>:<android.os.Handler>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Int2: void set(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.app.ActivityThread.ApplicationThread: void updatePendingConfiguration(android.content.res.Configuration)>:<private>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.SharedPreferencesImpl: void enqueueDiskWrite(android.app.SharedPreferencesImpl.MemoryCommitResult,java.lang.Runnable)>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.http.SslCertificate: java.util.Date cloneDate(java.util.Date)>:<private static>:<android.net.http.SslCertificate>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,short[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.transition.TransitionSet: android.transition.Transition removeTarget(java.lang.Class)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.database.CursorWindow: boolean putDouble(double,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.Parcel: void writeStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.net.LocalSocketImpl: java.lang.Object access.200(android.net.LocalSocketImpl)>:<static>:<android.net.LocalSocketImpl>
<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager getTrustManager()>:<private>:<android.net.http.CertificateChainValidator>
<android.filterfw.MffEnvironment: void activateGLEnvironment()>:<public>:<android.filterfw.MffEnvironment>
<android.graphics.drawable.StateListDrawable.StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.WifiInfo: void setSupplicantState(java.lang.String)>:<>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.ResultInfo: java.lang.String toString()>:<public>:<android.app.ResultInfo:android.os.Parcelable>
<android.net.ConnectivityManager.NetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.app.IUiAutomationConnection.Stub: void <init>()>:<public>:<android.app.IUiAutomationConnection.Stub:android.os.Binder,android.app.IUiAutomationConnection>
<android.accounts.AccountManager.Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.filterfw.core.ShaderProgram: boolean compileAndLink()>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.app.Notification.Builder setLights(int,int,int)>:<public>:<android.app.Notification.Builder>
<android.os.INetworkManagementService.Stub.Proxy: void registerObserver(android.net.INetworkManagementEventObserver)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.IInstrumentationWatcher.Stub.Proxy: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>:<public>:<android.app.IInstrumentationWatcher.Stub.Proxy:android.app.IInstrumentationWatcher>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getForegroundActivityTimer()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.hwcontrol.HwWidgetFactory.PermissionInformation.1: void onClick(android.content.DialogInterface,int)>:<public>:<android.hwcontrol.HwWidgetFactory.PermissionInformation.1:android.content.DialogInterface.OnClickListener>
<android.filterfw.core.FilterSurfaceView: void unregisterSurface()>:<private>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.UEventObserver: void nativeRemoveMatch(java.lang.String)>:<private static native>:<android.os.UEventObserver>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: boolean canReverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.graphics.Matrix.1: boolean preRotate(float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.os.IMultiWinService: void setLauncherVisibility(boolean)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.database.CursorWindow: short getShort(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.accounts.AccountManager.4: void doWork()>:<public>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.renderscript.Script: android.renderscript.Script.FieldID createFieldID(int,android.renderscript.Element)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.SearchDialog.4: boolean onQueryTextChange(java.lang.String)>:<public>:<android.app.SearchDialog.4:android.widget.SearchView.OnQueryTextListener>
<android.app.Notification.Builder: void <init>(android.content.Context,android.app.Notification)>:<private>:<android.app.Notification.Builder>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.opengl.GLLogWrapper: void glPushMatrix()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings.PluginState: void <clinit>()>:<static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.Dialog: android.app.Activity getOwnerActivity()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.job.JobService.1: void <init>(android.app.job.JobService)>:<>:<android.app.job.JobService.1:android.app.job.IJobService.Stub,android.os.Binder>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.net.INetworkManagementEventObserver: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.app.ActivityManager.TaskThumbnail: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IActivityContainer.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.net.MobileDataStateTracker: boolean setRadio(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.IConnectivityManager.Stub.Proxy: void captivePortalCheckCompleted(android.net.NetworkInfo,boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.ConnectivityManager: java.lang.String getMobileProvisioningUrl()>:<public>:<android.net.ConnectivityManager>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>:<public abstract>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.renderscript.Double3: void <init>(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.database.sqlite.JankSqlite: boolean addDelete(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.app.ProgressDialog: int getMax()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.storage.IMountService: int finalizeSecureContainer(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.wifi.WpsResult.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WpsResult.1:android.os.Parcelable.Creator>
<android.renderscript.Matrix2f: void <init>()>:<public>:<android.renderscript.Matrix2f>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.Class)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.mtp.MtpPropertyGroup: java.lang.String queryGenre(int)>:<private>:<android.mtp.MtpPropertyGroup>
<android.net.Uri.OpaqueUri: android.net.Uri readFrom(android.os.Parcel)>:<static>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.transition.Transition: android.transition.Transition addTarget(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.IActivityManager: void notifyEnterAnimationComplete(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>:<public>:<android.app.AppOpsManager>
<android.os.Environment.UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.net.NetworkStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.Notification.WearableExtender: void <init>(android.app.Notification)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.DhcpStateMachine: java.lang.String access.300(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.net.wifi.WifiActivityEnergyInfo: int getStackState()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.app.IInstrumentationWatcher.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IInstrumentationWatcher.Stub:android.os.Binder,android.app.IInstrumentationWatcher>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServicesForUser(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>:<public static>:<android.opengl.ETC1Util>
<android.os.AsyncTask.SerialExecutor.1: void run()>:<public>:<android.os.AsyncTask.SerialExecutor.1:java.lang.Runnable>
<android.os.WorkSource: boolean updateUidsAndNamesLocked(android.os.WorkSource,boolean,boolean)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.net.INetworkPolicyListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onInterrupt()>:<public>:<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper:android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.net.wifi.BatchedScanResult.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.BatchedScanResult.1:android.os.Parcelable.Creator>
<android.app.IActivityManager: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.SamplingDataTracker: void getSamplingSnapshots(java.util.Map)>:<public static>:<android.net.SamplingDataTracker>
<android.transition.Slide.CalculateSlideVertical: void <init>()>:<private>:<android.transition.Slide.CalculateSlideVertical:android.transition.Slide.CalculateSlide>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.UiAutomation: java.util.ArrayList access.400(android.app.UiAutomation)>:<static>:<android.app.UiAutomation>
<android.graphics.drawable.InsetDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.backup.BackupAgent.BackupServiceBinder: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.transition.Transition.TransitionListener: void onTransitionStart(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.graphics.drawable.VectorDrawable.VPath: boolean isClipPath()>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.os.BatteryStats: int getDischargeAmountScreenOnSinceCharge()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.app.ListActivity: void setSelection(int)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.AppOpsManager: java.lang.String opToPermission(int)>:<public static>:<android.app.AppOpsManager>
<android.graphics.Path: void finalizer(long)>:<private static native>:<android.graphics.Path>
<android.app.MediaRouteButton: void refreshRoute()>:<private>:<android.app.MediaRouteButton:android.view.View>
<android.os.storage.IMountService.Stub.Proxy: int[] getStorageUsers(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.drm.DrmManagerClient: void <init>(android.content.Context)>:<public>:<android.drm.DrmManagerClient>
<android.net.nsd.NsdManager.ServiceHandler: void <init>(android.net.nsd.NsdManager,android.os.Looper)>:<>:<android.net.nsd.NsdManager.ServiceHandler:android.os.Handler>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.wifi.WifiCHRStateManager: android.net.wifi.ScanResult getScanResultByBssid(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Region.1: android.graphics.Region createFromParcel(android.os.Parcel)>:<public>:<android.graphics.Region.1:android.os.Parcelable.Creator>
<android.print.PrinterCapabilitiesInfo: int[] access.100(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.ActivityThread: void access.2700(android.app.ActivityThread,android.app.ActivityThread.DumpComponentInfo)>:<static>:<android.app.ActivityThread>
<android.graphics.Point.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.Point.1:android.os.Parcelable.Creator>
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.UserHandle: int getCallingUserId()>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.os.BaseBundle: long getLong(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>:<public>:<android.graphics.Paint>
<android.app.ApplicationPackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>:<public>:<android.net.http.SslError>
<android.renderscript.Font.Style: void <clinit>()>:<static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.drm.DrmManagerClient: int access.200(android.drm.DrmManagerClient,int)>:<static>:<android.drm.DrmManagerClient>
<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.transition.TransitionUtils: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)>:<public static>:<android.transition.TransitionUtils>
<android.filterfw.core.FilterGraph: void setTypeCheckMode(int)>:<public>:<android.filterfw.core.FilterGraph>
<android.app.LocalActivityManager: android.view.Window performDestroy(android.app.LocalActivityManager.LocalActivityRecord,boolean)>:<private>:<android.app.LocalActivityManager>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.RequestHandle: java.lang.String getMethod()>:<public>:<android.net.http.RequestHandle>
<android.transition.TransitionSet: void forceVisibility(int,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.pdf.PdfEditor: boolean getPageCropBox(int,android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfEditor>
<android.app.ActivityThread.3: void onLowMemory()>:<public>:<android.app.ActivityThread.3:android.content.ComponentCallbacks2>
<android.transition.Slide: void setSlideEdge(int)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.filterfw.core.FrameFormat: int getSize()>:<public>:<android.filterfw.core.FrameFormat>
<android.filterfw.core.FilterContext: void setFrameManager(android.filterfw.core.FrameManager)>:<public>:<android.filterfw.core.FilterContext>
<android.filterfw.core.Filter: void initWithAssignmentString(java.lang.String)>:<public final>:<android.filterfw.core.Filter>
<android.app.Instrumentation: void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)>:<public>:<android.app.Instrumentation>
<android.net.wifi.WifiManager: void startPPPOE(android.net.wifi.PPPOEConfig)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int)>:<protected>:<android.renderscript.Script.FieldBase>
<android.net.wifi.IWifiManager.Stub.Proxy: void setWifiStateByManual(boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.transition.ChangeBounds: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeBounds:android.transition.Transition>
<android.database.AbstractCursor: void deactivate()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.os.storage.StorageManager.ListenerDelegate: android.os.storage.StorageEventListener getListener()>:<>:<android.os.storage.StorageManager.ListenerDelegate>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.ddm.DdmHandleHello: void disconnected()>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.BitmapFactory.Options: void requestCancel()>:<private native>:<android.graphics.BitmapFactory.Options>
<android.graphics.drawable.ClipDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiManager: boolean isP2pSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManager: int staticGetMemoryClass()>:<public static>:<android.app.ActivityManager>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Double4: android.renderscript.Double4 mul(android.renderscript.Double4,double)>:<public static>:<android.renderscript.Double4>
<android.net.http.RequestQueue: void stopTiming()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.transition.Scene: void setEnterAction(java.lang.Runnable)>:<public>:<android.transition.Scene>
<android.webkit.WebSettings: boolean getAllowUniversalAccessFromFileURLs()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.LinkAddress: void <init>(java.lang.String)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.graphics.CanvasProperty: long getNativeContainer()>:<public>:<android.graphics.CanvasProperty>
<android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>:<public static>:<android.os.ServiceManager>
<android.filterfw.core.SimpleFrame: void setFormatObjectClass(java.lang.Class)>:<private>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.graphics.drawable.AnimatedStateListDrawable: void <clinit>()>:<static>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.renderscript.Script.LaunchOptions: int getZEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.net.LocalSocketImpl: boolean supportsUrgentData()>:<protected>:<android.net.LocalSocketImpl>
<android.net.LocalSocket: void <init>(android.net.LocalSocketImpl,int)>:<>:<android.net.LocalSocket:java.io.Closeable>
<android.app.Activity: android.media.session.MediaController getMediaController()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.CacheManager: void <clinit>()>:<static>:<android.webkit.CacheManager>
<android.app.IAppTask.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.renderscript.Byte4: void mul(byte)>:<public>:<android.renderscript.Byte4>
<android.hwtheme.HwThemeManagerDummy: void applyDefaultHwTheme(boolean,android.content.Context)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.wifi.HiSiWifiComm: void <init>(android.content.Context)>:<public>:<android.net.wifi.HiSiWifiComm>
<android.os.Bundle: java.lang.Object clone()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.wifi.IWifiManager: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.CommonClock: void unregisterTimelineChangeListener()>:<private>:<android.os.CommonClock>
<android.net.wifi.HwCustWifiManagerDummy: void <init>()>:<public>:<android.net.wifi.HwCustWifiManagerDummy:android.net.wifi.IHwCustWifiManager>
<android.filterfw.core.NativeProgram: boolean bindResetFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.os.Parcel: int readInt()>:<public final>:<android.os.Parcel>
<android.app.INotificationManager: int getHintsFromListener(android.service.notification.INotificationListener)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.net.Uri.HierarchicalUri: void <init>(java.lang.String,android.net.Uri.Part,android.net.Uri.PathPart,android.net.Uri.Part,android.net.Uri.Part)>:<private>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.IConnectivityManager: int getLastTetherError(java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel access.202(android.net.MobileDataStateTracker,com.android.internal.util.AsyncChannel)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.LocalSocket: boolean isClosed()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.ContextImpl.38: void <init>()>:<>:<android.app.ContextImpl.38:android.app.ContextImpl.ServiceFetcher>
<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)>:<public>:<android.os.storage.StorageEventListener>
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.MessageQueue: int enqueueSyncBarrier(long)>:<>:<android.os.MessageQueue>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.opengl.EGLLogWrapper: boolean eglWaitGL()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView: boolean canGoForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.JankEventData: void <init>(android.os.Parcel,android.os.JankEventData.1)>:<>:<android.os.JankEventData:android.os.Parcelable>
<android.net.NetworkScorerAppManager: boolean setActiveScorer(android.content.Context,java.lang.String)>:<public static>:<android.net.NetworkScorerAppManager>
<android.net.SSLSessionCache: void <init>(android.content.Context)>:<public>:<android.net.SSLSessionCache>
<android.net.wifi.p2p.WifiP2pDevice: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<public final>:<android.appwidget.AppWidgetHost>
<android.net.wifi.WifiConfiguration.3: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiConfiguration.3:android.os.Parcelable.Creator>
<android.mtp.MtpDevice: int[] getStorageIds()>:<public>:<android.mtp.MtpDevice>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>:<public final>:<android.os.Parcel>
<android.os.BatteryStats.Uid.Pid: void <init>(android.os.BatteryStats.Uid)>:<public>:<android.os.BatteryStats.Uid.Pid>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)>:<private static>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.graphics.Point.1: void <init>()>:<>:<android.graphics.Point.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: java.lang.String nGetName(long)>:<>:<android.renderscript.RenderScript>
<android.transition.Transition: void setPropagation(android.transition.TransitionPropagation)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<android.app.IActivityContainer.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IActivityContainer.Stub:android.os.Binder,android.app.IActivityContainer>
<android.app.LoadedApk.WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.app.Activity: void takeKeyEvents(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Long2: long dotProduct(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>:<public>:<android.app.LoadedApk>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>:<public>:<android.appwidget.AppWidgetHost>
<android.graphics.drawable.RippleDrawable: void clearHotspots()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>:<public>:<android.app.ServiceConnectionLeaked:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void _nativeClassInit()>:<private static native>:<android.opengl.GLES20>
<android.transition.ChangeBounds.3: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.3:android.util.Property>
<android.app.PendingIntent: boolean isTargetedToPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.IVibratorService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.net.NetworkAgent: void sendNetworkScore(int)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.renderscript.Long3: android.renderscript.Long3 sub(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.filterfw.core.MutableFrameFormat: void <init>(int,int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.opengl.GLErrorWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.HwFindActionModeCallback.1: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.webkit.HwFindActionModeCallback.1:android.view.View.OnTouchListener>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: void <init>(android.app.LauncherActivity.ActivityAdapter)>:<private>:<android.app.LauncherActivity.ActivityAdapter.ArrayFilter:android.widget.Filter>
<android.drm.DrmManagerClient: android.drm.DrmSupportInfo[] _getAllSupportInfo(int)>:<private native>:<android.drm.DrmManagerClient>
<android.app.ActivityManager.CpuStatInfo: float calcRatio(int,int)>:<private>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.opengl.GLES10: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: java.lang.String colorModesToString()>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.appwidget.AppWidgetProviderInfo: void <clinit>()>:<static>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.database.CharArrayBuffer: void <init>(char[])>:<public>:<android.database.CharArrayBuffer>
<android.print.PrintManager: void <init>(android.content.Context,android.print.IPrintManager,int,int)>:<public>:<android.print.PrintManager>
<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener: void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener>
<android.app.FragmentManagerImpl: void popBackStack(int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.402(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.IConnectivityManager.Stub.Proxy: boolean removeVpnAddress(java.lang.String,int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.backup.BackupTransport.TransportImpl: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.os.Handler: android.os.Message obtainMessage(int)>:<public final>:<android.os.Handler>
<android.app.ApplicationPackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES20: int glCreateProgram()>:<public static native>:<android.opengl.GLES20>
<android.os.PowerManager.WakeLock: void release(int)>:<public>:<android.os.PowerManager.WakeLock>
<android.app.ActivityView.ActivityContainerWrapper: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.app.IActivityManager: int getPackageScreenCompatMode(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkRequest.1: void <init>()>:<>:<android.net.NetworkRequest.1:android.os.Parcelable.Creator>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.AppOpsManager.1: void opChanged(int,java.lang.String)>:<public>:<android.app.AppOpsManager.1:com.android.internal.app.IAppOpsCallback.Stub>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(android.net.wifi.p2p.WifiP2pDeviceList)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void native_drawRoundRect(long,float,float,float,float,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.net.wifi.p2p.WifiP2pGroup.1: android.net.wifi.p2p.WifiP2pGroup createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pGroup.1:android.os.Parcelable.Creator>
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiEnterpriseConfig: int describeContents()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.os.UserHandle: boolean isSameApp(int,int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.app.usage.IUsageStatsManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.http.Request: java.lang.String toString()>:<public>:<android.net.http.Request>
<android.renderscript.Int4: void sub(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point scaledTo(float)>:<public>:<android.filterfw.geometry.Point>
<android.graphics.Matrix.1: void setScale(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.graphics.drawable.InsetDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: boolean onNavigateUp()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.UidRange.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.UidRange.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.NativeActivity: void onInputQueueCreated(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.hwtheme.HwThemeManagerDummy: boolean isHwTheme()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.os.ZygoteStartFailedEx: void <init>(java.lang.Throwable)>:<>:<android.os.ZygoteStartFailedEx:java.lang.Exception,java.lang.Throwable>
<android.net.NetworkInfo: android.net.NetworkInfo.State access.002(android.net.NetworkInfo,android.net.NetworkInfo.State)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.opengl.GLLogWrapper: void glMaterialf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>:<public>:<android.filterfw.geometry.Point>
<android.os.Debug: void stopNativeTracing()>:<public static>:<android.os.Debug>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions.OnAnimationStartedListener,boolean)>:<private static>:<android.app.ActivityOptions>
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.print.IPrintManager.Stub.Proxy: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.app.ActivityThread: void deliverNewIntents(android.app.ActivityThread.ActivityClientRecord,java.util.List)>:<private>:<android.app.ActivityThread>
<android.database.CursorWindow: long getLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus[] values()>:<public static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.UiAutomationConnection: void storeRotationStateLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.database.MatrixCursor: void <init>(java.lang.String[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.GLErrorWrapper: void glBlendEquationSeparate(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGL14: void <init>()>:<public>:<android.opengl.EGL14>
<android.app.LoaderManager: android.content.Loader getLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle bigText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.graphics.drawable.RippleBackground: void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.RippleBackground>
<android.webkit.WebViewProvider: void loadUrl(java.lang.String,java.util.Map)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.NetworkKey: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.app.Instrumentation: void execStartActivities(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteCanceled(int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.app.backup.IFullBackupRestoreObserver: void onEndRestore()>:<public abstract>:<android.app.backup.IFullBackupRestoreObserver:android.os.IInterface>
<android.app.ExitTransitionCoordinator: boolean access.1200(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.backup.IFullBackupRestoreObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub:android.os.Binder,android.app.backup.IFullBackupRestoreObserver>
<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Canvas: int native_saveLayerAlpha(long,float,float,float,float,int,int)>:<private static native>:<android.graphics.Canvas>
<android.app.ActionBar.OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>:<public abstract>:<android.app.ActionBar.OnMenuVisibilityListener>
<android.sax.Children: android.sax.Element getOrCreate(android.sax.Element,java.lang.String,java.lang.String)>:<>:<android.sax.Children>
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,boolean)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.drm.DrmOutputStream: void write(byte[],int,int)>:<public>:<android.drm.DrmOutputStream:java.io.OutputStream>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>:<public>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>:<public>:<android.app.WallpaperManager>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.graphics.pdf.PdfEditor: void getPageSize(int,android.graphics.Point)>:<public>:<android.graphics.pdf.PdfEditor>
<android.app.BackStackRecord: void addOp(android.app.BackStackRecord.Op)>:<>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.filterfw.core.FrameFormat: int readTargetString(java.lang.String)>:<public static>:<android.filterfw.core.FrameFormat>
<android.app.LocalActivityManager: void removeAllActivities()>:<public>:<android.app.LocalActivityManager>
<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.Interpolator: int getValueCount()>:<public final>:<android.graphics.Interpolator>
<android.app.ActivityThread.RequestAssistContextExtras: void <init>()>:<>:<android.app.ActivityThread.RequestAssistContextExtras>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2300(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()>:<public>:<android.filterfw.core.FilterFunction>
<android.net.INetworkManagementEventObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.os.IBinder.DeathRecipient: void binderDied()>:<public abstract>:<android.os.IBinder.DeathRecipient>
<android.app.IUserSwitchObserver.Stub.Proxy: void onUserSwitching(int,android.os.IRemoteCallback)>:<public>:<android.app.IUserSwitchObserver.Stub.Proxy:android.app.IUserSwitchObserver>
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.renderscript.RenderScript: void nScriptGroupSetInput(long,long,long)>:<>:<android.renderscript.RenderScript>
<android.net.DhcpResults: void access.000(android.net.DhcpResults,android.os.Parcel)>:<static>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.transition.Fade: void <init>()>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.app.VoiceInteractor.Request: void onDetached()>:<public>:<android.app.VoiceInteractor.Request>
<android.opengl.GLES10Ext: void <init>()>:<public>:<android.opengl.GLES10Ext>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountManager: android.accounts.Account[] getSharedAccounts(android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.database.CursorWindow.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.graphics.BitmapRegionDecoder: boolean isRecycled()>:<public final>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive[] values()>:<public static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.graphics.drawable.RippleDrawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.Network: java.lang.String toString()>:<public>:<android.net.Network:android.os.Parcelable>
<android.graphics.Region: long nativeConstructor()>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.app.Notification.BigTextStyle: android.widget.RemoteViews makeBigContentView()>:<private>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: android.renderscript.ProgramFragmentFixedFunction.Builder.Format valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.app.Activity: void closeContextMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>:<public static>:<android.app.TaskStackBuilder>
<android.renderscript.Int2: void div(int)>:<public>:<android.renderscript.Int2>
<android.os.ICancellationSignal.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.ICancellationSignal.Stub.Proxy:android.os.ICancellationSignal>
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.Process: int myUid()>:<public static final>:<android.os.Process>
<android.os.IUserManager.Stub.Proxy: boolean hasRestrictionsChallenge()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.app.WallpaperManager.FastBitmapDrawable: void setFilterBitmap(boolean)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>:<public>:<android.graphics.Canvas>
<android.renderscript.Byte2: void addAt(int,byte)>:<public>:<android.renderscript.Byte2>
<android.webkit.HwFindActionModeCallback: void updateMatchCount(int,int,boolean)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.IActivityManager: void unhandledBack()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setLinkUpstreamBandwidthKbps(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.transition.Explode: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.renderscript.RenderScript: void nScriptSetVarJ(long,int,long)>:<>:<android.renderscript.RenderScript>
<android.os.CommonClock: java.lang.Object access.000(android.os.CommonClock)>:<static>:<android.os.CommonClock>
<android.os.storage.StorageVolume: java.lang.String toString()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.ActivityOptions: void <init>()>:<private>:<android.app.ActivityOptions>
<android.graphics.PointF.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.PointF.1:android.os.Parcelable.Creator>
<android.filterfw.io.PatternScanner: java.lang.String unexpectedTokenMessage(java.lang.String)>:<public>:<android.filterfw.io.PatternScanner>
<android.graphics.drawable.VectorDrawable.VFullPath: void setTrimPathOffset(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.net.MobileDataStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.wifi.RttManager: int removeListener(java.lang.Object)>:<private static>:<android.net.wifi.RttManager>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.IWifiScanner.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.wifi.IWifiScanner.Stub.Proxy:android.net.wifi.IWifiScanner>
<android.app.IUiAutomationConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.net.NetworkStateTracker: void captivePortalCheckCompleted(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.net.TrafficStats: void clearThreadStatsTag()>:<public static>:<android.net.TrafficStats>
<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)>:<public>:<android.os.storage.StorageManager>
<android.app.Activity: void onProvideAssistData(android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pGroupList: void add(android.net.wifi.p2p.WifiP2pGroup)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.IActivityManager.WaitResult.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.IActivityManager.WaitResult.1:android.os.Parcelable.Creator>
<android.transition.ChangeImageTransform: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.os.BatteryStats.Uid.Proc: long getTimeAtCpuSpeedStep(int,int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.app.job.IJobScheduler: int schedule(android.app.job.JobInfo)>:<public abstract>:<android.app.job.IJobScheduler:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkCapabilities: boolean satisfiedByTransportTypes(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>:<public>:<android.graphics.NinePatch>
<android.os.Parcel: void setDataSize(int)>:<public final>:<android.os.Parcel>
<android.print.PrinterCapabilitiesInfo: void writeMediaSizes(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.IStopUserCallback.Stub: android.app.IStopUserCallback asInterface(android.os.IBinder)>:<public static>:<android.app.IStopUserCallback.Stub:android.os.Binder,android.app.IStopUserCallback>
<android.webkit.WebResourceResponse: void setResponseHeaders(java.util.Map)>:<public>:<android.webkit.WebResourceResponse>
<android.graphics.SurfaceTexture: void detachFromGLContext()>:<public>:<android.graphics.SurfaceTexture>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: long generateTransitionKey(int,int)>:<private static>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.Frame: void onFrameStore()>:<protected>:<android.filterfw.core.Frame>
<android.os.ICancellationSignal.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.ICancellationSignal.Stub:android.os.Binder,android.os.ICancellationSignal>
<android.os.TokenWatcher: void dump()>:<public>:<android.os.TokenWatcher>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,long,android.webkit.CacheManager.CacheResult)>:<static>:<android.webkit.CacheManager>
<android.net.wifi.WifiManager: void setWifiStateByManual(boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.102(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ActivityThread: android.app.IActivityManager.ContentProviderHolder installProvider(android.content.Context,android.app.IActivityManager.ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean)>:<private>:<android.app.ActivityThread>
<android.net.wifi.IWifiManager.Stub.Proxy: void disconnect()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.database.sqlite.SQLiteConnection.OperationLog: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.app.usage.UsageStats: long getFirstTimeStamp()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.net.Uri.HierarchicalUri: java.lang.String getAuthority()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.EnterTransitionCoordinator.6: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.EnterTransitionCoordinator.6:android.transition.Transition.TransitionListenerAdapter>
<android.app.ContextImpl.64: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.64:android.app.ContextImpl.ServiceFetcher>
<android.os.Environment.UserEnvironment: java.io.File getMediaDir()>:<public>:<android.os.Environment.UserEnvironment>
<android.filterfw.core.Filter: boolean filterMustClose()>:<private final>:<android.filterfw.core.Filter>
<android.net.NetworkPolicyManager: void unregisterListener(android.net.INetworkPolicyListener)>:<public>:<android.net.NetworkPolicyManager>
<android.filterfw.core.StopWatch: void stop()>:<public>:<android.filterfw.core.StopWatch>
<android.net.ConnectivityManager: void registerNetworkFactory(android.os.Messenger,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.ActivityManagerProxy: void requestBugReport()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Notification: android.app.Notification clone()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.LoadedApk.ServiceDispatcher.ConnectionInfo: void <init>()>:<private>:<android.app.LoadedApk.ServiceDispatcher.ConnectionInfo>
<android.hwcontrol.HwWidgetFactory.HwTextView: void initialTextView(android.content.Context,android.util.AttributeSet,android.widget.TextView)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.app.IActivityManager.ContentProviderHolder: void <clinit>()>:<static>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>:<public>:<android.app.job.JobInfo.Builder>
<android.net.LinkAddress.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.LinkAddress.1:android.os.Parcelable.Creator>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.DownloadManager.CursorTranslator: java.lang.String getLocalUri()>:<private>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.renderscript.Long2: void add(long)>:<public>:<android.renderscript.Long2>
<android.app.LocalActivityManager: void dispatchResume()>:<public>:<android.app.LocalActivityManager>
<android.webkit.ClientCertRequest: void <init>()>:<public>:<android.webkit.ClientCertRequest>
<android.app.Notification.Builder: java.lang.Class getNotificationStyleClass(java.lang.String)>:<private static>:<android.app.Notification.Builder>
<android.app.Dialog: void onBackPressed()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.app.ActivityManager.MemoryInfo.1: android.app.ActivityManager.MemoryInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.MemoryInfo.1:android.os.Parcelable.Creator>
<android.net.MobileDataStateTracker.MdstHandler: void <init>(android.os.Looper,android.net.MobileDataStateTracker)>:<>:<android.net.MobileDataStateTracker.MdstHandler:android.os.Handler>
<android.app.ActivityOptions: java.lang.String getPackageName()>:<public>:<android.app.ActivityOptions>
<android.os.CommonTimeConfig.OnServerDiedListener: void onServerDied()>:<public abstract>:<android.os.CommonTimeConfig.OnServerDiedListener>
<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int)>:<private>:<android.app.ActivityThread>
<android.renderscript.Element: android.renderscript.Element I8_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>:<public>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteClosable: void <init>()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.os.BaseBundle: void putChar(java.lang.String,char)>:<>:<android.os.BaseBundle>
<android.app.Fragment: void onStop()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.AppOpsManager: java.lang.String buildSecurityExceptionMsg(int,int,java.lang.String)>:<private>:<android.app.AppOpsManager>
<android.emoji.EmojiFactory: int nativeGetMaximumVendorSpecificPua(long)>:<private native>:<android.emoji.EmojiFactory>
<android.app.UiModeManager: void disableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Int4: void set(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.net.wifi.HwWifiCHRService: void updateTargetBssid(java.lang.String)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.graphics.Color: int getHtmlColor(java.lang.String)>:<public static>:<android.graphics.Color>
<android.transition.Transition: void animate(android.animation.Animator)>:<protected>:<android.transition.Transition:java.lang.Cloneable>
<android.database.sqlite.SQLiteConnection: int nativeExecuteForBlobFileDescriptor(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.IEthernetServiceListener.Stub: void <init>()>:<public>:<android.net.IEthernetServiceListener.Stub:android.os.Binder,android.net.IEthernetServiceListener>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Node findNode(android.renderscript.Script.KernelID)>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.accounts.ChooseAccountTypeActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.BatteryStats: int getLowDischargeAmountSinceCharge()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.MobileDataStateTracker: java.lang.String toString()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.mtp.MtpDatabase: boolean isStorageSubDirectory(java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.FrameFormat: java.lang.String metaDataToString(android.filterfw.core.KeyValueMap)>:<public static>:<android.filterfw.core.FrameFormat>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.app.ActivityManager: boolean isLowRamDevice()>:<public>:<android.app.ActivityManager>
<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.net.DhcpResults: void setVendorInfo(java.lang.String)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.net.wifi.HiSiWifiComm: void writeSleepOption(int)>:<public static>:<android.net.wifi.HiSiWifiComm>
<android.filterfw.core.StreamPort: boolean hasFrame()>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.os.INetworkManagementService.Stub.Proxy: void denyProtect(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.accounts.AccountManager: void postToHandler(android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<private>:<android.accounts.AccountManager>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.os.storage.IMountService: int encryptStorage(int,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.app.FragmentManagerImpl.4: void run()>:<public>:<android.app.FragmentManagerImpl.4:java.lang.Runnable>
<android.graphics.Point: void <init>(android.graphics.Point)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.print.IWriteResultCallback.Stub: android.print.IWriteResultCallback asInterface(android.os.IBinder)>:<public static>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.app.ContextImpl.59: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.59:android.app.ContextImpl.ServiceFetcher>
<android.os.BatteryStats: void writeToParcelWithoutUids(android.os.Parcel,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,android.renderscript.Allocation,int,int,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.SystemProperties: boolean getRTLFlag()>:<public static>:<android.os.SystemProperties>
<android.net.IpPrefix.1: android.net.IpPrefix createFromParcel(android.os.Parcel)>:<public>:<android.net.IpPrefix.1:android.os.Parcelable.Creator>
<android.os.Parcel.2: java.lang.Class resolveClass(java.io.ObjectStreamClass)>:<protected>:<android.os.Parcel.2:java.io.ObjectInputStream,java.io.InputStream>
<android.alsa.AlsaDevicesParser: boolean hasPlaybackDevices()>:<public>:<android.alsa.AlsaDevicesParser>
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: boolean characterIsLegal(char)>:<private>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.app.ActivityOptions: int getHeight()>:<public>:<android.app.ActivityOptions>
<android.app.ApplicationPackageManager: void revokePermission(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.Process: boolean setSwappiness(int,boolean)>:<public static final native>:<android.os.Process>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.os.Bundle: void <init>(int)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.BaseBundle: void <init>(android.os.Parcel,int)>:<>:<android.os.BaseBundle>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status valueOf(java.lang.String)>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.ddm.DdmHandleProfiling: void <init>()>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.drawable.ClipDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkAgent: void sendLinkProperties(android.net.LinkProperties)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.trust.ITrustManager.Stub.Proxy: void reportKeyguardShowingChanged()>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.os.PowerManager: void validateWakeLockParameters(int,java.lang.String)>:<public static>:<android.os.PowerManager>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLErrorWrapper: void glMaterialf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.INetworkManagementService.Stub.Proxy: android.net.NetworkStats getNetworkStatsTethering()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.database.CursorToBulkCursorAdaptor: void disposeLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.filterfw.core.Filter: java.lang.String toString()>:<public>:<android.filterfw.core.Filter>
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>:<public static>:<android.filterfw.core.GLFrameTimer>
<android.webkit.WebSettings: boolean getPluginsEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.ComposeShader: long nativeCreate2(long,long,int)>:<private static native>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Byte4: android.renderscript.Byte4 add(android.renderscript.Byte4,byte)>:<public static>:<android.renderscript.Byte4>
<android.renderscript.Element: android.renderscript.Element I16_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteSession: void endTransaction(android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.filterfw.geometry.Quad: void <init>()>:<public>:<android.filterfw.geometry.Quad>
<android.os.Parcel: int nativeDataAvail(long)>:<private static native>:<android.os.Parcel>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: boolean isRelative()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.INetworkManagementService: void createPhysicalNetwork(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.Short2: void mod(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.app.IAppTask.Stub.Proxy: void finishAndRemoveTask()>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.wifi.IWifiManager: boolean isMulticastEnabled()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void <init>(android.print.PrintManager.PrintJobStateChangeListener,android.os.Handler)>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.os.JankBdData: void <init>(android.os.Parcel)>:<private>:<android.os.JankBdData:android.os.Parcelable>
<android.filterfw.core.StopWatchMap: void <init>()>:<public>:<android.filterfw.core.StopWatchMap>
<android.app.RemoteInput.1: void <init>()>:<>:<android.app.RemoteInput.1:android.os.Parcelable.Creator>
<android.filterfw.core.NativeProgram: void reset()>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.webkit.WebResourceRequest: java.lang.String getMethod()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.io.File,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.app.ActivityThread.ServiceArgsData: void <init>()>:<>:<android.app.ActivityThread.ServiceArgsData>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.os.Debug: int getGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.app.FragmentManagerState: void <clinit>()>:<static>:<android.app.FragmentManagerState:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.net.ConnectivityManager: int inferLegacyTypeForNetworkCapabilities(android.net.NetworkCapabilities)>:<private>:<android.net.ConnectivityManager>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>:<public>:<android.os.TokenWatcher>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.os.INetworkManagementService.Stub.Proxy: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.INetworkScoreCache: void updateScores(java.util.List)>:<public abstract>:<android.net.INetworkScoreCache:android.os.IInterface>
<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>:<public static>:<android.os.FileUtils>
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.mtp.HwMtpDatabaseManagerDummy: void <clinit>()>:<static>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.filterfw.core.CachedFrameManager: boolean storeFrame(android.filterfw.core.Frame)>:<private>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.graphics.drawable.VectorDrawable.VFullPath: int getFillColor()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.print.PrintJobInfo: void setStateReason(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable.ScaleState: boolean canConstantState()>:<>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityManager.TaskThumbnail: void <clinit>()>:<static>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>:<public>:<android.app.ActivityThread>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.app.ReceiverRestrictedContext:android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteConnection: void nativeExecute(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.renderscript.Matrix3f: void loadTranslate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.hwtheme.HwThemeManagerDummy: void restoreIconCache(java.lang.String,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.job.JobInfo: boolean isPersisted()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.os.IPowerManager.Stub.Proxy: void wakeUp(long)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.os.StrictMode: android.os.StrictMode.VmPolicy getVmPolicy()>:<public static>:<android.os.StrictMode>
<android.transition.ChangeText: int getChangeBehavior()>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.print.PrintAttributes.1: android.print.PrintAttributes createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: void rsnAllocationData2D(long,long,int,int,int,int,android.graphics.Bitmap)>:<native>:<android.renderscript.RenderScript>
<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.app.job.JobParameters.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.job.JobParameters.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glLightModelf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Byte2: void setAt(int,byte)>:<public>:<android.renderscript.Byte2>
<android.os.IUserManager.Stub.Proxy: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.os.CommonTimeConfig: long getMasterElectionGroupId()>:<public>:<android.os.CommonTimeConfig>
<android.database.MatrixCursor: void addRow(java.util.ArrayList,int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)>:<public>:<android.emoji.EmojiFactory>
<android.renderscript.RenderScript: void rsnContextBindRootScript(long,long)>:<native>:<android.renderscript.RenderScript>
<android.app.LoaderManager: void destroyLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentTextureIndex()>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.app.ActivityThread.ApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.filterfw.core.Scheduler: boolean finished()>:<>:<android.filterfw.core.Scheduler>
<android.net.wifi.IWifiManager.Stub.Proxy: void clearBlacklist()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.graphics.BlurMaskFilter: long nativeConstructor(float,int)>:<private static native>:<android.graphics.BlurMaskFilter:android.graphics.MaskFilter>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.util.Date access.2702(android.net.wifi.HwWifiStatStore.SSIDStat,java.util.Date)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.DhcpResults: void <clinit>()>:<static>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Long3: void set(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.app.ActivityThread.H: void saveReceiverTime(android.app.ActivityThread.ActionTimeType)>:<public>:<android.app.ActivityThread.H:android.os.Handler>
<android.database.sqlite.SQLiteConnection: byte[] access.500()>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.Activity: android.view.WindowManager getWindowManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.IPrintManager.Stub.Proxy: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.net.wifi.WpsInfo: void <clinit>()>:<static>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected>:<android.app.LauncherActivity.ActivityAdapter.ArrayFilter:android.widget.Filter>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void onPostExecute(java.lang.Boolean)>:<protected>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIcon(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)>:<public>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.app.backup.BackupTransport.TransportImpl: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.DhcpStateMachine: android.content.BroadcastReceiver access.100(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.app.usage.UsageStats: void <clinit>()>:<static>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.DrawableContainer.DrawableContainerState cloneConstantState()>:<volatile>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.lang.String)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.accounts.AccountAndUser: java.lang.String toString()>:<public>:<android.accounts.AccountAndUser>
<android.os.AsyncTask.Status: void <clinit>()>:<static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int,int)>:<public static>:<android.filterfw.format.ObjectFormat>
<android.app.ActivityThread.TimeProfileData: void recordTime(java.lang.String,android.app.ActivityThread.ActionTimeType)>:<public>:<android.app.ActivityThread.TimeProfileData>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ContextImpl.2: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.2:android.app.ContextImpl.ServiceFetcher>
<android.app.ContextImpl.StaticServiceFetcher: java.lang.Object createStaticService()>:<public abstract>:<android.app.ContextImpl.StaticServiceFetcher:android.app.ContextImpl.ServiceFetcher>
<android.net.LocalSocket: void close()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.drm.DrmEvent: java.lang.String getMessage()>:<public>:<android.drm.DrmEvent>
<android.webkit.WebView: android.webkit.WebViewFactoryProvider getFactory()>:<private static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.drm.DrmRights: boolean isValid()>:<>:<android.drm.DrmRights>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiSsid: java.lang.String toString()>:<public>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.graphics.Shader: void copyLocalMatrix(android.graphics.Shader)>:<protected>:<android.graphics.Shader>
<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>:<public>:<android.opengl.GLWrapperBase:javax.microedition.khronos.opengles.GL,javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.opengles.GL10Ext,javax.microedition.khronos.opengles.GL11,javax.microedition.khronos.opengles.GL11Ext,javax.microedition.khronos.opengles.GL11ExtensionPack>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.http.AndroidHttpClient.LoggingConfiguration: void println(java.lang.String)>:<private>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.database.CursorToBulkCursorAdaptor: void <init>(android.database.Cursor,android.database.IContentObserver,java.lang.String)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.app.ActionBar: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.app.Application: java.lang.Object[] collectComponentCallbacks()>:<private>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.NetworkUtils: int prefixLengthToNetmaskInt(int)>:<public static>:<android.net.NetworkUtils>
<android.os.MessageQueue: void removeAllMessagesLocked()>:<private>:<android.os.MessageQueue>
<android.net.wifi.IWifiManager.Stub.Proxy: void setWifiApStateByManual(boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ProgressDialog: void setProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.Matrix: java.lang.String toString()>:<public>:<android.graphics.Matrix>
<android.net.NetworkStateTracker: boolean isTeardownRequested()>:<public abstract>:<android.net.NetworkStateTracker>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()>:<public>:<android.app.ActivityManager>
<android.renderscript.Float4: android.renderscript.Float4 sub(android.renderscript.Float4,android.renderscript.Float4)>:<public static>:<android.renderscript.Float4>
<android.mtp.MtpStorageInfo: long getMaxCapacity()>:<public final>:<android.mtp.MtpStorageInfo>
<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>:<public>:<android.filterfw.core.GLEnvironment>
<android.app.VoiceInteractor.Request: android.app.Activity getActivity()>:<public>:<android.app.VoiceInteractor.Request>
<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.FragmentManager: boolean isDestroyed()>:<public abstract>:<android.app.FragmentManager>
<android.app.ContextImpl: android.app.WallpaperManager getWallpaperManager()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.mtp.MtpDatabase.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.mtp.MtpDatabase.1:android.content.BroadcastReceiver>
<android.print.IPrintSpooler.Stub.Proxy: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.app.ActivityManager.RunningAppProcessInfo: int procStateToImportance(int)>:<public static>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.net.ProxyDataTracker.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.net.ProxyDataTracker.1:android.content.BroadcastReceiver>
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.Element: void updateVisibleSubElements()>:<private>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.print.PrintJobId.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.app.FragmentState.1: android.app.FragmentState[] newArray(int)>:<public>:<android.app.FragmentState.1:android.os.Parcelable.Creator>
<android.filterfw.core.GLFrame: boolean setNativeTextureParam(int,int)>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.DialogFragment: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>:<public>:<android.graphics.Canvas>
<android.app.ActivityThread.ApplicationThread: void <init>(android.app.ActivityThread)>:<private>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.BatteryStats.HistoryItem: void setTo(android.os.BatteryStats.HistoryItem)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.app.KeyguardManager: boolean isDeviceLocked()>:<public>:<android.app.KeyguardManager>
<android.transition.ChangeTransform: boolean access.000(android.transition.ChangeTransform)>:<static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollExtent()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.opengl.GLSurfaceView.LogWriter: void <init>()>:<>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobCancelling(android.print.PrintJobId,boolean)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.app.PendingIntent: java.lang.String getCreatorPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.webkit.IWebViewUpdateService.Stub: android.webkit.IWebViewUpdateService asInterface(android.os.IBinder)>:<public static>:<android.webkit.IWebViewUpdateService.Stub:android.os.Binder,android.webkit.IWebViewUpdateService>
<android.os.BaseBundle: void putByteArray(java.lang.String,byte[])>:<>:<android.os.BaseBundle>
<android.net.DnsPinger: java.net.InetAddress getDefaultDns()>:<private>:<android.net.DnsPinger:android.os.Handler>
<android.graphics.Canvas: void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>:<private static native>:<android.graphics.Canvas>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onTimeout()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.net.NetworkCapabilities: void <init>()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.http.RequestQueue.ConnectionManager: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>:<public abstract>:<android.net.http.RequestQueue.ConnectionManager>
<android.os.Build: java.lang.String access.000(java.lang.String)>:<static>:<android.os.Build>
<android.graphics.drawable.RippleBackground: void jump()>:<public>:<android.graphics.drawable.RippleBackground>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.BatchedScanSettings: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.net.wifi.RttManager: java.lang.Object access.300(int)>:<static>:<android.net.wifi.RttManager>
<android.net.IpConfiguration: void setIpAssignment(android.net.IpConfiguration.IpAssignment)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.opengl.GLLogWrapper: void glLineWidthx(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public abstract>:<android.app.backup.BackupHelper>
<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void handlePackageAdded(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable.BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable.1)>:<>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.FragmentManagerImpl: void dispatchCreate()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.IUserManager.Stub.Proxy: boolean setRestrictionsChallenge(java.lang.String)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.renderscript.Long4: void sub(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Activity: void ensureSearchManager()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.IWriteResultCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.net.NetworkPolicyManager: void <init>(android.net.INetworkPolicyManager)>:<public>:<android.net.NetworkPolicyManager>
<android.app.ActivityThread.Profiler: void startProfiling()>:<public>:<android.app.ActivityThread.Profiler>
<android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener: void onDeleteGroup(int)>:<public abstract>:<android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener>
<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.SearchDialog: boolean access.000(android.app.SearchDialog)>:<static>:<android.app.SearchDialog:android.app.Dialog>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>:<public final>:<android.graphics.NinePatch>
<android.app.ContextImpl.ServiceFetcher: void <init>()>:<>:<android.app.ContextImpl.ServiceFetcher>
<android.os.BatteryStats.HistoryTag: void setTo(android.os.BatteryStats.HistoryTag)>:<public>:<android.os.BatteryStats.HistoryTag>
<android.os.BatteryStats.Uid: void noteFullWifiLockReleasedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void onGesture(int)>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.SyncRunner: void assertReadyToStep()>:<>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.app.Notification.WearableExtender: android.graphics.Bitmap getBackground()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.hwcontrol.HwWidgetFactory.Factory: int getThemeIdImpl(android.os.Bundle,android.content.res.Resources)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>:<public>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.net.NetworkInfo: boolean isConnectedToProvisioningNetwork()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.renderscript.Script: void invoke(int,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.accounts.IAccountAuthenticator: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.renderscript.Int2: void setValues(int,int)>:<public>:<android.renderscript.Int2>
<android.graphics.Interpolator: void reset(int,int)>:<public>:<android.graphics.Interpolator>
<android.graphics.Matrix.1: boolean preScale(float,float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glLoadPaletteFromModelViewMatrixOES()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.ChooseTypeAndAccountActivity: void startChooseAccountTypeActivity()>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLES10: void _nativeClassInit()>:<private static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.app.ProfilerInfo: int describeContents()>:<public>:<android.app.ProfilerInfo:android.os.Parcelable>
<android.net.WifiLinkQualityInfo: void <init>()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.nsd.NsdServiceInfo: void setPort(int)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: void setExitSharedElementTransitionCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.filterfw.core.GraphRunner: boolean isRunning()>:<public abstract>:<android.filterfw.core.GraphRunner>
<android.graphics.Canvas: int getSaveCount()>:<public>:<android.graphics.Canvas>
<android.filterfw.core.Filter: void closeOutputPort(java.lang.String)>:<protected>:<android.filterfw.core.Filter>
<android.accessibilityservice.AccessibilityServiceInfo.1: android.accessibilityservice.AccessibilityServiceInfo[] newArray(int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo.1:android.os.Parcelable.Creator>
<android.net.NetworkUtils: boolean bindProcessToNetwork(int)>:<public static native>:<android.net.NetworkUtils>
<android.app.ActivityThread: void access.1200(android.app.ActivityThread,android.app.ActivityThread.ActivityClientRecord,android.content.Intent)>:<static>:<android.app.ActivityThread>
<android.net.dhcp.DhcpDiscoverPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpDiscoverPacket:android.net.dhcp.DhcpPacket>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<android.os.Bundle: void <init>(android.os.Parcel)>:<>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)>:<public static final>:<android.net.Proxy>
<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Paint: void setColor(int)>:<public native>:<android.graphics.Paint>
<android.appwidget.AppWidgetHostView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: void onDestroy()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Fragment: void setMenuVisibility(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Notification.Builder: boolean hasThreeLines()>:<private>:<android.app.Notification.Builder>
<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.SystemService: void waitForAnyStopped(java.lang.String[])>:<public static transient>:<android.os.SystemService>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageWidth()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.os.IMultiWinService: void updateMultiWinFrame(android.graphics.Rect)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.RssiCurve.1: android.net.RssiCurve createFromParcel(android.os.Parcel)>:<public>:<android.net.RssiCurve.1:android.os.Parcelable.Creator>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>:<public final>:<android.accounts.AbstractAccountAuthenticator>
<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.GLFrame: int[] getNativeInts()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.WorkSource: java.lang.String toString()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.NativeFrame: boolean hasNativeAllocation()>:<protected>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.PendingIntent: java.lang.String getTag(java.lang.String)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.MobileLinkQualityInfo: void setCdmaEcio(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.RouteInfo: void <clinit>()>:<static>:<android.net.RouteInfo:android.os.Parcelable>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setVaryingColor(boolean)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setX(int)>:<public>:<android.renderscript.Type.Builder>
<android.opengl.GLES30: void glBeginQuery(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.Uri.HierarchicalUri: java.lang.String getSchemeSpecificPart()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.wifi.IWifiManager.Stub.Proxy: void initializeMulticastFiltering()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.SharedPreferencesImpl.EditorImpl: void access.600(android.app.SharedPreferencesImpl.EditorImpl,android.app.SharedPreferencesImpl.MemoryCommitResult)>:<static>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.renderscript.Long4: long length()>:<public>:<android.renderscript.Long4>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.filterfw.core.FrameFormat: java.lang.String toString()>:<public>:<android.filterfw.core.FrameFormat>
<android.graphics.drawable.VectorDrawable.VFullPath: float getFillAlpha()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.renderscript.Program: android.renderscript.Type getConstant(int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.ContextImpl: int getThemeResId()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiEnterpriseConfig: void <clinit>()>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createSocketPair()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.renderscript.Float3: void set(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.app.job.JobInfo: boolean hasEarlyConstraint()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.widget.TextView getPermissionItemViewOldPermDescView(android.view.View)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.os.TokenWatcher: int access.100(android.os.TokenWatcher)>:<static>:<android.os.TokenWatcher>
<android.app.Application: void <init>()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.net.wifi.WifiNetworkConnectionStatistics: void <init>(int,int)>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: boolean pageDown(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.WaitBeforeRenewalState:com.android.internal.util.State>
<android.net.ProxyInfo: int describeContents()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.app.Notification.Builder: void processLegacyAction(android.app.Notification.Action,android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.os.StrictMode.AndroidBlockGuardPolicy: void startHandlingViolationException(dalvik.system.BlockGuard.BlockGuardPolicyException)>:<>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.app.Notification.BigPictureStyle: android.widget.RemoteViews makeBigContentView()>:<private>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.hwtheme.HwThemeManagerDummy: boolean isPowerSavingTheme()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.drawable.LayerDrawable.LayerState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>:<public static>:<android.app.ActivityThread>
<android.webkit.WebView.PrivateAccess: void setScrollXRaw(int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.filterfw.core.VertexFrame: boolean hasNativeAllocation()>:<protected>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.BackStackState.1: void <init>()>:<>:<android.app.BackStackState.1:android.os.Parcelable.Creator>
<android.print.ILayoutResultCallback.Stub: void <init>()>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.transition.Visibility.VisibilityInfo: void <init>()>:<private>:<android.transition.Visibility.VisibilityInfo>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.app.ActivityManager: boolean isHighEndGfx()>:<public static>:<android.app.ActivityManager>
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.renderscript.Long4: void mul(long)>:<public>:<android.renderscript.Long4>
<android.os.Trace: long access.000()>:<static>:<android.os.Trace>
<android.drm.DrmEvent: int getType()>:<public>:<android.drm.DrmEvent>
<android.app.ProfilerInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ProfilerInfo.1:android.os.Parcelable.Creator>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.app.ExitTransitionCoordinator.5: void handleMessage(android.os.Message)>:<public>:<android.app.ExitTransitionCoordinator.5:android.os.Handler>
<android.app.SharedPreferencesImpl.EditorImpl: boolean commit()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.os.Debug: void stopMethodTracing()>:<public static>:<android.os.Debug>
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.StrictMode.ViolationInfo: int hashCode()>:<public>:<android.os.StrictMode.ViolationInfo>
<android.renderscript.Allocation: void resize(int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.NinePatch: boolean hasAlpha()>:<public final>:<android.graphics.NinePatch>
<android.net.LinkProperties: java.lang.String getInterfaceName()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <clinit>()>:<static>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.NetworkStatsHistory: int describeContents()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.accessibilityservice.IAccessibilityServiceClient: void onInterrupt()>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.renderscript.FieldPacker: android.renderscript.Matrix4f subMatrix4f()>:<public>:<android.renderscript.FieldPacker>
<android.app.job.JobInfo: void <init>(android.os.Parcel)>:<private>:<android.app.job.JobInfo:android.os.Parcelable>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromEncoded(java.lang.String)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context)>:<public>:<android.app.NativeActivity.NativeContentView:android.view.View>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: void <init>()>:<>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread.ActivityClientRecord,boolean)>:<private>:<android.app.ActivityThread>
<android.net.dhcp.DhcpOfferPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpOfferPacket:android.net.dhcp.DhcpPacket>
<android.renderscript.Matrix4f: void transpose()>:<public>:<android.renderscript.Matrix4f>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl.13: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.13:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.GradientDrawable.GradientState: void <init>(android.graphics.drawable.GradientDrawable.GradientState)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerNameAsUser(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.MobileDataStateTracker: java.lang.String networkTypeToApnType(int)>:<public static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomSizePreset(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.LinkProperties: void <clinit>()>:<static>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.StrictMode: boolean tooManyViolationsThisLoop()>:<private static>:<android.os.StrictMode>
<android.app.BackStackRecord: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.filterfw.core.FrameFormat: boolean mayBeCompatibleWith(android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.FrameFormat>
<android.app.Notification.Builder: void removeLargeIconBackground(android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.print.PrinterDiscoverySession.SessionHandler: void handleMessage(android.os.Message)>:<public>:<android.print.PrinterDiscoverySession.SessionHandler:android.os.Handler>
<android.app.IActivityManager: java.lang.String getPackageForToken(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.drawable.VectorDrawable.VGroup: void setPivotY(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.accounts.CantAddAccountActivity: void onCancelButtonClicked(android.view.View)>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.Notification: java.lang.Object clone()>:<public volatile>:<android.app.Notification:android.os.Parcelable>
<android.opengl.GLES10: void glDisable(int)>:<public static native>:<android.opengl.GLES10>
<android.os.RemoteCallback.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.RemoteCallback.1:android.os.Parcelable.Creator>
<android.database.AbstractWindowedCursor: boolean isLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.INetworkManagementService: void setGlobalAlert(long)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.SyncRunner.1: void <init>(android.filterfw.core.SyncRunner,android.filterfw.core.Filter,android.os.ConditionVariable)>:<>:<android.filterfw.core.SyncRunner.1:java.lang.Runnable>
<android.net.wifi.IWifiScanner.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.wifi.IWifiScanner.Stub:android.os.Binder,android.net.wifi.IWifiScanner>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request)>:<public>:<android.app.VoiceInteractor>
<android.app.UiAutomation: int access.102(android.app.UiAutomation,int)>:<static>:<android.app.UiAutomation>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.FindActionModeCallback: void setText(java.lang.String)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.Matrix: boolean preRotate(float)>:<public>:<android.graphics.Matrix>
<android.renderscript.RenderScript: void rsnAssignName(long,long,byte[])>:<native>:<android.renderscript.RenderScript>
<android.net.IpConfiguration.ProxySettings: void <clinit>()>:<static>:<android.net.IpConfiguration.ProxySettings:java.lang.Enum>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode[] values()>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>:<public>:<android.os.UserManager>
<android.graphics.drawable.AnimatedRotateDrawable: void stop()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ListActivity: long getSelectedItemId()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.UidRange: void <init>(int,int)>:<public>:<android.net.UidRange:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins readMargins(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)>:<public>:<android.net.ConnectivityManager>
<android.app.IActivityManager: android.os.Bundle getAssistContextExtras(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: void setPolicyDataEnable(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.filterfw.core.VertexFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.app.Application: void dispatchActivityStarted(android.app.Activity)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.Parcel: void writeBlob(byte[])>:<public final>:<android.os.Parcel>
<android.os.NetworkOnMainThreadException: void <init>()>:<public>:<android.os.NetworkOnMainThreadException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.print.PrintJobInfo: void setPrinterName(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pManager.Channel: com.android.internal.util.AsyncChannel getAsyncChannel()>:<public>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.os.BatteryStats.HistoryEventTracker: void removeEvents(int)>:<public>:<android.os.BatteryStats.HistoryEventTracker>
<android.database.CursorWindow: boolean nativeAllocRow(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ApplicationPackageManager: void <init>(android.app.ContextImpl,android.content.pm.IPackageManager)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.p2p.WifiP2pGroup.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pGroup.1:android.os.Parcelable.Creator>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.net.RouteInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.RouteInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void onPostExecute(android.filterfw.core.AsyncRunner.RunnerResult)>:<protected>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.database.Cursor: boolean isFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.renderscript.Long2: android.renderscript.Long2 add(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer,int,int)>:<public abstract>:<android.filterfw.core.Frame>
<android.transition.ChangeImageTransform: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.graphics.Matrix.ScaleToFit: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.os.IMultiWinService.Stub.Proxy: int getMultiWinFramePosition(android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.netdetect.HwCustNetDetectServiceImpl.2: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.2:android.content.BroadcastReceiver>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>:<public static>:<android.graphics.Typeface>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Region: android.graphics.Rect getBounds()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.Rect: void printShortString(java.io.PrintWriter)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.transition.ChangeTransform.GhostListener: void <init>(android.view.View,android.view.View,android.view.GhostView)>:<public>:<android.transition.ChangeTransform.GhostListener:android.transition.Transition.TransitionListenerAdapter>
<android.os.storage.StorageVolume: void setUserLabel(java.lang.String)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.net.http.RequestHandle: java.lang.String bufferToHex(byte[])>:<private>:<android.net.http.RequestHandle>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ProgramVertex.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.net.http.HttpResponseCache: void close()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Debug: void resetThreadAllocCount()>:<public static>:<android.os.Debug>
<android.filterfw.core.GLFrame: void onFrameStore()>:<protected>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.print.PrintJob: void restart()>:<public>:<android.print.PrintJob>
<android.net.BaseNetworkStateTracker: void supplyMessenger(android.os.Messenger)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.wifi.WifiActivityEnergyInfo.1: android.net.wifi.WifiActivityEnergyInfo[] newArray(int)>:<public>:<android.net.wifi.WifiActivityEnergyInfo.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri)>:<public>:<android.app.Notification.Builder>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLLogWrapper: void glBlendFunc(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.IMultiWinService.Stub.Proxy: int checkAndHandleLaunchOnWhiteListApp(android.content.Intent,android.content.Intent,android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.os.RegistrantList: java.lang.Object get(int)>:<public>:<android.os.RegistrantList>
<android.opengl.GLES10: void glFinish()>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLErrorWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.storage.StorageManager.StorageEvent: android.os.Message getMessage()>:<public>:<android.os.storage.StorageManager.StorageEvent>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.RenderScript: java.lang.String rsnGetName(long,long)>:<native>:<android.renderscript.RenderScript>
<android.hsm.HwMediaPermWrapper: boolean confirmCameraPermissionWithResult()>:<private>:<android.hsm.HwMediaPermWrapper>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.IContentObserver: void onChange(boolean,android.net.Uri,int)>:<public abstract>:<android.database.IContentObserver:android.os.IInterface>
<android.graphics.Camera: void nativeApplyToCanvas(long)>:<private native>:<android.graphics.Camera>
<android.graphics.Matrix: void native_setSkew(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.filterfw.core.RandomScheduler: android.filterfw.core.Filter scheduleNextNode()>:<public>:<android.filterfw.core.RandomScheduler:android.filterfw.core.Scheduler>
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.backup.BackupTransport: java.lang.String currentDestinationString()>:<public>:<android.app.backup.BackupTransport>
<android.mtp.MtpServer: void addStorage(android.mtp.MtpStorage)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFailed(java.lang.CharSequence)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.net.StaticIpConfiguration: void clear()>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void wipeData(int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.view.View getPermissionTextView(android.widget.AppSecurityPermissions.PermissionItemView)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebView: float access.1500(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.NetworkStateTracker: boolean isPrivateDnsRouteSet()>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: void writeMargins(android.print.PrintAttributes.Margins,android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES20: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmSupportInfo: int hashCode()>:<public>:<android.drm.DrmSupportInfo>
<android.app.Activity: void onRestart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>:<public static>:<android.net.http.SslCertificate>
<android.graphics.pdf.PdfRenderer: long access.300(long,int,android.graphics.Point)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.net.DhcpResults: void <init>(android.net.DhcpResults)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.accounts.AbstractAccountAuthenticator: void access.100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>:<static>:<android.accounts.AbstractAccountAuthenticator>
<android.app.backup.BackupTransport.TransportImpl: int abortFullRestore()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.accessibilityservice.AccessibilityService.1: void <init>(android.accessibilityservice.AccessibilityService)>:<>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.app.ContextImpl: boolean stopService(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Double2: android.renderscript.Double2 mul(android.renderscript.Double2,double)>:<public static>:<android.renderscript.Double2>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.renderscript.Int2: android.renderscript.Int2 sub(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.database.sqlite.SQLiteDatabaseConfiguration: boolean isInMemoryDb()>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>:<public>:<android.app.WallpaperManager>
<android.app.Activity: void onPostCreate(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManager.CpuStatInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.graphics.Atlas: void <init>(android.graphics.Atlas.Type,int,int,int)>:<public>:<android.graphics.Atlas>
<android.graphics.LayerRasterizer: long nativeConstructor()>:<private static native>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.net.nsd.DnsSdTxtRecord: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>:<public static native>:<android.opengl.EGL14>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.Paint>
<android.app.Activity: int getTitleColor()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.LauncherActivity: void onSetContentView()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiCHRStateManager: void updateAPMAC(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.RouteInfo: java.net.InetAddress getGateway()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.Dialog: boolean hasAnimatorMask()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiInfo: boolean is5GHz()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.accounts.AccountManager.6: void doWork()>:<public>:<android.accounts.AccountManager.6:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.app.admin.DevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Debug: float getSurfaceFlingerFrameRate()>:<public static final native>:<android.os.Debug>
<android.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordQuality(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.ParcelUuid.1: android.os.ParcelUuid createFromParcel(android.os.Parcel)>:<public>:<android.os.ParcelUuid.1:android.os.Parcelable.Creator>
<android.graphics.Picture: void <init>(android.graphics.Picture)>:<public>:<android.graphics.Picture>
<android.graphics.drawable.VectorDrawable.VFullPath: void setStrokeColor(int)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable.ShapeState,android.content.res.Resources)>:<private>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.print.PrintJobInfo: int getAppId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.os.Process: void setCanSelfBackground(boolean)>:<public static final native>:<android.os.Process>
<android.net.wifi.WpsInfo.1: android.net.wifi.WpsInfo[] newArray(int)>:<public>:<android.net.wifi.WpsInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: long glFenceSync(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.LoadedApk: void rewriteRValues(java.lang.ClassLoader,java.lang.String,int)>:<private>:<android.app.LoadedApk>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.net.Uri.StringUri: java.lang.String parseAuthority(java.lang.String,int)>:<static>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.FieldPacker: float subF32()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.Ripple: void invalidateSelf()>:<private>:<android.graphics.drawable.Ripple>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Short2: void div(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.accounts.Account.1: android.accounts.Account[] newArray(int)>:<public>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.VectorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1: android.net.wifi.p2p.nsd.WifiP2pServiceResponse createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.Region: boolean quickContains(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadDrawable(android.content.Context,int,int,boolean)>:<private>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.graphics.drawable.StateListDrawable.StateListState: void <init>(android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkName(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.filterfw.core.StopWatch: void start()>:<public>:<android.filterfw.core.StopWatch>
<android.hwtheme.HwThemeManager: boolean shouldUseAdditionalChnFont(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.transition.ChangeTransform: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.net.DnsPinger: void handleMessage(android.os.Message)>:<public>:<android.net.DnsPinger:android.os.Handler>
<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.backup.IRestoreObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.Parcel: float[] createFloatArray()>:<public final>:<android.os.Parcel>
<android.app.backup.IBackupManager.Stub.Proxy: boolean isBackupServiceActive(int)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.renderscript.Double2: void div(double)>:<public>:<android.renderscript.Double2>
<android.net.IEthernetManager.Stub: void <init>()>:<public>:<android.net.IEthernetManager.Stub:android.os.Binder,android.net.IEthernetManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2102(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.ActivityThread.3: void onTrimMemory(int)>:<public>:<android.app.ActivityThread.3:android.content.ComponentCallbacks2>
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setZ(int)>:<public>:<android.renderscript.Type.Builder>
<android.accounts.IAccountManagerResponse.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.net.dhcp.DhcpAckPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.transition.TransitionSet: void runAnimators()>:<protected>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityManager: int getLargeMemoryClass()>:<public>:<android.app.ActivityManager>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.net.LinkProperties: boolean isIdenticalRoutes(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.Cursor: java.lang.String getString(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityThread.H: void handleMessage(android.os.Message)>:<public>:<android.app.ActivityThread.H:android.os.Handler>
<android.net.INetworkManagementEventObserver: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>:<public>:<android.app.KeyguardManager>
<android.webkit.WebViewProvider: void removeJavascriptInterface(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.StrictMode: void conditionallyCheckInstanceCounts()>:<public static>:<android.os.StrictMode>
<android.net.wifi.WifiManager: boolean isNanSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ProgressDialog.1: void handleMessage(android.os.Message)>:<public>:<android.app.ProgressDialog.1:android.os.Handler>
<android.app.IApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.AppOpsManager.OpEntry.1: android.app.AppOpsManager.OpEntry createFromParcel(android.os.Parcel)>:<public>:<android.app.AppOpsManager.OpEntry.1:android.os.Parcelable.Creator>
<android.net.DhcpStateMachine: boolean access.800(android.net.DhcpStateMachine,android.net.DhcpStateMachine.DhcpAction)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLWindowSurfaceFactory access.500(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String[] computeProjection(java.lang.String[])>:<private>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.INotificationManager: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>:<private>:<android.app.ActivityThread>
<android.app.SharedPreferencesImpl: void <init>(java.io.File,int)>:<>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.http.LoggingEventHandler: void requestSent()>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>:<public static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.os.IMultiWinService.Stub.Proxy: void updateFrameVisibility(boolean,boolean)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.MobileDataStateTracker: void enableMobileProvisioning(java.lang.String)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.http.AndroidHttpClient.CurlLogger: void <init>(android.net.http.AndroidHttpClient,android.net.http.AndroidHttpClient.1)>:<>:<android.net.http.AndroidHttpClient.CurlLogger:org.apache.http.HttpRequestInterceptor>
<android.graphics.Matrix: void setSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.webkit.WebViewProvider: void clearCache(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.StrictMode.StrictModeCustomViolation: void <init>(int,java.lang.String)>:<public>:<android.os.StrictMode.StrictModeCustomViolation:android.os.StrictMode.StrictModeViolation>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable.ScaleState,android.content.res.Resources)>:<private>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.YuvImage: int getYuvFormat()>:<public>:<android.graphics.YuvImage>
<android.transition.Recolor: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Recolor:android.transition.Transition>
<android.graphics.pdf.PdfRenderer.Page: int getIndex()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.graphics.drawable.InsetDrawable.InsetState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.os.UserManager: int getMaxSupportedUsers()>:<public static>:<android.os.UserManager>
<android.renderscript.RenderScript: void rsnScriptInvoke(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setCoefficients(float[])>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Binder: int getCallingUid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.transition.TransitionInflater: android.transition.Transition inflateTransition(int)>:<public>:<android.transition.TransitionInflater>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwner()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ContextImpl.11: java.lang.Object createStaticService()>:<public>:<android.app.ContextImpl.11:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getFieldValue(java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.hwcontrol.HwWidgetFactory.Factory: com.android.internal.app.AlertController newHwAlertController(android.content.Context,android.content.DialogInterface,android.view.Window)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.net.UidRange: android.net.UidRange createForUser(int)>:<public static>:<android.net.UidRange:android.os.Parcelable>
<android.os.StatFs: int getFreeBlocks()>:<public>:<android.os.StatFs>
<android.app.PendingIntent: android.content.Intent getIntent()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.Float4: android.renderscript.Float4 div(android.renderscript.Float4,android.renderscript.Float4)>:<public static>:<android.renderscript.Float4>
<android.net.IpConfiguration.IpAssignment: void <clinit>()>:<static>:<android.net.IpConfiguration.IpAssignment:java.lang.Enum>
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.Bundle: boolean setAllowFds(boolean)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,int,boolean)>:<public>:<android.appwidget.AppWidgetManager>
<android.net.wifi.WifiConfiguration.3: android.net.wifi.WifiConfiguration[] newArray(int)>:<public>:<android.net.wifi.WifiConfiguration.3:android.os.Parcelable.Creator>
<android.net.RssiCurve: byte lookupScore(int)>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.graphics.Paint: void native_setTextAlign(long,int)>:<private static native>:<android.graphics.Paint>
<android.print.PrintAttributes: int getColorMode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.IActivityManager: java.util.List getProcessesInErrorState()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.EGLLogWrapper: java.lang.String toString(int,int[],int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ContextImpl.5: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.5:android.app.ContextImpl.ServiceFetcher>
<android.print.PrintAttributes.Margins: int getLeftMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.app.IActivityManager: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.UserHandle: boolean isSameUser(int,int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.WorkSource: void <clinit>()>:<static>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ContextImpl.36: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.36:android.app.ContextImpl.ServiceFetcher>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAcceptedNames()>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.renderscript.RenderScript: long getMinorID()>:<public static>:<android.renderscript.RenderScript>
<android.transition.Fade.FadeAnimatorListener: void onAnimationStart(android.animation.Animator)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.app.admin.IDevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.wifi.WifiSsid: void <init>(android.net.wifi.WifiSsid.1)>:<>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.app.ApplicationPackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.PacProxySelector: void <init>()>:<public>:<android.net.PacProxySelector:java.net.ProxySelector>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable.ChildDrawable,android.content.res.TypedArray)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: void setContentTransitionManager(android.transition.TransitionManager)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.RenderScript: void nContextBindProgramFragment(long)>:<>:<android.renderscript.RenderScript>
<android.app.ActionBar: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.app.ActionBar>
<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,java.lang.String)>:<public>:<android.print.PrintJobInfo.Builder>
<android.renderscript.Short2: void setAt(int,short)>:<public>:<android.renderscript.Short2>
<android.filterfw.core.NativeFrame: int[] getNativeInts(int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.renderscript.Short2: void mul(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.filterfw.io.TextGraphReader: void <init>()>:<public>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.net.StaticIpConfiguration: void readFromParcel(android.net.StaticIpConfiguration,android.os.Parcel)>:<protected static>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.app.Notification.InboxStyle: void <init>()>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.app.SearchDialog.4: boolean onQueryTextSubmit(java.lang.String)>:<public>:<android.app.SearchDialog.4:android.widget.SearchView.OnQueryTextListener>
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int)>:<public>:<android.graphics.Paint>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.Uri: java.lang.String getPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.StrictMode: int parseViolationFromMessage(java.lang.String)>:<private static>:<android.os.StrictMode>
<android.net.wifi.WifiConfiguration.Status: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.Status>
<android.net.wifi.IWifiManager: int getSupportedFeatures()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,byte)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.webkit.UrlInterceptRegistry: void <clinit>()>:<static>:<android.webkit.UrlInterceptRegistry>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebViewDatabase: void <init>()>:<public>:<android.webkit.WebViewDatabase>
<android.app.AlarmManager.AlarmClockInfo.1: android.app.AlarmManager.AlarmClockInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.AlarmManager.AlarmClockInfo.1:android.os.Parcelable.Creator>
<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver: void <init>(android.app.LoadedApk.ReceiverDispatcher,boolean)>:<>:<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver:android.content.IIntentReceiver.Stub>
<android.net.LinkQualityInfo: long getLastDataSampleTime()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void setRootAlpha(int)>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2400(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.IUiAutomationConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IUiAutomationConnection.Stub:android.os.Binder,android.app.IUiAutomationConnection>
<android.opengl.GLES10: void glMaterialx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>:<public>:<android.app.ActivityOptions>
<android.graphics.Paint: void <clinit>()>:<static>:<android.graphics.Paint>
<android.app.ActivityManager.RunningServiceInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.RunningServiceInfo.1:android.os.Parcelable.Creator>
<android.mtp.MtpPropertyList: void append(int,int,java.lang.String)>:<public>:<android.mtp.MtpPropertyList>
<android.filterfw.core.SimpleFrame: float[] getFloats()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.ConnectivityManager.1: void <init>(android.net.ConnectivityManager,android.net.ConnectivityManager.OnNetworkActiveListener)>:<>:<android.net.ConnectivityManager.1:android.os.INetworkActivityListener.Stub,android.os.Binder>
<android.net.wifi.IWifiManager.Stub.Proxy: java.lang.String getWpsNfcConfigurationToken(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.UiAutomation: void throwIfConnectedLocked()>:<private>:<android.app.UiAutomation>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowFamily(int)>:<public>:<android.net.VpnService.Builder>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.INetworkManagementEventObserver: void interfaceAdded(java.lang.String)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.mtp.MtpDevice: void <clinit>()>:<static>:<android.mtp.MtpDevice>
<android.renderscript.RenderScript: void nAllocationData1D(long,int,int,int,java.lang.Object,int,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.os.BatteryStats.Uid.Sensor: int getHandle()>:<public abstract>:<android.os.BatteryStats.Uid.Sensor>
<android.app.NativeActivity: void onSurfaceChangedNative(long,android.view.Surface,int,int,int)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Int2: void add(int)>:<public>:<android.renderscript.Int2>
<android.app.ActivityThread.TimeProfileData: void reset()>:<private>:<android.app.ActivityThread.TimeProfileData>
<android.graphics.Atlas.SlicePolicy.Cell: void <init>()>:<private>:<android.graphics.Atlas.SlicePolicy.Cell>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.net.NetworkPolicy.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkPolicy.1:android.os.Parcelable.Creator>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLLogWrapper: void glEnable(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.NetworkKey: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.FilterContext: void removeFrame(java.lang.String)>:<public>:<android.filterfw.core.FilterContext>
<android.net.wifi.RssiPacketCountInfo: void <init>(android.os.Parcel)>:<private>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.app.Dialog: void onWindowFocusChanged(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.webkit.PermissionRequest: java.lang.String[] getResources()>:<public abstract>:<android.webkit.PermissionRequest>
<android.transition.Transition: void captureStartValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.Transition:java.lang.Cloneable>
<android.transition.ChangeBounds.6: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.6:android.util.Property>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int hashCode()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.print.PrintDocumentInfo: void <init>()>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.backup.BackupDataOutput: void setKeyPrefix_native(long,java.lang.String)>:<private static native>:<android.app.backup.BackupDataOutput>
<android.app.IWallpaperManagerCallback.Stub: void <init>()>:<public>:<android.app.IWallpaperManagerCallback.Stub:android.os.Binder,android.app.IWallpaperManagerCallback>
<android.app.Notification.Style: void internalSetBigContentTitle(java.lang.CharSequence)>:<protected>:<android.app.Notification.Style>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>:<public>:<android.app.TaskStackBuilder>
<android.renderscript.RenderScript: void rsnContextResume(long)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Bitmap: boolean nativeRecycle(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Debug.MemoryInfo: int getTotalPrivateClean()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.os.Parcel: void readByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.net.Uri.PathSegments: int size()>:<public>:<android.net.Uri.PathSegments:java.util.AbstractList,java.util.AbstractCollection,java.util.RandomAccess>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.DrawableContainer.DrawableContainerState cloneConstantState()>:<volatile>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.ScoredNetwork.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.ScoredNetwork.1:android.os.Parcelable.Creator>
<android.graphics.drawable.VectorDrawable.VGroup: void setScaleX(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.graphics.LayerRasterizer: void nativeAddLayer(long,long,float,float)>:<private static native>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.transition.TransitionManager: void <clinit>()>:<static>:<android.transition.TransitionManager>
<android.net.wifi.p2p.WifiP2pManager.Channel: void access.200(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceResponse)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.os.UserManager: android.os.Bundle getUserRestrictions()>:<public>:<android.os.UserManager>
<android.transition.TransitionSet: void setupStartEndListeners()>:<private>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Notification.Builder: android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent,boolean)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityManager.TaskDescription: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getOpticalInsets()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.http.Request: void setLoadingPaused(boolean)>:<>:<android.net.http.Request>
<android.app.ActivityThread: android.app.ActivityThread.TimeProfileData access.600(android.app.ActivityThread)>:<static>:<android.app.ActivityThread>
<android.net.NetworkUtils: void parcelInetAddress(android.os.Parcel,java.net.InetAddress,int)>:<protected static>:<android.net.NetworkUtils>
<android.net.VpnService: boolean protect(java.net.Socket)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.BatteryStats.Uid: boolean hasUserActivity()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedFragment()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.os.TokenWatcher.1: void run()>:<public>:<android.os.TokenWatcher.1:java.lang.Runnable>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.os.JankBdItem: void readFromParcel(android.os.Parcel,java.lang.String)>:<public>:<android.os.JankBdItem>
<android.app.ActivityTransitionCoordinator: void captureSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.renderscript.Element.DataType: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.filterfw.core.Filter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.Filter>
<android.graphics.drawable.AnimatedRotateDrawable: void init()>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.ActivityManagerProxy: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Instrumentation: void execStartActivityFromAppTask(android.content.Context,android.os.IBinder,android.app.IAppTask,android.content.Intent,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.renderscript.RenderScript: float nScriptGetVarF(long,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.WifiCHRStateManager: void updateWifiBSSID(java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.WallpaperManager.FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.backup.IBackupManager: boolean isBackupEnabled()>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.net.nsd.DnsSdTxtRecord.1: android.net.nsd.DnsSdTxtRecord[] newArray(int)>:<public>:<android.net.nsd.DnsSdTxtRecord.1:android.os.Parcelable.Creator>
<android.os.UserManager: boolean isLinkedUser()>:<public>:<android.os.UserManager>
<android.app.SharedPreferencesImpl: void <clinit>()>:<static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.Activity.ManagedCursor: boolean access.200(android.app.Activity.ManagedCursor)>:<static>:<android.app.Activity.ManagedCursor>
<android.app.AlarmManager.AlarmClockInfo: void <clinit>()>:<static>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<android.transition.ChangeBounds.5: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.5:android.util.Property>
<android.renderscript.Double2: void negate()>:<public>:<android.renderscript.Double2>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityCreated(android.app.Activity,android.os.Bundle)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.renderscript.RenderScript.RSMessageHandler: void run()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.net.NetworkUtils: int netmaskIntToPrefixLength(int)>:<public static>:<android.net.NetworkUtils>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setColor(float,float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.app.DownloadManager.CursorTranslator: int getInt(int)>:<public>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.print.PrinterDiscoverySession: void destroy()>:<public final>:<android.print.PrinterDiscoverySession>
<android.print.IWriteResultCallback: void onWriteStarted(android.os.ICancellationSignal,int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.net.wifi.SupplicantState.2: void <clinit>()>:<static>:<android.net.wifi.SupplicantState.2>
<android.opengl.GLLogWrapper: void glGenTextures(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>:<public>:<android.webkit.WebStorage>
<android.webkit.WebViewProvider: void setInitialScale(int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.ProgramVertexFixedFunction.Constants: void addToBuffer(int,android.renderscript.Matrix4f)>:<private>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.net.wifi.DummyHwInnerWifiManager: void <clinit>()>:<static>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.graphics.drawable.BitmapDrawable: android.content.res.ColorStateList getTint()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.net.dhcp.DhcpNakPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpNakPacket:android.net.dhcp.DhcpPacket>
<android.opengl.GLLogWrapper: void glFogxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.FragmentTransaction: void <init>()>:<public>:<android.app.FragmentTransaction>
<android.app.QueuedWork: void waitToFinish()>:<public static>:<android.app.QueuedWork>
<android.renderscript.Matrix2f: void set(int,int,float)>:<public>:<android.renderscript.Matrix2f>
<android.graphics.pdf.PdfDocument.Page: void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument.PageInfo)>:<private>:<android.graphics.pdf.PdfDocument.Page>
<android.net.wifi.p2p.WifiP2pProvDiscEvent: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pProvDiscEvent>
<android.net.wifi.WifiConnectionStatistics: void incrementOrAddUntrusted(java.lang.String,int,int)>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.net.MobileDataStateTracker: void releaseWakeLock()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.graphics.Bitmap.1: android.graphics.Bitmap createFromParcel(android.os.Parcel)>:<public>:<android.graphics.Bitmap.1:android.os.Parcelable.Creator>
<android.app.ApplicationPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.PPPOEInfo.Status: void <clinit>()>:<static>:<android.net.wifi.PPPOEInfo.Status:java.lang.Enum>
<android.net.nsd.INsdManager.Stub: android.net.nsd.INsdManager asInterface(android.os.IBinder)>:<public static>:<android.net.nsd.INsdManager.Stub:android.os.Binder,android.net.nsd.INsdManager>
<android.net.LinkProperties: boolean isValidMtu(int,boolean)>:<public static>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ApplicationThreadProxy: void scheduleCancelVisibleBehind(android.os.IBinder)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.wifi.p2p.WifiP2pGroup: void setFrequence(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.os.SystemService.1: void run()>:<public>:<android.os.SystemService.1:java.lang.Runnable>
<android.app.IAlarmManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.app.SearchableInfo: android.content.Context createActivityContext(android.content.Context,android.content.ComponentName)>:<private static>:<android.app.SearchableInfo:android.os.Parcelable>
<android.drm.ProcessedData: java.lang.String getAccountId()>:<public>:<android.drm.ProcessedData>
<android.renderscript.Long3: void div(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>:<public>:<android.graphics.Paint>
<android.webkit.WebViewProvider: void loadUrl(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.InterfaceConfiguration: void setInterfaceUp()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.os.IMultiWinService: boolean hasMwSession()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.print.PrintJobId: android.print.PrintJobId unflattenFromString(java.lang.String)>:<public static>:<android.print.PrintJobId:android.os.Parcelable>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10Ext>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority[] values()>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.app.ActivityManager.ProcessErrorStateInfo.1: android.app.ActivityManager.ProcessErrorStateInfo[] newArray(int)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo.1:android.os.Parcelable.Creator>
<android.os.storage.StorageVolume: int hashCode()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.accounts.ChooseTypeAndAccountActivity: void setResultAndFinish(java.lang.String,java.lang.String)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Double4: void add(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.app.SharedPreferencesImpl: android.content.SharedPreferences.Editor edit()>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.filterfw.core.FieldPort: void transfer(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.Application: void unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.ActivityThread.ApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.NetworkState.1: android.net.NetworkState createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkState.1:android.os.Parcelable.Creator>
<android.app.ResourcesManager: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public>:<android.app.ResourcesManager>
<android.app.PendingIntent.FinishedDispatcher: void <init>(android.app.PendingIntent,android.app.PendingIntent.OnFinished,android.os.Handler)>:<>:<android.app.PendingIntent.FinishedDispatcher:android.content.IIntentReceiver.Stub,java.lang.Runnable>
<android.webkit.Plugin: void setPath(java.lang.String)>:<public>:<android.webkit.Plugin>
<android.app.IActivityManager: void attachApplication(android.app.IApplicationThread)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.transition.ChangeBounds.9: void onTransitionPause(android.transition.Transition)>:<public>:<android.transition.ChangeBounds.9:android.transition.Transition.TransitionListenerAdapter>
<android.app.IntentService: void onStart(android.content.Intent,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.R.style: void <init>()>:<public>:<android.R.style>
<android.graphics.Matrix.1: boolean postRotate(float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.os.BatteryStats: long computeBatteryScreenOffRealtime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.ConnectivityManager: void addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>:<public>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteDebug.DbStats getMainDbStatsUnsafe(int,long,long)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.INetworkManagementService.Stub.Proxy: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.Bitmap: void nativeSetHasAlpha(long,boolean,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>:<public final>:<android.os.Parcel>
<android.app.Fragment: void onCreate(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.IPermissionController.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IPermissionController.Stub.Proxy:android.os.IPermissionController>
<android.graphics.Color: float hue(int)>:<public static>:<android.graphics.Color>
<android.app.DownloadManager.Request: void putIfNonNull(android.content.ContentValues,java.lang.String,java.lang.Object)>:<private>:<android.app.DownloadManager.Request>
<android.graphics.Canvas: void native_drawBitmap(long,long,float,float,long,int,int,int)>:<private native>:<android.graphics.Canvas>
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String,android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.net.http.RequestQueue: void access.300(android.net.http.RequestQueue)>:<static>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.net.wifi.BatchedScanSettings: boolean channelSetIsValid()>:<private>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.app.VoiceInteractor.CommandRequest: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>:<>:<android.app.VoiceInteractor.CommandRequest:android.app.VoiceInteractor.Request>
<android.transition.VisibilityPropagation: int getViewCoordinate(android.transition.TransitionValues,int)>:<private static>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.lang.String getDeviceOwner()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>:<public>:<android.graphics.Paint>
<android.renderscript.ProgramStore: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.app.IActivityManager.WaitResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.IBackupAgent.Stub.Proxy: void doRestoreFinished(int,android.app.backup.IBackupManager)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.net.wifi.WifiNetworkConnectionStatistics: void <init>(android.net.wifi.WifiNetworkConnectionStatistics)>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: boolean hasPackage(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>:<public>:<android.os.MessageQueue>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiCHRStateManager: void updateActiveResult(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.database.AbstractCursor: boolean requery()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.EnterTransitionCoordinator.8: void <init>(android.app.EnterTransitionCoordinator)>:<>:<android.app.EnterTransitionCoordinator.8:android.animation.AnimatorListenerAdapter>
<android.app.AppOpsManager: int checkAudioOp(int,int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.net.wifi.WifiConnectionStatistics.1: android.net.wifi.WifiConnectionStatistics createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiConnectionStatistics.1:android.os.Parcelable.Creator>
<android.app.NativeActivity: void setWindowFormat(int)>:<>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.print.PrinterId: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterId:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnObjDestroy(long,long)>:<native>:<android.renderscript.RenderScript>
<android.os.INetworkManagementService: void flushNetworkDnsCache(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.accounts.IAccountAuthenticator.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)>:<public>:<android.webkit.WebViewClient>
<android.opengl.GLSurfaceView.GLThread: void onWindowResize(int,int)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.transition.Recolor: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.Recolor:android.transition.Transition>
<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.HwCustNotification: void setNotiActionButtonTextSize(android.content.Context,android.widget.RemoteViews,int)>:<public>:<android.app.HwCustNotification:android.app.IHwCustNotification>
<android.net.wifi.WifiScanner: com.android.internal.util.AsyncChannel access.000()>:<static>:<android.net.wifi.WifiScanner>
<android.transition.ChangeTransform.2: void set(android.transition.ChangeTransform.PathAnimatorMatrix,android.graphics.PointF)>:<public>:<android.transition.ChangeTransform.2:android.util.Property>
<android.renderscript.Script: void setVar(int,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.transition.Slide.CalculateSlideVertical: void <init>(android.transition.Slide.1)>:<>:<android.transition.Slide.CalculateSlideVertical:android.transition.Slide.CalculateSlide>
<android.app.IProcessObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean parse()>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.app.Activity: void dispatchEnterAnimationComplete()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.CommonTimeConfig: int forceNetworklessMasterMode()>:<public>:<android.os.CommonTimeConfig>
<android.net.EthernetManager.Listener: void onAvailabilityChanged(boolean)>:<public abstract>:<android.net.EthernetManager.Listener>
<android.graphics.Bitmap: void setDensity(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.LoadedApk.WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.graphics.RegionIterator: long nativeConstructor(long)>:<private static native>:<android.graphics.RegionIterator>
<android.app.admin.IDevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.print.IPrinterDiscoveryObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.app.IActivityManager: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: void setResultReceiver(android.os.ResultReceiver)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.ScoredNetwork.1: android.net.ScoredNetwork[] newArray(int)>:<public>:<android.net.ScoredNetwork.1:android.os.Parcelable.Creator>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteConnectionPool: void collectDbStats(java.util.ArrayList)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.renderscript.FieldPacker: void <init>(byte[])>:<public>:<android.renderscript.FieldPacker>
<android.print.IPrintSpoolerClient: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.app.LoadedApk: java.lang.String getResDir()>:<public>:<android.app.LoadedApk>
<android.app.ApplicationPackageManager: android.content.pm.UserInfo getUserIfProfile(int)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ContextImpl.6: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.6:android.app.ContextImpl.ServiceFetcher>
<android.net.LocalSocketImpl: int readba_native(byte[],int,int,java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.os.CommonClock.1: void binderDied()>:<public>:<android.os.CommonClock.1:android.os.IBinder.DeathRecipient>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.BatteryStats: java.lang.String formatRatioLocked(long,long)>:<public final>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.IPowerManager: void powerHint(int,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.os.UserHandle.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.UserHandle.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiChannel: boolean isValid()>:<public>:<android.net.wifi.WifiChannel:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.print.PrintDocumentInfo: java.lang.String getName()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.CommonClock: android.os.CommonClock.OnTimelineChangedListener access.200(android.os.CommonClock)>:<static>:<android.os.CommonClock>
<android.graphics.Bitmap: void checkXYSign(int,int)>:<private static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES11Ext: void <clinit>()>:<static>:<android.opengl.GLES11Ext>
<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>:<private>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.BackStackState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.BackStackState.1:android.os.Parcelable.Creator>
<android.net.LinkProperties: java.util.List getLinkAddresses()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>:<public>:<android.app.Instrumentation>
<android.database.CursorWrapper: boolean moveToPosition(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.drm.DrmManagerClient: int _saveRights(int,android.drm.DrmRights,java.lang.String,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.MediaRouteButton: void setRemoteIndicatorDrawable(android.graphics.drawable.Drawable)>:<private>:<android.app.MediaRouteButton:android.view.View>
<android.app.SharedPreferencesImpl.EditorImpl.1: void run()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl.1:java.lang.Runnable>
<android.net.MobileDataStateTracker: int getNormalizedSignalStrength(int,android.telephony.SignalStrength)>:<private static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.IAppTask.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.app.ActivityThread.ApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.graphics.Rect.UnflattenHelper: java.util.regex.Matcher getMatcher(java.lang.String)>:<static>:<android.graphics.Rect.UnflattenHelper>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.storage.StorageManager: void enableUsbMassStorage()>:<public>:<android.os.storage.StorageManager>
<android.os.ConditionVariable: void block()>:<public>:<android.os.ConditionVariable>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: void <init>()>:<private>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocation()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.NetworkStats: android.net.NetworkStats.Entry getValues(int,android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.JobSchedulerImpl: void cancelAll()>:<public>:<android.app.JobSchedulerImpl:android.app.job.JobScheduler>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.graphics.Bitmap getThemeBitmap(android.content.res.Resources,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.drm.DrmSupportInfo: boolean isSupportedMimeType(java.lang.String)>:<>:<android.drm.DrmSupportInfo>
<android.graphics.drawable.BitmapDrawable.BitmapState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.transition.TransitionSet.TransitionSetListener: void <init>(android.transition.TransitionSet)>:<>:<android.transition.TransitionSet.TransitionSetListener:android.transition.Transition.TransitionListenerAdapter>
<android.renderscript.Font: android.renderscript.Font create(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,android.renderscript.Font.Style,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.net.arp.ArpPeer: void close()>:<public>:<android.net.arp.ArpPeer>
<android.renderscript.RenderScript: void nScriptForEachMultiClipped(long,int,long[],long,byte[],int,int,int,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.app.ContextImpl: int access.000()>:<static>:<android.app.ContextImpl:android.content.Context>
<android.app.LoadedApk.ReceiverDispatcher: boolean access.100()>:<static>:<android.app.LoadedApk.ReceiverDispatcher>
<android.os.StrictMode.AndroidBlockGuardPolicy.1: void <init>(android.os.StrictMode.AndroidBlockGuardPolicy,android.view.IWindowManager,boolean,java.util.ArrayList)>:<>:<android.os.StrictMode.AndroidBlockGuardPolicy.1:java.lang.Runnable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1602(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.Uri.OpaqueUri: java.lang.String getLastPathSegment()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>:<protected>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.NinePatchDrawable: void <init>()>:<>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityThread.ApplicationThread: void updateTimeZone()>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.os.Debug.MemoryInfo: int getOtherPrivateDirty(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glAlphaFuncx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.mtp.MtpServer: void run()>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.app.Activity: void postponeEnterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.RotateDrawable.RotateState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.GLEnvironment: boolean isActive()>:<public>:<android.filterfw.core.GLEnvironment>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>:<public>:<android.graphics.YuvImage>
<android.webkit.WebViewProvider: void setDownloadListener(android.webkit.DownloadListener)>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(android.net.wifi.p2p.WifiP2pConfig)>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)>:<private static>:<android.net.http.SslCertificate>
<android.app.backup.IBackupManager.Stub.Proxy: android.content.Intent getDataManagementIntent(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.net.wifi.WifiScanner.ParcelableScanResults: android.net.wifi.ScanResult[] getResults()>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults:android.os.Parcelable>
<android.net.wifi.IWifiManager: void startLocationRestrictedScan(android.os.WorkSource)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.IPowerManager.Stub.Proxy: void startWakeUpReady(long)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(android.net.Uri.Part)>:<>:<android.net.Uri.Builder>
<android.webkit.WebView: boolean canGoBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.ColorMatrixColorFilter: android.graphics.ColorMatrix getColorMatrix()>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.os.Debug.MemoryInfo: int getOtherSwappedOut(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.Drawable>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: void <init>(java.util.List)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>:<public final>:<android.graphics.RegionIterator>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setCancelLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.net.wifi.ScanResult.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.ScanResult.1:android.os.Parcelable.Creator>
<android.os.BatteryProperty: void <clinit>()>:<static>:<android.os.BatteryProperty:android.os.Parcelable>
<android.net.wifi.HwInnerWifiManager: int calculateSignalLevelHW(int)>:<public abstract>:<android.net.wifi.HwInnerWifiManager>
<android.app.ActivityManager.TaskDescription: void setLabel(java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.net.NetworkInfo: boolean isConnected()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>:<public final>:<android.os.Handler>
<android.os.Parcel: java.lang.String[] readStringArray()>:<public final>:<android.os.Parcel>
<android.database.AbstractWindowedCursor: float getFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.net.http.HttpConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>:<>:<android.net.http.HttpConnection:android.net.http.Connection>
<android.os.Parcel: boolean[] createBooleanArray()>:<public final>:<android.os.Parcel>
<android.renderscript.FieldPacker: android.renderscript.Long4 subLong4()>:<public>:<android.renderscript.FieldPacker>
<android.os.UserHandle: int getUserGid(int)>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.net.WifiLinkQualityInfo: void setType(int)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.drawable.ColorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setCullMode(android.renderscript.ProgramRaster.CullMode)>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: int indexOfKeyframe(int[])>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.IDevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Short3: void negate()>:<public>:<android.renderscript.Short3>
<android.net.wifi.WifiManager: boolean isPreferredNetworkOffloadSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.SupplicantState: int describeContents()>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ContextImpl: android.content.Context getOuterContext()>:<final>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.os.WorkSource: void <init>(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.net.wifi.WifiCHRStateManager: int getBluetoothState()>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.renderscript.Int3: android.renderscript.Int3 add(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.app.ExitTransitionCoordinator: void access.600(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Trace: long nativeGetEnabledTags()>:<private static native>:<android.os.Trace>
<android.app.admin.IDevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.drm.DrmUtils.ExtendedMetadataParser: int readByte(byte[],int)>:<private>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.BaseBundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>:<>:<android.os.BaseBundle>
<android.os.INetworkManagementService.Stub.Proxy: java.util.List getApLinkedStaList()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.702(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.renderscript.AllocationAdapter: void setZ(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.graphics.drawable.BitmapDrawable: void computeBitmapSize()>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.emoji.EmojiFactory: void <init>(long,java.lang.String)>:<private>:<android.emoji.EmojiFactory>
<android.graphics.drawable.VectorDrawable.VFullPath: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.os.BatteryStats: boolean getNextOldHistoryLocked(android.os.BatteryStats.HistoryItem)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.http.IdleCache: int access.100(android.net.http.IdleCache)>:<static>:<android.net.http.IdleCache>
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.renderscript.FieldPacker: void addI16(short)>:<public>:<android.renderscript.FieldPacker>
<android.app.backup.BackupDataInputStream: void <init>(android.app.backup.BackupDataInput)>:<>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.os.INetworkManagementService.Stub.Proxy: void stopTethering()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.IActivityManager: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.INotificationManager.Stub.Proxy: void setPackagePriority(java.lang.String,int,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.database.sqlite.SQLiteGlobal: int nativeReleaseMemory()>:<private static native>:<android.database.sqlite.SQLiteGlobal>
<android.renderscript.Int4: int elementSum()>:<public>:<android.renderscript.Int4>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapS()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setTranslation(android.graphics.PointF)>:<public>:<android.transition.ChangeTransform.PathAnimatorMatrix>
<android.net.IConnectivityManager.Stub.Proxy: int setUsbTethering(boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.wifi.WifiScanner.WifiChangeSettings: int describeContents()>:<public>:<android.net.wifi.WifiScanner.WifiChangeSettings:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request)>:<public>:<android.net.http.RequestHandle>
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.app.Fragment: void setSharedElementEnterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.FragmentManager: int getBackStackEntryCount()>:<public abstract>:<android.app.FragmentManager>
<android.net.LinkProperties: boolean isIdenticalHttpProxy(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Double3: void addAt(int,double)>:<public>:<android.renderscript.Double3>
<android.os.PowerManagerInternal: void setButtonBrightnessOverrideFromWindowManager(int)>:<public abstract>:<android.os.PowerManagerInternal>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.os.IBinder)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.app.IActivityManager: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable.LayerState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.UiAutomation.IAccessibilityServiceClientImpl: void <init>(android.app.UiAutomation,android.os.Looper)>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl:android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper,android.accessibilityservice.IAccessibilityServiceClient.Stub,android.os.Binder>
<android.graphics.drawable.AnimatedRotateDrawable: int getAlpha()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.usage.ConfigurationStats.1: android.app.usage.ConfigurationStats[] newArray(int)>:<public>:<android.app.usage.ConfigurationStats.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: void nScriptForEach(long,int,long,long,byte[])>:<>:<android.renderscript.RenderScript>
<android.net.NetworkStats: int size()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable.ShapeState,android.content.res.Resources,android.graphics.drawable.ShapeDrawable.1)>:<>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>:<public abstract>:<android.webkit.WebChromeClient.CustomViewCallback>
<android.net.wifi.IWifiManager: void releaseMulticastLock()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.PixelFormat: void <init>()>:<public>:<android.graphics.PixelFormat>
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.WpsResult.1: android.net.wifi.WpsResult[] newArray(int)>:<public>:<android.net.wifi.WpsResult.1:android.os.Parcelable.Creator>
<android.net.IpPrefix.1: void <init>()>:<>:<android.net.IpPrefix.1:android.os.Parcelable.Creator>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.webkit.FindActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.Color: float brightness(int)>:<public static>:<android.graphics.Color>
<android.net.wifi.PPPOEInfo.1: android.net.wifi.PPPOEInfo[] newArray(int)>:<public>:<android.net.wifi.PPPOEInfo.1:android.os.Parcelable.Creator>
<android.filterfw.core.Filter: boolean isAvailable(java.lang.String)>:<public static final>:<android.filterfw.core.Filter>
<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.SharedPreferencesImpl.EditorImpl: android.app.SharedPreferencesImpl.MemoryCommitResult commitToMemory()>:<private>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.app.AppOpsManager.PackageOps: void <init>(android.os.Parcel)>:<>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.app.Notification.Builder: int getBigBaseLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.Dialog: void onAttachedToWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()>:<public>:<android.net.ConnectivityManager>
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clone()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.hwtheme.HwThemeManager: boolean isPowerSavingTheme()>:<public static>:<android.hwtheme.HwThemeManager>
<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.net.RssiCurve.1: void <init>()>:<>:<android.net.RssiCurve.1:android.os.Parcelable.Creator>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.os.StrictMode: void decrementExpectedActivityCount(java.lang.Class)>:<public static>:<android.os.StrictMode>
<android.app.ApplicationErrorReport: void <init>()>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.app.backup.FullBackup: void <init>()>:<public>:<android.app.backup.FullBackup>
<android.net.wifi.IWifiManager: boolean setWifiEnabled(boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.ICancellationSignal.Stub: void <init>()>:<public>:<android.os.ICancellationSignal.Stub:android.os.Binder,android.os.ICancellationSignal>
<android.print.IPrintSpooler.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.INetworkScoreService.Stub: void <init>()>:<public>:<android.net.INetworkScoreService.Stub:android.os.Binder,android.net.INetworkScoreService>
<android.net.http.SslError: boolean hasError(int)>:<public>:<android.net.http.SslError>
<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.HwWifiStatStore: void <clinit>()>:<static>:<android.net.wifi.HwWifiStatStore>
<android.app.Dialog: void closeOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.52: void <init>()>:<>:<android.app.ContextImpl.52:android.app.ContextImpl.ServiceFetcher>
<android.os.UserManager: boolean canAddMoreUsers()>:<public>:<android.os.UserManager>
<android.os.StatFs: long getTotalBytes()>:<public>:<android.os.StatFs>
<android.database.sqlite.SQLiteCustomFunction: void dispatchCallback(java.lang.String[])>:<private>:<android.database.sqlite.SQLiteCustomFunction>
<android.app.admin.IDevicePolicyManager: boolean isActivePasswordSufficient(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.database.sqlite.SQLiteConnectionPool.1: void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter,int)>:<>:<android.database.sqlite.SQLiteConnectionPool.1:android.os.CancellationSignal.OnCancelListener>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect getContentRect()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.renderscript.Short4: void <init>(short)>:<public>:<android.renderscript.Short4>
<android.app.ProgressDialog: void initFormats()>:<private>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.Parcel: void nativeWriteDouble(long,double)>:<private static native>:<android.os.Parcel>
<android.renderscript.RSSurfaceView: void destroyRenderScriptGL()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.UiAutomation.OnAccessibilityEventListener: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.app.UiAutomation.OnAccessibilityEventListener>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Paint.Cap: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>:<public static>:<android.os.RecoverySystem>
<android.net.IConnectivityManager.Stub.Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.admin.IDevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.net.NetworkPolicyManager: boolean getRestrictBackground()>:<public>:<android.net.NetworkPolicyManager>
<android.opengl.GLLogWrapper: void glDisableClientState(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.VectorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.PowerManager: void nap(long)>:<public>:<android.os.PowerManager>
<android.net.http.AndroidHttpClient: org.apache.http.HttpRequestInterceptor access.000()>:<static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.RectF: int describeContents()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.CommonClock: void <init>()>:<public>:<android.os.CommonClock>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: double rsnScriptGetVarD(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.app.ActivityManagerProxy: boolean isUserRunning(int,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Byte3: android.renderscript.Byte3 div(android.renderscript.Byte3,android.renderscript.Byte3)>:<public static>:<android.renderscript.Byte3>
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.ApplicationThreadProxy: void clearDnsCache()>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.renderscript.Double4: android.renderscript.Double4 div(android.renderscript.Double4,double)>:<public static>:<android.renderscript.Double4>
<android.net.IConnectivityManager: int checkMobileProvisioning(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.os.PersistableBundle.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.PersistableBundle.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteStarted(android.os.ICancellationSignal,int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.opengl.GLLogWrapper: void glAlphaFunc(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: void setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.BaseObj: void setID(long)>:<>:<android.renderscript.BaseObj>
<android.app.IActivityManager: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrintJobInfo: android.print.PrintAttributes access.102(android.print.PrintJobInfo,android.print.PrintAttributes)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.IEthernetManager.Stub.Proxy: boolean isAvailable()>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.NetworkStateTracker: boolean isAvailable()>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.ActivityTransitionState: void onResume()>:<public>:<android.app.ActivityTransitionState>
<android.app.Activity.ManagedCursor: void <init>(android.database.Cursor)>:<>:<android.app.Activity.ManagedCursor>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[])>:<public>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.database.Cursor: byte[] getBlob(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.admin.IDevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.NetworkInfo: java.lang.String convertSubtypeName(int)>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.graphics.Picture: long nativeConstructor(long)>:<private static native>:<android.graphics.Picture>
<android.net.wifi.WifiCHRStateManager: void updateDataStatus(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.WifiCHRStateManager: void uploadUserConnectFailed(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.RenderScriptGL: void resume()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.os.Parcel: byte[] marshall()>:<public final>:<android.os.Parcel>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>:<public final>:<android.os.Parcel>
<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Byte3: void setValues(byte,byte,byte)>:<public>:<android.renderscript.Byte3>
<android.graphics.drawable.AnimationDrawable.AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.NativeActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.graphics.drawable.AnimatedRotateDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.Uri.StringUri: boolean isHierarchical()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.PorterDuffColorFilter: long native_CreatePorterDuffFilter(int,int)>:<private static native>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.app.SharedPreferencesImpl: void loadFromDiskLocked()>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.LauncherActivity.ActivityAdapter: android.app.LauncherActivity.ListItem itemForPosition(int)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.accounts.AccountManager: boolean removeSharedAccount(android.accounts.Account,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList copyBackForwardList()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.admin.DevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.NetworkRequest: void <init>(android.net.NetworkRequest)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.drawable.shapes.Shape: float getHeight()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.os.BatteryStats: int getHistoryStringPoolBytes()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getTextureParamName(float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimationDrawable.AnimationState: void access.200(android.graphics.drawable.AnimationDrawable.AnimationState)>:<static>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Typeface: boolean isItalic()>:<public final>:<android.graphics.Typeface>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.webkit.WebView.FindListenerDistributor: android.webkit.WebView.FindListener access.2202(android.webkit.WebView.FindListenerDistributor,android.webkit.WebView.FindListener)>:<static>:<android.webkit.WebView.FindListenerDistributor:android.webkit.WebView.FindListener>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.Picture: void <init>()>:<public>:<android.graphics.Picture>
<android.filterfw.core.GLFrame: boolean nativeReattachTexToFbo()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.NetworkKey: void <clinit>()>:<static>:<android.net.NetworkKey:android.os.Parcelable>
<android.net.wifi.HuaweiApConfiguration: void <init>()>:<public>:<android.net.wifi.HuaweiApConfiguration:android.os.Parcelable>
<android.filterfw.core.FrameFormat: int bytesPerSampleOf(int)>:<public static>:<android.filterfw.core.FrameFormat>
<android.app.admin.DevicePolicyManager: void uninstallAllUserCaCerts(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.drm.DrmManagerClient: int access.000(android.drm.DrmManagerClient)>:<static>:<android.drm.DrmManagerClient>
<android.app.ActivityThread.ResultData: java.lang.String toString()>:<public>:<android.app.ActivityThread.ResultData>
<android.renderscript.ScriptC: long internalCreate(android.renderscript.RenderScript,android.content.res.Resources,int)>:<private static>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Color: int parseColor(java.lang.String)>:<public static>:<android.graphics.Color>
<android.renderscript.RenderScript: long nScriptGroupCreate(long[],long[],long[],long[],long[])>:<>:<android.renderscript.RenderScript>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>:<public static>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.app.Activity: boolean navigateUpTo(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats: long computeBatteryRealtime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ProgressDialog: java.lang.String access.100(android.app.ProgressDialog)>:<static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.ScriptGroup.Builder: void validateDAG()>:<private>:<android.renderscript.ScriptGroup.Builder>
<android.net.DhcpResults.1: void <init>()>:<>:<android.net.DhcpResults.1:android.os.Parcelable.Creator>
<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.print.IPrinterDiscoveryObserver.Stub: android.print.IPrinterDiscoveryObserver asInterface(android.os.IBinder)>:<public static>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.os.BatteryStats.Uid.Sensor: android.os.BatteryStats.Timer getSensorTime()>:<public abstract>:<android.os.BatteryStats.Uid.Sensor>
<android.graphics.drawable.AnimatedVectorDrawable.1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.1:android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkPolicyManager: boolean isUidValidForPolicy(android.content.Context,int)>:<public static>:<android.net.NetworkPolicyManager>
<android.app.ActivityThread: android.app.ActivityThread systemMain()>:<public static>:<android.app.ActivityThread>
<android.opengl.GLLogWrapper: void glOrthof(float,float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.GradientState,android.graphics.drawable.GradientDrawable.1)>:<>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Fragment: android.view.View getView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.http.Headers: void <clinit>()>:<static>:<android.net.http.Headers>
<android.opengl.GLES20: void glStencilMask(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.os.Message)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebViewProvider: android.webkit.WebView.HitTestResult getHitTestResult()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.pdf.PdfEditor: boolean nativeGetPageMediaBox(long,int,android.graphics.Rect)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.app.AlertDialog: void setView(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.IUserManager: void setUserRestrictions(android.os.Bundle,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.app.ActivityManager.CpuStatInfo: void <init>()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.app.ProgressDialog: void onProgressChanged()>:<private>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.opengl.GLLogWrapper: void startLogIndices()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Long4: android.renderscript.Long4 div(android.renderscript.Long4,long)>:<public static>:<android.renderscript.Long4>
<android.app.ContextImpl.35: void <init>()>:<>:<android.app.ContextImpl.35:android.app.ContextImpl.ServiceFetcher>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.app.UiAutomation>
<android.app.ContextImpl.ApplicationContentResolver: void <init>(android.content.Context,android.app.ActivityThread,android.os.UserHandle)>:<public>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.webkit.WebResourceRequest: boolean isForMainFrame()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.net.http.Headers: void setAcceptRanges(java.lang.String)>:<public>:<android.net.http.Headers>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setWfdEnabled(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.net.wifi.HwCustBaseWifiFactory: void <init>()>:<public>:<android.net.wifi.HwCustBaseWifiFactory>
<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.RttManager: com.android.internal.util.AsyncChannel access.000()>:<static>:<android.net.wifi.RttManager>
<android.net.DhcpStateMachine.1: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.1:android.content.BroadcastReceiver>
<android.os.INetworkManagementService: boolean isFirewallEnabled()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>:<public native>:<android.graphics.Paint>
<android.os.IMultiWinService: void setCloseChangeViewInvisible()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>:<public>:<android.app.Instrumentation>
<android.print.PrinterId: java.lang.String toString()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.net.RouteInfo: int describeContents()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebSettings: void setAcceptThirdPartyCookies(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.RenderScript: int nContextGetUserMessage(long,int[])>:<native>:<android.renderscript.RenderScript>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.webkit.CacheManager.CacheResult: java.lang.String getContentDisposition()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.Paint.Cap: void <clinit>()>:<static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.app.Notification.Builder: void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews)>:<private>:<android.app.Notification.Builder>
<android.net.wifi.IWifiManager: boolean removeNetwork(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IActivityContainer.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.os.Debug: void waitForDebugger()>:<public static>:<android.os.Debug>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.INetworkPolicyManager: int[] getUidsWithPolicy(int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.FrameFormat: int getWidth()>:<public>:<android.filterfw.core.FrameFormat>
<android.net.wifi.HiSiWifiComm: void <clinit>()>:<static>:<android.net.wifi.HiSiWifiComm>
<android.hsm.MediaTransactWrapper: void musicPausedOrStopped(int,int)>:<public static>:<android.hsm.MediaTransactWrapper>
<android.net.nsd.NsdManager: android.net.nsd.NsdServiceInfo getNsdService(int)>:<private>:<android.net.nsd.NsdManager>
<android.opengl.GLLogWrapper: boolean glIsBuffer(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.IConnectivityManager.Stub.Proxy: int untether(java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.RectF: void offset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.Handler: void handleMessage(android.os.Message)>:<public>:<android.os.Handler>
<android.net.http.RequestQueue: org.apache.http.HttpHost access.200(android.net.http.RequestQueue,org.apache.http.HttpHost)>:<static>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.app.Dialog: void sendDismissMessage()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.INetworkScoreService: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>:<public abstract>:<android.net.INetworkScoreService:android.os.IInterface>
<android.app.Activity: void finishFromChild(android.app.Activity)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Short2: android.renderscript.Short2 add(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.graphics.drawable.LayerDrawable.LayerState: boolean canConstantState()>:<public final>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Extender)>:<public>:<android.app.Notification.Action.Builder>
<android.transition.ChangeTransform.3: void onAnimationPause(android.animation.Animator)>:<public>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.renderscript.ScriptGroup: void execute()>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Canvas: void translate(float,float)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.BitmapDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkKey.1: android.net.NetworkKey[] newArray(int)>:<public>:<android.net.NetworkKey.1:android.os.Parcelable.Creator>
<android.netdetect.HwCustNetDetectServiceImpl: void registerForBroadcasts()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.hsm.HwSystemManager.HsmDefImpl: boolean shouldInterceptAudience(java.lang.String[],java.lang.String)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.Canvas: boolean native_isOpaque(long)>:<private static native>:<android.graphics.Canvas>
<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.Ripple: void endSoftwareAnimations()>:<private>:<android.graphics.drawable.Ripple>
<android.os.Debug: void dumpNativeHeap(java.io.FileDescriptor)>:<public static native>:<android.os.Debug>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.app.ActivityTransitionCoordinator.SharedElementOriginalState: void <init>()>:<>:<android.app.ActivityTransitionCoordinator.SharedElementOriginalState>
<android.graphics.drawable.RotateDrawable: void setPivotYRelative(boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.StrictMode: void onFileUriExposed(java.lang.String)>:<public static>:<android.os.StrictMode>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterfw.core.Filter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.Filter>
<android.transition.TransitionSet: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.usage.UsageEvents: int describeContents()>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.net.BaseNetworkStateTracker: void startMonitoringInternal()>:<protected>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.Activity.ManagedDialog: void <init>(android.app.Activity.1)>:<>:<android.app.Activity.ManagedDialog>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int,boolean)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.Transition: void runAnimator(android.animation.Animator,android.util.ArrayMap)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.filterfw.core.Filter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>:<protected final>:<android.filterfw.core.Filter>
<android.app.Notification.Action: android.app.Notification.Action clone()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,java.util.List)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLErrorWrapper: void glStencilMask(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiInfo.1: android.net.wifi.WifiInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiInfo.1:android.os.Parcelable.Creator>
<android.renderscript.Int2: void sub(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.database.sqlite.SQLiteConnection: void collectDbStatsUnsafe(java.util.ArrayList)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>:<public>:<android.os.Vibrator>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpHierarchy(android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)>:<public>:<android.app.LoadedApk>
<android.net.dhcp.DhcpPacket: int intAbs(short)>:<private>:<android.net.dhcp.DhcpPacket>
<android.accounts.AccountManagerResponse: void <init>(android.accounts.IAccountManagerResponse)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.app.Activity: boolean isFinishing()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Filter: void pushInputFrame(java.lang.String,android.filterfw.core.Frame)>:<final>:<android.filterfw.core.Filter>
<android.os.IBatteryPropertiesRegistrar.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub:android.os.Binder,android.os.IBatteryPropertiesRegistrar>
<android.os.IPowerManager: void crash(java.lang.String)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: void clearDeviceOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ExitTransitionCoordinator.1: void <init>(android.app.ExitTransitionCoordinator,android.view.ViewGroup)>:<>:<android.app.ExitTransitionCoordinator.1:java.lang.Runnable>
<android.os.Debug: long threadCpuTimeNanos()>:<public static>:<android.os.Debug>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>:<public static>:<android.app.backup.BackupManager>
<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.INetworkManagementEventObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkManagementEventObserver.Stub:android.os.Binder,android.net.INetworkManagementEventObserver>
<android.renderscript.ScriptGroup.IO: void <init>(android.renderscript.Script.KernelID)>:<>:<android.renderscript.ScriptGroup.IO>
<android.app.ActivityTransitionState.1: void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity)>:<>:<android.app.ActivityTransitionState.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES20: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES20>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Int4: void sub(int)>:<public>:<android.renderscript.Int4>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getChannelList()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int)>:<public static>:<android.renderscript.RenderScript>
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)>:<public>:<android.filterfw.core.FrameFormat>
<android.graphics.Paint: boolean isFakeBoldText()>:<public final>:<android.graphics.Paint>
<android.app.IActivityController: int systemNotResponding(java.lang.String)>:<public abstract>:<android.app.IActivityController:android.os.IInterface>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.IConnectivityManager.Stub.Proxy: android.net.LinkProperties getLinkPropertiesForType(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.wifi.p2p.WifiP2pDevice.1: android.net.wifi.p2p.WifiP2pDevice createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pDevice.1:android.os.Parcelable.Creator>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFinished(android.print.PageRange[])>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.app.Notification.Style: void checkBuilder()>:<protected>:<android.app.Notification.Style>
<android.renderscript.RenderScript: long rsnFontCreateFromAsset(long,android.content.res.AssetManager,java.lang.String,float,int)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager: void publishContentProviders(android.app.IApplicationThread,java.util.List)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.UiAutomation: boolean setRotation(int)>:<public>:<android.app.UiAutomation>
<android.graphics.drawable.AnimatedVectorDrawable: void <init>(android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState,android.content.res.Resources)>:<private>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.os.INetworkManagementService.Stub.Proxy: java.lang.String[] listTtys()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>:<>:<android.os.BaseBundle>
<android.os.storage.MountServiceListener: void onUsbMassStorageConnectionChanged(boolean)>:<>:<android.os.storage.MountServiceListener>
<android.net.dhcp.DhcpNakPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpNakPacket:android.net.dhcp.DhcpPacket>
<android.filterfw.core.GLFrame: void setFloats(float[])>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.graphics.pdf.PdfEditor: void removePage(int)>:<public>:<android.graphics.pdf.PdfEditor>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.print.PrintAttributes: void setMediaSize(android.print.PrintAttributes.MediaSize)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ActivityThread.ApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.TrafficStats: long getMobileRxBytes()>:<public static>:<android.net.TrafficStats>
<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>:<public abstract>:<android.net.http.EventHandler>
<android.opengl.GLSurfaceView.GLThreadManager: boolean tryAcquireEglContextLocked(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.net.UidRange.1: android.net.UidRange[] newArray(int)>:<public>:<android.net.UidRange.1:android.os.Parcelable.Creator>
<android.os.Debug: int getGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<android.os.MessageQueue: void quit(boolean)>:<>:<android.os.MessageQueue>
<android.app.job.JobInfo: int getNetworkType()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void <init>(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.graphics.drawable.InsetDrawable: void <init>()>:<>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManager.RunningTaskInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.RunningTaskInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiManager: void <clinit>()>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.test.AndroidTestCase: void <init>()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.Activity: boolean isSupportAPS()>:<private>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.FileA3D.EntryType: void <clinit>()>:<static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.app.LoadedApk: java.lang.String getPackageName()>:<public>:<android.app.LoadedApk>
<android.app.IActivityManager: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.app.UiAutomationConnection: void disconnect()>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.graphics.drawable.AnimationDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.wifi.HuaweiApConfiguration.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.HuaweiApConfiguration.1:android.os.Parcelable.Creator>
<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)>:<protected abstract>:<android.webkit.CookieManager>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.graphics.drawable.RippleBackground: void invalidateSelf()>:<private>:<android.graphics.drawable.RippleBackground>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>:<public static>:<android.net.NetworkScorerAppManager>
<android.os.BatteryStats.Uid: long getProcessStateTime(int,long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.os.INetworkManagementService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.INetworkManagementService.Stub:android.os.Binder,android.os.INetworkManagementService>
<android.os.RegistrantList: void <init>()>:<public>:<android.os.RegistrantList>
<android.os.PowerManager.BacklightBrightness: boolean updateBacklightBrightness(int)>:<public>:<android.os.PowerManager.BacklightBrightness>
<android.renderscript.ScriptGroup.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.database.CursorWindow: void clear()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.StrictMode.AndroidCloseGuardReporter: void report(java.lang.String,java.lang.Throwable)>:<public>:<android.os.StrictMode.AndroidCloseGuardReporter:dalvik.system.CloseGuard.Reporter>
<android.app.ApplicationThreadProxy: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.DhcpStateMachine.DhcpAction: android.net.DhcpStateMachine.DhcpAction valueOf(java.lang.String)>:<public static>:<android.net.DhcpStateMachine.DhcpAction:java.lang.Enum>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String[] getSecureContainerList()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.BatteryStats: long getInteractiveTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.IWifiScanner.Stub: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IWifiScanner.Stub:android.os.Binder,android.net.wifi.IWifiScanner>
<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask: void run()>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask:java.util.TimerTask>
<android.renderscript.ScriptIntrinsic3DLUT: void setLUT(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AccountManagerResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory: android.hwcontrol.HwWidgetFactory.Factory getImplObject()>:<private static>:<android.hwcontrol.HwWidgetFactory>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.ActivityManagerProxy: boolean testIsSystemReady()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.FilterGraph: void <init>()>:<public>:<android.filterfw.core.FilterGraph>
<android.transition.ChangeTransform.PathAnimatorMatrix: void <init>(android.view.View,float[])>:<public>:<android.transition.ChangeTransform.PathAnimatorMatrix>
<android.os.PowerManager: void setStartDreamFromOtherFlag(boolean)>:<public>:<android.os.PowerManager>
<android.webkit.WebViewProvider: boolean zoomBy(float)>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.app.backup.BackupManager: void <init>(android.content.Context)>:<public>:<android.app.backup.BackupManager>
<android.app.Notification.Style: void populateBigContentView(android.app.Notification)>:<protected>:<android.app.Notification.Style>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType[] values()>:<public static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.net.NetworkUtils: int bindSocketToNetwork(int,int)>:<public static native>:<android.net.NetworkUtils>
<android.graphics.Color: int blue(int)>:<public static>:<android.graphics.Color>
<android.app.Notification.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.Notification.1:android.os.Parcelable.Creator>
<android.app.IActivityManager: int getFrontActivityScreenCompatMode()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>:<public>:<android.graphics.Path>
<android.filterfw.geometry.Quad: float getBoundingWidth()>:<public>:<android.filterfw.geometry.Quad>
<android.net.wifi.IRttManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IRttManager.Stub:android.os.Binder,android.net.wifi.IRttManager>
<android.app.ActivityOptions: void setOnAnimationStartedListener(android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>:<private>:<android.app.ActivityOptions>
<android.alsa.AlsaDevicesParser.AlsaDeviceRecord: boolean parse(java.lang.String)>:<public>:<android.alsa.AlsaDevicesParser.AlsaDeviceRecord>
<android.database.CursorWindow: void recordNewWindow(int,long)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.BaseBundle: void <init>(android.os.Parcel)>:<>:<android.os.BaseBundle>
<android.graphics.Path: void native_setFillType(long,int)>:<private static native>:<android.graphics.Path>
<android.print.IPrintSpooler.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.app.ActivityOptions: void update(android.app.ActivityOptions)>:<public>:<android.app.ActivityOptions>
<android.app.ExitTransitionCoordinator.9: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.ExitTransitionCoordinator.9:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager.ContentProviderHolder.1: android.app.IActivityManager.ContentProviderHolder[] newArray(int)>:<public>:<android.app.IActivityManager.ContentProviderHolder.1:android.os.Parcelable.Creator>
<android.opengl.EGLLogWrapper: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.filterfw.core.Frame: void markReadOnly()>:<final>:<android.filterfw.core.Frame>
<android.app.Fragment: void setAllowReturnTransitionOverlap(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Application: void dispatchActivityResumed(android.app.Activity)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.webkit.WebViewFactoryProvider: android.webkit.WebStorage getWebStorage()>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.app.SearchDialog: void launchIntent(android.content.Intent)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.opengl.EGLObjectHandle: long getNativeHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.app.ISearchManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.NetworkTemplate: boolean matches(android.net.NetworkIdentity)>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.LoaderManagerImpl.LoaderInfo: void retain()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.net.DhcpResults: void clear()>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.os.INetworkManagementService.Stub.Proxy: android.net.RouteInfo[] getRoutes(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>:<private static>:<android.app.ActivityThread>
<android.opengl.GLES30: void _nativeClassInit()>:<private static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityManager.CpuStatInfo: float getTotalTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManager.CpuStatInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Bitmap.BitmapFinalizer: long access.000(android.graphics.Bitmap.BitmapFinalizer)>:<static>:<android.graphics.Bitmap.BitmapFinalizer>
<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.VoiceInteractor.Request: void cancel()>:<public>:<android.app.VoiceInteractor.Request>
<android.os.ParcelableParcel.1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public volatile>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.hwtheme.HwThemeManagerDummy: void initForThemeFont(android.content.res.Configuration)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.hwtheme.HwThemeManager: void updateConfiguration()>:<public static>:<android.hwtheme.HwThemeManager>
<android.filterfw.geometry.Quad: java.lang.String toString()>:<public>:<android.filterfw.geometry.Quad>
<android.mtp.MtpDatabase: void <clinit>()>:<static>:<android.mtp.MtpDatabase>
<android.renderscript.RenderScriptGL: void setSurfaceTexture(android.graphics.SurfaceTexture,int,int)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.net.Uri: java.lang.String getScheme()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[],android.app.Notification.1)>:<>:<android.app.Notification.Action:android.os.Parcelable>
<android.graphics.AvoidXfermode.Mode: void <clinit>()>:<static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.os.storage.IMountService: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>:<public static>:<android.webkit.CacheManager>
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>:<public>:<android.app.ActivityThread>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.PendingIntent.OnFinished>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.RenderScript: void rsnScriptSetVarVE(long,long,int,byte[],long,int[])>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.WifiEnterpriseConfig.1: java.security.cert.X509Certificate readCertificate(android.os.Parcel)>:<private>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.app.EnterTransitionCoordinator: void sharedElementTransitionComplete()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.os.ParcelFileDescriptor.Status: java.io.IOException asIOException()>:<public>:<android.os.ParcelFileDescriptor.Status>
<android.opengl.GLLogWrapper.PointerInfo: void bindByteBuffer()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.renderscript.Program: void bindTexture(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.transition.ChangeTransform.3: void setCurrentMatrix(android.graphics.Matrix)>:<private>:<android.transition.ChangeTransform.3:android.animation.AnimatorListenerAdapter>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>:<public static>:<android.app.ActivityManager>
<android.graphics.drawable.AnimatedRotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityManagerProxy: android.os.IBinder getHomeActivityToken()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActionBar.LayoutParams: void <init>(int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.Uri.StringUri: java.util.List getPathSegments()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.os.storage.IMountService.Stub.Proxy: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <init>()>:<private>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES20>
<android.os.UserManager: void <init>(android.content.Context,android.os.IUserManager)>:<public>:<android.os.UserManager>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.CursorWindow: byte[] nativeGetBlob(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.IWallpaperManagerCallback.Stub.Proxy: void onWallpaperChanged()>:<public>:<android.app.IWallpaperManagerCallback.Stub.Proxy:android.app.IWallpaperManagerCallback>
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.wifi.WifiScanner.HotlistSettings: int describeContents()>:<public>:<android.net.wifi.WifiScanner.HotlistSettings:android.os.Parcelable>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>:<public>:<android.graphics.Paint>
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.webkit.WebViewProvider: int getProgress()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.WallpaperManager.Globals: void onBlurWallpaperChanged()>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.p2p.WifiP2pManager.PersistentGroupInfoListener: void onPersistentGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroupList)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.PersistentGroupInfoListener>
<android.os.Parcel: void nativeWriteByteArray(long,byte[],int,int)>:<private static native>:<android.os.Parcel>
<android.renderscript.Double3: android.renderscript.Double3 div(android.renderscript.Double3,double)>:<public static>:<android.renderscript.Double3>
<android.os.Build: boolean isFingerprintConsistent()>:<public static>:<android.os.Build>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.drm.DrmManagerClient: int _openConvertSession(int,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.filterfw.core.GLFrame: void releaseNativeAllocation()>:<protected>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.BackStackRecord: int getBreadCrumbTitleRes()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.renderscript.Double2: android.renderscript.Double2 div(android.renderscript.Double2,double)>:<public static>:<android.renderscript.Double2>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.900(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.app.IActivityManager: int[] getRunningUserIds()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.accounts.IAccountManager: boolean removeAccountExplicitly(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.FragmentState: void <clinit>()>:<static>:<android.app.FragmentState:android.os.Parcelable>
<android.app.IBackupAgent.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IBackupAgent.Stub:android.os.Binder,android.app.IBackupAgent>
<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.os.Process: java.lang.String getCmdlineForPid(int)>:<public static final>:<android.os.Process>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearActions()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.HwCustAbsWifiManager: void disableInternetNetwork(int,android.net.wifi.HwCustActionListener)>:<public>:<android.net.wifi.HwCustAbsWifiManager:android.net.wifi.IHwCustWifiManager>
<android.database.IBulkCursor: void onMove(int)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.net.IConnectivityManager.Stub.Proxy: int findConnectionTypeForIface(java.lang.String)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.NetworkRequest: int describeContents()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.WifiScanner.OperationResult.1: android.net.wifi.WifiScanner.OperationResult[] newArray(int)>:<public>:<android.net.wifi.WifiScanner.OperationResult.1:android.os.Parcelable.Creator>
<android.app.UiAutomationConnection: void throwIfShutdownLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.app.ActivityTransitionCoordinator: java.lang.Runnable access.202(android.app.ActivityTransitionCoordinator,java.lang.Runnable)>:<static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>:<public abstract>:<android.net.INetworkStatsSession:android.os.IInterface>
<android.os.RecoverySystem.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.os.RecoverySystem.1:android.content.BroadcastReceiver>
<android.os.ISchedulingPolicyService.Stub: android.os.ISchedulingPolicyService asInterface(android.os.IBinder)>:<public static>:<android.os.ISchedulingPolicyService.Stub:android.os.Binder,android.os.ISchedulingPolicyService>
<android.database.CursorWrapper: int getPosition()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.storage.IMountService.Stub.Proxy: void runMaintenance()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.webkit.ClientCertRequest: void cancel()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.net.DhcpResults: java.lang.String toString()>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.filterfw.core.GenerateProgramPort: java.lang.Class type()>:<public abstract>:<android.filterfw.core.GenerateProgramPort:java.lang.annotation.Annotation>
<android.os.CommonTimeConfig: int getClientSyncInterval()>:<public>:<android.os.CommonTimeConfig>
<android.os.StrictMode: void readAndHandleBinderCallViolations(android.os.Parcel)>:<static>:<android.os.StrictMode>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>:<public>:<android.app.WallpaperManager>
<android.ddm.DdmHandleHello: void <init>()>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.app.ContextImpl: android.os.DropBoxManager createDropBoxManager()>:<static>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Byte4: void sub(byte)>:<public>:<android.renderscript.Byte4>
<android.app.AppOpsManager.PackageOps.1: void <init>()>:<>:<android.app.AppOpsManager.PackageOps.1:android.os.Parcelable.Creator>
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2100(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.Canvas.VertexMode: void <clinit>()>:<static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.app.backup.IFullBackupRestoreObserver.Stub: android.app.backup.IFullBackupRestoreObserver asInterface(android.os.IBinder)>:<public static>:<android.app.backup.IFullBackupRestoreObserver.Stub:android.os.Binder,android.app.backup.IFullBackupRestoreObserver>
<android.graphics.Color: void nativeRGBToHSV(int,int,int,float[])>:<private static native>:<android.graphics.Color>
<android.os.INetworkManagementService.Stub.Proxy: void tetherInterface(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiScanner: void init()>:<private>:<android.net.wifi.WifiScanner>
<android.app.UiAutomationConnection: android.graphics.Bitmap takeScreenshot(int,int)>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.os.BatteryStats: int getDischargeStartLevel()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.INetworkScoreService.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkScoreService.Stub:android.os.Binder,android.net.INetworkScoreService>
<android.emoji.EmojiFactory: android.emoji.EmojiFactory newInstance(java.lang.String)>:<public static native>:<android.emoji.EmojiFactory>
<android.app.IAlarmManager.Stub.Proxy: void removeDeskClockAlarm()>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.app.backup.IRestoreSession.Stub: void <init>()>:<public>:<android.app.backup.IRestoreSession.Stub:android.os.Binder,android.app.backup.IRestoreSession>
<android.graphics.drawable.Ripple: void onHotspotBoundsChanged()>:<public>:<android.graphics.drawable.Ripple>
<android.graphics.drawable.VectorDrawable.VGroup: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.app.ActivityView.ActivityContainerWrapper: void checkEmbeddedAllowed(android.content.Intent)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.app.ActivityView.ActivityContainerWrapper: int getDisplayId()>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.transition.ChangeImageTransform: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.net.ScoredNetwork: boolean equals(java.lang.Object)>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.graphics.Matrix.ScaleToFit: void <clinit>()>:<static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.http.Connection: void <clinit>()>:<static>:<android.net.http.Connection>
<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfoForWifi()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.net.IConnectivityManager: java.lang.String getMobileProvisioningUrl()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.LinkQualityInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void setForeignKeyModeFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.webkit.WebViewProvider: void clearHistory()>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.Mesh.Primitive: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.os.IMultiWinServiceCallBack: void multiWindowStatus(boolean)>:<public abstract>:<android.os.IMultiWinServiceCallBack:android.os.IInterface>
<android.app.DownloadManager: void <clinit>()>:<static>:<android.app.DownloadManager>
<android.os.JankEventData.1: android.os.JankEventData createFromParcel(android.os.Parcel)>:<public>:<android.os.JankEventData.1:android.os.Parcelable.Creator>
<android.app.ActivityThread: void handleRelaunchActivity(android.app.ActivityThread.ActivityClientRecord)>:<private>:<android.app.ActivityThread>
<android.filterfw.core.Filter: int getNumberOfInputs()>:<public final>:<android.filterfw.core.Filter>
<android.app.admin.IDevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.hwtheme.HwThemeManagerDummy: void updateSimpleUIConfig(android.content.ContentResolver,android.content.res.Configuration,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.os.BatteryManagerInternal: int getPlugType()>:<public abstract>:<android.os.BatteryManagerInternal>
<android.net.INetworkPolicyManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkPolicyManager.Stub:android.os.Binder,android.net.INetworkPolicyManager>
<android.database.BulkCursorToCursorAdaptor: void close()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.transition.TransitionManager: java.util.ArrayList access.000()>:<static>:<android.transition.TransitionManager>
<android.accounts.ChooseAccountTypeActivity: java.util.ArrayList access.000(android.accounts.ChooseAccountTypeActivity)>:<static>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.admin.DeviceAdminInfo.1: void <init>()>:<>:<android.app.admin.DeviceAdminInfo.1:android.os.Parcelable.Creator>
<android.app.StatusBarManager: void removeIcon(java.lang.String)>:<public>:<android.app.StatusBarManager>
<android.net.dhcp.DhcpAckPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.os.Bundle: void putFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4x(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: void <clinit>()>:<static>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.AppImportanceMonitor.1: void onProcessDied(int,int)>:<public>:<android.app.AppImportanceMonitor.1:android.app.IProcessObserver.Stub,android.os.Binder>
<android.graphics.Bitmap: boolean nativeHasAlpha(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IPowerManager.Stub.Proxy: void userActivity(long,int,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.FragmentTransaction: android.app.FragmentTransaction detach(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.wifi.IWifiManager: java.util.List getChannelList()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.Instrumentation: boolean access.100(android.app.Instrumentation)>:<static>:<android.app.Instrumentation>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiManager: boolean isEnhancedPowerReportingSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.BatteryStats.HistoryEventTracker: void <init>()>:<public>:<android.os.BatteryStats.HistoryEventTracker>
<android.net.LinkQualityInfo: int getTheoreticalLatency()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>:<public abstract>:<android.webkit.WebSettings>
<android.app.job.JobInfo: long getMinLatencyMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.Outline: float getAlpha()>:<public>:<android.graphics.Outline>
<android.app.LoadedApk: java.lang.String getAppDir()>:<public>:<android.app.LoadedApk>
<android.renderscript.RenderScript: void finish()>:<public>:<android.renderscript.RenderScript>
<android.os.BaseBundle: void putFloatArray(java.lang.String,float[])>:<>:<android.os.BaseBundle>
<android.graphics.Paint: float native_measureText(java.lang.String,int,int,int)>:<private native>:<android.graphics.Paint>
<android.renderscript.Float2: void div(float)>:<public>:<android.renderscript.Float2>
<android.webkit.WebView: android.graphics.Picture capturePicture()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.mtp.HwMtpDatabaseManagerDummy: android.mtp.HwMtpDatabaseManager getDefault()>:<public static>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.app.LoadedApk.ServiceDispatcher.RunConnection: void run()>:<public>:<android.app.LoadedApk.ServiceDispatcher.RunConnection:java.lang.Runnable>
<android.database.sqlite.SQLiteConnection: boolean nativeIsReadOnly(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedVectorDrawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.wifi.HwWifiCHRService: void updateWifiState(int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.job.JobInfo.Builder: android.os.PersistableBundle access.100(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.os.Parcel: void <clinit>()>:<static>:<android.os.Parcel>
<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.SearchDialog: boolean show(android.content.ComponentName,android.os.Bundle)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.app.Activity: android.app.Application getApplication()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.hwtheme.HwThemeManager: boolean isTAlarms(java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>:<public static native>:<android.opengl.Visibility>
<android.net.NetworkFactory.NetworkRequestInfo: void <init>(android.net.NetworkFactory,android.net.NetworkRequest,int)>:<public>:<android.net.NetworkFactory.NetworkRequestInfo>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiCHRStateManager: void updateScreenStatus(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.GLFrame: boolean setNativeFloats(float[])>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.drawable.VectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLSurfaceView: boolean access.900(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.renderscript.Font.FontFamily: void <init>(android.renderscript.Font.1)>:<>:<android.renderscript.Font.FontFamily>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readFullLongArray(java.io.DataInputStream)>:<public static>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.webkit.WebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)>:<public>:<android.webkit.WebChromeClient>
<android.os.Parcel: byte[] createByteArray()>:<public final>:<android.os.Parcel>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.NetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>:<protected>:<android.net.NetworkFactory:android.os.Handler>
<android.app.IUiModeManager.Stub.Proxy: void setNightMode(int)>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.os.IHDMIConnectService: void setHDCPEnable(boolean)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glLoadIdentity()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread.Idler: void <init>(android.app.ActivityThread,android.app.ActivityThread.1)>:<>:<android.app.ActivityThread.Idler:android.os.MessageQueue.IdleHandler>
<android.os.BatteryStats.HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>:<public>:<android.os.BatteryStats.HistoryEventTracker>
<android.accounts.AccountManager.2: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String[])>:<>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.os.MessageQueue: void nativePollOnce(long,int)>:<private static native>:<android.os.MessageQueue>
<android.app.IActivityManager: void activitySlept(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setAvailableOffline(boolean)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.renderscript.Long4: void mul(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>:<public>:<android.filterfw.core.Frame>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>:<public>:<android.graphics.Canvas>
<android.os.storage.IMountService.Stub.Proxy: void finishMediaUpdate()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.InterfaceConfiguration.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.InterfaceConfiguration.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.renderscript.Allocation: void validateIsInt8()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>:<public abstract>:<android.accounts.IAccountManagerResponse:android.os.IInterface>
<android.renderscript.Float4: void setValues(float,float,float,float)>:<public>:<android.renderscript.Float4>
<android.graphics.drawable.ClipDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onPrintJobStateChanged(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.Debug.MemoryInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.Debug.MemoryInfo.1:android.os.Parcelable.Creator>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.graphics.pdf.PdfRenderer: void nativeRenderPage(long,long,long,int,int,int,int,long,int)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.Long4: long elementSum()>:<public>:<android.renderscript.Long4>
<android.os.Parcel: void writeFloat(float)>:<public final>:<android.os.Parcel>
<android.net.MobileLinkQualityInfo: int getCdmaDbm()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.wifi.IWifiManager: void disableEphemeralNetwork(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.800(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.core.GLEnvironment: void deactivate()>:<public>:<android.filterfw.core.GLEnvironment>
<android.app.ActivityThread.ApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLSurfaceView.BaseConfigChooser: int[] filterConfigSpec(int[])>:<private>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.transition.Visibility: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.webkit.WebSettings: void setNavDump(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.LinkQualityInfo: void setNormalizedSignalStrength(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.renderscript.Type.CubemapFace: void <clinit>()>:<static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.graphics.Point: int describeContents()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.app.ActivityThread: void access.2300(android.app.ActivityThread,android.app.ActivityThread.BindServiceData)>:<static>:<android.app.ActivityThread>
<android.app.Notification: void <init>(android.os.Parcel)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.net.ConnectivityManager: void setNetworkPreference(int)>:<public>:<android.net.ConnectivityManager>
<android.app.EnterTransitionCoordinator: void viewTransitionComplete()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>()>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLErrorWrapper: void glFrontFace(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.DropBoxManager.Entry: int getFlags()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.webkit.WebViewClient.1: void <init>(android.webkit.WebViewClient)>:<>:<android.webkit.WebViewClient.1:android.content.DialogInterface.OnDismissListener>
<android.os.IHDMIConnectService: void setCecCmd(java.lang.String)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.os.WorkSource: boolean add(int,java.lang.String)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.net.wifi.BatchedScanSettings.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.BatchedScanSettings.1:android.os.Parcelable.Creator>
<android.os.Debug: void setFieldsOn(java.lang.Class,boolean)>:<public static>:<android.os.Debug>
<android.accounts.IAccountManager.Stub: void <init>()>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.app.backup.BackupAgent: void <init>()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.os.StrictMode.AndroidBlockGuardPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.os.Binder: void flushPendingCommands()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.graphics.pdf.PdfEditor: void setTransformAndClip(int,android.graphics.Matrix,android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfEditor>
<android.net.wifi.WifiEnterpriseConfig: int getPhase2Method()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.INetworkManagementEventObserver: void interfaceStatusChanged(java.lang.String,boolean)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>:<public static>:<android.app.ActivityManager>
<android.net.LinkProperties: void setInterfaceName(java.lang.String)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.PacProxySelector: java.net.Proxy proxyFromHostPort(java.net.Proxy.Type,java.lang.String)>:<private static>:<android.net.PacProxySelector:java.net.ProxySelector>
<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>:<public>:<android.app.AppOpsManager>
<android.mtp.HwMtpDatabaseManagerDummy: void hwStoreObjects(int,android.database.Cursor)>:<public>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.mtp.MtpStorageInfo: java.lang.String getDescription()>:<public final>:<android.mtp.MtpStorageInfo>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeExiting(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.graphics.drawable.LayerDrawable: int getOpacity()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.NullVibrator: void <clinit>()>:<static>:<android.os.NullVibrator:android.os.Vibrator>
<android.webkit.WebView.PrivateAccess: void awakenScrollBars(int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.net.VpnService: void <init>()>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.PPPOEInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.PPPOEInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityThread: void handleBindService(android.app.ActivityThread.BindServiceData)>:<private>:<android.app.ActivityThread>
<android.net.NetworkStatsHistory: void setLong(long[],int,long)>:<private static>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.graphics.PointF: java.lang.String toString()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.filterfw.core.FrameFormat: void <init>()>:<protected>:<android.filterfw.core.FrameFormat>
<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.Drawable>
<android.print.PrinterId: int describeContents()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable.StateListState cloneConstantState()>:<>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>:<private>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.app.Activity: void performRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.IWifiManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IWifiManager.Stub:android.os.Binder,android.net.wifi.IWifiManager>
<android.app.job.JobInfo.Builder: long access.700(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.app.ActivityManager.TaskDescription: void setIcon(android.graphics.Bitmap)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.MobileLinkQualityInfo: void setLteRssnr(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.os.StatFs: void restat(java.lang.String)>:<public>:<android.os.StatFs>
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void destroy()>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>:<public static native>:<android.opengl.EGL14>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.NetworkRequest: void <clinit>()>:<static>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.ClipDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.QueuedWork: void <clinit>()>:<static>:<android.app.QueuedWork>
<android.net.NetworkInfo: boolean access.402(android.net.NetworkInfo,boolean)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.ISearchManagerCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.ISearchManagerCallback.Stub.Proxy:android.app.ISearchManagerCallback>
<android.transition.ChangeText: void <init>()>:<public>:<android.transition.ChangeText:android.transition.Transition>
<android.drm.DrmInfo: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.accessibilityservice.AccessibilityServiceInfo: void initFromParcel(android.os.Parcel)>:<private>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.graphics.Movie: int height()>:<public native>:<android.graphics.Movie>
<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>:<protected>:<android.filterfw.core.Filter>
<android.os.IPowerManager.Stub.Proxy: int setChargeHotLimit(int,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.webkit.WebView: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.test.AndroidTestCase: void assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.ActivityManagerProxy: void stopLockTaskMode()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.job.JobInfo.Builder: boolean access.1400(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.opengl.EGLLogWrapper: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.ActivityThread: void handleDispatchPackageBroadcast(int,java.lang.String[])>:<final>:<android.app.ActivityThread>
<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>:<public>:<android.filterfw.core.FilterGraph>
<android.webkit.FindActionModeCallback.NoAction: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.FindActionModeCallback.NoAction:android.view.ActionMode.Callback>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: boolean onPreDraw()>:<public>:<android.app.ActivityTransitionCoordinator.GhostViewListeners:android.view.ViewTreeObserver.OnPreDrawListener>
<android.hwtheme.HwThemeManagerDummy: int getHwThemeLauncherIconSize(android.app.ActivityManager,android.content.res.Resources)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.AlertDialog: android.widget.ListView getListView()>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace valueOf(java.lang.String)>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.net.SSLSessionCache: void <init>(java.lang.Object)>:<public>:<android.net.SSLSessionCache>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.WebViewFactoryProvider.Statics: void enableSlowWholeDocumentDraw()>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.app.WallpaperInfo: void removeThumbnailCache(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.transition.Visibility: int getMode()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.app.ContextImpl: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.mtp.MtpDatabase: int[] getObjectList(int,int,int)>:<private>:<android.mtp.MtpDatabase>
<android.app.Instrumentation.ActivityResult: int getResultCode()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.os.AsyncTask.AsyncTaskResult: void <init>(android.os.AsyncTask,java.lang.Object[])>:<transient>:<android.os.AsyncTask.AsyncTaskResult>
<android.print.PageRange.1: android.print.PageRange[] newArray(int)>:<public>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.net.NetworkRequest.1: android.net.NetworkRequest[] newArray(int)>:<public>:<android.net.NetworkRequest.1:android.os.Parcelable.Creator>
<android.graphics.Bitmap.BitmapFinalizer: void finalize()>:<public>:<android.graphics.Bitmap.BitmapFinalizer>
<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteConnectionPool: int getPriority(int)>:<private static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.opengl.GLLogWrapper: void <init>(javax.microedition.khronos.opengles.GL,java.io.Writer,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.AllocationAdapter: void <init>(long,android.renderscript.RenderScript,android.renderscript.Allocation)>:<>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.Debug: void dumpHprofData(java.lang.String)>:<public static>:<android.os.Debug>
<android.app.ListFragment: void ensureList()>:<private>:<android.app.ListFragment:android.app.Fragment>
<android.net.NetworkFactory: void handleRemoveRequest(android.net.NetworkRequest)>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.app.IWallpaperManagerCallback: void onBlurWallpaperChanged()>:<public abstract>:<android.app.IWallpaperManagerCallback:android.os.IInterface>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.storage.IMountService.Stub.Proxy: boolean isExternalStorageEmulated()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.wifi.ScanSettings: void <init>()>:<public>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.app.Notification.BigTextStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.GradientState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.os.MemoryFile.MemoryInputStream: void reset()>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.opengl.GLErrorWrapper: void glCullFace(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Trace: void traceBegin(long,java.lang.String)>:<public static>:<android.os.Trace>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.ScriptIntrinsicBlend create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.accounts.AbstractAccountAuthenticator.Transport: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.app.SharedPreferencesImpl: java.util.Map getAll()>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.SearchDialog: boolean show(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.Service: void onDestroy()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.INetworkStatsSession.Stub.Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.net.TrafficStats: java.lang.String[] getMobileIfaces()>:<private static>:<android.net.TrafficStats>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.app.job.JobParameters.1: void <init>()>:<>:<android.app.job.JobParameters.1:android.os.Parcelable.Creator>
<android.os.SystemProperties: java.lang.String native_get(java.lang.String,java.lang.String)>:<private static native>:<android.os.SystemProperties>
<android.graphics.Insets: int hashCode()>:<public>:<android.graphics.Insets>
<android.app.LauncherActivity.ActivityAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.PendingIntent.1: void <init>()>:<>:<android.app.PendingIntent.1:android.os.Parcelable.Creator>
<android.net.http.DelegatingSSLSession: void <init>()>:<protected>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.webkit.Plugin.DefaultClickHandler: void onClick(android.content.DialogInterface,int)>:<public>:<android.webkit.Plugin.DefaultClickHandler:android.webkit.Plugin.PreferencesClickHandler,android.content.DialogInterface.OnClickListener>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pGroupList: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.os.Messenger.1: android.os.Messenger createFromParcel(android.os.Parcel)>:<public>:<android.os.Messenger.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.os.IMultiWinServiceCallBack.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IMultiWinServiceCallBack.Stub.Proxy:android.os.IMultiWinServiceCallBack>
<android.net.IpConfiguration: java.lang.String toString()>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.renderscript.Long4: void <init>(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.app.admin.IDevicePolicyManager: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.ISearchManager: boolean launchAssistAction(int,java.lang.String,int)>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.webkit.WebViewProvider.ViewDelegate: boolean performAccessibilityAction(int,android.os.Bundle)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.Dialog: void openOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.IActivityManager: void setProcessLimit(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Atlas.Type: android.graphics.Atlas.Type valueOf(java.lang.String)>:<public static>:<android.graphics.Atlas.Type:java.lang.Enum>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.renderscript.ProgramStore: boolean isColorMaskGreenEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>:<public abstract>:<android.app.job.JobScheduler>
<android.os.FileUtils: boolean isValidFatFilenameChar(char)>:<private static>:<android.os.FileUtils>
<android.net.wifi.WifiManager: java.lang.Object access.300()>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>:<public>:<android.os.storage.StorageManager>
<android.net.http.EventHandler: void data(byte[],int)>:<public abstract>:<android.net.http.EventHandler>
<android.filterfw.io.TextGraphReader.InitFilterCommand: void <init>(android.filterfw.io.TextGraphReader,android.filterfw.core.KeyValueMap)>:<public>:<android.filterfw.io.TextGraphReader.InitFilterCommand:android.filterfw.io.TextGraphReader.Command>
<android.net.NetworkIdentity: java.lang.String getSubscriberId()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.os.storage.IMountService.Stub.Proxy: int decryptStorage(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.renderscript.Float3: void <init>()>:<public>:<android.renderscript.Float3>
<android.os.BatteryStats.Uid.Pkg.Serv: long getStartTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid.Pkg.Serv>
<android.net.INetworkPolicyManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.app.ActivityTransitionState: void startEnter()>:<private>:<android.app.ActivityTransitionState>
<android.app.ExitTransitionCoordinator: void access.1100(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.FragmentBreadCrumbs: android.view.View.OnClickListener access.000(android.app.FragmentBreadCrumbs)>:<static>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.transition.PatternPathMotion: void <init>(android.graphics.Path)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.net.IConnectivityManager: void supplyMessenger(int,android.os.Messenger)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.nsd.DnsSdTxtRecord.1: android.net.nsd.DnsSdTxtRecord createFromParcel(android.os.Parcel)>:<public>:<android.net.nsd.DnsSdTxtRecord.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: long nProgramStoreCreate(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.net.arp.MultiGW: java.lang.String getNextGWMACAddr()>:<public>:<android.net.arp.MultiGW>
<android.webkit.PluginData: void <init>(java.io.InputStream,long,java.util.Map,int)>:<public>:<android.webkit.PluginData>
<android.transition.ChangeText.2: void onAnimationUpdate(android.animation.ValueAnimator)>:<public>:<android.transition.ChangeText.2:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.net.http.IdleCache: void clear()>:<>:<android.net.http.IdleCache>
<android.os.Debug: boolean isDebuggerConnected()>:<public static>:<android.os.Debug>
<android.net.INetworkPolicyManager.Stub.Proxy: void setRestrictBackground(boolean)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>:<public static>:<android.filterfw.format.ObjectFormat>
<android.os.ParcelUuid.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.ParcelUuid.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleExit: void <init>()>:<private>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.renderscript.Int4: android.renderscript.Int4 sub(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.renderscript.Element: int getVectorSize()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.Debug: void startNativeTracing()>:<public static>:<android.os.Debug>
<android.os.Vibrator: void <init>(android.content.Context)>:<protected>:<android.os.Vibrator>
<android.net.Uri.StringUri: android.net.Uri.Builder buildUpon()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.renderscript.RenderScript: int nMeshGetIndexCount(long)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityManager.StackInfo.1: void <init>()>:<>:<android.app.ActivityManager.StackInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.ActivityThread.ApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.print.PrinterInfo: int getStatus()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: int getEncryptionState()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.http.IdleCache: android.net.http.IdleCache.IdleReaper access.302(android.net.http.IdleCache,android.net.http.IdleCache.IdleReaper)>:<static>:<android.net.http.IdleCache>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>:<public static>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.usage.UsageStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.usage.UsageStats.1:android.os.Parcelable.Creator>
<android.app.ActionBar: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar>
<android.webkit.HwFindActionModeCallback: void finish()>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.IBatteryPropertiesRegistrar: int getProperty(int,android.os.BatteryProperty)>:<public abstract>:<android.os.IBatteryPropertiesRegistrar:android.os.IInterface>
<android.os.Parcel: void readDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.app.UiModeManager: void <init>()>:<>:<android.app.UiModeManager>
<android.graphics.drawable.AnimationDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getSuggestActionMsg()>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.net.UrlQuerySanitizer: void clear()>:<protected>:<android.net.UrlQuerySanitizer>
<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>:<public>:<android.os.CancellationSignal>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance(java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.RippleDrawable: boolean cancelExitingRipples()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.BatteryStats: void printmAh(java.io.PrintWriter,double)>:<private>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.webkit.WebViewProvider: android.view.View getZoomControls()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.job.JobInfo: int getBackoffPolicy()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.net.wifi.WifiScanner: int putListener(java.lang.Object)>:<private static>:<android.net.wifi.WifiScanner>
<android.app.DownloadManager.Query: void <init>()>:<public>:<android.app.DownloadManager.Query>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: boolean isVisible()>:<public final>:<android.graphics.drawable.Drawable>
<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.app.FragmentState: android.app.Fragment instantiate(android.app.Activity,android.app.Fragment)>:<public>:<android.app.FragmentState:android.os.Parcelable>
<android.net.ScoredNetwork: void <init>(android.net.NetworkKey,android.net.RssiCurve)>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.app.ActivityManagerProxy: void setFocusedStack(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.RttManager: void <init>(android.content.Context,android.net.wifi.IRttManager)>:<public>:<android.net.wifi.RttManager>
<android.os.storage.MountServiceListener: void <init>()>:<public>:<android.os.storage.MountServiceListener>
<android.app.ContextImpl: boolean deleteDatabase(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ActivityManager.StackInfo: java.lang.String toString()>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.IActivityController.Stub.Proxy: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>:<public>:<android.app.IActivityController.Stub.Proxy:android.app.IActivityController>
<android.graphics.YuvImage: int getHeight()>:<public>:<android.graphics.YuvImage>
<android.filterfw.core.InputPort: boolean acceptsFrame()>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.transition.ChangeTransform.Transforms: boolean equals(java.lang.Object)>:<public>:<android.transition.ChangeTransform.Transforms>
<android.net.http.HttpAuthHeader: java.lang.String getPassword()>:<public>:<android.net.http.HttpAuthHeader>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.ViewGroup)>:<public>:<android.transition.Scene>
<android.app.BackStackRecord: void access.400(android.app.BackStackRecord,android.transition.Transition,android.app.BackStackRecord.TransitionState)>:<static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.webkit.WebView.PrivateAccess: boolean super_performLongClick()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.renderscript.Byte2: void sub(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetherableWifiRegexs()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.INetworkManagementService: void setFirewallEnabled(boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Parcel: int[] createIntArray()>:<public final>:<android.os.Parcel>
<android.app.SearchDialog: void launchQuerySearch()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.renderscript.Long4: void sub(long)>:<public>:<android.renderscript.Long4>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.database.Cursor: int getColumnCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.renderscript.RenderScript: void nAllocationElementData1D(long,int,int,int,byte[],int)>:<>:<android.renderscript.RenderScript>
<android.opengl.GLErrorWrapper: void glFogxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.BitmapFactory>
<android.graphics.drawable.AnimationDrawable.AnimationState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addKernel(android.renderscript.Script.KernelID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.app.ApplicationPackageManager: void configurationChanged()>:<static>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.Parcel: void readStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.net.wifi.p2p.IWifiP2pManager.Stub: void <init>()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub:android.os.Binder,android.net.wifi.p2p.IWifiP2pManager>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction create()>:<public>:<android.renderscript.ProgramVertexFixedFunction.InternalBuilder:android.renderscript.Program.BaseProgramBuilder>
<android.renderscript.Float3: void add(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.net.DhcpStateMachine.RunningState: void enter()>:<public>:<android.net.DhcpStateMachine.RunningState:com.android.internal.util.State>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.app.ActivityThread: void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread.UpdateCompatibilityData)>:<private>:<android.app.ActivityThread>
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()>:<public>:<android.app.UiAutomation>
<android.net.LinkProperties: java.util.List getDnsServers()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void clearDeviceOwner(java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.database.CursorJoiner.Result: void <init>(java.lang.String,int)>:<private>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.os.INetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.core.FilterPort: void clear()>:<public abstract>:<android.filterfw.core.FilterPort>
<android.os.BatteryStats.Uid: void <clinit>()>:<static>:<android.os.BatteryStats.Uid>
<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.lang.String)>:<public static>:<android.net.RouteInfo:android.os.Parcelable>
<android.renderscript.Float4: void <init>(float,float,float,float)>:<public>:<android.renderscript.Float4>
<android.opengl.GLErrorWrapper: void glClear(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.ApplicationPackageManager: boolean isUpgrade()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.admin.DeviceAdminInfo: void <clinit>()>:<static>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.ActionBar: int getTabCount()>:<public abstract>:<android.app.ActionBar>
<android.accounts.AccountManager.11: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle)>:<>:<android.accounts.AccountManager.11:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: void <clinit>()>:<static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.filterfw.core.OutputPort: boolean isReady()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.net.wifi.p2p.WifiP2pWfdInfo.1: android.net.wifi.p2p.WifiP2pWfdInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo.1:android.os.Parcelable.Creator>
<android.app.IServiceConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IServiceConnection.Stub.Proxy:android.app.IServiceConnection>
<android.net.http.HttpAuthHeader: java.lang.String getNonce()>:<public>:<android.net.http.HttpAuthHeader>
<android.filterfw.core.FrameFormat: int hashCode()>:<public>:<android.filterfw.core.FrameFormat>
<android.renderscript.RenderScript: void nContextInitToClient(long)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLErrorWrapper: void glBindRenderbufferOES(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.backup.IBackupManager: java.lang.String getDestinationString(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.print.PrintJobInfo: void setAppId(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.net.Uri.OpaqueUri: java.lang.String toString()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.database.sqlite.SQLiteDoneException: void <init>()>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebView: boolean access.1300(android.webkit.WebView,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Notification.Action: int describeContents()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.renderscript.Long2: void <init>(long)>:<public>:<android.renderscript.Long2>
<android.print.PrintFileDocumentAdapter: android.content.Context access.100(android.print.PrintFileDocumentAdapter)>:<static>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.LinkProperties: int findLinkAddressIndex(android.net.LinkAddress)>:<private>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.IPowerManager.Stub.Proxy: boolean getWakeLockByUid(int,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.os.Debug: void startMethodTracingDdms(int,int,boolean,int)>:<public static>:<android.os.Debug>
<android.net.IConnectivityManager: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Byte2: android.renderscript.Byte2 mul(android.renderscript.Byte2,android.renderscript.Byte2)>:<public static>:<android.renderscript.Byte2>
<android.app.IBackupAgent: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.opengl.GLSurfaceView.ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>:<public>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.app.ExitTransitionCoordinator.2: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.ExitTransitionCoordinator.2:android.transition.Transition.TransitionListenerAdapter>
<android.app.ExitTransitionCoordinator.5: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.5:android.os.Handler>
<android.renderscript.Allocation: void copyFromUnchecked(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.nsd.DnsSdTxtRecord.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.nsd.DnsSdTxtRecord.1:android.os.Parcelable.Creator>
<android.app.IBackupAgent: void fail(java.lang.String)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.app.BackStackState.1: android.app.BackStackState[] newArray(int)>:<public>:<android.app.BackStackState.1:android.os.Parcelable.Creator>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.graphics.Canvas: void setScreenDensity(int)>:<public>:<android.graphics.Canvas>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>:<public>:<android.renderscript.FieldPacker>
<android.app.DownloadManager.Request: void <clinit>()>:<static>:<android.app.DownloadManager.Request>
<android.app.ContextImpl.65: void <init>(android.app.ContextImpl,java.lang.String)>:<>:<android.app.ContextImpl.65:java.lang.Thread>
<android.app.AppOpsManager: java.lang.String opToName(int)>:<public static>:<android.app.AppOpsManager>
<android.webkit.WebView: void checkThread()>:<private>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,java.lang.Object,android.renderscript.Element.DataType,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.pdf.PdfDocument.Page: void access.400(android.graphics.pdf.PdfDocument.Page)>:<static>:<android.graphics.pdf.PdfDocument.Page>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.ActivityView: void startActivity(android.app.PendingIntent)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.os.BatteryStats.HistoryTag: void readFromParcel(android.os.Parcel)>:<public>:<android.os.BatteryStats.HistoryTag>
<android.net.VpnService.Callback: void <init>(android.net.VpnService,android.net.VpnService.1)>:<>:<android.net.VpnService.Callback:android.os.Binder>
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.PowerManager.WakeLock.1: void <init>(android.os.PowerManager.WakeLock)>:<>:<android.os.PowerManager.WakeLock.1:java.lang.Runnable>
<android.mtp.MtpStorage: long getReserveSpace()>:<public final>:<android.mtp.MtpStorage>
<android.net.NetworkQuotaInfo: long getEstimatedBytes()>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.os.StrictMode: boolean conditionallyEnableDebugLogging()>:<public static>:<android.os.StrictMode>
<android.renderscript.FieldPacker: android.renderscript.Byte3 subByte3()>:<public>:<android.renderscript.FieldPacker>
<android.net.ConnectivityManager.LegacyRequest.1: void <init>(android.net.ConnectivityManager.LegacyRequest)>:<>:<android.net.ConnectivityManager.LegacyRequest.1:android.net.ConnectivityManager.NetworkCallback>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getMappedNames()>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.MaskFilter: void <init>()>:<public>:<android.graphics.MaskFilter>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.app.IUiAutomationConnection: void disconnect()>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.os.StrictMode: boolean vmRegistrationLeaksEnabled()>:<public static>:<android.os.StrictMode>
<android.net.wifi.WifiLog: java.lang.Object access.000(android.net.wifi.WifiLog)>:<static>:<android.net.wifi.WifiLog>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>:<public>:<android.app.UiAutomation>
<android.os.StrictMode: void access.1300(android.os.StrictMode.ViolationInfo)>:<static>:<android.os.StrictMode>
<android.os.storage.IMountShutdownObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.storage.IMountShutdownObserver.Stub.Proxy:android.os.storage.IMountShutdownObserver>
<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.os.ParcelFileDescriptor: void finalize()>:<protected>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.opengl.GLES20: void glUseProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.SearchableInfo: int getVoicePromptTextId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.UiAutomation: android.app.UiAutomation.OnAccessibilityEventListener access.500(android.app.UiAutomation)>:<static>:<android.app.UiAutomation>
<android.graphics.ImageFormat: boolean isPublicFormat(int)>:<public static>:<android.graphics.ImageFormat>
<android.app.INotificationManager: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.os.Parcel: int dataSize()>:<public final>:<android.os.Parcel>
<android.graphics.Bitmap: void nativeGetPixels(long,int[],int,int,int,int,int,int)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.print.PrinterInfo: java.lang.String access.202(android.print.PrinterInfo,java.lang.String)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.ActivityThread: void access.1700(android.app.ActivityThread,android.app.ActivityThread.ResultData)>:<static>:<android.app.ActivityThread>
<android.net.LocalSocketImpl: int access.300(android.net.LocalSocketImpl,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.ParcelableParcel.1: void <init>()>:<>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.graphics.drawable.LayerDrawable.LayerState: int access.100(android.graphics.drawable.LayerDrawable.LayerState)>:<static>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.os.BaseBundle: int size()>:<public>:<android.os.BaseBundle>
<android.database.Cursor: void close()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActionBar: void setCustomView(int)>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebSettings.TextSize: void <clinit>()>:<static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.os.storage.MountServiceListener: void onStorageStateChange(java.lang.String,java.lang.String,java.lang.String)>:<>:<android.os.storage.MountServiceListener>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>:<public>:<android.mtp.MtpDevice>
<android.net.Uri.Builder: android.net.Uri.Builder authority(android.net.Uri.Part)>:<>:<android.net.Uri.Builder>
<android.net.wifi.SupplicantState: void <init>(java.lang.String,int)>:<private>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.INotificationManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.INotificationManager.Stub:android.os.Binder,android.app.INotificationManager>
<android.app.backup.RestoreDescription: void <init>(java.lang.String,int)>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.String)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.pdf.PdfEditor: boolean nativeGetPageCropBox(long,int,android.graphics.Rect)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.os.BatteryStats.Timer: void logState(android.util.Printer,java.lang.String)>:<public abstract>:<android.os.BatteryStats.Timer>
<android.hwtheme.HwThemeManager.IHwThemeManager: void addSimpleUIConfig(android.content.pm.PackageParser.Activity)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.webkit.WebViewProvider.ViewDelegate: void onAttachedToWindow()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.wifi.IHwCustWifiManager: void initHwCustWifiManager()>:<public abstract>:<android.net.wifi.IHwCustWifiManager>
<android.renderscript.Short4: void sub(short)>:<public>:<android.renderscript.Short4>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.print.IPrintManager.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.app.backup.WallpaperBackupHelper: void <init>(android.content.Context,java.lang.String[],java.lang.String[])>:<public>:<android.app.backup.WallpaperBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.app.ExpandableListActivity: void <init>()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.AlertDialog: void <init>(android.content.Context,int,boolean)>:<>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.graphics.Paint: float getFontSpacing()>:<public>:<android.graphics.Paint>
<android.net.wifi.WifiScanner: void configureWifiChange(android.net.wifi.WifiScanner.WifiChangeSettings)>:<public>:<android.net.wifi.WifiScanner>
<android.accounts.Account.1: void <init>()>:<>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Long3: void mod(long)>:<public>:<android.renderscript.Long3>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.net.wifi.HwWifiCHRService: int getProxyStatus()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.Activity: void onTrimMemory(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkUtils: java.net.InetAddress unparcelInetAddress(android.os.Parcel)>:<protected static>:<android.net.NetworkUtils>
<android.opengl.GLSurfaceView.GLThread: void requestRender()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.net.wifi.WifiNetworkConnectionStatistics: void <init>()>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.net.Uri.StringUri: android.net.Uri.Part getAuthorityPart()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.Notification.MediaStyle: void hideRightIcon(android.widget.RemoteViews)>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.graphics.drawable.Ripple: void setRadiusGravity(float)>:<public>:<android.graphics.drawable.Ripple>
<android.net.http.AndroidHttpClient.CurlLogger: void <init>(android.net.http.AndroidHttpClient)>:<private>:<android.net.http.AndroidHttpClient.CurlLogger:org.apache.http.HttpRequestInterceptor>
<android.renderscript.ProgramVertexFixedFunction.Constants: android.renderscript.Allocation getAllocation()>:<>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.database.MergeCursor: void close()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.graphics.Canvas: boolean isRecordingFor(java.lang.Object)>:<public>:<android.graphics.Canvas>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.trust.ITrustManager: void reportEnabledTrustAgentsChanged(int)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.webkit.WebViewProvider: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.Notification.Style: void addExtras(android.os.Bundle)>:<public>:<android.app.Notification.Style>
<android.graphics.drawable.AnimatedStateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.print.PrinterCapabilitiesInfo.Builder: void throwIfDefaultAlreadySpecified(int)>:<private>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.accessibilityservice.IAccessibilityServiceClient.Stub: void <init>()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceClient>
<android.renderscript.ProgramStore.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.app.IServiceConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IServiceConnection.Stub:android.os.Binder,android.app.IServiceConnection>
<android.app.ActivityThread.AppBindData: java.lang.String toString()>:<public>:<android.app.ActivityThread.AppBindData>
<android.mtp.MtpServer: void sendObjectRemoved(int)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.net.LinkProperties: boolean isIdenticalTcpBufferSizes(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.IWallpaperManager.Stub.Proxy: android.app.WallpaperInfo getWallpaperInfo()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.os.SystemService: boolean isRunning(java.lang.String)>:<public static>:<android.os.SystemService>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState valueOf(java.lang.String)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>:<>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.http.Headers: void setLastModified(java.lang.String)>:<public>:<android.net.http.Headers>
<android.os.RemoteCallbackList: int beginBroadcast()>:<public>:<android.os.RemoteCallbackList>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Byte4: void <init>(byte,byte,byte,byte)>:<public>:<android.renderscript.Byte4>
<android.net.NetworkInfo: boolean isFailover()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ActivityTransitionCoordinator: void setSharedElementMatrices()>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>:<public static native>:<android.opengl.EGL14>
<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.IEthernetManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.IEthernetManager.Stub:android.os.Binder,android.net.IEthernetManager>
<android.transition.SidePropagation: void <init>()>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.app.Application: void onCreate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.webkit.Plugin: java.lang.String access.100(android.webkit.Plugin)>:<static>:<android.webkit.Plugin>
<android.net.wifi.WifiConfiguration.2: void <init>(android.net.wifi.WifiConfiguration)>:<>:<android.net.wifi.WifiConfiguration.2:java.util.Comparator>
<android.os.UserManager: int getUserHandle(int)>:<public>:<android.os.UserManager>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.app.job.JobParameters.1: android.app.job.JobParameters createFromParcel(android.os.Parcel)>:<public>:<android.app.job.JobParameters.1:android.os.Parcelable.Creator>
<android.os.FileObserver.ObserverThread: void <init>()>:<public>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.net.wifi.WifiManager: void setAllowScansWithTraffic(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.IWifiManager.Stub.Proxy: void startLocationRestrictedScan(android.os.WorkSource)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.filterfw.core.GLFrame: void initNew(boolean)>:<private>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.os.StrictMode.9: void <init>()>:<>:<android.os.StrictMode.9:android.util.Singleton>
<android.app.IActivityPendingResult.Stub: void <init>()>:<public>:<android.app.IActivityPendingResult.Stub:android.os.Binder,android.app.IActivityPendingResult>
<android.renderscript.Long3: long length()>:<public>:<android.renderscript.Long3>
<android.app.Activity: void setSecondaryProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.PrintFileDocumentAdapter: java.io.File access.000(android.print.PrintFileDocumentAdapter)>:<static>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.os.IMultiWinService: void clearMultiWinTaskList()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.usage.UsageEvents: boolean hasNextEvent()>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.net.wifi.BatchedScanSettings: int hashCode()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.hwtheme.HwThemeManager: void initForThemeFont(android.content.res.Configuration)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.print.IPrintDocumentAdapter.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,byte[],android.app.PendingIntent)>:<public static>:<android.hsm.HwSystemManager>
<android.os.BadParcelableException: void <init>(java.lang.String)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Int3: void mul(int)>:<public>:<android.renderscript.Int3>
<android.app.ExitTransitionCoordinator: void access.400(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.database.sqlite.SQLiteConnection.OperationLog: boolean endOperationDeferLogLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.app.Activity: void onContentChanged()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Frame: java.lang.Object getObjectValue()>:<public abstract>:<android.filterfw.core.Frame>
<android.webkit.UrlInterceptHandler: android.webkit.CacheManager.CacheResult service(java.lang.String,java.util.Map)>:<public abstract>:<android.webkit.UrlInterceptHandler>
<android.filterfw.core.ProgramVariable: void setValue(java.lang.Object)>:<public>:<android.filterfw.core.ProgramVariable>
<android.renderscript.Float2: void div(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.graphics.Paint: long native_initWithPaint(long)>:<private static native>:<android.graphics.Paint>
<android.app.LoadedApk: java.lang.String getLibDir()>:<public>:<android.app.LoadedApk>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.IVibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>:<public abstract>:<android.os.IVibratorService:android.os.IInterface>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize getStandardMediaSizeById(java.lang.String)>:<public static>:<android.print.PrintAttributes.MediaSize>
<android.renderscript.Element: boolean isComplex()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.Rect: java.lang.String toShortString(java.lang.StringBuilder)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.wifi.IRttManager.Stub: void <init>()>:<public>:<android.net.wifi.IRttManager.Stub:android.os.Binder,android.net.wifi.IRttManager>
<android.app.ActivityManager.CpuStatInfo: int describeContents()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.Paint: void setLinearText(boolean)>:<public native>:<android.graphics.Paint>
<android.app.backup.BackupAgent.FailRunnable: void <init>(java.lang.String)>:<>:<android.app.backup.BackupAgent.FailRunnable:java.lang.Runnable>
<android.app.backup.BackupManager: void setAutoRestore(boolean)>:<public>:<android.app.backup.BackupManager>
<android.renderscript.RenderScript.Priority: void <clinit>()>:<static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.os.BatteryStats: int getWifiSupplStateCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.print.PageRange: int getEnd()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.net.ProxyInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.ProxyInfo.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: int getHeight()>:<public>:<android.graphics.Canvas>
<android.renderscript.Matrix3f: float[] getArray()>:<public>:<android.renderscript.Matrix3f>
<android.app.Dialog: void onWindowDismissed()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.hwcontrol.HwWidgetFactory.Factory: android.widget.IHwSplineOverScroller getHwSplineOverScrollerImpl(android.widget.OverScroller.SplineOverScroller,android.content.Context)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Picture: void nativeEndRecording(long)>:<private static native>:<android.graphics.Picture>
<android.filterfw.FilterFunctionEnvironment: void <init>(android.filterfw.core.FrameManager)>:<public>:<android.filterfw.FilterFunctionEnvironment:android.filterfw.MffEnvironment>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ContextImpl.45: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.45:android.app.ContextImpl.ServiceFetcher>
<android.net.SSLCertificateSocketFactory: void verifyHostname(java.net.Socket,java.lang.String)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.os.Bundle: void putSize(java.lang.String,android.util.Size)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.webkit.WebViewFactory: boolean access.200(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<static>:<android.webkit.WebViewFactory>
<android.app.ActivityManager: java.util.List getRunningExternalApplications()>:<public>:<android.app.ActivityManager>
<android.app.Activity: void onStop()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.Explode: float calculateMaxDistance(android.view.View,int,int)>:<private static>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.renderscript.Short2: void <init>(short)>:<public>:<android.renderscript.Short2>
<android.app.ContextImpl: void setTheme(int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.mtp.MtpDevice: long native_get_parent(int)>:<private native>:<android.mtp.MtpDevice>
<android.graphics.drawable.StateListDrawable.StateListState: void mutate()>:<private>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.BaseObj getObject()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.app.LauncherActivity: void <init>()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.SystemService.State: void <clinit>()>:<static>:<android.os.SystemService.State:java.lang.Enum>
<android.net.wifi.WifiInfo: boolean access.302(android.net.wifi.WifiInfo,boolean)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.RenderScript: long nFileA3DCreateFromFile(java.lang.String)>:<>:<android.renderscript.RenderScript>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setShowRunningNotification(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2200(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.drawable.RotateDrawable.RotateState: void <init>(android.graphics.drawable.RotateDrawable.RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.os.StrictMode: boolean access.800()>:<static>:<android.os.StrictMode>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.MemoryFile.MemoryInputStream: long skip(long)>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.transition.ChangeTransform.GhostListener: void onTransitionResume(android.transition.Transition)>:<public>:<android.transition.ChangeTransform.GhostListener:android.transition.Transition.TransitionListenerAdapter>
<android.app.IProcessObserver: void onForegroundActivitiesChanged(int,int,boolean)>:<public abstract>:<android.app.IProcessObserver:android.os.IInterface>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.hwcontrol.HwWidgetFactory.Factory: java.lang.Object getHwFastScroller(android.widget.AbsListView,int,android.content.Context)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.net.ProxyInfo: void <clinit>()>:<static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.filterfw.core.FilterFunction: void tearDown()>:<public>:<android.filterfw.core.FilterFunction>
<android.transition.TransitionSet: android.transition.Transition setSceneRoot(android.view.ViewGroup)>:<volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.http.ErrorStrings: int getResource(int)>:<public static>:<android.net.http.ErrorStrings>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: void <init>(java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.JankBdData: java.util.List getContentValues(java.lang.String[])>:<public>:<android.os.JankBdData:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean isBatchedScanSupported()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.RenderScript: void rsnContextBindProgramVertex(long,long)>:<native>:<android.renderscript.RenderScript>
<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.Transition: android.transition.Transition addTarget(int)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>:<public>:<android.graphics.Paint>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType,int)>:<public static>:<android.renderscript.RenderScript>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.INotificationManager: void registerListener(android.service.notification.INotificationListener,android.content.ComponentName,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.net.wifi.HwWifiCHRService: int getWIFITOPDP()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.CommonTimeConfig: void <init>()>:<public>:<android.os.CommonTimeConfig>
<android.graphics.Bitmap: android.graphics.Bitmap nativeCopy(long,int,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)>:<public>:<android.net.http.Headers>
<android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>:<public>:<android.app.Notification.Builder>
<android.transition.TransitionUtils: android.transition.Transition mergeTransitions(android.transition.Transition[])>:<public static transient>:<android.transition.TransitionUtils>
<android.filterfw.core.OutputPort: void setBasePort(android.filterfw.core.InputPort)>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.os.INetworkManagementService.Stub.Proxy: void disableNat(java.lang.String,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String,java.lang.String)>:<private>:<android.net.http.CertificateChainValidator>
<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>:<private>:<android.net.http.Connection>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int)>:<public static>:<android.filterfw.format.ObjectFormat>
<android.net.wifi.WifiInfo: void <clinit>()>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.storage.IMountService: void shutdown(android.os.storage.IMountShutdownObserver)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.MemoryFile.MemoryOutputStream: void <init>(android.os.MemoryFile)>:<private>:<android.os.MemoryFile.MemoryOutputStream:java.io.OutputStream>
<android.net.wifi.WifiConfiguration.1: int compare(java.lang.Object,java.lang.Object)>:<public>:<android.net.wifi.WifiConfiguration.1:java.util.Comparator>
<android.print.PrintAttributes: java.lang.String toString()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glColor4f(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkCapabilities: boolean satisfiedByLinkBandwidths(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.Region: void translate(int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.app.ContextImpl.50: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.50:android.app.ContextImpl.ServiceFetcher>
<android.graphics.Canvas: void native_restoreToCount(long,int)>:<private static native>:<android.graphics.Canvas>
<android.opengl.GLErrorWrapper: boolean glIsEnabled(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.Ripple: void cancel()>:<public>:<android.graphics.drawable.Ripple>
<android.app.Notification.Action: void <clinit>()>:<static>:<android.app.Notification.Action:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition addTarget(android.view.View)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.database.CursorWindow: void freeLastRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.appwidget.AppWidgetHost: boolean access.000(android.appwidget.AppWidgetHost)>:<static>:<android.appwidget.AppWidgetHost>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.usage.IUsageStatsManager.Stub: android.app.usage.IUsageStatsManager asInterface(android.os.IBinder)>:<public static>:<android.app.usage.IUsageStatsManager.Stub:android.os.Binder,android.app.usage.IUsageStatsManager>
<android.net.NetworkIdentity: int getType()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.os.IMultiWinService: boolean isMultiWin(android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.PointF: int describeContents()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.app.ActionBar: android.app.ActionBar.Tab getTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.net.wifi.WifiConfiguration: void setProxySettings(android.net.IpConfiguration.ProxySettings)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.os.PowerManager.WakeLock: void acquire(long)>:<public>:<android.os.PowerManager.WakeLock>
<android.app.LoadedApk.ServiceDispatcher: void validate(android.content.Context,android.os.Handler)>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetheredDhcpRanges()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Presentation: void access.100(android.app.Presentation)>:<static>:<android.app.Presentation:android.app.Dialog>
<android.app.NativeActivity: void onInputQueueDestroyed(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.IPowerManager: int setColorTemperature(int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.net.nsd.NsdManager.RegistrationListener: void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.WebViewDelegate: void callDrawGlFunction(android.graphics.Canvas,long)>:<public>:<android.webkit.WebViewDelegate>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadPreviewImage(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.app.backup.RestoreDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.graphics.Matrix: void setRotate(float)>:<public>:<android.graphics.Matrix>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiConfiguration: void setIpAssignment(android.net.IpConfiguration.IpAssignment)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.MediaRouteButton: android.app.Activity getActivity()>:<private>:<android.app.MediaRouteButton:android.view.View>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOESBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11Ext>
<android.app.job.JobInfo: long getInitialBackoffMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect)>:<>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityThread.CreateBackupAgentData: void <init>()>:<>:<android.app.ActivityThread.CreateBackupAgentData>
<android.drm.DrmManagerClient.OnEventListener: void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnEventListener>
<android.graphics.Path: void lineTo(float,float)>:<public>:<android.graphics.Path>
<android.graphics.drawable.ShapeDrawable.ShapeState: void <init>(android.graphics.drawable.ShapeDrawable.ShapeState)>:<>:<android.graphics.drawable.ShapeDrawable.ShapeState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManager.ProcessErrorStateInfo: void <clinit>()>:<static>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.transition.ChangeText: void access.000(android.transition.ChangeText,android.widget.EditText,int,int)>:<static>:<android.transition.ChangeText:android.transition.Transition>
<android.webkit.WebViewClient: boolean access.002(android.webkit.WebViewClient,boolean)>:<static>:<android.webkit.WebViewClient>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.app.ActivityThread.ApplicationThread: void scheduleCrash(java.lang.String)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.hwtheme.HwThemeManager.IHwThemeManager: java.io.InputStream getDefaultWallpaperIS(android.content.Context)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.transition.ArcMotion: float getMaximumAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.http.RequestQueue: void <init>(android.content.Context)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.graphics.Paint: void setCompatibilityScaling(float)>:<public>:<android.graphics.Paint>
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>:<public static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.net.dhcp.DhcpPacket: java.net.InetAddress readIpAddress(java.nio.ByteBuffer)>:<private static>:<android.net.dhcp.DhcpPacket>
<android.os.BatteryStats.Uid: void noteWifiStoppedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ActivityThread.ActivityClientRecord: boolean isPreHoneycomb()>:<public>:<android.app.ActivityThread.ActivityClientRecord>
<android.graphics.Canvas.EdgeType: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.graphics.Paint: void setLetterSpacing(float)>:<public>:<android.graphics.Paint>
<android.os.MemoryFile: void deactivate()>:<>:<android.os.MemoryFile>
<android.app.IStopUserCallback: void userStopAborted(int)>:<public abstract>:<android.app.IStopUserCallback:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES20: void glVertexAttribPointerBounds(int,int,int,boolean,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES20>
<android.app.Application: void registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.os.StrictMode: java.lang.ThreadLocal access.700()>:<static>:<android.os.StrictMode>
<android.os.Build: java.lang.String getString(java.lang.String)>:<private static>:<android.os.Build>
<android.app.ActionBar: void setHomeButtonEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.app.Dialog.ListenersHandler: void <init>(android.app.Dialog)>:<public>:<android.app.Dialog.ListenersHandler:android.os.Handler>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>:<public>:<android.graphics.Movie>
<android.app.LoadedApk.ReceiverDispatcher: void initAnrWarning()>:<private>:<android.app.LoadedApk.ReceiverDispatcher>
<android.graphics.Bitmap: void nativeErase(long,int)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.accounts.Account: int describeContents()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.graphics.Matrix: boolean native_rectStaysRect(long)>:<private static native>:<android.graphics.Matrix>
<android.net.wifi.WifiCHRStateManager: void resetWhenDisconnect()>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.Notification.Builder: android.widget.RemoteViews access.700(android.app.Notification.Builder,int)>:<static>:<android.app.Notification.Builder>
<android.os.INetworkManagementService: void addIdleTimer(java.lang.String,int,int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.LinkProperties: java.util.List getAllRoutes()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.PathDashPathEffect.Style: void <clinit>()>:<static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.opengl.GLLogWrapper: java.lang.String glGetString(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebViewClient.2: void onClick(android.content.DialogInterface,int)>:<public>:<android.webkit.WebViewClient.2:android.content.DialogInterface.OnClickListener>
<android.net.http.AndroidHttpClientConnection: void assertNotOpen()>:<private>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.renderscript.Int3: void setAt(int,int)>:<public>:<android.renderscript.Int3>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.ContextImpl: java.io.File access.200(android.app.ContextImpl)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.ApplicationThreadProxy: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.Uri.PathPart: android.net.Uri.PathPart 'from'(java.lang.String,java.lang.String)>:<static>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.renderscript.Short4: void sub(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.app.ActivityThread: void handleReceiver(android.app.ActivityThread.ReceiverData)>:<private>:<android.app.ActivityThread>
<android.database.BulkCursorDescriptor: void <clinit>()>:<static>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.INetworkScoreCache.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.INetworkScoreCache.Stub.Proxy:android.net.INetworkScoreCache>
<android.filterfw.core.NativeBuffer: void <init>()>:<public>:<android.filterfw.core.NativeBuffer>
<android.webkit.HwFindActionModeCallback: android.graphics.drawable.Drawable access.900(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.drawable.AnimatedStateListDrawable: boolean selectTransition(int)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ActivityThread: void handleSleeping(android.os.IBinder,boolean)>:<private>:<android.app.ActivityThread>
<android.app.SearchManager.OnCancelListener: void onCancel()>:<public abstract>:<android.app.SearchManager.OnCancelListener>
<android.renderscript.Short2: short length()>:<public>:<android.renderscript.Short2>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection.PreparedStatement,android.database.sqlite.SQLiteConnection.PreparedStatement)>:<protected>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.os.Parcel: void closeFileDescriptor(java.io.FileDescriptor)>:<static native>:<android.os.Parcel>
<android.renderscript.Double2: void addAt(int,double)>:<public>:<android.renderscript.Double2>
<android.app.ActivityThread.CreateBackupAgentData: java.lang.String toString()>:<public>:<android.app.ActivityThread.CreateBackupAgentData>
<android.opengl.GLErrorWrapper: void glDrawArrays(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.admin.DeviceAdminInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.admin.DeviceAdminInfo.1:android.os.Parcelable.Creator>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.drawable.AnimatedStateListDrawable: void addState(int[],android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.Transition addTarget(int)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ContextImpl.44: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.44:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.RenderScript: long rsnTypeCreate(long,long,int,int,int,boolean,boolean,int)>:<native>:<android.renderscript.RenderScript>
<android.net.arp.MultiGW: java.util.ArrayList getGWMACAddrList()>:<public>:<android.net.arp.MultiGW>
<android.net.http.LoggingEventHandler: void <init>()>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.net.nsd.DnsSdTxtRecord: java.lang.String toString()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.usage.ConfigurationStats: android.content.res.Configuration getConfiguration()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.app.IActivityContainer.Stub: android.app.IActivityContainer asInterface(android.os.IBinder)>:<public static>:<android.app.IActivityContainer.Stub:android.os.Binder,android.app.IActivityContainer>
<android.os.ResultReceiver.MyRunnable: void <init>(android.os.ResultReceiver,int,android.os.Bundle)>:<>:<android.os.ResultReceiver.MyRunnable:java.lang.Runnable>
<android.net.wifi.p2p.WifiP2pGroupList.1: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>:<protected volatile>:<android.net.wifi.p2p.WifiP2pGroupList.1:android.util.LruCache>
<android.app.LoadedApk: void <init>(android.app.ActivityThread)>:<>:<android.app.LoadedApk>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setMipmaps(boolean)>:<public>:<android.renderscript.Type.Builder>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.Debug: void resetGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintManager.Stub.Proxy: java.util.List getEnabledPrintServices(int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.app.ActivityManagerProxy: void moveTaskToBack(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.WifiManager: java.util.concurrent.CountDownLatch access.200()>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.core.Filter: void setImmediateInputValue(java.lang.String,java.lang.Object)>:<private final>:<android.filterfw.core.Filter>
<android.hsm.MediaTransactWrapper: android.os.IBinder getBinder()>:<private static>:<android.hsm.MediaTransactWrapper>
<android.renderscript.Matrix3f: void scale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.graphics.drawable.LevelListDrawable.LevelListState: void access.000(android.graphics.drawable.LevelListDrawable.LevelListState)>:<static>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getCancelLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats.Uid: java.util.Map getWakelockStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.INotificationManager.Stub.Proxy: void requestInterruptionFilterFromListener(android.service.notification.INotificationListener,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.renderscript.Short4: android.renderscript.Short4 sub(android.renderscript.Short4,android.renderscript.Short4)>:<public static>:<android.renderscript.Short4>
<android.os.BaseBundle: void remove(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.database.sqlite.SQLiteConnection: void collectDbStats(java.util.ArrayList)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.Process: int killProcessGroup(int,int)>:<public static final native>:<android.os.Process>
<android.app.AlertDialog: void setIconAttribute(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration getIpConfiguration()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.database.CursorWrapper: float getFloat(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.DownloadManager.CursorTranslator: java.lang.String getString(int)>:<public>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebViewProvider: void findAllAsync(java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.mtp.MtpObjectInfo: int getThumbPixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.renderscript.RenderScript: long nFontCreateFromAssetStream(java.lang.String,float,int,long)>:<>:<android.renderscript.RenderScript>
<android.opengl.GLES31Ext: void <init>()>:<private>:<android.opengl.GLES31Ext>
<android.os.BaseBundle: float getFloat(java.lang.String,float)>:<>:<android.os.BaseBundle>
<android.net.LinkAddress: boolean equals(java.lang.Object)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.print.PrinterId.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.hwcontrol.HwWidgetFactory.Factory: com.android.internal.app.WindowDecorActionBar getHuaweiActionBarImpl(android.app.Activity)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.net.Uri.Part: android.net.Uri.Part fromEncoded(java.lang.String)>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.net.NetworkInfo: boolean access.202(android.net.NetworkInfo,boolean)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: android.net.ProxyInfo getDefaultProxy()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void <init>(android.view.View,android.view.View,android.view.ViewGroup)>:<public>:<android.app.ActivityTransitionCoordinator.GhostViewListeners:android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.RttManager.ParcelableRttParams.1: android.net.wifi.RttManager.ParcelableRttParams[] newArray(int)>:<public>:<android.net.wifi.RttManager.ParcelableRttParams.1:android.os.Parcelable.Creator>
<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityManagerProxy: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Process.ZygoteState: void close()>:<public>:<android.os.Process.ZygoteState>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Interpolator: void finalize()>:<protected>:<android.graphics.Interpolator>
<android.netdetect.HwCustNetDetectServiceImpl: android.content.Context access.600(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.transition.ChangeTransform.GhostListener: void onTransitionPause(android.transition.Transition)>:<public>:<android.transition.ChangeTransform.GhostListener:android.transition.Transition.TransitionListenerAdapter>
<android.app.WallpaperManager: java.lang.String access.000()>:<static>:<android.app.WallpaperManager>
<android.net.LinkProperties: android.net.RouteInfo routeWithInterface(android.net.RouteInfo)>:<private>:<android.net.LinkProperties:android.os.Parcelable>
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: java.lang.String access.300(java.lang.String)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>:<public>:<android.app.AlertDialog.Builder>
<android.app.Notification.BuilderRemoteViews: void <init>(android.os.Parcel)>:<public>:<android.app.Notification.BuilderRemoteViews:android.widget.RemoteViews>
<android.app.ActivityThread: android.content.Context createBaseContextForActivity(android.app.ActivityThread.ActivityClientRecord,android.app.Activity)>:<private>:<android.app.ActivityThread>
<android.app.trust.ITrustManager: boolean isDeviceLocked(int)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.hwtheme.HwThemeManagerDummy: boolean installDefaultHwTheme(android.content.Context)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.renderscript.Double3: android.renderscript.Double3 mul(android.renderscript.Double3,android.renderscript.Double3)>:<public static>:<android.renderscript.Double3>
<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.webkit.WebStorage.Origin: long getUsage()>:<public>:<android.webkit.WebStorage.Origin>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void <init>(android.filterfw.core.AsyncRunner)>:<private>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.database.CursorWindow: double nativeGetDouble(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.filterfw.core.FilterFunction.FrameHolderPort: void <init>(android.filterfw.core.FilterFunction)>:<public>:<android.filterfw.core.FilterFunction.FrameHolderPort:android.filterfw.core.StreamPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.ContextImpl: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.http.CharArrayBuffers: void <init>()>:<>:<android.net.http.CharArrayBuffers>
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.graphics.Rect: void union(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type create()>:<public>:<android.renderscript.Type.Builder>
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getReleventAccountTypes(android.content.Intent)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.transition.Fade.FadeAnimatorListener: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.graphics.FontListParser: android.graphics.FontListParser.Family readFamily(org.xmlpull.v1.XmlPullParser)>:<private static>:<android.graphics.FontListParser>
<android.opengl.GLSurfaceView.GLThread: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.net.dhcp.DhcpPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpPacket>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteClosable: void releaseReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.IActivityManager: void finishHeavyWeightApp()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: void transitionStarted()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.backup.IBackupManager.Stub.Proxy: void backupNow()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.print.PrinterInfo: android.print.PrinterId access.102(android.print.PrinterInfo,android.print.PrinterId)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.webkit.WebViewFactory: void prepareWebViewInSystemServer(java.lang.String[])>:<private static>:<android.webkit.WebViewFactory>
<android.graphics.drawable.ClipDrawable.ClipState: boolean canConstantState()>:<>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.PerformanceCollector: android.os.Bundle getBinderCounts()>:<private static>:<android.os.PerformanceCollector>
<android.opengl.GLLogWrapper: void glCullFace(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Paint: void clearShadowLayer()>:<public>:<android.graphics.Paint>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void setForceEnabled(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLSurfaceView: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ActivityManagerProxy: boolean removeTask(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder hwNewInstance(java.io.FileDescriptor,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.graphics.Paint: java.lang.String getFontFeatureSettings()>:<public>:<android.graphics.Paint>
<android.net.IConnectivityManager.Stub.Proxy: android.net.LinkProperties getLinkProperties(android.net.Network)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter: void <init>()>:<private>:<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter>
<android.webkit.WebStorage: void <init>()>:<public>:<android.webkit.WebStorage>
<android.os.Parcel: void writeFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.alsa.AlsaCardsParser: void scan()>:<public>:<android.alsa.AlsaCardsParser>
<android.app.FragmentManager: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.os.StrictMode: void setThreadPolicyMask(int)>:<private static>:<android.os.StrictMode>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getIcon()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2508(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.TrafficStats: long getRxPackets(java.lang.String)>:<public static>:<android.net.TrafficStats>
<android.app.ContextImpl: void <init>(android.app.ContextImpl,android.app.ActivityThread,android.app.LoadedApk,android.os.IBinder,android.os.UserHandle,boolean,android.view.Display,android.content.res.Configuration)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Byte4: void copyTo(byte[],int)>:<public>:<android.renderscript.Byte4>
<android.hwcontrol.HwWidgetFactory: android.widget.IHwSplineOverScroller getHwSplineOverScroller(android.widget.OverScroller.SplineOverScroller,android.content.Context)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.net.wifi.WifiLog: java.util.ArrayList access.100(android.net.wifi.WifiLog)>:<static>:<android.net.wifi.WifiLog>
<android.renderscript.Element: android.renderscript.Element.DataType getDataType()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.RotateDrawable: void setFromDegrees(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.Scheduler: void <init>(android.filterfw.core.FilterGraph)>:<>:<android.filterfw.core.Scheduler>
<android.os.ParcelFileDescriptor: int getFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.SELinux: boolean getBooleanValue(java.lang.String)>:<public static final native>:<android.os.SELinux>
<android.graphics.TemporaryBuffer: void <clinit>()>:<static>:<android.graphics.TemporaryBuffer>
<android.os.UserManager: java.util.List getUsers()>:<public>:<android.os.UserManager>
<android.app.ExitTransitionCoordinator: void resetViews()>:<public>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.RectF: float height()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.app.ActivityThread.TimeProfileData: java.lang.String toString()>:<public>:<android.app.ActivityThread.TimeProfileData>
<android.renderscript.Script.Builder: void <init>(android.renderscript.RenderScript)>:<>:<android.renderscript.Script.Builder>
<android.os.INetworkManagementService.Stub.Proxy: void removeInterfaceFromNetwork(java.lang.String,int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.filterfw.core.Frame: void setInts(int[])>:<public abstract>:<android.filterfw.core.Frame>
<android.os.UserManager: void setDefaultGuestRestrictions(android.os.Bundle)>:<public>:<android.os.UserManager>
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.graphics.drawable.RotateDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.nsd.NsdManager: int putListener(java.lang.Object,android.net.nsd.NsdServiceInfo)>:<private>:<android.net.nsd.NsdManager>
<android.opengl.GLES20: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.RotateDrawable.RotateState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.webkit.URLUtil: boolean isResourceUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.BaseObj>
<android.graphics.Path: boolean native_isEmpty(long)>:<private static native>:<android.graphics.Path>
<android.renderscript.AllocationAdapter: void setY(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterfw.core.FilterGraph: java.util.Set getFilters()>:<public>:<android.filterfw.core.FilterGraph>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebSettings.LayoutAlgorithm: void <clinit>()>:<static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.webkit.WebViewProvider.ViewDelegate: boolean shouldDelayChildPressedState()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.MobileDataStateTracker.MdstHandler: void handleMessage(android.os.Message)>:<public>:<android.net.MobileDataStateTracker.MdstHandler:android.os.Handler>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.opengl.GLErrorWrapper: void glTranslatex(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.IVibratorService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.os.MemoryFile.MemoryInputStream: int available()>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.webkit.WebViewProvider: void goBackOrForward(int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.UiAutomation: void setRunAsMonkey(boolean)>:<public>:<android.app.UiAutomation>
<android.app.backup.BackupTransport.TransportImpl: int sendBackupData(int)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.BaseBundle: void putSerializable(java.lang.String,java.io.Serializable)>:<>:<android.os.BaseBundle>
<android.os.StrictMode.AndroidBlockGuardPolicy: void handleViolationWithTimingAttempt(android.os.StrictMode.ViolationInfo)>:<>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.transition.Transition: android.transition.Transition setDuration(long)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.os.storage.StorageVolume: java.lang.String getPath()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.admin.DevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Long3: android.renderscript.Long3 mod(android.renderscript.Long3,android.renderscript.Long3)>:<public static>:<android.renderscript.Long3>
<android.graphics.pdf.PdfRenderer: void throwIfClosed()>:<private>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.filterfw.core.AsyncRunner: void setException(java.lang.Exception)>:<private>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.ConnectivityManager: android.os.INetworkManagementService getNetworkManagementService()>:<private>:<android.net.ConnectivityManager>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAllRoutes(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>:<public abstract>:<android.webkit.DownloadListener>
<android.app.admin.IDevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.Bitmap: boolean isMutable()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void <init>(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.transition.ChangeBounds: void <clinit>()>:<static>:<android.transition.ChangeBounds:android.transition.Transition>
<android.renderscript.Sampler.Value: void <clinit>()>:<static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.opengl.GLES10: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.os.MemoryFile.MemoryOutputStream: void write(int)>:<public>:<android.os.MemoryFile.MemoryOutputStream:java.io.OutputStream>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.os.CommonTimeConfig: int setPanicThreshold(int)>:<public>:<android.os.CommonTimeConfig>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Path: void native_addPath(long,long,long)>:<private static native>:<android.graphics.Path>
<android.graphics.Color: void <init>()>:<public>:<android.graphics.Color>
<android.net.NetworkFactory: void evalRequests()>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.opengl.GLErrorWrapper: void glLineWidth(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerRxTimeMillis()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.os.PersistableBundle: java.lang.String toString()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.app.ContextImpl.ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>:<protected>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.opengl.GLES30: void <init>()>:<public>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.RippleDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.webkit.HwFindActionModeCallback: void showSoftInput()>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.INetworkManagementEventObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>:<public>:<android.os.DropBoxManager>
<android.graphics.Bitmap: android.graphics.Bitmap access.100(android.os.Parcel)>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.StrictMode.ViolationInfo: void <init>(java.lang.Throwable,int)>:<public>:<android.os.StrictMode.ViolationInfo>
<android.os.ServiceManager: void <clinit>()>:<static>:<android.os.ServiceManager>
<android.webkit.DateSorter: void beginningOfDay(java.util.Calendar)>:<private>:<android.webkit.DateSorter>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.RectF: void set(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame createNewFrame(android.filterfw.core.FrameFormat)>:<private>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>:<>:<android.net.http.Request>
<android.webkit.WebView: boolean access.1400(android.webkit.WebView,int,boolean)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.DhcpStateMachine: void doQuit()>:<public>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.BulkCursorDescriptor: void readFromParcel(android.os.Parcel)>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.os.Messenger: void <init>(android.os.IBinder)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: void acquireConnection(java.lang.String,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.app.IActivityManager: void cancelIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Notification.Builder: android.app.Notification.Builder setDefaults(int)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityThread.ApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.SearchManager: java.util.List getGlobalSearchActivities()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.transition.Slide: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.graphics.drawable.VectorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.graphics.Canvas: void native_drawTextOnPath(long,char[],int,int,long,float,float,int,long,long)>:<private static native>:<android.graphics.Canvas>
<android.renderscript.Float2: void setValues(float,float)>:<public>:<android.renderscript.Float2>
<android.os.FileObserver: void startWatching()>:<public>:<android.os.FileObserver>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.transition.ChangeBounds.8: void <init>(android.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int)>:<>:<android.transition.ChangeBounds.8:android.animation.AnimatorListenerAdapter>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.net.RouteInfo: boolean isIPv4Default()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.Notification.MediaStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.opengl.GLLogWrapper: int glGetError()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.geometry.Point: void set(float,float)>:<public>:<android.filterfw.geometry.Point>
<android.os.Parcel.1: void <init>()>:<>:<android.os.Parcel.1:android.os.Parcelable.Creator>
<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>:<public>:<android.os.storage.StorageManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.LargeBitmap: int getWidth()>:<public>:<android.graphics.LargeBitmap>
<android.net.wifi.WifiManager: java.util.List getScanResults()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.opengl.GLLogWrapper: char[] toCharIndices(int,int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.IpPrefix: void checkAndMaskAddressAndPrefixLength()>:<private>:<android.net.IpPrefix:android.os.Parcelable>
<android.app.ITransientNotification.Stub.Proxy: void show()>:<public>:<android.app.ITransientNotification.Stub.Proxy:android.app.ITransientNotification>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Short2: void <init>(short,short)>:<public>:<android.renderscript.Short2>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.Instrumentation: java.util.List access.300(android.app.Instrumentation)>:<static>:<android.app.Instrumentation>
<android.os.INetworkManagementService: void detachPppd(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.io.TextGraphReader: void applySettings()>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.renderscript.Allocation: void validateIsFloat32()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.IApplicationThread: void setProcessState(int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.app.ApplicationThreadProxy: void scheduleExit()>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.opengl.EGLLogWrapper: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.graphics.pdf.PdfEditor: void finalize()>:<protected>:<android.graphics.pdf.PdfEditor>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.IUserSwitchObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IUserSwitchObserver.Stub.Proxy:android.app.IUserSwitchObserver>
<android.os.ICancellationSignal.Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>:<public static>:<android.os.ICancellationSignal.Stub:android.os.Binder,android.os.ICancellationSignal>
<android.net.wifi.BatchedScanSettings: java.lang.String toString()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable.Orientation)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.print.IPrintJobStateChangeListener.Stub: void <init>()>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>:<public final>:<android.os.Parcel>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>:<public>:<android.app.WallpaperManager>
<android.appwidget.AppWidgetManager: void unbindRemoteViewsService(java.lang.String,int,android.content.Intent)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.Canvas: void insertReorderBarrier()>:<public>:<android.graphics.Canvas>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwner(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.DownloadManager.CursorTranslator: void <init>(android.database.Cursor,android.net.Uri)>:<public>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.os.Debug: int getBinderProxyObjectCount()>:<public static final native>:<android.os.Debug>
<android.app.IActivityManager: void backupAgentCreated(java.lang.String,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.TrafficStats: void untagSocket(java.net.Socket)>:<public static>:<android.net.TrafficStats>
<android.renderscript.RenderScript: void rsnContextDump(long,int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.RenderScript: long nDeviceCreate()>:<native>:<android.renderscript.RenderScript>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMagnification()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.alsa.LineTokenizer: int nextToken(java.lang.String,int)>:<>:<android.alsa.LineTokenizer>
<android.app.ActivityOptions: int getCustomExitResId()>:<public>:<android.app.ActivityOptions>
<android.os.BatteryProperty: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.BatteryProperty:android.os.Parcelable>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface.OnCancelListener)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.os.BatteryManagerInternal: void <init>()>:<public>:<android.os.BatteryManagerInternal>
<android.filterfw.core.FilterPort: void setBlocking(boolean)>:<public>:<android.filterfw.core.FilterPort>
<android.renderscript.Short4: void <init>()>:<public>:<android.renderscript.Short4>
<android.os.storage.IMountServiceListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.storage.IMountServiceListener.Stub.Proxy:android.os.storage.IMountServiceListener>
<android.os.Debug: void modifyFieldIfSet(java.lang.reflect.Field,com.android.internal.util.TypedProperties,java.lang.String)>:<private static>:<android.os.Debug>
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>:<public>:<android.net.LocalSocketImpl>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.test.InstrumentationTestCase: void injectInsrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.ExitTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.database.sqlite.SQLiteConnectionPool: boolean isSessionBlockingImportantConnectionWaitersLocked(boolean,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.Bitmap: void eraseColor(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.IConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.wifi.IWifiManager: void startWifi()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.accounts.AccountManager.Future2Task: void done()>:<protected>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.os.IMultiWinService.Stub.Proxy: boolean isPartOfMWTaskStack(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.graphics.Region: boolean nativeGetBounds(long,android.graphics.Rect)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.drm.DrmStore.DrmObjectType: void <init>()>:<public>:<android.drm.DrmStore.DrmObjectType>
<android.database.sqlite.SQLiteConnectionPool: void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.database.sqlite.SQLiteQueryBuilder: void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)>:<private static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.AlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource)>:<public>:<android.app.AlarmManager>
<android.renderscript.Element: android.renderscript.Element U64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Byte4: android.renderscript.Byte4 add(android.renderscript.Byte4,android.renderscript.Byte4)>:<public static>:<android.renderscript.Byte4>
<android.renderscript.RenderScript.ContextType: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.app.AppOpsManager: void finishOp(int)>:<public>:<android.app.AppOpsManager>
<android.transition.ChangeBounds.9: void onTransitionCancel(android.transition.Transition)>:<public>:<android.transition.ChangeBounds.9:android.transition.Transition.TransitionListenerAdapter>
<android.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.os.Process: void killProcessQuiet(int)>:<public static final>:<android.os.Process>
<android.database.AbstractWindowedCursor: boolean isString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.ConnectivityManager: int startUsingNetworkFeatureForSubscription(int,java.lang.String,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)>:<public final>:<android.appwidget.AppWidgetHost>
<android.graphics.drawable.ColorDrawable: void <init>(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.os.INetworkManagementService: void startClatd(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.UEventObserver: void startObserving(java.lang.String)>:<public final>:<android.os.UEventObserver>
<android.app.ActivityThread: void handleEnterAnimationComplete(android.os.IBinder)>:<private>:<android.app.ActivityThread>
<android.transition.Transition: android.util.ArrayMap getRunningAnimators()>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.app.ActivityThread: void handleCreateService(android.app.ActivityThread.CreateServiceData)>:<private>:<android.app.ActivityThread>
<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.print.PrinterCapabilitiesInfo.1: void <init>()>:<>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedPath()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ContextImpl: java.lang.String getPackageName()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.database.sqlite.SQLiteConnection: java.lang.String nativeGetColumnName(long,long,int)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.Network: int hashCode()>:<public>:<android.net.Network:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String)>:<public>:<android.filterfw.core.FrameFormat>
<android.net.Uri.OpaqueUri: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiActivityEnergyInfo.1: void <init>()>:<>:<android.net.wifi.WifiActivityEnergyInfo.1:android.os.Parcelable.Creator>
<android.app.MediaRouteButton: boolean showDialogInternal()>:<>:<android.app.MediaRouteButton:android.view.View>
<android.app.Notification.Action: void <init>(android.os.Parcel)>:<private>:<android.app.Notification.Action:android.os.Parcelable>
<android.net.NetworkFactory: void evalRequest(android.net.NetworkFactory.NetworkRequestInfo)>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.Proxy: void <clinit>()>:<static>:<android.net.Proxy>
<android.app.BackStackRecord.Op: void <init>()>:<>:<android.app.BackStackRecord.Op>
<android.app.Service: void onStart(android.content.Intent,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.accounts.AccountManager.3: void doWork()>:<public>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.ActivityManager.RunningServiceInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.net.wifi.WifiScanner.ScanSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiScanner.ScanSettings:android.os.Parcelable>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewFactoryProvider.Statics getStatics()>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.opengl.GLES10: void glEnable(int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.JankSqlite: void <init>()>:<public>:<android.database.sqlite.JankSqlite>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.renderscript.RenderScript: boolean isAlive()>:<>:<android.renderscript.RenderScript>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void <init>(android.print.PrinterDiscoverySession)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.app.EnterTransitionCoordinator.4: void <init>(android.app.EnterTransitionCoordinator)>:<>:<android.app.EnterTransitionCoordinator.4:java.lang.Runnable>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.wifi.p2p.WifiP2pDeviceList: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.NetworkStats: void spliceOperationsFrom(android.net.NetworkStats)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>:<public>:<android.os.DropBoxManager>
<android.app.ActivityManager: void startLockTaskMode(int)>:<public>:<android.app.ActivityManager>
<android.os.IUpdateLock.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IUpdateLock.Stub.Proxy:android.os.IUpdateLock>
<android.renderscript.ProgramRaster.CullMode: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.webkit.WebViewProvider.ViewDelegate: void setLayerType(int,android.graphics.Paint)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.opengl.GLLogWrapper: java.lang.String getMatrixMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glDrawTexivOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.os.Trace: void nativeSetAppTracingAllowed(boolean)>:<private static native>:<android.os.Trace>
<android.net.http.DelegatingSSLSession: int getPeerPort()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.net.dhcp.DhcpOfferPacket: void finishPacket(java.nio.ByteBuffer)>:<>:<android.net.dhcp.DhcpOfferPacket:android.net.dhcp.DhcpPacket>
<android.graphics.FontFamily: boolean addFontFromAsset(android.content.res.AssetManager,java.lang.String)>:<public>:<android.graphics.FontFamily>
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAddresses(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLES10: void <init>()>:<public>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>:<protected volatile>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.os.Trace.1: void run()>:<public>:<android.os.Trace.1:java.lang.Runnable>
<android.app.ActivityThread: android.app.Application getApplication()>:<public>:<android.app.ActivityThread>
<android.net.nsd.NsdManager: java.lang.String access.400(android.net.nsd.NsdManager,android.net.nsd.NsdServiceInfo)>:<static>:<android.net.nsd.NsdManager>
<android.graphics.Paint: void native_getTextPath(long,long,int,java.lang.String,int,int,float,float,long)>:<private static native>:<android.graphics.Paint>
<android.graphics.AvoidXfermode: long nativeCreate(int,int,int)>:<private static native>:<android.graphics.AvoidXfermode:android.graphics.Xfermode>
<android.net.nsd.NsdManager: void <init>(android.content.Context,android.net.nsd.INsdManager)>:<public>:<android.net.nsd.NsdManager>
<android.renderscript.Float2: float dotProduct(android.renderscript.Float2,android.renderscript.Float2)>:<public static>:<android.renderscript.Float2>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap nativeDecodeRegion(long,int,int,int,int,android.graphics.BitmapFactory.Options)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.net.TrafficStats: void setThreadStatsUid(int)>:<public static>:<android.net.TrafficStats>
<android.graphics.Rasterizer: void finalizer(long)>:<private static native>:<android.graphics.Rasterizer>
<android.webkit.WebViewProvider: boolean isPaused()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Canvas: void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int)>:<private native>:<android.graphics.Canvas>
<android.app.MediaRouteActionProvider: void refreshRoute()>:<private>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.appwidget.AppWidgetHost.Callbacks: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry,java.util.HashSet,int,boolean)>:<private>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnPathCreate(long,int,boolean,long,long,float)>:<native>:<android.renderscript.RenderScript>
<android.net.wifi.IWifiManager.Stub.Proxy: void stopPPPOE()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.filterfw.io.GraphIOException: void <init>()>:<public>:<android.filterfw.io.GraphIOException:java.lang.Exception,java.lang.Throwable>
<android.filterfw.core.AsyncRunner: android.filterfw.core.GraphRunner.OnRunnerDoneListener access.500(android.filterfw.core.AsyncRunner)>:<static>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.net.wifi.RttManager: void init()>:<private>:<android.net.wifi.RttManager>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkScoreManager: boolean clearScores()>:<public>:<android.net.NetworkScoreManager>
<android.graphics.EmbossMaskFilter: long nativeConstructor(float[],float,float,float)>:<private static native>:<android.graphics.EmbossMaskFilter:android.graphics.MaskFilter>
<android.app.Activity: android.view.View findViewById(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.mtp.MtpDatabase: int[] getSupportedDeviceProperties()>:<private>:<android.mtp.MtpDatabase>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>:<protected final>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.net.wifi.WifiConfiguration: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.net.ProxyDataTracker: void setDetailedState(android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>:<private>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.renderscript.Long4: void negate()>:<public>:<android.renderscript.Long4>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.renderscript.FieldPacker: android.renderscript.Byte2 subByte2()>:<public>:<android.renderscript.FieldPacker>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActionBar.OnNavigationListener: boolean onNavigationItemSelected(int,long)>:<public abstract>:<android.app.ActionBar.OnNavigationListener>
<android.app.ActivityThread.DropBoxReporter: void <init>(android.app.ActivityThread)>:<public>:<android.app.ActivityThread.DropBoxReporter:libcore.io.DropBox.Reporter>
<android.net.wifi.WifiConfiguration: java.lang.String configKey(boolean)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.webkit.EventLogTags: void writeExpDetAttemptToCallObjectGetclass(java.lang.String)>:<public static>:<android.webkit.EventLogTags>
<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>:<public>:<android.os.RegistrantList>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiEnterpriseConfig: void setPhase2Method(int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLLogWrapper: void glDrawTexivOES(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glHint(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.WebViewProvider.ViewDelegate: void onWindowVisibilityChanged(int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.net.INetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.database.MergeCursor: long getLong(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.renderscript.Int4: android.renderscript.Int4 mul(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.graphics.drawable.ShapeDrawable.ShapeState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ShapeDrawable.ShapeState:android.graphics.drawable.Drawable.ConstantState>
<android.accounts.AccountManager.2: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.net.ConnectivityManager.CallbackHandler: void handleMessage(android.os.Message)>:<public>:<android.net.ConnectivityManager.CallbackHandler:android.os.Handler>
<android.app.ActivityThread.ApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.String,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyUp(int,android.view.KeyEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.ddm.DdmHandleNativeHeap: void register()>:<public static>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ContextImpl.7: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.7:android.app.ContextImpl.ServiceFetcher>
<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.backup.BackupTransport: long requestFullBackupTime()>:<public>:<android.app.backup.BackupTransport>
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.mtp.MtpDatabase: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.mtp.MtpDatabase>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isRemovingAdmin(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getCameraDisabled(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Instrumentation: void waitForIdleSync()>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.LayerDrawable: void ensurePadding()>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(java.lang.String,int)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>:<public>:<android.app.ActivityManager>
<android.app.admin.IDevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.backup.BackupTransport.TransportImpl: int startRestore(long,android.content.pm.PackageInfo[])>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Dialog.1: void run()>:<public>:<android.app.Dialog.1:java.lang.Runnable>
<android.transition.Visibility.2: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.Visibility.2:android.animation.AnimatorListenerAdapter>
<android.app.ActivityManager: boolean isInHomeStack(int)>:<public>:<android.app.ActivityManager>
<android.graphics.drawable.VectorDrawable: void clearMutated()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.GradientDrawable.GradientState: void setShape(int)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.Builder: java.lang.CharSequence access.1400(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.app.Activity: void setTitleColor(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.InterfaceConfiguration.1: void <init>()>:<>:<android.net.InterfaceConfiguration.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiConfiguration.GroupCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.database.sqlite.SQLiteConnection: void nativeBindNull(long,long,int)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.renderscript.FileA3D: void <init>(long,android.renderscript.RenderScript,java.io.InputStream)>:<>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.accounts.IAccountManager: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLES20: void glFlush()>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setLayoutDirection(int)>:<final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.http.Headers: java.lang.String getContentEncoding()>:<public>:<android.net.http.Headers>
<android.app.IActivityManager: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.renderscript.ProgramStore: boolean isDepthMaskEnabled()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.net.wifi.HwWifiStatStore: void incrAccessSuccWebCnt()>:<public>:<android.net.wifi.HwWifiStatStore>
<android.filterfw.core.NativeFrame: boolean getNativeBuffer(android.filterfw.core.NativeBuffer)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.os.WorkSource: void <init>(int,java.lang.String)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityTransitionState: void onStop()>:<public>:<android.app.ActivityTransitionState>
<android.app.ContextImpl.41: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.41:android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLLogWrapper: void glDrawArrays(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings.TextSize: void <init>(java.lang.String,int,int)>:<private>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.net.NetworkStats: int findIndex(java.lang.String,int,int,int)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.http.DelegatingSSLSession: void invalidate()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.net.Network: void maybeInitHttpClient()>:<private>:<android.net.Network:android.os.Parcelable>
<android.net.ConnectivityManager.NetworkCallback: void onLost(android.net.Network)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.app.AlarmManager.AlarmClockInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.net.wifi.IRttManager.Stub.Proxy: android.os.Messenger getMessenger()>:<public>:<android.net.wifi.IRttManager.Stub.Proxy:android.net.wifi.IRttManager>
<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>:<private>:<android.app.ActivityThread>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>:<public>:<android.graphics.NinePatch>
<android.webkit.GeolocationPermissions: void <init>()>:<public>:<android.webkit.GeolocationPermissions>
<android.app.usage.UsageStats.1: android.app.usage.UsageStats createFromParcel(android.os.Parcel)>:<public>:<android.app.usage.UsageStats.1:android.os.Parcelable.Creator>
<android.app.ExitTransitionCoordinator: void finishIfNecessary()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.NativeActivity: void onInputQueueCreatedNative(long,long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.graphics.drawable.VectorDrawable.VFullPath: void <init>(android.graphics.drawable.VectorDrawable.VFullPath)>:<public>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.os.RegistrantList: void removeCleared()>:<public>:<android.os.RegistrantList>
<android.net.wifi.WifiCHRStateManager: java.util.List getWiFiCHRModel(int,java.lang.String,boolean,java.util.Date)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.drawable.LayerDrawable.LayerState: int getOpacity()>:<public final>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.app.ApplicationErrorReport.AnrInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>:<public>:<android.app.Instrumentation>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2412(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.53: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.53:android.app.ContextImpl.ServiceFetcher>
<android.net.LocalSocketImpl: void shutdownInput()>:<protected>:<android.net.LocalSocketImpl>
<android.app.ContextImpl.24: java.lang.Object getService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.24:android.app.ContextImpl.ServiceFetcher>
<android.test.AndroidTestCase: android.content.Context getContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.Program.TextureType: void <clinit>()>:<static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.app.FragmentManagerImpl: void invalidateOptionsMenu()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.app.job.JobInfo: boolean isRequireCharging()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.ActivityManagerProxy: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.RttManager.ParcelableRttParams.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.RttManager.ParcelableRttParams.1:android.os.Parcelable.Creator>
<android.graphics.drawable.TransitionDrawable.TransitionState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.TransitionDrawable.TransitionState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>:<public>:<android.webkit.WebChromeClient>
<android.renderscript.Long4: void <init>(long,long,long,long)>:<public>:<android.renderscript.Long4>
<android.hwcontrol.HwWidgetFactory: android.graphics.drawable.Drawable getGlowEffect(android.content.res.Resources)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.os.Broadcaster: void cancelRequest(int,android.os.Handler,int)>:<public>:<android.os.Broadcaster>
<android.app.ActivityThread: void performStopActivity(android.os.IBinder,boolean)>:<final>:<android.app.ActivityThread>
<android.print.PrintDocumentAdapter: void <init>()>:<public>:<android.print.PrintDocumentAdapter>
<android.mtp.MtpObjectInfo: int getAssociationType()>:<public final>:<android.mtp.MtpObjectInfo>
<android.filterfw.core.AsyncRunner: void access.300(android.filterfw.core.AsyncRunner,java.lang.Exception)>:<static>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.opengl.EGLLogWrapper: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.Fragment: void instantiateChildFragmentManager()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.INetworkPolicyManager: int[] getPowerSaveAppIdWhitelist()>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.graphics.drawable.GradientDrawable: float getGradientRadius()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.mtp.MtpDevice: boolean native_open(java.lang.String,int)>:<private native>:<android.mtp.MtpDevice>
<android.app.WallpaperManager: void setResource(int)>:<public>:<android.app.WallpaperManager>
<android.os.storage.IMountService: boolean isUsbMassStorageEnabled()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeCapability(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.filterfw.core.OutputPort: boolean filterMustClose()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.app.AppOpsManager.OpEntry: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.filterfw.core.FrameFormat: boolean isCompatibleWith(android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.FrameFormat>
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.IConnectivityManager: void startLegacyVpn(com.android.internal.net.VpnProfile)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.Instrumentation: void prePerformCreate(android.app.Activity)>:<private>:<android.app.Instrumentation>
<android.os.MemoryFile.MemoryInputStream: void <init>(android.os.MemoryFile)>:<private>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.app.ActivityView: android.app.ActivityView.ActivityViewCallback access.600(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glPolygonOffsetx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintSpoolerClient.Stub: void <init>()>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLLogWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.app.ReceiverRestrictedContext:android.content.ContextWrapper,android.content.Context>
<android.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)>:<public static>:<android.transition.TransitionUtils>
<android.renderscript.Float3: android.renderscript.Float3 add(android.renderscript.Float3,float)>:<public static>:<android.renderscript.Float3>
<android.accounts.IAccountManager.Stub.Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.accounts.AccountManagerResponse: int describeContents()>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.net.wifi.IWifiManager.Stub.Proxy: void enableTdlsWithMacAddress(java.lang.String,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.filterfw.core.Frame: void setBitmap(android.graphics.Bitmap)>:<public abstract>:<android.filterfw.core.Frame>
<android.filterfw.core.FilterContext: void <init>()>:<public>:<android.filterfw.core.FilterContext>
<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.AsyncTask.2: java.lang.Object call()>:<public>:<android.os.AsyncTask.2:android.os.AsyncTask.WorkerRunnable>
<android.net.wifi.IWifiManager.Stub: android.net.wifi.IWifiManager asInterface(android.os.IBinder)>:<public static>:<android.net.wifi.IWifiManager.Stub:android.os.Binder,android.net.wifi.IWifiManager>
<android.opengl.GLES10: void glFogx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.BulkCursorDescriptor: void <init>()>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.app.backup.BackupAgent: void onDestroy()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.app.Notification.MediaStyle: android.widget.RemoteViews makeMediaContentView()>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Dialog: void cancel()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.LocalSocketImpl.SocketInputStream: int read()>:<public>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexEnvi(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.ProgramStore.DepthFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.filterfw.core.GLEnvironment: boolean nativeSetSurfaceTimestamp(long)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.print.PrintDocumentInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.app.ActionBar: boolean collapseActionView()>:<public>:<android.app.ActionBar>
<android.netdetect.HwCustNetDetectServiceImpl: void cancelWebDetectTimer()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.EnterTransitionCoordinator.5.1: void <init>(android.app.EnterTransitionCoordinator.5)>:<>:<android.app.EnterTransitionCoordinator.5.1:java.lang.Runnable>
<android.app.Notification.WearableExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES20: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.core.FrameFormat: void initDefaults()>:<private>:<android.filterfw.core.FrameFormat>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.app.Activity: void removeDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug.MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>:<public static>:<android.app.ActivityThread>
<android.drm.AbsDrmStore.DrmObjectType: void <init>()>:<public>:<android.drm.AbsDrmStore.DrmObjectType>
<android.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.DatePickerDialog.1: void onValidationChanged(boolean)>:<public>:<android.app.DatePickerDialog.1:android.widget.DatePicker.ValidationCallback>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.appwidget.AppWidgetProviderInfo: void <init>()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void <init>()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.graphics.drawable.LayerDrawable: void computeStackedPadding(android.graphics.Rect)>:<private>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintJobInfo: java.lang.String getStateReason()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLLogWrapper: int getIntegerStateSize(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiCHRService: void dhcpfailedEvent(int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.SearchManager.OnDismissListener: void onDismiss()>:<public abstract>:<android.app.SearchManager.OnDismissListener>
<android.net.LocalSocketImpl.SocketOutputStream: void write(int)>:<public>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.app.ActivityManager: int staticGetLargeMemoryClass()>:<public static>:<android.app.ActivityManager>
<android.app.ProgressDialog: void incrementProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.Long3: void <init>(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.app.Notification.Builder: android.app.Notification.Builder extend(android.app.Notification.Extender)>:<public>:<android.app.Notification.Builder>
<android.os.Parcel: void writeIntArray(int[])>:<public final>:<android.os.Parcel>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.http.Headers: long getContentLength()>:<public>:<android.net.http.Headers>
<android.renderscript.Element: android.renderscript.Element createUser(android.renderscript.RenderScript,android.renderscript.Element.DataType)>:<static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.WifiManager: java.lang.Object access.000(int)>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.webkit.WebViewClient.3: void <init>(android.webkit.WebViewClient,android.webkit.WebView)>:<>:<android.webkit.WebViewClient.3:android.content.DialogInterface.OnClickListener>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.Activity: boolean isChild()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.job.JobParameters: boolean isOverrideDeadlineExpired()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.transition.ChangeBounds.5: android.graphics.PointF get(android.view.View)>:<public>:<android.transition.ChangeBounds.5:android.util.Property>
<android.os.UserManager: void addDefaultUserRestrictions(android.os.Bundle)>:<private static>:<android.os.UserManager>
<android.os.Parcel: int nativeReadInt(long)>:<private static native>:<android.os.Parcel>
<android.net.INetworkStatsService.Stub.Proxy: android.net.INetworkStatsSession openSession()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.graphics.RadialGradient: long nativeCreate1(float,float,float,int[],float[],int)>:<private static native>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelperBase>
<android.net.wifi.WifiScanner.BssidListener: void onFound(android.net.wifi.ScanResult[])>:<public abstract>:<android.net.wifi.WifiScanner.BssidListener:android.net.wifi.WifiScanner.ActionListener>
<android.graphics.drawable.VectorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.webkit.FindActionModeCallback: void finish()>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.wifi.IWifiManager: boolean disableNetwork(int)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.renderscript.RenderScript: void rsnContextBindProgramRaster(long,long)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLErrorWrapper: void glFogxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.NetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>:<public>:<android.net.NetworkPolicyManager>
<android.database.sqlite.SQLiteConnection.OperationLog: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.graphics.Paint.FontMetricsInt: void <init>()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.net.VpnService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.BatchedScanResult: int describeContents()>:<public>:<android.net.wifi.BatchedScanResult:android.os.Parcelable>
<android.opengl.EGLObjectHandle: int getHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.renderscript.FileA3D.IndexEntry: java.lang.String getName()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.net.EthernetManager: boolean isAvailable()>:<public>:<android.net.EthernetManager>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>:<public>:<android.webkit.WebChromeClient>
<android.net.NetworkScoreManager: boolean requestScores(android.net.NetworkKey[])>:<public>:<android.net.NetworkScoreManager>
<android.app.AppOpsManager.OpEntry.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.AppOpsManager.OpEntry.1:android.os.Parcelable.Creator>
<android.os.storage.IMountService.Stub.Proxy: int formatVolume(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ApplicationThreadNative: void <init>()>:<public>:<android.app.ApplicationThreadNative:android.os.Binder,android.app.IApplicationThread>
<android.accounts.ChooseTypeAndAccountActivity: android.widget.Button access.100(android.accounts.ChooseTypeAndAccountActivity)>:<static>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>:<public static>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats.NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>:<public static>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Byte2: byte dotProduct(android.renderscript.Byte2,android.renderscript.Byte2)>:<public static>:<android.renderscript.Byte2>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicYuvToRGB: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.StatusBarManager: void expandNotificationsPanel()>:<public>:<android.app.StatusBarManager>
<android.print.ILayoutResultCallback: void onLayoutFailed(java.lang.CharSequence,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.app.WallpaperInfo.1: void <init>()>:<>:<android.app.WallpaperInfo.1:android.os.Parcelable.Creator>
<android.net.ConnectivityManager: android.net.NetworkCapabilities networkCapabilitiesForFeature(int,java.lang.String)>:<private>:<android.net.ConnectivityManager>
<android.os.CommonTimeConfig: int setMasterAnnounceInterval(int)>:<public>:<android.os.CommonTimeConfig>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addActions(java.util.List)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.http.RequestQueue: void <init>(android.content.Context,int)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Matrix.1: void setTranslate(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutFailed(java.lang.CharSequence,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.filterfw.core.AsyncRunner: boolean access.100(android.filterfw.core.AsyncRunner)>:<static>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.graphics.Point: void offset(int,int)>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable: int applyAlpha(int,float)>:<private static>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.IWifiManager.Stub.Proxy: void reassociate()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalServerSocket>
<android.net.NetworkQuotaInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.NetworkQuotaInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityManager.TaskThumbnail.1: void <init>()>:<>:<android.app.ActivityManager.TaskThumbnail.1:android.os.Parcelable.Creator>
<android.app.NativeActivity: void onWindowFocusChanged(boolean)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.PowerManager.WakeLock: void setUnimportantForLogging(boolean)>:<public>:<android.os.PowerManager.WakeLock>
<android.net.wifi.p2p.IWifiP2pManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub:android.os.Binder,android.net.wifi.p2p.IWifiP2pManager>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk createStackChunk(java.lang.StackTraceElement[],int)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>:<public final>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.admin.IDevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.accounts.ChooseTypeAndAccountActivity: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.os.INetworkManagementService: void disableNat(java.lang.String,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.IPowerManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.filterfw.core.FilterPort: void setFrame(android.filterfw.core.Frame)>:<public abstract>:<android.filterfw.core.FilterPort>
<android.net.wifi.WifiEnterpriseConfig.1: android.net.wifi.WifiEnterpriseConfig createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.app.ContextImpl.11: void <init>()>:<>:<android.app.ContextImpl.11:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.accounts.AuthenticatorDescription: void <init>(android.os.Parcel,android.accounts.AuthenticatorDescription.1)>:<>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.graphics.Canvas: void freeCaches()>:<public static native>:<android.graphics.Canvas>
<android.renderscript.Double3: void div(double)>:<public>:<android.renderscript.Double3>
<android.net.VpnService.Callback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<protected>:<android.net.VpnService.Callback:android.os.Binder>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.Dialog: android.app.ActionBar getActionBar()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.webkit.PluginList: void clear()>:<public>:<android.webkit.PluginList>
<android.app.job.JobInfo.Builder: int access.1200(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.graphics.Bitmap: int scaleFromDensity(int,int,int)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.ColorMatrix: void setYUV2RGB()>:<public>:<android.graphics.ColorMatrix>
<android.filterfw.core.NativeFrame: boolean nativeCopyFromGL(android.filterfw.core.GLFrame)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.opengl.GLES11: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.wifi.WifiCHRStateManager: void updateHttpResp(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.IActivityManager: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsTethering()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.LargeBitmap: int nativeGetHeight(long)>:<private static native>:<android.graphics.LargeBitmap>
<android.print.IPrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.app.IActivityManager: void crashApplication(int,int,java.lang.String,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.IConnectivityManager: boolean prepareVpn(java.lang.String,java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.Atlas.SlicePolicy: boolean insert(android.graphics.Atlas.SlicePolicy.Cell,android.graphics.Atlas.SlicePolicy.Cell,int,int,android.graphics.Atlas.Entry)>:<private>:<android.graphics.Atlas.SlicePolicy:android.graphics.Atlas.Policy>
<android.app.DialogFragment: void onDetach()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.backup.RestoreSession.RestoreObserverWrapper: void onUpdate(int,java.lang.String)>:<public>:<android.app.backup.RestoreSession.RestoreObserverWrapper:android.app.backup.IRestoreObserver.Stub,android.os.Binder>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityTransitionState: android.app.ExitTransitionCoordinator access.000(android.app.ActivityTransitionState)>:<static>:<android.app.ActivityTransitionState>
<android.app.BackStackRecord: void access.200(android.app.BackStackRecord,android.util.ArrayMap,android.app.BackStackRecord.TransitionState)>:<static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.filterfw.core.AsyncRunner.AsyncRunnerTask: void onPostExecute(java.lang.Object)>:<protected volatile>:<android.filterfw.core.AsyncRunner.AsyncRunnerTask:android.os.AsyncTask>
<android.app.ActivityThread: void performNewIntents(android.os.IBinder,java.util.List)>:<public final>:<android.app.ActivityThread>
<android.app.INotificationManager: void cancelToast(java.lang.String,android.app.ITransientNotification)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.WearableExtender: int getContentIconGravity()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.filterfw.core.FilterPort: void pushFrame(android.filterfw.core.Frame)>:<public abstract>:<android.filterfw.core.FilterPort>
<android.os.CountDownTimer: long access.100(android.os.CountDownTimer)>:<static>:<android.os.CountDownTimer>
<android.app.Fragment: void performPause()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ActivityTransitionCoordinator: boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup)>:<public static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.MobileDataStateTracker.MobileDataStateReceiver: void <init>(android.net.MobileDataStateTracker)>:<private>:<android.net.MobileDataStateTracker.MobileDataStateReceiver:android.content.BroadcastReceiver>
<android.os.Parcel: java.lang.CharSequence readCharSequence()>:<public final>:<android.os.Parcel>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.ColorMatrix: void reset()>:<public>:<android.graphics.ColorMatrix>
<android.net.http.AndroidHttpClientConnection: int getLocalPort()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean readTxtData(java.io.DataInputStream)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean pingSupplicant()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.FragmentManagerImpl: boolean execPendingActions()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ISearchManager.Stub: android.app.ISearchManager asInterface(android.os.IBinder)>:<public static>:<android.app.ISearchManager.Stub:android.os.Binder,android.app.ISearchManager>
<android.filterfw.core.GLFrame: void setInts(int[])>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.webkit.WebViewFactory: void onWebViewUpdateInstalled()>:<public static>:<android.webkit.WebViewFactory>
<android.renderscript.Double2: android.renderscript.Double2 mul(android.renderscript.Double2,android.renderscript.Double2)>:<public static>:<android.renderscript.Double2>
<android.hwtheme.HwThemeManager.IHwThemeManager: void updateResolveInfoIconCache(android.content.pm.ResolveInfo,int,java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.nsd.NsdManager: void setEnabled(boolean)>:<public>:<android.net.nsd.NsdManager>
<android.app.ActivityThread.ResultData: void <init>()>:<>:<android.app.ActivityThread.ResultData>
<android.net.wifi.IWifiScanner: android.os.Bundle getAvailableChannels(int)>:<public abstract>:<android.net.wifi.IWifiScanner:android.os.IInterface>
<android.print.PrintAttributes.Margins: int getBottomMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.os.storage.StorageVolume: void setStorageId(int)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VGroup: float getPivotX()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.opengl.GLErrorWrapper: boolean glIsTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Paint: float getTextSize()>:<public native>:<android.graphics.Paint>
<android.os.SystemProperties: void set(java.lang.String,java.lang.String)>:<public static>:<android.os.SystemProperties>
<android.print.IPrintDocumentAdapterObserver.Stub: android.print.IPrintDocumentAdapterObserver asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.app.SearchDialog: void onStop()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.BatteryStats: int getHighDischargeAmountSinceCharge()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ISearchManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.graphics.drawable.RippleBackground: boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.RippleBackground>
<android.app.LoadedApk.WarningContextClassLoader: void setDefaultAssertionStatus(boolean)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[],int,int)>:<public>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.transition.Slide.CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View)>:<public abstract>:<android.transition.Slide.CalculateSlide>
<android.net.NetworkStatsHistory.1: android.net.NetworkStatsHistory createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkStatsHistory.1:android.os.Parcelable.Creator>
<android.app.ActionBar.Tab: void select()>:<public abstract>:<android.app.ActionBar.Tab>
<android.net.NetworkStats: void <clinit>()>:<static>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.CommonTimeUtils: int transactSetLong(int,long)>:<public>:<android.os.CommonTimeUtils>
<android.net.Uri.HierarchicalUri: java.lang.String getPath()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Short4: void div(short)>:<public>:<android.renderscript.Short4>
<android.graphics.Interpolator: long nativeConstructor(int,int)>:<private static native>:<android.graphics.Interpolator>
<android.net.wifi.WifiManager: int getVerboseLoggingLevel()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Allocation: void copyFromUnchecked(java.lang.Object,android.renderscript.Element.DataType,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.dhcp.DhcpPacket: void addTlv(java.nio.ByteBuffer,byte,java.lang.String)>:<protected>:<android.net.dhcp.DhcpPacket>
<android.net.LinkProperties.CompareResult: java.lang.String toString()>:<public>:<android.net.LinkProperties.CompareResult>
<android.graphics.drawable.VectorDrawable.VGroup: java.lang.String getGroupName()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.net.Uri.StringUri: java.lang.String toString()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.admin.IDevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.FragmentManagerImpl: void dispatchLowMemory()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.drawable.GradientDrawable.GradientState: void setSize(int,int)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Atlas: android.graphics.Atlas.Policy findPolicy(android.graphics.Atlas.Type,int,int,int)>:<private static>:<android.graphics.Atlas>
<android.accessibilityservice.IAccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.net.http.RequestQueue.ActivePool: void disablePersistence()>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void onKeyEvent(android.view.KeyEvent,int)>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.os.TokenWatcher.Death: void <init>(android.os.TokenWatcher,android.os.IBinder,java.lang.String)>:<>:<android.os.TokenWatcher.Death:android.os.IBinder.DeathRecipient>
<android.app.ActivityTransitionCoordinator.1: boolean onPreDraw()>:<public>:<android.app.ActivityTransitionCoordinator.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.PointF: void <clinit>()>:<static>:<android.graphics.PointF:android.os.Parcelable>
<android.renderscript.RenderScript: void nAllocationResize1D(long,int)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityManager.StackInfo: int describeContents()>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory: com.android.internal.app.WindowDecorActionBar getHuaweiActionBarImpl(android.app.Dialog)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.IpPrefix: int hashCode()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPage(android.app.Notification)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.VoiceInteractor.2: void deliverConfirmationResult(com.android.internal.app.IVoiceInteractorRequest,boolean,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void <init>(android.database.sqlite.SQLiteConnection,int)>:<public>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.print.IPrintSpoolerClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.os.BatteryProperties: void <init>()>:<public>:<android.os.BatteryProperties:android.os.Parcelable>
<android.transition.Visibility: boolean areValuesChanged(android.transition.TransitionValues,android.transition.TransitionValues)>:<>:<android.transition.Visibility:android.transition.Transition>
<android.webkit.WebSettings: boolean getAcceptThirdPartyCookies()>:<public abstract>:<android.webkit.WebSettings>
<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.Frame>
<android.app.ActivityManager.TaskDescription.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.TaskDescription.1:android.os.Parcelable.Creator>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.app.Dialog: void setTitle(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.app.ActivityThread.EventLoggingReporter: void <init>()>:<private>:<android.app.ActivityThread.EventLoggingReporter:libcore.io.EventLogger.Reporter>
<android.os.Debug: void <init>()>:<private>:<android.os.Debug>
<android.net.LinkProperties: java.lang.String toString()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.JankEventData: android.content.ContentValues getContentValues(java.lang.String[])>:<public>:<android.os.JankEventData:android.os.Parcelable>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String findAddress(java.lang.String)>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.net.SSLCertificateSocketFactory: com.android.org.conscrypt.OpenSSLSocketImpl castToOpenSSLSocket(java.net.Socket)>:<private static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.opengl.GLES20: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSource(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: void <init>(android.content.Context,android.net.wifi.IWifiManager)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.pdf.PdfEditor: boolean shouldScaleForPrinting()>:<public>:<android.graphics.pdf.PdfEditor>
<android.hsm.HwAudioPermWrapper: int mockRead(byte[],int,int)>:<public>:<android.hsm.HwAudioPermWrapper>
<android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>:<public static>:<android.os.StrictMode>
<android.app.ITransientNotification.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ITransientNotification.Stub:android.os.Binder,android.app.ITransientNotification>
<android.opengl.GLLogWrapper: void glGetFixedv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManagerProxy: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.DownloadManager.CursorTranslator: int translateStatus(int)>:<private>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.filterfw.core.NativeProgram: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.renderscript.Element: void <init>(long,android.renderscript.RenderScript,android.renderscript.Element[],java.lang.String[],int[])>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: boolean getForceEnabled(java.lang.String)>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.app.BackStackRecord: android.app.FragmentTransaction setSharedElement(android.view.View,java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)>:<public>:<android.filterfw.core.FilterGraph>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setCapabilities(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.renderscript.Float2: void mul(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.graphics.drawable.AnimationDrawable.AnimationState: boolean access.100(android.graphics.drawable.AnimationDrawable.AnimationState)>:<static>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Region: boolean isRect()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.net.NetworkFactory: void handleAddRequest(android.net.NetworkRequest,int)>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.accounts.IAccountManager.Stub.Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.CountDownTimer.1: void <init>(android.os.CountDownTimer)>:<>:<android.os.CountDownTimer.1:android.os.Handler>
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.Observable: void <init>()>:<public>:<android.database.Observable>
<android.graphics.drawable.LayerDrawable.LayerState: boolean access.000(android.graphics.drawable.LayerDrawable.LayerState)>:<static>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.webkit.WebViewDelegate: void <init>()>:<>:<android.webkit.WebViewDelegate>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void destroy()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.net.UrlQuerySanitizer.ParameterValuePair: void <init>(android.net.UrlQuerySanitizer,java.lang.String,java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.ParameterValuePair>
<android.renderscript.RenderScript: void rsnScriptBindAllocation(long,long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.os.INetworkManagementService: void setInterfaceUp(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ApplicationErrorReport.1: void <init>()>:<>:<android.app.ApplicationErrorReport.1:android.os.Parcelable.Creator>
<android.app.MediaRouteButton: void <init>(android.content.Context)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.accounts.ChooseAccountActivity: void finish()>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.Notification.Builder: android.graphics.Bitmap access.1200(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.opengl.GLES10: void glMaterialf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.VectorDrawable.VClipPath: void <init>(android.graphics.drawable.VectorDrawable.VClipPath)>:<public>:<android.graphics.drawable.VectorDrawable.VClipPath:android.graphics.drawable.VectorDrawable.VPath>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.graphics.SurfaceTexture: void release()>:<public>:<android.graphics.SurfaceTexture>
<android.os.DropBoxManager.Entry.1: android.os.DropBoxManager.Entry createFromParcel(android.os.Parcel)>:<public>:<android.os.DropBoxManager.Entry.1:android.os.Parcelable.Creator>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.graphics.Path: void native_cubicTo(long,float,float,float,float,float,float)>:<private static native>:<android.graphics.Path>
<android.renderscript.Matrix2f: void loadRotate(float)>:<public>:<android.renderscript.Matrix2f>
<android.print.PrintJobInfo: void <init>()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.WebViewDelegate: boolean isTraceTagEnabled()>:<public>:<android.webkit.WebViewDelegate>
<android.os.Environment.UserEnvironment: java.io.File[] getExternalDirsForVold()>:<public>:<android.os.Environment.UserEnvironment>
<android.app.Presentation: android.view.Display getDisplay()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glFinish()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.PacProxySelector: java.util.List select(java.net.URI)>:<public>:<android.net.PacProxySelector:java.net.ProxySelector>
<android.app.NotificationManager: android.app.NotificationManager 'from'(android.content.Context)>:<public static>:<android.app.NotificationManager>
<android.app.IActivityManager.ContentProviderHolder.1: void <init>()>:<>:<android.app.IActivityManager.ContentProviderHolder.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RippleDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.FileUtils: boolean sync(java.io.FileOutputStream)>:<public static>:<android.os.FileUtils>
<android.app.admin.IDevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.NetworkPolicyManager: void addUidPolicy(int,int)>:<public>:<android.net.NetworkPolicyManager>
<android.app.Notification.Builder: int access.1300(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.graphics.drawable.RippleDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.database.sqlite.JankSqlite.DBOprMonitor: void <init>(long,int)>:<public>:<android.database.sqlite.JankSqlite.DBOprMonitor>
<android.graphics.drawable.AnimatedStateListDrawable: void <init>(android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState,android.content.res.Resources)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.ChangeImageTransform.1: void <init>()>:<>:<android.transition.ChangeImageTransform.1:android.animation.TypeEvaluator>
<android.app.Notification.WearableExtender: java.util.List getPages()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ActionBar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.accounts.IAccountAuthenticator: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.app.ProgressDialog: void onStart()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.UserManager: java.util.List getUserProfiles()>:<public>:<android.os.UserManager>
<android.net.IConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.renderscript.Float2: void sub(float)>:<public>:<android.renderscript.Float2>
<android.graphics.drawable.RippleBackground.1: void onAnimationCancel(android.animation.Animator)>:<public>:<android.graphics.drawable.RippleBackground.1:android.animation.AnimatorListenerAdapter>
<android.emoji.EmojiFactory.CustomLinkedHashMap: void <init>(android.emoji.EmojiFactory)>:<public>:<android.emoji.EmojiFactory.CustomLinkedHashMap:java.util.LinkedHashMap,java.util.HashMap,java.util.AbstractMap>
<android.os.storage.StorageManager: android.os.Looper access.400(android.os.storage.StorageManager)>:<static>:<android.os.storage.StorageManager>
<android.opengl.GLES10: void glNormal3x(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.Account: boolean equals(java.lang.Object)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String getDestinationString(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>:<public abstract>:<android.webkit.WebSettings>
<android.net.NetworkRequest: int hashCode()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.transition.TransitionSet: int getOrdering()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.INotificationManager: void setPackagePriority(java.lang.String,int,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.print.PrintDocumentAdapter.WriteResultCallback: void <init>()>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.net.wifi.WifiScanner.ScanListener: void onFullResult(android.net.wifi.ScanResult)>:<public abstract>:<android.net.wifi.WifiScanner.ScanListener:android.net.wifi.WifiScanner.ActionListener>
<android.graphics.Canvas: void native_concat(long,long)>:<private static native>:<android.graphics.Canvas>
<android.print.PrinterDiscoverySession: void stopPrinterStateTracking(android.print.PrinterId)>:<public final>:<android.print.PrinterDiscoverySession>
<android.net.TrafficStats: void incrementOperationCount(int,int)>:<public static>:<android.net.TrafficStats>
<android.graphics.Rect: int describeContents()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.UEventObserver: android.os.UEventObserver.UEventThread getThread()>:<private static>:<android.os.UEventObserver>
<android.filterfw.core.Filter: void <init>(java.lang.String)>:<public>:<android.filterfw.core.Filter>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.app.ContextImpl.55: void <init>()>:<>:<android.app.ContextImpl.55:android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLUtils: int native_getInternalFormat(android.graphics.Bitmap)>:<private static native>:<android.opengl.GLUtils>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstAtop()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityThread.ApplicationThread: void scheduleLowMemory()>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.alsa.AlsaCardsParser: int getNumCardRecords()>:<public>:<android.alsa.AlsaCardsParser>
<android.net.InterfaceConfiguration: boolean hasFlag(java.lang.String)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.Short2: void copyTo(short[],int)>:<public>:<android.renderscript.Short2>
<android.app.IServiceConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IServiceConnection.Stub:android.os.Binder,android.app.IServiceConnection>
<android.app.ApplicationThreadProxy: void updateTimePrefs(boolean)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.ColorFilter: void finalize()>:<protected>:<android.graphics.ColorFilter>
<android.net.wifi.IWifiManager: void enableTdls(java.lang.String,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setAnimationMatrix()>:<private>:<android.transition.ChangeTransform.PathAnimatorMatrix>
<android.net.wifi.WifiScanner: java.lang.Object getListener(int)>:<private static>:<android.net.wifi.WifiScanner>
<android.net.Uri: android.net.Uri.Builder buildUpon()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.IPowerManager: void shutdown(boolean,boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.os.IMultiWinService.Stub.Proxy: int getFocusMultiWinFrame(android.graphics.Rect)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.IApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.renderscript.Type: int getZ()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.pdf.PdfRenderer: void doClose()>:<private>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.Long4: void div(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.webkit.WebView.PrivateAccess: void awakenScrollBars(int,boolean)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.ApplicationPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.ConnectivityManager: int stopUsingNetworkFeatureForSubscription(int,java.lang.String,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.app.backup.FileBackupHelperBase: void dtor(long)>:<private static native>:<android.app.backup.FileBackupHelperBase>
<android.hwcontrol.HwWidgetFactory.HwTextView: boolean playIvtEffect(android.content.Context,java.lang.String,android.text.Spannable,java.lang.Object,int,int,int,int)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.hwcontrol.HwWidgetFactory.Factory: android.graphics.drawable.Drawable getEdgeEffectImpl(android.content.res.Resources)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.filterfw.core.Filter: boolean canProcess()>:<final>:<android.filterfw.core.Filter>
<android.webkit.WebView: void clearSslPreferences()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>:<public>:<android.graphics.Canvas>
<android.renderscript.FieldPacker: void addI8(byte)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>:<public>:<android.graphics.Paint>
<android.app.ApplicationPackageManager: void addPackageToPreferred(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.RouteInfo: boolean isIPv6Default()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.os.PersistableBundle: void <init>(android.os.Parcel,int)>:<>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.FragmentState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.FragmentState.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager: void <init>(android.content.Context,com.android.internal.app.IAppOpsService)>:<>:<android.app.AppOpsManager>
<android.webkit.CookieManager: void flush()>:<public abstract>:<android.webkit.CookieManager>
<android.ddm.DdmHandleExit: void <clinit>()>:<static>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getLastPathSegment()>:<public>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.TrafficStats: long nativeGetIfaceStat(java.lang.String,int)>:<private static native>:<android.net.TrafficStats>
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.database.CursorWrapper: void close()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.IActivityPendingResult.Stub: android.app.IActivityPendingResult asInterface(android.os.IBinder)>:<public static>:<android.app.IActivityPendingResult.Stub:android.os.Binder,android.app.IActivityPendingResult>
<android.net.NetworkCapabilities: int access.302(android.net.NetworkCapabilities,int)>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.pdf.PdfDocument: void finalize()>:<protected>:<android.graphics.pdf.PdfDocument>
<android.app.Notification.BigTextStyle: void addExtras(android.os.Bundle)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.app.backup.RestoreDescription: void <init>(android.os.Parcel)>:<private>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.net.LocalSocketImpl: void listen_native(java.io.FileDescriptor,int)>:<private native>:<android.net.LocalSocketImpl>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>:<public>:<android.app.ActivityManager>
<android.app.ActionBar.Tab: java.lang.Object getTag()>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.ActionBar: void setLogo(int)>:<public abstract>:<android.app.ActionBar>
<android.net.NetworkQuotaInfo: long getHardLimitBytes()>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.renderscript.Float3: void copyTo(float[],int)>:<public>:<android.renderscript.Float3>
<android.graphics.drawable.GradientDrawable: void setColor(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkStats: void setElapsedRealtime(long)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.PersistableBundle: void <clinit>()>:<static>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(java.lang.Throwable)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.net.wifi.WifiActivityEnergyInfo.1: android.net.wifi.WifiActivityEnergyInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiActivityEnergyInfo.1:android.os.Parcelable.Creator>
<android.app.IWallpaperManager: int getWidthHint()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.app.Notification.Builder: android.app.Notification.Builder setVibrate(long[])>:<public>:<android.app.Notification.Builder>
<android.app.Activity: android.content.ComponentName getCallingActivity()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.Drawable: int getOpacity()>:<public abstract>:<android.graphics.drawable.Drawable>
<android.os.BatteryStats: boolean dumpTimeEstimate(java.io.PrintWriter,java.lang.String,long[],int,long,long)>:<private static>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.os.storage.IMountServiceListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.storage.IMountServiceListener.Stub.Proxy:android.os.storage.IMountServiceListener>
<android.renderscript.Float3: void setValues(float,float,float)>:<public>:<android.renderscript.Float3>
<android.os.PowerManagerInternal: void <init>()>:<public>:<android.os.PowerManagerInternal>
<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>:<public>:<android.filterfw.io.GraphIOException:java.lang.Exception,java.lang.Throwable>
<android.filterfw.core.OutputPort: boolean isConnected()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)>:<public>:<android.emoji.EmojiFactory>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.AnimatedRotateDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.LinkQualityInfo: int getDataSampleDuration()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.net.LinkProperties.CompareResult: void <init>()>:<public>:<android.net.LinkProperties.CompareResult>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: void pauseTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Short3: android.renderscript.Short3 mod(android.renderscript.Short3,android.renderscript.Short3)>:<public static>:<android.renderscript.Short3>
<android.database.MergeCursor: double getDouble(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.IMultiWinService.Stub.Proxy: void clearAllTokens()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManagerResponse:android.os.IInterface>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ContextImpl: void setOuterContext(android.content.Context)>:<final>:<android.app.ContextImpl:android.content.Context>
<android.net.NetworkConfig: void <init>(java.lang.String)>:<public>:<android.net.NetworkConfig>
<android.net.wifi.RttManager: java.lang.Object removeListener(int)>:<private static>:<android.net.wifi.RttManager>
<android.net.nsd.NsdServiceInfo.1: void <init>()>:<>:<android.net.nsd.NsdServiceInfo.1:android.os.Parcelable.Creator>
<android.net.WebAddress: java.lang.String toString()>:<public>:<android.net.WebAddress>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Path: android.renderscript.Path createStaticPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation)>:<public static>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>:<public>:<android.app.Notification.Builder>
<android.os.Debug: long getNativeHeapAllocatedSize()>:<public static native>:<android.os.Debug>
<android.net.nsd.NsdManager.DiscoveryListener: void onStopDiscoveryFailed(java.lang.String,int)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.filterfw.core.Frame: void reset(android.filterfw.core.FrameFormat)>:<protected>:<android.filterfw.core.Frame>
<android.net.WebAddress: void setPort(int)>:<public>:<android.net.WebAddress>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.DepthFunc getDepthFunc()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.INetworkPolicyListener.Stub: void <init>()>:<public>:<android.net.INetworkPolicyListener.Stub:android.os.Binder,android.net.INetworkPolicyListener>
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.net.http.RequestQueue: org.apache.http.HttpHost access.100(android.net.http.RequestQueue)>:<static>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.os.UserManager: void <clinit>()>:<static>:<android.os.UserManager>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDelegate()>:<private>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.net.LocalSocketAddress.Namespace: int getId()>:<>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.net.INetworkPolicyManager.Stub.Proxy: boolean getRestrictBackground()>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.filterfw.core.Frame: java.nio.ByteBuffer getData()>:<public abstract>:<android.filterfw.core.Frame>
<android.R.attr: void <init>()>:<public>:<android.R.attr>
<android.opengl.GLLogWrapper: void glColor4ub(byte,byte,byte,byte)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>:<public>:<android.graphics.NinePatch>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor openInternal(java.io.File,int)>:<private static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.LoaderManagerImpl: void finishRetain()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.opengl.GLLogWrapper: void glOrthox(int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>:<public>:<android.graphics.drawable.Drawable>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.filterfw.core.GLFrame: boolean nativeResetParams()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo access.502(android.print.PrinterInfo,android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.graphics.LayerRasterizer: void <init>()>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.print.PrintJobInfo: void setTag(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition setDuration(long)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.accounts.ChooseAccountActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.app.IServiceConnection.Stub.Proxy: void connected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.IServiceConnection.Stub.Proxy:android.app.IServiceConnection>
<android.net.DhcpResults: boolean setServerAddress(java.lang.String)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.usage.ConfigurationStats: int describeContents()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.app.ActivityThread.ApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.transition.Transition: int[] parseMatchOrder(java.lang.String)>:<private static>:<android.transition.Transition:java.lang.Cloneable>
<android.hsm.HwCameraPermWrapper: void <clinit>()>:<static>:<android.hsm.HwCameraPermWrapper>
<android.sax.Element: void checkRequiredChildren(org.xml.sax.Locator)>:<>:<android.sax.Element>
<android.graphics.Picture: void finalize()>:<protected>:<android.graphics.Picture>
<android.hwtheme.HwThemeManager: void updateIconCache(android.content.pm.PackageItemInfo,java.lang.String,java.lang.String,int,int)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.ContextImpl.42: void <init>()>:<>:<android.app.ContextImpl.42:android.app.ContextImpl.ServiceFetcher>
<android.app.ListFragment: long getSelectedItemId()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.Uri.StringUri: void <init>(java.lang.String)>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.os.PowerManager.WakeLock: void <init>(android.os.PowerManager,int,java.lang.String,java.lang.String)>:<>:<android.os.PowerManager.WakeLock>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.IPowerManager: void nap(long)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.String,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>:<public>:<android.filterfw.core.FilterContext>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable.BitmapState,android.content.res.Resources)>:<private>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityTransitionCoordinator.2: boolean onPreDraw()>:<public>:<android.app.ActivityTransitionCoordinator.2:android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Binder: boolean isProxy(android.os.IInterface)>:<public static final>:<android.os.Binder:android.os.IBinder>
<android.os.BatteryStats.Counter: void logState(android.util.Printer,java.lang.String)>:<public abstract>:<android.os.BatteryStats.Counter>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)>:<public>:<android.os.PerformanceCollector>
<android.os.BatteryStats: long getPhoneSignalStrengthTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float)>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public static>:<android.graphics.drawable.Drawable>
<android.renderscript.RenderScript.MessageThread: void <init>(android.renderscript.RenderScript)>:<>:<android.renderscript.RenderScript.MessageThread:java.lang.Thread>
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.IPrintManager.Stub.Proxy: void restartPrintJob(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.transition.TransitionSet.1: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.TransitionSet.1:android.transition.Transition.TransitionListenerAdapter>
<android.os.Messenger.1: void <init>()>:<>:<android.os.Messenger.1:android.os.Parcelable.Creator>
<android.accounts.IAccountManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>:<public>:<android.app.RemoteInput.Builder>
<android.net.NetworkStats: java.lang.String setToCheckinString(int)>:<public static>:<android.net.NetworkStats:android.os.Parcelable>
<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>:<private>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.net.wifi.WifiInfo: int getNetworkId()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.os.MemoryFile>
<android.net.wifi.WifiInfo: int describeContents()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.EnterTransitionCoordinator: void onRemoteExitTransitionComplete()>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.Allocation: void updateCacheInfo(android.renderscript.Type)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IActivityManager: boolean isUserAMonkey()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkCapabilities: void combineTransportTypes(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: int getSize()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.net.dhcp.DhcpPacket: void finishPacket(java.nio.ByteBuffer)>:<abstract>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLES10: void glFlush()>:<public static native>:<android.opengl.GLES10>
<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Long4: void <init>()>:<public>:<android.renderscript.Long4>
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.NetworkPolicyManager: android.net.NetworkPolicyManager 'from'(android.content.Context)>:<public static>:<android.net.NetworkPolicyManager>
<android.app.admin.IDevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.accounts.AccountManager.Future2Task: android.accounts.AccountManager.Future2Task start()>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.opengl.GLErrorWrapper: void glClearColorx(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.ParcelFileDescriptor.Status: void <init>(int)>:<public>:<android.os.ParcelFileDescriptor.Status>
<android.net.INetworkScoreService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.INetworkScoreService.Stub:android.os.Binder,android.net.INetworkScoreService>
<android.os.IUserManager: int checkRestrictionsChallenge(java.lang.String)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.Bitmap: android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)>:<public static>:<android.net.NetworkPolicyManager>
<android.app.BackStackRecord: android.app.FragmentTransaction setSharedElements(android.util.Pair[])>:<public transient>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>:<public>:<android.os.storage.StorageManager>
<android.net.wifi.WifiSsid: boolean isArrayAllZeroes(byte[])>:<private>:<android.net.wifi.WifiSsid:android.os.Parcelable>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>:<public>:<android.os.MessageQueue>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.Bitmap: void nativeCopyPixelsToBuffer(long,java.nio.Buffer)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.http.EventHandler: void error(int,java.lang.String)>:<public abstract>:<android.net.http.EventHandler>
<android.filterfw.core.FilterFunction: void connectFilterOutputs()>:<private>:<android.filterfw.core.FilterFunction>
<android.opengl.GLLogWrapper: void glScissor(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManagerResponse.Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)>:<public>:<android.emoji.EmojiFactory>
<android.net.NetworkStats.Entry: java.lang.String toString()>:<public>:<android.net.NetworkStats.Entry>
<android.app.backup.RestoreSet.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.backup.RestoreSet.1:android.os.Parcelable.Creator>
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.Paint: float ascent()>:<public native>:<android.graphics.Paint>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>:<public>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.app.ActivityManager.TaskThumbnail: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.graphics.Matrix: void native_setSinCos(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.print.IPrintManager: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.filterfw.core.FilterSurfaceView: void <clinit>()>:<static>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.storage.IMountService.Stub.Proxy: boolean isUsbMassStorageEnabled()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ActivityThread.ApplicationThread: void dumpDatabaseInfo(java.io.FileDescriptor,java.lang.String[])>:<private>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.app.backup.BackupTransport.TransportImpl: java.lang.String currentDestinationString()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.app.LoadedApk.ReceiverDispatcher: void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.webkit.CacheManager.CacheResult: java.io.InputStream getInputStream()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.net.InterfaceConfiguration.1: android.net.InterfaceConfiguration createFromParcel(android.os.Parcel)>:<public>:<android.net.InterfaceConfiguration.1:android.os.Parcelable.Creator>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.net.INetworkPolicyListener.Stub.Proxy: void onMeteredIfacesChanged(java.lang.String[])>:<public>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry,int)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Short2: android.renderscript.Short2 mul(android.renderscript.Short2,short)>:<public static>:<android.renderscript.Short2>
<android.app.IActivityManager: android.content.ComponentName getCallingActivity(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.RenderScript.MessageThread: void run()>:<public>:<android.renderscript.RenderScript.MessageThread:java.lang.Thread>
<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: void releaseConnection()>:<private>:<android.database.sqlite.SQLiteSession>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>:<public abstract>:<android.filterfw.core.FrameManager>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.app.TabActivity: android.widget.TabHost getTabHost()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.LoadedApk: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>:<>:<android.app.LoadedApk>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.CommonTimeUtils: int transactGetInt(int,int)>:<public>:<android.os.CommonTimeUtils>
<android.net.NetworkStats: android.net.NetworkStats addValues(java.lang.String,int,int,int,long,long,long,long,long)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isPowerSavingTheme()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.print.PrintDocumentInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTag(java.lang.Object)>:<public abstract>:<android.app.ActionBar.Tab>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated90(int)>:<public>:<android.filterfw.geometry.Point>
<android.app.ListActivity.1: void <init>(android.app.ListActivity)>:<>:<android.app.ListActivity.1:java.lang.Runnable>
<android.app.ApplicationErrorReport.AnrInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.WorkSource: void clearNames()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.webkit.WebViewProvider: java.lang.String getTitle()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.BackStackRecord: int commit()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.GLLogWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HuaweiApConfiguration: void <clinit>()>:<static>:<android.net.wifi.HuaweiApConfiguration:android.os.Parcelable>
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.filterfw.core.GLEnvironment: void swapBuffers()>:<public>:<android.filterfw.core.GLEnvironment>
<android.os.JankBdData: void <init>(android.os.Parcel,android.os.JankBdData.1)>:<>:<android.os.JankBdData:android.os.Parcelable>
<android.app.Dialog: void setContentView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.print.PrintJob: boolean isCancelled()>:<public>:<android.print.PrintJob>
<android.test.InstrumentationTestCase: void runTest()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.transition.ChangeBounds.4: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.4:android.util.Property>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.transition.ChangeText: int access.100(android.transition.ChangeText)>:<static>:<android.transition.ChangeText:android.transition.Transition>
<android.net.TrafficStats: long getMobileTcpRxPackets()>:<public static>:<android.net.TrafficStats>
<android.app.backup.RestoreDescription.1: android.app.backup.RestoreDescription[] newArray(int)>:<public>:<android.app.backup.RestoreDescription.1:android.os.Parcelable.Creator>
<android.app.backup.RestoreSet.1: android.app.backup.RestoreSet[] newArray(int)>:<public>:<android.app.backup.RestoreSet.1:android.os.Parcelable.Creator>
<android.graphics.Region: void scale(float,android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.filterfw.core.GenerateProgramPort: java.lang.String name()>:<public abstract>:<android.filterfw.core.GenerateProgramPort:java.lang.annotation.Annotation>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.transition.Slide: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.transition.Transition.EpicenterCallback: void <init>()>:<public>:<android.transition.Transition.EpicenterCallback>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean remove(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.job.JobInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.job.JobInfo.1:android.os.Parcelable.Creator>
<android.os.INetworkManagementService.Stub.Proxy: void shutdown()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.ParcelableParcel.1: android.os.ParcelableParcel createFromParcel(android.os.Parcel)>:<public>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.app.SearchableInfo: void <init>(android.os.Parcel)>:<>:<android.app.SearchableInfo:android.os.Parcelable>
<android.os.Parcel: char[] createCharArray()>:<public final>:<android.os.Parcel>
<android.os.BatteryStats: int getMobileRadioActiveUnknownCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.WifiCHRStateManager: void updateLinkType(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.accounts.ChooseTypeAndAccountActivity: int getItemIndexToSelect(java.util.ArrayList,java.lang.String,boolean)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.graphics.Canvas: void native_drawText(long,java.lang.String,int,int,float,float,int,long,long)>:<private static native>:<android.graphics.Canvas>
<android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String getDataManagementLabel(java.lang.String)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.renderscript.RenderScript: long nProgramVertexCreate(java.lang.String,java.lang.String[],long[])>:<>:<android.renderscript.RenderScript>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isActivePasswordSufficient(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)>:<public>:<android.filterfw.core.GLEnvironment>
<android.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(long,long,android.net.NetworkStatsHistory.Entry)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.transition.ChangeBounds.9: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.ChangeBounds.9:android.transition.Transition.TransitionListenerAdapter>
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrinterDiscoverySession: void access.000(android.print.PrinterDiscoverySession,java.util.List)>:<static>:<android.print.PrinterDiscoverySession>
<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam valueOf(java.lang.String)>:<public static>:<android.renderscript.Program.ProgramParam:java.lang.Enum>
<android.app.AppOpsManager.OpEntry: void <init>(int,int,long,long,int)>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void detachCancellationSignal(android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glLineWidth(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread: void access.3200(android.app.ActivityThread,android.os.IBinder,boolean)>:<static>:<android.app.ActivityThread>
<android.graphics.pdf.PdfDocument.PageInfo: int access.602(android.graphics.pdf.PdfDocument.PageInfo,int)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.app.TimePickerDialog.1: void <init>(android.app.TimePickerDialog)>:<>:<android.app.TimePickerDialog.1:android.widget.TimePicker.ValidationCallback>
<android.hwtheme.HwThemeManager: void setThemeFont()>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.backup.IRestoreSession.Stub.Proxy: void endRestoreSession()>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.net.NetworkPolicyManager: void dumpRules(java.io.PrintWriter,int)>:<public static>:<android.net.NetworkPolicyManager>
<android.net.TrafficStats: android.net.NetworkStats stopDataProfiling(android.content.Context)>:<public static>:<android.net.TrafficStats>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.net.wifi.HwCustBaseWifiFactory: void <clinit>()>:<static>:<android.net.wifi.HwCustBaseWifiFactory>
<android.os.Parcel: void writeArrayMapInternal(android.util.ArrayMap)>:<>:<android.os.Parcel>
<android.net.NetworkTemplate: void forceAllNetworkTypes()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.Atlas.SlicePolicy: void <init>(int,int,int,android.graphics.Atlas.SlicePolicy.SplitDecision)>:<>:<android.graphics.Atlas.SlicePolicy:android.graphics.Atlas.Policy>
<android.webkit.WebViewProvider: android.webkit.WebViewProvider.ViewDelegate getViewDelegate()>:<public abstract>:<android.webkit.WebViewProvider>
<android.R: void <init>()>:<public>:<android.R>
<android.app.BackStackRecord: int commitInternal(boolean)>:<>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.renderscript.Allocation.1: void <clinit>()>:<static>:<android.renderscript.Allocation.1>
<android.webkit.IWebViewUpdateService.Stub.Proxy: void notifyRelroCreationCompleted(boolean,boolean)>:<public>:<android.webkit.IWebViewUpdateService.Stub.Proxy:android.webkit.IWebViewUpdateService>
<android.webkit.WebViewFactory: boolean access.100()>:<static>:<android.webkit.WebViewFactory>
<android.os.BatteryStats.Uid: long getNetworkActivityBytes(int,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.database.Cursor: boolean isNull(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.sax.EndTextElementListener: void end(java.lang.String)>:<public abstract>:<android.sax.EndTextElementListener>
<android.net.MobileLinkQualityInfo: int getLteRsrp()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>:<public>:<android.appwidget.AppWidgetHost>
<android.net.DhcpStateMachine: com.android.internal.util.State access.1200(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.app.ActivityTransitionState: boolean startExitBackTransition(android.app.Activity)>:<public>:<android.app.ActivityTransitionState>
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.drm.DrmManagerClient: android.drm.DrmManagerClient.OnErrorListener access.600(android.drm.DrmManagerClient)>:<static>:<android.drm.DrmManagerClient>
<android.app.usage.UsageStats: void <init>(android.app.usage.UsageStats)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.net.LocalSocket: boolean isOutputShutdown()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.os.IPowerManager.Stub.Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.UserManager: int getUserCount()>:<public>:<android.os.UserManager>
<android.app.ActivityThread.ApplicationThread: void dumpReceiverTimeStamp()>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.database.sqlite.SQLiteSession: void throwIfNestedTransaction()>:<private>:<android.database.sqlite.SQLiteSession>
<android.app.ActivityOptions: boolean isReturning()>:<public>:<android.app.ActivityOptions>
<android.renderscript.Byte2: android.renderscript.Byte2 div(android.renderscript.Byte2,byte)>:<public static>:<android.renderscript.Byte2>
<android.net.LinkProperties: boolean removeLinkAddress(android.net.LinkAddress)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.os.PerformanceCollector: void setPerformanceResultsWriter(android.os.PerformanceCollector.PerformanceResultsWriter)>:<public>:<android.os.PerformanceCollector>
<android.webkit.WebStorage: void deleteAllData()>:<public>:<android.webkit.WebStorage>
<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.FragmentState: void <init>(android.os.Parcel)>:<public>:<android.app.FragmentState:android.os.Parcelable>
<android.hsm.HwMediaPermWrapper: void <clinit>()>:<static>:<android.hsm.HwMediaPermWrapper>
<android.net.wifi.WifiCHRStateManager: void updateApMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.NativeActivity: byte[] onSaveInstanceStateNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.ContextImpl.48: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.48:android.app.ContextImpl.ServiceFetcher>
<android.net.http.AndroidHttpClientConnection: void assertOpen()>:<private>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.net.wifi.WifiManager: boolean isAdditionalStaSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.drawable.AnimatedStateListDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.FindActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.INetworkPolicyManager: void setRestrictBackground(boolean)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.os.BatteryStats.Uid.Pkg.Serv: void <init>(android.os.BatteryStats.Uid.Pkg)>:<public>:<android.os.BatteryStats.Uid.Pkg.Serv>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.app.NativeActivity: void onResume()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.INetworkScoreCache: void clearScores()>:<public abstract>:<android.net.INetworkScoreCache:android.os.IInterface>
<android.net.http.Connection: boolean keepAlive(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>:<private>:<android.net.http.Connection>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.ddm.DdmHandleAppName: void connected()>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.Bitmap: void <clinit>()>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpTheme(android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.Debug: long getNativeHeapFreeSize()>:<public static native>:<android.os.Debug>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int,int)>:<public>:<android.app.Notification.Builder>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.opengl.GLSurfaceView.GLThread: void surfaceDestroyed()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.hwtheme.HwThemeManager: void setThemeFontOnConfigChg(android.content.res.Configuration)>:<public static>:<android.hwtheme.HwThemeManager>
<android.os.BaseBundle: void <init>(int)>:<>:<android.os.BaseBundle>
<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.WifiLinkLayerStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiLinkLayerStats.1:android.os.Parcelable.Creator>
<android.net.WebAddress: java.lang.String getPath()>:<public>:<android.net.WebAddress>
<android.filterfw.core.NativeBuffer: void assertWritable()>:<protected>:<android.filterfw.core.NativeBuffer>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.net.LocalSocket: void setSendBufferSize(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.print.IPrintManager.Stub: android.print.IPrintManager asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.graphics.Outline: boolean isEmpty()>:<public>:<android.graphics.Outline>
<android.graphics.drawable.GradientDrawable: void <init>()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Notification.Builder: android.app.Notification.Builder setUsesChronometer(boolean)>:<public>:<android.app.Notification.Builder>
<android.graphics.DiscretePathEffect: void <init>(float,float)>:<public>:<android.graphics.DiscretePathEffect:android.graphics.PathEffect>
<android.renderscript.Short4: android.renderscript.Short4 sub(android.renderscript.Short4,short)>:<public static>:<android.renderscript.Short4>
<android.net.wifi.ScanSettings.1: void <init>()>:<>:<android.net.wifi.ScanSettings.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLES10: void glDepthRangex(int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.http.HttpResponseCache: int getRequestCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.net.MobileDataStateTracker: void updateLinkProperitesAndCapatilities(android.content.Intent)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.drawable.RippleDrawable: void setPaddingMode(int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLErrorWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.InterfaceConfiguration: java.lang.String access.002(android.net.InterfaceConfiguration,java.lang.String)>:<static>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.job.IJobCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.graphics.pdf.PdfEditor: void doClose()>:<private>:<android.graphics.pdf.PdfEditor>
<android.os.SELinux: java.lang.String getFileContext(java.lang.String)>:<public static final native>:<android.os.SELinux>
<android.app.IActivityManager: void clearPendingBackup()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)>:<private>:<android.database.sqlite.SQLiteOpenHelper>
<android.graphics.drawable.VectorDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Action.WearableExtender: boolean isAvailableOffline()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.graphics.Matrix.1: boolean postScale(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.filterfw.core.GenerateFinalPort: java.lang.String name()>:<public abstract>:<android.filterfw.core.GenerateFinalPort:java.lang.annotation.Annotation>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES11: void glPointSizePointerOESBounds(int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.NetworkCapabilities: void combineSpecifiers(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.Dialog: void dismiss()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Matrix.1: boolean postConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.os.StrictMode: void noteSlowCall(java.lang.String)>:<public static>:<android.os.StrictMode>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.os.storage.IMountService.Stub.Proxy: long lastMaintenance()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.job.JobInfo: void <init>(android.os.Parcel,android.app.job.JobInfo.1)>:<>:<android.app.job.JobInfo:android.os.Parcelable>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.IWriteResultCallback,android.os.ParcelFileDescriptor,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.app.Presentation: void onStart()>:<protected>:<android.app.Presentation:android.app.Dialog>
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.admin.IDevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.Point: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.graphics.Path: void native_transform(long,long)>:<private static native>:<android.graphics.Path>
<android.app.admin.IDevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.storage.StorageManager.ListenerDelegate.1: void handleMessage(android.os.Message)>:<public>:<android.os.storage.StorageManager.ListenerDelegate.1:android.os.Handler>
<android.os.UserHandle: int myUserId()>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.net.wifi.WifiConfiguration.Visibility: void <init>(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiConfiguration.Visibility>
<android.os.BatteryStats: long getBluetoothStateTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>:<public static native>:<android.opengl.EGL14>
<android.net.NetworkPolicy: void clearSnooze()>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.RenderScript: long rsnAllocationCubeCreateFromBitmap(long,long,int,android.graphics.Bitmap,int)>:<native>:<android.renderscript.RenderScript>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.print.PrintJobInfo: void setCancelling(boolean)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.print.PrintJob: boolean isInImmutableState()>:<private>:<android.print.PrintJob>
<android.renderscript.Program.BaseProgramBuilder: void initProgram(android.renderscript.Program)>:<protected>:<android.renderscript.Program.BaseProgramBuilder>
<android.print.PrinterCapabilitiesInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskReads()>:<public static>:<android.os.StrictMode>
<android.hwtheme.HwThemeManagerDummy: boolean saveIconToCache(android.graphics.Bitmap,java.lang.String,boolean)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.os.MessageQueue: android.os.Message next()>:<>:<android.os.MessageQueue>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>:<private>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.INetworkStatsSession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.os.BatteryStats: java.util.Map getWakeupReasonStats()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: android.widget.ImageView access.300(android.webkit.HwFindActionModeCallback)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.renderscript.Short4: void mod(short)>:<public>:<android.renderscript.Short4>
<android.app.IApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.AliasActivity: android.content.Intent parseAlias(org.xmlpull.v1.XmlPullParser)>:<private>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.MobileDataStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.LocalSocketImpl.SocketInputStream: int available()>:<public>:<android.net.LocalSocketImpl.SocketInputStream:java.io.InputStream>
<android.net.http.Request: void <clinit>()>:<static>:<android.net.http.Request>
<android.app.EnterTransitionCoordinator: void viewsReady(android.util.ArrayMap)>:<protected>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.transition.Transition: long getStartDelay()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.accounts.AccountManager: android.accounts.IAccountManager access.000(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.mtp.MtpDatabase: void native_finalize()>:<private final native>:<android.mtp.MtpDatabase>
<android.net.wifi.p2p.WifiP2pGroup: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.hwtheme.HwThemeManager: void <init>()>:<public>:<android.hwtheme.HwThemeManager>
<android.graphics.Paint: void native_setLetterSpacing(long,float)>:<private static native>:<android.graphics.Paint>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.app.HwCustSvcFactory: android.app.HwCustSvcFactory.Factory inst()>:<public static>:<android.app.HwCustSvcFactory>
<android.transition.ChangeText.2: void <init>(android.transition.ChangeText,android.widget.TextView,int)>:<>:<android.transition.ChangeText.2:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.lang.String toString()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.alsa.AlsaDevicesParser: void <init>()>:<public>:<android.alsa.AlsaDevicesParser>
<android.app.ApplicationPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.test.InstrumentationTestCase: void access.000(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean)>:<static>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2308(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.netdetect.HwCustNetDetectServiceImpl: void setWebDetectAlarm(java.lang.String,java.lang.String,long)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>:<public>:<android.renderscript.FieldPacker>
<android.net.RssiCurve: boolean equals(java.lang.Object)>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.graphics.Typeface: android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[])>:<public static>:<android.graphics.Typeface>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glPointParameterf(int,float)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.WebView.FindListenerDistributor: android.webkit.WebView.FindListener access.002(android.webkit.WebView.FindListenerDistributor,android.webkit.WebView.FindListener)>:<static>:<android.webkit.WebView.FindListenerDistributor:android.webkit.WebView.FindListener>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.INotificationManager.Stub.Proxy: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.IActivityManager: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.BatteryStats: long computeRealtime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.accounts.AccountManager.AmsTask: void doWork()>:<public abstract>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.os.Debug: void <clinit>()>:<static>:<android.os.Debug>
<android.os.IHDMIConnectService.Stub.Proxy: void setHDMIEnable(boolean)>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.net.LinkProperties: boolean isProvisioned()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)>:<>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.INotificationManager: void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.app.ContextImpl: boolean checkPrimaryVolumeIsSD()>:<private static>:<android.app.ContextImpl:android.content.Context>
<android.app.AppImportanceMonitor.1: void onProcessStateChanged(int,int,int)>:<public>:<android.app.AppImportanceMonitor.1:android.app.IProcessObserver.Stub,android.os.Binder>
<android.app.job.JobScheduler: void <init>()>:<public>:<android.app.job.JobScheduler>
<android.app.Notification.Style: boolean hasProgress()>:<protected>:<android.app.Notification.Style>
<android.renderscript.FieldPacker: void reset()>:<public>:<android.renderscript.FieldPacker>
<android.app.BackStackRecord: void configureTransitions(int,android.app.BackStackRecord.TransitionState,boolean,android.util.SparseArray,android.util.SparseArray)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.ActivityManager.RunningAppProcessInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.RunningAppProcessInfo.1:android.os.Parcelable.Creator>
<android.mtp.MtpStorage: void <init>(android.os.storage.StorageVolume,android.content.Context)>:<public>:<android.mtp.MtpStorage>
<android.transition.Crossfade: void <clinit>()>:<static>:<android.transition.Crossfade:android.transition.Transition>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.drawable.StateListDrawable.StateListState: int indexOfStateSet(int[])>:<>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Double3: void copyTo(double[],int)>:<public>:<android.renderscript.Double3>
<android.app.ActivityThread: void handleLowMemory()>:<final>:<android.app.ActivityThread>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.graphics.SurfaceTexture.OnFrameAvailableListener: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public abstract>:<android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(java.lang.String,java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.filterfw.core.NativeFrame: byte[] getNativeData(int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.webkit.WebViewProvider: void setWebViewClient(android.webkit.WebViewClient)>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable.LayerState,android.content.res.Resources)>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.sqlite.SQLiteSession: boolean hasNestedTransaction()>:<public>:<android.database.sqlite.SQLiteSession>
<android.emoji.EmojiFactory: int nativeGetVendorSpecificSjisFromAndroidPua(long,int)>:<private native>:<android.emoji.EmojiFactory>
<android.accessibilityservice.AccessibilityService.Callbacks: void onServiceConnected()>:<public abstract>:<android.accessibilityservice.AccessibilityService.Callbacks>
<android.drm.DrmManagerClient: int removeAllRights()>:<public>:<android.drm.DrmManagerClient>
<android.print.PageRange: int describeContents()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromRotatedRect(android.filterfw.geometry.Point,android.filterfw.geometry.Point,float)>:<public static>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.app.ActionBar: void removeAllTabs()>:<public abstract>:<android.app.ActionBar>
<android.net.IEthernetServiceListener: void onAvailabilityChanged(boolean)>:<public abstract>:<android.net.IEthernetServiceListener:android.os.IInterface>
<android.graphics.drawable.BitmapDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.IWallpaperManager.Stub.Proxy: void clearWallpaper()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES30: boolean glIsSampler(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Bitmap: int getByteCount()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.FragmentManagerImpl: void dispatchStart()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.WifiChannel: void <clinit>()>:<static>:<android.net.wifi.WifiChannel:android.os.Parcelable>
<android.app.ActivityManager: boolean isInLockTaskMode()>:<public>:<android.app.ActivityManager>
<android.net.wifi.RttManager: int getListenerKey(java.lang.Object)>:<private static>:<android.net.wifi.RttManager>
<android.net.http.CertificateChainValidator.NoPreloadHolder: android.net.http.CertificateChainValidator access.100()>:<static>:<android.net.http.CertificateChainValidator.NoPreloadHolder>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.wifi.WifiManager: boolean startWifi()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.app.ActivityThread: void handleCreateBackupAgent(android.app.ActivityThread.CreateBackupAgentData)>:<private>:<android.app.ActivityThread>
<android.app.ContextImpl: java.io.File makeFilename(java.io.File,java.lang.String)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2000(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.LargeBitmap: boolean isRecycled()>:<public final>:<android.graphics.LargeBitmap>
<android.net.NetworkMisc.1: android.net.NetworkMisc[] newArray(int)>:<public>:<android.net.NetworkMisc.1:android.os.Parcelable.Creator>
<android.app.ContextImpl: android.os.IBinder getActivityToken()>:<final>:<android.app.ContextImpl:android.content.Context>
<android.os.BatteryStats: java.util.Map getProcLaunches(int)>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.Debug: int getThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.renderscript.Int3: void addMultiple(android.renderscript.Int3,int)>:<public>:<android.renderscript.Int3>
<android.accessibilityservice.AccessibilityService: void <init>()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Paint: long native_setShader(long,long)>:<private static native>:<android.graphics.Paint>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.UiAutomationConnection: void shutdown()>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public>:<android.accounts.AccountManager>
<android.renderscript.Double3: android.renderscript.Double3 add(android.renderscript.Double3,android.renderscript.Double3)>:<public static>:<android.renderscript.Double3>
<android.os.storage.IMountService.Stub.Proxy: boolean isSecureContainerMounted(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ApplicationPackageManager: void clearPackagePreferredActivities(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.AbstractWindowedCursor: void clearOrCreateWindow(java.lang.String)>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.Notification.Builder: java.lang.CharSequence access.602(android.app.Notification.Builder,java.lang.CharSequence)>:<static>:<android.app.Notification.Builder>
<android.app.ActivityThread.ApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Type,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.app.ApplicationPackageManager: void removePackageFromPreferred(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ColorDrawable.ColorState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ContextImpl.16: void <init>()>:<>:<android.app.ContextImpl.16:android.app.ContextImpl.ServiceFetcher>
<android.app.Notification.BigPictureStyle: void addExtras(android.os.Bundle)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.webkit.UrlInterceptRegistry: void <init>()>:<public>:<android.webkit.UrlInterceptRegistry>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ContextImpl: java.lang.String getOpPackageName()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.wifi.WifiCHRStateManager: void uploadConnectFailed(int,int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean isDualBandSupported()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.IPowerManager: void setStartDreamFromOtherFlag(boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.webkit.WebViewProvider: java.lang.String getUrl()>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.Parcel: boolean hasFileDescriptors()>:<public final>:<android.os.Parcel>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.BaseNetworkStateTracker: android.net.NetworkCapabilities getNetworkCapabilities()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.webkit.WebView: boolean zoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.Byte4: android.renderscript.Byte4 mul(android.renderscript.Byte4,byte)>:<public static>:<android.renderscript.Byte4>
<android.net.Uri.HierarchicalUri: void <init>(java.lang.String,android.net.Uri.Part,android.net.Uri.PathPart,android.net.Uri.Part,android.net.Uri.Part,android.net.Uri.1)>:<>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionPause(android.transition.Transition)>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.opengl.GLSurfaceView.GLThreadManager: void <init>(android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.net.RssiCurve: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.emoji.EmojiFactory: java.lang.String name()>:<public>:<android.emoji.EmojiFactory>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)>:<public static>:<android.os.StrictMode>
<android.transition.Slide.2: void <init>()>:<>:<android.transition.Slide.2:android.transition.Slide.CalculateSlideHorizontal>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>:<public>:<android.os.UserManager>
<android.transition.Slide.6: void <init>()>:<>:<android.transition.Slide.6:android.transition.Slide.CalculateSlideVertical>
<android.app.Fragment: void performTrimMemory(int)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean enableNetwork(int,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.database.CursorWindow: boolean putNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.EGL14: boolean eglWaitGL()>:<public static native>:<android.opengl.EGL14>
<android.appwidget.AppWidgetManager: void <init>(android.content.Context,com.android.internal.appwidget.IAppWidgetService)>:<public>:<android.appwidget.AppWidgetManager>
<android.transition.TransitionSet: android.transition.Transition removeTarget(java.lang.String)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>:<public>:<android.app.WallpaperManager>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.Builder>
<android.os.AsyncTask.SerialExecutor.1: void <init>(android.os.AsyncTask.SerialExecutor,java.lang.Runnable)>:<>:<android.os.AsyncTask.SerialExecutor.1:java.lang.Runnable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureView(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>:<public native>:<android.graphics.Movie>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.net.MobileDataStateTracker: android.net.MobileDataStateTracker.NetworkDataEntry getNetworkDataEntry(int)>:<private static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.print.PrinterCapabilitiesInfo: int hashCode()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager.Channel)>:<private static>:<android.net.wifi.p2p.WifiP2pManager>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.graphics.Atlas.SlicePolicy.SplitDecision: boolean splitHorizontal(int,int,int,int)>:<public abstract>:<android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.net.wifi.HwWifiStatStore: void writeWifiCHRStat(boolean,boolean)>:<private>:<android.net.wifi.HwWifiStatStore>
<android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.net.wifi.WifiInfo: java.lang.String access.202(android.net.wifi.WifiInfo,java.lang.String)>:<static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.NetworkStatsHistory.Entry getLteStatsEntry(int)>:<private>:<android.net.ConnectivityManager>
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.http.Connection: byte[] getBuf()>:<>:<android.net.http.Connection>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.DialogFragment: void dismiss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>:<>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.SearchDialog: boolean isEmpty(android.widget.AutoCompleteTextView)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.os.Debug: int getThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.LayerDrawable: int getId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>:<public>:<android.graphics.Paint>
<android.database.CursorWindow: void <init>(android.os.Parcel,android.database.CursorWindow.1)>:<>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.Fragment: android.content.res.Resources getResources()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.drm.DrmManagerClient: int _removeAllRights(int)>:<private native>:<android.drm.DrmManagerClient>
<android.os.Debug: int getGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.renderscript.Int3: int get(int)>:<public>:<android.renderscript.Int3>
<android.app.ContextImpl: int checkCallingPermission(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintShowBackgroundOnly(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicYuvToRGB: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createRequest(java.lang.String,int,int)>:<static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.os.INetworkManagementService.Stub.Proxy: boolean isTetheringStarted()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.storage.StorageManager.MountServiceBinderListener: void <init>(android.os.storage.StorageManager)>:<private>:<android.os.storage.StorageManager.MountServiceBinderListener:android.os.storage.IMountServiceListener.Stub,android.os.Binder>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.net.INetworkManagementEventObserver: void interfaceRemoved(java.lang.String)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.os.ResultReceiver: void <clinit>()>:<static>:<android.os.ResultReceiver:android.os.Parcelable>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>:<public>:<android.app.AlarmManager>
<android.net.wifi.SupplicantState.1: void <init>()>:<>:<android.net.wifi.SupplicantState.1:android.os.Parcelable.Creator>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ApplicationErrorReport.BatteryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.net.NetworkFactory: void removeNetworkRequest(android.net.NetworkRequest)>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.filterfw.core.Filter: void transferInputFrames(android.filterfw.core.FilterContext)>:<private final>:<android.filterfw.core.Filter>
<android.os.AsyncTask.1: void <init>()>:<>:<android.os.AsyncTask.1:java.util.concurrent.ThreadFactory>
<android.app.ActivityManagerProxy: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.netdetect.HwCustNetDetectServiceImpl.1: void onSuccess()>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.graphics.drawable.InsetDrawable.InsetState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Font: void <clinit>()>:<static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.net.wifi.WifiManager: boolean startLocationRestrictedScan(android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.webkit.WebView.PrivateAccess: void setMeasuredDimension(int,int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.R.fraction: void <init>()>:<public>:<android.R.fraction>
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.graphics.DrawFilter: void nativeDestructor(long)>:<private static native>:<android.graphics.DrawFilter>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.filterfw.core.OneShotScheduler: void <init>(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.core.OneShotScheduler:android.filterfw.core.RoundRobinScheduler,android.filterfw.core.Scheduler>
<android.renderscript.Short2: android.renderscript.Short2 mod(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.app.AppOpsManager.OpEntry: long getRejectTime()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.DhcpStateMachine: void access.1100(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo build()>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.app.Activity: void performStop()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.transition.Scene: android.view.ViewGroup getSceneRoot()>:<public>:<android.transition.Scene>
<android.graphics.LargeBitmap: void finalize()>:<protected>:<android.graphics.LargeBitmap>
<android.os.BatteryStats: boolean getNextHistoryLocked(android.os.BatteryStats.HistoryItem)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ActivityThread.ContextCleanupInfo: void <init>()>:<>:<android.app.ActivityThread.ContextCleanupInfo>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo create()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.app.BackStackRecord: android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition,android.transition.Transition,android.app.Fragment,boolean)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.INetworkManagementService: void addVpnUidRanges(int,android.net.UidRange[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.ApplicationPackageManager.ResourceName: void <init>(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager.ResourceName>
<android.print.PrintAttributes.Margins: int hashCode()>:<public>:<android.print.PrintAttributes.Margins>
<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.database.AbstractCursor: int getCount()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.TrafficStats: void tagSocket(java.net.Socket)>:<public static>:<android.net.TrafficStats>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean isScanAlwaysAvailable()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.IConnectivityManager: java.lang.String[] getTetheredIfaces()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: boolean isClatdStarted(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.admin.DeviceAdminInfo: int describeContents()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.webkit.WebView: int computeHorizontalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.ProgramStore.DepthFunc: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.graphics.Atlas.SlicePolicy.Cell: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.SlicePolicy.Cell>
<android.net.LocalSocket: void shutdownInput()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.net.wifi.WifiConnectionStatistics.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiConnectionStatistics.1:android.os.Parcelable.Creator>
<android.app.ActivityThread.DropBoxReporter: void addText(java.lang.String,java.lang.String)>:<public>:<android.app.ActivityThread.DropBoxReporter:libcore.io.DropBox.Reporter>
<android.net.StaticIpConfiguration: void <clinit>()>:<static>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.graphics.PorterDuffColorFilter: int hashCode()>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.net.http.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.os.storage.OnObbStateChangeListener: void <init>()>:<public>:<android.os.storage.OnObbStateChangeListener>
<android.app.Notification.Builder: android.app.Notification.Builder setOnlyAlertOnce(boolean)>:<public>:<android.app.Notification.Builder>
<android.os.UserHandle: int getIdentifier()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph access.200(android.filterfw.io.TextGraphReader)>:<static>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.app.ContextImpl.6: void <init>()>:<>:<android.app.ContextImpl.6:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Long3: void <init>()>:<public>:<android.renderscript.Long3>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: void setOnKeyEventResult(boolean,int)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.os.PersistableBundle.MyReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>:<public>:<android.os.PersistableBundle.MyReadMapCallback:com.android.internal.util.XmlUtils.ReadMapCallback>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>:<public>:<android.graphics.Canvas>
<android.os.CancellationSignal: boolean isCanceled()>:<public>:<android.os.CancellationSignal>
<android.os.storage.IMountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.LinkQualityInfo: long getPacketErrorCount()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.pdf.PdfRenderer: void nativeClose(long)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.usage.UsageEvents: void <clinit>()>:<static>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.net.IEthernetManager.Stub: android.net.IEthernetManager asInterface(android.os.IBinder)>:<public static>:<android.net.IEthernetManager.Stub:android.os.Binder,android.net.IEthernetManager>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.os.StatFs: long getFreeBytes()>:<public>:<android.os.StatFs>
<android.filterfw.core.NativeProgram: boolean bindSetValueFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.opengl.GLErrorWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void onResult(android.os.Bundle)>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.database.CursorWindow: long nativeCreateFromParcel(android.os.Parcel)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.AnimatedRotateDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.RemoteCallback.1: android.os.RemoteCallback createFromParcel(android.os.Parcel)>:<public>:<android.os.RemoteCallback.1:android.os.Parcelable.Creator>
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Parcel: android.os.Parcelable readCreator(android.os.Parcelable.Creator,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.database.sqlite.JankSqlite: boolean addExecsql(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.net.RouteInfo.1: android.net.RouteInfo[] newArray(int)>:<public>:<android.net.RouteInfo.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: android.os.Bundle access.302(android.print.PrintJobInfo,android.os.Bundle)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.netdetect.HwCustNetDetectServiceDummy: void <init>(android.content.Context)>:<public>:<android.netdetect.HwCustNetDetectServiceDummy:android.netdetect.NetDetectService>
<android.net.wifi.ScanSettings: void <clinit>()>:<static>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.net.wifi.WifiSsid.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiSsid.1:android.os.Parcelable.Creator>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile3gLower(java.lang.String)>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnScriptIntrinsicCreate(long,int,long)>:<native>:<android.renderscript.RenderScript>
<android.net.MobileLinkQualityInfo: void setEvdoDbm(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.Region: boolean set(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.drm.DrmRights: byte[] getData()>:<public>:<android.drm.DrmRights>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>:<public>:<android.renderscript.Sampler.Builder>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean clear()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.job.JobInfo.Builder: long access.1000(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int)>:<private>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.INonHardwareAcceleratedPackagesManager: void removePackage(java.lang.String)>:<public abstract>:<android.app.INonHardwareAcceleratedPackagesManager:android.os.IInterface>
<android.net.MobileLinkQualityInfo: void setMobileNetworkType(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.os.Handler: void dispatchMessage(android.os.Message)>:<public>:<android.os.Handler>
<android.graphics.pdf.PdfDocument.Page: android.graphics.Canvas getCanvas()>:<public>:<android.graphics.pdf.PdfDocument.Page>
<android.database.DataSetObservable: void notifyChanged()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.renderscript.AllocationAdapter: void subData1D(int,int,int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.INetworkManagementService: void removeIdleTimer(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.hwtheme.HwThemeManagerDummy: void removeIconCache(java.lang.String,java.lang.String,int,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.renderscript.Allocation: android.renderscript.Element.DataType validateObjectIsPrimitiveArray(java.lang.Object,boolean)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.INetworkPolicyManager.Stub.Proxy: int[] getUidsWithPolicy(int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.database.CursorToBulkCursorAdaptor: void close()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.app.IActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.LocalSocketImpl: void shutdown(java.io.FileDescriptor,boolean)>:<private native>:<android.net.LocalSocketImpl>
<android.renderscript.Allocation.OnBufferAvailableListener: void onBufferAvailable(android.renderscript.Allocation)>:<public abstract>:<android.renderscript.Allocation.OnBufferAvailableListener>
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.mtp.MtpDatabase: int[] getObjectReferences(int)>:<private>:<android.mtp.MtpDatabase>
<android.print.PrintAttributes: void enforceValidColorMode(int)>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.database.BulkCursorProxy: void deactivate()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.Request: boolean canResponseHaveBody(org.apache.http.HttpRequest,int)>:<private static>:<android.net.http.Request>
<android.transition.Transition: android.transition.Transition clone()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>:<public>:<android.app.Instrumentation.ActivityResult>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.trust.TrustManager.TrustListener: void onTrustChanged(boolean,int,boolean)>:<public abstract>:<android.app.trust.TrustManager.TrustListener>
<android.database.MatrixCursor: float getFloat(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.graphics.drawable.Drawable: void setTint(int)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.TransitionDrawable.TransitionState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.TransitionDrawable.TransitionState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)>:<protected>:<android.filterfw.core.Frame>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AccountManager>
<android.mtp.MtpObjectInfo: int getImagePixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.BackStackRecord.4: android.graphics.Rect onGetEpicenter(android.transition.Transition)>:<public>:<android.app.BackStackRecord.4:android.transition.Transition.EpicenterCallback>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiNetworkConnectionStatistics: int describeContents()>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.app.Fragment: int getId()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void <init>(android.view.View,android.view.View,int,int,float,float,android.transition.TranslationAnimationCreator.1)>:<>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.graphics.Paint: float measureText(char[],int,int)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.accounts.AuthenticatorDescription: int describeContents()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int[],int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.app.FragmentManagerImpl: void <clinit>()>:<static>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.renderscript.ProgramStore.BlendSrcFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.app.Notification.Builder: android.widget.RemoteViews applyStandardTemplate(int)>:<private>:<android.app.Notification.Builder>
<android.graphics.Path: void native_rMoveTo(long,float,float)>:<private static native>:<android.graphics.Path>
<android.drm.DrmManagerClient: int _removeRights(int,java.lang.String)>:<private native>:<android.drm.DrmManagerClient>
<android.app.EnterTransitionCoordinator.5: void <init>(android.app.EnterTransitionCoordinator,android.view.View,android.os.Bundle)>:<>:<android.app.EnterTransitionCoordinator.5:android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.filterfw.core.GLFrame: void reset(android.filterfw.core.FrameFormat)>:<protected>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void setForceEnabled(java.lang.String,boolean)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.renderscript.Short3: android.renderscript.Short3 div(android.renderscript.Short3,short)>:<public static>:<android.renderscript.Short3>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.drawable.Drawable: boolean isStateful()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Double2: void copyTo(double[],int)>:<public>:<android.renderscript.Double2>
<android.app.usage.UsageStats: long getLastTimeStamp()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.app.Notification.MediaStyle: android.widget.RemoteViews makeMediaBigContentView()>:<private>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.ddm.DdmRegister: void registerHandlers()>:<public static>:<android.ddm.DdmRegister>
<android.app.Fragment: void performSaveInstanceState(android.os.Bundle)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.print.PrinterCapabilitiesInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.usage.UsageStats: long getTotalTimeInForeground()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.renderscript.Allocation: void validateIsInt32()>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.INotificationManager: void unregisterListener(android.service.notification.INotificationListener,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.graphics.pdf.PdfDocument: void throwIfCurrentPageNotFinished()>:<private>:<android.graphics.pdf.PdfDocument>
<android.webkit.CacheManager.CacheResult: java.lang.String getEncoding()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void write(byte[],int,int)>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.app.ApplicationPackageManager: void <clinit>()>:<static>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.renderscript.FieldPacker: int getPos()>:<public>:<android.renderscript.FieldPacker>
<android.os.storage.StorageManager.MountServiceBinderListener: void <init>(android.os.storage.StorageManager,android.os.storage.StorageManager.1)>:<>:<android.os.storage.StorageManager.MountServiceBinderListener:android.os.storage.IMountServiceListener.Stub,android.os.Binder>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.IEthernetManager: void removeListener(android.net.IEthernetServiceListener)>:<public abstract>:<android.net.IEthernetManager:android.os.IInterface>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.net.NetworkUtils: int getNetworkBoundToProcess()>:<public static native>:<android.net.NetworkUtils>
<android.app.IntentService: void <init>(java.lang.String)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ISearchManagerCallback: void onDismiss()>:<public abstract>:<android.app.ISearchManagerCallback:android.os.IInterface>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.IApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.accessibilityservice.AccessibilityService.1: boolean onGesture(int)>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.sax.RootElement.Handler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>:<public>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.net.ProxyInfo.1: void <init>()>:<>:<android.net.ProxyInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>:<public static>:<android.net.MailTo>
<android.app.ActivityThread: void handleInstallProvider(android.content.pm.ProviderInfo)>:<public>:<android.app.ActivityThread>
<android.net.NetworkInfo: void setIsConnectedToProvisioningNetwork(boolean)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.arp.MultiGW: java.lang.String getGWMACAddr()>:<public>:<android.net.arp.MultiGW>
<android.net.wifi.p2p.WifiP2pManager.Channel: com.android.internal.util.AsyncChannel access.400(android.net.wifi.p2p.WifiP2pManager.Channel)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.os.Debug: void getMemoryInfo(int,android.os.Debug.MemoryInfo)>:<public static native>:<android.os.Debug>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.test.AndroidTestCase: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.AlarmManager: void setTime(long)>:<public>:<android.app.AlarmManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.SELinux: boolean setFSCreateContext(java.lang.String)>:<public static final native>:<android.os.SELinux>
<android.app.LauncherActivity.ActivityAdapter: android.content.Intent intentForPosition(int)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.net.http.HttpsConnection.1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>:<public>:<android.net.http.HttpsConnection.1:javax.net.ssl.X509TrustManager>
<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwMediaPermWrapper: void <init>()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>:<public static>:<android.app.WallpaperManager>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityView.ActivityViewCallback: void onAllActivitiesComplete(android.app.ActivityView)>:<public abstract>:<android.app.ActivityView.ActivityViewCallback>
<android.renderscript.ProgramFragmentFixedFunction: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramFragmentFixedFunction:android.renderscript.ProgramFragment,android.renderscript.Program,android.renderscript.BaseObj>
<android.os.Parcel: void writeBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES20>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor.Status readCommStatus(java.io.FileDescriptor,byte[])>:<private static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.IActivityManager: boolean requestVisibleBehind(android.os.IBinder,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.WifiEnterpriseConfig: void resetClientKeyEntry()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.os.INetworkManagementService: boolean isTetheringStarted()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ExitTransitionCoordinator: void delayCancel()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.Int2: void mul(int)>:<public>:<android.renderscript.Int2>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>:<public>:<android.graphics.Paint>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.transition.TransitionManager: void changeScene(android.transition.Scene,android.transition.Transition)>:<private static>:<android.transition.TransitionManager>
<android.os.BaseBundle: long[] getLongArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>:<protected>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.app.EnterTransitionCoordinator.11: void <init>(android.app.EnterTransitionCoordinator)>:<>:<android.app.EnterTransitionCoordinator.11:java.lang.Runnable>
<android.graphics.Bitmap.Config: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.RssiPacketCountInfo: void <init>(android.os.Parcel,android.net.wifi.RssiPacketCountInfo.1)>:<>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.renderscript.Double4: android.renderscript.Double4 add(android.renderscript.Double4,android.renderscript.Double4)>:<public static>:<android.renderscript.Double4>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix.1: void setRotate(float,float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.http.RequestHandle: java.lang.String H(java.lang.String)>:<private>:<android.net.http.RequestHandle>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.DiscretePathEffect: long nativeCreate(float,float)>:<private static native>:<android.graphics.DiscretePathEffect:android.graphics.PathEffect>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>:<public>:<android.app.ActivityManager>
<android.app.ActivityManager.AppTask: void setExcludeFromRecents(boolean)>:<public>:<android.app.ActivityManager.AppTask>
<android.renderscript.Short2: short dotProduct(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.app.Activity: void onStart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.DialogFragment: void onCreate(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.EnterTransitionCoordinator.10: void <init>(android.app.EnterTransitionCoordinator,android.view.ViewGroup,java.util.ArrayList)>:<>:<android.app.EnterTransitionCoordinator.10:android.animation.AnimatorListenerAdapter>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.net.wifi.ScanResult: void <clinit>()>:<static>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.os.UserHandle: android.os.UserHandle getCallingUserHandle()>:<public static final>:<android.os.UserHandle:android.os.Parcelable>
<android.os.PowerManager.BacklightBrightness: void <init>(int)>:<public>:<android.os.PowerManager.BacklightBrightness>
<android.app.ContextImpl: android.content.ComponentName startServiceCommon(android.content.Intent,android.os.UserHandle)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.net.dhcp.DhcpDeclinePacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpDeclinePacket:android.net.dhcp.DhcpPacket>
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.app.Notification.Builder: void populateExtras(android.os.Bundle)>:<public>:<android.app.Notification.Builder>
<android.webkit.WebViewProvider: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender clone()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.net.wifi.IWifiManager.Stub.Proxy: void enableAggressiveHandover(int)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.AppOpsManager: java.lang.String[] access.000()>:<static>:<android.app.AppOpsManager>
<android.os.storage.IMountServiceListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountServiceListener.Stub.Proxy:android.os.storage.IMountServiceListener>
<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)>:<public>:<android.os.CommonTimeConfig>
<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>:<private>:<android.net.http.CertificateChainValidator>
<android.net.NetworkStateTracker: void setDependencyMet(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.graphics.Outline: void <init>()>:<public>:<android.graphics.Outline>
<android.os.ParcelableParcel.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollOffset()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.net.IConnectivityManager: int tether(java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean hasUserSetupCompleted()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.accounts.AuthenticatorDescription: int hashCode()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void requestHintsFromListener(android.service.notification.INotificationListener,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ExitTransitionCoordinator: boolean access.100(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.IAppTask.Stub: void <init>()>:<public>:<android.app.IAppTask.Stub:android.os.Binder,android.app.IAppTask>
<android.accounts.AccountManager.7: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.7:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.print.PrinterId.1: android.print.PrinterId createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.net.wifi.DummyHwInnerWifiManager: boolean getHwMeteredHint(android.content.Context)>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)>:<public>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>:<public>:<android.app.WallpaperManager>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onEndRestore()>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.webkit.JsResult: void <init>(android.webkit.JsResult.ResultReceiver)>:<public>:<android.webkit.JsResult>
<android.accessibilityservice.IAccessibilityServiceClient.Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>:<public static>:<android.accessibilityservice.IAccessibilityServiceClient.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceClient>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer mutableCopy()>:<public>:<android.filterfw.core.NativeBuffer>
<android.net.NetworkStats: android.net.NetworkStats withoutUids(int[])>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.Build: java.lang.String[] access.100(java.lang.String,java.lang.String)>:<static>:<android.os.Build>
<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.UEventObserver: void onUEvent(android.os.UEventObserver.UEvent)>:<public abstract>:<android.os.UEventObserver>
<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.database.IContentObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.webkit.CacheManager.CacheResult: void <init>()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display)>:<public>:<android.app.Presentation:android.app.Dialog>
<android.app.ExitTransitionCoordinator: void beginTransitions()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean remove(android.net.wifi.p2p.WifiP2pDeviceList)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.ActivityManager.RunningTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: com.android.internal.util.AsyncChannel getsAsyncChannel()>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.renderscript.Allocation: void validate3DRange(int,int,int,int,int,int)>:<private>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Activity: void onTranslucentConversionComplete(boolean)>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean isHwTheme()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.ExitTransitionCoordinator.6: void onTranslucentConversionComplete(boolean)>:<public>:<android.app.ExitTransitionCoordinator.6:android.app.Activity.TranslucentConversionListener>
<android.app.backup.FileBackupHelperBase: int performBackup_native(java.io.FileDescriptor,long,java.io.FileDescriptor,java.lang.String[],java.lang.String[])>:<private static native>:<android.app.backup.FileBackupHelperBase>
<android.app.HwCustNonHardwareAcceleratedPackagesManager: void removePackage(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.TranslationAnimationCreator.TransitionPositionListener:android.animation.AnimatorListenerAdapter>
<android.app.AppGlobals: java.lang.String getInitialPackage()>:<public static>:<android.app.AppGlobals>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteActionProvider.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String)>:<public static>:<android.os.RecoverySystem>
<android.net.wifi.WifiCHRStateManager: void updateScreenState(boolean)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollRange()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.app.ITransientNotification.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.ITransientNotification.Stub.Proxy:android.app.ITransientNotification>
<android.app.FragmentManagerImpl: void attachActivity(android.app.Activity,android.app.FragmentContainer,android.app.Fragment)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.IWifiScanner.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.wifi.IWifiScanner.Stub.Proxy:android.net.wifi.IWifiScanner>
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,int[])>:<public>:<android.app.AppOpsManager>
<android.os.BatteryStats: long getWifiSignalStrengthTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.IAlarmManager.Stub.Proxy: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock(int)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.UserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.graphics.Paint: long native_setColorFilter(long,long)>:<private static native>:<android.graphics.Paint>
<android.net.WifiLinkQualityInfo: int getRssi()>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES20>
<android.app.NativeActivity: void onSurfaceDestroyedNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.renderscript.Long4: android.renderscript.Long4 mod(android.renderscript.Long4,long)>:<public static>:<android.renderscript.Long4>
<android.opengl.GLES10: void glScalef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.core.SyncRunner: boolean performStep()>:<>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.filterfw.core.NativeProgram: boolean deallocate()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>(android.content.pm.ResolveInfo,android.content.Context)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.graphics.Shader: long getNativeInstance()>:<>:<android.graphics.Shader>
<android.os.UserManager: void setUserName(int,java.lang.String)>:<public>:<android.os.UserManager>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.Process: void setArgV0(java.lang.String)>:<public static final native>:<android.os.Process>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.SystemProperties: void <clinit>()>:<static>:<android.os.SystemProperties>
<android.renderscript.Float4: android.renderscript.Float4 mul(android.renderscript.Float4,float)>:<public static>:<android.renderscript.Float4>
<android.graphics.Matrix: void setValues(float[])>:<public>:<android.graphics.Matrix>
<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.NetworkInfo: java.lang.String access.602(android.net.NetworkInfo,java.lang.String)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.net.dhcp.DhcpDeclinePacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpDeclinePacket:android.net.dhcp.DhcpPacket>
<android.net.ProxyDataTracker: void access.300(android.net.ProxyDataTracker,android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>:<static>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>:<public final>:<android.os.Parcel>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.hwcontrol.HwWidgetFactory: com.android.internal.app.WindowDecorActionBar getHuaweiActionBarImpl(android.app.Activity)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.app.Instrumentation: void endPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.renderscript.RenderScript: void rsnContextPause(long)>:<native>:<android.renderscript.RenderScript>
<android.app.ApplicationPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.IConnectivityManager: android.net.ProxyInfo getDefaultProxy()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer.DrawableContainerState cloneConstantState()>:<>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.app.WallpaperManager>
<android.print.IPrintSpoolerClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(android.content.res.Resources,int)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.net.wifi.p2p.WifiP2pConfig: void invalidate()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.net.LocalSocketImpl: java.io.FileDescriptor accept(java.io.FileDescriptor,android.net.LocalSocketImpl)>:<private native>:<android.net.LocalSocketImpl>
<android.app.Service: boolean onUnbind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.filterfw.core.FieldPort: java.lang.String toString()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.net.http.HttpAuthHeader: java.lang.String getQop()>:<public>:<android.net.http.HttpAuthHeader>
<android.graphics.drawable.LayerDrawable.LayerState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.FilterGraph: void flushFrames()>:<public>:<android.filterfw.core.FilterGraph>
<android.filterfw.core.Filter: void parametersUpdated(java.util.Set)>:<protected>:<android.filterfw.core.Filter>
<android.renderscript.Element.DataType: void <init>(java.lang.String,int,int,int)>:<private>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.app.AppOpsManager.1: void <init>(android.app.AppOpsManager,android.app.AppOpsManager.OnOpChangedListener)>:<>:<android.app.AppOpsManager.1:com.android.internal.app.IAppOpsCallback.Stub>
<android.app.ProfilerInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ProfilerInfo.1:android.os.Parcelable.Creator>
<android.app.SharedPreferencesImpl: boolean hasFileChangedUnexpectedly()>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.net.http.IdleCache: void clearIdle()>:<private>:<android.net.http.IdleCache>
<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.admin.DevicePolicyManager: int enableSystemApp(android.content.ComponentName,android.content.Intent)>:<public>:<android.app.admin.DevicePolicyManager>
<android.print.IPrintManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.net.SamplingDataTracker: long getSampledPacketCount()>:<public>:<android.net.SamplingDataTracker>
<android.graphics.drawable.AnimationDrawable: void run()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.INetworkStatsSession: void close()>:<public abstract>:<android.net.INetworkStatsSession:android.os.IInterface>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: void <init>(java.lang.String)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.os.IUserManager: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.os.StrictMode: int access.1000(java.lang.String)>:<static>:<android.os.StrictMode>
<android.net.NetworkState: void <clinit>()>:<static>:<android.net.NetworkState:android.os.Parcelable>
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()>:<public>:<android.os.storage.StorageManager>
<android.print.PrintAttributes.Margins: int getRightMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.app.IAppTask: int startActivity(android.os.IBinder,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.IAppTask:android.os.IInterface>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>:<>:<android.net.http.Request>
<android.app.Fragment: void onHiddenChanged(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.TabActivity: void <init>()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.IEthernetManager: void setConfiguration(android.net.IpConfiguration)>:<public abstract>:<android.net.IEthernetManager:android.os.IInterface>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.IEthernetManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.IEthernetManager.Stub.Proxy:android.net.IEthernetManager>
<android.app.AlarmManager.AlarmClockInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.AlarmManager.AlarmClockInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.ColorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorDeactivated()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>:<public>:<android.accounts.AccountManager>
<android.os.BatteryStats: long getStartClockTime()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.backup.RestoreDescription: java.lang.String toString()>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk invokeViewMethod(android.view.View,android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.transition.Transition: void setNameOverrides(android.util.ArrayMap)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.IApplicationThread: void scheduleLowMemory()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.VoiceInteractor.2: void deliverCommandResult(com.android.internal.app.IVoiceInteractorRequest,boolean,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.app.ActivityTransitionState: void clear()>:<public>:<android.app.ActivityTransitionState>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>:<public abstract>:<android.app.FragmentTransaction>
<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.net.TrafficStats: long getTotalTxPackets()>:<public static>:<android.net.TrafficStats>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.webkit.WebViewDelegate: int getPackageId(android.content.res.Resources,java.lang.String)>:<public>:<android.webkit.WebViewDelegate>
<android.os.IPowerManager.Stub.Proxy: boolean startDream()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.ActivityManager.TaskDescription: void saveToXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.os.SELinux: boolean native_restorecon(java.lang.String,int)>:<private static native>:<android.os.SELinux>
<android.filterfw.core.VertexFrame: java.lang.String toString()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction.InternalBuilder addInput(android.renderscript.Element)>:<public>:<android.renderscript.ProgramVertexFixedFunction.InternalBuilder:android.renderscript.Program.BaseProgramBuilder>
<android.graphics.Paint: void setStrokeMiter(float)>:<public native>:<android.graphics.Paint>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocalPath()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.graphics.Region: void <init>(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.os.Parcel: void writeByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.graphics.pdf.PdfEditor: void nativeSetPageMediaBox(long,int,android.graphics.Rect)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.graphics.drawable.AnimatedVectorDrawable: void stop()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.transition.ChangeBounds.5: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.5:android.util.Property>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>:<public>:<android.net.LocalSocketAddress>
<android.webkit.WebSettings: int getMixedContentMode()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.Rasterizer: void <init>()>:<public>:<android.graphics.Rasterizer>
<android.app.SearchDialog: boolean doShow(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle)>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.filterfw.core.FilterGraph: boolean isReady()>:<public>:<android.filterfw.core.FilterGraph>
<android.webkit.WebChromeClient.FileChooserParams: android.net.Uri[] parseResult(int,android.content.Intent)>:<public static>:<android.webkit.WebChromeClient.FileChooserParams>
<android.app.admin.IDevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLES10: void glCullFace(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Atlas.Type: void <init>(java.lang.String,int)>:<private>:<android.graphics.Atlas.Type:java.lang.Enum>
<android.renderscript.RenderScript: void sendMessage(int,int[])>:<public>:<android.renderscript.RenderScript>
<android.app.PendingIntent.1: android.app.PendingIntent createFromParcel(android.os.Parcel)>:<public>:<android.app.PendingIntent.1:android.os.Parcelable.Creator>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.net.LinkProperties: java.util.List getRoutes()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceConnection>
<android.app.Fragment: void onTrimMemory(int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Activity: void setIntent(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.IDevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.hsm.HwSystemManager: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public static>:<android.hsm.HwSystemManager>
<android.app.job.JobParameters: int describeContents()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.app.ActivityManager: int getMaxRecentTasksStatic()>:<public static>:<android.app.ActivityManager>
<android.net.wifi.WifiManager: boolean isMulticastEnabled()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.NetworkPolicy: int describeContents()>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.net.wifi.WifiScanner.ScanSettings: void <init>()>:<public>:<android.net.wifi.WifiScanner.ScanSettings:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityThread: void finishInstrumentation(int,android.os.Bundle)>:<final>:<android.app.ActivityThread>
<android.app.admin.IDevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: long getPasswordExpiration(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.RenderScript: void nAllocationData2D(long,int,int,int,int,int,int,java.lang.Object,int,android.renderscript.Element.DataType)>:<>:<android.renderscript.RenderScript>
<android.graphics.PointF: void offset(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.net.IpConfiguration.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.IpConfiguration.1:android.os.Parcelable.Creator>
<android.app.ActivityThread.ApplicationThread: void scheduleStopService(android.os.IBinder)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.transition.Transition: void matchItemIds(android.util.ArrayMap,android.util.ArrayMap,android.util.LongSparseArray,android.util.LongSparseArray)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.net.INetworkStatsSession.Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkStatsSession.Stub:android.os.Binder,android.net.INetworkStatsSession>
<android.net.NetworkTemplate: boolean matchesWifi(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.accounts.IAccountManager.Stub.Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Float3: void add(float)>:<public>:<android.renderscript.Float3>
<android.opengl.GLLogWrapper: void glDepthRangex(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.usage.ConfigurationStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.webkit.WebSettings: void setUserAgent(int)>:<public abstract>:<android.webkit.WebSettings>
<android.os.CancellationSignal.Transport: void cancel()>:<public>:<android.os.CancellationSignal.Transport:android.os.ICancellationSignal.Stub,android.os.Binder>
<android.renderscript.Byte4: android.renderscript.Byte4 div(android.renderscript.Byte4,android.renderscript.Byte4)>:<public static>:<android.renderscript.Byte4>
<android.app.backup.BackupManager: boolean isBackupEnabled()>:<public>:<android.app.backup.BackupManager>
<android.os.FactoryTest: int getMode()>:<public static>:<android.os.FactoryTest>
<android.renderscript.Long2: void set(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.os.StrictMode.InstanceTracker: int getInstanceCount(java.lang.Class)>:<public static>:<android.os.StrictMode.InstanceTracker>
<android.graphics.drawable.Animatable: void start()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.renderscript.Int2: int elementSum()>:<public>:<android.renderscript.Int2>
<android.net.Uri.OpaqueUri: java.lang.String getAuthority()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.transition.ChangeBounds.ViewBounds: void setLeftTopRightBottom()>:<private>:<android.transition.ChangeBounds.ViewBounds>
<android.app.job.IJobService.Stub.Proxy: void startJob(android.app.job.JobParameters)>:<public>:<android.app.job.IJobService.Stub.Proxy:android.app.job.IJobService>
<android.renderscript.Int2: void <init>()>:<public>:<android.renderscript.Int2>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.WorkSource: int hashCode()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ApplicationPackageManager: void clearCrossProfileIntentFilters(int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedQuery()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.Binder: void joinThreadPool()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.webkit.JsResult: boolean getResult()>:<public final>:<android.webkit.JsResult>
<android.renderscript.RenderScript: float rsnScriptGetVarF(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.CanvasProperty: long nCreatePaint(long)>:<private static native>:<android.graphics.CanvasProperty>
<android.app.WallpaperManager: boolean hasResourceWallpaper(int)>:<public>:<android.app.WallpaperManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverRoaming(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.opengl.GLErrorWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.DelegatingSSLSession: java.lang.Object getValue(java.lang.String)>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityManagerProxy: void deleteActivityContainer(android.app.IActivityContainer)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.SystemService: void restart(java.lang.String)>:<public static>:<android.os.SystemService>
<android.filterfw.core.Frame: void assertFrameMutable()>:<protected>:<android.filterfw.core.Frame>
<android.app.ContextImpl.22: java.lang.Object createStaticService()>:<public>:<android.app.ContextImpl.22:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Program: java.lang.String getTextureName(int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glTexParameterf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.RttManager.ParcelableRttParams.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.RttManager.ParcelableRttParams.1:android.os.Parcelable.Creator>
<android.net.http.RequestQueue: org.apache.http.HttpHost determineHost(org.apache.http.HttpHost)>:<private>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setY(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.opengl.GLLogWrapper: java.lang.String getHex(int)>:<private static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void kill(java.lang.String)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.ActivityManager.TaskThumbnail: void <init>()>:<public>:<android.app.ActivityManager.TaskThumbnail:android.os.Parcelable>
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.admin.IDevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.IUiModeManager.Stub: void <init>()>:<public>:<android.app.IUiModeManager.Stub:android.os.Binder,android.app.IUiModeManager>
<android.opengl.GLSurfaceView: int access.200(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLES10: void glDisableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.os.RemoteCallback.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.RemoteCallback.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsKeypadSupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.LoadedApk.WarningContextClassLoader: void <init>(android.app.LoadedApk.1)>:<>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.graphics.Canvas: void native_drawArc(long,float,float,float,float,float,float,boolean,long)>:<private static native>:<android.graphics.Canvas>
<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.SearchableInfo: void <init>(android.content.Context,android.util.AttributeSet,android.content.ComponentName)>:<private>:<android.app.SearchableInfo:android.os.Parcelable>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.ddm.DdmHandleViewDebug.1: void run()>:<public>:<android.ddm.DdmHandleViewDebug.1:java.lang.Runnable>
<android.net.wifi.WifiCHRStateManager: void resetDailyStat()>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.AbstractWindowedCursor: int getType(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.ActivityThread.ApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>:<public>:<android.drm.DrmManagerClient>
<android.app.IWallpaperManager.Stub.Proxy: void setWallpaperComponent(android.content.ComponentName)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean makeIconCache(boolean)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.ActionBar.TabListener: void onTabSelected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.graphics.Shader: void finalize()>:<protected>:<android.graphics.Shader>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.mtp.MtpObjectInfo: int getObjectHandle()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.wifi.WifiScanner.OperationResult: void <init>(int,java.lang.String)>:<public>:<android.net.wifi.WifiScanner.OperationResult:android.os.Parcelable>
<android.drm.DrmSupportInfo: void addFileSuffix(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.net.wifi.p2p.WifiP2pManager: void listen(android.net.wifi.p2p.WifiP2pManager.Channel,boolean,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.renderscript.ProgramStore.BlendDstFunc: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.app.PendingIntent: android.content.IIntentSender getTarget()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.wifi.HuaweiApConfiguration: void <init>(android.net.wifi.HuaweiApConfiguration)>:<public>:<android.net.wifi.HuaweiApConfiguration:android.os.Parcelable>
<android.os.BatteryStats: int getNumChargeStepDurations()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.FileBridge.FileBridgeOutputStream: void fsync()>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.graphics.drawable.RippleDrawable: void tryBackgroundEnter(boolean)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Paint: float native_getLetterSpacing(long)>:<private static native>:<android.graphics.Paint>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.Broadcaster.Registration: void <init>(android.os.Broadcaster,android.os.Broadcaster.1)>:<>:<android.os.Broadcaster.Registration>
<android.database.sqlite.SQLiteAbortException: void <init>()>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteConnection: void nativeBindString(long,long,int,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.MobileLinkQualityInfo: void setCdmaDbm(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.os.Parcel: byte[] nativeReadBlob(long)>:<private static native>:<android.os.Parcel>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public>:<android.graphics.BitmapRegionDecoder>
<android.net.arp.MultiGW: void <init>()>:<public>:<android.net.arp.MultiGW>
<android.net.Uri.Part: boolean isEmpty()>:<>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.accounts.AbstractAccountAuthenticator.Transport: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AbstractAccountAuthenticator.1)>:<>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.net.wifi.ScanSettings: int describeContents()>:<public>:<android.net.wifi.ScanSettings:android.os.Parcelable>
<android.app.IActivityManager: boolean releaseActivityInstance(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.LauncherActivity.1: void <init>(android.app.LauncherActivity)>:<>:<android.app.LauncherActivity.1:android.view.View.OnClickListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View,int,int,int,int)>:<public>:<android.app.AlertDialog.Builder>
<android.net.arp.MultiGW: void clearGW()>:<public>:<android.net.arp.MultiGW>
<android.app.ApplicationLoaders: void <init>()>:<>:<android.app.ApplicationLoaders>
<android.net.wifi.WifiScanner.BssidInfo: void <init>()>:<public>:<android.net.wifi.WifiScanner.BssidInfo>
<android.os.Debug.InstructionCount: void <clinit>()>:<static>:<android.os.Debug.InstructionCount>
<android.webkit.CookieManager: boolean allowFileSchemeCookies()>:<public static>:<android.webkit.CookieManager>
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.Uri.HierarchicalUri: void appendSspTo(java.lang.StringBuilder)>:<private>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.dhcp.DhcpRequestPacket: void <init>(int,java.net.InetAddress,byte[],boolean)>:<>:<android.net.dhcp.DhcpRequestPacket:android.net.dhcp.DhcpPacket>
<android.app.backup.BackupAgent: void waitForSharedPrefs()>:<private>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.NetworkFactory: void stopNetwork()>:<protected>:<android.net.NetworkFactory:android.os.Handler>
<android.renderscript.RenderScript: void rsnAllocationRead1D(long,long,int,int,int,java.lang.Object,int,int)>:<native>:<android.renderscript.RenderScript>
<android.database.AbstractWindowedCursor: void closeWindow()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.BatteryStats: long getFlashlightOnCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.transition.Explode: void <init>()>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.ddm.DdmHandleAppName: void <init>()>:<private>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.database.MatrixCursor: int access.000(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.wifi.HwWifiCHRService: void handleConnectFailed(int,int)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.transition.ChangeBounds: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.app.ActivityThread: java.lang.String getProcessName()>:<public>:<android.app.ActivityThread>
<android.app.RemoteInput: java.lang.String getResultKey()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.IActivityContainerCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IActivityContainerCallback.Stub.Proxy:android.app.IActivityContainerCallback>
<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.app.IActivityContainer: void release()>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.net.ConnectivityManager.CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>:<private>:<android.net.ConnectivityManager.CallbackHandler:android.os.Handler>
<android.os.StatFs: int getBlockSize()>:<public>:<android.os.StatFs>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.os.RemoteMailException: void <init>(java.lang.String)>:<public>:<android.os.RemoteMailException:java.lang.Exception,java.lang.Throwable>
<android.os.INetworkManagementService.Stub.Proxy: boolean isFirewallEnabled()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiCHRStateManager: void <init>()>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Camera: void rotateZ(float)>:<public native>:<android.graphics.Camera>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode parseTileMode(int)>:<private static>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Ripple.1: void <init>(android.graphics.drawable.Ripple)>:<>:<android.graphics.drawable.Ripple.1:android.animation.AnimatorListenerAdapter>
<android.os.CommonClock: long getTimelineId()>:<public>:<android.os.CommonClock>
<android.graphics.drawable.BitmapDrawable: void setXfermode(android.graphics.Xfermode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.FileA3D: void initEntries()>:<private>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.app.INotificationManager.Stub.Proxy: int getPackageVisibilityOverride(java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.app.ActivityThread.ApplicationThread.1: void <init>(android.app.ActivityThread.ApplicationThread,java.io.FileDescriptor,java.lang.String[])>:<>:<android.app.ActivityThread.ApplicationThread.1:java.lang.Runnable>
<android.renderscript.Short2: android.renderscript.Short2 sub(android.renderscript.Short2,android.renderscript.Short2)>:<public static>:<android.renderscript.Short2>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ApplicationPackageManager: void grantPermission(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Matrix: boolean native_equals(long,long)>:<private static native>:<android.graphics.Matrix>
<android.os.StrictMode.2: void <init>()>:<>:<android.os.StrictMode.2:java.lang.ThreadLocal>
<android.app.INotificationManager.Stub.Proxy: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.http.RequestHandle: void setupAuthResponse()>:<private>:<android.net.http.RequestHandle>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>:<public static>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.app.ActivityThread: void performUserLeavingActivity(android.app.ActivityThread.ActivityClientRecord)>:<final>:<android.app.ActivityThread>
<android.graphics.Picture: void <init>(long)>:<private>:<android.graphics.Picture>
<android.app.ISearchManagerCallback.Stub.Proxy: void onDismiss()>:<public>:<android.app.ISearchManagerCallback.Stub.Proxy:android.app.ISearchManagerCallback>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>:<public static>:<android.app.Instrumentation>
<android.app.PackageInstallObserver.1: void <init>(android.app.PackageInstallObserver)>:<>:<android.app.PackageInstallObserver.1:android.content.pm.IPackageInstallObserver2.Stub>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>:<public final>:<android.os.Parcel>
<android.app.IUserSwitchObserver.Stub: void <init>()>:<public>:<android.app.IUserSwitchObserver.Stub:android.os.Binder,android.app.IUserSwitchObserver>
<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>:<public>:<android.os.PerformanceCollector>
<android.app.usage.UsageEvents.Event: void <init>()>:<public>:<android.app.usage.UsageEvents.Event>
<android.app.ActivityView: int access.300(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.os.IBatteryPropertiesListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IBatteryPropertiesListener.Stub:android.os.Binder,android.os.IBatteryPropertiesListener>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(android.net.wifi.p2p.WifiP2pGroup)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.database.sqlite.SQLiteDatabase: void onCorruption()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Notification.Style: android.app.Notification buildStyled(android.app.Notification)>:<public>:<android.app.Notification.Style>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.http.IdleCache.IdleReaper: void run()>:<public>:<android.net.http.IdleCache.IdleReaper:java.lang.Thread>
<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>:<public>:<android.app.job.JobInfo.Builder>
<android.os.IHDMIConnectService: boolean isHDMIConnected()>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType[] values()>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.net.IConnectivityManager: boolean updateLockdownVpn()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.drawable.DrawableContainer: void clearMutated()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.BackStackRecord: android.transition.Transition getSharedElementTransition(android.app.Fragment,android.app.Fragment,boolean)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES30: void <clinit>()>:<static>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.DialogFragment: void onAttach(android.app.Activity)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.net.LocalSocketImpl: java.io.FileDescriptor access.000(android.net.LocalSocketImpl)>:<static>:<android.net.LocalSocketImpl>
<android.graphics.PointF: void <init>(float,float)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.graphics.Region: android.graphics.Region obtain()>:<public static>:<android.graphics.Region:android.os.Parcelable>
<android.os.PatternMatcher.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.PatternMatcher.1:android.os.Parcelable.Creator>
<android.app.Dialog: boolean isShowing()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.app.ITaskStackListener.Stub: void <init>()>:<public>:<android.app.ITaskStackListener.Stub:android.os.Binder,android.app.ITaskStackListener>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.http.HttpAuthHeader: void setProxy()>:<public>:<android.net.http.HttpAuthHeader>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.HwWifiStatStore.SSIDStat: boolean 'cmp'(java.lang.String)>:<public>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.NetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>:<public abstract>:<android.net.NetworkStateTracker>
<android.renderscript.Float2: void negate()>:<public>:<android.renderscript.Float2>
<android.print.IWriteResultCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.net.wifi.WifiConfiguration: int getAuthType()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.BatteryStats: int getBluetoothStateCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.RectF: boolean contains(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.RemoteCallbackList.Callback: void <init>(android.os.RemoteCallbackList,android.os.IInterface,java.lang.Object)>:<>:<android.os.RemoteCallbackList.Callback:android.os.IBinder.DeathRecipient>
<android.graphics.drawable.RippleDrawable: void tryRippleExit()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.transition.Transition: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition: void stop()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.net.TrafficStats: long getRxBytes(java.lang.String)>:<public static>:<android.net.TrafficStats>
<android.renderscript.Path: android.renderscript.Path createStaticPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation,android.renderscript.Allocation)>:<public static>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.os.IPowerManager: void setStayOnSetting(int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.renderscript.Short4: void add(short)>:<public>:<android.renderscript.Short4>
<android.print.PrintJob: int hashCode()>:<public>:<android.print.PrintJob>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.FileUtils.1: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.os.FileUtils.1:java.util.Comparator>
<android.app.IActivityContainer: void checkEmbeddedAllowed(android.content.Intent)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>:<public>:<android.app.TaskStackBuilder>
<android.transition.TransitionSet: java.lang.String toString(java.lang.String)>:<>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.ProxyInfo: int getPort()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.transition.ChangeImageTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityOptions: int getStartX()>:<public>:<android.app.ActivityOptions>
<android.graphics.drawable.BitmapDrawable: android.graphics.Insets getOpticalInsets()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkCapabilities: boolean equalsNetCapabilities(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.mtp.MtpDatabase: int getDeviceProperty(int,long[],char[])>:<private>:<android.mtp.MtpDatabase>
<android.opengl.GLLogWrapper: void glLoadIdentity()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.net.http.Connection: java.lang.String toString()>:<public>:<android.net.http.Connection>
<android.app.ActivityView.ActivityContainerWrapper: int startActivity(android.content.Intent)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.net.ConnectivityManager.1: void onNetworkActive()>:<public>:<android.net.ConnectivityManager.1:android.os.INetworkActivityListener.Stub,android.os.Binder>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context)>:<public>:<android.app.SearchDialog.SearchBar:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollOffset()>:<public abstract>:<android.webkit.WebViewProvider.ScrollDelegate>
<android.filterfw.core.ShaderProgram: boolean setShaderClearsOutput(boolean)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.filterfw.core.GLEnvironment: boolean nativeDisconnectSurfaceMediaSource(android.media.MediaRecorder)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.os.Parcel: void nativeEnforceInterface(long,java.lang.String)>:<private static native>:<android.os.Parcel>
<android.graphics.NinePatch: int getWidth()>:<public>:<android.graphics.NinePatch>
<android.net.wifi.IWifiScanner: android.os.Messenger getMessenger()>:<public abstract>:<android.net.wifi.IWifiScanner:android.os.IInterface>
<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable.RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable.1)>:<>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock(int)>:<public>:<android.app.AlarmManager>
<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>:<public>:<android.app.NotificationManager>
<android.transition.Transition: void pause(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.accounts.AccountManager.AmsTask: void access.500(android.accounts.AccountManager.AmsTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.renderscript.RenderScript: void rsnAllocationData1D(long,long,int,int,int,java.lang.Object,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.IBackupAgent.Stub: android.app.IBackupAgent asInterface(android.os.IBinder)>:<public static>:<android.app.IBackupAgent.Stub:android.os.Binder,android.app.IBackupAgent>
<android.net.IpPrefix.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.IpPrefix.1:android.os.Parcelable.Creator>
<android.graphics.drawable.GradientDrawable.Orientation: void <init>(java.lang.String,int)>:<private>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.app.Activity: java.lang.String getCallingPackage()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.print.PrintJob: void cancel()>:<public>:<android.print.PrintJob>
<android.os.SystemVibrator: void cancel()>:<public>:<android.os.SystemVibrator:android.os.Vibrator>
<android.app.usage.UsageEvents.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.usage.UsageEvents.1:android.os.Parcelable.Creator>
<android.webkit.WebSettings: int getCacheMode()>:<public abstract>:<android.webkit.WebSettings>
<android.app.IBackupAgent.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.os.BatteryStats: long getMobileRadioActiveAdjustedTime(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.transition.TransitionManager: android.transition.Transition getDefaultTransition()>:<public static>:<android.transition.TransitionManager>
<android.accounts.AccountManager.12: void doWork()>:<public>:<android.accounts.AccountManager.12:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.ILayoutResultCallback,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.app.ActivityThread: void handleProfilerControl(boolean,android.app.ProfilerInfo,int)>:<final>:<android.app.ActivityThread>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()>:<public>:<android.filterfw.core.NativeBuffer>
<android.app.SharedPreferencesImpl.EditorImpl.2: void run()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl.2:java.lang.Runnable>
<android.os.INetworkManagementService.Stub.Proxy: void addRoute(int,android.net.RouteInfo)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.GLErrorWrapper: void glAlphaFunc(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.AbstractCursor: int getPosition()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: void create()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.trust.TrustManager: void reportEnabledTrustAgentsChanged(int)>:<public>:<android.app.trust.TrustManager>
<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,int,int,boolean)>:<public final>:<android.os.BatteryStats:android.os.Parcelable>
<android.renderscript.Allocation: void copyFromUnchecked(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityView.ActivityContainerWrapper: void setSurface(android.view.Surface,int,int,int)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.BlendSrcFunc getBlendSrcFunc()>:<public>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.database.Cursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.pdf.PdfDocument.Page: void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument.PageInfo,android.graphics.pdf.PdfDocument.1)>:<>:<android.graphics.pdf.PdfDocument.Page>
<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.graphics.Paint: void native_setFontFeatureSettings(long,java.lang.String)>:<private static native>:<android.graphics.Paint>
<android.graphics.RectF: void <init>(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.INetworkScoreService.Stub.Proxy: boolean updateScores(android.net.ScoredNetwork[])>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.webkit.WebStorage.Origin: java.lang.String getOrigin()>:<public>:<android.webkit.WebStorage.Origin>
<android.net.Uri: java.lang.String getFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.Process: void setProcessGroup(int,int)>:<public static final native>:<android.os.Process>
<android.graphics.Path: float[] native_approximate(long,float)>:<private static native>:<android.graphics.Path>
<android.app.usage.UsageStatsManagerInternal: void reportConfigurationChange(android.content.res.Configuration,int)>:<public abstract>:<android.app.usage.UsageStatsManagerInternal>
<android.net.LinkProperties: java.util.List getAddresses()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.transition.Crossfade: android.transition.Crossfade setFadeBehavior(int)>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.app.ActivityManager.CpuStatInfo: float getSoftIrqTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.filterfw.core.GLFrame: float[] getFloats()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.Instrumentation.Idler: void waitForIdle()>:<public>:<android.app.Instrumentation.Idler:android.os.MessageQueue.IdleHandler>
<android.net.BaseNetworkStateTracker: boolean isDefaultRouteSet()>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.net.ConnectivityManager: android.net.NetworkRequest sendRequestForNetwork(android.net.NetworkCapabilities,android.net.ConnectivityManager.NetworkCallback,int,int,int)>:<private>:<android.net.ConnectivityManager>
<android.app.FragmentManagerImpl.6: void <init>(android.app.FragmentManagerImpl,android.app.Fragment)>:<>:<android.app.FragmentManagerImpl.6:android.animation.AnimatorListenerAdapter>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.RenderScript: void nContextBindProgramStore(long)>:<>:<android.renderscript.RenderScript>
<android.webkit.WebViewClient: void <init>()>:<public>:<android.webkit.WebViewClient>
<android.os.Process: int myPpid()>:<public static final>:<android.os.Process>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.Proxy: void <init>()>:<public>:<android.net.Proxy>
<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy: void onRestorePackage(java.lang.String)>:<public>:<android.app.backup.IFullBackupRestoreObserver.Stub.Proxy:android.app.backup.IFullBackupRestoreObserver>
<android.transition.Transition: void captureEndValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.Transition:java.lang.Cloneable>
<android.net.DnsPinger: void <init>(android.content.Context,java.lang.String,android.os.Looper,android.os.Handler,int)>:<public>:<android.net.DnsPinger:android.os.Handler>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>:<protected>:<android.drm.DrmEvent>
<android.renderscript.Float4: void mul(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.renderscript.Byte3: byte dotProduct(android.renderscript.Byte3,android.renderscript.Byte3)>:<public static>:<android.renderscript.Byte3>
<android.ddm.DdmHandleViewDebug: void connected()>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.AbstractCursor: boolean isClosed()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.webkit.WebView: void requestImageRef(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES10: void glLightf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.net.TrafficStats: long getMobileTcpTxPackets()>:<public static>:<android.net.TrafficStats>
<android.net.wifi.IWifiManager: void setWifiStateByManual(boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.SSLCertificateSocketFactory: void setChannelIdPrivateKey(java.security.PrivateKey)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.ColorFilter: void destroyFilter(long)>:<static native>:<android.graphics.ColorFilter>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.wifi.HwWifiCHRService.1: void <clinit>()>:<static>:<android.net.wifi.HwWifiCHRService.1>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.PendingIntent: int hashCode()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect access.200(android.graphics.pdf.PdfDocument.PageInfo)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.app.LauncherActivity: void onSortResultList(java.util.List)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>:<public>:<android.app.LoadedApk>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.app.job.JobInfo.Builder: boolean access.900(android.app.job.JobInfo.Builder)>:<static>:<android.app.job.JobInfo.Builder>
<android.graphics.Bitmap: boolean nativeSameAs(long,long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.net.wifi.WifiScanner: void startTrackingBssids(android.net.wifi.WifiScanner.BssidInfo[],int,android.net.wifi.WifiScanner.BssidListener)>:<public>:<android.net.wifi.WifiScanner>
<android.os.PowerManagerInternal: void setScreenBrightnessOverrideFromWindowManager(int)>:<public abstract>:<android.os.PowerManagerInternal>
<android.drm.DrmInfo: void <init>(int,byte[],java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.os.BatteryStats: int getParcelVersion()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.graphics.PathMeasure: void <init>()>:<public>:<android.graphics.PathMeasure>
<android.graphics.FontFamily: void finalize()>:<protected>:<android.graphics.FontFamily>
<android.net.wifi.p2p.WifiP2pGroupList: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask: void startTask()>:<protected>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.os.IMultiWinService.Stub.Proxy: void getMultiWinFrame(android.os.IBinder,android.graphics.Rect)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)>:<public>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.os.UEventObserver: android.os.UEventObserver.UEventThread peekThread()>:<private static>:<android.os.UEventObserver>
<android.net.BaseNetworkStateTracker: void defaultRouteSet(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.graphics.Matrix.1: boolean preTranslate(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.database.sqlite.SQLiteConnection: java.lang.String trimSqlForDisplay(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.PathMeasure: boolean nextContour()>:<public>:<android.graphics.PathMeasure>
<android.renderscript.Allocation: void copyFrom(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.print.PrintDocumentInfo: int hashCode()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.UiAutomation: void disconnect()>:<public>:<android.app.UiAutomation>
<android.app.Dialog: void <init>(android.content.Context,int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.VectorDrawable.VPath: void <init>(android.graphics.drawable.VectorDrawable.VPath)>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.accounts.AccountManager.9: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.os.Bundle)>:<>:<android.accounts.AccountManager.9:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.os.UserHandle: android.os.UserHandle readFromParcel(android.os.Parcel)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.app.LoaderManagerImpl.LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.net.LinkProperties.1: void <init>()>:<>:<android.net.LinkProperties.1:android.os.Parcelable.Creator>
<android.app.IActivityManager: void killAllBackgroundProcesses()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,org.xmlpull.v1.XmlPullParser,android.content.ComponentName)>:<private static>:<android.app.SearchableInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Int4: int length()>:<public>:<android.renderscript.Int4>
<android.print.PrintManager: java.util.List getInstalledPrintServices()>:<public>:<android.print.PrintManager>
<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String,java.lang.String)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.print.ILayoutResultCallback: void onLayoutCanceled(int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.renderscript.Float2: void set(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.net.NetworkStats: android.net.NetworkStats addIfaceValues(java.lang.String,long,long,long,long)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Int2: android.renderscript.Int2 mul(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.database.sqlite.SQLiteDatabase: void finalize()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.ContentObserver.Transport: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.app.IActivityManager: boolean testIsSystemReady()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.HwWifiStatStore: void updateUserType(boolean)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.app.NativeActivity: void showIme(int)>:<>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.ActivityThread.ApplicationThread: void processInBackground()>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.Transition: android.transition.Transition setStartDelay(long)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.app.WallpaperInfo: void <clinit>()>:<static>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.NetworkStateTracker: void supplyMessenger(android.os.Messenger)>:<public abstract>:<android.net.NetworkStateTracker>
<android.sax.RootElement.Handler: void characters(char[],int,int)>:<public>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.filterfw.geometry.Point: float distanceTo(android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Point>
<android.accessibilityservice.AccessibilityServiceInfo: void appendEventTypes(java.lang.StringBuilder,int)>:<private static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.ParcelableParcel.1: android.os.ParcelableParcel createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.graphics.Color: void <clinit>()>:<static>:<android.graphics.Color>
<android.net.MobileLinkQualityInfo: void setLteCqi(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.renderscript.Byte3: void <init>()>:<public>:<android.renderscript.Byte3>
<android.webkit.WebViewDelegate: java.lang.String getErrorString(android.content.Context,int)>:<public>:<android.webkit.WebViewDelegate>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>:<public>:<android.graphics.Camera>
<android.app.IAlarmManager.Stub.Proxy: int getWakeUpNum(int,java.lang.String)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.renderscript.Float2: android.renderscript.Float2 sub(android.renderscript.Float2,float)>:<public static>:<android.renderscript.Float2>
<android.net.wifi.WifiInfo: boolean getMeteredHint()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.FragmentManagerImpl.4: void <init>(android.app.FragmentManagerImpl,int,int)>:<>:<android.app.FragmentManagerImpl.4:java.lang.Runnable>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void <init>(android.app.MediaRouteActionProvider)>:<public>:<android.app.MediaRouteActionProvider.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.SearchManager: void <init>(android.content.Context,android.os.Handler)>:<>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.INotificationManager.Stub.Proxy: android.service.notification.Condition[] getAutomaticZenModeConditions()>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetherableIfaces()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.IUserSwitchObserver.Stub: android.app.IUserSwitchObserver asInterface(android.os.IBinder)>:<public static>:<android.app.IUserSwitchObserver.Stub:android.os.Binder,android.app.IUserSwitchObserver>
<android.net.wifi.p2p.WifiP2pGroup: int getFrequence()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.alsa.LineTokenizer: void <init>(java.lang.String)>:<public>:<android.alsa.LineTokenizer>
<android.net.http.X509TrustManagerExtensions: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.net.http.SslCertificate: void <clinit>()>:<static>:<android.net.http.SslCertificate>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.os.INetworkManagementService: void addRoute(int,android.net.RouteInfo)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.wifi.BatchedScanResult.1: android.net.wifi.BatchedScanResult createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.BatchedScanResult.1:android.os.Parcelable.Creator>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: void stop()>:<public abstract>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.net.wifi.BatchedScanSettings: void clear()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.net.http.Headers: java.lang.String getEtag()>:<public>:<android.net.http.Headers>
<android.app.IWallpaperManager.Stub.Proxy: java.lang.String getName()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.app.job.JobInfo: boolean isRequireDeviceIdle()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.drawable.RippleBackground: boolean shouldDraw()>:<public>:<android.graphics.drawable.RippleBackground>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.wifi.WifiCHRStateManager: void updateCellId(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.Int3: android.renderscript.Int3 mod(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.job.JobInfo: int describeContents()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.IActivityManager.WaitResult: void <init>(android.os.Parcel)>:<private>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.app.BackStackRecord.3: android.graphics.Rect onGetEpicenter(android.transition.Transition)>:<public>:<android.app.BackStackRecord.3:android.transition.Transition.EpicenterCallback>
<android.os.StrictMode.AndroidCloseGuardReporter: void <init>()>:<private>:<android.os.StrictMode.AndroidCloseGuardReporter:dalvik.system.CloseGuard.Reporter>
<android.renderscript.Int3: void copyTo(int[],int)>:<public>:<android.renderscript.Int3>
<android.os.INetworkManagementService.Stub.Proxy: void removeInterfaceFromLocalNetwork(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.wifi.IWifiManager.Stub: void <init>()>:<public>:<android.net.wifi.IWifiManager.Stub:android.os.Binder,android.net.wifi.IWifiManager>
<android.print.IPrintManager.Stub.Proxy: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.net.WifiKey: void <clinit>()>:<static>:<android.net.WifiKey:android.os.Parcelable>
<android.net.wifi.WifiActivityEnergyInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiActivityEnergyInfo.1:android.os.Parcelable.Creator>
<android.net.Uri: java.lang.String getEncodedAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Rect: java.lang.String flattenToString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.webkit.CacheManager.CacheResult: java.lang.String getMimeType()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.SearchableInfo.1: android.app.SearchableInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.SearchableInfo.1:android.os.Parcelable.Creator>
<android.renderscript.FieldPacker: byte[] getData()>:<public final>:<android.renderscript.FieldPacker>
<android.app.ActivityThread.ActionTimeType: android.app.ActivityThread.ActionTimeType[] values()>:<public static>:<android.app.ActivityThread.ActionTimeType:java.lang.Enum>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.pdf.PdfDocument.PageInfo: int access.102(android.graphics.pdf.PdfDocument.PageInfo,int)>:<static>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.app.KeyguardManager>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.app.ExitTransitionCoordinator: void fadeOutBackground()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ActivityThread: void handleDumpProvider(android.app.ActivityThread.DumpComponentInfo)>:<private>:<android.app.ActivityThread>
<android.os.INetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)>:<public>:<android.filterfw.core.FilterGraph>
<android.database.DatabaseUtils: boolean queryIsEmpty(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.webkit.WebView.FindListenerDistributor: void <init>(android.webkit.WebView)>:<private>:<android.webkit.WebView.FindListenerDistributor:android.webkit.WebView.FindListener>
<android.filterfw.core.FilterGraph: void updateOutputs(android.filterfw.core.Filter)>:<private>:<android.filterfw.core.FilterGraph>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Matrix.1: void oops()>:<>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.filterfw.core.ProgramPort: java.lang.String toString()>:<public>:<android.filterfw.core.ProgramPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.net.wifi.HwWifiCHRService: int getWIFINetworkAvailableNotificationON()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.BaseBundle: boolean isParcelled()>:<public>:<android.os.BaseBundle>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>:<public>:<android.app.WallpaperManager>
<android.app.backup.BackupTransport.TransportImpl: android.app.backup.RestoreSet[] getAvailableRestoreSets()>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>:<public abstract>:<android.webkit.WebSettings>
<android.net.LinkProperties.1: android.net.LinkProperties[] newArray(int)>:<public>:<android.net.LinkProperties.1:android.os.Parcelable.Creator>
<android.database.CursorWrapper: boolean moveToLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.RippleBackground: void <clinit>()>:<static>:<android.graphics.drawable.RippleBackground>
<android.net.http.Headers: java.lang.String getCacheControl()>:<public>:<android.net.http.Headers>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.PathMeasure: long native_create(long,boolean)>:<private static native>:<android.graphics.PathMeasure>
<android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>:<public static>:<android.os.Trace>
<android.net.wifi.p2p.WifiP2pGroup.1: android.net.wifi.p2p.WifiP2pGroup[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroup.1:android.os.Parcelable.Creator>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean installHwTheme(java.lang.String)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.graphics.RectF: void printShortString(java.io.PrintWriter)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.IPowerManager: void setLcdRatio(int,boolean)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.AppOpsManager: int opToSwitch(int)>:<public static>:<android.app.AppOpsManager>
<android.net.http.DelegatingSSLSession: java.security.cert.Certificate[] getLocalCertificates()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.app.NativeActivity: void onStopNative(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.wifi.RttManager: java.lang.Object getListener(int)>:<private static>:<android.net.wifi.RttManager>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.os.FileBridge: boolean isClosed()>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.app.LauncherActivity.ActivityAdapter: java.lang.Object getItem(int)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.WallpaperManager: android.graphics.Bitmap peekBlurWallpaperBitmap(android.graphics.Rect)>:<public>:<android.app.WallpaperManager>
<android.app.Activity: boolean isChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.ProgramVertex: android.renderscript.Element getInput(int)>:<public>:<android.renderscript.ProgramVertex:android.renderscript.Program,android.renderscript.BaseObj>
<android.net.wifi.WifiInfo: void setRssi(int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.MobileDataStateTracker.NetworkDataEntry: void <init>(int,int,int,int)>:<>:<android.net.MobileDataStateTracker.NetworkDataEntry>
<android.webkit.HwFindActionModeCallback: void setText(java.lang.String)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.renderscript.Float3: float get(int)>:<public>:<android.renderscript.Float3>
<android.graphics.drawable.RippleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.net.InetAddress,java.lang.String)>:<public static>:<android.net.RouteInfo:android.os.Parcelable>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>:<public>:<android.graphics.PathMeasure>
<android.renderscript.FieldPacker: void skip(int)>:<public>:<android.renderscript.FieldPacker>
<android.os.WorkSource: boolean add(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.os.PowerManager: boolean stopDream()>:<public>:<android.os.PowerManager>
<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSize(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.IUiAutomationConnection: android.graphics.Bitmap takeScreenshot(int,int)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.net.RouteInfo: android.net.IpPrefix getDestination()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>:<public>:<android.appwidget.AppWidgetManager>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority valueOf(java.lang.String)>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.net.wifi.IWifiManager: boolean pingSupplicant()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.wifi.WifiCHRStateManager: int getRelatedApInfo(java.lang.String)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.PointF: void <init>()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.os.BaseBundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>:<>:<android.os.BaseBundle>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.'annotation'.SdkConstant.SdkConstantType: void <clinit>()>:<static>:<android.annotation.SdkConstant.SdkConstantType:java.lang.Enum>
<android.os.BatteryStats: long getPhoneOnTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.mtp.MtpDevice: java.lang.String getDeviceName()>:<public>:<android.mtp.MtpDevice>
<android.hsm.HwSystemManager: boolean allowOp(android.content.Context,int,boolean)>:<public static>:<android.hsm.HwSystemManager>
<android.net.SntpClient: long getRoundTripTime()>:<public>:<android.net.SntpClient>
<android.app.ContextImpl: void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Notification.WearableExtender: int getContentIcon()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.Fragment: int getTargetRequestCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.renderscript.Type: void calcElementCount()>:<>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.app.admin.IDevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.RippleDrawable: void tryRippleEnter()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Short2: void addAt(int,short)>:<public>:<android.renderscript.Short2>
<android.net.DhcpInfo.1: void <init>()>:<>:<android.net.DhcpInfo.1:android.os.Parcelable.Creator>
<android.os.BatteryProperties: int describeContents()>:<public>:<android.os.BatteryProperties:android.os.Parcelable>
<android.app.FragmentBreadCrumbs.1: void onClick(android.view.View)>:<public>:<android.app.FragmentBreadCrumbs.1:android.view.View.OnClickListener>
<android.app.HwCustSvcFactoryImpl: android.app.IHwCustNotification createNotificationCust()>:<public>:<android.app.HwCustSvcFactoryImpl:android.app.HwCustSvcFactory.Factory>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>:<public>:<android.graphics.Paint>
<android.app.Activity: boolean requestWindowFeature(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.FindActionModeCallback: void updateMatchCount(int,int,boolean)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.test.AndroidTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.RemoteInput.1: android.app.RemoteInput createFromParcel(android.os.Parcel)>:<public>:<android.app.RemoteInput.1:android.os.Parcelable.Creator>
<android.mtp.MtpServer: void <init>(android.mtp.MtpDatabase,boolean)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.database.CursorWrapper: boolean isClosed()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.StateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.webkit.JsDialogHelper: boolean invokeCallback(android.webkit.WebChromeClient,android.webkit.WebView)>:<public>:<android.webkit.JsDialogHelper>
<android.graphics.Matrix: void getValues(float[])>:<public>:<android.graphics.Matrix>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setColorMode(int)>:<public>:<android.print.PrintAttributes.Builder>
<android.app.MediaRouteButton: void drawableStateChanged()>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.net.wifi.WifiScanner.ScanSettings.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiScanner.ScanSettings.1:android.os.Parcelable.Creator>
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>:<public>:<android.graphics.SurfaceTexture>
<android.renderscript.Float4: void div(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.app.ActivityThread: void access.2400(android.app.ActivityThread,android.app.ActivityThread.BindServiceData)>:<static>:<android.app.ActivityThread>
<android.app.ActivityThread.ApplicationThread: void scheduleSuicide()>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.drm.DrmRights: java.lang.String getAccountId()>:<public>:<android.drm.DrmRights>
<android.app.PackageInstallObserver: void onUserActionRequired(android.content.Intent)>:<public>:<android.app.PackageInstallObserver>
<android.renderscript.Long2: long length()>:<public>:<android.renderscript.Long2>
<android.app.usage.IUsageStatsManager.Stub.Proxy: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)>:<public>:<android.app.usage.IUsageStatsManager.Stub.Proxy:android.app.usage.IUsageStatsManager>
<android.os.IMultiWinService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IMultiWinService.Stub:android.os.Binder,android.os.IMultiWinService>
<android.hwcontrol.HwWidgetFactory: java.lang.Object getHwFastScroller(android.widget.AbsListView,int,android.content.Context)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.filterfw.core.StopWatch: void <init>(java.lang.String)>:<public>:<android.filterfw.core.StopWatch>
<android.os.PersistableBundle.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.PersistableBundle.1:android.os.Parcelable.Creator>
<android.print.PrintAttributes: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.filterfw.core.FilterPort: void <init>(android.filterfw.core.Filter,java.lang.String)>:<public>:<android.filterfw.core.FilterPort>
<android.graphics.pdf.PdfEditor: void throwIfMediaBoxNull(android.graphics.Rect)>:<private>:<android.graphics.pdf.PdfEditor>
<android.os.Debug: int getGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int describeContents()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ContextImpl.26: void <init>()>:<>:<android.app.ContextImpl.26:android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.LayerDrawable.ChildDrawable: void <init>(android.graphics.drawable.LayerDrawable.ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.LayerDrawable.ChildDrawable>
<android.os.storage.StorageVolume: int describeContents()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.usage.ConfigurationStats.1: void <init>()>:<>:<android.app.usage.ConfigurationStats.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.webkit.WebSyncManager: void sync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.hwcontrol.HwWidgetFactory: android.graphics.drawable.Drawable getEdgeEffect(android.content.res.Resources)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.webkit.WebViewFactory: void loadNativeLibrary()>:<private static>:<android.webkit.WebViewFactory>
<android.mtp.MtpPropertyGroup: java.lang.String format_date_time(long)>:<private native>:<android.mtp.MtpPropertyGroup>
<android.filterfw.core.VertexFrame: int getVboId()>:<public>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.graphics.drawable.AnimatedStateListDrawable: void <init>(android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable.1)>:<>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.Transition addTarget(java.lang.String)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityThread: void <init>()>:<>:<android.app.ActivityThread>
<android.renderscript.Matrix2f: void multiply(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.os.Parcel: void init(long)>:<private>:<android.os.Parcel>
<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.AppImportanceMonitor: void updateImportanceLocked(int,int,int,boolean)>:<>:<android.app.AppImportanceMonitor>
<android.renderscript.Float2: void addAt(int,float)>:<public>:<android.renderscript.Float2>
<android.graphics.pdf.PdfEditor: int nativeRemovePage(long,int)>:<private static native>:<android.graphics.pdf.PdfEditor>
<android.graphics.drawable.AnimatedRotateDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.drawable.RippleDrawable: void onHotspotBoundsChanged()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.PowerManager.WakeLock: void acquireLocked()>:<private>:<android.os.PowerManager.WakeLock>
<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>:<public>:<android.os.AsyncResult>
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Int4: android.renderscript.Int4 div(android.renderscript.Int4,int)>:<public static>:<android.renderscript.Int4>
<android.os.BatteryStats: int getPhoneSignalStrengthCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void doWork()>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.app.FragmentManager.BackStackEntry: java.lang.String getName()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLLogWrapper: void glDepthFunc(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintJobStateChangeListener.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.opengl.GLLogWrapper: void glClearDepthx(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.Uri.StringUri: java.lang.String getEncodedPath()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.SamplingDataTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.SamplingDataTracker>
<android.net.NetworkUtils: boolean runDhcpRenew(java.lang.String,android.net.DhcpResults)>:<public static native>:<android.net.NetworkUtils>
<android.app.ActivityThread: boolean access.500()>:<static>:<android.app.ActivityThread>
<android.net.NetworkAgent: void unwanted()>:<protected abstract>:<android.net.NetworkAgent:android.os.Handler>
<android.os.INetworkActivityListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.INetworkActivityListener.Stub.Proxy:android.os.INetworkActivityListener>
<android.os.StrictMode.7: void <init>()>:<>:<android.os.StrictMode.7:android.os.StrictMode.Span>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.Float3: void addMultiple(android.renderscript.Float3,float)>:<public>:<android.renderscript.Float3>
<android.opengl.GLES20: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES20>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.os.BaseBundle: void unparcel()>:<>:<android.os.BaseBundle>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)>:<static>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.net.wifi.WifiManager: int getsListenerKey()>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.UserManager: android.os.Bundle getDefaultGuestRestrictions()>:<public>:<android.os.UserManager>
<android.app.IActivityManager: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.IConnectivityManager: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.os.UpdateLock: void setReferenceCounted(boolean)>:<public>:<android.os.UpdateLock>
<android.app.ProgressDialog.1: void <init>(android.app.ProgressDialog)>:<>:<android.app.ProgressDialog.1:android.os.Handler>
<android.app.UiAutomation: boolean access.300(android.app.UiAutomation)>:<static>:<android.app.UiAutomation>
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Bundle: void putAll(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.graphics.Rect.1: android.graphics.Rect[] newArray(int)>:<public>:<android.graphics.Rect.1:android.os.Parcelable.Creator>
<android.graphics.PathDashPathEffect: long nativeCreate(long,float,float,int)>:<private static native>:<android.graphics.PathDashPathEffect:android.graphics.PathEffect>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Long4: void setAt(int,long)>:<public>:<android.renderscript.Long4>
<android.accounts.ChooseAccountActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.graphics.FontListParser: android.graphics.FontListParser.Config readFamilies(org.xmlpull.v1.XmlPullParser)>:<private static>:<android.graphics.FontListParser>
<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>:<private>:<android.os.Parcel>
<android.app.ActivityManager.RunningServiceInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.app.ProgressDialog: void setProgressStyle(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.LargeBitmap: int getHeight()>:<public>:<android.graphics.LargeBitmap>
<android.webkit.WebViewProvider: void clearUsernamePassword()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.WebView.PrivateAccess: void onScrollChanged(int,int,int,int)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.renderscript.ScriptIntrinsicYuvToRGB: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.IConnectivityManager: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.transition.AutoTransition: void init()>:<private>:<android.transition.AutoTransition:android.transition.TransitionSet,android.transition.Transition>
<android.opengl.GLErrorWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Byte3: android.renderscript.Byte3 add(android.renderscript.Byte3,byte)>:<public static>:<android.renderscript.Byte3>
<android.net.IpPrefix: void <clinit>()>:<static>:<android.net.IpPrefix:android.os.Parcelable>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.print.PrintJob: boolean isStarted()>:<public>:<android.print.PrintJob>
<android.graphics.Matrix: float mapRadius(float)>:<public>:<android.graphics.Matrix>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.IAlarmManager.Stub.Proxy: long checkHasDeskClock()>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.net.wifi.HwWifiCHRService: boolean isRssiValid(int)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.renderscript.Short3: android.renderscript.Short3 add(android.renderscript.Short3,short)>:<public static>:<android.renderscript.Short3>
<android.app.Notification.Action.1: void <init>()>:<>:<android.app.Notification.Action.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebViewProvider: void setIsSpecCacheEnabled(boolean,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>:<public abstract>:<android.net.INetworkStatsSession:android.os.IInterface>
<android.graphics.Canvas: void native_drawPoints(long,float[],int,int,long)>:<private static native>:<android.graphics.Canvas>
<android.os.storage.IMountService.Stub.Proxy: boolean isUsbMassStorageConnected()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isMasterVolumeMuted(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.opengl.GLSurfaceView.EglHelper: java.lang.String formatEglError(java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isAdminActive(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.IActivityManager: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.http.RequestQueue.ActivePool: void startTiming()>:<public>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>:<public>:<android.os.storage.OnObbStateChangeListener>
<android.hwtheme.HwThemeManagerDummy: void setThemeFont()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.webkit.WebViewProvider: void setMapTrackballToArrowKeys(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.hwcontrol.HwWidgetFactory: com.android.internal.app.AlertController getHwAlertController(android.content.Context,android.content.DialogInterface,android.view.Window)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.renderscript.RenderScript: void nScriptGroupExecute(long)>:<>:<android.renderscript.RenderScript>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>:<public>:<android.accounts.AccountManager>
<android.print.PrinterInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)>:<public>:<android.app.ActivityManager>
<android.mtp.MtpObjectInfo: int getCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.Uri: java.lang.String toString()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.Int3: android.renderscript.Int3 mul(android.renderscript.Int3,int)>:<public static>:<android.renderscript.Int3>
<android.graphics.Path: boolean isEmpty()>:<public>:<android.graphics.Path>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.SurfaceTexture.1: void handleMessage(android.os.Message)>:<public>:<android.graphics.SurfaceTexture.1:android.os.Handler>
<android.print.PrintAttributes.MediaSize: int getWidthMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.alsa.AlsaDevicesParser: android.alsa.LineTokenizer access.000()>:<static>:<android.alsa.AlsaDevicesParser>
<android.app.backup.IBackupManager: android.content.Intent getDataManagementIntent(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.Dialog: int getVolumeControlStream()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.HwCustWifiManagerDummy: void disableInternetNetwork(int,android.net.wifi.HwCustActionListener)>:<public>:<android.net.wifi.HwCustWifiManagerDummy:android.net.wifi.IHwCustWifiManager>
<android.opengl.GLLogWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.FrameFormat: boolean equals(java.lang.Object)>:<public>:<android.filterfw.core.FrameFormat>
<android.graphics.Typeface: void <init>(long)>:<private>:<android.graphics.Typeface>
<android.renderscript.Matrix4f: float get(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.app.ActivityTransitionState: void <init>()>:<public>:<android.app.ActivityTransitionState>
<android.os.INetworkActivityListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.INetworkActivityListener.Stub.Proxy:android.os.INetworkActivityListener>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.JankSqlite: void <clinit>()>:<static>:<android.database.sqlite.JankSqlite>
<android.renderscript.Short3: void mul(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.renderscript.Matrix4f: boolean inverse()>:<public>:<android.renderscript.Matrix4f>
<android.mtp.MtpServer: void removeStorage(android.mtp.MtpStorage)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.graphics.Shader: void nativeSetLocalMatrix(long,long)>:<private static native>:<android.graphics.Shader>
<android.app.usage.TimeSparseArray: void <init>()>:<public>:<android.app.usage.TimeSparseArray:android.util.LongSparseArray>
<android.graphics.pdf.PdfRenderer: long nativeCreate(int,long)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.RenderScript: long rsnAllocationCreateTyped(long,long,int,int,long)>:<native>:<android.renderscript.RenderScript>
<android.app.ContextImpl: void enforceForUri(int,int,boolean,int,android.net.Uri,java.lang.String)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.net.NetworkFactory: void startNetwork()>:<protected>:<android.net.NetworkFactory:android.os.Handler>
<android.os.INetworkManagementService: void setInterfaceIpv6NdOffload(java.lang.String,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.Mesh.TriangleMeshBuilder: void latch()>:<private>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.ddm.DdmHandleNativeHeap: void disconnected()>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.INetworkPolicyListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkPolicyListener.Stub.Proxy:android.net.INetworkPolicyListener>
<android.os.Vibrator: void <init>()>:<public>:<android.os.Vibrator>
<android.opengl.GLErrorWrapper: void glFlush()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Registrant: void internalNotifyRegistrant(java.lang.Object,java.lang.Throwable)>:<>:<android.os.Registrant>
<android.database.BulkCursorToCursorAdaptor: void <init>()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.transition.Fade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.transition.ChangeBounds: void setResizeClip(boolean)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>:<public>:<android.app.LocalActivityManager>
<android.os.storage.IMountServiceListener.Stub: android.os.storage.IMountServiceListener asInterface(android.os.IBinder)>:<public static>:<android.os.storage.IMountServiceListener.Stub:android.os.Binder,android.os.storage.IMountServiceListener>
<android.renderscript.Byte4: void add(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.app.backup.BackupAgent: void onCreate()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.os.IUserManager.Stub.Proxy: void setDefaultGuestRestrictions(android.os.Bundle)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.IpPrefix: void <init>(java.net.InetAddress,int)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.net.wifi.WifiInfo: void setNetworkId(int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Movie: void nativeDestructor(long)>:<private static native>:<android.graphics.Movie>
<android.net.wifi.HwWifiCHRService: void LOGD(java.lang.String)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.'annotation'.IntDef: long[] value()>:<public abstract>:<android.annotation.IntDef:java.lang.annotation.Annotation>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.os.SystemService: boolean isStopped(java.lang.String)>:<public static>:<android.os.SystemService>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>:<public static>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.app.ActivityThread: void handleServiceArgs(android.app.ActivityThread.ServiceArgsData)>:<private>:<android.app.ActivityThread>
<android.os.CommonTimeConfig: int setMasterElectionEndpoint(java.net.InetSocketAddress)>:<public>:<android.os.CommonTimeConfig>
<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable.LevelListState,android.content.res.Resources)>:<private>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.pdf.PdfEditor: boolean getPageMediaBox(int,android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfEditor>
<android.hwtheme.HwThemeManager.IHwThemeManager: android.content.res.IHwConfiguration initHwConfiguration()>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.filterfw.GraphEnvironment: void addReferences(java.lang.Object[])>:<public transient>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.webkit.ClientCertRequest: int getPort()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.app.UiModeManager: void setNightMode(int)>:<public>:<android.app.UiModeManager>
<android.net.MobileDataStateTracker: void access.500(android.net.MobileDataStateTracker,android.content.Intent)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.JankEventData.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.JankEventData.1:android.os.Parcelable.Creator>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.002(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.BatteryStats.Uid: long getVideoTurnedOnTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ActivityManager.CpuStatInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedAuthority()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.mtp.MtpObjectInfo: int getSequenceNumber()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.arp.ArpPeer: byte[] doArp(int)>:<public>:<android.net.arp.ArpPeer>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityThread: void access.2100(android.app.ActivityThread,android.app.ActivityThread.ReceiverData)>:<static>:<android.app.ActivityThread>
<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLUtils: int native_texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<private static native>:<android.opengl.GLUtils>
<android.os.Handler: boolean sendMessage(android.os.Message)>:<public final>:<android.os.Handler>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.UiAutomation: void waitForIdle(long,long)>:<public>:<android.app.UiAutomation>
<android.webkit.CookieSyncManager: void <clinit>()>:<static>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.wifi.WifiCHRStateManager: void updateSwitchType(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.net.NetworkKey: java.lang.String toString()>:<public>:<android.net.NetworkKey:android.os.Parcelable>
<android.app.ResourcesManager: void flushDisplayMetricsLocked()>:<public>:<android.app.ResourcesManager>
<android.renderscript.RenderScript: void nContextDestroy()>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.ColorDrawable.ColorState: void <init>()>:<>:<android.graphics.drawable.ColorDrawable.ColorState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: java.lang.String getTag()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.RouteInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.RouteInfo.1:android.os.Parcelable.Creator>
<android.app.job.IJobScheduler.Stub.Proxy: java.util.List getAllPendingJobs()>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.net.wifi.WifiCHRStateManager: void updateWifiQosLevel(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setTexture(android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode,android.renderscript.ProgramFragmentFixedFunction.Builder.Format,int)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>:<public static>:<android.graphics.BitmapFactory>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>:<public final>:<android.os.Handler>
<android.app.IApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.accounts.AccountAuthenticatorActivity: void finish()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.mtp.MtpServer: void native_send_object_added(int)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.opengl.GLES31: void _nativeClassInit()>:<private static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.backup.RestoreSession: void endRestoreSession()>:<public>:<android.app.backup.RestoreSession>
<android.drm.DrmUtils.ExtendedMetadataParser: void <init>(byte[],android.drm.DrmUtils.1)>:<>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.filterfw.core.RoundRobinScheduler: android.filterfw.core.Filter scheduleNextNode()>:<public>:<android.filterfw.core.RoundRobinScheduler:android.filterfw.core.Scheduler>
<android.accounts.AccountManager.18: void <init>(android.accounts.AccountManager,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<>:<android.accounts.AccountManager.18:java.lang.Runnable>
<android.renderscript.Allocation: void <init>(long,android.renderscript.RenderScript,android.renderscript.Type,int)>:<>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.ScaleDrawable: void <init>()>:<>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.LinkProperties: void <init>()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>:<public>:<android.app.ActivityManager>
<android.app.QueuedWork: void remove(java.lang.Runnable)>:<public static>:<android.app.QueuedWork>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.net.InetAddress)>:<public>:<android.net.VpnService.Builder>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteCancelled()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.webkit.PluginData: java.util.Map getHeaders()>:<public>:<android.webkit.PluginData>
<android.filterfw.core.FieldPort: void clear()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.trust.ITrustListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.trust.ITrustListener.Stub.Proxy:android.app.trust.ITrustListener>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.http.Headers: java.lang.String getContentType()>:<public>:<android.net.http.Headers>
<android.app.Notification: java.lang.String visibilityToString(int)>:<public static>:<android.app.Notification:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.filterfw.core.SerializedFrame.DirectByteInputStream: int read()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteInputStream:java.io.InputStream>
<android.net.TrafficStats: long getTotalRxBytes()>:<public static>:<android.net.TrafficStats>
<android.os.StrictMode: void enableDeathOnNetwork()>:<public static>:<android.os.StrictMode>
<android.app.ActivityThread: void handleTrimMemory(int)>:<final>:<android.app.ActivityThread>
<android.os.storage.IMountService.Stub.Proxy: int encryptStorage(int,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.IAlarmManager.Stub.Proxy: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager.AlarmClockInfo)>:<public>:<android.app.IAlarmManager.Stub.Proxy:android.app.IAlarmManager>
<android.renderscript.Int2: android.renderscript.Int2 mul(android.renderscript.Int2,int)>:<public static>:<android.renderscript.Int2>
<android.net.NetworkCapabilities.1: void <init>()>:<>:<android.net.NetworkCapabilities.1:android.os.Parcelable.Creator>
<android.database.DefaultDatabaseErrorHandler: void <init>()>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.net.wifi.WifiManager: int getWifiApState()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.pdf.PdfDocument.Page: android.graphics.pdf.PdfDocument.PageInfo getInfo()>:<public>:<android.graphics.pdf.PdfDocument.Page>
<android.filterfw.core.VertexFrame: void <clinit>()>:<static>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.os.IPowerManager.Stub.Proxy: boolean isInteractive()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.os.IUserManager: void setUserIcon(int,android.graphics.Bitmap)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.ddm.DdmHandleProfiling: void register()>:<public static>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void flush()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Int2: void add(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.app.IActivityManager.ContentProviderHolder.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.IActivityManager.ContentProviderHolder.1:android.os.Parcelable.Creator>
<android.net.StaticIpConfiguration.1: android.net.StaticIpConfiguration createFromParcel(android.os.Parcel)>:<public>:<android.net.StaticIpConfiguration.1:android.os.Parcelable.Creator>
<android.net.wifi.IWifiManager: android.net.DhcpInfo getDhcpInfo()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.INetworkManagementService: void enableNat(java.lang.String,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.backup.IRestoreObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.backup.IRestoreObserver.Stub:android.os.Binder,android.app.backup.IRestoreObserver>
<android.graphics.Paint: void finalize()>:<protected>:<android.graphics.Paint>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>:<public>:<android.app.LocalActivityManager>
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.filterfw.core.Filter: void addAnnotatedPorts()>:<private final>:<android.filterfw.core.Filter>
<android.app.RemoteServiceException: void <init>(java.lang.String)>:<public>:<android.app.RemoteServiceException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.RippleBackground: void cancelSoftwareAnimations()>:<private>:<android.graphics.drawable.RippleBackground>
<android.graphics.drawable.GradientDrawable.GradientState: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>:<>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Allocation: void ioSend()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.CursorWindow: java.lang.String getString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.NetworkTemplate: int describeContents()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Type)>:<public>:<android.renderscript.Mesh.Builder>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebView: void onFinishTemporaryDetach()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.IntentService: void setIntentRedelivery(boolean)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActivityThread.ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.os.IPowerManager: boolean getWakeLockByUid(int,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.FragmentManager: android.app.Fragment findFragmentById(int)>:<public abstract>:<android.app.FragmentManager>
<android.net.wifi.p2p.WifiP2pDeviceList: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.database.CursorWrapper: int getColumnCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.backup.BackupDataOutput: void <init>(java.io.FileDescriptor)>:<public>:<android.app.backup.BackupDataOutput>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.SimpleFrameManager:android.filterfw.core.FrameManager>
<android.net.wifi.IWifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.backup.BackupDataInput.EntityHeader: void <init>(android.app.backup.BackupDataInput.1)>:<>:<android.app.backup.BackupDataInput.EntityHeader>
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.CacheManager.CacheResult: long getExpires()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>:<public static>:<android.app.AppGlobals>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebViewFactory.RelroFileCreator: void main(java.lang.String[])>:<public static>:<android.webkit.WebViewFactory.RelroFileCreator>
<android.app.EnterTransitionCoordinator: boolean cancelEnter()>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.IAlarmManager.Stub: android.app.IAlarmManager asInterface(android.os.IBinder)>:<public static>:<android.app.IAlarmManager.Stub:android.os.Binder,android.app.IAlarmManager>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.IAppTask: void moveToFront()>:<public abstract>:<android.app.IAppTask:android.os.IInterface>
<android.filterfw.core.NativeBuffer: int getElementSize()>:<public>:<android.filterfw.core.NativeBuffer>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.dhcp.DhcpOfferPacket: java.nio.ByteBuffer buildPacket(int,short,short)>:<public>:<android.net.dhcp.DhcpOfferPacket:android.net.dhcp.DhcpPacket>
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.database.AbstractWindowedCursor: long getLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLLogWrapper: java.lang.String getIndexType(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.ScriptIntrinsicHistogram: void setDotCoefficients(float,float,float,float)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: boolean isInMemoryDatabase()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient.CustomViewCallback)>:<public>:<android.webkit.WebChromeClient>
<android.os.ParcelFileDescriptor: int describeContents()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.TransitionSet: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.hsm.HwAudioPermWrapper: boolean confirmPermissionWithResult()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.os.Parcel: boolean nativePushAllowFds(long,boolean)>:<private static native>:<android.os.Parcel>
<android.app.IAlarmManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IAlarmManager.Stub:android.os.Binder,android.app.IAlarmManager>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setStartScrollBottom(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.PPPOEConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>:<public>:<android.filterfw.core.FilterContext>
<android.os.IMultiWinService: boolean isMultiWinNotificationIntent(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.Request: void cancel()>:<>:<android.net.http.Request>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.1000(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.backup.BackupHelperDispatcher: void <init>()>:<public>:<android.app.backup.BackupHelperDispatcher>
<android.app.ActivityThread: android.app.ActivityThread.TimeProfileData access.800(android.app.ActivityThread)>:<static>:<android.app.ActivityThread>
<android.app.FragmentManagerImpl: android.app.FragmentTransaction beginTransaction()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl.10: void <init>()>:<>:<android.app.ContextImpl.10:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Byte3: android.renderscript.Byte3 div(android.renderscript.Byte3,byte)>:<public static>:<android.renderscript.Byte3>
<android.app.IApplicationThread: void scheduleExit()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLLogWrapper: boolean glIsEnabled(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.MessageQueue: long nativeInit()>:<private static native>:<android.os.MessageQueue>
<android.renderscript.Allocation: android.view.Surface getSurface()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.RenderScriptGL: void bindProgramRaster(android.renderscript.ProgramRaster)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.renderscript.Element: android.renderscript.Element U16_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.LinkProperties: boolean hasIPv4()>:<private>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.renderscript.Double4: int length()>:<public>:<android.renderscript.Double4>
<android.filterfw.core.VertexFrame: boolean nativeAllocate(int)>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.net.NetworkState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkState.1:android.os.Parcelable.Creator>
<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.opengl.GLES10: void glLightModelf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.net.http.RequestQueue.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.net.http.RequestQueue.1:android.content.BroadcastReceiver>
<android.webkit.WebView: void resumeTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.sqlite.SQLiteConnection: void setLocaleFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glCurrentPaletteMatrixOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Environment.UserEnvironment: java.io.File getExternalStorageDirectory()>:<public>:<android.os.Environment.UserEnvironment>
<android.graphics.drawable.BitmapDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.FilterPort: java.lang.String toString()>:<public>:<android.filterfw.core.FilterPort>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.graphics.Region: void finalize()>:<protected>:<android.graphics.Region:android.os.Parcelable>
<android.app.ActivityOptions: int getStartY()>:<public>:<android.app.ActivityOptions>
<android.app.backup.RestoreSession: void <init>(android.content.Context,android.app.backup.IRestoreSession)>:<>:<android.app.backup.RestoreSession>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.MobileDataStateTracker: void access.1100(android.net.MobileDataStateTracker,java.lang.String)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.MediaRouteButton: boolean performLongClick()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>:<public static final>:<android.database.DatabaseUtils>
<android.drm.DrmInfoStatus: boolean isValidStatusCode(int)>:<private>:<android.drm.DrmInfoStatus>
<android.webkit.HwFindActionModeCallback: void <init>(android.content.Context)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addTransportType(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.net.LinkProperties: void <init>(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.IWallpaperManagerCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IWallpaperManagerCallback.Stub:android.os.Binder,android.app.IWallpaperManagerCallback>
<android.net.wifi.HwWifiStatStore: void updateWifiState(int)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.database.AbstractCursor: boolean moveToPosition(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.database.AbstractCursor: boolean moveToLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.FontFamily: void <init>(java.lang.String,java.lang.String)>:<public>:<android.graphics.FontFamily>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.net.wifi.WpsResult: java.lang.String toString()>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.graphics.Matrix: void native_postRotate(long,float)>:<private static native>:<android.graphics.Matrix>
<android.webkit.Plugin: java.lang.String getPath()>:<public>:<android.webkit.Plugin>
<android.app.Notification.Builder: android.app.Notification buildInto(android.app.Notification)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityTransitionCoordinator: void startTransition(java.lang.Runnable)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.transition.TransitionSet: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.drawable.Drawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.Drawable>
<android.os.BatteryStats: int getHistoryTagPoolUid(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)>:<public>:<android.net.http.RequestHandle>
<android.net.wifi.WifiCHRStateManager: void uploadAssocRejectException(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.print.PrintJobId: java.lang.String flattenToString()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.app.BackStackRecord: void addTargets(android.transition.Transition,java.util.ArrayList)>:<public static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.database.sqlite.SQLiteStatement: void execute()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable.AnimatedVectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.transition.TransitionUtils: android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator)>:<static>:<android.transition.TransitionUtils>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.accounts.IAccountAuthenticator: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.renderscript.Type: android.renderscript.Type createXYZ(android.renderscript.RenderScript,android.renderscript.Element,int,int,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>:<public>:<android.net.LocalSocketImpl>
<android.opengl.GLES20: void glEnable(int)>:<public static native>:<android.opengl.GLES20>
<android.app.LoadedApk: java.io.File getDataDirFile()>:<public>:<android.app.LoadedApk>
<android.net.wifi.WifiScanner.ActionListener: void onSuccess()>:<public abstract>:<android.net.wifi.WifiScanner.ActionListener>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOut()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glClear(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiSsid.1: android.net.wifi.WifiSsid createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiSsid.1:android.os.Parcelable.Creator>
<android.filterfw.core.Filter: void clearInputs()>:<final>:<android.filterfw.core.Filter>
<android.mtp.HwMtpDatabaseManager: int hwBeginSendObject(java.lang.String,android.database.Cursor)>:<public abstract>:<android.mtp.HwMtpDatabaseManager>
<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()>:<public>:<android.app.backup.BackupManager>
<android.app.Instrumentation: void sendCharacterSync(int)>:<public>:<android.app.Instrumentation>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>:<public>:<android.net.http.SslError>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.transition.TransitionSet: android.transition.Transition removeTarget(android.view.View)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.Rect.1: android.graphics.Rect createFromParcel(android.os.Parcel)>:<public>:<android.graphics.Rect.1:android.os.Parcelable.Creator>
<android.os.storage.IMountService.Stub.Proxy: int mkdirs(java.lang.String,java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.JankBdData: int describeContents()>:<public>:<android.os.JankBdData:android.os.Parcelable>
<android.graphics.drawable.Animatable: void stop()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.app.admin.DevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.RenderScript: void nContextBindProgramVertex(long)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Typeface: void <clinit>()>:<static>:<android.graphics.Typeface>
<android.app.UiAutomationConnection: void throwIfNotConnectedLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.net.Credentials: int getGid()>:<public>:<android.net.Credentials>
<android.net.wifi.p2p.IWifiP2pManager: boolean isWifiP2pEnabled()>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.renderscript.Byte3: void setAt(int,byte)>:<public>:<android.renderscript.Byte3>
<android.webkit.WebViewFragment: void onDestroy()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String toString()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Int3: android.renderscript.Int3 div(android.renderscript.Int3,int)>:<public static>:<android.renderscript.Int3>
<android.opengl.GLES10: void glEnableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.print.PrintJobInfo.1: void <init>()>:<>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.renderscript.RSTextureView: void pause()>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.graphics.drawable.LevelListDrawable.LevelListState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.wifi.PPPOEConfig: void <init>()>:<public>:<android.net.wifi.PPPOEConfig:android.os.Parcelable>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String get(java.lang.String)>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.graphics.Xfermode: void finalizer(long)>:<private static native>:<android.graphics.Xfermode>
<android.graphics.NinePatch: void nativeDraw(long,android.graphics.Rect,long,long,long,int,int)>:<private static native>:<android.graphics.NinePatch>
<android.os.Debug: void resetGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Fragment: void restoreViewState(android.os.Bundle)>:<final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiCHRStateManager: java.lang.String maskIpAddress(java.lang.String)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public abstract>:<android.opengl.GLSurfaceView.EGLConfigChooser>
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.AsyncTask.2: void <init>(android.os.AsyncTask)>:<>:<android.os.AsyncTask.2:android.os.AsyncTask.WorkerRunnable>
<android.app.AppOpsManager.OpEntry: int getDuration()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: void <clinit>()>:<static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.opengl.GLErrorWrapper: void glGenTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSyncManager: java.lang.Object clone()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.IpPrefix: boolean equals(java.lang.Object)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.app.IActivityContainer.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.renderscript.Long4: android.renderscript.Long4 div(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.os.StatFs: long getAvailableBytes()>:<public>:<android.os.StatFs>
<android.database.sqlite.SQLiteDebug: void nativeGetPagerStats(android.database.sqlite.SQLiteDebug.PagerStats)>:<private static native>:<android.database.sqlite.SQLiteDebug>
<android.app.admin.IDevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.transition.TransitionInflater: void <init>(android.content.Context)>:<private>:<android.transition.TransitionInflater>
<android.app.ActivityView: boolean injectInputEvent(android.view.InputEvent)>:<private>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.app.IActivityManager: void setFocusedStack(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.LinkAddress: void <init>(java.lang.String,int,int)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: void setEnableClick(android.widget.ImageView,boolean)>:<private>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.DhcpStateMachine.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.net.DhcpStateMachine.1:android.content.BroadcastReceiver>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>:<public final>:<android.os.Handler>
<android.os.storage.StorageVolume.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.storage.StorageVolume.1:android.os.Parcelable.Creator>
<android.database.AbstractWindowedCursor: int getInt(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.net.wifi.WifiManager: java.lang.String getWpsNfcConfigurationToken(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.INetworkManagementService.Stub.Proxy: void setDnsForwarders(android.net.Network,java.lang.String[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: boolean processMessage(android.os.Message)>:<public>:<android.net.DhcpStateMachine.WaitBeforeRenewalState:com.android.internal.util.State>
<android.app.backup.BackupDataOutput: int writeEntityData_native(long,byte[],int)>:<private static native>:<android.app.backup.BackupDataOutput>
<android.net.wifi.IWifiManager: void setWifiEnableForP2p(boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.R.raw: void <init>()>:<public>:<android.R.raw>
<android.net.wifi.WifiScanner.WifiChangeSettings.1: android.net.wifi.WifiScanner.WifiChangeSettings[] newArray(int)>:<public>:<android.net.wifi.WifiScanner.WifiChangeSettings.1:android.os.Parcelable.Creator>
<android.transition.PatternPathMotion: float distance(float,float)>:<private static>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.os.IUpdateLock.Stub.Proxy: void acquireUpdateLock(android.os.IBinder,java.lang.String)>:<public>:<android.os.IUpdateLock.Stub.Proxy:android.os.IUpdateLock>
<android.transition.ChangeClipBounds: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.Short3: void div(android.renderscript.Short3)>:<public>:<android.renderscript.Short3>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityTransitionCoordinator: android.transition.Transition configureTransition(android.transition.Transition,boolean)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.TemporaryBuffer: char[] obtain(int)>:<public static>:<android.graphics.TemporaryBuffer>
<android.database.CursorWindow: java.lang.String getName()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.wifi.IWifiManager.Stub.Proxy: int getWifiEnabledState()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.ActivityManager: boolean isUserRunning(int)>:<public>:<android.app.ActivityManager>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.Drawable>
<android.app.ListFragment: void setListShown(boolean,boolean)>:<private>:<android.app.ListFragment:android.app.Fragment>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Parcel: void writeDouble(double)>:<public final>:<android.os.Parcel>
<android.graphics.YuvImage: int[] getStrides()>:<public>:<android.graphics.YuvImage>
<android.renderscript.Long3: void sub(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>:<public>:<android.net.nsd.NsdManager>
<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.net.NetworkPolicyManager: void removeUidPolicy(int,int)>:<public>:<android.net.NetworkPolicyManager>
<android.net.UidRange.1: android.net.UidRange createFromParcel(android.os.Parcel)>:<public>:<android.net.UidRange.1:android.os.Parcelable.Creator>
<android.net.IConnectivityManager: void setDataDependency(int,boolean)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.drawable.StateListDrawable: void clearMutated()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.Path: void <clinit>()>:<static>:<android.graphics.Path>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.accounts.AccountAndUser: boolean equals(java.lang.Object)>:<public>:<android.accounts.AccountAndUser>
<android.os.ServiceManagerProxy: java.lang.String[] listServices()>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.app.ActivityManagerProxy: void takePersistableUriPermission(android.net.Uri,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.backup.IBackupManager.Stub.Proxy: boolean isBackupEnabled()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.VoiceInteractor.2: void <init>(android.app.VoiceInteractor)>:<>:<android.app.VoiceInteractor.2:com.android.internal.app.IVoiceInteractorCallback.Stub>
<android.graphics.Path: float[] approximate(float)>:<public>:<android.graphics.Path>
<android.webkit.WebSettings: boolean getUseDoubleTree()>:<public>:<android.webkit.WebSettings>
<android.net.MobileDataStateTracker: void privateDnsRouteSet(boolean)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager: void notifyActivityDrawn(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(int,android.os.UserHandle)>:<public>:<android.appwidget.AppWidgetManager>
<android.transition.ChangeText.3: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.ChangeText.3:android.animation.AnimatorListenerAdapter>
<android.mtp.MtpServer: void native_send_object_removed(int)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.os.MemoryFile.MemoryInputStream: int read(byte[],int,int)>:<public>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.graphics.Rect: int centerX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void access.000(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<static>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.hwtheme.HwThemeManager.IHwThemeManager: void updateIconCache(android.content.pm.PackageItemInfo,java.lang.String,java.lang.String,int,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLSurfaceView: void finalize()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>:<public>:<android.net.NetworkPolicyManager>
<android.net.Uri.StringUri: java.lang.String parseScheme()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.os.UserManager: android.content.pm.UserInfo createSecondaryUser(java.lang.String,int)>:<public>:<android.os.UserManager>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.transition.TransitionValues: boolean equals(java.lang.Object)>:<public>:<android.transition.TransitionValues>
<android.app.Fragment: android.app.Fragment findFragmentByWho(java.lang.String)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.BatteryStats: int getDischargeAmountScreenOn()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: void endTransactionUnchecked(android.os.CancellationSignal,boolean)>:<private>:<android.database.sqlite.SQLiteSession>
<android.filterfw.core.FieldPort: boolean acceptsFrame()>:<public>:<android.filterfw.core.FieldPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.filterfw.core.Frame: void releaseNativeAllocation()>:<protected abstract>:<android.filterfw.core.Frame>
<android.renderscript.Byte4: void add(byte)>:<public>:<android.renderscript.Byte4>
<android.graphics.FontListParser: void skip(org.xmlpull.v1.XmlPullParser)>:<private static>:<android.graphics.FontListParser>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder.DeathRecipient)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.opengl.GLSurfaceView: void requestRender()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.LinkQualityInfo: void setTheoreticalTxBandwidth(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.renderscript.Double2: android.renderscript.Double2 add(android.renderscript.Double2,double)>:<public static>:<android.renderscript.Double2>
<android.print.PrintDocumentInfo: void setDataSize(long)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.BackStackRecord: void setEpicenterIn(android.util.ArrayMap,android.app.BackStackRecord.TransitionState)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IWallpaperManager.Stub.Proxy: void settingsRestored()>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.opengl.GLLogWrapper: void unbindArrays()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkTemplate.1: android.net.NetworkTemplate[] newArray(int)>:<public>:<android.net.NetworkTemplate.1:android.os.Parcelable.Creator>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.IConnectivityManager.Stub.Proxy: com.android.internal.net.VpnConfig getVpnConfig()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Scene>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifiWildcard()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.renderscript.Long4: void setValues(long,long,long,long)>:<public>:<android.renderscript.Long4>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double4)>:<public>:<android.renderscript.FieldPacker>
<android.os.PersistableBundle: void <init>()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>:<final>:<android.app.ContextImpl:android.content.Context>
<android.app.LoadedApk.WarningContextClassLoader: void warn(java.lang.String)>:<private>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.graphics.drawable.VectorDrawable.VGroup: float getTranslateY()>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.webkit.WebSettings.PluginState: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.app.ExitTransitionCoordinator.8: void onAnimationEnd(android.animation.Animator)>:<public>:<android.app.ExitTransitionCoordinator.8:android.animation.AnimatorListenerAdapter>
<android.graphics.drawable.AnimatedVectorDrawable: void start()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.app.ActivityManagerProxy: void finishHeavyWeightApp()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.wifi.p2p.WifiP2pManagerHisiExt: boolean setWifiP2pEnabled(int)>:<public>:<android.net.wifi.p2p.WifiP2pManagerHisiExt>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStopped(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>:<public static native>:<android.opengl.GLES10Ext>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2002(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.app.AppOpsManager.OpEntry: long getTime()>:<public>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.app.ContextImpl: java.io.File getFilesDir()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.admin.IDevicePolicyManager: int getStorageEncryptionStatus(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.DialogFragment: void setStyle(int,int)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Color: int HSBtoColor(float[])>:<public static>:<android.graphics.Color>
<android.graphics.Movie: boolean setTime(int)>:<public native>:<android.graphics.Movie>
<android.webkit.WebViewProvider: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.ExitTransitionCoordinator: void access.800(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLException: int getError()>:<>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glDeleteProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.transition.Transition.TransitionListener: void onTransitionPause(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.net.wifi.WifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>:<private>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.KeyguardManager: boolean isDeviceLocked(int)>:<public>:<android.app.KeyguardManager>
<android.filterfw.core.NativeFrame: java.lang.String toString()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.backup.IRestoreObserver.Stub.Proxy: void restoreStarting(int)>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.app.FragmentManagerImpl: void popBackStack()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.Uri.Part: void <clinit>()>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.app.FragmentManagerImpl: void dispatchActivityCreated()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)>:<public>:<android.app.ActivityThread>
<android.app.StatusBarManager: void <init>(android.content.Context)>:<>:<android.app.StatusBarManager>
<android.app.admin.IDevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.database.DatabaseUtils: int findRowIdColumnIndex(java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.os.IPowerManager.Stub.Proxy: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.print.IPrintManager.Stub.Proxy: java.util.List getPrintJobInfos(int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.opengl.GLSurfaceView: void checkRenderThreadState()>:<private>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.wifi.BatchedScanSettings: void constrain()>:<public>:<android.net.wifi.BatchedScanSettings:android.os.Parcelable>
<android.net.NetworkQuotaInfo.1: void <init>()>:<>:<android.net.NetworkQuotaInfo.1:android.os.Parcelable.Creator>
<android.webkit.HttpAuthHandler: void <init>()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.net.wifi.ScanResult: java.lang.String toString()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.net.NetworkStatsHistory: void recordEntireHistory(android.net.NetworkStatsHistory)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.database.DatabaseUtils: int getKeyLen(byte[])>:<private static>:<android.database.DatabaseUtils>
<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.storage.IObbActionListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.storage.IObbActionListener.Stub.Proxy:android.os.storage.IObbActionListener>
<android.graphics.Paint: float descent()>:<public native>:<android.graphics.Paint>
<android.net.Uri.OpaqueUri: boolean isRelative()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.os.storage.StorageVolume: boolean allowMassStorage()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.net.MobileDataStateTracker: android.telephony.SignalStrength access.102(android.net.MobileDataStateTracker,android.telephony.SignalStrength)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.database.sqlite.SQLiteSession: boolean hasTransaction()>:<public>:<android.database.sqlite.SQLiteSession>
<android.graphics.Region: void nativeDestructor(long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.net.ConnectivityManager: android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: void onPrintJobStateChanged(android.print.PrintJobId)>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.app.IActivityController.Stub: android.app.IActivityController asInterface(android.os.IBinder)>:<public static>:<android.app.IActivityController.Stub:android.os.Binder,android.app.IActivityController>
<android.renderscript.RenderScript: int nMeshGetVertexBufferCount(long)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityTransitionCoordinator: android.app.ActivityTransitionCoordinator.SharedElementOriginalState getOldSharedElementState(android.view.View,java.lang.String,android.os.Bundle)>:<private static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.LocalSocket: void implCreateIfNeeded()>:<private>:<android.net.LocalSocket:java.io.Closeable>
<android.accounts.AccountManager.1: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String)>:<>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.renderscript.RenderScript: long nFileA3DCreateFromAssetStream(long)>:<>:<android.renderscript.RenderScript>
<android.webkit.WebView.WebViewTransport: void <init>(android.webkit.WebView)>:<public>:<android.webkit.WebView.WebViewTransport>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.BaseNetworkStateTracker: void setTeardownRequested(boolean)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.filterfw.core.OutputPort: void pushFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.NetworkUtils: java.net.InetAddress intToInetAddress(int)>:<public static>:<android.net.NetworkUtils>
<android.graphics.Interpolator: void <init>(int)>:<public>:<android.graphics.Interpolator>
<android.os.Process: android.os.Process.ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>:<public static final>:<android.os.Process>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.os.Parcelable.ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public abstract>:<android.os.Parcelable.ClassLoaderCreator:android.os.Parcelable.Creator>
<android.net.wifi.RttManager.RttListener: void onAborted()>:<public abstract>:<android.net.wifi.RttManager.RttListener>
<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.ActivityManager.TaskDescription: int getPrimaryColor()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.renderscript.ProgramFragment.Builder: android.renderscript.ProgramFragment create()>:<public>:<android.renderscript.ProgramFragment.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.app.EnterTransitionCoordinator: android.transition.Transition getEnterViewsTransition()>:<public>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedFragment()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.os.IMultiWinService.Stub.Proxy: boolean unregisterMWCallBack(android.os.IMultiWinServiceCallBack)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.NetworkCapabilities: void combineNetCapabilities(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glMultiTexCoord4x(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.NetworkStatsHistory.ParcelUtils: long[] readLongArray(android.os.Parcel)>:<public static>:<android.net.NetworkStatsHistory.ParcelUtils>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.webkit.WebHistoryItem: int getId()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.accounts.IAccountManager.Stub.Proxy: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.SearchDialog: void setListSelection(int)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.os.FileBridge: void forceClose()>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>:<public transient>:<android.filterfw.core.FilterFunction>
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void validateQuery(java.lang.String)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.mtp.MtpDatabase: void initDeviceProperties(android.content.Context)>:<private>:<android.mtp.MtpDatabase>
<android.opengl.GLSurfaceView.EglHelper: void start()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.print.PrinterInfo: void <init>(android.print.PrinterInfo)>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Float4: float elementSum()>:<public>:<android.renderscript.Float4>
<android.opengl.GLLogWrapper: void bindArrays()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.PendingIntent: java.lang.String getTargetPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: void reverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ActivityThread.ApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.FragmentManager: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<android.mtp.HwMtpDatabaseManager: boolean hwGetObjectInfo(int,int[],char[],long[])>:<public abstract>:<android.mtp.HwMtpDatabaseManager>
<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Point.1: android.graphics.Point createFromParcel(android.os.Parcel)>:<public>:<android.graphics.Point.1:android.os.Parcelable.Creator>
<android.app.ExitTransitionCoordinator: android.transition.Transition getExitTransition()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.emoji.EmojiFactory: int nativeGetVendorSpecificPuaFromAndroidPua(long,int)>:<private native>:<android.emoji.EmojiFactory>
<android.net.IConnectivityManager.Stub.Proxy: boolean isActiveNetworkMetered()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.FontFamily: long nCreateFamily(java.lang.String,int)>:<private static native>:<android.graphics.FontFamily>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>:<public>:<android.graphics.Canvas>
<android.net.wifi.p2p.WifiP2pManager.PeerListListener: void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.PeerListListener>
<android.os.storage.IMountService.Stub: android.os.storage.IMountService asInterface(android.os.IBinder)>:<public static>:<android.os.storage.IMountService.Stub:android.os.Binder,android.os.storage.IMountService>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings valueOf(java.lang.String)>:<public static>:<android.net.IpConfiguration.ProxySettings:java.lang.Enum>
<android.net.http.HttpAuthHeader: void setPassword(java.lang.String)>:<public>:<android.net.http.HttpAuthHeader>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.graphics.Interpolator: void nativeDestructor(long)>:<private static native>:<android.graphics.Interpolator>
<android.accounts.AbstractAccountAuthenticator.1: void run()>:<public>:<android.accounts.AbstractAccountAuthenticator.1:java.lang.Runnable>
<android.accounts.Account.1: android.accounts.Account createFromParcel(android.os.Parcel)>:<public>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.filterfw.core.NativeProgram: void tearDown()>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.accounts.AccountManager.13: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.UserHandle)>:<>:<android.accounts.AccountManager.13:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Long2: android.renderscript.Long2 div(android.renderscript.Long2,android.renderscript.Long2)>:<public static>:<android.renderscript.Long2>
<android.graphics.Rect: boolean intersects(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(long)>:<public static native>:<android.opengl.EGL14>
<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String,java.lang.String[])>:<private>:<android.net.ProxyInfo:android.os.Parcelable>
<android.hwtheme.HwThemeManager: android.content.res.Resources getResources()>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.Matrix: java.lang.String toShortString()>:<public>:<android.graphics.Matrix>
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.NinePatch: long nativeGetTransparentRegion(long,long,android.graphics.Rect)>:<private static native>:<android.graphics.NinePatch>
<android.app.ActivityTransitionCoordinator: void stripOffscreenViews()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.ActivityManagerProxy: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.http.SslCertificate: java.lang.String toString()>:<public>:<android.net.http.SslCertificate>
<android.app.backup.IBackupManager.Stub.Proxy: void setBackupServiceActive(int,boolean)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.database.BulkCursorDescriptor.1: android.database.BulkCursorDescriptor[] newArray(int)>:<public>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.netdetect.HwCustNetDetectServiceImpl: boolean isNetworkAvailable()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>:<public>:<android.app.TaskStackBuilder>
<android.renderscript.Matrix4f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.database.sqlite.SQLiteDatabase: void beginTransaction(android.database.sqlite.SQLiteTransactionListener,boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebViewProvider: boolean isPrivateBrowsingEnabled()>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.RenderScript: void rsnElementGetSubElements(long,long,long[],java.lang.String[],int[])>:<native>:<android.renderscript.RenderScript>
<android.net.NetworkFactory: java.lang.String toString()>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.net.NetworkStatsHistory.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkStatsHistory.1:android.os.Parcelable.Creator>
<android.database.Cursor: boolean moveToLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.webkit.WebView: void access.1700(android.webkit.WebView,int,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.backup.IRestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>:<public abstract>:<android.app.backup.IRestoreObserver:android.os.IInterface>
<android.os.BatteryStats.Uid.Proc: long getUserTime(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES31Ext>
<android.os.storage.StorageManager: void <init>(android.content.ContentResolver,android.os.Looper)>:<public>:<android.os.storage.StorageManager>
<android.transition.Slide.3: void <init>()>:<>:<android.transition.Slide.3:android.transition.Slide.CalculateSlideVertical>
<android.app.admin.IDevicePolicyManager: java.lang.String getDeviceOwnerName()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.IPowerManager.Stub.Proxy: void setTemporaryScreenBrightnessSettingOverride(int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.Outline: void offset(int,int)>:<public>:<android.graphics.Outline>
<android.net.StaticIpConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.graphics.Camera: void rotate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.database.BulkCursorNative: android.os.IBinder asBinder()>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.filterfw.core.Frame: android.graphics.Bitmap getBitmap()>:<public abstract>:<android.filterfw.core.Frame>
<android.net.Uri.OpaqueUri: java.lang.String getSchemeSpecificPart()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.SearchDialog.1: void <init>(android.app.SearchDialog)>:<>:<android.app.SearchDialog.1:android.content.BroadcastReceiver>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>:<public>:<android.app.Instrumentation>
<android.database.CursorJoiner: java.util.Iterator iterator()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.webkit.WebView: android.view.View findHierarchyView(java.lang.String,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc[] values()>:<public static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Activity: void startActivities(android.content.Intent[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()>:<private static>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.graphics.drawable.VectorDrawable.VPathRenderer: android.graphics.Paint access.402(android.graphics.drawable.VectorDrawable.VPathRenderer,android.graphics.Paint)>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.net.wifi.WifiScanner.HotlistSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiScanner.HotlistSettings:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetProvider: void <init>()>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.filterfw.core.GLFrame: int getNativeFboId()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.wifi.p2p.WifiP2pInfo: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.app.IActivityManager: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.FieldPacker: void addU16(int)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Matrix: void set(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.net.http.CertificateChainValidator.NoPreloadHolder: void <clinit>()>:<static>:<android.net.http.CertificateChainValidator.NoPreloadHolder>
<android.opengl.GLLogWrapper: void glMultMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ISearchManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.filterfw.core.FilterFactory: void addPackage(java.lang.String)>:<public>:<android.filterfw.core.FilterFactory>
<android.renderscript.Int2: void sub(int)>:<public>:<android.renderscript.Int2>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>:<public static final>:<android.database.DatabaseUtils>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>:<public>:<android.filterfw.io.PatternScanner>
<android.app.ActivityThread: void applyConfigurationToResources(android.content.res.Configuration)>:<public final>:<android.app.ActivityThread>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.webkit.DateSorter: long getBoundary(int)>:<public>:<android.webkit.DateSorter>
<android.app.backup.AbsoluteFileBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.AbsoluteFileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.app.IApplicationThread: void scheduleSuicide()>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.webkit.WebChromeClient.FileChooserParams: void <init>()>:<public>:<android.webkit.WebChromeClient.FileChooserParams>
<android.os.CommonTimeConfig: java.net.InetSocketAddress getMasterElectionEndpoint()>:<public>:<android.os.CommonTimeConfig>
<android.sax.Element: java.lang.String toString()>:<public>:<android.sax.Element>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: boolean isTransitionReversed(int,int)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Path: void <init>()>:<public>:<android.graphics.Path>
<android.app.IActivityManager: void stopAppSwitches()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.RotateDrawable: float getPivotX()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.ShaderProgram: boolean setShaderBlendFunc(int,int)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>:<public>:<android.net.ConnectivityManager>
<android.renderscript.Double2: void setValues(double,double)>:<public>:<android.renderscript.Double2>
<android.opengl.GLSurfaceView.GLThread: void run()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.renderscript.RenderScriptGL: int getHeight()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.app.FragmentBreadCrumbs.1: void <init>(android.app.FragmentBreadCrumbs)>:<>:<android.app.FragmentBreadCrumbs.1:android.view.View.OnClickListener>
<android.os.FileUtils: int getUid(java.lang.String)>:<public static>:<android.os.FileUtils>
<android.os.INetworkManagementService.Stub.Proxy: boolean isNetworkActive()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.PointF: void set(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.database.sqlite.SqliteWrapper: boolean isLowMemory(android.database.sqlite.SQLiteException)>:<private static>:<android.database.sqlite.SqliteWrapper>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.net.NetworkStatsHistory: long getEnd()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.webkit.JsPromptResult: void <init>(android.webkit.JsResult.ResultReceiver)>:<public>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()>:<public>:<android.filterfw.core.FilterPort>
<android.graphics.drawable.AnimationDrawable.AnimationState: void growArray(int,int)>:<public>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Atlas.1: void <clinit>()>:<static>:<android.graphics.Atlas.1>
<android.app.IActivityManager.WaitResult: void <init>()>:<public>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1: void onCancel()>:<public>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiManager: void setTdlsEnabledWithMacAddress(java.lang.String,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ActivityManager.StackInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.StackInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glClipPlanef(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkInfo: java.lang.String getProcessName()>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.ContextImpl.55: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.55:android.app.ContextImpl.ServiceFetcher>
<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.accounts.AccountManagerResponse.1: android.accounts.AccountManagerResponse[] newArray(int)>:<public>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.backup.BackupTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>:<public>:<android.app.backup.BackupTransport>
<android.webkit.WebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.transition.TransitionSet.1: void <init>(android.transition.TransitionSet,android.transition.Transition)>:<>:<android.transition.TransitionSet.1:android.transition.Transition.TransitionListenerAdapter>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.Matrix: void toShortString(java.lang.StringBuilder)>:<public>:<android.graphics.Matrix>
<android.app.ActivityManagerNative: android.app.IActivityManager asInterface(android.os.IBinder)>:<public static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.opengl.GLWallpaperService: void <init>()>:<>:<android.opengl.GLWallpaperService>
<android.net.wifi.WifiCHRStateManager: void uploadDhcpException(int,int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.net.NetworkTemplate: boolean matchesMobile3gLower(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: boolean isWhitespace(char)>:<private>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.os.StrictMode: void onSqliteObjectLeaked(java.lang.String,java.lang.Throwable)>:<public static>:<android.os.StrictMode>
<android.app.Notification.Action.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.Notification.Action.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RotateDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.ChangeClipBounds: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.net.INetworkManagementEventObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkManagementEventObserver.Stub:android.os.Binder,android.net.INetworkManagementEventObserver>
<android.print.IPrintSpoolerCallbacks: void onCancelPrintJobResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.renderscript.Byte2: byte elementSum()>:<public>:<android.renderscript.Byte2>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.accounts.IAccountManager: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.os.WorkSource: void set(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.os.StrictMode.3: void <init>()>:<>:<android.os.StrictMode.3:java.lang.ThreadLocal>
<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>:<public>:<android.graphics.Path>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Float4: android.renderscript.Float4 sub(android.renderscript.Float4,float)>:<public static>:<android.renderscript.Float4>
<android.print.PrintJobInfo: android.os.Bundle access.300(android.print.PrintJobInfo)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.accounts.AccountAuthenticatorActivity: void <init>()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.Bundle: android.util.Size getSize(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.RenderScript: long nElementCreate(long,int,boolean,int)>:<>:<android.renderscript.RenderScript>
<android.app.LoadedApk.ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.LoadedApk.ServiceDispatcher>
<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.os.SystemService: void start(java.lang.String)>:<public static>:<android.os.SystemService>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.webkit.WebView: void setupFindListenerIfNeeded()>:<private>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.storage.IMountService: void runMaintenance()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.graphics.Interpolator: void nativeSetRepeatMirror(long,float,boolean)>:<private static native>:<android.graphics.Interpolator>
<android.filterfw.core.GraphRunner: boolean activateGlContext()>:<protected>:<android.filterfw.core.GraphRunner>
<android.net.VpnService.Builder: void verifyApp(java.lang.String)>:<private>:<android.net.VpnService.Builder>
<android.accounts.AccountManager: android.os.Handler access.600(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.webkit.HwFindActionModeCallback.HwNoAction: void <init>()>:<public>:<android.webkit.HwFindActionModeCallback.HwNoAction:android.view.ActionMode.Callback>
<android.os.BatteryStats.1: void <init>(android.os.BatteryStats)>:<>:<android.os.BatteryStats.1:java.util.Comparator>
<android.net.WifiLinkQualityInfo: void setBssid(java.lang.String)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.pdf.PdfRenderer: boolean shouldScaleForPrinting()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLLogWrapper: void glPointSizex(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Vibrator: void cancel()>:<public abstract>:<android.os.Vibrator>
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Allocation.MipmapControl: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.INetworkStatsService: android.net.INetworkStatsSession openSession()>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.admin.IDevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable.VGroup: void setPivotX(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.net.wifi.WifiCHRStateManager: void updateTCPQosInfo(int[])>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.IActivityManager: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.Element: android.renderscript.Element I16_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Float3: android.renderscript.Float3 mul(android.renderscript.Float3,android.renderscript.Float3)>:<public static>:<android.renderscript.Float3>
<android.drm.AbsDrmStore.Action: void <init>()>:<public>:<android.drm.AbsDrmStore.Action>
<android.renderscript.RenderScript: void _nInit()>:<static native>:<android.renderscript.RenderScript>
<android.os.RemoteCallback: void <init>(android.os.IRemoteCallback)>:<>:<android.os.RemoteCallback:android.os.Parcelable>
<android.filterfw.core.Filter: int getNumberOfOutputs()>:<public final>:<android.filterfw.core.Filter>
<android.database.ContentObservable: void dispatchChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.ProxyInfo.1: android.net.ProxyInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.ProxyInfo.1:android.os.Parcelable.Creator>
<android.mtp.MtpObjectInfo: long getDateCreated()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.WallpaperInfo: void <init>(android.os.Parcel)>:<>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.os.BatteryStats.Uid.Proc: int countExcessivePowers()>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator:android.animation.TimeInterpolator>
<android.graphics.LargeBitmap: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public>:<android.graphics.LargeBitmap>
<android.net.wifi.WifiCHRStateManager: void updateApHistory(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.hwtheme.HwThemeManagerDummy: android.content.res.Resources getResources(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.FragmentManager: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.app.IWallpaperManager.Stub.Proxy: boolean hasNamedWallpaper(java.lang.String)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)>:<>:<android.net.http.Request>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSMessageHandler getMessageHandler()>:<public>:<android.renderscript.RenderScript>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.900(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>:<>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.filterfw.core.GLEnvironment: int nativeAddSurface(android.view.Surface)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.app.FragmentBreadCrumbs: void onBackStackChanged()>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.WifiInfo: int getFrequency()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.hwtheme.HwThemeManagerDummy: void addSimpleUIConfig(android.content.pm.PackageParser.Activity)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void onPrintJobStateChanged(android.print.PrintJobId)>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.renderscript.RenderScript.RSErrorHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.net.http.Connection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>:<protected>:<android.net.http.Connection>
<android.app.ContextImpl.51: void <init>()>:<>:<android.app.ContextImpl.51:android.app.ContextImpl.ServiceFetcher>
<android.print.PrintAttributes.Margins: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Margins>
<android.transition.ChangeBounds.10: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.ChangeBounds.10:android.animation.AnimatorListenerAdapter>
<android.os.IHDMIConnectService.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IHDMIConnectService.Stub:android.os.Binder,android.os.IHDMIConnectService>
<android.os.StrictMode: void setCloseGuardEnabled(boolean)>:<private static>:<android.os.StrictMode>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.view.View getPermissionImageView(android.widget.AppSecurityPermissions.PermissionItemView)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.os.Process.ZygoteState: boolean matches(java.lang.String)>:<>:<android.os.Process.ZygoteState>
<android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread.ActivityClientRecord)>:<static final>:<android.app.ActivityThread>
<android.opengl.GLUtils: void nativeClassInit()>:<private static native>:<android.opengl.GLUtils>
<android.graphics.Paint.Join: android.graphics.Paint.Join[] values()>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)>:<public>:<android.os.UserManager>
<android.app.IActivityManager: android.os.IBinder peekService(android.content.Intent,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable.VPath: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.VoiceInteractor.ConfirmationRequest: void onConfirmationResult(boolean,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.ConfirmationRequest:android.app.VoiceInteractor.Request>
<android.app.LoadedApk.ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.print.PrinterCapabilitiesInfo.Builder: void <init>(android.print.PrinterId)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.renderscript.RenderScript: void rsnFileA3DGetIndexEntries(long,long,int,int[],java.lang.String[])>:<native>:<android.renderscript.RenderScript>
<android.app.ProgressDialog: void setSecondaryProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.NetworkIdentity: int compareTo(java.lang.Object)>:<public volatile>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.database.sqlite.SQLiteQueryBuilder: void <clinit>()>:<static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.hwtheme.HwThemeManagerDummy: void setThemeFontOnConfigChg(android.content.res.Configuration)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.renderscript.Script.FieldBase: void <init>()>:<protected>:<android.renderscript.Script.FieldBase>
<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.RenderScript: void nAllocationIoReceive(long)>:<>:<android.renderscript.RenderScript>
<android.graphics.drawable.Ripple: void exitSoftware(int,int)>:<private>:<android.graphics.drawable.Ripple>
<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable.GradientState)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.emoji.EmojiFactory: android.graphics.Bitmap nativeGetBitmapFromAndroidPua(long,int)>:<private native>:<android.emoji.EmojiFactory>
<android.opengl.GLES20: void glDisable(int)>:<public static native>:<android.opengl.GLES20>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.net.NetworkStateTracker: android.net.NetworkCapabilities getNetworkCapabilities()>:<public abstract>:<android.net.NetworkStateTracker>
<android.renderscript.RenderScript: void nDeviceSetConfig(long,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.renderscript.Float2: float dotProduct(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.ddm.DdmHandleViewDebug: android.view.View getRootView(java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.SearchDialog.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.app.SearchDialog.1:android.content.BroadcastReceiver>
<android.os.INetworkManagementService.Stub.Proxy: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirsForVold(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.ServiceManagerProxy: void <init>(android.os.IBinder)>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.database.sqlite.SQLiteDatabase.1: android.database.sqlite.SQLiteSession initialValue()>:<protected>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActionBar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.Element: android.renderscript.Element F64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.accounts.IAccountManager.Stub.Proxy: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.opengl.EGLLogWrapper: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.print.PrintJobInfo: void <clinit>()>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintJobInfo: void setCreationTime(long)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>:<public>:<android.net.NetworkPolicyManager>
<android.drm.DrmManagerClient: java.lang.String convertUriToPath(android.net.Uri)>:<private>:<android.drm.DrmManagerClient>
<android.database.sqlite.SQLiteGlobal: void <init>()>:<private>:<android.database.sqlite.SQLiteGlobal>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request addRequestHeader(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.net.wifi.HwWifiStatStore: void setApencInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.wifi.HwWifiStatStore>
<android.graphics.BitmapFactory: void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory.Options)>:<private static>:<android.graphics.BitmapFactory>
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.Uri.AbstractPart: java.lang.String getDecoded()>:<final>:<android.net.Uri.AbstractPart>
<android.os.storage.IMountService: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.IUiAutomationConnection: boolean injectInputEvent(android.view.InputEvent,boolean)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Service: void setForeground(boolean)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.PendingIntent: void send()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.core.GLEnvironment: boolean isAnyContextActive()>:<public static>:<android.filterfw.core.GLEnvironment>
<android.accessibilityservice.AccessibilityService.1: void onServiceConnected()>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.print.PrintAttributes: void <init>()>:<>:<android.print.PrintAttributes:android.os.Parcelable>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebView: void disablePlatformNotifications()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.pdf.PdfRenderer: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.print.PageRange: int hashCode()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable: void <init>()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.backup.IBackupManager.Stub.Proxy: java.lang.String[] listAllTransports()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.graphics.Typeface: void finalize()>:<protected>:<android.graphics.Typeface>
<android.appwidget.AppWidgetHost: void viewDataChanged(int,int)>:<>:<android.appwidget.AppWidgetHost>
<android.print.PrintDocumentInfo: java.lang.String toString()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.transition.Recolor: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Recolor:android.transition.Transition>
<android.webkit.WebViewProvider: void pauseTimers()>:<public abstract>:<android.webkit.WebViewProvider>
<android.net.PacProxySelector: java.util.List parseResponse(java.lang.String)>:<private static>:<android.net.PacProxySelector:java.net.ProxySelector>
<android.webkit.WebView: void computeScroll()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.storage.IMountServiceListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.os.storage.IMountServiceListener:android.os.IInterface>
<android.database.sqlite.SQLiteConnectionPool: boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.storage.IMountShutdownObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.storage.IMountShutdownObserver.Stub:android.os.Binder,android.os.storage.IMountShutdownObserver>
<android.os.PowerManagerInternal: java.lang.String wakefulnessToString(int)>:<public static>:<android.os.PowerManagerInternal>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>:<>:<android.app.ActivityThread>
<android.app.backup.IBackupManager.Stub: void <init>()>:<public>:<android.app.backup.IBackupManager.Stub:android.os.Binder,android.app.backup.IBackupManager>
<android.app.admin.DevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Region.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.Region.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addConstant(android.renderscript.Type)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IActivityManager: java.lang.String getLaunchedFromPackage(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.RippleDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.StrictMode.ThreadSpanState: void <init>(android.os.StrictMode.1)>:<>:<android.os.StrictMode.ThreadSpanState>
<android.webkit.WebViewProvider: int getContentHeight()>:<public abstract>:<android.webkit.WebViewProvider>
<android.transition.TransitionSet: android.transition.TransitionSet removeListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.Filter>
<android.net.Uri.HierarchicalUri: android.net.Uri readFrom(android.os.Parcel)>:<static>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager.Query)>:<public>:<android.app.DownloadManager>
<android.renderscript.Short2: void negate()>:<public>:<android.renderscript.Short2>
<android.transition.TransitionManager.MultiListener: void onViewAttachedToWindow(android.view.View)>:<public>:<android.transition.TransitionManager.MultiListener:android.view.ViewTreeObserver.OnPreDrawListener,android.view.View.OnAttachStateChangeListener>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Canvas: void restoreToCount(int)>:<public>:<android.graphics.Canvas>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Bitmap: int getScaledHeight(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.GradientState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.Ripple: void move(float,float)>:<public>:<android.graphics.drawable.Ripple>
<android.app.ContextImpl.36: void <init>()>:<>:<android.app.ContextImpl.36:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>:<public>:<android.renderscript.FieldPacker>
<android.net.NetworkInfo: java.lang.String getReason()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.job.JobParameters: int getJobId()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glMultMatrixf(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Matrix4f: void set(int,int,float)>:<public>:<android.renderscript.Matrix4f>
<android.database.CursorWindow: void recordClosingOfWindow(long)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.print.IPrintSpoolerCallbacks.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.opengl.GLES10: void glLightx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.os.CommonTimeUtils: java.lang.String transactGetString(int,java.lang.String)>:<public>:<android.os.CommonTimeUtils>
<android.webkit.WebView: int computeVerticalScrollExtent()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.os.INetworkManagementService: boolean isBandwidthControlEnabled()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Build: void ensureFingerprintProperty()>:<public static>:<android.os.Build>
<android.net.http.Headers: void getHeaders(android.net.http.Headers.HeaderCallback)>:<public>:<android.net.http.Headers>
<android.filterfw.format.ObjectFormat: java.lang.Class getBoxedClass(java.lang.Class)>:<private static>:<android.filterfw.format.ObjectFormat>
<android.net.wifi.WifiChannel.1: android.net.wifi.WifiChannel createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiChannel.1:android.os.Parcelable.Creator>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.graphics.ColorMatrix: void set(float[])>:<public>:<android.graphics.ColorMatrix>
<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>:<public>:<android.app.WallpaperManager>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.IActivityManager.ContentProviderHolder.1: android.app.IActivityManager.ContentProviderHolder createFromParcel(android.os.Parcel)>:<public>:<android.app.IActivityManager.ContentProviderHolder.1:android.os.Parcelable.Creator>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.app.MediaRouteButton: void onDetachedFromWindow()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.ContextImpl: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.os.ParcelFileDescriptor.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.ParcelFileDescriptor.1:android.os.Parcelable.Creator>
<android.net.NetworkStatsHistory: long getBucketDuration()>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.net.DhcpStateMachine: android.app.AlarmManager access.1600(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.sqlite.SQLiteConnection: void throwIfStatementForbidden(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.UiAutomation: android.os.ParcelFileDescriptor executeShellCommand(java.lang.String)>:<public>:<android.app.UiAutomation>
<android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>:<protected static>:<android.graphics.Canvas>
<android.transition.ChangeText.4: void onAnimationUpdate(android.animation.ValueAnimator)>:<public>:<android.transition.ChangeText.4:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.os.Registrant: android.os.Handler getHandler()>:<public>:<android.os.Registrant>
<android.os.Debug: void resetGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.backup.FileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>:<public>:<android.filterfw.core.FrameFormat>
<android.app.ActivityManager.CpuStatInfo: float getIowaitTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.IBatteryPropertiesRegistrar.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.IBatteryPropertiesRegistrar.Stub:android.os.Binder,android.os.IBatteryPropertiesRegistrar>
<android.app.PendingIntent: void send(int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>:<public>:<android.graphics.drawable.Drawable>
<android.os.PatternMatcher.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.PatternMatcher.1:android.os.Parcelable.Creator>
<android.app.IInstrumentationWatcher.Stub.Proxy: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>:<public>:<android.app.IInstrumentationWatcher.Stub.Proxy:android.app.IInstrumentationWatcher>
<android.net.RouteInfo: java.lang.String getInterface()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo.Builder setContentRect(android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.net.NetworkScorerAppManager: java.util.Collection getAllValidScorers(android.content.Context)>:<public static>:<android.net.NetworkScorerAppManager>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Short2: void sub(short)>:<public>:<android.renderscript.Short2>
<android.app.Instrumentation.1ContextMenuRunnable: void run()>:<public>:<android.app.Instrumentation.1ContextMenuRunnable:java.lang.Runnable>
<android.mtp.MtpPropertyGroup: java.lang.String queryAudio(int,java.lang.String)>:<private>:<android.mtp.MtpPropertyGroup>
<android.database.sqlite.SQLiteDatabase: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.InsetDrawable.InsetState: void <init>(android.graphics.drawable.InsetDrawable.InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Activity: void performCreateCommon()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pWfdInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.WifiP2pWfdInfo.1:android.os.Parcelable.Creator>
<android.hwtheme.HwThemeManager.IHwThemeManager: boolean saveIconToCache(android.graphics.Bitmap,java.lang.String,boolean)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.net.wifi.WifiConnectionStatistics: void <clinit>()>:<static>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.net.INetworkStatsSession.Stub.Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.backup.BackupDataInput: boolean readNextHeader()>:<public>:<android.app.backup.BackupDataInput>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex.Builder addInput(android.renderscript.Element)>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.graphics.ColorMatrix: void setSaturation(float)>:<public>:<android.graphics.ColorMatrix>
<android.app.INotificationManager: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int[],int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.renderscript.ScriptIntrinsicBlend: void blend(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<private>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.FindActionModeCallback: void updateMatchesString()>:<private>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.transition.Transition.TransitionListener: void onTransitionResume(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.sax.BadXmlException: java.lang.String getMessage()>:<public>:<android.sax.BadXmlException:org.xml.sax.SAXParseException,org.xml.sax.SAXException,java.lang.Exception,java.lang.Throwable>
<android.net.IpConfiguration: void <clinit>()>:<static>:<android.net.IpConfiguration:android.os.Parcelable>
<android.net.DhcpStateMachine: boolean runDhcp(android.net.DhcpStateMachine.DhcpAction)>:<private>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>:<public>:<android.os.Registrant>
<android.app.IActivityManager: void deleteActivityContainer(android.app.IActivityContainer)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManager.TaskDescription: void <init>(android.app.ActivityManager.TaskDescription)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.ActivityManager: void stopLockTaskMode()>:<public>:<android.app.ActivityManager>
<android.graphics.Paint: void <init>(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.os.CommonTimeUtils: int transactSetString(int,java.lang.String)>:<public>:<android.os.CommonTimeUtils>
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.ddm.DdmHandleThread: void <clinit>()>:<static>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.wifi.WifiCHRStateManager: void updateWifiIp(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>:<public>:<android.app.ActivityView.ActivityViewSurfaceTextureListener:android.view.TextureView.SurfaceTextureListener>
<android.print.IPrintManager: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.os.BatteryStats.Uid: long getMobileRadioActiveTime(int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.IMultiWinService.Stub.Proxy: boolean isMultiWin(android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.print.IPrintSpooler.Stub.Proxy: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>:<public abstract>:<android.filterfw.core.FrameManager>
<android.renderscript.Float4: void add(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String)>:<public>:<android.appwidget.AppWidgetManager>
<android.netdetect.INetDetectService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.renderscript.Element.DataKind: void <clinit>()>:<static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.app.ActivityThread: void handleActivityConfigurationChanged(android.os.IBinder)>:<final>:<android.app.ActivityThread>
<android.app.ActivityManager: boolean isUserAMonkey()>:<public static>:<android.app.ActivityManager>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.alsa.AlsaDevicesParser: boolean hasMIDIDevices(int)>:<public>:<android.alsa.AlsaDevicesParser>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.WebViewProvider.ViewDelegate: void onDetachedFromWindow()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.webkit.WebView: java.lang.String getUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.OperationCanceledException: void <init>()>:<public>:<android.os.OperationCanceledException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String[] getTetheredIfaces()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>:<public static native>:<android.opengl.ETC1>
<android.appwidget.AppWidgetHost: void clearViews()>:<protected>:<android.appwidget.AppWidgetHost>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.renderscript.Float4: android.renderscript.Float4 add(android.renderscript.Float4,android.renderscript.Float4)>:<public static>:<android.renderscript.Float4>
<android.app.Notification.InboxStyle: void addExtras(android.os.Bundle)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.opengl.GLSurfaceView.DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.webkit.WebStorage.Origin: void <init>(java.lang.String,long,long)>:<protected>:<android.webkit.WebStorage.Origin>
<android.renderscript.RenderScript: void nContextFinish()>:<>:<android.renderscript.RenderScript>
<android.net.http.Connection: android.net.http.SslCertificate getCertificate()>:<>:<android.net.http.Connection>
<android.filterfw.core.NativeFrame: boolean setNativeData(byte[],int,int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.database.sqlite.SqliteWrapper: void <init>()>:<private>:<android.database.sqlite.SqliteWrapper>
<android.app.job.JobInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.BatteryStats: java.lang.String formatBytesLocked(long)>:<final>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Element: android.renderscript.Element U32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.MemoryFile: int native_get_size(java.io.FileDescriptor)>:<private static native>:<android.os.MemoryFile>
<android.app.backup.RestoreObserver: void <init>()>:<public>:<android.app.backup.RestoreObserver>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glEnable(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.LocalSocket: int getSendBufferSize()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.os.StrictMode.8: java.lang.Object initialValue()>:<protected volatile>:<android.os.StrictMode.8:java.lang.ThreadLocal>
<android.app.ActivityView.ActivityContainerCallback.1: void <init>(android.app.ActivityView.ActivityContainerCallback,android.app.ActivityView.ActivityViewCallback,android.app.ActivityView)>:<>:<android.app.ActivityView.ActivityContainerCallback.1:java.lang.Runnable>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.test.InstrumentationTestCase.2: void run()>:<public>:<android.test.InstrumentationTestCase.2:java.lang.Runnable>
<android.filterfw.core.Frame: boolean hasNativeAllocation()>:<protected abstract>:<android.filterfw.core.Frame>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.Paint>
<android.renderscript.Short4: void addMultiple(android.renderscript.Short4,short)>:<public>:<android.renderscript.Short4>
<android.net.dhcp.DhcpPacket: java.nio.ByteBuffer buildNakPacket(int,int,java.net.InetAddress,java.net.InetAddress,byte[])>:<public static>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiConfiguration: void setIpConfiguration(android.net.IpConfiguration)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.filterfw.core.FrameFormat: int getValuesPerSample()>:<public>:<android.filterfw.core.FrameFormat>
<android.net.arp.ArpPeer: void <init>(java.lang.String,java.net.InetAddress,java.lang.String,java.net.InetAddress)>:<public>:<android.net.arp.ArpPeer>
<android.os.Debug: void stopAllocCounting()>:<public static>:<android.os.Debug>
<android.os.INetworkManagementService.Stub.Proxy: void addInterfaceToNetwork(java.lang.String,int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.WifiManager: void setTdlsEnabled(java.net.InetAddress,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.pdf.PdfDocument.PageInfo: void <init>(android.graphics.pdf.PdfDocument.1)>:<>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.StrictMode: boolean vmFileUriExposureEnabled()>:<public static>:<android.os.StrictMode>
<android.opengl.GLLogWrapper: void glLogicOp(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ISearchManagerCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.ISearchManagerCallback.Stub.Proxy:android.app.ISearchManagerCallback>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.nsd.NsdServiceInfo: android.util.ArrayMap access.400(android.net.nsd.NsdServiceInfo)>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.net.LinkQualityInfo.1: android.net.LinkQualityInfo[] newArray(int)>:<public>:<android.net.LinkQualityInfo.1:android.os.Parcelable.Creator>
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)>:<public static final>:<android.net.Proxy>
<android.transition.CircularPropagation: float distance(float,float,float,float)>:<private static>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.database.sqlite.SQLiteConnection.Operation: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.Operation>
<android.transition.TransitionManager.MultiListener: void <init>(android.transition.Transition,android.view.ViewGroup)>:<>:<android.transition.TransitionManager.MultiListener:android.view.ViewTreeObserver.OnPreDrawListener,android.view.View.OnAttachStateChangeListener>
<android.graphics.TemporaryBuffer: void <init>()>:<public>:<android.graphics.TemporaryBuffer>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.graphics.DashPathEffect: void <init>(float[],float)>:<public>:<android.graphics.DashPathEffect:android.graphics.PathEffect>
<android.transition.Slide: void <init>()>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.renderscript.RSTextureView: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.filterfw.core.InputPort: void setSourcePort(android.filterfw.core.OutputPort)>:<public>:<android.filterfw.core.InputPort:android.filterfw.core.FilterPort>
<android.graphics.Paint: float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int)>:<private static native>:<android.graphics.Paint>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>:<public static>:<android.os.Debug>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.graphics.Matrix: void native_postScale(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.print.IPrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.app.IUiAutomationConnection.Stub.Proxy: void shutdown()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback,boolean)>:<public>:<android.os.Handler>
<android.print.PrinterCapabilitiesInfo: void writeDefaults(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>:<public abstract>:<android.net.http.EventHandler>
<android.app.ActivityThread: android.os.Looper getLooper()>:<public>:<android.app.ActivityThread>
<android.os.PerformanceCollector: android.os.Bundle getAllocCounts()>:<private static>:<android.os.PerformanceCollector>
<android.print.PrinterInfo.1: void <init>()>:<>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.net.http.AndroidHttpClient.1: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient.1:org.apache.http.HttpRequestInterceptor>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAllSharedElementNames()>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.WorkSource: android.os.WorkSource addWork(android.os.WorkSource,int)>:<private static>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ActivityTransitionState: void restoreExitedViews()>:<private>:<android.app.ActivityTransitionState>
<android.app.INotificationManager.Stub.Proxy: void cancelNotificationWithTag(java.lang.String,java.lang.String,int,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>:<private>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.ActivityManager.TaskThumbnail.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.TaskThumbnail.1:android.os.Parcelable.Creator>
<android.os.UEventObserver: java.lang.String nativeWaitForNextEvent()>:<private static native>:<android.os.UEventObserver>
<android.renderscript.Double2: android.renderscript.Double2 sub(android.renderscript.Double2,double)>:<public static>:<android.renderscript.Double2>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)>:<public>:<android.filterfw.core.Frame>
<android.app.ActivityThread: void handleSetCoreSettings(android.os.Bundle)>:<private>:<android.app.ActivityThread>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.PorterDuffColorFilter: void setMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.database.sqlite.SQLiteConnection.Operation: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnection.Operation>
<android.os.CountDownTimer: long access.200(android.os.CountDownTimer)>:<static>:<android.os.CountDownTimer>
<android.app.PackageInstallObserver: void <init>()>:<public>:<android.app.PackageInstallObserver>
<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.IPowerManager.Stub.Proxy: boolean isWakeLockLevelSupported(int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.Camera: void nativeGetMatrix(long)>:<private native>:<android.graphics.Camera>
<android.app.BackStackRecord: void removeTargetedViewsFromTransitions(android.view.ViewGroup,android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.transition.Visibility: void <clinit>()>:<static>:<android.transition.Visibility:android.transition.Transition>
<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>:<public volatile>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.app.backup.BackupDataInput: long ctor(java.io.FileDescriptor)>:<private static native>:<android.app.backup.BackupDataInput>
<android.app.job.IJobCallback: void acknowledgeStopMessage(int,boolean)>:<public abstract>:<android.app.job.IJobCallback:android.os.IInterface>
<android.net.VpnService: void onRevoke()>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterfw.io.PatternScanner: boolean peek(java.util.regex.Pattern)>:<public>:<android.filterfw.io.PatternScanner>
<android.hwtheme.HwThemeManager: boolean makeIconCache(boolean)>:<public static>:<android.hwtheme.HwThemeManager>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.app.AppImportanceMonitor: void onImportanceChanged(int,int,int)>:<public>:<android.app.AppImportanceMonitor>
<android.filterfw.core.FrameFormat: int getLength()>:<public>:<android.filterfw.core.FrameFormat>
<android.renderscript.Byte2: android.renderscript.Byte2 sub(android.renderscript.Byte2,byte)>:<public static>:<android.renderscript.Byte2>
<android.renderscript.Matrix3f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.transition.VisibilityPropagation: void <init>()>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.opengl.GLES31Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES31Ext>
<android.graphics.drawable.VectorDrawable.VPathRenderer: android.graphics.Paint access.300(android.graphics.drawable.VectorDrawable.VPathRenderer)>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.ActivityOptions: android.os.Bundle toBundle()>:<public>:<android.app.ActivityOptions>
<android.graphics.drawable.StateListDrawable.StateListState: void access.000(android.graphics.drawable.StateListDrawable.StateListState)>:<static>:<android.graphics.drawable.StateListDrawable.StateListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3)>:<public>:<android.renderscript.Int3>
<android.app.ActivityThread: void access.400(android.app.ActivityThread,int,java.lang.Object,int)>:<static>:<android.app.ActivityThread>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.transition.Fade.FadeAnimatorListener: void onAnimationPause(android.animation.Animator)>:<public>:<android.transition.Fade.FadeAnimatorListener:android.animation.AnimatorListenerAdapter>
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.net.IConnectivityManager.Stub.Proxy: int checkMobileProvisioning(int)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>:<public>:<android.renderscript.FieldPacker>
<android.app.ActivityThread: void scheduleGcIdler()>:<>:<android.app.ActivityThread>
<android.net.EthernetManager.2: void onAvailabilityChanged(boolean)>:<public>:<android.net.EthernetManager.2:android.net.IEthernetServiceListener.Stub,android.os.Binder>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.AlarmManager: long checkHasDeskClock()>:<public>:<android.app.AlarmManager>
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.NetworkCapabilities: boolean equalsLinkBandwidths(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>:<public>:<android.webkit.CookieManager>
<android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.app.NativeActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.IActivityManager: boolean shutdown(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.app.ContextImpl.34: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.34:android.app.ContextImpl.ServiceFetcher>
<android.os.storage.IMountService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.app.ExitTransitionCoordinator.8: void <init>(android.app.ExitTransitionCoordinator)>:<>:<android.app.ExitTransitionCoordinator.8:android.animation.AnimatorListenerAdapter>
<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.webkit.WebView: void zoomBy(float)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.ConnectivityManager: void setLteMobileDataEnabled(boolean)>:<public>:<android.net.ConnectivityManager>
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable)>:<private static>:<android.os.Handler>
<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>:<public final>:<android.os.Parcel>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.os.IUpdateLock: void acquireUpdateLock(android.os.IBinder,java.lang.String)>:<public abstract>:<android.os.IUpdateLock:android.os.IInterface>
<android.app.Activity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.backup.BackupTransport: int clearBackupData(android.content.pm.PackageInfo)>:<public>:<android.app.backup.BackupTransport>
<android.graphics.drawable.Drawable: void <init>()>:<public>:<android.graphics.drawable.Drawable>
<android.os.WorkSource: void set(int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.Path: void native_transform(long,long,long)>:<private static native>:<android.graphics.Path>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.database.BulkCursorProxy: android.os.IBinder asBinder()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.filterfw.core.NativeFrame: void setFloats(float[])>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.drawable.shapes.OvalShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.renderscript.Double4: android.renderscript.Double4 add(android.renderscript.Double4,double)>:<public static>:<android.renderscript.Double4>
<android.app.SharedPreferencesImpl: void writeToFile(android.app.SharedPreferencesImpl.MemoryCommitResult)>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.core.FilterContext: void storeFrame(java.lang.String,android.filterfw.core.Frame)>:<public>:<android.filterfw.core.FilterContext>
<android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>:<public static native>:<android.app.backup.FullBackup>
<android.os.IUserManager.Stub.Proxy: boolean isRestricted()>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.os.INetworkManagementService.Stub.Proxy: void removeInterfaceQuota(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotalIncludingTags(android.net.NetworkStats.Entry)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.Notification.Style: void applyTopPadding(android.widget.RemoteViews)>:<protected>:<android.app.Notification.Style>
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Float4: int length()>:<public>:<android.renderscript.Float4>
<android.webkit.WebSettings: boolean getAllowContentAccess()>:<public abstract>:<android.webkit.WebSettings>
<android.webkit.WebViewProvider: void goForward()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.Instrumentation>
<android.filterfw.core.NativeBuffer: boolean allocate(int)>:<private native>:<android.filterfw.core.NativeBuffer>
<android.transition.Transition.ArrayListManager: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>:<static>:<android.transition.Transition.ArrayListManager>
<android.opengl.Matrix: void <init>()>:<public>:<android.opengl.Matrix>
<android.net.NetworkCapabilities: void combineLinkBandwidths(android.net.NetworkCapabilities)>:<private>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.net.INetworkScoreService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.Cursor: boolean moveToFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.util.Date access.3100(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.StrictMode: java.lang.ThreadLocal access.2200()>:<static>:<android.os.StrictMode>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.Notification.Action: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.app.IUiAutomationConnection.Stub.Proxy: void clearWindowAnimationFrameStats()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.hwcontrol.HwWidgetFactory.HwTextView: void reLayoutAfterMeasure(android.widget.TextView,android.text.Layout)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.print.PrintAttributes.MediaSize: boolean isPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>:<public abstract>:<android.app.FragmentManager>
<android.graphics.drawable.AnimationDrawable.AnimationState: void mutate()>:<private>:<android.graphics.drawable.AnimationDrawable.AnimationState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.net.Credentials: void <init>(int,int,int)>:<public>:<android.net.Credentials>
<android.renderscript.RenderScript: void nAllocationGenerateMipmaps(long)>:<>:<android.renderscript.RenderScript>
<android.app.Service: void onLowMemory()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.app.ContextImpl.31: void <init>()>:<>:<android.app.ContextImpl.31:android.app.ContextImpl.ServiceFetcher>
<android.app.AlertDialog: void setIcon(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.IBackupAgent.Stub.Proxy: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Int4: void addMultiple(android.renderscript.Int4,int)>:<public>:<android.renderscript.Int4>
<android.graphics.drawable.RippleDrawable: void drawBackgroundAndRipples(android.graphics.Canvas)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.graphics.Matrix: boolean preTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.database.sqlite.SQLiteDatabase: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterfw.core.Filter: void init()>:<public final>:<android.filterfw.core.Filter>
<android.renderscript.RenderScript: long nAllocationGetType(long)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.700(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.hsm.HwSystemManager.HsmDefImpl: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.net.wifi.HiSiWifiComm: boolean isP2pConnect()>:<public>:<android.net.wifi.HiSiWifiComm>
<android.ddm.DdmHandleAppName: void register()>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.ContextImpl.62: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.62:android.app.ContextImpl.ServiceFetcher>
<android.drm.DrmManagerClient: int getEventType(int)>:<private>:<android.drm.DrmManagerClient>
<android.transition.ChangeBounds.2: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.2:android.util.Property>
<android.os.Parcel: android.util.SizeF readSizeF()>:<public final>:<android.os.Parcel>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManagerProxy: int[] getRunningUserIds()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.http.HttpAuthHeader: java.lang.String getRealm()>:<public>:<android.net.http.HttpAuthHeader>
<android.os.PersistableBundle: int describeContents()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.renderscript.RSSurfaceView: void pause()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Instrumentation: void stopProfiling()>:<public>:<android.app.Instrumentation>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void checkError()>:<private>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.LayerDrawable.LayerState: void <init>(android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.LayerDrawable.LayerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityOptions.1.1: void <init>(android.app.ActivityOptions.1)>:<>:<android.app.ActivityOptions.1.1:java.lang.Runnable>
<android.os.INetworkManagementService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.INetworkManagementService.Stub:android.os.Binder,android.os.INetworkManagementService>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration.IpAssignment getIpAssignment()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.graphics.PointF.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.PointF.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Double3: android.renderscript.Double3 div(android.renderscript.Double3,android.renderscript.Double3)>:<public static>:<android.renderscript.Double3>
<android.opengl.GLErrorWrapper: void glFogx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.NativeAllocatorTag)>:<private>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.mtp.MtpDatabase: int getObjectFilePath(int,char[],long[])>:<private>:<android.mtp.MtpDatabase>
<android.ddm.DdmHandleAppName: void <clinit>()>:<static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.net.LinkAddress: int getScope()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.app.LoadedApk: android.app.Application getApplication()>:<>:<android.app.LoadedApk>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.filterfw.core.NativeProgram: boolean callNativeReset()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.R.integer: void <init>()>:<public>:<android.R.integer>
<android.net.http.RequestQueue.ActivePool: boolean recycleConnection(android.net.http.Connection)>:<public>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.os.storage.IMountService: void registerListener(android.os.storage.IMountServiceListener)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.os.StrictMode: java.util.concurrent.atomic.AtomicInteger access.1400()>:<static>:<android.os.StrictMode>
<android.transition.Fade: void <clinit>()>:<static>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.os.SELinux: boolean setFileContext(java.lang.String,java.lang.String)>:<public static final native>:<android.os.SELinux>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IMultiWinService: void clearAllTokens()>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int)>:<public>:<android.app.ResourcesManager>
<android.app.IActivityContainer.Stub.Proxy: int startActivity(android.content.Intent)>:<public>:<android.app.IActivityContainer.Stub.Proxy:android.app.IActivityContainer>
<android.renderscript.Double2: void <init>(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.renderscript.Byte3: void mul(android.renderscript.Byte3)>:<public>:<android.renderscript.Byte3>
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>:<public>:<android.net.LocalSocketImpl>
<android.net.LinkProperties: java.util.List getAllAddresses()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.ActivityOptions.OnAnimationStartedListener: void onAnimationStarted()>:<public abstract>:<android.app.ActivityOptions.OnAnimationStartedListener>
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)>:<public>:<android.filterfw.io.GraphReader>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiConfiguration: java.lang.String configKey(android.net.wifi.ScanResult)>:<public static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.NativeActivity: void onContentRectChangedNative(long,int,int,int,int)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.net.LinkProperties: java.util.List getAllInterfaceNames()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.IPowerManager: void goToSleep(long,int,int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.Float2: void <init>(android.renderscript.Float2)>:<public>:<android.renderscript.Float2>
<android.renderscript.Short3: void mod(short)>:<public>:<android.renderscript.Short3>
<android.renderscript.Matrix2f: void <init>(float[])>:<public>:<android.renderscript.Matrix2f>
<android.app.ListActivity.2: void <init>(android.app.ListActivity)>:<>:<android.app.ListActivity.2:android.widget.AdapterView.OnItemClickListener>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.app.ReceiverRestrictedContext: void <init>(android.content.Context)>:<>:<android.app.ReceiverRestrictedContext:android.content.ContextWrapper,android.content.Context>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.INotificationManager.Stub.Proxy: void cancelAllNotifications(java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.opengl.EGLContext: void <init>(long)>:<private>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.database.Cursor: void deactivate()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.graphics.drawable.GradientDrawable.GradientState: void setCornerRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.ShapeDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityView.ActivityContainerWrapper: boolean injectEvent(android.view.InputEvent)>:<>:<android.app.ActivityView.ActivityContainerWrapper>
<android.os.NullVibrator: android.os.NullVibrator getInstance()>:<public static>:<android.os.NullVibrator:android.os.Vibrator>
<android.net.NetworkTemplate: java.lang.String getMatchRuleName(int)>:<private static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VPath: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable.VPath>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(android.renderscript.Float4)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper: android.view.View getView(int,android.view.View,android.view.ViewGroup,com.android.internal.view.menu.MenuItemImpl)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.802(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.job.IJobService.Stub: android.app.job.IJobService asInterface(android.os.IBinder)>:<public static>:<android.app.job.IJobService.Stub:android.os.Binder,android.app.job.IJobService>
<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision: void <init>(android.graphics.Atlas.1)>:<>:<android.graphics.Atlas.SlicePolicy.ShorterFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.filterfw.core.GLFrame: int getTextureId()>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>:<public static>:<android.app.ActivityOptions>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.ISearchManager: java.util.List getGlobalSearchActivities()>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.app.VoiceInteractor.Request: void clear()>:<>:<android.app.VoiceInteractor.Request>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.net.IConnectivityManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.drawable.GradientDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.Parcel: void writeBundle(android.os.Bundle)>:<public final>:<android.os.Parcel>
<android.mtp.MtpDatabase.1: void <init>(android.mtp.MtpDatabase)>:<>:<android.mtp.MtpDatabase.1:android.content.BroadcastReceiver>
<android.net.wifi.WifiCHRStateManager: boolean matchCommercialTrigger(boolean,long,long,int)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.test.AndroidTestCase: android.content.Context getTestContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.AnimatedStateListDrawable.Transition: void <init>(android.graphics.drawable.AnimatedStateListDrawable.1)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.app.IUiAutomationConnection.Stub.Proxy: void connect(android.accessibilityservice.IAccessibilityServiceClient)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.32: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.32:android.app.ContextImpl.ServiceFetcher>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Bitmap: void recycle()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.ContextImpl.57: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.57:android.app.ContextImpl.ServiceFetcher>
<android.accounts.GrantCredentialsPermissionActivity: void finish()>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.print.PrinterId: void <init>(android.content.ComponentName,java.lang.String)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.MediaSize>
<android.os.IPowerManager.Stub.Proxy: void setForbidWakeLockList(java.lang.String)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.graphics.Matrix: void native_setSkew(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Bitmap: void setHasMipMap(boolean)>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Paint: void native_setDigitFlag(int)>:<private static native>:<android.graphics.Paint>
<android.os.IUserManager.Stub.Proxy: boolean removeUser(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.graphics.Paint: int native_breakText(long,long,java.lang.String,boolean,float,int,float[])>:<private static native>:<android.graphics.Paint>
<android.graphics.NinePatch: int getHeight()>:<public>:<android.graphics.NinePatch>
<android.net.Uri: int compareTo(android.net.Uri)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Region: java.lang.String toString()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.os.storage.StorageManager.ListenerDelegate.1: void <init>(android.os.storage.StorageManager.ListenerDelegate,android.os.Looper,android.os.storage.StorageManager)>:<>:<android.os.storage.StorageManager.ListenerDelegate.1:android.os.Handler>
<android.app.SearchDialog: void onBackPressed()>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.accounts.ChooseAccountActivity: void getAuthDescriptions()>:<private>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.filterfw.core.Frame: void setTimestamp(long)>:<public>:<android.filterfw.core.Frame>
<android.app.DownloadManager: boolean isActiveNetworkExpensive(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.transition.Transition.ArrayListManager: void <init>()>:<private>:<android.transition.Transition.ArrayListManager>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.Activity: void setContentView(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityManager.CpuStatInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.CpuStatInfo.1:android.os.Parcelable.Creator>
<android.net.Uri.StringUri: android.net.Uri.Part getSsp()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.drm.DrmManagerClient: void notify(java.lang.Object,int,int,java.lang.String)>:<public static>:<android.drm.DrmManagerClient>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.app.MediaRouteButton.MediaRouterCallback:android.media.MediaRouter.SimpleCallback,android.media.MediaRouter.Callback>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfoRequest>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)>:<public>:<android.os.PerformanceCollector>
<android.app.backup.BackupTransport: void <init>()>:<public>:<android.app.backup.BackupTransport>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByWho(java.lang.String)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.accounts.AccountManager.AmsTask: void done()>:<protected>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.webkit.FindActionModeCallback: void onFindResultReceived(int,int,boolean)>:<public>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.renderscript.Double4: android.renderscript.Double4 sub(android.renderscript.Double4,double)>:<public static>:<android.renderscript.Double4>
<android.graphics.drawable.NinePatchDrawable.NinePatchState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.NinePatchDrawable.NinePatchState:android.graphics.drawable.Drawable.ConstantState>
<android.filterfw.geometry.Point: void <init>(float,float)>:<public>:<android.filterfw.geometry.Point>
<android.webkit.CacheManager.CacheResult: int getHttpStatusCode()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.os.ParcelFileDescriptor.ListenerBridge.1: void <init>(android.os.ParcelFileDescriptor.ListenerBridge,android.os.Looper,android.os.ParcelFileDescriptor.OnCloseListener)>:<>:<android.os.ParcelFileDescriptor.ListenerBridge.1:android.os.Handler>
<android.webkit.WebSettings: void setSupportZoom(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.Rect,boolean)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.net.wifi.WifiScanner: java.util.List getAvailableChannels(int)>:<public>:<android.net.wifi.WifiScanner>
<android.accounts.IAccountAuthenticator: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.print.PrintAttributes.MediaSize: java.lang.String getId()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: void removePackage(java.lang.String)>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.database.BulkCursorDescriptor.1: android.database.BulkCursorDescriptor createFromParcel(android.os.Parcel)>:<public>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.webkit.WebViewProvider: void goBack()>:<public abstract>:<android.webkit.WebViewProvider>
<android.renderscript.Matrix2f: void rotate(float)>:<public>:<android.renderscript.Matrix2f>
<android.webkit.WebResourceRequest: android.net.Uri getUrl()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.graphics.drawable.ClipDrawable: void clearMutated()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void setHighContrastText(boolean)>:<public>:<android.graphics.Canvas>
<android.webkit.WebView.HitTestResult: int getType()>:<public>:<android.webkit.WebView.HitTestResult>
<android.app.Activity: void onUserInteraction()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityTransitionCoordinator.1: void <init>(android.app.ActivityTransitionCoordinator,android.view.View,java.util.ArrayList)>:<>:<android.app.ActivityTransitionCoordinator.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Allocation: void copyTo(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>:<public>:<android.app.backup.RestoreSession>
<android.os.UserManager: boolean isGuestUser()>:<public>:<android.os.UserManager>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLSurfaceView.GLThread: boolean access.1102(android.opengl.GLSurfaceView.GLThread,boolean)>:<static>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSink(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.RemoteCallback.RemoteCallbackProxy: void <init>(android.os.IRemoteCallback)>:<>:<android.os.RemoteCallback.RemoteCallbackProxy:android.os.RemoteCallback>
<android.os.MemoryFile: int native_read(java.io.FileDescriptor,long,byte[],int,int,int,boolean)>:<private static native>:<android.os.MemoryFile>
<android.net.NetworkStatsHistory: void ensureBuckets(long,long)>:<private>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.transition.Visibility.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Visibility.2:android.animation.AnimatorListenerAdapter>
<android.net.IEthernetServiceListener.Stub: android.net.IEthernetServiceListener asInterface(android.os.IBinder)>:<public static>:<android.net.IEthernetServiceListener.Stub:android.os.Binder,android.net.IEthernetServiceListener>
<android.net.http.Headers: void setConnectionType(org.apache.http.util.CharArrayBuffer,int)>:<private>:<android.net.http.Headers>
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()>:<public>:<android.webkit.WebResourceResponse>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1900(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.filterfw.core.ShaderProgram: void <clinit>()>:<static>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerCertificates(byte[][],java.lang.String,java.lang.String)>:<public static>:<android.net.http.CertificateChainValidator>
<android.app.ContextImpl.61: void <init>()>:<>:<android.app.ContextImpl.61:android.app.ContextImpl.ServiceFetcher>
<android.accounts.ChooseAccountTypeActivity.ViewHolder: void <init>()>:<private>:<android.accounts.ChooseAccountTypeActivity.ViewHolder>
<android.os.BatteryStats.Uid.Pkg.Serv: int getLaunches(int)>:<public abstract>:<android.os.BatteryStats.Uid.Pkg.Serv>
<android.opengl.EGLLogWrapper: void returns(int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ResultInfo.1: android.app.ResultInfo[] newArray(int)>:<public>:<android.app.ResultInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.app.ContextImpl.60: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.60:android.app.ContextImpl.ServiceFetcher>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.os.INetworkManagementService.Stub.Proxy: java.lang.String[] listTetheredInterfaces()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.net.Uri.Part: android.net.Uri.Part 'from'(java.lang.String,java.lang.String)>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.os.Binder: void destroy()>:<private final native>:<android.os.Binder:android.os.IBinder>
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.Ripple: boolean draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.Ripple>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>:<public>:<android.graphics.YuvImage>
<android.os.storage.StorageManager.UmsConnectionChangedStorageEvent: void <init>(android.os.storage.StorageManager,boolean)>:<public>:<android.os.storage.StorageManager.UmsConnectionChangedStorageEvent:android.os.storage.StorageManager.StorageEvent>
<android.app.Fragment: void setRetainInstance(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.filterfw.core.Frame: float[] getFloats()>:<public abstract>:<android.filterfw.core.Frame>
<android.net.wifi.WifiLinkLayerStats: int describeContents()>:<public>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: void unregisterNetworkFactory(android.os.Messenger)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.LinkProperties: int hashCode()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Double4: void sub(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFormat(int,int,int)>:<private static>:<android.filterfw.format.PrimitiveFormat>
<android.net.wifi.IWifiManager.Stub.Proxy: void disableEphemeralNetwork(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.transition.TransitionSet: android.transition.TransitionSet setDuration(long)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>:<public abstract>:<android.net.INetworkStatsSession:android.os.IInterface>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean setWifiEnabled(boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.print.PrinterInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.RttManager.ServiceHandler: void reportFailure(java.lang.Object,android.os.Message)>:<>:<android.net.wifi.RttManager.ServiceHandler:android.os.Handler>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.AbstractCursor: void close()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.Fragment: void setAllowEnterTransitionOverlap(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: void onAttachedToWindow()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebView: void access.1101(android.webkit.WebView,android.view.ViewGroup.LayoutParams)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityView: void startActivity(android.content.Intent)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: int commit()>:<public abstract>:<android.app.FragmentTransaction>
<android.accounts.ChooseTypeAndAccountActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseTypeAndAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.app.Instrumentation.1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>:<public>:<android.app.Instrumentation.1MenuRunnable:java.lang.Runnable>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>:<public static>:<android.app.ActivityOptions>
<android.app.backup.BackupTransport: int sendBackupData(int)>:<public>:<android.app.backup.BackupTransport>
<android.net.INetworkStatsService.Stub.Proxy: void incrementOperationCount(int,int,int)>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.renderscript.Allocation: void copy2DRangeFromUnchecked(int,int,int,int,java.lang.Object,android.renderscript.Element.DataType,int)>:<>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.filterfw.core.Filter: void performOpen(android.filterfw.core.FilterContext)>:<final>:<android.filterfw.core.Filter>
<android.net.DhcpStateMachine: void <init>(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>:<private>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy build()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.opengl.GLErrorWrapper: void glClearDepthx(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.INetworkManagementService.Stub.Proxy: void setFirewallEgressSourceRule(java.lang.String,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener access.602(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.net.wifi.HwWifiStatStore: void addReConnectCnt()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.app.ContextImpl.57: void <init>()>:<>:<android.app.ContextImpl.57:android.app.ContextImpl.ServiceFetcher>
<android.net.IConnectivityManager.Stub.Proxy: void reportBadNetwork(android.net.Network)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.os.UserManager: boolean isUserSwitcherEnabled()>:<public>:<android.os.UserManager>
<android.graphics.drawable.LayerDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrintAttributes: void clear()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.renderscript.Double3: void sub(double)>:<public>:<android.renderscript.Double3>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.1100(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.opengl.GLSurfaceView: void init()>:<private>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.Camera: float getLocationZ()>:<public native>:<android.graphics.Camera>
<android.renderscript.AllocationAdapter: long getID(android.renderscript.RenderScript)>:<>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Float3: void <init>(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.app.backup.WallpaperBackupHelper: void <clinit>()>:<static>:<android.app.backup.WallpaperBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.print.PrinterDiscoverySession: void <init>(android.print.IPrintManager,android.content.Context,int)>:<>:<android.print.PrinterDiscoverySession>
<android.net.wifi.p2p.WifiP2pManager.Channel: int access.500(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.Object)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.net.wifi.HwWifiCHRService: void resetInfo()>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.renderscript.Matrix2f: void transpose()>:<public>:<android.renderscript.Matrix2f>
<android.os.storage.StorageManager.ObbActionListener: void <init>(android.os.storage.StorageManager)>:<private>:<android.os.storage.StorageManager.ObbActionListener:android.os.storage.IObbActionListener.Stub,android.os.Binder>
<android.os.INetworkManagementService: void disableIpv6(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.renderscript.Int2: android.renderscript.Int2 div(android.renderscript.Int2,android.renderscript.Int2)>:<public static>:<android.renderscript.Int2>
<android.sax.RootElement.Handler: void start(android.sax.Element,org.xml.sax.Attributes)>:<>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.os.Vibrator: void vibrate(long[],int)>:<public>:<android.os.Vibrator>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.AnimatedStateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.Paint: float measureText(java.lang.String)>:<public>:<android.graphics.Paint>
<android.net.nsd.NsdServiceInfo: void <init>(java.lang.String,java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.FragmentBreadCrumbs: void updateCrumbs()>:<>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.os.DropBoxManager.Entry: long getTimeMillis()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.os.Debug: java.lang.String[] getVmFeatureList()>:<public static>:<android.os.Debug>
<android.renderscript.Byte4: void negate()>:<public>:<android.renderscript.Byte4>
<android.app.Notification.Style: void <init>()>:<public>:<android.app.Notification.Style>
<android.graphics.drawable.LayerDrawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>:<public static>:<android.os.ServiceManager>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.print.PrintManager: void addPrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>:<public>:<android.print.PrintManager>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.storage.StorageVolume: void dump(com.android.internal.util.IndentingPrintWriter)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.NotificationManager: void notify(int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.graphics.pdf.PdfRenderer.Page: void close()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.app.trust.ITrustManager.Stub.Proxy: boolean isDeviceLocked(int)>:<public>:<android.app.trust.ITrustManager.Stub.Proxy:android.app.trust.ITrustManager>
<android.app.ActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>:<public>:<android.app.ActivityManager>
<android.net.LinkProperties: boolean isIdenticalStackedLinks(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.SearchDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.SearchDialog:android.app.Dialog>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.backup.IBackupManager: boolean isBackupServiceActive(int)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: void nativeBindBlob(long,long,int,byte[])>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.renderscript.Float4: void set(android.renderscript.Float4)>:<public>:<android.renderscript.Float4>
<android.accounts.AccountManager.AmsTask.Response: void <init>(android.accounts.AccountManager.AmsTask,android.accounts.AccountManager.1)>:<>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.print.PageRange: void <init>(int,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection.OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.app.FragmentManager: void <init>()>:<public>:<android.app.FragmentManager>
<android.renderscript.Long2: android.renderscript.Long2 div(android.renderscript.Long2,long)>:<public static>:<android.renderscript.Long2>
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.InsetDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.INetworkManagementService.Stub.Proxy: void startClatd(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.Element: android.renderscript.Element I32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.IApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.RectF: boolean intersect(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.database.Cursor: java.lang.String getColumnName(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.drm.DrmManagerClient: android.drm.DrmInfo _acquireDrmInfo(int,android.drm.DrmInfoRequest)>:<private native>:<android.drm.DrmManagerClient>
<android.app.backup.BackupTransport: void cancelFullBackup()>:<public>:<android.app.backup.BackupTransport>
<android.database.DatabaseUtils: void <init>()>:<public>:<android.database.DatabaseUtils>
<android.os.INetworkManagementService: java.lang.String[] listInterfaces()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLLogWrapper: void glDrawTexxOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.content.ComponentName getGlobalProxyAdmin(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.net.wifi.WifiManager: java.lang.Object removeListener(int)>:<private static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.accessibilityservice.IAccessibilityServiceConnection: java.util.List getWindows()>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.app.ActivityManagerProxy: boolean isBackgroundVisibleBehind(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebView: void access.1901(android.webkit.WebView,android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiManager: int getAggressiveHandover()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.FragmentState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.FragmentState.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glMultMatrixx(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterCapabilitiesInfo: int describeContents()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.INetworkScoreCache.Stub: android.net.INetworkScoreCache asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkScoreCache.Stub:android.os.Binder,android.net.INetworkScoreCache>
<android.net.Uri.Builder: void <init>()>:<public>:<android.net.Uri.Builder>
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setDescription(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.BackStackRecord: int getTransition()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.webkit.CookieManager: boolean acceptThirdPartyCookies(android.webkit.WebView)>:<public abstract>:<android.webkit.CookieManager>
<android.net.wifi.WifiScanner.ScanSettings.1: android.net.wifi.WifiScanner.ScanSettings createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.WifiScanner.ScanSettings.1:android.os.Parcelable.Creator>
<android.app.Activity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.os.IPowerManager.Stub.Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.filterfw.io.TextGraphReader: void reset()>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.alsa.AlsaCardsParser.AlsaCardRecord: void <init>(android.alsa.AlsaCardsParser)>:<public>:<android.alsa.AlsaCardsParser.AlsaCardRecord>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.INetworkStatsSession.Stub.Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>:<public>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.transition.CircularPropagation: void setPropagationSpeed(float)>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.app.usage.UsageEvents: int findStringIndex(java.lang.String)>:<private>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable.VPathRenderer: android.graphics.Paint access.400(android.graphics.drawable.VectorDrawable.VPathRenderer)>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.transition.Transition: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.IActivityManager: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.BatteryStats.Uid.Sensor: void <init>()>:<public>:<android.os.BatteryStats.Uid.Sensor>
<android.drm.DrmManagerClient: void <clinit>()>:<static>:<android.drm.DrmManagerClient>
<android.net.NetworkStats: int findIndexHinted(java.lang.String,int,int,int,int)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.net.wifi.WifiInfo: int getLinkSpeed()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.PendingIntent.FinishedDispatcher: void run()>:<public>:<android.app.PendingIntent.FinishedDispatcher:android.content.IIntentReceiver.Stub,java.lang.Runnable>
<android.database.IBulkCursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.app.job.IJobCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.app.ContextImpl: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.IActivityManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager: boolean getAutoTimeRequired()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Int2: android.renderscript.Int2 add(android.renderscript.Int2,int)>:<public static>:<android.renderscript.Int2>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.HwCustBaseWifiFactory.Factory: android.net.wifi.IHwCustWifiManager getHwCustWifiManager()>:<public abstract>:<android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.app.Notification.Builder: void access.2100(android.app.Notification.Builder,android.app.Notification,android.widget.RemoteViews)>:<static>:<android.app.Notification.Builder>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.accessibilityservice.IAccessibilityServiceClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceClient>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>:<public static>:<android.filterfw.format.ImageFormat>
<android.app.IInstrumentationWatcher.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IInstrumentationWatcher.Stub.Proxy:android.app.IInstrumentationWatcher>
<android.database.CursorWindow: int nativeGetType(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.webkit.PluginList: void pluginClicked(android.content.Context,int)>:<public>:<android.webkit.PluginList>
<android.os.Debug: int getBinderReceivedTransactions()>:<public static native>:<android.os.Debug>
<android.os.storage.IMountServiceListener.Stub: void <init>()>:<public>:<android.os.storage.IMountServiceListener.Stub:android.os.Binder,android.os.storage.IMountServiceListener>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)>:<public>:<android.net.http.Headers>
<android.app.job.IJobScheduler: void cancel(int)>:<public abstract>:<android.app.job.IJobScheduler:android.os.IInterface>
<android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.storage.StorageManager.StorageStateChangedStorageEvent: void <init>(android.os.storage.StorageManager,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.os.storage.StorageManager.StorageStateChangedStorageEvent:android.os.storage.StorageManager.StorageEvent>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.IRttManager.Stub: android.net.wifi.IRttManager asInterface(android.os.IBinder)>:<public static>:<android.net.wifi.IRttManager.Stub:android.os.Binder,android.net.wifi.IRttManager>
<android.hwcontrol.HwWidgetFactory.HwToast: android.view.View layoutInflate(android.content.Context)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwToast>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRQ(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.Activity: android.app.Activity.NonConfigurationInstances retainNonConfigurationInstances()>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>:<public static native>:<android.opengl.GLES20>
<android.os.BatteryStats.Uid: java.util.Map getPackageStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>:<public>:<android.graphics.BitmapFactory.Options>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.CookieManager: boolean hasCookies()>:<public abstract>:<android.webkit.CookieManager>
<android.app.AppOpsManager.OpEntry.1: void <init>()>:<>:<android.app.AppOpsManager.OpEntry.1:android.os.Parcelable.Creator>
<android.os.BatteryStats.Uid: void noteWifiScanStoppedLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.net.IConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetType(android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.app.Presentation: android.view.Display access.000(android.app.Presentation)>:<static>:<android.app.Presentation:android.app.Dialog>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.graphics.drawable.VectorDrawable.VectorDrawableState: void updateCachedBitmap(android.graphics.Rect)>:<public>:<android.graphics.drawable.VectorDrawable.VectorDrawableState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Activity: void onVisibleBehindCanceled()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.Instrumentation.Idler: void <init>(java.lang.Runnable)>:<public>:<android.app.Instrumentation.Idler:android.os.MessageQueue.IdleHandler>
<android.net.MobileDataStateTracker: boolean reconnect()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.BackStackRecord: void setNameOverride(android.util.ArrayMap,java.lang.String,java.lang.String)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.app.INotificationManager: void requestInterruptionFilterFromListener(android.service.notification.INotificationListener,int)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.net.NetworkPolicy: void <clinit>()>:<static>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.net.IConnectivityManager: android.net.Network[] getAllNetworks()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer.Page access.602(android.graphics.pdf.PdfRenderer,android.graphics.pdf.PdfRenderer.Page)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.renderscript.RenderScript: void rsnAllocationSyncAll(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.CommonTimeConfig: android.os.CommonTimeConfig.OnServerDiedListener access.100(android.os.CommonTimeConfig)>:<static>:<android.os.CommonTimeConfig>
<android.os.INetworkManagementService: void clearInterfaceAddresses(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1408(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.Typeface: void setDefault(android.graphics.Typeface)>:<private static>:<android.graphics.Typeface>
<android.app.IProcessObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.app.IProcessObserver.Stub.Proxy:android.app.IProcessObserver>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.ScriptIntrinsicYuvToRGB create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Float3: void sub(float)>:<public>:<android.renderscript.Float3>
<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.FloatBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.graphics.Camera: void save()>:<public native>:<android.graphics.Camera>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteConnection.OperationLog: boolean endOperationDeferLog(int)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.opengl.GLSurfaceView.DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.app.SharedPreferencesImpl: java.io.FileOutputStream createFileOutputStream(java.io.File)>:<private static>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.net.Uri.Part: void <init>(java.lang.String,java.lang.String,android.net.Uri.1)>:<>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.app.FragmentManagerImpl.1: void run()>:<public>:<android.app.FragmentManagerImpl.1:java.lang.Runnable>
<android.graphics.Canvas: void native_drawPaint(long,long)>:<private static native>:<android.graphics.Canvas>
<android.app.IActivityManager: boolean removeTask(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ISearchManagerCallback: void onCancel()>:<public abstract>:<android.app.ISearchManagerCallback:android.os.IInterface>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.graphics.Matrix: void mapPoints(float[])>:<public>:<android.graphics.Matrix>
<android.transition.ChangeText.6: void <init>(android.transition.ChangeText,android.widget.TextView,java.lang.CharSequence,int,int,int,java.lang.CharSequence,int,int)>:<>:<android.transition.ChangeText.6:android.transition.Transition.TransitionListenerAdapter>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.app.ActivityThread.ApplicationThread: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.BackStackRecord: void setNameOverrides(android.app.BackStackRecord.TransitionState,android.util.ArrayMap,boolean)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager.ResourceName)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.ApplicationPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.filterfw.format.ObjectFormat: int bytesPerSampleForClass(java.lang.Class,int)>:<private static>:<android.filterfw.format.ObjectFormat>
<android.database.CursorWrapper: byte[] getBlob(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.app.Fragment: void setEnterSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.p2p.WifiP2pGroup: void addClient(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.net.LinkProperties: java.util.List getStackedLinks()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void clearMutated()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.app.Fragment.1: android.view.View findViewById(int)>:<public>:<android.app.Fragment.1:android.app.FragmentContainer>
<android.app.admin.DevicePolicyManager: boolean isAdminActiveAsUser(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int)>:<private static>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.print.PrinterId.1: android.print.PrinterId[] newArray(int)>:<public>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager.Future2Task.1: void run()>:<public>:<android.accounts.AccountManager.Future2Task.1:java.lang.Runnable>
<android.net.RouteInfo: android.net.LinkAddress getDestinationLinkAddress()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.net.nsd.NsdServiceInfo.1: android.net.nsd.NsdServiceInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.nsd.NsdServiceInfo.1:android.os.Parcelable.Creator>
<android.app.WallpaperManager.Globals: void <init>(android.os.Looper)>:<>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.graphics.drawable.RotateDrawable: int getOpacity()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.renderscript.Long2: void add(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.print.PrintJob: android.print.PrintJobId getId()>:<public>:<android.print.PrintJob>
<android.net.NetworkFactory: void register()>:<public>:<android.net.NetworkFactory:android.os.Handler>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable.InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable.1)>:<>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleSTKL(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Notification.Builder: android.graphics.drawable.Drawable getProfileBadgeDrawable()>:<private>:<android.app.Notification.Builder>
<android.net.RouteInfo: boolean isDefaultRoute()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateService()>:<private static>:<android.webkit.WebViewFactory>
<android.graphics.drawable.Ripple: void setup(int,float)>:<public>:<android.graphics.drawable.Ripple>
<android.drm.DrmManagerClient.InfoHandler: void handleMessage(android.os.Message)>:<public>:<android.drm.DrmManagerClient.InfoHandler:android.os.Handler>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPassword()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.IActivityManager: int getProcessLimit()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Paint: boolean isUnderlineText()>:<public final>:<android.graphics.Paint>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.net.IConnectivityManager: void reportBadNetwork(android.net.Network)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLES20: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES20>
<android.os.FileObserver: void stopWatching()>:<public>:<android.os.FileObserver>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.IWebViewUpdateService.Stub.Proxy: void waitForRelroCreationCompleted(boolean)>:<public>:<android.webkit.IWebViewUpdateService.Stub.Proxy:android.webkit.IWebViewUpdateService>
<android.renderscript.Type: android.renderscript.Type createXY(android.renderscript.RenderScript,android.renderscript.Element,int,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.ActivityThread.EventLoggingReporter: void report(int,java.lang.Object[])>:<public transient>:<android.app.ActivityThread.EventLoggingReporter:libcore.io.EventLogger.Reporter>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>:<public>:<android.graphics.Path>
<android.renderscript.Element: android.renderscript.Element U64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Long4: void mod(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.Parcel: void writeLong(long)>:<public final>:<android.os.Parcel>
<android.app.IWallpaperManagerCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IWallpaperManagerCallback.Stub.Proxy:android.app.IWallpaperManagerCallback>
<android.filterfw.core.Filter: void performClose(android.filterfw.core.FilterContext)>:<final>:<android.filterfw.core.Filter>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.accounts.AccountManager.4: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.SearchDialog: void setWorking(boolean)>:<public>:<android.app.SearchDialog:android.app.Dialog>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2302(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean isDeviceOwner(java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.net.http.HttpAuthHeader: void <init>(java.lang.String)>:<public>:<android.net.http.HttpAuthHeader>
<android.graphics.ColorMatrix: void <init>()>:<public>:<android.graphics.ColorMatrix>
<android.graphics.Region: boolean nativeSetPath(long,long,long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.print.PrintManager.PrintDocumentAdapterDelegate: java.lang.Object access.000(android.print.PrintManager.PrintDocumentAdapterDelegate)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>:<private static>:<android.transition.ChangeTransform:android.transition.Transition>
<android.os.FileBridge.FileBridgeOutputStream: void close()>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.graphics.Outline: void setEmpty()>:<public>:<android.graphics.Outline>
<android.graphics.drawable.TransitionDrawable.TransitionState: void <init>(android.graphics.drawable.TransitionDrawable.TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.TransitionDrawable.TransitionState:android.graphics.drawable.LayerDrawable.LayerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>:<public>:<android.app.DownloadManager>
<android.os.CancellationSignal: void waitForCancelFinishedLocked()>:<private>:<android.os.CancellationSignal>
<android.os.BatteryStats.Uid: long getWifiScanTime(long,int)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.app.ActivityManager: boolean isLowRamDeviceStatic()>:<public static>:<android.app.ActivityManager>
<android.os.INetworkManagementService: void setInterfaceDown(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.net.wifi.WifiNetworkConnectionStatistics: void <clinit>()>:<static>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.os.BatteryStats: int getLowPowerModeEnabledCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.Presentation: void handleDisplayChanged()>:<private>:<android.app.Presentation:android.app.Dialog>
<android.app.ActivityThread.ApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void onTransitionStart(android.transition.Transition)>:<public>:<android.app.ActivityTransitionCoordinator.ContinueTransitionListener:android.transition.Transition.TransitionListenerAdapter>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(short[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.ActivityManager.TaskDescription.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.TaskDescription.1:android.os.Parcelable.Creator>
<android.webkit.JsResult.ResultReceiver: void onJsResultComplete(android.webkit.JsResult)>:<public abstract>:<android.webkit.JsResult.ResultReceiver>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOver()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Debug: java.lang.String getCaller()>:<public static>:<android.os.Debug>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>:<public>:<android.graphics.BlurMaskFilter:android.graphics.MaskFilter>
<android.net.Uri: java.lang.String getEncodedUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.StrictMode.VmPolicy.Builder: void <init>()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.Canvas: int getMaximumBitmapWidth()>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.DrawableContainer.DrawableContainerState cloneConstantState()>:<volatile>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityThread: void access.1300(android.app.ActivityThread,android.app.ActivityThread.ActivityClientRecord)>:<static>:<android.app.ActivityThread>
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void close()>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.webkit.HwFindActionModeCallback: void <clinit>()>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.webkit.WebViewDelegate: void addWebViewAssetPath(android.content.Context)>:<public>:<android.webkit.WebViewDelegate>
<android.app.ActivityTransitionCoordinator: void showView(android.view.View,boolean)>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.BatteryProperty: void <init>(android.os.Parcel,android.os.BatteryProperty.1)>:<>:<android.os.BatteryProperty:android.os.Parcelable>
<android.os.PerformanceCollector: void <init>()>:<public>:<android.os.PerformanceCollector>
<android.net.wifi.RttManager: void stopRanging(android.net.wifi.RttManager.RttListener)>:<public>:<android.net.wifi.RttManager>
<android.net.INetworkScoreCache.Stub.Proxy: void updateScores(java.util.List)>:<public>:<android.net.INetworkScoreCache.Stub.Proxy:android.net.INetworkScoreCache>
<android.graphics.drawable.InsetDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.os.CommonTimeUtils: int transactSetInt(int,int)>:<public>:<android.os.CommonTimeUtils>
<android.os.BatteryStats.Uid.Proc: boolean isActive()>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeTransportType(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.graphics.PathMeasure: boolean isClosed()>:<public>:<android.graphics.PathMeasure>
<android.filterfw.core.FilterPort: boolean isOpen()>:<public>:<android.filterfw.core.FilterPort>
<android.opengl.GLES10: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.Class)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.renderscript.RenderScript: void nScriptSetVarI(long,int,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.p2p.WifiP2pConfig.1: android.net.wifi.p2p.WifiP2pConfig[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pConfig.1:android.os.Parcelable.Creator>
<android.webkit.URLUtil: java.lang.String parseContentDisposition(java.lang.String)>:<static>:<android.webkit.URLUtil>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.net.InterfaceConfiguration: void clearFlag(java.lang.String)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkMisc)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.graphics.drawable.RippleDrawable: boolean isProjected()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.NetworkTemplate: boolean matchesEthernet(android.net.NetworkIdentity)>:<private>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)>:<protected>:<android.filterfw.core.Filter>
<android.net.wifi.p2p.WifiP2pGroupList: boolean contains(int)>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.ICancellationSignal: void cancel()>:<public abstract>:<android.os.ICancellationSignal:android.os.IInterface>
<android.os.storage.IMountServiceListener.Stub: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountServiceListener.Stub:android.os.Binder,android.os.storage.IMountServiceListener>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setOnlyIncludeVisibleInDownloadsUi(boolean)>:<public>:<android.app.DownloadManager.Query>
<android.net.NetworkStats.Entry: boolean isEmpty()>:<public>:<android.net.NetworkStats.Entry>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.WifiKey: java.lang.String toString()>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.os.INetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.IApplicationThread: void setSchedulingGroup(int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.print.PrintAttributes: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.net.NetworkUtils: void maskRawAddress(byte[],int)>:<public static>:<android.net.NetworkUtils>
<android.webkit.WebChromeClient.FileChooserParams: android.content.Intent createIntent()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>:<public final>:<android.os.Parcel>
<android.net.wifi.p2p.WifiP2pManager: void <init>(android.net.wifi.p2p.IWifiP2pManager)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.webkit.HwFindActionModeCallback: void onClick(android.view.View)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.renderscript.Byte4: void setValues(byte,byte,byte,byte)>:<public>:<android.renderscript.Byte4>
<android.os.StrictMode.AndroidBlockGuardPolicy: void setPolicyMask(int)>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateClipTable(int,int)>:<public static>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.net.ProxyInfo: void <init>(android.net.Uri,int)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.graphics.Paint: void setTextScaleX(float)>:<public native>:<android.graphics.Paint>
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.opengl.GLES10Ext: void <clinit>()>:<static>:<android.opengl.GLES10Ext>
<android.renderscript.Path: void updateFromNative()>:<>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.graphics.Paint: void setTextSize(float)>:<public native>:<android.graphics.Paint>
<android.os.Debug.InstructionCount: boolean collect()>:<public>:<android.os.Debug.InstructionCount>
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>:<public>:<android.net.ConnectivityManager>
<android.graphics.Bitmap: boolean isRecycled()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String,long)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.graphics.drawable.LevelListDrawable: void <init>()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.BatteryStats.Uid: void noteWifiRunningLocked(long)>:<public abstract>:<android.os.BatteryStats.Uid>
<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl: void <init>(android.net.wifi.HwCustBaseWifiFactory.1)>:<>:<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl:android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.app.MediaRouteButton: void onAttachedToWindow()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.net.INetworkPolicyListener: void onMeteredIfacesChanged(java.lang.String[])>:<public abstract>:<android.net.INetworkPolicyListener:android.os.IInterface>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.LightingColorFilter: void setColorAdd(int)>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>:<protected>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.hsm.HwCameraPermWrapper: boolean confirmPermissionWithResult()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.graphics.Paint: boolean native_hasShadowLayer(long)>:<private static native>:<android.graphics.Paint>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.Uri.HierarchicalUri: java.lang.String makeUriString()>:<private>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.wifi.WifiScanner.WifiChangeListener: void onQuiescence(android.net.wifi.ScanResult[])>:<public abstract>:<android.net.wifi.WifiScanner.WifiChangeListener:android.net.wifi.WifiScanner.ActionListener>
<android.filterfw.core.SyncRunner: void close()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.app.Fragment: void setInitialSavedState(android.app.Fragment.SavedState)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.IConnectivityManager: boolean isTetheringSupported()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.BaseBundle: void <clinit>()>:<static>:<android.os.BaseBundle>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.webkit.WebViewFactory.1: void <init>(java.lang.String,boolean)>:<>:<android.webkit.WebViewFactory.1:java.lang.Runnable>
<android.net.http.Request: void waitUntilComplete()>:<>:<android.net.http.Request>
<android.app.INotificationManager: void setAutomaticZenModeConditions(android.net.Uri[])>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.drm.DrmManagerClient.OnErrorListener: void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnErrorListener>
<android.os.TokenWatcher.Death: void finalize()>:<protected>:<android.os.TokenWatcher.Death:android.os.IBinder.DeathRecipient>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>:<public>:<android.app.backup.BackupDataOutput>
<android.app.IUserSwitchObserver.Stub.Proxy: void onUserSwitchComplete(int)>:<public>:<android.app.IUserSwitchObserver.Stub.Proxy:android.app.IUserSwitchObserver>
<android.net.IEthernetManager: void addListener(android.net.IEthernetServiceListener)>:<public abstract>:<android.net.IEthernetManager:android.os.IInterface>
<android.print.PrintJobInfo: android.print.PageRange[] access.202(android.print.PrintJobInfo,android.print.PageRange[])>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.webkit.FindActionModeCallback.NoAction: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.FindActionModeCallback.NoAction:android.view.ActionMode.Callback>
<android.renderscript.ProgramRaster: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.app.IActivityManager: java.util.List getAppTasks(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.PendingIntent.CanceledException: void <init>()>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.ContextImpl: void warnIfCallingFromSystemProcess()>:<private>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Path: android.renderscript.Allocation getLoopAllocation()>:<public>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress,java.lang.String)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.http.SslCertificate: android.view.View inflateCertificateView(android.content.Context)>:<public>:<android.net.http.SslCertificate>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse newInstance(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>:<static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.Notification: java.lang.String getGroup()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.net.Uri: java.lang.String getHost()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.drawable.DrawableContainer: int getAlpha()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.TrafficStats: long getUidRxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.app.ActivityThread: void handleUnstableProviderDiedLocked(android.os.IBinder,boolean)>:<final>:<android.app.ActivityThread>
<android.os.TokenWatcher: java.util.ArrayList dumpInternal()>:<private>:<android.os.TokenWatcher>
<android.hwcontrol.HwWidgetFactory.HwTextView: void initTextViewAddtionalStyle(android.content.Context,android.util.AttributeSet,android.widget.TextView,android.widget.Editor)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.opengl.GLLogWrapper: void glMultMatrixx(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: void onStart()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.test.InstrumentationTestCase.1: void <init>(android.test.InstrumentationTestCase,java.lang.Runnable,java.lang.Throwable[])>:<>:<android.test.InstrumentationTestCase.1:java.lang.Runnable>
<android.opengl.GLES10: void glHint(int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.JankBdItem: android.content.ContentValues getContentValues(java.lang.String[])>:<public>:<android.os.JankBdItem>
<android.database.sqlite.SQLiteCustomFunction: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>:<public>:<android.database.sqlite.SQLiteCustomFunction>
<android.os.Handler: android.os.Message obtainMessage()>:<public final>:<android.os.Handler>
<android.hwtheme.HwThemeManagerDummy: void updateResolveInfoIconCache(android.content.pm.ResolveInfo,int,java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.admin.DevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.LocalSocketImpl: void shutdownOutput()>:<protected>:<android.net.LocalSocketImpl>
<android.net.NetworkPolicy: void <init>(android.os.Parcel)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebViewProvider: android.net.http.SslCertificate getCertificate()>:<public abstract>:<android.webkit.WebViewProvider>
<android.emoji.EmojiFactory: int getMaximumAndroidPua()>:<public>:<android.emoji.EmojiFactory>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>:<public>:<android.os.Handler>
<android.os.Process: void sendSignal(int,int)>:<public static final native>:<android.os.Process>
<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition: void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimationDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.graphics.Canvas.CanvasFinalizer: void finalize()>:<protected>:<android.graphics.Canvas.CanvasFinalizer>
<android.net.nsd.NsdManager: java.lang.String getNsdServiceInfoType(android.net.nsd.NsdServiceInfo)>:<private>:<android.net.nsd.NsdManager>
<android.graphics.Rect: void <clinit>()>:<static>:<android.graphics.Rect:android.os.Parcelable>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isCoupledSinkSupportedAtSink()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.IUiModeManager.Stub.Proxy: int getCurrentModeType()>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.os.RegistrantList: int size()>:<public>:<android.os.RegistrantList>
<android.os.StrictMode.VmPolicy: void <clinit>()>:<static>:<android.os.StrictMode.VmPolicy>
<android.graphics.Bitmap: void checkWidthHeight(int,int)>:<private static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.nsd.NsdManager.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.net.nsd.NsdManager.ServiceHandler:android.os.Handler>
<android.opengl.GLErrorWrapper: void glColorMask(boolean,boolean,boolean,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileWildcard()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.os.Parcel: float nativeReadFloat(long)>:<private static native>:<android.os.Parcel>
<android.print.PrintAttributes: int hashCode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.AppOpsManager.PackageOps: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.filterfw.core.ShaderProgram: boolean setShaderAttributeValues(java.lang.String,float[],int)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.transition.SidePropagation: void setSide(int)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>:<public>:<android.drm.DrmManagerClient>
<android.accounts.OperationCanceledException: void <init>()>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.graphics.FontFamily: boolean nAddFontFromAsset(long,android.content.res.AssetManager,java.lang.String)>:<private static native>:<android.graphics.FontFamily>
<android.os.INetworkManagementService: boolean isNetworkActive()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.Int3: android.renderscript.Int3 add(android.renderscript.Int3,int)>:<public static>:<android.renderscript.Int3>
<android.net.wifi.WifiScanner.WifiChangeSettings: void <init>()>:<public>:<android.net.wifi.WifiScanner.WifiChangeSettings:android.os.Parcelable>
<android.graphics.Picture: long nativeBeginRecording(long,int,int)>:<private static native>:<android.graphics.Picture>
<android.hsm.HwSystemManager: void setOutputFile(android.media.MediaRecorder,long,long)>:<public static>:<android.hsm.HwSystemManager>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.net.Uri.HierarchicalUri: java.lang.String toString()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.ActivityManager: boolean clearApplicationUserData()>:<public>:<android.app.ActivityManager>
<android.app.IUiAutomationConnection: void clearWindowAnimationFrameStats()>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.net.NetworkStatsHistory.ParcelUtils: void writeLongArray(android.os.Parcel,long[],int)>:<public static>:<android.net.NetworkStatsHistory.ParcelUtils>
<android.webkit.WebViewProvider: boolean showFindDialog(java.lang.String,boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.Fragment: void initState()>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.filterfw.core.NativeFrame: float[] getFloats()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>:<private>:<android.app.ActivityThread>
<android.app.ApplicationThreadProxy: void setProcessState(int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.dhcp.DhcpDeclinePacket: void <init>(int,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,byte[])>:<>:<android.net.dhcp.DhcpDeclinePacket:android.net.dhcp.DhcpPacket>
<android.net.IConnectivityManager.Stub.Proxy: void releasePendingNetworkRequest(android.app.PendingIntent)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.mtp.MtpDatabase: void sessionStarted()>:<private>:<android.mtp.MtpDatabase>
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>:<public>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.net.NetworkIdentity: java.lang.String toString()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleNHGT(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.webkit.WebView: void setBackgroundColor(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.print.IWriteResultCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.app.admin.DevicePolicyManagerInternal: void addOnCrossProfileWidgetProvidersChangeListener(android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener)>:<public abstract>:<android.app.admin.DevicePolicyManagerInternal>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.702(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleSPSS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.ActivityTransitionCoordinator: void setEpicenter(android.view.View)>:<private>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.DhcpInfo: void putAddress(java.lang.StringBuffer,int)>:<private static>:<android.net.DhcpInfo:android.os.Parcelable>
<android.app.backup.BackupAgent.SharedPrefsSynchronizer: void <init>(android.app.backup.BackupAgent)>:<>:<android.app.backup.BackupAgent.SharedPrefsSynchronizer:java.lang.Runnable>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.renderscript.RenderScript: long nProgramFragmentCreate(java.lang.String,java.lang.String[],long[])>:<>:<android.renderscript.RenderScript>
<android.net.wifi.HwWifiCHRService: java.lang.String getProxyInfo()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.os.Parcel: void writeInt(int)>:<public final>:<android.os.Parcel>
<android.os.BatteryStats.HistoryItem: void readFromParcel(android.os.Parcel)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.os.CountDownTimer: android.os.CountDownTimer start()>:<public final>:<android.os.CountDownTimer>
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: boolean isVoiceInteraction()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>:<public>:<android.app.DownloadManager.Request>
<android.app.ActivityOptions: int getCustomInPlaceResId()>:<public>:<android.app.ActivityOptions>
<android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>:<private static>:<android.graphics.Matrix>
<android.os.INetworkManagementService: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.os.Parcel: void readException(int,java.lang.String)>:<public final>:<android.os.Parcel>
<android.graphics.drawable.ClipDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManagerInternal: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>:<public abstract>:<android.app.ActivityManagerInternal>
<android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.RenderScript: void nScriptForEachClipped(long,int,long,long,byte[],int,int,int,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.print.PrintDocumentInfo: int getContentType()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.WallpaperManager: android.content.Context getContext()>:<public>:<android.app.WallpaperManager>
<android.net.Uri.StringUri: java.lang.String parseFragment()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.OnActivityPausedListener: void onPaused(android.app.Activity)>:<public abstract>:<android.app.OnActivityPausedListener>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.job.JobInfo: int getId()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.transition.ChangeBounds.1: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.1:android.util.Property>
<android.accounts.IAccountManager.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.renderscript.Element: android.renderscript.Element U64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.app.Activity: void onDetachedFromWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.net.Network: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.Network:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: java.lang.String getProfileOwnerName(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.os.PowerManager: void goToSleep(long,int,int)>:<public>:<android.os.PowerManager>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.backup.BackupAgentHelper: void <init>()>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.transition.ChangeTransform.Transforms: void restore(android.view.View)>:<public>:<android.transition.ChangeTransform.Transforms>
<android.net.nsd.INsdManager: android.os.Messenger getMessenger()>:<public abstract>:<android.net.nsd.INsdManager:android.os.IInterface>
<android.os.IMultiWinService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>:<public final>:<android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection: void applyBlockGuardPolicy(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>:<public>:<android.app.WallpaperManager>
<android.webkit.JsDialogHelper.CancelListener: void onCancel(android.content.DialogInterface)>:<public>:<android.webkit.JsDialogHelper.CancelListener:android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnClickListener>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setProfileEnabled(android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.SerializedFrame: int[] getInts()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.os.BatteryStats: long getMobileRadioActiveTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.backup.RecentsBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.RecentsBackupHelper:android.app.backup.BackupHelper>
<android.graphics.Path.Op: void <init>(java.lang.String,int)>:<private>:<android.graphics.Path.Op:java.lang.Enum>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>:<public abstract>:<android.app.FragmentTransaction>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>:<public static>:<android.os.Debug>
<android.transition.Visibility.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.Visibility.1:android.animation.AnimatorListenerAdapter>
<android.renderscript.Short2: android.renderscript.Short2 div(android.renderscript.Short2,short)>:<public static>:<android.renderscript.Short2>
<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.net.http.HttpAuthHeader: boolean isBasic()>:<public>:<android.net.http.HttpAuthHeader>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>:<public>:<android.app.backup.BackupDataOutput>
<android.app.ListFragment.1: void run()>:<public>:<android.app.ListFragment.1:java.lang.Runnable>
<android.graphics.pdf.PdfDocument: void throwIfClosed()>:<private>:<android.graphics.pdf.PdfDocument>
<android.graphics.Rect: void setEmpty()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.pdf.PdfEditor: void throwIfCropBoxNull(android.graphics.Rect)>:<private>:<android.graphics.pdf.PdfEditor>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.sqlite.SQLiteConnection: void nativeClose(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.wifi.IWifiManager.Stub.Proxy: void enableTdls(java.lang.String,boolean)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.wifi.p2p.IWifiP2pManager: void setMiracastMode(int)>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.net.wifi.PPPOEConfig.1: android.net.wifi.PPPOEConfig createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.PPPOEConfig.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: void scale(float,float)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>:<public final>:<android.graphics.drawable.Drawable>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.database.CursorWrapper: java.lang.String getString(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.Short3: android.renderscript.Short3 mod(android.renderscript.Short3,short)>:<public static>:<android.renderscript.Short3>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.app.Instrumentation: void setInTouchMode(boolean)>:<public>:<android.app.Instrumentation>
<android.opengl.GLLogWrapper: void doElement(java.lang.StringBuilder,int,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.http.LoggingEventHandler: void data(byte[],int)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.app.ActivityThread: void access.200(android.app.ActivityThread,int,java.lang.Object,int,int)>:<static>:<android.app.ActivityThread>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.MobileDataStateTracker: void <clinit>()>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.storage.IMountService: void unregisterListener(android.os.storage.IMountServiceListener)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.AppImportanceMonitor.1: void onForegroundActivitiesChanged(int,int,boolean)>:<public>:<android.app.AppImportanceMonitor.1:android.app.IProcessObserver.Stub,android.os.Binder>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry,java.util.HashSet)>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.renderscript.Double4: void set(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.net.MobileDataStateTracker: boolean isAvailable()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.Notification.1: void <init>()>:<>:<android.app.Notification.1:android.os.Parcelable.Creator>
<android.os.MessageQueue: void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>:<>:<android.os.MessageQueue>
<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>:<private>:<android.net.NetworkAgent:android.os.Handler>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.net.IConnectivityManager: boolean requestRouteToHostAddress(int,byte[])>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.VoiceInteractor.AbortVoiceRequest: void onAbortResult(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.AbortVoiceRequest:android.app.VoiceInteractor.Request>
<android.os.Trace: void endSection()>:<public static>:<android.os.Trace>
<android.net.INetworkStatsSession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.INetworkStatsSession.Stub.Proxy:android.net.INetworkStatsSession>
<android.app.ActivityManager.RunningServiceInfo.1: android.app.ActivityManager.RunningServiceInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningServiceInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pInfo.1:android.os.Parcelable.Creator>
<android.os.CountDownTimer: void onTick(long)>:<public abstract>:<android.os.CountDownTimer>
<android.opengl.EGLLogWrapper: void <init>(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.ContextImpl.16: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.16:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable.AnimationState cloneConstantState()>:<>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated(float)>:<public>:<android.filterfw.geometry.Point>
<android.app.ISearchManagerCallback.Stub.Proxy: void onCancel()>:<public>:<android.app.ISearchManagerCallback.Stub.Proxy:android.app.ISearchManagerCallback>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: boolean onGesture(int)>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.app.ISearchManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.ISearchManager.Stub:android.os.Binder,android.app.ISearchManager>
<android.os.RegistrantList: void notifyRegistrants()>:<public>:<android.os.RegistrantList>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.app.Activity.ManagedCursor: android.database.Cursor access.100(android.app.Activity.ManagedCursor)>:<static>:<android.app.Activity.ManagedCursor>
<android.renderscript.Long3: android.renderscript.Long3 mod(android.renderscript.Long3,long)>:<public static>:<android.renderscript.Long3>
<android.graphics.drawable.InsetDrawable.InsetState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.InsetDrawable.InsetState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager.ResourceName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.os.Parcel: void writeBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.app.SearchDialog.3: boolean onClose()>:<public>:<android.app.SearchDialog.3:android.widget.SearchView.OnCloseListener>
<android.os.INetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.renderscript.Int4: android.renderscript.Int4 div(android.renderscript.Int4,android.renderscript.Int4)>:<public static>:<android.renderscript.Int4>
<android.renderscript.Float2: void add(float)>:<public>:<android.renderscript.Float2>
<android.transition.TransitionSet: void cancel()>:<protected>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActivityTransitionCoordinator: boolean cancelPendingTransitions()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.opengl.GLLogWrapper: void glNormal3x(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ProgressDialog: void setMax(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.filterfw.GraphEnvironment.GraphHandle: void <init>(android.filterfw.GraphEnvironment,android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.GraphEnvironment.GraphHandle>
<android.net.Uri: void checkFileUriExposed(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.mtp.MtpObjectInfo: int getImagePixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.transition.ChangeText.1: void <init>(android.transition.ChangeText,java.lang.CharSequence,android.widget.TextView,java.lang.CharSequence,int,int)>:<>:<android.transition.ChangeText.1:android.animation.AnimatorListenerAdapter>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.StrictMode: boolean vmClosableObjectLeaksEnabled()>:<public static>:<android.os.StrictMode>
<android.app.ActivityThread.ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.os.ConditionVariable: void <init>()>:<public>:<android.os.ConditionVariable>
<android.net.IpConfiguration: void setHttpProxy(android.net.ProxyInfo)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask: java.lang.Object bundleToResult(android.os.Bundle)>:<public abstract>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.net.NetworkInfo: void <clinit>()>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.graphics.pdf.PdfRenderer: long nativeOpenPageAndGetSize(long,int,android.graphics.Point)>:<private static native>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.net.TrafficStats: int getThreadStatsTag()>:<public static>:<android.net.TrafficStats>
<android.net.DhcpStateMachine.DhcpAction: void <init>(java.lang.String,int)>:<private>:<android.net.DhcpStateMachine.DhcpAction:java.lang.Enum>
<android.renderscript.Int2: void mod(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ApplicationThreadProxy: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.LightingColorFilter: void update()>:<private>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfoRequest>
<android.net.wifi.BatchedScanSettings.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.BatchedScanSettings.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.NinePatchDrawable: void setNinePatch(android.graphics.NinePatch)>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.graphics.Canvas: void native_drawPoint(long,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ResultInfo:android.os.Parcelable>
<android.sax.Element: void resetRequiredChildren()>:<>:<android.sax.Element>
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.os.IPowerManager.Stub.Proxy: boolean isPowerSaveMode()>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.app.ContextImpl: boolean stopServiceCommon(android.content.Intent,android.os.UserHandle)>:<private>:<android.app.ContextImpl:android.content.Context>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.MimeTypeMap: void <init>()>:<private>:<android.webkit.MimeTypeMap>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.database.CursorJoiner: boolean hasNext()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.os.BatteryStats: long[] getChargeStepDurationsArray()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision: void <init>()>:<private>:<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.webkit.DateSorter: int getIndex(long)>:<public>:<android.webkit.DateSorter>
<android.graphics.drawable.ScaleDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.ActivityManagerNative: void noteWakeupAlarm(android.app.PendingIntent,int,java.lang.String)>:<public static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.opengl.GLES20: void glBlendEquation(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.netdetect.HwCustNetDetectServiceImpl.1: void onFailure(int)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1:android.os.Parcelable.Creator>
<android.graphics.drawable.AnimatedRotateDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.print.IPrintDocumentAdapter: void start()>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.renderscript.Type: boolean hasFaces()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>:<public final>:<android.os.Handler>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.webkit.CookieManager: void removeExpiredCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable.NinePatchState,android.content.res.Resources)>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.IServiceConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IServiceConnection.Stub.Proxy:android.app.IServiceConnection>
<android.renderscript.Long4: void div(long)>:<public>:<android.renderscript.Long4>
<android.webkit.WebView: boolean zoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.drawable.ScaleDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.DnsPinger: void sendResponse(int,int,int)>:<private>:<android.net.DnsPinger:android.os.Handler>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.SELinux: void <init>()>:<public>:<android.os.SELinux>
<android.app.usage.UsageEvents.Event: long getTimeStamp()>:<public>:<android.app.usage.UsageEvents.Event>
<android.os.BatteryStats.HistoryItem: boolean sameNonEvent(android.os.BatteryStats.HistoryItem)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.net.http.AndroidHttpClientConnection: boolean isStale()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>:<public>:<android.renderscript.Type.Builder>
<android.graphics.drawable.RippleDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Matrix3f: void transpose()>:<public>:<android.renderscript.Matrix3f>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.GraphEnvironment: void <init>(android.filterfw.core.FrameManager,android.filterfw.io.GraphReader)>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.net.wifi.BatchedScanSettings.1: void <init>()>:<>:<android.net.wifi.BatchedScanSettings.1:android.os.Parcelable.Creator>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfoForWifi()>:<public>:<android.net.ConnectivityManager>
<android.accounts.AccountManager.15: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.app.Activity,android.os.Bundle)>:<>:<android.accounts.AccountManager.15:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.net.NetworkPolicy: boolean isOverLimit(long)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.os.INetworkManagementService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.LinkAddress: boolean isIPv6ULA()>:<private>:<android.net.LinkAddress:android.os.Parcelable>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.os.Parcel)>:<private>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: int indexOfTransition(int,int)>:<>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.database.sqlite.SQLiteDatabase: void collectDbStats(java.util.ArrayList)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>:<public static>:<android.os.Trace>
<android.os.IPowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.webkit.WebView: int getVisibleTitleHeight()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.renderscript.Double4: void div(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.app.VoiceInteractor.CompleteVoiceRequest: com.android.internal.app.IVoiceInteractorRequest submit(com.android.internal.app.IVoiceInteractor,java.lang.String,com.android.internal.app.IVoiceInteractorCallback)>:<>:<android.app.VoiceInteractor.CompleteVoiceRequest:android.app.VoiceInteractor.Request>
<android.net.dhcp.DhcpNakPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpNakPacket:android.net.dhcp.DhcpPacket>
<android.print.ILayoutResultCallback.Stub: android.print.ILayoutResultCallback asInterface(android.os.IBinder)>:<public static>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobStateResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.webkit.CookieSyncManager: void sync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.app.Fragment: java.lang.String getString(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.print.PrinterDiscoverySession: void access.100(android.print.PrinterDiscoverySession,java.util.List)>:<static>:<android.print.PrinterDiscoverySession>
<android.app.Application: void dispatchOnProvideAssistData(android.app.Activity,android.os.Bundle)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.storage.IMountService: int[] getStorageUsers(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.database.sqlite.SQLiteConnection.OperationLog: java.lang.String describeCurrentOperation()>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: long rsnScriptCCreate(long,java.lang.String,java.lang.String,byte[],int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>:<public>:<android.graphics.Picture>
<android.app.DownloadManager.CursorTranslator: long getPausedReason(int)>:<private>:<android.app.DownloadManager.CursorTranslator:android.database.CursorWrapper>
<android.net.http.HttpLog: void <init>()>:<>:<android.net.http.HttpLog>
<android.net.wifi.WifiCHRStateManager: void updateWifiException(int,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Region.1: void <init>()>:<>:<android.graphics.Region.1:android.os.Parcelable.Creator>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState access.102(android.net.NetworkInfo,android.net.NetworkInfo.DetailedState)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: int mountVolume(java.lang.String)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.net.wifi.WifiEnterpriseConfig.Phase2: void <clinit>()>:<static>:<android.net.wifi.WifiEnterpriseConfig.Phase2>
<android.app.Presentation.3: void handleMessage(android.os.Message)>:<public>:<android.app.Presentation.3:android.os.Handler>
<android.renderscript.Byte4: android.renderscript.Byte4 sub(android.renderscript.Byte4,android.renderscript.Byte4)>:<public static>:<android.renderscript.Byte4>
<android.database.sqlite.SQLiteDatabase: void dump(android.util.Printer,boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.IWallpaperManager: boolean hasNamedWallpaper(java.lang.String)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.BitmapRegionDecoder: int nativeGetHeight(long)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.app.IProcessObserver: void onProcessStateChanged(int,int,int)>:<public abstract>:<android.app.IProcessObserver:android.os.IInterface>
<android.renderscript.Byte2: android.renderscript.Byte2 sub(android.renderscript.Byte2,android.renderscript.Byte2)>:<public static>:<android.renderscript.Byte2>
<android.renderscript.Byte4: byte dotProduct(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.app.MediaRouteActionProvider: void <init>(android.content.Context)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.renderscript.RenderScript: void rsnContextBindSampler(long,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.Notification.Builder: void setFlag(int,boolean)>:<private>:<android.app.Notification.Builder>
<android.filterfw.core.SimpleFrame: void setFloats(float[])>:<public>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void limitReached(java.lang.String,java.lang.String)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.net.nsd.DnsSdTxtRecord: byte[] access.000(android.net.nsd.DnsSdTxtRecord)>:<static>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.net.Uri.HierarchicalUri: int describeContents()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.RemoteInput.Builder: android.app.RemoteInput build()>:<public>:<android.app.RemoteInput.Builder>
<android.os.Messenger: void <clinit>()>:<static>:<android.os.Messenger:android.os.Parcelable>
<android.os.IHDMIConnectService.Stub.Proxy: boolean isHDMIConnected()>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.app.IActivityManager: boolean isUserRunning(int,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>:<public static>:<android.os.SystemProperties>
<android.net.DnsPinger: void <clinit>()>:<static>:<android.net.DnsPinger:android.os.Handler>
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.job.IJobScheduler.Stub: android.os.IBinder asBinder()>:<public>:<android.app.job.IJobScheduler.Stub:android.os.Binder,android.app.job.IJobScheduler>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: boolean getForceEnabled(java.lang.String)>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.graphics.PointF: void negate()>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: java.util.List access.202(android.print.PrinterCapabilitiesInfo,java.util.List)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.ContextImpl: void performFinalCleanup(java.lang.String,java.lang.String)>:<final>:<android.app.ContextImpl:android.content.Context>
<android.database.sqlite.SQLiteConnection: boolean isPreparedStatementInCache(java.lang.String)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.drm.DrmOutputStream: void <init>(android.drm.DrmManagerClient,android.os.ParcelFileDescriptor,java.lang.String)>:<public>:<android.drm.DrmOutputStream:java.io.OutputStream>
<android.os.PowerManager: boolean useTwilightAdjustmentFeature()>:<public static>:<android.os.PowerManager>
<android.net.LocalSocketImpl: void access.700(android.net.LocalSocketImpl,int,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.app.LoaderManagerImpl.LoaderInfo: java.lang.String toString()>:<public>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.app.NativeActivity: void unloadNativeCode(long)>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.AppImportanceMonitor.2: void <init>(android.app.AppImportanceMonitor,android.os.Looper)>:<>:<android.app.AppImportanceMonitor.2:android.os.Handler>
<android.app.ActivityManager: void moveTaskToFront(int,int)>:<public>:<android.app.ActivityManager>
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.os.Binder:android.os.IBinder>
<android.accessibilityservice.AccessibilityService.1: void init(int,android.os.IBinder)>:<public>:<android.accessibilityservice.AccessibilityService.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.drawable.RippleBackground: void endSoftwareAnimations()>:<private>:<android.graphics.drawable.RippleBackground>
<android.net.RouteInfo: int getType()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.os.Debug: java.lang.String getCallers(int,int)>:<public static>:<android.os.Debug>
<android.renderscript.RenderScript: long rsnProgramRasterCreate(long,boolean,int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.LargeBitmap: void <init>(long)>:<private>:<android.graphics.LargeBitmap>
<android.print.IPrintManager.Stub: void <init>()>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.os.CancellationSignal: void throwIfCanceled()>:<public>:<android.os.CancellationSignal>
<android.net.ProxyInfo: void setExclusionList(java.lang.String)>:<private>:<android.net.ProxyInfo:android.os.Parcelable>
<android.opengl.GLES10: void glTranslatef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.transition.TransitionValuesMaps: void <init>()>:<>:<android.transition.TransitionValuesMaps>
<android.os.Debug: int setGlobalAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.transition.Slide.1: float getGoneX(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Slide.1:android.transition.Slide.CalculateSlideHorizontal>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.os.Debug.MemoryInfo: int getTotalSharedClean()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask.Response: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.net.NetworkMisc: int describeContents()>:<public>:<android.net.NetworkMisc:android.os.Parcelable>
<android.os.IVibratorService.Stub.Proxy: boolean hasVibrator()>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.os.Binder: boolean execTransact(int,long,long,int)>:<private>:<android.os.Binder:android.os.IBinder>
<android.net.Uri.StringUri: java.lang.String getPath()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IUiAutomationConnection.Stub.Proxy: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.net.wifi.WifiScanner.WifiChangeSettings.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiScanner.WifiChangeSettings.1:android.os.Parcelable.Creator>
<android.app.AppOpsManager: java.lang.String opToRestriction(int)>:<public static>:<android.app.AppOpsManager>
<android.filterfw.geometry.Point: boolean IsInUnitRange()>:<public>:<android.filterfw.geometry.Point>
<android.print.PrintAttributes: void <clinit>()>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.MediaRouteButton: void access.100(android.app.MediaRouteButton)>:<static>:<android.app.MediaRouteButton:android.view.View>
<android.transition.VisibilityPropagation: void captureValues(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.renderscript.BaseObj: void destroy()>:<public>:<android.renderscript.BaseObj>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>:<public final>:<android.os.Parcel>
<android.webkit.WebViewClient: android.app.AlertDialog access.102(android.webkit.WebViewClient,android.app.AlertDialog)>:<static>:<android.webkit.WebViewClient>
<android.print.IPrintDocumentAdapter.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.graphics.drawable.VectorDrawable.VFullPath: float getTrimPathEnd()>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityManagerProxy: void systemBackupRestored()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.AppOpsManager: int startOp(int)>:<public>:<android.app.AppOpsManager>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.IWallpaperManager.Stub.Proxy: android.os.ParcelFileDescriptor getBlurWallpaper(android.app.IWallpaperManagerCallback)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.Activity: void performStart()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.BatteryStats: long getScreenBrightnessTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.nsd.DnsSdTxtRecord: void <clinit>()>:<static>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.Activity: void performRestoreInstanceState(android.os.Bundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,float)>:<public abstract>:<android.os.PerformanceCollector.PerformanceResultsWriter>
<android.app.ActivityThread: android.app.ResourcesManager access.100(android.app.ActivityThread)>:<static>:<android.app.ActivityThread>
<android.net.wifi.WifiCHRStateManager: void updateStaMAC(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.os.PowerManager: void setBacklightBrightness(int)>:<public>:<android.os.PowerManager>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>:<public>:<android.renderscript.Mesh.Builder>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.os.INetworkManagementService.Stub.Proxy: void setPermission(java.lang.String,int[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ContextImpl.65.1: void <init>(android.app.ContextImpl.65)>:<>:<android.app.ContextImpl.65.1:java.io.FilenameFilter>
<android.database.sqlite.SQLiteCursor: void deactivate()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.Process: void sendSignalQuiet(int,int)>:<public static final native>:<android.os.Process>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.FilterSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean installCaCert(android.content.ComponentName,byte[])>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.PrintDocumentAdapterDelegate: android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback access.202(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.os.Message.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.Message.1:android.os.Parcelable.Creator>
<android.app.backup.BackupHelperDispatcher.Header: void <init>(android.app.backup.BackupHelperDispatcher.1)>:<>:<android.app.backup.BackupHelperDispatcher.Header>
<android.app.IWallpaperManagerCallback: void onWallpaperChanged()>:<public abstract>:<android.app.IWallpaperManagerCallback:android.os.IInterface>
<android.filterfw.core.FilterSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Activity: boolean isTaskRoot()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.ChangeText.3: void <init>(android.transition.ChangeText,java.lang.CharSequence,android.widget.TextView,java.lang.CharSequence,int,int,int)>:<>:<android.transition.ChangeText.3:android.animation.AnimatorListenerAdapter>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: void <init>(android.content.Context,int,boolean)>:<>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.graphics.RectF.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.RectF.1:android.os.Parcelable.Creator>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl: void <init>()>:<public>:<android.app.HwCustNonHardwareAcceleratedPackagesManagerImpl:android.app.HwCustNonHardwareAcceleratedPackagesManager>
<android.net.ProxyInfo: android.net.ProxyInfo buildPacProxy(android.net.Uri)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: void access.000(android.accounts.AbstractAccountAuthenticator)>:<static>:<android.accounts.AbstractAccountAuthenticator>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.net.IpConfiguration.1: void <init>()>:<>:<android.net.IpConfiguration.1:android.os.Parcelable.Creator>
<android.renderscript.ScriptIntrinsicConvolve5x5: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.RippleBackground.2: void <init>(android.graphics.drawable.RippleBackground)>:<>:<android.graphics.drawable.RippleBackground.2:android.animation.AnimatorListenerAdapter>
<android.app.ISearchManager: java.util.List getSearchablesInGlobalSearch()>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.os.SELinux: java.lang.String getPidContext(int)>:<public static final native>:<android.os.SELinux>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.print.IPrintManager.Stub.Proxy: void stopPrinterStateTracking(android.print.PrinterId,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result[] values()>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>:<public final>:<android.os.Parcel>
<android.app.IUiAutomationConnection.Stub.Proxy: boolean clearWindowContentFrameStats(int)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.app.ActivityThread.TimeProfileData: java.lang.String toStringService()>:<public>:<android.app.ActivityThread.TimeProfileData>
<android.database.Cursor: boolean isAfterLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.os.storage.IMountService.Stub: void <init>()>:<public>:<android.os.storage.IMountService.Stub:android.os.Binder,android.os.storage.IMountService>
<android.filterfw.core.AsyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.print.IPrintSpoolerClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.transition.ChangeTransform.2: android.graphics.PointF get(android.transition.ChangeTransform.PathAnimatorMatrix)>:<public>:<android.transition.ChangeTransform.2:android.util.Property>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void markHeaderEnd()>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.graphics.drawable.Drawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Canvas: void native_drawText(long,char[],int,int,float,float,int,long,long)>:<private static native>:<android.graphics.Canvas>
<android.mtp.MtpServer: void sendDevicePropertyChanged(int)>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.net.http.Headers: void setContentDisposition(java.lang.String)>:<public>:<android.net.http.Headers>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.net.INetworkStatsService.Stub.Proxy: java.lang.String[] getMobileIfaces()>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.app.ExitTransitionCoordinator: void startExitTransition()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: boolean parse()>:<private>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.3000(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IPowerManager.Stub.Proxy: void powerHint(int,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.http.HttpsConnection.1: java.security.cert.X509Certificate[] getAcceptedIssuers()>:<public>:<android.net.http.HttpsConnection.1:javax.net.ssl.X509TrustManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>:<static>:<android.net.http.Connection>
<android.app.backup.IRestoreSession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.backup.IRestoreSession.Stub:android.os.Binder,android.app.backup.IRestoreSession>
<android.net.wifi.HwWifiCHRService: void updateSettingsIfNeed()>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.print.PrinterDiscoverySession.OnPrintersChangeListener: void onPrintersChanged()>:<public abstract>:<android.print.PrinterDiscoverySession.OnPrintersChangeListener>
<android.net.DnsPinger: android.net.LinkProperties getCurrentLinkProperties()>:<private>:<android.net.DnsPinger:android.os.Handler>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.filterfw.io.GraphReader: void addReferencesByKeysAndValues(java.lang.Object[])>:<public transient>:<android.filterfw.io.GraphReader>
<android.graphics.drawable.RippleDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.WallpaperManager.Globals: android.app.IWallpaperManager access.200(android.app.WallpaperManager.Globals)>:<static>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.transition.TransitionSet: void resume(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.webkit.WebViewProvider.ViewDelegate: boolean onHoverEvent(android.view.MotionEvent)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Paint: boolean isDither()>:<public final>:<android.graphics.Paint>
<android.app.SearchDialog.5: void <init>(android.app.SearchDialog)>:<>:<android.app.SearchDialog.5:android.widget.SearchView.OnSuggestionListener>
<android.app.LoadedApk: android.app.IServiceConnection forgetServiceDispatcher(android.content.Context,android.content.ServiceConnection)>:<public final>:<android.app.LoadedApk>
<android.drm.DrmInfoRequest: boolean isValidType(int)>:<static>:<android.drm.DrmInfoRequest>
<android.app.admin.DeviceAdminInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.admin.DeviceAdminInfo.1:android.os.Parcelable.Creator>
<android.app.EnterTransitionCoordinator: void access.800(android.app.EnterTransitionCoordinator,android.transition.Transition)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.Network.2: void <init>()>:<>:<android.net.Network.2:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.backup.BackupTransport: void finishRestore()>:<public>:<android.app.backup.BackupTransport>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleTHST(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.BatteryProperty.1: android.os.BatteryProperty[] newArray(int)>:<public>:<android.os.BatteryProperty.1:android.os.Parcelable.Creator>
<android.graphics.drawable.VectorDrawable.VPathRenderer: void setAlpha(float)>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.database.AbstractCursor: void setExtras(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.wifi.ScanResult: int describeContents()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.test.AndroidTestCase: void testAndroidTestCaseSetupProperly()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.job.JobInfo: boolean hasLateConstraint()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.renderscript.Double4: android.renderscript.Double4 div(android.renderscript.Double4,android.renderscript.Double4)>:<public static>:<android.renderscript.Double4>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.storage.IMountService: int renameSecureContainer(java.lang.String,java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.filterfw.core.Filter: void openOutputs()>:<final>:<android.filterfw.core.Filter>
<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.webkit.FindActionModeCallback.NoAction: void <init>()>:<public>:<android.webkit.FindActionModeCallback.NoAction:android.view.ActionMode.Callback>
<android.transition.Transition: boolean areValuesChanged(android.transition.TransitionValues,android.transition.TransitionValues)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>:<public>:<android.graphics.Interpolator>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.app.ActivityManager.RunningTaskInfo: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.app.AlertDialog: void <init>(android.content.Context)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.graphics.Bitmap: void nativeCopyPixelsFromBuffer(long,java.nio.Buffer)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.wifi.WifiConfiguration: java.lang.String configKey()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable: java.lang.String access.100()>:<static>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMinification()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.renderscript.RenderScript: android.view.Surface nAllocationGetSurface(long)>:<>:<android.renderscript.RenderScript>
<android.net.ProxyDataTracker: int getDefaultGatewayAddr()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.net.wifi.WifiCHRStateManager: void uploadDhcpException(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>:<>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo: java.lang.String access.102(android.print.PrintDocumentInfo,java.lang.String)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetPointerv(int,java.nio.Buffer[])>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.RippleDrawable: void invalidateSelf()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Allocation: int getUsage()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.Status: void <init>()>:<private>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.Status>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.String)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.webkit.IWebViewUpdateService.Stub: android.os.IBinder asBinder()>:<public>:<android.webkit.IWebViewUpdateService.Stub:android.os.Binder,android.webkit.IWebViewUpdateService>
<android.app.Fragment: void startActivity(android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.IPermissionController.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IPermissionController.Stub.Proxy:android.os.IPermissionController>
<android.os.IUserManager: boolean setRestrictionsChallenge(java.lang.String)>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.graphics.Canvas: long getNativeCanvasWrapper()>:<public>:<android.graphics.Canvas>
<android.transition.Transition.TransitionListener: void onTransitionCancel(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.net.http.Request: void error(int,int)>:<>:<android.net.http.Request>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.mtp.HwMtpDatabaseManagerDummy: boolean hwGetObjectInfo(int,int[],char[],long[])>:<public>:<android.mtp.HwMtpDatabaseManagerDummy:android.mtp.HwMtpDatabaseManager>
<android.os.IHardwareService: boolean getFlashlightEnabled()>:<public abstract>:<android.os.IHardwareService:android.os.IInterface>
<android.opengl.GLES20: void glValidateProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.os.FileBridge.FileBridgeOutputStream: void write(byte[],int,int)>:<public>:<android.os.FileBridge.FileBridgeOutputStream:java.io.OutputStream>
<android.net.wifi.p2p.WifiP2pManagerHisiExt: boolean isWifiP2pEnabled()>:<public>:<android.net.wifi.p2p.WifiP2pManagerHisiExt>
<android.os.IMultiWinService: boolean isPartOfMultiWindow(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.accounts.AccountManager.5: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account)>:<>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.app.backup.BackupTransport.TransportImpl: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.net.http.HttpAuthHeader: void parseHeader(java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.os.BaseBundle: void setClassLoader(java.lang.ClassLoader)>:<>:<android.os.BaseBundle>
<android.graphics.Canvas: void skew(float,float)>:<public>:<android.graphics.Canvas>
<android.app.ActivityThread.DropBoxReporter: void addData(java.lang.String,byte[],int)>:<public>:<android.app.ActivityThread.DropBoxReporter:libcore.io.DropBox.Reporter>
<android.net.ConnectivityManager: void maybeMarkCapabilitiesRestricted(android.net.NetworkCapabilities)>:<public static>:<android.net.ConnectivityManager>
<android.os.INetworkManagementService: java.util.List getApLinkedStaList()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.Matrix.1: void set(android.graphics.Matrix)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.database.AbstractWindowedCursor: void onDeactivateOrClose()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()>:<public>:<android.os.storage.StorageManager>
<android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>:<private static>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.app.Fragment: java.lang.CharSequence getText(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.ClipDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.IUserManager: boolean isRestricted()>:<public abstract>:<android.os.IUserManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glPopMatrix()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Paint: void native_setStyle(long,int)>:<private static native>:<android.graphics.Paint>
<android.app.Presentation.3: void <init>(android.app.Presentation)>:<>:<android.app.Presentation.3:android.os.Handler>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setNotificationVisibility(int)>:<public>:<android.app.DownloadManager.Request>
<android.os.Binder: void checkParcel(android.os.IBinder,int,android.os.Parcel,java.lang.String)>:<static>:<android.os.Binder:android.os.IBinder>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkInfo: void setIsAvailable(boolean)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.IUserManager.Stub.Proxy: void setUserIcon(int,android.graphics.Bitmap)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.net.MobileLinkQualityInfo: int getLteSignalStrength()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.opengl.GLES20: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2502(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.Rect.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.graphics.Rect.1:android.os.Parcelable.Creator>
<android.opengl.GLUtils: void <clinit>()>:<static>:<android.opengl.GLUtils>
<android.database.sqlite.SQLiteConnection.PreparedStatement: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.PreparedStatement>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.ExitTransitionCoordinator: android.os.Bundle access.300(android.app.ExitTransitionCoordinator)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.InterfaceConfiguration: void <clinit>()>:<static>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.hsm.HwSystemManager.HsmDefImpl: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>:<public abstract>:<android.webkit.CookieManager>
<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)>:<public final>:<android.app.ActivityThread>
<android.database.Cursor: boolean moveToPrevious()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.webkit.WebSettings: int getDefaultFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>:<public static final>:<android.net.Proxy>
<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter: void <init>(android.database.sqlite.SQLiteConnectionPool.1)>:<>:<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter>
<android.accounts.AccountManager: void access.200(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction create()>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder enable(int)>:<private>:<android.os.StrictMode.VmPolicy.Builder>
<android.drm.DrmRights: void instantiate(java.io.File,java.lang.String)>:<private>:<android.drm.DrmRights>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLSurfaceView: int access.700(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.drm.DrmInfo: byte[] getData()>:<public>:<android.drm.DrmInfo>
<android.mtp.MtpDatabase: android.mtp.MtpServer access.200(android.mtp.MtpDatabase)>:<static>:<android.mtp.MtpDatabase>
<android.graphics.Color: int nativeHSVToColor(int,float[])>:<private static native>:<android.graphics.Color>
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.CanvasProperty: long nCreateFloat(float)>:<private static native>:<android.graphics.CanvasProperty>
<android.opengl.GLLogWrapper: void glClipPlanex(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedStateListDrawable: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.ActivityView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.filterfw.core.NativeBuffer: boolean deallocate(boolean)>:<private native>:<android.filterfw.core.NativeBuffer>
<android.app.IActivityManager: void performIdleMaintenance()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Picture: boolean nativeWriteToStream(long,java.io.OutputStream,byte[])>:<private static native>:<android.graphics.Picture>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setName(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.admin.DevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>:<public static>:<android.graphics.Movie>
<android.filterfw.io.GraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)>:<public abstract>:<android.filterfw.io.GraphReader>
<android.net.http.Headers: java.lang.String getLastModified()>:<public>:<android.net.http.Headers>
<android.os.Parcel: void readException()>:<public final>:<android.os.Parcel>
<android.app.ActivityThread: void handleSendResult(android.app.ActivityThread.ResultData)>:<private>:<android.app.ActivityThread>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.IActivityManager: void releaseSomeActivities(android.app.IApplicationThread)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.Float4: float dotProduct(android.renderscript.Float4,android.renderscript.Float4)>:<public static>:<android.renderscript.Float4>
<android.app.AbsWallpaperManager.IBlurWallpaperCallback: void onBlurWallpaperChanged()>:<public abstract>:<android.app.AbsWallpaperManager.IBlurWallpaperCallback>
<android.print.IPrintJobStateChangeListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.net.IConnectivityManager.Stub.Proxy: void supplyMessenger(int,android.os.Messenger)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.UiAutomationConnection: void registerUiTestAutomationServiceLocked(android.accessibilityservice.IAccessibilityServiceClient)>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.os.INetworkManagementService.Stub.Proxy: void removeInterfaceAlert(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.renderscript.Long2: long elementSum()>:<public>:<android.renderscript.Long2>
<android.appwidget.AppWidgetProviderInfo.1: void <init>()>:<>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.net.NetworkCapabilities: long access.002(android.net.NetworkCapabilities,long)>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.print.PrinterInfo.1: android.print.PrinterInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.transition.ChangeBounds.6: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeBounds.6:android.util.Property>
<android.renderscript.Type: boolean hasMipmaps()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.net.wifi.WifiScanner.ChannelSpec: void <init>(int)>:<public>:<android.net.wifi.WifiScanner.ChannelSpec>
<android.app.AppOpsManager: int strDebugOpToOp(java.lang.String)>:<public static>:<android.app.AppOpsManager>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glColor4ub(byte,byte,byte,byte)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.IBackupAgent.Stub.Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.graphics.drawable.RippleDrawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.ApplicationThreadProxy: void scheduleLowMemory()>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.renderscript.Int3: void setValues(int,int,int)>:<public>:<android.renderscript.Int3>
<android.alsa.AlsaDevicesParser: boolean hasMIDIDevices()>:<public>:<android.alsa.AlsaDevicesParser>
<android.net.Uri.PathSegmentsBuilder: void <init>()>:<>:<android.net.Uri.PathSegmentsBuilder>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Paint: void finalizer(long)>:<private static native>:<android.graphics.Paint>
<android.app.Dialog: void show()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.mtp.MtpDatabase: int access.002(android.mtp.MtpDatabase,int)>:<static>:<android.mtp.MtpDatabase>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.net.VpnService: boolean addAddress(java.net.InetAddress,int)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.content.ComponentName getProfileOwner(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.SearchManager: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)>:<>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.app.ReceiverRestrictedContext:android.content.ContextWrapper,android.content.Context>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.EnterTransitionCoordinator: android.util.ArrayMap mapNamedElements(java.util.ArrayList,java.util.ArrayList)>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.ApplicationErrorReport.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ApplicationErrorReport.1:android.os.Parcelable.Creator>
<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.app.IActivityManager: java.util.List getTasks(int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.drm.DrmUtils: void quietlyDispose(java.io.InputStream)>:<private static>:<android.drm.DrmUtils>
<android.app.usage.UsageStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.usage.UsageStats.1:android.os.Parcelable.Creator>
<android.renderscript.Allocation: int getBytesSize()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.print.PrinterDiscoverySession: android.os.Handler access.200(android.print.PrinterDiscoverySession)>:<static>:<android.print.PrinterDiscoverySession>
<android.net.dhcp.DhcpInformPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public>:<android.net.dhcp.DhcpInformPacket:android.net.dhcp.DhcpPacket>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>:<public>:<android.graphics.Matrix>
<android.app.NativeActivity: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.wifi.WifiInfo.1: void <init>()>:<>:<android.net.wifi.WifiInfo.1:android.os.Parcelable.Creator>
<android.os.BaseBundle: void putShortArray(java.lang.String,short[])>:<>:<android.os.BaseBundle>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)>:<public>:<android.filterfw.core.MutableFrameFormat:android.filterfw.core.FrameFormat>
<android.os.PatternMatcher.1: android.os.PatternMatcher[] newArray(int)>:<public>:<android.os.PatternMatcher.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiCHRStateManager: void uploadDisconnectException(java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.admin.DevicePolicyManager: void lockNow()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ExitTransitionCoordinator.7: void run()>:<public>:<android.app.ExitTransitionCoordinator.7:java.lang.Runnable>
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getConfiguredNetworks()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>:<public>:<android.app.ActivityManager>
<android.opengl.GLLogWrapper: void glStencilFunc(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.filterfw.core.Filter: void closePorts()>:<private final>:<android.filterfw.core.Filter>
<android.database.CursorWindow: int getStartPosition()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.StrictMode.ViolationInfo: void <init>(android.os.Parcel)>:<public>:<android.os.StrictMode.ViolationInfo>
<android.net.Uri.StringUri: java.lang.String getEncodedFragment()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.renderscript.Int4: void mul(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.renderscript.Int3: int elementSum()>:<public>:<android.renderscript.Int3>
<android.net.Uri.StringUri: java.lang.String getEncodedQuery()>:<public>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.graphics.Canvas: boolean native_quickReject(long,float,float,float,float)>:<private static native>:<android.graphics.Canvas>
<android.net.INetworkPolicyManager.Stub.Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.net.LocalSocketImpl: void <init>()>:<>:<android.net.LocalSocketImpl>
<android.renderscript.AllocationAdapter: void subData1D(int,int,float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.IMultiWinServiceCallBack: void multiWindowClose()>:<public abstract>:<android.os.IMultiWinServiceCallBack:android.os.IInterface>
<android.filterfw.core.Program: void <init>()>:<public>:<android.filterfw.core.Program>
<android.app.ContextImpl.56: void <init>()>:<>:<android.app.ContextImpl.56:android.app.ContextImpl.ServiceFetcher>
<android.graphics.RectF: void <init>()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Paint: void setAntiAlias(boolean)>:<public native>:<android.graphics.Paint>
<android.graphics.PointF: boolean equals(java.lang.Object)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.renderscript.Long2: void div(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.app.Notification.Builder: android.app.Notification.Builder setProgress(int,int,boolean)>:<public>:<android.app.Notification.Builder>
<android.app.IBackupAgent.Stub: void <init>()>:<public>:<android.app.IBackupAgent.Stub:android.os.Binder,android.app.IBackupAgent>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable.ChildDrawable addLayer(android.graphics.drawable.Drawable,int[],int,int,int,int,int)>:<>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.Drawable>
<android.transition.ChangeBounds: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.net.Uri: boolean isHierarchical()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.database.CursorToBulkCursorAdaptor: void unregisterObserverProxyLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.database.sqlite.JankSqlite: boolean addInsert(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.net.wifi.WifiManager.MulticastLock: void <init>(android.net.wifi.WifiManager,java.lang.String)>:<private>:<android.net.wifi.WifiManager.MulticastLock>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1614(android.net.wifi.HwWifiStatStore.SSIDStat,long)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: android.content.ComponentName getAssociatedActivity()>:<private>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.RenderScript: long rsnMeshCreate(long,long[],long[],int[])>:<native>:<android.renderscript.RenderScript>
<android.transition.Explode: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)>:<public static>:<android.database.DatabaseUtils>
<android.net.http.RequestQueue.ConnectionManager: boolean recycleConnection(android.net.http.Connection)>:<public abstract>:<android.net.http.RequestQueue.ConnectionManager>
<android.webkit.URLUtil: void <init>()>:<public>:<android.webkit.URLUtil>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1: void <init>(android.print.PrintFileDocumentAdapter.WriteFileAsyncTask,android.print.PrintFileDocumentAdapter)>:<>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1:android.os.CancellationSignal.OnCancelListener>
<android.net.wifi.WifiCHRStateManager: void updateWifiHandoverFailedDesc(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int setStorageEncryption(android.content.ComponentName,boolean,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.hwtheme.HwThemeManager: int getHwThemeLauncherIconSize(android.app.ActivityManager,android.content.res.Resources)>:<public static>:<android.hwtheme.HwThemeManager>
<android.graphics.Canvas: void native_drawPath(long,long,long)>:<private static native>:<android.graphics.Canvas>
<android.opengl.GLLogWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.transition.Rotate: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Rotate:android.transition.Transition>
<android.net.wifi.WifiManager: boolean isFeatureSupported(int)>:<private>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int,int)>:<public static>:<android.filterfw.format.ObjectFormat>
<android.app.EnterTransitionCoordinator.7: void onTransitionEnd(android.transition.Transition)>:<public>:<android.app.EnterTransitionCoordinator.7:android.app.ActivityTransitionCoordinator.ContinueTransitionListener,android.transition.Transition.TransitionListenerAdapter>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.os.BaseBundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>:<>:<android.os.BaseBundle>
<android.graphics.drawable.VectorDrawable.VGroup: void setTranslateY(float)>:<public>:<android.graphics.drawable.VectorDrawable.VGroup>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>:<public final>:<android.os.Parcel>
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.print.PrintAttributes: java.lang.String colorModeToString(int)>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.hsm.MediaTransactWrapper: java.util.Set playingMusicUidSet()>:<public static>:<android.hsm.MediaTransactWrapper>
<android.webkit.WebViewFactoryProvider.Statics: android.net.Uri[] parseFileChooserResult(int,android.content.Intent)>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.app.LoaderManagerImpl: void doReportNextStart()>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.opengl.GLErrorWrapper: void glBufferData(int,int,java.nio.Buffer,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.Path: void rQuadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.drm.DrmManagerClient: void _setListeners(int,java.lang.Object)>:<private native>:<android.drm.DrmManagerClient>
<android.print.PageRange.1: void <init>()>:<>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.net.IConnectivityManager.Stub.Proxy: android.net.ProxyInfo getGlobalProxy()>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.accounts.AccountManager: void access.1400(android.accounts.AccountManager,android.os.Handler,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<static>:<android.accounts.AccountManager>
<android.graphics.RectF: void <clinit>()>:<static>:<android.graphics.RectF:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.transition.ChangeTransform: void <init>()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.hwtheme.HwThemeManager: void applyDefaultHwTheme(boolean,android.content.Context)>:<public static>:<android.hwtheme.HwThemeManager>
<android.net.wifi.WifiScanner.HotlistSettings.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiScanner.HotlistSettings.1:android.os.Parcelable.Creator>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.app.ActivityThread: void incProviderRefLocked(android.app.ActivityThread.ProviderRefCount,boolean)>:<private final>:<android.app.ActivityThread>
<android.app.IActivityManager: void setProcessForeground(android.os.IBinder,int,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.http.Connection: org.apache.http.HttpHost getHost()>:<>:<android.net.http.Connection>
<android.print.IPrintManager.Stub.Proxy: void startPrinterStateTracking(android.print.PrinterId,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.print.PageRange: int getSize()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.hwtheme.HwThemeManagerDummy: void <init>()>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.filterfw.format.ImageFormat: void <init>()>:<public>:<android.filterfw.format.ImageFormat>
<android.webkit.HwFindActionModeCallback: void onFindResultReceived(int,int,boolean)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.Region: boolean contains(int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.Matrix: void native_postConcat(long,long)>:<private static native>:<android.graphics.Matrix>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String)>:<private static>:<android.graphics.drawable.Drawable>
<android.webkit.FindActionModeCallback: void findNext(boolean)>:<private>:<android.webkit.FindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Quad>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.ddm.DdmHandleAppName: void sendAPNM(java.lang.String,int)>:<private static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromAsset(android.renderscript.RenderScript,android.content.res.AssetManager,java.lang.String)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.os.Binder: long clearCallingIdentity()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.os.storage.StorageManager: int getNextNonce()>:<private>:<android.os.storage.StorageManager>
<android.app.admin.IDevicePolicyManager: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.SharedPreferencesImpl.EditorImpl.2: void <init>(android.app.SharedPreferencesImpl.EditorImpl,java.lang.Runnable)>:<>:<android.app.SharedPreferencesImpl.EditorImpl.2:java.lang.Runnable>
<android.net.IpConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.webkit.WebViewProvider: void resumeTimers()>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>:<public>:<android.graphics.Path>
<android.app.WallpaperManager: void forgetLoadedWallpaper()>:<public>:<android.app.WallpaperManager>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: void setEpicenter(android.graphics.Rect)>:<public>:<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback:android.transition.Transition.EpicenterCallback>
<android.graphics.Insets: boolean equals(java.lang.Object)>:<public>:<android.graphics.Insets>
<android.webkit.WebView: int computeVerticalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.PersistableBundle: void writeUnknownObject(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.StateListDrawable.StateListState cloneConstantState()>:<volatile>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.FileBridge: void run()>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.opengl.GLErrorWrapper: void glViewport(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.graphics.YuvImage: boolean nativeCompressToJpeg(byte[],int,int,int,int[],int[],int,java.io.OutputStream,byte[])>:<private static native>:<android.graphics.YuvImage>
<android.renderscript.Int4: void setAt(int,int)>:<public>:<android.renderscript.Int4>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.graphics.drawable.ColorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManagerInternal: void <init>()>:<public>:<android.app.admin.DevicePolicyManagerInternal>
<android.app.Notification.Action.WearableExtender: void <init>()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.app.Notification.Builder: android.app.Notification.Builder setWhen(long)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityManagerProxy: boolean releaseActivityInstance(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Path: void transform(android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.os.Parcel: java.lang.String readString()>:<public final>:<android.os.Parcel>
<android.app.ContextImpl: int getUserId()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.IActivityManager: java.util.List getRunningAppProcesses()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.backup.BackupAgent: void fullBackupFileTree(java.lang.String,java.lang.String,java.lang.String,java.util.HashSet,android.app.backup.FullBackupDataOutput)>:<protected final>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.database.Cursor: boolean moveToNext()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.Path.Direction: android.graphics.Path.Direction[] values()>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.accounts.ChooseAccountActivity.ViewHolder: void <init>(android.accounts.ChooseAccountActivity.1)>:<>:<android.accounts.ChooseAccountActivity.ViewHolder>
<android.database.sqlite.SQLiteSession: void <init>(android.database.sqlite.SQLiteConnectionPool)>:<public>:<android.database.sqlite.SQLiteSession>
<android.app.Dialog: android.view.View getCurrentFocus()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebView: int getContentWidth()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.backup.FileBackupHelperBase: boolean isKeyInList(java.lang.String,java.lang.String[])>:<>:<android.app.backup.FileBackupHelperBase>
<android.graphics.Path: void quadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.os.MessageQueue: void nativeWake(long)>:<private static native>:<android.os.MessageQueue>
<android.app.IActivityManager.WaitResult: void <clinit>()>:<static>:<android.app.IActivityManager.WaitResult:android.os.Parcelable>
<android.print.PrinterDiscoverySession: void setOnPrintersChangeListener(android.print.PrinterDiscoverySession.OnPrintersChangeListener)>:<public final>:<android.print.PrinterDiscoverySession>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.os.Vibrator: void vibrate(long)>:<public>:<android.os.Vibrator>
<android.os.CancellationSignal: android.os.ICancellationSignal createTransport()>:<public static>:<android.os.CancellationSignal>
<android.filterfw.core.Filter: void initWithAssignmentList(java.lang.Object[])>:<public final transient>:<android.filterfw.core.Filter>
<android.net.wifi.WifiConfiguration.Visibility: void <init>(android.net.wifi.WifiConfiguration,android.net.wifi.WifiConfiguration.Visibility)>:<public>:<android.net.wifi.WifiConfiguration.Visibility>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.transition.ChangeScroll: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.graphics.drawable.Ripple: float getXGravity()>:<public>:<android.graphics.drawable.Ripple>
<android.app.BackStackRecord: int commitAllowingStateLoss()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.app.Presentation.2: void <init>(android.app.Presentation)>:<>:<android.app.Presentation.2:android.hardware.display.DisplayManager.DisplayListener>
<android.app.PackageInstallObserver: android.content.pm.IPackageInstallObserver2 getBinder()>:<public>:<android.app.PackageInstallObserver>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)>:<public>:<android.app.TaskStackBuilder>
<android.print.PrintJobInfo.Builder: android.print.PrintJobInfo build()>:<public>:<android.print.PrintJobInfo.Builder>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcIn()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glStencilOp(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Fragment: void performCreate(android.os.Bundle)>:<>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLErrorWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.FieldPacker: boolean subBoolean()>:<public>:<android.renderscript.FieldPacker>
<android.app.PackageDeleteObserver: void <init>()>:<public>:<android.app.PackageDeleteObserver>
<android.net.NetworkAgent: void rematchNetworkInfo(android.net.NetworkInfo)>:<public>:<android.net.NetworkAgent:android.os.Handler>
<android.accounts.IAccountManager.Stub.Proxy: boolean addSharedAccountAsUser(android.accounts.Account,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.app.INotificationManager: void setZenModeCondition(android.service.notification.Condition)>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.graphics.drawable.LayerDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.app.Activity: void setProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.Float3: android.renderscript.Float3 add(android.renderscript.Float3,android.renderscript.Float3)>:<public static>:<android.renderscript.Float3>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>()>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.os.CommonTimeUtils: void <init>(android.os.IBinder,java.lang.String)>:<public>:<android.os.CommonTimeUtils>
<android.net.NetworkUtils: int inetAddressToInt(java.net.Inet4Address)>:<public static>:<android.net.NetworkUtils>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.graphics.drawable.GradientDrawable: void buildPathIfDirty()>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl.14: void <init>()>:<>:<android.app.ContextImpl.14:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.WifiScanner: void stopBackgroundScan(android.net.wifi.WifiScanner.ScanListener)>:<public>:<android.net.wifi.WifiScanner>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isSessionAvailable()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.IStopUserCallback: void userStopped(int)>:<public abstract>:<android.app.IStopUserCallback:android.os.IInterface>
<android.app.DialogFragment: android.app.Dialog getDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.FieldPacker: void reset(int)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable.NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable.1)>:<>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.transition.ChangeBounds.3: void set(android.transition.ChangeBounds.ViewBounds,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.3:android.util.Property>
<android.net.IEthernetServiceListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.IEthernetServiceListener.Stub.Proxy:android.net.IEthernetServiceListener>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>:<public static>:<android.webkit.MimeTypeMap>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>:<public static>:<android.webkit.WebViewDatabase>
<android.transition.Visibility: void setMode(int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.graphics.drawable.LayerDrawable: void clearMutated()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.hwcontrol.HwWidgetFactory: void <init>()>:<public>:<android.hwcontrol.HwWidgetFactory>
<android.net.Uri: java.lang.String access.300()>:<static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.drawable.Ripple: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float)>:<public>:<android.graphics.drawable.Ripple>
<android.transition.ChangeClipBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.wifi.HwWifiStatStore: android.net.wifi.HwWifiStatStore.SSIDStat geStatBySSID(java.lang.String)>:<private>:<android.net.wifi.HwWifiStatStore>
<android.net.LocalSocketImpl.SocketOutputStream: void close()>:<public>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.os.Parcel: double readDouble()>:<public final>:<android.os.Parcel>
<android.net.wifi.WifiManager: boolean isDeviceToApRttSupported()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.RectF: float centerY()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.graphics.Path: long ni()>:<final>:<android.graphics.Path>
<android.database.sqlite.SQLiteConnection: void onCancel()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesDuration(int)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.filterfw.core.Frame: int[] getInts()>:<public abstract>:<android.filterfw.core.Frame>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalServerSocket>
<android.renderscript.Long3: long elementSum()>:<public>:<android.renderscript.Long3>
<android.R.transition: void <init>()>:<public>:<android.R.transition>
<android.os.storage.IMountService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.storage.IMountService.Stub:android.os.Binder,android.os.storage.IMountService>
<android.net.wifi.WifiEnterpriseConfig.1: void <init>()>:<>:<android.net.wifi.WifiEnterpriseConfig.1:android.os.Parcelable.Creator>
<android.app.LoadedApk.ServiceDispatcher.ConnectionInfo: void <init>(android.app.LoadedApk.1)>:<>:<android.app.LoadedApk.ServiceDispatcher.ConnectionInfo>
<android.net.wifi.p2p.IWifiP2pManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub:android.os.Binder,android.net.wifi.p2p.IWifiP2pManager>
<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: void onInterrupt()>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.os.INetworkManagementService.Stub.Proxy: void startTethering(java.lang.String[])>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.CommonClock: java.net.InetSocketAddress getMasterAddr()>:<public>:<android.os.CommonClock>
<android.app.ContextImpl.3: void <init>()>:<>:<android.app.ContextImpl.3:android.app.ContextImpl.ServiceFetcher>
<android.transition.Slide.CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View)>:<public abstract>:<android.transition.Slide.CalculateSlide>
<android.app.LoadedApk.ReceiverDispatcher: void <clinit>()>:<static>:<android.app.LoadedApk.ReceiverDispatcher>
<android.app.QueuedWork: void <init>()>:<public>:<android.app.QueuedWork>
<android.graphics.drawable.BitmapDrawable: android.graphics.PorterDuff.Mode getTintMode()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.http.Headers: void setContentEncoding(java.lang.String)>:<public>:<android.net.http.Headers>
<android.net.Credentials: int getUid()>:<public>:<android.net.Credentials>
<android.app.IActivityManager: boolean isBackgroundVisibleBehind(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.accounts.AccountManagerResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.DialogFragment: void onStop()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.os.Debug: int getThreadAllocSize()>:<public static>:<android.os.Debug>
<android.app.ContextImpl: boolean access.300()>:<static>:<android.app.ContextImpl:android.content.Context>
<android.app.IUiAutomationConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult)>:<public>:<android.net.wifi.WpsResult:android.os.Parcelable>
<android.net.IEthernetManager: boolean isAvailable()>:<public abstract>:<android.net.IEthernetManager:android.os.IInterface>
<android.app.ActionBar: int getHeight()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebView: void setScrollBarStyle(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.1:android.os.Parcelable.Creator>
<android.os.storage.StorageVolume: java.lang.String getUuid()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.webkit.HwFindActionModeCallback: void updateMatchesString()>:<private>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.hwcontrol.HwWidgetFactory: android.hwcontrol.HwWidgetFactory.HwTextView getHwTextView(android.content.Context,android.widget.TextView,android.util.AttributeSet)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.print.PrintJobInfo: int describeContents()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.Matrix: boolean postRotate(float)>:<public>:<android.graphics.Matrix>
<android.app.ActivityManagerProxy: int getProcessLimit()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.admin.IDevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>:<public>:<android.app.RemoteInput.Builder>
<android.app.IActivityManager: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Region: int describeContents()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.filterfw.core.NativeFrame: boolean nativeAllocate(int)>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.Matrix.1: void setScale(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.print.pdf.PrintedPdfDocument: int getPageHeight()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.net.wifi.IWifiManager.Stub.Proxy: android.net.DhcpInfo getDhcpInfo()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.drm.DrmStore.Playback: void <init>()>:<public>:<android.drm.DrmStore.Playback>
<android.graphics.drawable.Drawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.Drawable>
<android.net.http.RequestQueue.ActivePool: void shutdown()>:<>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.opengl.GLLogWrapper: java.lang.String toString(int,short[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Byte4: android.renderscript.Byte4 div(android.renderscript.Byte4,byte)>:<public static>:<android.renderscript.Byte4>
<android.net.ProxyDataTracker: java.util.concurrent.atomic.AtomicBoolean access.200(android.net.ProxyDataTracker)>:<static>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.filterfw.core.VertexFrame: boolean nativeDeallocate()>:<private native>:<android.filterfw.core.VertexFrame:android.filterfw.core.Frame>
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.net.wifi.WifiCHRStateManager: void updateWifiNwChkEvt(int,int,java.lang.String,java.lang.String)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.graphics.Region: boolean set(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.Uri.StringUri: int findFragmentSeparator()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.wifi.WifiChannel.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiChannel.1:android.os.Parcelable.Creator>
<android.app.Service: java.lang.String getClassName()>:<final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer retain()>:<public>:<android.filterfw.core.NativeBuffer>
<android.renderscript.Byte2: void setValues(byte,byte)>:<public>:<android.renderscript.Byte2>
<android.graphics.drawable.Ripple: float getOpacity()>:<public>:<android.graphics.drawable.Ripple>
<android.net.LocalSocketImpl: int access.800(android.net.LocalSocketImpl,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.opengl.EGLLogWrapper: void returns(boolean)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLLogWrapper: void checkError()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public static>:<android.hsm.HwSystemManager>
<android.database.IContentObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.app.AlertDialog.Builder: android.content.Context getContext()>:<public>:<android.app.AlertDialog.Builder>
<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.app.EnterTransitionCoordinator: void access.600(android.app.EnterTransitionCoordinator)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.graphics.drawable.AnimatedRotateDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1000(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.MessageQueue: boolean isIdlingLocked()>:<private>:<android.os.MessageQueue>
<android.print.PrintAttributes: void <init>(android.os.Parcel,android.print.PrintAttributes.1)>:<>:<android.print.PrintAttributes:android.os.Parcelable>
<android.graphics.Paint: float getStrokeWidth()>:<public native>:<android.graphics.Paint>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void onPostExecute(java.lang.Object)>:<protected volatile>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.app.AppOpsManager.PackageOps.1: android.app.AppOpsManager.PackageOps[] newArray(int)>:<public>:<android.app.AppOpsManager.PackageOps.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RippleBackground: android.animation.AnimatorListenerAdapter access.100(android.graphics.drawable.RippleBackground)>:<static>:<android.graphics.drawable.RippleBackground>
<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.IAppTask: void setExcludeFromRecents(boolean)>:<public abstract>:<android.app.IAppTask:android.os.IInterface>
<android.net.wifi.WifiManager: boolean addToBlacklist(java.lang.String)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.RemoteInput: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.backup.RestoreSet.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.backup.RestoreSet.1:android.os.Parcelable.Creator>
<android.net.NetworkInfo: java.lang.String getConvertedSubtypeName(int)>:<private>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.ActivityManagerNative: void exportANRWarningLogAndMsg(int)>:<protected>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.app.ActionBar: android.app.ActionBar.Tab getSelectedTab()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebViewProvider.ViewDelegate: boolean performLongClick()>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>:<public abstract>:<android.os.IServiceManager:android.os.IInterface>
<android.app.ExitTransitionCoordinator: void access.000(android.app.ExitTransitionCoordinator,android.view.ViewGroup)>:<static>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.KernelID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1102(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.renderscript.Int4: void addAt(int,int)>:<public>:<android.renderscript.Int4>
<android.app.Activity: void onPostResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.Filter>
<android.os.UserHandle: void <init>(android.os.Parcel)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.BackStackRecord: boolean isAddToBackStackAllowed()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiScanner.HotlistSettings: void <init>()>:<public>:<android.net.wifi.WifiScanner.HotlistSettings:android.os.Parcelable>
<android.app.ActivityManagerNative.1: java.lang.Object create()>:<protected volatile>:<android.app.ActivityManagerNative.1:android.util.Singleton>
<android.net.wifi.WifiScanner.HotlistSettings.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiScanner.HotlistSettings.1:android.os.Parcelable.Creator>
<android.graphics.drawable.RotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: android.os.Messenger getP2pStateMachineMessenger()>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>:<public>:<android.filterfw.core.FilterFunction>
<android.net.RssiCurve: void <init>(int,int,byte[],int)>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.app.ContextImpl.62: void <init>()>:<>:<android.app.ContextImpl.62:android.app.ContextImpl.ServiceFetcher>
<android.app.Presentation.1: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.app.Presentation.1:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.CommonTimeConfig: int getPanicThreshold()>:<public>:<android.os.CommonTimeConfig>
<android.os.JankEventData: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.JankEventData:android.os.Parcelable>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.net.InterfaceConfiguration: java.lang.String toString()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glNormal3f(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkTemplate: java.lang.String getSubscriberId()>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.graphics.Matrix: void native_preRotate(long,float)>:<private static native>:<android.graphics.Matrix>
<android.net.wifi.WifiManager: boolean isScanAlwaysAvailable()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.dhcp.DhcpStateMachine: void onOfferReceived(boolean,int,byte[],java.net.InetAddress,java.net.InetAddress)>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.accounts.IAccountManager: void copyAccountToUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.net.http.CertificateChainValidator.NoPreloadHolder: void <init>()>:<private>:<android.net.http.CertificateChainValidator.NoPreloadHolder>
<android.graphics.Picture: void endRecording()>:<public>:<android.graphics.Picture>
<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)>:<private>:<android.os.Parcel>
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()>:<public>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.graphics.Path: void addRoundRect(float,float,float,float,float[],android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.opengl.GLErrorWrapper: void glNormal3f(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>:<public>:<android.filterfw.core.Program>
<android.graphics.drawable.AnimatedRotateDrawable: void <init>(android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState,android.content.res.Resources)>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.wifi.p2p.WifiP2pManagerHisiExt: void setRecoveryWifiFlag(boolean)>:<public>:<android.net.wifi.p2p.WifiP2pManagerHisiExt>
<android.os.storage.IObbActionListener.Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>:<public static>:<android.os.storage.IObbActionListener.Stub:android.os.Binder,android.os.storage.IObbActionListener>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String getDefaultUserAgent(android.content.Context)>:<public abstract>:<android.webkit.WebViewFactoryProvider.Statics>
<android.os.IUserManager.Stub.Proxy: android.content.pm.UserInfo getProfileParent(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.app.ActivityThread: void access.900(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>:<static>:<android.app.ActivityThread>
<android.app.ActivityManager.RecentTaskInfo.1: void <init>()>:<>:<android.app.ActivityManager.RecentTaskInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.Status: java.lang.String toString(int)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.Status>
<android.graphics.drawable.VectorDrawable.VFullPath: void setStrokeAlpha(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.renderscript.Double2: double elementSum()>:<public>:<android.renderscript.Double2>
<android.os.BatteryProperty.1: void <init>()>:<>:<android.os.BatteryProperty.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.os.BatteryStats: int getHistoryUsedSize()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.DelegatingSSLSession: int getPacketBufferSize()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>:<protected>:<android.app.ContextImpl.ApplicationContentResolver:android.content.ContentResolver>
<android.app.BackStackRecord: void access.300(android.app.BackStackRecord,android.app.BackStackRecord.TransitionState,android.app.Fragment,android.app.Fragment,boolean,android.util.ArrayMap)>:<static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.view.View getPermissionItemViewOld(android.view.LayoutInflater)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins access.300(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: void setDither(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.net.Uri: java.util.Set getQueryParameterNames()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.Process: void killProcess(int)>:<public static final>:<android.os.Process>
<android.print.PrintJobInfo: boolean isCancelling()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.Paint.Style: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.Paint.Style:java.lang.Enum>
<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy: void setForceEnabled(java.lang.String,boolean)>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub.Proxy:android.app.INonHardwareAcceleratedPackagesManager>
<android.graphics.Paint: int native_getTextRunCursor(long,char[],int,int,int,int,int)>:<private native>:<android.graphics.Paint>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.WifiLinkLayerStats: java.lang.String getPrintableSsid()>:<public>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: int glGetError()>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteConnection: void setSyncMode(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.graphics.Bitmap: int getDefaultDensity()>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Typeface: void nativeUnref(long)>:<private static native>:<android.graphics.Typeface>
<android.transition.Transition: java.lang.String toString()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WifiManager: boolean clearBlacklist()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.http.HttpsConnection: void initializeEngine(java.io.File)>:<public static>:<android.net.http.HttpsConnection:android.net.http.Connection>
<android.os.Parcel: void restoreAllowFds(boolean)>:<public final>:<android.os.Parcel>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.ActionBar.LayoutParams: void <init>(int,int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.NetworkIdentity: int hashCode()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)>:<public>:<android.graphics.SurfaceTexture>
<android.net.NetworkStatsHistory: void insertBucket(int,long)>:<private>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.ActivityView: android.view.Surface access.500(android.app.ActivityView)>:<static>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.opengl.EGLDisplay: void <init>(long)>:<private>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.net.ConnectivityManager: boolean requestRouteToHostAddress(int,java.net.InetAddress)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.io.TextGraphReader: void parseString(java.lang.String)>:<private>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.app.ActivityManagerProxy: void updatePersistentConfiguration(android.content.res.Configuration)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.NativeProgram: java.lang.Object getHostValue(java.lang.String)>:<public>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ActivityTransitionCoordinator: android.transition.Transition getViewsTransition()>:<protected abstract>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.net.ConnectivityManager.NetworkCallback: android.net.NetworkRequest access.302(android.net.ConnectivityManager.NetworkCallback,android.net.NetworkRequest)>:<static>:<android.net.ConnectivityManager.NetworkCallback>
<android.app.ActivityThread: void handleUnbindService(android.app.ActivityThread.BindServiceData)>:<private>:<android.app.ActivityThread>
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public>:<android.accounts.AccountManager>
<android.app.usage.UsageEvents.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.usage.UsageEvents.1:android.os.Parcelable.Creator>
<android.opengl.GLES10: void glFrontFace(int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityManager.RunningAppProcessInfo.1: void <init>()>:<>:<android.app.ActivityManager.RunningAppProcessInfo.1:android.os.Parcelable.Creator>
<android.os.RecoverySystem: java.lang.String handleAftermath()>:<public static>:<android.os.RecoverySystem>
<android.filterfw.core.FilterGraph: void beginProcessing()>:<public>:<android.filterfw.core.FilterGraph>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDescription(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.hwtheme.HwThemeManagerDummy: boolean installHwTheme(java.lang.String,boolean)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.transition.Transition: void setPathMotion(android.transition.PathMotion)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.NativeActivity: void setWindowFlags(int,int)>:<>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.accounts.AccountManagerResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.ddm.DdmHandleNativeHeap: byte[] getLeakInfo()>:<private native>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.http.HttpAuthHeader: void setUsername(java.lang.String)>:<public>:<android.net.http.HttpAuthHeader>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppObbDirsForVold(java.lang.String)>:<public>:<android.os.Environment.UserEnvironment>
<android.graphics.NinePatch: void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>:<>:<android.graphics.NinePatch>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.renderscript.Byte2: android.renderscript.Byte2 add(android.renderscript.Byte2,byte)>:<public static>:<android.renderscript.Byte2>
<android.net.Uri.HierarchicalUri: java.lang.String getScheme()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected volatile>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.app.ActivityThread.CreateServiceData: void <init>()>:<>:<android.app.ActivityThread.CreateServiceData>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthFunc(android.renderscript.ProgramStore.DepthFunc)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.filterfw.core.FilterPort: void setPortFormat(android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.FilterPort>
<android.app.job.IJobService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.job.IJobService.Stub:android.os.Binder,android.app.job.IJobService>
<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>:<public>:<android.app.Notification.Builder>
<android.net.MobileDataStateTracker.MobileDataStateReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.net.MobileDataStateTracker.MobileDataStateReceiver:android.content.BroadcastReceiver>
<android.app.backup.RestoreSet: void <init>(android.os.Parcel,android.app.backup.RestoreSet.1)>:<>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.net.nsd.DnsSdTxtRecord: void insert(byte[],byte[],int)>:<private>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.webkit.IWebViewUpdateService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.webkit.IWebViewUpdateService.Stub:android.os.Binder,android.webkit.IWebViewUpdateService>
<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.os.Binder: void init()>:<private final native>:<android.os.Binder:android.os.IBinder>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Shader.TileMode: void <clinit>()>:<static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.app.ActivityManager.RunningTaskInfo.1: android.app.ActivityManager.RunningTaskInfo createFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningTaskInfo.1:android.os.Parcelable.Creator>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(android.filterfw.geometry.Point)>:<public>:<android.filterfw.geometry.Quad>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.graphics.Path: void native_incReserve(long,int)>:<private static native>:<android.graphics.Path>
<android.os.DropBoxManager.Entry.1: void <init>()>:<>:<android.os.DropBoxManager.Entry.1:android.os.Parcelable.Creator>
<android.webkit.WebSettings: boolean getNavDump()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Short4: void set(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.net.MailTo: java.lang.String toString()>:<public>:<android.net.MailTo>
<android.webkit.WebViewDelegate: android.app.Application getApplication()>:<public>:<android.webkit.WebViewDelegate>
<android.print.IPrintManager: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.os.Parcel: void writeNoException()>:<public final>:<android.os.Parcel>
<android.opengl.EGLLogWrapper: void checkError()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.wifi.p2p.WifiP2pManager: void requestPersistentGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PersistentGroupInfoListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.BatteryStats: long getScreenOnTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.http.AndroidHttpClientConnection: void shutdown()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>:<>:<android.net.http.Connection>
<android.app.ActivityManagerProxy: void releaseSomeActivities(android.app.IApplicationThread)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.BlurMaskFilter.Blur: void <init>(java.lang.String,int,int)>:<private>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.os.Bundle.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.os.Bundle.1:android.os.Parcelable.Creator>
<android.graphics.drawable.Ripple: void access.100(android.graphics.drawable.Ripple)>:<static>:<android.graphics.drawable.Ripple>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.SystemService: void <init>()>:<public>:<android.os.SystemService>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiEnterpriseConfig: int getStringIndex(java.lang.String[],java.lang.String,int)>:<private>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration.ProxySettings getProxySettings()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Script.FieldBase: android.renderscript.Type getType()>:<public>:<android.renderscript.Script.FieldBase>
<android.net.InterfaceConfiguration: int describeContents()>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.graphics.Paint: void native_setShadowLayer(long,float,float,float,int)>:<private static native>:<android.graphics.Paint>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>:<public final>:<android.filterfw.core.Filter>
<android.database.Cursor: double getDouble(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>:<public>:<android.net.http.SslCertificate>
<android.app.IActivityManager: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.sax.RootElement.Handler: void <init>(android.sax.RootElement)>:<>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.os.BatteryStats: long getBluetoothOnTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebViewProvider: void setVerticalScrollbarOverlay(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.graphics.Camera: void restore()>:<public native>:<android.graphics.Camera>
<android.net.NetworkScoreManager: boolean setActiveScorer(java.lang.String)>:<public>:<android.net.NetworkScoreManager>
<android.webkit.HwFindActionModeCallback: void setWebView(android.webkit.WebView)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.net.wifi.HuaweiApConfiguration: int describeContents()>:<public>:<android.net.wifi.HuaweiApConfiguration:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.INetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>:<public abstract>:<android.net.INetworkStatsService:android.os.IInterface>
<android.print.IWriteResultCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void applyTheme(android.content.res.Resources.Theme)>:<final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.transition.Slide.CalculateSlideHorizontal: void <init>(android.transition.Slide.1)>:<>:<android.transition.Slide.CalculateSlideHorizontal:android.transition.Slide.CalculateSlide>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.Drawable>
<android.accounts.AccountAuthenticatorResponse.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.filterfw.core.Scheduler: android.filterfw.core.Filter scheduleNextNode()>:<abstract>:<android.filterfw.core.Scheduler>
<android.graphics.FontFamily: void nUnrefFamily(long)>:<private static native>:<android.graphics.FontFamily>
<android.app.ActionBar: int getSelectedNavigationIndex()>:<public abstract>:<android.app.ActionBar>
<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,long,long,boolean,boolean)>:<public>:<android.net.NetworkPolicy:android.os.Parcelable,java.lang.Comparable>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.Debug: int getThreadAllocCount()>:<public static>:<android.os.Debug>
<android.print.IPrintDocumentAdapterObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.os.UserManager: int getUserSerialNumber(int)>:<public>:<android.os.UserManager>
<android.graphics.drawable.BitmapDrawable: void <init>()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebView: void clearHistory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.WebChromeClient.FileChooserParams: boolean isCaptureEnabled()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.filterfw.core.FrameManager: void tearDown()>:<public>:<android.filterfw.core.FrameManager>
<android.net.NetworkTemplate.1: android.net.NetworkTemplate createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkTemplate.1:android.os.Parcelable.Creator>
<android.graphics.Point: void set(int,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.transition.ChangeBounds.6: void set(android.view.View,android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.6:android.util.Property>
<android.transition.TransitionManager: void go(android.transition.Scene,android.transition.Transition)>:<public static>:<android.transition.TransitionManager>
<android.app.ActivityManagerProxy: void resumeAppSwitches()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.ShaderProgram: boolean setSourceRegion(float,float,float,float,float,float,float,float)>:<public native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.app.IActivityManager: boolean killPids(int[],java.lang.String,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.AlertDialog.Builder: void <init>(android.content.Context,int)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.Short2: android.renderscript.Short2 sub(android.renderscript.Short2,short)>:<public static>:<android.renderscript.Short2>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext.DebugProcKHR)>:<public static native>:<android.opengl.GLES31Ext>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.filterfw.core.OutputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.database.CursorWindow: long nativeGetLong(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.Short2: void mul(short)>:<public>:<android.renderscript.Short2>
<android.graphics.Bitmap.1: void <init>()>:<>:<android.graphics.Bitmap.1:android.os.Parcelable.Creator>
<android.accounts.Account.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.os.BatteryStats: long getNetworkActivityPackets(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.WifiLog.WifiExceptionRecord: java.lang.String toString()>:<public>:<android.net.wifi.WifiLog.WifiExceptionRecord>
<android.app.FragmentState: void <init>(android.app.Fragment)>:<public>:<android.app.FragmentState:android.os.Parcelable>
<android.accounts.AccountManager: void access.300(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<static>:<android.accounts.AccountManager>
<android.filterfw.core.GLFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>:<public>:<android.graphics.Canvas>
<android.os.WorkSource: int compare(android.os.WorkSource,int,int)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.app.ApplicationErrorReport: int describeContents()>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.graphics.drawable.Ripple: boolean isHardwareAnimating()>:<public>:<android.graphics.drawable.Ripple>
<android.renderscript.Int3: void negate()>:<public>:<android.renderscript.Int3>
<android.os.IHardwareService.Stub: android.os.IHardwareService asInterface(android.os.IBinder)>:<public static>:<android.os.IHardwareService.Stub:android.os.Binder,android.os.IHardwareService>
<android.net.http.LoggingEventHandler: void error(int,java.lang.String)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.app.ContextImpl.30: void <init>()>:<>:<android.app.ContextImpl.30:android.app.ContextImpl.ServiceFetcher>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.os.IUserManager.Stub.Proxy: int checkRestrictionsChallenge(java.lang.String)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.app.ProfilerInfo.1: void <init>()>:<>:<android.app.ProfilerInfo.1:android.os.Parcelable.Creator>
<android.app.FragmentManagerImpl: void moveToState(int,boolean)>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.filterfw.io.PatternScanner: void <init>(java.lang.String)>:<public>:<android.filterfw.io.PatternScanner>
<android.transition.ArcMotion: float getMinimumVerticalAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Double2: android.renderscript.Double2 div(android.renderscript.Double2,android.renderscript.Double2)>:<public static>:<android.renderscript.Double2>
<android.os.PowerManager: int transformBrightness(int,int,int)>:<public>:<android.os.PowerManager>
<android.app.NotificationManager: void cancelAll()>:<public>:<android.app.NotificationManager>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings,android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>:<public>:<android.app.ActivityManager>
<android.webkit.PermissionRequest: void grant(java.lang.String[])>:<public abstract>:<android.webkit.PermissionRequest>
<android.graphics.drawable.RippleDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.wifi.WifiScanner.ParcelableScanResults.1: android.net.wifi.WifiScanner.ParcelableScanResults[] newArray(int)>:<public>:<android.net.wifi.WifiScanner.ParcelableScanResults.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glBlendFunc(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.RequestQueue.SyncFeeder: boolean haveRequest(org.apache.http.HttpHost)>:<public>:<android.net.http.RequestQueue.SyncFeeder:android.net.http.RequestFeeder>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.PersistableBundle.1: android.os.PersistableBundle createFromParcel(android.os.Parcel)>:<public>:<android.os.PersistableBundle.1:android.os.Parcelable.Creator>
<android.app.backup.RestoreObserver: void restoreFinished(int)>:<public>:<android.app.backup.RestoreObserver>
<android.app.ActivityThread: boolean access.700(java.lang.String[],java.lang.String)>:<static>:<android.app.ActivityThread>
<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.AppOpsManager.OpEntry.1: android.app.AppOpsManager.OpEntry[] newArray(int)>:<public>:<android.app.AppOpsManager.OpEntry.1:android.os.Parcelable.Creator>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void routeRemoved(android.net.RouteInfo)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.os.StrictMode.4: void <init>()>:<>:<android.os.StrictMode.4:java.lang.ThreadLocal>
<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews.OnClickHandler)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Short2: void add(android.renderscript.Short2)>:<public>:<android.renderscript.Short2>
<android.opengl.EGL14: boolean eglBindAPI(int)>:<public static native>:<android.opengl.EGL14>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.renderscript.Matrix3f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.os.Bundle: float getFloat(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.trust.TrustManager: android.os.Handler access.000(android.app.trust.TrustManager)>:<static>:<android.app.trust.TrustManager>
<android.graphics.Matrix: void native_setScale(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.graphics.drawable.VectorDrawable.VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable.VClipPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.Application: void dispatchActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>:<public>:<android.app.SharedElementCallback>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.transition.ChangeImageTransform.2: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeImageTransform.2:android.util.Property>
<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.drm.DrmManagerClient: android.drm.DrmInfoStatus _processDrmInfo(int,android.drm.DrmInfo)>:<private native>:<android.drm.DrmManagerClient>
<android.graphics.Rect: void union(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection.OperationLog: void logOperationLocked(int,java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.graphics.Matrix: void native_setValues(long,float[])>:<private static native>:<android.graphics.Matrix>
<android.os.Debug: java.lang.String getDdrInfo()>:<public static final native>:<android.os.Debug>
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)>:<public static>:<android.os.Debug>
<android.app.EnterTransitionCoordinator: void access.500(android.app.EnterTransitionCoordinator)>:<static>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>:<public abstract>:<android.webkit.WebIconDatabase.IconListener>
<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>:<protected>:<android.filterfw.core.SerializedFrame:android.filterfw.core.Frame>
<android.app.job.IJobScheduler: void cancelAll()>:<public abstract>:<android.app.job.IJobScheduler:android.os.IInterface>
<android.database.AbstractCursor: boolean isAfterLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.accounts.AccountManager.11: void doWork()>:<public>:<android.accounts.AccountManager.11:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountManager.18: void run()>:<public>:<android.accounts.AccountManager.18:java.lang.Runnable>
<android.net.IConnectivityManager: int getRestoreDefaultNetworkDelay(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.Path.FillType: android.graphics.Path.FillType valueOf(java.lang.String)>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.net.wifi.WifiNetworkConnectionStatistics.1: void <init>()>:<>:<android.net.wifi.WifiNetworkConnectionStatistics.1:android.os.Parcelable.Creator>
<android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Action.Builder>
<android.renderscript.Long3: void <init>(long)>:<public>:<android.renderscript.Long3>
<android.accounts.AuthenticatorDescription.1: android.accounts.AuthenticatorDescription[] newArray(int)>:<public>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.net.StaticIpConfiguration: int hashCode()>:<public>:<android.net.StaticIpConfiguration:android.os.Parcelable>
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(java.lang.String,int)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.app.usage.UsageStats: java.lang.String getPackageName()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.net.TrafficStats: void closeQuietly(android.net.INetworkStatsSession)>:<public static>:<android.net.TrafficStats>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.LinkQualityInfo: void setNetworkType(int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.mtp.MtpServer: void native_add_storage(android.mtp.MtpStorage)>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.net.LinkAddress.1: android.net.LinkAddress[] newArray(int)>:<public>:<android.net.LinkAddress.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: void setPrinterId(android.print.PrinterId)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()>:<public static>:<android.app.ActivityOptions>
<android.net.wifi.WifiInfo: java.lang.String removeDoubleQuotes(java.lang.String)>:<public static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.Process: void removeAllProcessGroups()>:<public static final native>:<android.os.Process>
<android.net.INetworkPolicyManager: boolean isUidForeground(int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.renderscript.Long3: void mul(long)>:<public>:<android.renderscript.Long3>
<android.net.wifi.p2p.WifiP2pGroupList: boolean clear()>:<public>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.accounts.IAccountAuthenticator: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(int)>:<private>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.net.wifi.IWifiManager: void setCountryCode(java.lang.String,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.accounts.AccountManager: java.util.HashMap access.1300(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerEnergyUsed()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public abstract>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.filterfw.geometry.Point: float length()>:<public>:<android.filterfw.geometry.Point>
<android.net.LinkProperties: boolean addDnsServer(java.net.InetAddress)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.ConnectivityManager: java.lang.String[] getTetheredDhcpRanges()>:<public>:<android.net.ConnectivityManager>
<android.app.Fragment: boolean getUserVisibleHint()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.R.bool: void <init>()>:<public>:<android.R.bool>
<android.os.Debug: int getGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.app.ActionBar: void setSubtitle(int)>:<public abstract>:<android.app.ActionBar>
<android.app.ApplicationPackageManager: void putCachedIcon(android.app.ApplicationPackageManager.ResourceName,android.graphics.drawable.Drawable)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.graphics.pdf.PdfDocument.Page: void finish()>:<private>:<android.graphics.pdf.PdfDocument.Page>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.transition.TransitionPropagation: java.lang.String[] getPropagationProperties()>:<public abstract>:<android.transition.TransitionPropagation>
<android.os.IBinder: boolean pingBinder()>:<public abstract>:<android.os.IBinder>
<android.os.BatteryStats.HistoryPrinter: void <init>()>:<public>:<android.os.BatteryStats.HistoryPrinter>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.MergeCursor.1: void onChanged()>:<public>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(java.util.ArrayList)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.graphics.Canvas: void native_rotate(long,float)>:<private static native>:<android.graphics.Canvas>
<android.os.IPowerManager.Stub.Proxy: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.wifi.p2p.WifiP2pGroupList: android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener access.000(android.net.wifi.p2p.WifiP2pGroupList)>:<static>:<android.net.wifi.p2p.WifiP2pGroupList:android.os.Parcelable>
<android.os.UEventObserver: void finalize()>:<protected>:<android.os.UEventObserver>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.IWifiManager.Stub.Proxy: java.util.List getPrivilegedConfiguredNetworks()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.opengl.GLErrorWrapper: void glFogfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.MediaRouteButton: void setVisibility(int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.net.wifi.HwInnerWifiManager: boolean setWifiEnterpriseConfigEapMethod(int,java.util.HashMap)>:<public abstract>:<android.net.wifi.HwInnerWifiManager>
<android.net.http.AndroidHttpClientConnection: void close()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace valueOf(java.lang.String)>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.net.MobileLinkQualityInfo: void setEvdoEcio(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.alsa.AlsaDevicesParser: boolean access.202(android.alsa.AlsaDevicesParser,boolean)>:<static>:<android.alsa.AlsaDevicesParser>
<android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.ActivityTransitionCoordinator: android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition)>:<protected static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.NetworkState: int describeContents()>:<public>:<android.net.NetworkState:android.os.Parcelable>
<android.net.WifiLinkQualityInfo: void setRssi(int)>:<public>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void <init>()>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.String)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.DhcpResults: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.graphics.Rasterizer: void finalize()>:<protected>:<android.graphics.Rasterizer>
<android.graphics.drawable.VectorDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1700(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.MobileDataStateTracker: void setEnableFailFastMobileData(int)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.renderscript.ProgramRaster: boolean isPointSpriteEnabled()>:<public>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.opengl.GLLogWrapper: void glMultiTexCoord4f(int,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IUiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.graphics.Outline: void setRect(android.graphics.Rect)>:<public>:<android.graphics.Outline>
<android.app.Notification.Action: android.os.Bundle access.000(android.app.Notification.Action)>:<static>:<android.app.Notification.Action:android.os.Parcelable>
<android.app.ActivityThread.ApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.app.usage.UsageStats: void add(android.app.usage.UsageStats)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.graphics.ColorFilter: void <init>()>:<public>:<android.graphics.ColorFilter>
<android.os.IPermissionController.Stub: void <init>()>:<public>:<android.os.IPermissionController.Stub:android.os.Binder,android.os.IPermissionController>
<android.app.Instrumentation.Idler: boolean queueIdle()>:<public final>:<android.app.Instrumentation.Idler:android.os.MessageQueue.IdleHandler>
<android.net.INetworkManagementEventObserver.Stub.Proxy: void addressUpdated(java.lang.String,android.net.LinkAddress)>:<public>:<android.net.INetworkManagementEventObserver.Stub.Proxy:android.net.INetworkManagementEventObserver>
<android.os.INetworkManagementService.Stub.Proxy: void clearInterfaceAddresses(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory makeSocketFactory(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>:<private>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.transition.Slide.4: void <init>()>:<>:<android.transition.Slide.4:android.transition.Slide.CalculateSlideHorizontal>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.HwFindActionModeCallback.HwNoAction: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.webkit.HwFindActionModeCallback.HwNoAction:android.view.ActionMode.Callback>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String convertToQuotedString(java.lang.String)>:<private>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.IActivityManager: void closeSystemDialogs(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebViewProvider: void documentHasImages(android.os.Message)>:<public abstract>:<android.webkit.WebViewProvider>
<android.filterfw.core.GenerateProgramPort: java.lang.String variableName()>:<public abstract>:<android.filterfw.core.GenerateProgramPort:java.lang.annotation.Annotation>
<android.app.SearchDialog.SearchBar: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public>:<android.app.SearchDialog.SearchBar:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: boolean getVideoOverlayForEmbeddedEncryptedVideoEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.app.LauncherActivity: void setTitle(int)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES20>
<android.app.backup.IBackupManager.Stub.Proxy: void opComplete(int)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.os.Debug: int getGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Presentation: android.content.res.Resources getResources()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.net.wifi.IWifiScanner.Stub: android.net.wifi.IWifiScanner asInterface(android.os.IBinder)>:<public static>:<android.net.wifi.IWifiScanner.Stub:android.os.Binder,android.net.wifi.IWifiScanner>
<android.os.Debug: void resetGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.app.MediaRouteActionProvider: boolean isVisible()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.net.IConnectivityManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.IConnectivityManager.Stub:android.os.Binder,android.net.IConnectivityManager>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.renderscript.Long3: long get(int)>:<public>:<android.renderscript.Long3>
<android.os.ParcelFileDescriptor: int detachFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.mtp.MtpDatabase: void endSendObject(java.lang.String,int,int,boolean)>:<private>:<android.mtp.MtpDatabase>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.400(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.test.PerformanceTestCase: int startPerformance(android.test.PerformanceTestCase.Intermediates)>:<public abstract>:<android.test.PerformanceTestCase>
<android.webkit.WebView: void reload()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.renderscript.RSTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.graphics.Canvas: void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long)>:<private static native>:<android.graphics.Canvas>
<android.opengl.GLLogWrapper: java.lang.String getClearBufferMask(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.GradientDrawable.Orientation: void <clinit>()>:<static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.renderscript.Double4: void setValues(double,double,double,double)>:<public>:<android.renderscript.Double4>
<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>:<public>:<android.database.CursorWindowAllocationException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.app.IActivityManager: void bootAnimationComplete()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.CursorToBulkCursorAdaptor: void onMove(int)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.webkit.WebViewProvider: float getScale()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.backup.IRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>:<public abstract>:<android.app.backup.IRestoreSession:android.os.IInterface>
<android.app.job.JobInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.job.JobInfo.1:android.os.Parcelable.Creator>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.net.INetworkScoreService: boolean setActiveScorer(java.lang.String)>:<public abstract>:<android.net.INetworkScoreService:android.os.IInterface>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedQuery()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.net.wifi.IWifiManager: void startPPPOE(android.net.wifi.PPPOEConfig)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.HttpResponseCache: int getHitCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.transition.TransitionManager.MultiListener: boolean onPreDraw()>:<public>:<android.transition.TransitionManager.MultiListener:android.view.ViewTreeObserver.OnPreDrawListener,android.view.View.OnAttachStateChangeListener>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.DhcpInfo: void <init>()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLLogWrapper: void glLightModelxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.FontListParser.Config: void <init>()>:<>:<android.graphics.FontListParser.Config>
<android.app.ActivityManagerNative: void <clinit>()>:<static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.net.wifi.HwWifiStatStore: void LOGD(java.lang.String)>:<private>:<android.net.wifi.HwWifiStatStore>
<android.print.PrintAttributes: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.os.SELinux: java.lang.String getContext()>:<public static final native>:<android.os.SELinux>
<android.app.SearchableInfo.ActionKeyInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.SearchableInfo.ActionKeyInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: void reportFullyDrawn()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.HwCustNotification: void <init>()>:<public>:<android.app.HwCustNotification:android.app.IHwCustNotification>
<android.app.IActivityContainerCallback.Stub.Proxy: void setVisible(android.os.IBinder,boolean)>:<public>:<android.app.IActivityContainerCallback.Stub.Proxy:android.app.IActivityContainerCallback>
<android.net.LinkQualityInfo: long getPacketCount()>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.net.LocalSocketImpl.SocketOutputStream: void flush()>:<public>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.app.ActivityOptions: java.util.ArrayList getSharedElementNames()>:<public>:<android.app.ActivityOptions>
<android.app.ActivityManagerProxy: boolean convertFromTranslucent(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.Notification.Builder: int access.1700(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.net.LinkQualityInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.LinkQualityInfo.1:android.os.Parcelable.Creator>
<android.os.IBatteryPropertiesListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IBatteryPropertiesListener.Stub.Proxy:android.os.IBatteryPropertiesListener>
<android.net.LinkProperties: boolean hasIPv4Address()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.webkit.WebView: int access.101(android.webkit.WebView)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.FragmentManagerImpl: int reverseTransit(int)>:<public static>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.pdf.PdfRenderer.Page: void throwIfClosed()>:<private>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.filterfw.core.FrameFormat: int getDimensionCount()>:<public>:<android.filterfw.core.FrameFormat>
<android.webkit.HwFindActionModeCallback: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.os.BatteryStats.Uid.Proc: long getSystemTime(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.graphics.Matrix.1: boolean postTranslate(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.net.NetworkKey.1: android.net.NetworkKey createFromParcel(android.os.Parcel)>:<public>:<android.net.NetworkKey.1:android.os.Parcelable.Creator>
<android.net.WifiKey: boolean equals(java.lang.Object)>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.http.DelegatingSSLSession: void removeValue(java.lang.String)>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.mtp.MtpDevice: int[] native_get_object_handles(int,int,int)>:<private native>:<android.mtp.MtpDevice>
<android.net.wifi.IWifiManager.Stub.Proxy: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.Vibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>:<public abstract>:<android.os.Vibrator>
<android.graphics.Region: boolean nativeOp(long,android.graphics.Rect,long,int)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable.ClipState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.ClipDrawable.ClipState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: void setReenterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk profileView(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.Parcel: void nativeRestoreAllowFds(long,boolean)>:<private static native>:<android.os.Parcel>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.graphics.SurfaceTexture: void nativeInit(boolean,int,boolean,java.lang.ref.WeakReference)>:<private native>:<android.graphics.SurfaceTexture>
<android.app.IAlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock(int)>:<public abstract>:<android.app.IAlarmManager:android.os.IInterface>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread.ActivityClientRecord,android.app.ActivityThread.StopInfo,boolean,boolean)>:<private>:<android.app.ActivityThread>
<android.os.IMultiWinServiceCallBack.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IMultiWinServiceCallBack.Stub.Proxy:android.os.IMultiWinServiceCallBack>
<android.net.LocalSocketImpl: int pending_native(java.io.FileDescriptor)>:<private native>:<android.net.LocalSocketImpl>
<android.app.MediaRouteActionProvider: void setRouteTypes(int)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.InsetDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.os.StatFs: int getBlockCount()>:<public>:<android.os.StatFs>
<android.renderscript.FileA3D.1: void <clinit>()>:<static>:<android.renderscript.FileA3D.1>
<android.database.CursorWrapper: boolean moveToNext()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.UserManager: boolean removeUser(int)>:<public>:<android.os.UserManager>
<android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>:<public static>:<android.app.ActivityManager>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>:<public>:<android.os.Debug.InstructionCount>
<android.app.AlertDialog: com.android.internal.app.AlertController access.000(android.app.AlertDialog)>:<static>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.storage.StorageVolume: void <init>(java.io.File,int,boolean,boolean,boolean,int,boolean,long,android.os.UserHandle)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDrawTexsOES(short,short,short,short,short)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.Drawable>
<android.os.storage.IMountService: int mountVolume(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.app.ContextImpl.21: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.21:android.app.ContextImpl.ServiceFetcher>
<android.graphics.SurfaceTexture: void <clinit>()>:<static>:<android.graphics.SurfaceTexture>
<android.net.Uri: java.lang.String getEncodedPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.INetworkPolicyManager.Stub.Proxy: boolean isUidForeground(int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.transition.ChangeBounds.8: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.ChangeBounds.8:android.animation.AnimatorListenerAdapter>
<android.app.backup.BackupHelperDispatcher.Header: void <init>()>:<private>:<android.app.backup.BackupHelperDispatcher.Header>
<android.os.IPowerManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.net.LinkProperties: void setHttpProxy(android.net.ProxyInfo)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.ScoredNetwork: int describeContents()>:<public>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.os.BatteryStats: int getScreenOnCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.filterfw.core.NativeFrame: boolean setNativeInts(int[])>:<private native>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.transition.Explode: void captureValues(android.transition.TransitionValues)>:<private>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.app.ApplicationPackageManager: int checkSignatures(int,int)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.filterfw.core.FilterPort: boolean isAttached()>:<public>:<android.filterfw.core.FilterPort>
<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.renderscript.Int4: void <init>()>:<public>:<android.renderscript.Int4>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk listWindows()>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.net.wifi.IWifiManager: java.util.List getConfiguredNetworks()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.net.http.Headers: void setLocation(java.lang.String)>:<public>:<android.net.http.Headers>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()>:<public>:<android.webkit.WebResourceResponse>
<android.net.wifi.WifiLog: void <clinit>()>:<static>:<android.net.wifi.WifiLog>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>:<public>:<android.webkit.ConsoleMessage>
<android.accounts.AccountManager.13: void doWork()>:<public>:<android.accounts.AccountManager.13:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.graphics.drawable.RippleDrawable: int getRippleIndex(android.graphics.drawable.Ripple)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: android.graphics.drawable.Drawable newDrawable()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Program: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.os.IMultiWinService: int getNextTaskAtPos(int,int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.VpnService: void access.100(java.net.InetAddress,int)>:<static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: void emulateShiftHeld()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()>:<public>:<android.os.PowerManager>
<android.graphics.Canvas: void native_drawCircle(long,float,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.hwtheme.HwThemeManager: android.content.res.Resources updateHwtResource(android.app.ActivityThread,android.content.res.Resources,java.lang.String,android.app.LoadedApk)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.opengl.GLSurfaceView.GLThreadManager: void checkGLESVersion()>:<private>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementExitTransition()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.app.FragmentManager: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>:<public abstract>:<android.app.FragmentManager>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.Class)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.Mesh.Primitive: void <clinit>()>:<static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.graphics.drawable.InsetDrawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.backup.BackupTransport.TransportImpl: int getRestoreData(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.hsm.HwCameraPermWrapper: void <init>()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Bitmap: int getRowBytes()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.database.sqlite.SQLiteSession: void throwIfNoTransaction()>:<private>:<android.database.sqlite.SQLiteSession>
<android.database.sqlite.SQLiteConnectionPool: void finalize()>:<protected>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.app.BackStackRecord: void setEpicenter(android.transition.Transition,android.view.View)>:<private static>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.StrictMode.VmPolicy.Builder: void <init>(android.os.StrictMode.VmPolicy)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>:<public static>:<android.graphics.Picture>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.accounts.IAccountAuthenticator.Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.os.MemoryFile: void <clinit>()>:<static>:<android.os.MemoryFile>
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.admin.DeviceAdminReceiver: void <init>()>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.http.DelegatingSSLSession: java.security.Principal getPeerPrincipal()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.graphics.PixelXorXfermode: long nativeCreate(int)>:<private static native>:<android.graphics.PixelXorXfermode:android.graphics.Xfermode>
<android.net.wifi.PPPOEInfo.1: void <init>()>:<>:<android.net.wifi.PPPOEInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.emoji.EmojiFactory: int nativeGetAndroidPuaFromVendorSpecificSjis(long,char)>:<private native>:<android.emoji.EmojiFactory>
<android.net.TrafficStats: long nativeGetUidStat(int,int)>:<private static native>:<android.net.TrafficStats>
<android.app.trust.ITrustListener: void onTrustChanged(boolean,int,boolean)>:<public abstract>:<android.app.trust.ITrustListener:android.os.IInterface>
<android.graphics.drawable.VectorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.alsa.AlsaDevicesParser: boolean hasPlaybackDevices(int)>:<public>:<android.alsa.AlsaDevicesParser>
<android.database.sqlite.SQLiteConnectionPool: void access.100(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.database.sqlite.SQLiteConnection.Operation: java.lang.String getStatus()>:<private>:<android.database.sqlite.SQLiteConnection.Operation>
<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy: boolean setWifiP2pEnabled(int)>:<public>:<android.net.wifi.p2p.IWifiP2pManager.Stub.Proxy:android.net.wifi.p2p.IWifiP2pManager>
<android.net.wifi.IWifiManager: void addToBlacklist(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.usage.UsageEvents: void <init>()>:<>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.app.Activity: android.content.ComponentName getComponentName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Float3: android.renderscript.Float3 div(android.renderscript.Float3,android.renderscript.Float3)>:<public static>:<android.renderscript.Float3>
<android.graphics.PathMeasure: void native_destroy(long)>:<private static native>:<android.graphics.PathMeasure>
<android.graphics.Paint: void native_set(long,long)>:<private static native>:<android.graphics.Paint>
<android.os.BaseBundle: short getShort(java.lang.String)>:<>:<android.os.BaseBundle>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>:<public>:<android.webkit.WebView.WebViewTransport>
<android.graphics.pdf.PdfRenderer.Page: int getWidth()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.os.BatteryStats.BitDescription: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>:<public>:<android.os.BatteryStats.BitDescription>
<android.app.QueuedWork: boolean hasPendingWork()>:<public static>:<android.app.QueuedWork>
<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.net.Uri.StringUri: java.lang.String parseQuery()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.admin.IDevicePolicyManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub:android.os.Binder,android.app.admin.IDevicePolicyManager>
<android.app.usage.UsageEvents.Event: android.content.res.Configuration getConfiguration()>:<public>:<android.app.usage.UsageEvents.Event>
<android.net.nsd.DnsSdTxtRecord: int hashCode()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.net.Proxy: int validate(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.net.Proxy>
<android.app.ContextImpl.StaticServiceFetcher: void <init>()>:<>:<android.app.ContextImpl.StaticServiceFetcher:android.app.ContextImpl.ServiceFetcher>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.net.NetworkStatsHistory: void <init>(android.os.Parcel)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.WifiConfiguration: void setProxy(android.net.IpConfiguration.ProxySettings,android.net.ProxyInfo)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void untetherInterface(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.ContextImpl.15: void <init>()>:<>:<android.app.ContextImpl.15:android.app.ContextImpl.ServiceFetcher>
<android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>:<public>:<android.os.BaseBundle>
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.ScriptIntrinsicConvolve3x3 create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Debug: void resetGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.app.ApplicationPackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.net.wifi.p2p.WifiP2pDevice.1: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pDevice.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: void rsnScriptInvokeV(long,long,int,byte[])>:<native>:<android.renderscript.RenderScript>
<android.app.Notification.WearableExtender: boolean getHintAvoidBackgroundClipping()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.Service: void onRebind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLErrorWrapper: void glPixelStorei(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition: boolean canReverse()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.os.Parcel: void readIntArray(int[])>:<public final>:<android.os.Parcel>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.mtp.MtpDatabase: int renameFile(int,java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.webkit.WebSettings: void setMixedContentMode(int)>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.Short4: void mod(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.net.wifi.WifiCHRStateManager: void updateDhcpSerialNo(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.Program.TextureType: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.filterfw.core.GLFrameTimer: void <clinit>()>:<static>:<android.filterfw.core.GLFrameTimer>
<android.renderscript.FieldPacker: int subI32()>:<public>:<android.renderscript.FieldPacker>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onSetPrintJobTagResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityManager.RecentTaskInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.RecentTaskInfo.1:android.os.Parcelable.Creator>
<android.app.ResourcesManager: void <init>()>:<public>:<android.app.ResourcesManager>
<android.net.wifi.HwWifiCHRService: int getWIFISleepPolicy()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor clear()>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.os.ServiceManager: void initServiceCache(java.util.Map)>:<public static>:<android.os.ServiceManager>
<android.os.Binder: void restoreCallingIdentity(long)>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.app.ActivityThread.ActionTimeType: void <clinit>()>:<static>:<android.app.ActivityThread.ActionTimeType:java.lang.Enum>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.wifi.WifiActivityEnergyInfo: boolean isValid()>:<public>:<android.net.wifi.WifiActivityEnergyInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.graphics.RectF: void union(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.app.job.IJobCallback.Stub.Proxy: void acknowledgeStartMessage(int,boolean)>:<public>:<android.app.job.IJobCallback.Stub.Proxy:android.app.job.IJobCallback>
<android.app.ActivityTransitionCoordinator: void setGhostVisibility(int)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.LightingColorFilter: int getColorAdd()>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.os.IMultiWinService: int getMultiWinFramePosition(android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.net.wifi.WpsInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WpsInfo.1:android.os.Parcelable.Creator>
<android.os.SELinux: boolean restoreconRecursive(java.io.File)>:<public static>:<android.os.SELinux>
<android.os.Handler.BlockingRunnable: void <init>(java.lang.Runnable)>:<public>:<android.os.Handler.BlockingRunnable:java.lang.Runnable>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>:<public static>:<android.webkit.MimeTypeMap>
<android.transition.Transition: void capturePropagationValues(android.transition.TransitionValues)>:<>:<android.transition.Transition:java.lang.Cloneable>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(int)>:<public>:<android.app.AlertDialog.Builder>
<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>:<public>:<android.os.Vibrator>
<android.webkit.MimeTypeMap: void <clinit>()>:<static>:<android.webkit.MimeTypeMap>
<android.net.wifi.WifiManager.WifiLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityTransitionCoordinator: void scheduleGhostVisibilityChange(int)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.print.PrintAttributes: android.print.PrintAttributes asLandscape()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.net.wifi.RttManager.ParcelableRttParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.RttManager.ParcelableRttParams:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String readDnsName(java.io.DataInputStream)>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.os.FileObserver.ObserverThread: void onEvent(int,int,java.lang.String)>:<public>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.filterfw.core.SimpleFrame: void setGenericObjectValue(java.lang.Object)>:<protected>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.net.NetworkIdentity: java.lang.String getNetworkId()>:<public>:<android.net.NetworkIdentity:java.lang.Comparable>
<android.renderscript.Byte3: android.renderscript.Byte3 mul(android.renderscript.Byte3,android.renderscript.Byte3)>:<public static>:<android.renderscript.Byte3>
<android.os.PerformanceCollector: void startPerformanceSnapshot()>:<private>:<android.os.PerformanceCollector>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.GraphEnvironment.GraphHandle>
<android.graphics.drawable.InsetDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountManager.BaseFutureTask.1: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.BaseFutureTask.1:java.util.concurrent.Callable>
<android.net.StaticIpConfiguration.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.StaticIpConfiguration.1:android.os.Parcelable.Creator>
<android.webkit.WebViewProvider: void savePassword(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.graphics.drawable.LayerDrawable: void setLayoutDirection(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.admin.DeviceAdminReceiver: void onProfileProvisioningComplete(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.app.ListActivity: void <init>()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Script.FieldBase: android.renderscript.Element getElement()>:<public>:<android.renderscript.Script.FieldBase>
<android.app.RemoteInput: void <init>(android.os.Parcel,android.app.RemoteInput.1)>:<>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.drawable.Drawable: int[] getState()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.AllocationAdapter: void readData(float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.app.backup.BackupDataOutput: int writeEntityHeader_native(long,java.lang.String,int)>:<private static native>:<android.app.backup.BackupDataOutput>
<android.app.job.IJobScheduler.Stub: android.app.job.IJobScheduler asInterface(android.os.IBinder)>:<public static>:<android.app.job.IJobScheduler.Stub:android.os.Binder,android.app.job.IJobScheduler>
<android.net.BaseNetworkStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>:<public>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.accounts.AccountManager.17: void run()>:<public>:<android.accounts.AccountManager.17:java.lang.Runnable>
<android.filterfw.core.Frame: int getBindingType()>:<public>:<android.filterfw.core.Frame>
<android.renderscript.Font: java.lang.String getFontFileName(java.lang.String,android.renderscript.Font.Style)>:<static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pInfo: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.net.IpConfiguration: void <init>(android.net.IpConfiguration.IpAssignment,android.net.IpConfiguration.ProxySettings,android.net.StaticIpConfiguration,android.net.ProxyInfo)>:<public>:<android.net.IpConfiguration:android.os.Parcelable>
<android.app.job.JobParameters: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.opengl.GLES10: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Mesh.AllocationBuilder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: void <init>()>:<private>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)>:<public>:<android.emoji.EmojiFactory>
<android.opengl.GLES20: void glDeleteShader(int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glTexGenx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hwtheme.HwThemeManagerDummy: boolean installHwTheme(java.lang.String)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.PorterDuffColorFilter: void update()>:<private>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.os.storage.StorageVolume: void setUuid(java.lang.String)>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Void)>:<protected>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.transition.Transition: void matchStartAndEnd(android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.FontFamily: boolean nAddFontWeightStyle(long,java.lang.String,int,boolean)>:<private static native>:<android.graphics.FontFamily>
<android.app.ActivityManager.CpuStatInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.CpuStatInfo.1:android.os.Parcelable.Creator>
<android.graphics.pdf.PdfDocument.PdfCanvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.graphics.pdf.PdfDocument.PdfCanvas:android.graphics.Canvas>
<android.renderscript.Long3: void add(android.renderscript.Long3)>:<public>:<android.renderscript.Long3>
<android.app.Notification.InboxStyle: void populateBigContentView(android.app.Notification)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.net.http.RequestQueue: void shutdown()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.app.backup.BackupDataInputStream: int size()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.filterfw.core.SimpleFrame: void releaseNativeAllocation()>:<protected>:<android.filterfw.core.SimpleFrame:android.filterfw.core.Frame>
<android.os.BatteryStats: int getPhoneDataConnectionCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.IMultiWinService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.IntentService.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.app.IntentService.ServiceHandler:android.os.Handler>
<android.database.CursorWrapper: long getLong(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.database.sqlite.SQLiteSession: void beginTransactionUnchecked(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>:<public static>:<android.transition.TransitionUtils>
<android.net.LinkQualityInfo: void <clinit>()>:<static>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.filterfw.core.ShaderProgram: boolean setShaderBlendEnabled(boolean)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.renderscript.Matrix4f: void loadIdentity()>:<public>:<android.renderscript.Matrix4f>
<android.app.KeyguardManager: boolean isKeyguardLocked()>:<public>:<android.app.KeyguardManager>
<android.app.LauncherActivity: boolean onEvaluateShowIcons()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.dhcp.DhcpPacket: java.lang.String readAsciiString(java.nio.ByteBuffer,int)>:<private static>:<android.net.dhcp.DhcpPacket>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActivityThread: void access.2200(android.app.ActivityThread,android.app.ActivityThread.CreateServiceData)>:<static>:<android.app.ActivityThread>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.RemoteInput: void <init>(android.os.Parcel)>:<private>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.backup.FullBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FullBackupAgent:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.net.NetworkPolicyManager: void snapToCycleDay(android.text.format.Time,int)>:<public static>:<android.net.NetworkPolicyManager>
<android.database.AbstractCursor: void checkPosition()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.UpdateLock: void acquire()>:<public>:<android.os.UpdateLock>
<android.graphics.Outline: void setRect(int,int,int,int)>:<public>:<android.graphics.Outline>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.os.Parcel: void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader)>:<private>:<android.os.Parcel>
<android.graphics.Paint: void setFakeBoldText(boolean)>:<public native>:<android.graphics.Paint>
<android.net.wifi.IWifiManager: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.WallpaperManager.Globals: void forgetLoadedWallpaper()>:<public>:<android.app.WallpaperManager.Globals:android.app.IWallpaperManagerCallback.Stub,android.os.Binder>
<android.renderscript.FieldPacker: byte subI8()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.AnimationDrawable: void clearMutated()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()>:<protected>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>:<>:<android.renderscript.RenderScript>
<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.UEventObserver.UEventThread: void addObserver(java.lang.String,android.os.UEventObserver)>:<public>:<android.os.UEventObserver.UEventThread:java.lang.Thread>
<android.net.wifi.WifiCHRStateManager: void updateWifiRSSI(int,int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.net.http.RequestQueue.SyncFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>:<public>:<android.net.http.RequestQueue.SyncFeeder:android.net.http.RequestFeeder>
<android.app.Fragment: java.lang.String toString()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Long4: void <init>(long)>:<public>:<android.renderscript.Long4>
<android.app.ActivityTransitionState.1: boolean onPreDraw()>:<public>:<android.app.ActivityTransitionState.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.BaseBundle: java.util.ArrayList getStringArrayList(java.lang.String)>:<>:<android.os.BaseBundle>
<android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>:<public static>:<android.filterfw.format.ImageFormat>
<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.net.nsd.DnsSdTxtRecord: boolean equals(java.lang.Object)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>:<protected abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(byte[],int,int,boolean)>:<private static native>:<android.graphics.BitmapRegionDecoder>
<android.database.sqlite.SQLiteGlobal: void <clinit>()>:<static>:<android.database.sqlite.SQLiteGlobal>
<android.net.wifi.WifiInfo: void <init>()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.ActivityManager.RunningServiceInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.RunningServiceInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteSession: void recycleTransaction(android.database.sqlite.SQLiteSession.Transaction)>:<private>:<android.database.sqlite.SQLiteSession>
<android.os.INetworkActivityListener.Stub: android.os.IBinder asBinder()>:<public>:<android.os.INetworkActivityListener.Stub:android.os.Binder,android.os.INetworkActivityListener>
<android.net.Proxy: int getPort(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.opengl.GLES31Ext.DebugProcKHR: void onMessage(int,int,int,int,java.lang.String)>:<public abstract>:<android.opengl.GLES31Ext.DebugProcKHR>
<android.net.http.IdleCache: boolean cacheConnection(org.apache.http.HttpHost,android.net.http.Connection)>:<>:<android.net.http.IdleCache>
<android.os.INetworkManagementService: void denyProtect(int)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.IWifiScanner.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IWifiScanner.Stub.Proxy:android.net.wifi.IWifiScanner>
<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>:<public>:<android.app.LoadedApk>
<android.'annotation'.SdkConstant.SdkConstantType: android.'annotation'.SdkConstant.SdkConstantType[] values()>:<public static>:<android.annotation.SdkConstant.SdkConstantType:java.lang.Enum>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.net.wifi.RttManager.Capabilities: void <init>(android.net.wifi.RttManager)>:<public>:<android.net.wifi.RttManager.Capabilities>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.backup.AbsoluteFileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.AbsoluteFileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.Path: void native_rCubicTo(long,float,float,float,float,float,float)>:<private static native>:<android.graphics.Path>
<android.app.WallpaperManager: android.graphics.Bitmap getBlurBitmap(android.graphics.Rect)>:<public>:<android.app.WallpaperManager>
<android.graphics.Path: void offset(float,float)>:<public>:<android.graphics.Path>
<android.app.Fragment: boolean isRemoving()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Canvas: boolean native_getClipBounds(long,android.graphics.Rect)>:<private static native>:<android.graphics.Canvas>
<android.os.Bundle.1: android.os.Bundle createFromParcel(android.os.Parcel)>:<public>:<android.os.Bundle.1:android.os.Parcelable.Creator>
<android.renderscript.Short4: short dotProduct(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.webkit.Plugin: void setName(java.lang.String)>:<public>:<android.webkit.Plugin>
<android.net.wifi.p2p.WifiP2pDeviceList.1: android.net.wifi.p2p.WifiP2pDeviceList[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList.1:android.os.Parcelable.Creator>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.net.NetworkStatsHistory.DataStreamUtils: long readVarLong(java.io.DataInputStream)>:<public static>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.net.RouteInfo: boolean hasGateway()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.AppImportanceMonitor: void updateImportanceLocked(android.app.AppImportanceMonitor.AppEntry,boolean)>:<>:<android.app.AppImportanceMonitor>
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)>:<public>:<android.emoji.EmojiFactory>
<android.renderscript.Byte3: android.renderscript.Byte3 add(android.renderscript.Byte3,android.renderscript.Byte3)>:<public static>:<android.renderscript.Byte3>
<android.transition.ChangeBounds.3: android.graphics.PointF get(android.transition.ChangeBounds.ViewBounds)>:<public>:<android.transition.ChangeBounds.3:android.util.Property>
<android.webkit.WebViewProvider: boolean pageUp(boolean)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.DownloadManager: void <init>(android.content.ContentResolver,java.lang.String)>:<public>:<android.app.DownloadManager>
<android.renderscript.Byte3: android.renderscript.Byte3 sub(android.renderscript.Byte3,byte)>:<public static>:<android.renderscript.Byte3>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Build.VERSION: void <clinit>()>:<static>:<android.os.Build.VERSION>
<android.app.Notification.Builder: int getBigTextLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.app.Activity: boolean isBackgroundVisibleBehind()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.AutoTransition: void <init>()>:<public>:<android.transition.AutoTransition:android.transition.TransitionSet,android.transition.Transition>
<android.os.BatteryStats: boolean dumpDurationSteps(java.io.PrintWriter,java.lang.String,long[],int,boolean)>:<private static>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.test.InstrumentationTestSuite: void <init>(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.WallpaperManager: void setDisplayPadding(android.graphics.Rect)>:<public>:<android.app.WallpaperManager>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accessibilityservice.AccessibilityServiceInfo.1: void <init>()>:<>:<android.accessibilityservice.AccessibilityServiceInfo.1:android.os.Parcelable.Creator>
<android.net.InterfaceConfiguration: void setHardwareAddress(java.lang.String)>:<public>:<android.net.InterfaceConfiguration:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pInfo: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.app.IBackupAgent.Stub.Proxy: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)>:<public>:<android.renderscript.RenderScript>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.IActivityManager.WaitResult.1: android.app.IActivityManager.WaitResult[] newArray(int)>:<public>:<android.app.IActivityManager.WaitResult.1:android.os.Parcelable.Creator>
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.ddm.DdmHandleHello: void <clinit>()>:<static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityThread: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)>:<public final>:<android.app.ActivityThread>
<android.os.storage.StorageManager: void registerListener(android.os.storage.StorageEventListener)>:<public>:<android.os.storage.StorageManager>
<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision: boolean splitHorizontal(int,int,int,int)>:<public>:<android.graphics.Atlas.SlicePolicy.LongerFreeAxisSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.app.INotificationManager.Stub.Proxy: boolean setZenModeConfig(android.service.notification.ZenModeConfig)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.filterfw.core.FilterFactory: void <clinit>()>:<static>:<android.filterfw.core.FilterFactory>
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.transition.TransitionPropagation: void captureValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.TransitionPropagation>
<android.app.ActivityManager: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>:<public>:<android.app.ActivityManager>
<android.net.wifi.WifiScanner.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.net.wifi.WifiScanner.ServiceHandler:android.os.Handler>
<android.app.admin.IDevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.dhcp.DhcpStateMachine: void onAckReceived(java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.util.List,java.net.InetAddress,int)>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.net.MobileDataStateTracker: void log(java.lang.String)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.drawable.AnimatedStateListDrawable: int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.p2p.WifiP2pInfo.1: android.net.wifi.p2p.WifiP2pInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pInfo.1:android.os.Parcelable.Creator>
<android.graphics.drawable.PictureDrawable: int getOpacity()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.GraphRunner: void <init>(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.GraphRunner>
<android.mtp.MtpDevice: long getStorageId(int)>:<public>:<android.mtp.MtpDevice>
<android.webkit.WebView.PrivateAccess: void super_setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.webkit.WebView.PrivateAccess>
<android.app.backup.BackupAgent.SharedPrefsSynchronizer: void run()>:<public>:<android.app.backup.BackupAgent.SharedPrefsSynchronizer:java.lang.Runnable>
<android.webkit.WebViewProvider.ViewDelegate: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteSession: void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo)>:<public>:<android.database.sqlite.SQLiteSession>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.widget.TextView getPermissionItemViewOldPermGrpView(android.view.View)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.os.UEventObserver: void access.300(java.lang.String)>:<static>:<android.os.UEventObserver>
<android.os.INetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.RippleBackground.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.graphics.drawable.RippleBackground.1:android.animation.AnimatorListenerAdapter>
<android.os.Debug.MemoryInfo.1: android.os.Debug.MemoryInfo createFromParcel(android.os.Parcel)>:<public>:<android.os.Debug.MemoryInfo.1:android.os.Parcelable.Creator>
<android.app.ExitTransitionCoordinator: boolean moveSharedElementWithParent()>:<protected>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.test.InstrumentationTestCase.2: void <init>(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean,java.lang.Throwable[])>:<>:<android.test.InstrumentationTestCase.2:java.lang.Runnable>
<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>:<private>:<android.os.BaseBundle>
<android.app.ActionBar: int getNavigationMode()>:<public abstract>:<android.app.ActionBar>
<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.app.IApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.app.Dialog.1: void <init>(android.app.Dialog)>:<>:<android.app.Dialog.1:java.lang.Runnable>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.filterfw.core.FilterGraph: void preconnect(android.filterfw.core.OutputPort,android.filterfw.core.InputPort)>:<private>:<android.filterfw.core.FilterGraph>
<android.app.ActivityManager.RecentTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.os.IMultiWinService: int getTaskCountAtPos(int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.Plugin: void setFileName(java.lang.String)>:<public>:<android.webkit.Plugin>
<android.app.LoadedApk.ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>:<>:<android.app.LoadedApk.ReceiverDispatcher>
<android.print.PageRange.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.net.Network: void <init>(android.net.Network)>:<public>:<android.net.Network:android.os.Parcelable>
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.net.wifi.WifiCHRStateManager: boolean isValidHardwareAddr(java.lang.String)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.net.INetworkStatsService.Stub.Proxy: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>:<public>:<android.net.INetworkStatsService.Stub.Proxy:android.net.INetworkStatsService>
<android.filterfw.core.AsyncRunner: void access.200(android.filterfw.core.AsyncRunner,boolean)>:<static>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.R.interpolator: void <init>()>:<public>:<android.R.interpolator>
<android.app.SharedPreferencesImpl.EditorImpl: void notifyListeners(android.app.SharedPreferencesImpl.MemoryCommitResult)>:<private>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.app.backup.BackupAgent.FailRunnable: void run()>:<public>:<android.app.backup.BackupAgent.FailRunnable:java.lang.Runnable>
<android.os.INetworkManagementService: void setFirewallUidRule(int,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.IActivityManager: void registerTaskStackListener(android.app.ITaskStackListener)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>:<public static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.renderscript.Float4: void copyTo(float[],int)>:<public>:<android.renderscript.Float4>
<android.transition.SidePropagation: void setPropagationSpeed(float)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>:<public static>:<android.net.NetworkUtils>
<android.graphics.Movie: void finalize()>:<protected>:<android.graphics.Movie>
<android.app.ApplicationThreadProxy: void profilerControl(boolean,android.app.ProfilerInfo,int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.net.wifi.WifiEnterpriseConfig.Eap: void <init>()>:<private>:<android.net.wifi.WifiEnterpriseConfig.Eap>
<android.app.UiAutomationConnection: void <init>()>:<public>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Region: void recycle()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.renderscript.FieldPacker: android.renderscript.Float4 subFloat4()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Path: void native_addRoundRect(long,float,float,float,float,float,float,int)>:<private static native>:<android.graphics.Path>
<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper: void initialMenuPopupHelper(android.content.Context,android.util.AttributeSet,com.android.internal.view.menu.MenuPopupHelper)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwMenuPopupHelper>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.IPrintManager.Stub.Proxy: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.net.INetworkScoreService.Stub.Proxy: boolean clearScores()>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.renderscript.Short4: void <init>(android.renderscript.Short4)>:<public>:<android.renderscript.Short4>
<android.os.BatteryStats: long getWifiStateTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.print.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)>:<public final>:<android.print.PrinterDiscoverySession>
<android.app.backup.IBackupManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.backup.IBackupManager.Stub:android.os.Binder,android.app.backup.IBackupManager>
<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()>:<public>:<android.app.LocalActivityManager>
<android.app.UiAutomation: java.util.List getWindows()>:<public>:<android.app.UiAutomation>
<android.net.LocalSocketImpl: int access.400(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.transition.Transition: android.transition.Transition excludeTarget(int,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.LoaderManagerImpl.LoaderInfo: void finishRetain()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.os.Binder: void <clinit>()>:<static>:<android.os.Binder:android.os.IBinder>
<android.net.http.CertificateChainValidator: void <init>(android.net.http.CertificateChainValidator.1)>:<>:<android.net.http.CertificateChainValidator>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onGetPrintJobInfosResult(java.util.List,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.print.PageRange: boolean equals(java.lang.Object)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable.ScaleState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ScaleDrawable.ScaleState:android.graphics.drawable.Drawable.ConstantState>
<android.app.LoadedApk.ServiceDispatcher: void connected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.app.LoadedApk.ServiceDispatcher>
<android.os.Process: android.os.Process.ProcessStartResult startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>:<private static>:<android.os.Process>
<android.net.NetworkUtils: android.util.Pair parseIpAndMask(java.lang.String)>:<public static>:<android.net.NetworkUtils>
<android.ddm.DdmHandleNativeHeap: void <clinit>()>:<static>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>:<public abstract>:<android.os.IBinder>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceDown(java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.PorterDuffColorFilter: int getColor()>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.IPermissionController.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.IPermissionController.Stub.Proxy:android.os.IPermissionController>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.FileUtils.1: void <init>()>:<>:<android.os.FileUtils.1:java.util.Comparator>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManagerProxy: void stopLockTaskModeOnCurrent()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.job.JobInfo.1: void <init>()>:<>:<android.app.job.JobInfo.1:android.os.Parcelable.Creator>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.graphics.Outline: boolean canClip()>:<public>:<android.graphics.Outline>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.os.IBinder>
<android.opengl.GLErrorWrapper: void glBlendEquation(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>:<public>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.net.wifi.WifiNetworkConnectionStatistics: java.lang.String toString()>:<public>:<android.net.wifi.WifiNetworkConnectionStatistics:android.os.Parcelable>
<android.net.wifi.WifiManager.MulticastLock: void release()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.Dialog: void setDismissMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.job.JobService.JobHandler: void ackStartMessage(android.app.job.JobParameters,boolean)>:<private>:<android.app.job.JobService.JobHandler:android.os.Handler>
<android.webkit.WebSettings.ZoomDensity: void <init>(java.lang.String,int,int)>:<private>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.graphics.drawable.AnimatedVectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.transition.ChangeTransform.1: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeTransform.1:android.util.Property>
<android.net.MobileLinkQualityInfo: void setGsmErrorRate(int)>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.transition.Crossfade: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.app.Fragment: android.transition.Transition getReturnTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.Visibility.VisibilityInfo: void <init>(android.transition.Visibility.1)>:<>:<android.transition.Visibility.VisibilityInfo>
<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.hwcontrol.HwWidgetFactory: android.hwcontrol.HwWidgetFactory.HwToast getHwToast(android.content.Context,android.widget.Toast,android.util.AttributeSet)>:<public static>:<android.hwcontrol.HwWidgetFactory>
<android.app.ActivityManager.RunningAppProcessInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>:<public final>:<android.renderscript.RenderScript>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebSettings: boolean enableSmoothTransition()>:<public abstract>:<android.webkit.WebSettings>
<android.app.IStopUserCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IStopUserCallback.Stub:android.os.Binder,android.app.IStopUserCallback>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.WifiCHRStateManager: java.lang.String transeLongToString(long)>:<private>:<android.net.wifi.WifiCHRStateManager>
<android.renderscript.Int3: void add(int)>:<public>:<android.renderscript.Int3>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>:<public static>:<android.accounts.AccountManager>
<android.renderscript.Allocation: android.renderscript.Type typeFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl)>:<static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>:<public>:<android.app.TaskStackBuilder>
<android.filterfw.core.GLEnvironment: boolean nativeRemoveSurfaceId(int)>:<private native>:<android.filterfw.core.GLEnvironment>
<android.net.MobileLinkQualityInfo: int getGsmErrorRate()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.opengl.GLLogWrapper: void glActiveTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManager.StackInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.StackInfo:android.os.Parcelable>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedClosableObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>:<public>:<android.app.backup.RestoreSession>
<android.app.ISearchManager: android.content.ComponentName getGlobalSearchActivity()>:<public abstract>:<android.app.ISearchManager:android.os.IInterface>
<android.app.IWallpaperManagerCallback.Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>:<public static>:<android.app.IWallpaperManagerCallback.Stub:android.os.Binder,android.app.IWallpaperManagerCallback>
<android.app.FragmentBreadCrumbs: int getPreEntryCount()>:<private>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.FragmentState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.FragmentState:android.os.Parcelable>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>:<public static>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.VectorDrawable.VPathRenderer: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Byte4: void sub(android.renderscript.Byte4)>:<public>:<android.renderscript.Byte4>
<android.net.RouteInfo.1: android.net.RouteInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.RouteInfo.1:android.os.Parcelable.Creator>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivityAsCaller(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,int)>:<public>:<android.app.Instrumentation>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLContextFactory access.400(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.os.IMultiWinServiceCallBack.Stub.Proxy: void multiWindowStatus(boolean)>:<public>:<android.os.IMultiWinServiceCallBack.Stub.Proxy:android.os.IMultiWinServiceCallBack>
<android.webkit.WebView: void setFindDialogFindListener(android.webkit.WebView.FindListener)>:<>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.backup.RestoreSession.RestoreObserverWrapper: void <init>(android.app.backup.RestoreSession,android.content.Context,android.app.backup.RestoreObserver)>:<>:<android.app.backup.RestoreSession.RestoreObserverWrapper:android.app.backup.IRestoreObserver.Stub,android.os.Binder>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)>:<public>:<android.app.TaskStackBuilder>
<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>:<public static>:<android.os.FileUtils>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String toString()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse:android.net.wifi.p2p.nsd.WifiP2pServiceResponse>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ProgressDialog: java.text.NumberFormat access.300(android.app.ProgressDialog)>:<static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.HwWifiCHRService: void uploadConnFailureCHR(int)>:<private>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.renderscript.RenderScript: int nFileA3DGetNumIndexEntries(long)>:<>:<android.renderscript.RenderScript>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.IMultiWinService.Stub.Proxy: void setMWOtherTaskID(android.os.IBinder,int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.webkit.WebViewProvider: boolean savePicture(android.os.Bundle,java.io.File)>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.JsDialogHelper: android.webkit.JsPromptResult access.100(android.webkit.JsDialogHelper)>:<static>:<android.webkit.JsDialogHelper>
<android.graphics.Matrix: boolean equals(java.lang.Object)>:<public>:<android.graphics.Matrix>
<android.graphics.Canvas: void nativeDrawBitmapMesh(long,long,int,int,float[],int,int[],int,long)>:<private static native>:<android.graphics.Canvas>
<android.os.BatteryStats: int getHistoryStringPoolSize()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.storage.StorageVolume: boolean isRemovable()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.graphics.Canvas: boolean native_clipRect(long,float,float,float,float,int)>:<private static native>:<android.graphics.Canvas>
<android.renderscript.Float2: float get(int)>:<public>:<android.renderscript.Float2>
<android.os.BatteryStats.HistoryItem: void setTo(long,byte,android.os.BatteryStats.HistoryItem)>:<public>:<android.os.BatteryStats.HistoryItem:android.os.Parcelable>
<android.app.IActivityManager: long[] getProcessPss(int[])>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.drawable.VectorDrawable.VClipPath: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable.VClipPath:android.graphics.drawable.VectorDrawable.VPath>
<android.app.INotificationManager: android.service.notification.Condition[] getAutomaticZenModeConditions()>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.LayerDrawable.LayerState createConstantState(android.graphics.drawable.LayerDrawable.LayerState,android.content.res.Resources)>:<volatile>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.UiAutomationConnection: boolean isConnectedLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.renderscript.RenderScript: void nScriptSetVarVE(long,int,byte[],long,int[])>:<>:<android.renderscript.RenderScript>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.os.CancellationSignal.Transport: void <init>()>:<private>:<android.os.CancellationSignal.Transport:android.os.ICancellationSignal.Stub,android.os.Binder>
<android.app.admin.IDevicePolicyManager: void lockNow()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.renderscript.Float3: void mul(float)>:<public>:<android.renderscript.Float3>
<android.ddm.DdmHandleViewDebug: void register()>:<public static>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.ResultReceiver.MyResultReceiver: void send(int,android.os.Bundle)>:<public>:<android.os.ResultReceiver.MyResultReceiver:com.android.internal.os.IResultReceiver.Stub>
<android.renderscript.Byte4: byte dotProduct(android.renderscript.Byte4,android.renderscript.Byte4)>:<public static>:<android.renderscript.Byte4>
<android.os.MessageQueue: boolean nativeIsIdling(long)>:<private static native>:<android.os.MessageQueue>
<android.renderscript.Short3: void addMultiple(android.renderscript.Short3,short)>:<public>:<android.renderscript.Short3>
<android.os.IUserManager.Stub.Proxy: android.content.pm.UserInfo getUserInfo(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.os.PatternMatcher.1: android.os.PatternMatcher createFromParcel(android.os.Parcel)>:<public>:<android.os.PatternMatcher.1:android.os.Parcelable.Creator>
<android.app.Notification.Builder: java.util.ArrayList access.1900(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.graphics.NinePatch: android.graphics.Paint getPaint()>:<public>:<android.graphics.NinePatch>
<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.net.Uri.HierarchicalUri: java.util.List getPathSegments()>:<public>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ProgressDialog: boolean isIndeterminate()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.ActivityManager.RunningTaskInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.ActivityManager.RunningTaskInfo.1:android.os.Parcelable.Creator>
<android.app.BackStackRecord: void excludeHiddenFragments(java.util.ArrayList,int,android.transition.Transition)>:<private>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiScanner.ScanSettings.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiScanner.ScanSettings.1:android.os.Parcelable.Creator>
<android.net.NetworkMisc: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkMisc:android.os.Parcelable>
<android.net.ConnectivityManager: void reportBadNetwork(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.core.SyncRunner: int determinePostRunState()>:<protected>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.filterfw.core.NativeProgram: boolean allocate()>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.hwcontrol.HwWidgetFactory.Factory: android.hwcontrol.HwWidgetFactory.HwTextView newHwTextView(android.content.Context,android.widget.TextView,android.util.AttributeSet)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl.30: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.30:android.app.ContextImpl.ServiceFetcher>
<android.os.UserHandle: int hashCode()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterByStatus(int)>:<public>:<android.app.DownloadManager.Query>
<android.os.IHDMIConnectService: void setReproductionHeightRatio(float)>:<public abstract>:<android.os.IHDMIConnectService:android.os.IInterface>
<android.net.wifi.WifiManager: java.util.List getPrivilegedConfiguredNetworks()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.drawable.BitmapDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.net.IConnectivityManager: android.net.Network getNetworkForType(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.graphics.Matrix: void native_postSkew(long,float,float)>:<private static native>:<android.graphics.Matrix>
<android.hsm.HwSystemManager: boolean shouldInterceptAudience(java.lang.String[],java.lang.String)>:<public static>:<android.hsm.HwSystemManager>
<android.database.sqlite.SQLiteProgram: void clearBindings()>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.renderscript.Double3: void set(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.renderscript.Matrix3f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.BatteryStats.LongCounter: void <init>()>:<public>:<android.os.BatteryStats.LongCounter>
<android.opengl.ETC1Util: void <init>()>:<public>:<android.opengl.ETC1Util>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.graphics.drawable.LevelListDrawable.LevelListState: void <init>(android.graphics.drawable.LevelListDrawable.LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources)>:<>:<android.graphics.drawable.LevelListDrawable.LevelListState:android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.app.IBackupAgent.Stub.Proxy: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public>:<android.app.IBackupAgent.Stub.Proxy:android.app.IBackupAgent>
<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.app.ActionBar: void removeTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: android.view.View getView()>:<public>:<android.app.ActivityTransitionCoordinator.GhostViewListeners:android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.NinePatchDrawable: void clearMutated()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.transition.PathMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.PathMotion>
<android.graphics.Paint: int native_getTextGlyphs(long,java.lang.String,int,int,int,int,int,char[])>:<private static native>:<android.graphics.Paint>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.filterfw.core.FrameFormat: int getHeight()>:<public>:<android.filterfw.core.FrameFormat>
<android.graphics.RectF.1: void <init>()>:<>:<android.graphics.RectF.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteConnection: java.lang.String nativeExecuteForString(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.os.UEventObserver: void access.200(java.lang.String)>:<static>:<android.os.UEventObserver>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityThread.ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.webkit.WebViewFragment: void onResume()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.filterfw.core.Filter: void initFinalPorts(android.filterfw.core.KeyValueMap)>:<private final>:<android.filterfw.core.Filter>
<android.os.Debug: int getGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getOpticalInsets()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.transition.ChangeText.4: void <init>(android.transition.ChangeText,android.widget.TextView,int)>:<>:<android.transition.ChangeText.4:android.animation.ValueAnimator.AnimatorUpdateListener>
<android.net.INetworkPolicyManager: void addUidPolicy(int,int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.app.UiAutomation.AccessibilityEventFilter: boolean accept(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.app.UiAutomation.AccessibilityEventFilter>
<android.os.INetworkManagementService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.graphics.Interpolator.Result: void <init>(java.lang.String,int)>:<private>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.app.Activity: void setResult(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.webkit.PluginList: java.util.List getList()>:<public>:<android.webkit.PluginList>
<android.opengl.GLES20: void glCompileShader(int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.EGLExt: void _nativeClassInit()>:<private static native>:<android.opengl.EGLExt>
<android.app.backup.RestoreDescription.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.backup.RestoreDescription.1:android.os.Parcelable.Creator>
<android.transition.ChangeText.5: void onAnimationCancel(android.animation.Animator)>:<public>:<android.transition.ChangeText.5:android.animation.AnimatorListenerAdapter>
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.print.PrintJobInfo: void <init>(android.print.PrintJobInfo)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.print.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>:<public final>:<android.print.PrinterDiscoverySession>
<android.net.Uri.AbstractHierarchicalUri: int parsePort()>:<private>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.opengl.GLLogWrapper: void glPolygonOffsetx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.LoadedApk: void removeContextRegistrations(android.content.Context,java.lang.String,java.lang.String)>:<public>:<android.app.LoadedApk>
<android.net.wifi.WifiConfiguration: java.util.BitSet access.000(android.os.Parcel)>:<static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.ActivityManager: void <clinit>()>:<static>:<android.app.ActivityManager>
<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>:<public>:<android.appwidget.AppWidgetHost>
<android.database.CursorWindow.1: void <init>()>:<>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.os.CommonTimeConfig: int setMasterElectionGroupId(long)>:<public>:<android.os.CommonTimeConfig>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.RemoteCallback: void onResult(android.os.Bundle)>:<protected abstract>:<android.os.RemoteCallback:android.os.Parcelable>
<android.graphics.Path: void native_addPath(long,long,float,float)>:<private static native>:<android.graphics.Path>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>:<public>:<android.graphics.NinePatch>
<android.graphics.LargeBitmap: void nativeClean(long)>:<private static native>:<android.graphics.LargeBitmap>
<android.renderscript.RSTextureView: void setRenderScriptGL(android.renderscript.RenderScriptGL)>:<public>:<android.renderscript.RSTextureView:android.view.TextureView,android.view.View,android.view.TextureView.SurfaceTextureListener>
<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl: void <init>()>:<private>:<android.net.wifi.HwCustBaseWifiFactory.DummyFactoryImpl:android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.graphics.drawable.Ripple: void <clinit>()>:<static>:<android.graphics.drawable.Ripple>
<android.accessibilityservice.AccessibilityServiceInfo: void updateDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.database.BulkCursorNative: void <init>()>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.os.IMultiWinService.Stub.Proxy: java.util.List getMWAppNames()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder:android.renderscript.Program.BaseProgramBuilder>
<android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[])>:<private>:<android.app.Notification.Action.Builder>
<android.net.arp.MultiGW: void setGWMACAddr(byte[])>:<public>:<android.net.arp.MultiGW>
<android.renderscript.RenderScript: long rsnElementCreate2(long,long[],java.lang.String[],int[])>:<native>:<android.renderscript.RenderScript>
<android.graphics.pdf.PdfEditor: void throwIfClosed()>:<private>:<android.graphics.pdf.PdfEditor>
<android.net.wifi.WifiManager: android.net.wifi.PPPOEInfo getPPPOEInfo()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ActivityThread.ApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityPendingResult.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.app.IActivityPendingResult.Stub:android.os.Binder,android.app.IActivityPendingResult>
<android.graphics.Bitmap: int getAllocationByteCount()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.print.PrinterInfo: java.lang.String getName()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.os.CommonTimeConfig: int getMasterAnnounceInterval()>:<public>:<android.os.CommonTimeConfig>
<android.ddm.DdmHandleViewDebug: android.view.View getTargetView(android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.drawable.Animatable: boolean isRunning()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.hwtheme.HwThemeManager: void updateResolveInfoIconCache(android.content.pm.ResolveInfo,int,java.lang.String)>:<public static>:<android.hwtheme.HwThemeManager>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.IUiAutomationConnection.Stub: android.app.IUiAutomationConnection asInterface(android.os.IBinder)>:<public static>:<android.app.IUiAutomationConnection.Stub:android.os.Binder,android.app.IUiAutomationConnection>
<android.net.wifi.WifiManager.MulticastLock: void <init>(android.net.wifi.WifiManager,java.lang.String,android.net.wifi.WifiManager.1)>:<>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.admin.IDevicePolicyManager: boolean isAdminActive(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.nsd.NsdServiceInfo: int getPort()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.transition.Transition: boolean canRemoveViews()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Activity: void setMediaController(android.media.session.MediaController)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.WallpaperManager: void clear()>:<public>:<android.app.WallpaperManager>
<android.app.UiModeManager: int getNightMode()>:<public>:<android.app.UiModeManager>
<android.os.storage.StorageManager.MountServiceBinderListener: void onUsbMassStorageConnectionChanged(boolean)>:<public>:<android.os.storage.StorageManager.MountServiceBinderListener:android.os.storage.IMountServiceListener.Stub,android.os.Binder>
<android.app.IWallpaperManager.Stub.Proxy: void setDimensionHints(int,int)>:<public>:<android.app.IWallpaperManager.Stub.Proxy:android.app.IWallpaperManager>
<android.appwidget.AppWidgetHostView: void <clinit>()>:<static>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.FragmentBreadCrumbs: android.app.BackStackRecord createBackStackEntry(java.lang.CharSequence,java.lang.CharSequence)>:<private>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.os.INetworkManagementService.Stub.Proxy: boolean isBandwidthControlEnabled()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.INetworkManagementService.Stub.Proxy: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.net.NetworkStatsHistory: void recordHistory(android.net.NetworkStatsHistory,long,long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.'annotation'.IntDef: boolean flag()>:<public abstract>:<android.annotation.IntDef:java.lang.annotation.Annotation>
<android.renderscript.Double3: void div(android.renderscript.Double3)>:<public>:<android.renderscript.Double3>
<android.net.IConnectivityManager: boolean isActiveNetworkMetered()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.filterfw.core.SyncRunner: java.lang.Exception getError()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.app.SearchDialog: void updateUI()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.filterfw.core.Frame: int getRefCount()>:<public>:<android.filterfw.core.Frame>
<android.renderscript.ScriptIntrinsic3DLUT: void <init>(long,android.renderscript.RenderScript,android.renderscript.Element)>:<private>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ExitTransitionCoordinator: void sharedElementTransitionComplete()>:<private>:<android.app.ExitTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.Fragment: void setIndex(int,android.app.Fragment)>:<final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Debug: java.lang.String getGpuInfo()>:<public static final native>:<android.os.Debug>
<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.mtp.MtpPropertyGroup: void <init>(android.mtp.MtpDatabase,android.content.IContentProvider,java.lang.String,java.lang.String,int[])>:<public>:<android.mtp.MtpPropertyGroup>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.ChooseAccountTypeActivity.AuthInfo: void <init>(android.accounts.AuthenticatorDescription,java.lang.String,android.graphics.drawable.Drawable)>:<>:<android.accounts.ChooseAccountTypeActivity.AuthInfo>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkInfo: java.lang.String access.702(android.net.NetworkInfo,java.lang.String)>:<static>:<android.net.NetworkInfo:android.os.Parcelable>
<android.os.BatteryStats.Uid.Proc: int getNumCrashes(int)>:<public abstract>:<android.os.BatteryStats.Uid.Proc>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path.Op)>:<public>:<android.graphics.Path>
<android.renderscript.Long2: void sub(android.renderscript.Long2)>:<public>:<android.renderscript.Long2>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterfw.geometry.Quad: boolean IsInUnitRange()>:<public>:<android.filterfw.geometry.Quad>
<android.os.Debug: int getBinderLocalObjectCount()>:<public static final native>:<android.os.Debug>
<android.renderscript.ScriptIntrinsicResize: void <init>(long,android.renderscript.RenderScript)>:<private>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.os.IMultiWinService.Stub.Proxy: int updateMultiWinPosition(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.database.MergeCursor: void deactivate()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Activity: boolean isResumed()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.Plugin: void dispatchClickEvent(android.content.Context)>:<public>:<android.webkit.Plugin>
<android.net.DhcpResults.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.DhcpResults.1:android.os.Parcelable.Creator>
<android.graphics.Rect.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.Rect.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: void native_setBitmap(long,long,boolean)>:<private static native>:<android.graphics.Canvas>
<android.app.Notification.Style: void populateContentView(android.app.Notification)>:<protected>:<android.app.Notification.Style>
<android.os.WorkSource.1: android.os.WorkSource createFromParcel(android.os.Parcel)>:<public>:<android.os.WorkSource.1:android.os.Parcelable.Creator>
<android.app.backup.BackupAgent.BackupServiceBinder: void <init>(android.app.backup.BackupAgent)>:<private>:<android.app.backup.BackupAgent.BackupServiceBinder:android.app.IBackupAgent.Stub,android.os.Binder>
<android.net.wifi.IHwCustWifiManager: void disableInternetNetwork(int,android.net.wifi.HwCustActionListener)>:<public abstract>:<android.net.wifi.IHwCustWifiManager>
<android.graphics.drawable.shapes.OvalShape: void <init>()>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.renderscript.Int4: void div(android.renderscript.Int4)>:<public>:<android.renderscript.Int4>
<android.net.wifi.p2p.WifiP2pDevice.1: android.net.wifi.p2p.WifiP2pDevice[] newArray(int)>:<public>:<android.net.wifi.p2p.WifiP2pDevice.1:android.os.Parcelable.Creator>
<android.graphics.Atlas.Type: android.graphics.Atlas.Type[] values()>:<public static>:<android.graphics.Atlas.Type:java.lang.Enum>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void destroyLocked()>:<private>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.net.wifi.HwWifiCHRService: void updateDhcpFailed()>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.DhcpResults: boolean addDns(java.lang.String)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.net.INetworkPolicyManager.Stub.Proxy: int getUidPolicy(int)>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.filterfw.core.GraphRunner: void deactivateGlContext()>:<protected>:<android.filterfw.core.GraphRunner>
<android.opengl.GLES11: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.app.SharedPreferencesImpl: void awaitLoaded()>:<public>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.webkit.WebViewFactoryProvider: android.webkit.WebIconDatabase getWebIconDatabase()>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.os.IMultiWinService.Stub.Proxy: boolean registerMWCallBack(android.os.IMultiWinServiceCallBack)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.ActivityManagerProxy: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.alsa.AlsaCardsParser: void <clinit>()>:<static>:<android.alsa.AlsaCardsParser>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup create()>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.webkit.WebViewProvider: void selectText()>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLErrorWrapper: void glScalef(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.NetworkStateTracker: android.net.LinkProperties getLinkProperties()>:<public abstract>:<android.net.NetworkStateTracker>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.NetworkPolicyManager: int getUidPolicy(int)>:<public>:<android.net.NetworkPolicyManager>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>:<public>:<android.app.Instrumentation>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.ISchedulingPolicyService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.os.ISchedulingPolicyService.Stub:android.os.Binder,android.os.ISchedulingPolicyService>
<android.graphics.Picture: void draw(android.graphics.Canvas)>:<public>:<android.graphics.Picture>
<android.net.wifi.WifiEnterpriseConfig: void <init>(android.net.wifi.WifiEnterpriseConfig)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSolid(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.IEthernetManager.Stub: android.os.IBinder asBinder()>:<public>:<android.net.IEthernetManager.Stub:android.os.Binder,android.net.IEthernetManager>
<android.renderscript.Element: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.trust.ITrustManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.trust.ITrustManager.Stub:android.os.Binder,android.app.trust.ITrustManager>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.INotificationManager: void notifyConditions(java.lang.String,android.service.notification.IConditionProvider,android.service.notification.Condition[])>:<public abstract>:<android.app.INotificationManager:android.os.IInterface>
<android.net.wifi.SupplicantState.1: android.net.wifi.SupplicantState createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.SupplicantState.1:android.os.Parcelable.Creator>
<android.app.ActivityManagerNative.1: void <init>()>:<>:<android.app.ActivityManagerNative.1:android.util.Singleton>
<android.app.LoadedApk.ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.net.IEthernetServiceListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.net.IEthernetServiceListener.Stub:android.os.Binder,android.net.IEthernetServiceListener>
<android.os.MemoryFile: boolean isPurgingAllowed()>:<public>:<android.os.MemoryFile>
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>:<public>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.trust.ITrustListener.Stub: android.os.IBinder asBinder()>:<public>:<android.app.trust.ITrustListener.Stub:android.os.Binder,android.app.trust.ITrustListener>
<android.webkit.WebIconDatabase: void <init>()>:<public>:<android.webkit.WebIconDatabase>
<android.filterfw.core.Frame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>:<>:<android.filterfw.core.Frame>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>:<public static>:<android.graphics.Typeface>
<android.os.RemoteException: void <init>(java.lang.String)>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Font.Style: android.renderscript.Font.Style valueOf(java.lang.String)>:<public static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.os.IVibratorService.Stub.Proxy: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>:<public>:<android.os.IVibratorService.Stub.Proxy:android.os.IVibratorService>
<android.app.Application: void dispatchActivityPaused(android.app.Activity)>:<>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.FileObserver: void <init>(java.lang.String,int)>:<public>:<android.os.FileObserver>
<android.renderscript.Float4: void addAt(int,float)>:<public>:<android.renderscript.Float4>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Rect: int centerY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.opengl.GLES31Ext: void <clinit>()>:<static>:<android.opengl.GLES31Ext>
<android.graphics.drawable.RippleBackground: boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.RippleBackground>
<android.os.WorkSource: android.os.WorkSource stripNames()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.opengl.GLUtils: int native_getType(android.graphics.Bitmap)>:<private static native>:<android.opengl.GLUtils>
<android.filterfw.core.SyncRunner: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.FilterGraph,java.lang.Class)>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.graphics.Matrix: void native_preRotate(long,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.net.http.RequestQueue: boolean requestsPending()>:<>:<android.net.http.RequestQueue:android.net.http.RequestFeeder>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.storage.StorageVolume: int getFatVolumeId()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.NetworkStats.Entry: void <init>(long,long,long,long,long)>:<public>:<android.net.NetworkStats.Entry>
<android.net.wifi.p2p.WifiP2pManager.Channel: void handleServiceResponse(android.net.wifi.p2p.nsd.WifiP2pServiceResponse)>:<private>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.opengl.GLLogWrapper: java.lang.String getPointerTypeName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.graphics.Picture: void nativeDraw(long,long)>:<private static native>:<android.graphics.Picture>
<android.app.Notification.Action.WearableExtender: java.lang.Object clone()>:<public volatile>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getInMemoryIcon()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.os.TokenWatcher.Death: void binderDied()>:<public>:<android.os.TokenWatcher.Death:android.os.IBinder.DeathRecipient>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>:<public>:<android.app.backup.RestoreObserver>
<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.net.SntpClient: long readTimeStamp(byte[],int)>:<private>:<android.net.SntpClient>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.renderscript.RenderScript: void rsnAllocationData3D(long,long,int,int,int,int,int,int,int,long,int,int,int,int)>:<native>:<android.renderscript.RenderScript>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.backup.IBackupManager: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.net.wifi.WifiLinkLayerStats: void <init>()>:<public>:<android.net.wifi.WifiLinkLayerStats:android.os.Parcelable>
<android.database.MergeCursor: boolean requery()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.ContextImpl.27: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.27:android.app.ContextImpl.ServiceFetcher>
<android.webkit.WebView: int getProgress()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.BatteryStats: long getWifiOnTime(long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.VoiceInteractor.AbortVoiceRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.AbortVoiceRequest:android.app.VoiceInteractor.Request>
<android.graphics.drawable.ScaleDrawable: float getPercent(android.content.res.TypedArray,int,float)>:<private static>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.http.DelegatingSSLSession: int getApplicationBufferSize()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient.LoggingConfiguration access.300(android.net.http.AndroidHttpClient)>:<static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.os.CommonTimeConfig: byte getMasterElectionPriority()>:<public>:<android.os.CommonTimeConfig>
<android.app.FragmentManagerImpl.3: void run()>:<public>:<android.app.FragmentManagerImpl.3:java.lang.Runnable>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.LoadedApk.ServiceDispatcher: void doForget()>:<>:<android.app.LoadedApk.ServiceDispatcher>
<android.app.Application.ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.net.DhcpStateMachine: com.android.internal.util.State access.900(android.net.DhcpStateMachine)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.os.CommonTimeConfig: void throwOnDeadServer()>:<private>:<android.os.CommonTimeConfig>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentAction(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.webkit.WebView: void refreshPlugins(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Color: int HSVToColor(float[])>:<public static>:<android.graphics.Color>
<android.os.CancellationSignal: void cancel()>:<public>:<android.os.CancellationSignal>
<android.filterfw.GraphEnvironment: void <init>()>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()>:<public>:<android.net.http.AndroidHttpClientConnection:org.apache.http.HttpInetConnection,org.apache.http.HttpConnection>
<android.transition.Scene: void enter()>:<public>:<android.transition.Scene>
<android.database.CursorWindow.1: android.database.CursorWindow[] newArray(int)>:<public>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.os.storage.IObbActionListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.storage.IObbActionListener.Stub.Proxy:android.os.storage.IObbActionListener>
<android.webkit.DateSorter: void <init>(android.content.Context)>:<public>:<android.webkit.DateSorter>
<android.print.PrintJobId: void <clinit>()>:<static>:<android.print.PrintJobId:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Double2: void add(double)>:<public>:<android.renderscript.Double2>
<android.sax.RootElement.Handler: void setDocumentLocator(org.xml.sax.Locator)>:<public>:<android.sax.RootElement.Handler:org.xml.sax.helpers.DefaultHandler>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.transition.ArcMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.database.BulkCursorDescriptor.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.renderscript.Short4: void addAt(int,short)>:<public>:<android.renderscript.Short4>
<android.accounts.AccountManager.1: java.lang.String bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.webkit.WebViewFactory: android.content.pm.PackageInfo getLoadedPackageInfo()>:<public static>:<android.webkit.WebViewFactory>
<android.app.AppGlobals: android.app.Application getInitialApplication()>:<public static>:<android.app.AppGlobals>
<android.graphics.Paint: int getColor()>:<public native>:<android.graphics.Paint>
<android.opengl.GLES30: void glReadBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins access.302(android.print.PrinterCapabilitiesInfo,android.print.PrintAttributes.Margins)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.database.DataSetObserver: void onChanged()>:<public>:<android.database.DataSetObserver>
<android.opengl.GLErrorWrapper: void glTexParameterf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityThread.ApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.renderscript.Double2: void set(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.app.ActionBar.TabListener: void onTabReselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.LinkProperties: boolean addStackedLink(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.Camera: void translate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.net.IEthernetManager: android.net.IpConfiguration getConfiguration()>:<public abstract>:<android.net.IEthernetManager:android.os.IInterface>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.renderscript.Byte3: void sub(byte)>:<public>:<android.renderscript.Byte3>
<android.os.ResultReceiver.1: void <init>()>:<>:<android.os.ResultReceiver.1:android.os.Parcelable.Creator>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.1200(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.opengl.GLLogWrapper: void glTexEnvi(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hwtheme.HwThemeManagerDummy: void updateIconCache(android.content.pm.PackageItemInfo,java.lang.String,java.lang.String,int,int)>:<public>:<android.hwtheme.HwThemeManagerDummy:android.hwtheme.HwThemeManager.IHwThemeManager>
<android.app.IActivityContainerCallback.Stub.Proxy: void onAllActivitiesComplete(android.os.IBinder)>:<public>:<android.app.IActivityContainerCallback.Stub.Proxy:android.app.IActivityContainerCallback>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.webkit.DateSorter: java.lang.String getLabel(int)>:<public>:<android.webkit.DateSorter>
<android.app.Dialog: void setCancelMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.net.NetworkStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public abstract>:<android.net.NetworkStateTracker>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.ActivityManager: void <init>(android.content.Context,android.os.Handler)>:<>:<android.app.ActivityManager>
<android.graphics.FontListParser.Family: void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String)>:<public>:<android.graphics.FontListParser.Family>
<android.graphics.Path: void rewind()>:<public>:<android.graphics.Path>
<android.os.Environment.UserEnvironment: java.io.File[] getExternalDirsForApp()>:<public>:<android.os.Environment.UserEnvironment>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.Drawable>
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLErrorWrapper: void glEnableClientState(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.MemoryFile.MemoryInputStream: void <init>(android.os.MemoryFile,android.os.MemoryFile.1)>:<>:<android.os.MemoryFile.MemoryInputStream:java.io.InputStream>
<android.net.IConnectivityManager: void reportInetCondition(int,int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.os.storage.IMountService: int getPasswordType()>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.transition.Crossfade: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Crossfade:android.transition.Transition>
<android.netdetect.HwCustNetDetectServiceImpl.3: void <clinit>()>:<static>:<android.netdetect.HwCustNetDetectServiceImpl.3>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>:<public>:<android.graphics.Paint>
<android.graphics.Rect: int height()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.hsm.HwSystemManager.HsmInterface: boolean shouldInterceptAudience(java.lang.String[],java.lang.String)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>:<public>:<android.graphics.Paint>
<android.database.sqlite.SQLiteDatabase: boolean isMainThread()>:<private static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterfw.core.GLEnvironment: void <init>(android.filterfw.core.NativeAllocatorTag)>:<private>:<android.filterfw.core.GLEnvironment>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.app.ActionBar: void setHideOnContentScrollEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.app.ActivityManager.CpuStatInfo: float getUserTimeRatio()>:<public>:<android.app.ActivityManager.CpuStatInfo:android.os.Parcelable>
<android.app.IUiModeManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.IUiModeManager.Stub.Proxy:android.app.IUiModeManager>
<android.database.sqlite.SQLiteConnectionPool: void reconfigureAllConnectionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.graphics.drawable.StateListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<private>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.IMultiWinService.Stub.Proxy: boolean isPartOfMultiWindow(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.net.ConnectivityManager: android.net.Network getNetworkForType(int)>:<public>:<android.net.ConnectivityManager>
<android.os.MemoryFile.MemoryOutputStream: void <init>(android.os.MemoryFile,android.os.MemoryFile.1)>:<>:<android.os.MemoryFile.MemoryOutputStream:java.io.OutputStream>
<android.app.ContextImpl: android.os.Looper getMainLooper()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.appwidget.AppWidgetHostView.1: void <init>()>:<>:<android.appwidget.AppWidgetHostView.1:android.view.LayoutInflater.Filter>
<android.database.MatrixCursor: java.lang.Object[] access.100(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.os.UpdateLock: void releaseLocked()>:<private>:<android.os.UpdateLock>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl.LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<private>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.webkit.CookieManager: boolean allowFileSchemeCookiesImpl()>:<protected abstract>:<android.webkit.CookieManager>
<android.graphics.drawable.Ripple: void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint)>:<private>:<android.graphics.drawable.Ripple>
<android.app.IActivityManager.WaitResult.1: android.app.IActivityManager.WaitResult createFromParcel(android.os.Parcel)>:<public>:<android.app.IActivityManager.WaitResult.1:android.os.Parcelable.Creator>
<android.graphics.Camera: void nativeConstructor()>:<private native>:<android.graphics.Camera>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.RenderScript: long rsnContextCreateGL(long,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>:<native>:<android.renderscript.RenderScript>
<android.database.sqlite.SQLiteProgram: void <clinit>()>:<static>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.renderscript.Int4: int get(int)>:<public>:<android.renderscript.Int4>
<android.accounts.AccountManager.AmsTask.Response: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.test.InstrumentationTestSuite: void <init>(java.lang.String,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.app.AlarmManager: void removeDeskClockAlarm()>:<public>:<android.app.AlarmManager>
<android.app.IAppTask.Stub.Proxy: void moveToFront()>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.graphics.FontListParser.Alias: void <init>()>:<public>:<android.graphics.FontListParser.Alias>
<android.database.MergeCursor: boolean onMove(int,int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>:<public>:<android.mtp.MtpDevice>
<android.app.ApplicationPackageManager: int getBadgeResIdForUser(int)>:<private>:<android.app.ApplicationPackageManager:android.content.pm.PackageManager>
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>:<protected>:<android.graphics.Canvas>
<android.graphics.Matrix: void <init>()>:<public>:<android.graphics.Matrix>
<android.app.IActivityPendingResult: boolean sendResult(int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.IActivityPendingResult:android.os.IInterface>
<android.net.wifi.IWifiManager.Stub.Proxy: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.renderscript.FileA3D: android.renderscript.FileA3D.IndexEntry getIndexEntry(int)>:<public>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.app.LoadedApk.WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>:<public>:<android.app.LoadedApk.WarningContextClassLoader:java.lang.ClassLoader>
<android.opengl.GLErrorWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.AnimatedRotateDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.SystemProperties: int native_get_int(java.lang.String,int)>:<private static native>:<android.os.SystemProperties>
<android.app.ActivityTransitionCoordinator: android.os.Bundle captureSharedElementState()>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.SELinux: boolean setSELinuxEnforce(boolean)>:<public static final native>:<android.os.SELinux>
<android.app.Activity: int getVolumeControlStream()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ListFragment: int getSelectedItemPosition()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.nsd.NsdManager: android.net.nsd.NsdServiceInfo access.300(android.net.nsd.NsdManager,int)>:<static>:<android.net.nsd.NsdManager>
<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.transition.TransitionUtils.MatrixEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.TransitionUtils.MatrixEvaluator:android.animation.TypeEvaluator>
<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>:<public>:<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver:android.content.IIntentReceiver.Stub>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.os.JankEventData: void <init>(android.os.Parcel)>:<private>:<android.os.JankEventData:android.os.Parcelable>
<android.os.StrictMode.VmPolicy: void <init>(int,java.util.HashMap,android.os.StrictMode.1)>:<>:<android.os.StrictMode.VmPolicy>
<android.net.wifi.WifiConfiguration: boolean isLinked(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.HwFindActionModeCallback: void access.200(android.webkit.HwFindActionModeCallback,android.widget.ImageView,android.graphics.drawable.Drawable)>:<static>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ActivityThread>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.WorkSource: boolean removeUids(android.os.WorkSource)>:<private>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit[] values()>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.accessibilityservice.IAccessibilityServiceClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceClient:android.os.IInterface>
<android.app.backup.IBackupManager.Stub.Proxy: void agentConnected(java.lang.String,android.os.IBinder)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.webkit.WebViewProvider.ViewDelegate: void onDraw(android.graphics.Canvas)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>:<static transient>:<android.app.ActivityThread>
<android.app.backup.RestoreDescription: java.lang.String getPackageName()>:<public>:<android.app.backup.RestoreDescription:android.os.Parcelable>
<android.app.Activity: android.app.Activity getParent()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityThread.ApplicationThread: void updateProcessState(int,boolean)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hwtheme.HwThemeManager.IHwThemeManager: int getShadowcolor(android.content.res.TypedArray,int)>:<public abstract>:<android.hwtheme.HwThemeManager.IHwThemeManager>
<android.graphics.Bitmap: boolean nativeWriteToParcel(long,boolean,int,android.os.Parcel)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnAllocationElementData1D(long,long,int,int,int,byte[],int)>:<native>:<android.renderscript.RenderScript>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.LauncherActivity.ActivityAdapter: void <init>(android.app.LauncherActivity,android.app.LauncherActivity.IconResizer)>:<public>:<android.app.LauncherActivity.ActivityAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pDeviceList.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.p2p.WifiP2pDeviceList.1:android.os.Parcelable.Creator>
<android.app.usage.ConfigurationStats: long getFirstTimeStamp()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.accounts.IAccountManager: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: void setPassword(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.ActivityTransitionCoordinator: boolean isNested(android.view.View,android.util.ArrayMap)>:<private static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.app.DatePickerDialog: void updateDate(int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.os.Debug: int getBinderDeathObjectCount()>:<public static final native>:<android.os.Debug>
<android.os.IBatteryPropertiesListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IBatteryPropertiesListener.Stub.Proxy:android.os.IBatteryPropertiesListener>
<android.graphics.Paint: void native_setStrokeCap(long,int)>:<private static native>:<android.graphics.Paint>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.print.ILayoutResultCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.ActivityThread: void handleCancelVisibleBehind(android.os.IBinder)>:<public>:<android.app.ActivityThread>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.INetworkPolicyManager: int getUidPolicy(int)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type.CubemapFace)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.net.INetworkManagementEventObserver: void addressRemoved(java.lang.String,android.net.LinkAddress)>:<public abstract>:<android.net.INetworkManagementEventObserver:android.os.IInterface>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>:<public static>:<android.webkit.WebStorage>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub: void <init>()>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceConnection>
<android.app.Activity: int getChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable.AnimationState,android.content.res.Resources)>:<private>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()>:<static>:<android.webkit.WebViewFactory>
<android.app.EnterTransitionCoordinator: void onTakeSharedElements()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>:<public>:<android.net.http.SslCertificate>
<android.os.Parcel: float readFloat()>:<public final>:<android.os.Parcel>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>:<public final>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.graphics.drawable.GradientDrawable.GradientState: void setGradientRadius(float,int)>:<public>:<android.graphics.drawable.GradientDrawable.GradientState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Presentation: void access.200(android.app.Presentation)>:<static>:<android.app.Presentation:android.app.Dialog>
<android.os.PersistableBundle.1: android.os.PersistableBundle[] newArray(int)>:<public>:<android.os.PersistableBundle.1:android.os.Parcelable.Creator>
<android.app.ContextImpl.29: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.29:android.app.ContextImpl.ServiceFetcher>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: long nAllocationCreateBitmapBackedAllocation(long,int,android.graphics.Bitmap,int)>:<>:<android.renderscript.RenderScript>
<android.os.StatFs: long getBlockCountLong()>:<public>:<android.os.StatFs>
<android.app.FragmentBreadCrumbs: void onMeasure(int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.UiAutomationConnection: void restoreRotationStateLocked()>:<private>:<android.app.UiAutomationConnection:android.app.IUiAutomationConnection.Stub,android.os.Binder>
<android.net.NetworkKey.1: void <init>()>:<>:<android.net.NetworkKey.1:android.os.Parcelable.Creator>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.renderscript.Float4: void <init>()>:<public>:<android.renderscript.Float4>
<android.webkit.URLUtil: void <clinit>()>:<static>:<android.webkit.URLUtil>
<android.renderscript.Double4: void sub(double)>:<public>:<android.renderscript.Double4>
<android.mtp.MtpObjectInfo: long getDateModified()>:<public final>:<android.mtp.MtpObjectInfo>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.pdf.PdfRenderer: long access.200(android.graphics.pdf.PdfRenderer)>:<static>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.webkit.WebSettings: boolean getAllowFileAccess()>:<public abstract>:<android.webkit.WebSettings>
<android.'annotation'.SuppressLint: java.lang.String[] value()>:<public abstract>:<android.annotation.SuppressLint:java.lang.annotation.Annotation>
<android.os.Handler: void <init>()>:<public>:<android.os.Handler>
<android.app.VoiceInteractor.Request: void <init>()>:<public>:<android.app.VoiceInteractor.Request>
<android.app.ActivityManagerProxy: boolean isUserAMonkey()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStarted(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void enableSystemApp(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.renderscript.Int4: android.renderscript.Int4 sub(android.renderscript.Int4,int)>:<public static>:<android.renderscript.Int4>
<android.transition.ChangeImageTransform: void <init>()>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.app.IActivityManager: void resizeStack(int,android.graphics.Rect)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.transition.TransitionManager: void transitionTo(android.transition.Scene)>:<public>:<android.transition.TransitionManager>
<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <clinit>()>:<static>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.graphics.Region: boolean equals(java.lang.Object)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.RippleBackground: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>:<public>:<android.graphics.drawable.RippleBackground>
<android.app.ActivityThread.ApplicationThread: void scheduleCancelVisibleBehind(android.os.IBinder)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.Matrix: void setRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.net.wifi.WifiConfiguration: boolean isValid()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.transition.ChangeScroll: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.app.ContextImpl: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>:<>:<android.app.ContextImpl:android.content.Context>
<android.webkit.CookieSyncManager: void startSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.graphics.Paint: android.graphics.Shader getShader()>:<public>:<android.graphics.Paint>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,boolean[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Element: void updateFromNative()>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.hsm.HwSystemManager.HsmDefImpl: android.location.Location getFakeLocation(java.lang.String)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.app.trust.ITrustManager.Stub: android.app.trust.ITrustManager asInterface(android.os.IBinder)>:<public static>:<android.app.trust.ITrustManager.Stub:android.os.Binder,android.app.trust.ITrustManager>
<android.app.IServiceConnection.Stub: void <init>()>:<public>:<android.app.IServiceConnection.Stub:android.os.Binder,android.app.IServiceConnection>
<android.net.dhcp.DhcpPacket: java.lang.String macToString(byte[])>:<public static>:<android.net.dhcp.DhcpPacket>
<android.app.LoaderManagerImpl: void updateActivity(android.app.Activity)>:<>:<android.app.LoaderManagerImpl:android.app.LoaderManager>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.os.storage.StorageVolume: boolean isPrimary()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>:<public>:<android.app.Notification.Builder>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.os.StrictMode: java.util.HashMap access.100()>:<static>:<android.os.StrictMode>
<android.filterfw.core.CachedFrameManager: void <init>()>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.net.LocalSocketImpl: void sendUrgentData(int)>:<protected>:<android.net.LocalSocketImpl>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.ProxyDataTracker.1: void <init>(android.net.ProxyDataTracker)>:<>:<android.net.ProxyDataTracker.1:android.content.BroadcastReceiver>
<android.net.wifi.WifiConnectionStatistics.1: android.net.wifi.WifiConnectionStatistics[] newArray(int)>:<public>:<android.net.wifi.WifiConnectionStatistics.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glLightModelfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.IActivityManager: java.util.List getAllStackInfos()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.WallpaperInfo: int describeContents()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.os.INetworkManagementService.Stub.Proxy: void setGlobalAlert(long)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.os.BatteryStats: long getPhoneDataConnectionTime(int,long,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>:<public transient>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.database.AbstractCursor: void finalize()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onWriteToDisk()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.net.wifi.RssiPacketCountInfo: void <init>()>:<public>:<android.net.wifi.RssiPacketCountInfo:android.os.Parcelable>
<android.net.StaticIpConfiguration.1: void <init>()>:<>:<android.net.StaticIpConfiguration.1:android.os.Parcelable.Creator>
<android.app.SearchDialog: boolean onClosePressed()>:<private>:<android.app.SearchDialog:android.app.Dialog>
<android.opengl.GLES10: void glStencilMask(int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glClientActiveTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.ProgressDialog: void setIndeterminate(boolean)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected>:<android.app.LauncherActivity.ActivityAdapter.ArrayFilter:android.widget.Filter>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.RegistrantList: void notifyException(java.lang.Throwable)>:<public>:<android.os.RegistrantList>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.opengl.GLErrorWrapper: void glOrthox(int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.WifiKey: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.WifiKey:android.os.Parcelable>
<android.filterfw.core.SyncRunner: void beginProcessing()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.app.ApplicationErrorReport: void <init>(android.os.Parcel)>:<>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.RippleDrawable: android.graphics.Paint getRipplePaint()>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.NetworkTemplate: void <clinit>()>:<static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.net.ProxyDataTracker: boolean teardown()>:<public>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.508(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,com.android.internal.content.ReferrerIntent)>:<public>:<android.app.Instrumentation>
<android.transition.ChangeBounds.1: void set(java.lang.Object,java.lang.Object)>:<public volatile>:<android.transition.ChangeBounds.1:android.util.Property>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: void syncAll(int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.AllocationAdapter: void subData(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteConnectionPool: void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.os.Parcel: void nativeSetDataSize(long,int)>:<private static native>:<android.os.Parcel>
<android.app.IApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.graphics.Path: void <init>(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.app.IActivityContainer: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteMisuseException: void <init>()>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.filterfw.GraphEnvironment: android.filterfw.core.GraphRunner getRunner(int,int)>:<public>:<android.filterfw.GraphEnvironment:android.filterfw.MffEnvironment>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.mtp.MtpDevice: void native_close()>:<private native>:<android.mtp.MtpDevice>
<android.app.AppOpsManager.PackageOps: int getUid()>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.graphics.drawable.VectorDrawable: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiConnectionStatistics: void <init>(android.net.wifi.WifiConnectionStatistics)>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>:<public abstract>:<android.net.wifi.p2p.IWifiP2pManager:android.os.IInterface>
<android.net.http.DelegatingSSLSession: java.lang.String getProtocol()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.net.INetworkStatsService.Stub: android.os.IBinder asBinder()>:<public>:<android.net.INetworkStatsService.Stub:android.os.Binder,android.net.INetworkStatsService>
<android.net.wifi.WifiInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.WifiInfo.1:android.os.Parcelable.Creator>
<android.os.Parcel: android.os.Parcel obtain()>:<public static>:<android.os.Parcel>
<android.app.Service: void onTrimMemory(int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.Debug.MemoryInfo: int getOtherPrivateClean(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.SharedPreferencesImpl: void startLoadFromDisk()>:<private>:<android.app.SharedPreferencesImpl:android.content.SharedPreferences>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.DownloadManager.Query: java.lang.String statusClause(java.lang.String,int)>:<private>:<android.app.DownloadManager.Query>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity[] values()>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.filterfw.core.GLFrame: void setTextureParameter(int,int)>:<public>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>:<public>:<android.os.UserManager>
<android.net.NetworkCapabilities: boolean equalsTransportTypes(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.backup.BackupTransport: android.content.Intent configurationIntent()>:<public>:<android.app.backup.BackupTransport>
<android.net.NetworkUtils: void <init>()>:<public>:<android.net.NetworkUtils>
<android.app.Activity: void performCreate(android.os.Bundle)>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.25: void <init>()>:<>:<android.app.ContextImpl.25:android.app.ContextImpl.ServiceFetcher>
<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator: float getInterpolation(float)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator:android.animation.TimeInterpolator>
<android.net.INetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.backup.FullBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FullBackupAgent:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.filterfw.core.FrameFormat: int getBytesPerSample()>:<public>:<android.filterfw.core.FrameFormat>
<android.net.Uri.1: android.net.Uri[] newArray(int)>:<public>:<android.net.Uri.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.mtp.MtpServer: void sendAllStorageInfoChangedIfNeed()>:<public>:<android.mtp.MtpServer:java.lang.Runnable>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.filterfw.core.SyncRunner: void scheduleFilterWake(android.filterfw.core.Filter,int)>:<protected>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.LoaderManagerImpl.LoaderInfo: void cancel()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.app.RemoteInput.1: android.app.RemoteInput[] newArray(int)>:<public>:<android.app.RemoteInput.1:android.os.Parcelable.Creator>
<android.webkit.WebViewClient: void onUnhandledInputEvent(android.webkit.WebView,android.view.InputEvent)>:<public>:<android.webkit.WebViewClient>
<android.app.DialogFragment: boolean isCancelable()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.net.wifi.WifiManager: int access.508(android.net.wifi.WifiManager)>:<static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.webkit.WebViewProvider: int getContentWidth()>:<public abstract>:<android.webkit.WebViewProvider>
<android.opengl.GLES10: void glTranslatex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.accounts.CantAddAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.net.MobileDataStateTracker: void access.700(android.net.MobileDataStateTracker,android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.IActivityManager: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.Uri.OpaqueUri: void <init>(java.lang.String,android.net.Uri.Part,android.net.Uri.Part,android.net.Uri.1)>:<>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.mtp.MtpObjectInfo: int getStorageId()>:<public final>:<android.mtp.MtpObjectInfo>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: android.renderscript.ProgramFragmentFixedFunction create()>:<public>:<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder:android.renderscript.Program.BaseProgramBuilder>
<android.graphics.Canvas: void freeTextLayoutCaches()>:<public static native>:<android.graphics.Canvas>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.net.wifi.WifiManager.ServiceHandler: void <init>(android.os.Looper)>:<>:<android.net.wifi.WifiManager.ServiceHandler:android.os.Handler>
<android.database.Cursor: boolean isClosed()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.net.wifi.HwWifiStatStore.SSIDStat: java.lang.String access.902(android.net.wifi.HwWifiStatStore.SSIDStat,java.lang.String)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.WifiManager: android.util.SparseArray getSlistenermap()>:<public static>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.app.ActivityManager.RunningTaskInfo.1: android.app.ActivityManager.RunningTaskInfo[] newArray(int)>:<public>:<android.app.ActivityManager.RunningTaskInfo.1:android.os.Parcelable.Creator>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType toEntryType(int)>:<static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.renderscript.Matrix3f: void <init>(float[])>:<public>:<android.renderscript.Matrix3f>
<android.filterfw.core.SerializedFrame.DirectByteOutputStream: void write(int)>:<public final>:<android.filterfw.core.SerializedFrame.DirectByteOutputStream:java.io.OutputStream>
<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager.CacheResult getSurrogate(java.lang.String,java.util.Map)>:<public static>:<android.webkit.UrlInterceptRegistry>
<android.appwidget.AppWidgetProviderInfo.1: android.appwidget.AppWidgetProviderInfo[] newArray(int)>:<public>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.net.Uri.StringUri: java.lang.String parsePath()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.webkit.WebView: void setTopVisitedHistory(java.lang.String[],int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.app.ContextImpl.2: void <init>(android.app.HwCustRegisterServiceHelper,java.lang.String)>:<>:<android.app.ContextImpl.2:android.app.ContextImpl.ServiceFetcher>
<android.net.wifi.WifiManager.TxPacketCountListener: void onSuccess(int)>:<public abstract>:<android.net.wifi.WifiManager.TxPacketCountListener>
<android.app.IActivityManager: boolean isTopOfTask(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.webkit.WebStorage.Origin: long getQuota()>:<public>:<android.webkit.WebStorage.Origin>
<android.os.IJankShield: void insertJankBd(android.os.JankBdData)>:<public abstract>:<android.os.IJankShield:android.os.IInterface>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.AppOpsManager.OpEntry: void <clinit>()>:<static>:<android.app.AppOpsManager.OpEntry:android.os.Parcelable>
<android.net.LocalSocketImpl: java.lang.String toString()>:<public>:<android.net.LocalSocketImpl>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.BatteryStats: java.util.Map getUidWakeLock(int)>:<public>:<android.os.BatteryStats:android.os.Parcelable>
<android.net.wifi.IWifiManager: int getWifiEnabledState()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.os.Trace: void nativeSetTracingEnabled(boolean)>:<private static native>:<android.os.Trace>
<android.net.Uri.Part: void <init>(java.lang.String,java.lang.String)>:<private>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.graphics.Matrix.1: boolean preConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ApplicationThreadProxy: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.Matrix: boolean preRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.renderscript.Double3: void setValues(double,double,double)>:<public>:<android.renderscript.Double3>
<android.appwidget.AppWidgetHost.Callbacks: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.net.TrafficStats: void setThreadStatsTagBackup()>:<public static>:<android.net.TrafficStats>
<android.webkit.WebView: void goBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1808(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>:<public static>:<android.graphics.drawable.Drawable>
<android.app.Notification: java.lang.String getSortKey()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.net.LinkQualityInfo: void writeToParcel(android.os.Parcel,int,int)>:<public>:<android.net.LinkQualityInfo:android.os.Parcelable>
<android.database.Cursor: short getShort(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.Canvas: int native_getSaveCount(long)>:<private static native>:<android.graphics.Canvas>
<android.net.DhcpResults: void setDomains(java.lang.String)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.ScriptIntrinsicConvolve5x5 create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Debug: void resetGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String)>:<public>:<android.os.UEventObserver.UEvent>
<android.os.ParcelUuid: java.util.UUID getUuid()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.Messenger.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.os.Messenger.1:android.os.Parcelable.Creator>
<android.graphics.Canvas: void rotate(float)>:<public>:<android.graphics.Canvas>
<android.graphics.FontFamily: boolean addFontWeightStyle(java.lang.String,int,boolean)>:<public>:<android.graphics.FontFamily>
<android.webkit.WebViewProvider: void requestImageRef(android.os.Message)>:<public abstract>:<android.webkit.WebViewProvider>
<android.database.CursorWindow: float getFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.ContextImpl: java.lang.String getPackageCodePath()>:<public>:<android.app.ContextImpl:android.content.Context>
<android.renderscript.Matrix3f: void translate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.accessibilityservice.AccessibilityServiceInfo.CapabilityInfo: void <init>(int,int,int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo.CapabilityInfo>
<android.os.PowerManager: void goToSleep(long)>:<public>:<android.os.PowerManager>
<android.renderscript.RenderScript.RSMessageHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES10>
<android.app.admin.IDevicePolicyManager: boolean hasUserSetupCompleted()>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.drm.DrmManagerClient.OnInfoListener: void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnInfoListener>
<android.net.wifi.WifiScanner: void stopTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)>:<public>:<android.net.wifi.WifiScanner>
<android.graphics.Atlas: android.graphics.Atlas.Entry pack(int,int)>:<public>:<android.graphics.Atlas>
<android.graphics.drawable.Drawable: boolean setLevel(int)>:<public final>:<android.graphics.drawable.Drawable>
<android.os.storage.IMountService.Stub.Proxy: java.lang.String getPassword()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.webkit.WebView: void onMeasure(int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.print.PrinterInfo: java.lang.String access.402(android.print.PrinterInfo,java.lang.String)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.net.SSLCertificateSocketFactory.1: void <init>()>:<>:<android.net.SSLCertificateSocketFactory.1:javax.net.ssl.X509TrustManager>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.os.BatteryStats: int getCpuSpeedSteps()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>:<public static>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.os.BatteryStats: int getPhoneOnCount(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.app.UiModeManager: void <clinit>()>:<static>:<android.app.UiModeManager>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.webkit.WebView: int computeHorizontalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.LocalSocketImpl: void create(int)>:<public>:<android.net.LocalSocketImpl>
<android.graphics.Paint: long native_setTypeface(long,long)>:<private static native>:<android.graphics.Paint>
<android.filterfw.core.SyncRunner: void run()>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.graphics.drawable.ColorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Byte3: byte length()>:<public>:<android.renderscript.Byte3>
<android.app.ContextImpl.25: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.25:android.app.ContextImpl.ServiceFetcher>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Fragment: android.os.Bundle getArguments()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.accounts.GrantCredentialsPermissionActivity: void <init>()>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.app.SearchableInfo: int getHintId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.os.Process: android.os.Process.ProcessStartResult zygoteSendArgsAndGetResult(android.os.Process.ZygoteState,java.util.ArrayList)>:<private static>:<android.os.Process>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.os.Parcel,android.app.IActivityManager.1)>:<>:<android.app.IActivityManager.ContentProviderHolder:android.os.Parcelable>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>:<public>:<android.webkit.WebViewClient>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Byte4: byte get(int)>:<public>:<android.renderscript.Byte4>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.usage.UsageEvents: void <init>(android.os.Parcel)>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.print.IPrintDocumentAdapter: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.graphics.drawable.Ripple: void clampStartingPosition()>:<private>:<android.graphics.drawable.Ripple>
<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.AbstractCursor: void onDeactivateOrClose()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.VpnService.Builder: android.net.VpnService.Builder setSession(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.database.MergeCursor: boolean isNull(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.JankEventData: int describeContents()>:<public>:<android.os.JankEventData:android.os.Parcelable>
<android.app.INotificationManager.Stub.Proxy: boolean areNotificationsEnabledForPackage(java.lang.String,int)>:<public>:<android.app.INotificationManager.Stub.Proxy:android.app.INotificationManager>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>:<public>:<android.os.TokenWatcher>
<android.app.Activity: void setPersistent(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)>:<public final>:<android.app.ActivityThread>
<android.os.INetworkManagementService.Stub.Proxy: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.IMultiWinService.Stub.Proxy: int setMultiWinSoftKeyBoardVisible(android.os.IBinder,int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.app.IAppTask.Stub.Proxy: int startActivity(android.os.IBinder,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>:<public>:<android.app.IAppTask.Stub.Proxy:android.app.IAppTask>
<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator: void <init>(android.graphics.drawable.AnimationDrawable,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator:android.animation.TimeInterpolator>
<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.StatusBarManager: void disable(int)>:<public>:<android.app.StatusBarManager>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1500(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.app.IActivityContainer: int getDisplayId()>:<public abstract>:<android.app.IActivityContainer:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pWfdInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int,int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.RssiPacketCountInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.net.wifi.RssiPacketCountInfo.1:android.os.Parcelable.Creator>
<android.graphics.Point: void negate()>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.renderscript.FieldPacker: void subalign(int)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>:<public static native>:<android.opengl.EGLExt>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.net.IConnectivityManager.Stub.Proxy: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Notification.Builder: boolean access.2300(android.app.Notification.Builder)>:<static>:<android.app.Notification.Builder>
<android.net.wifi.IWifiManager: void setSoftapDisassociateSta(java.lang.String)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.MediaRouteButton: boolean performClick()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.opengl.GLErrorWrapper: void glPointSize(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Path: android.renderscript.Path createDynamicPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation)>:<public static>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.database.DataSetObserver: void onInvalidated()>:<public>:<android.database.DataSetObserver>
<android.filterfw.core.FilterPort: void open()>:<public>:<android.filterfw.core.FilterPort>
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)>:<private>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.hwcontrol.HwWidgetFactory.HwDialogStub: int getMask()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwDialogStub>
<android.graphics.Rect: void scaleRoundIn(float)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.os.INetworkManagementService: void removeVpnUidRanges(int,android.net.UidRange[])>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.net.wifi.WifiScanner: int removeListener(java.lang.Object)>:<private static>:<android.net.wifi.WifiScanner>
<android.renderscript.Short3: void <init>()>:<public>:<android.renderscript.Short3>
<android.app.NativeActivity: long loadNativeCode(java.lang.String,java.lang.String,android.os.MessageQueue,java.lang.String,java.lang.String,java.lang.String,int,android.content.res.AssetManager,byte[])>:<private native>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.filterfw.core.FilterPort: boolean isReady()>:<public abstract>:<android.filterfw.core.FilterPort>
<android.app.IActivityManager: void addPackageDependency(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pManager.Channel: java.lang.Object access.000(android.net.wifi.p2p.WifiP2pManager.Channel,int)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.Drawable>
<android.os.BatteryStats: long getBatteryRealtime(long)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.graphics.CanvasProperty: android.graphics.CanvasProperty createFloat(float)>:<public static>:<android.graphics.CanvasProperty>
<android.os.IHDMIConnectService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.IHDMIConnectService.Stub.Proxy:android.os.IHDMIConnectService>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.transition.TransitionManager.MultiListener.1: void onTransitionEnd(android.transition.Transition)>:<public>:<android.transition.TransitionManager.MultiListener.1:android.transition.Transition.TransitionListenerAdapter>
<android.net.DhcpInfo: void <init>(android.net.DhcpInfo)>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory.PermissionInformation: android.widget.AppSecurityPermissions.PermissionItemView getHwPermItemView(boolean,android.view.LayoutInflater)>:<public static>:<android.hwcontrol.HwWidgetFactory.PermissionInformation>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordMinimumLength(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.Notification.Action.1: android.app.Notification.Action[] newArray(int)>:<public>:<android.app.Notification.Action.1:android.os.Parcelable.Creator>
<android.os.storage.StorageManager: void unregisterListener(android.os.storage.StorageEventListener)>:<public>:<android.os.storage.StorageManager>
<android.graphics.Region: boolean quickReject(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.filterfw.geometry.Rectangle: float getWidth()>:<public>:<android.filterfw.geometry.Rectangle:android.filterfw.geometry.Quad>
<android.net.IConnectivityManager: boolean isNetworkSupported(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES10: void glPointSize(float)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityManager.AppTask: void finishAndRemoveTask()>:<public>:<android.app.ActivityManager.AppTask>
<android.ddm.DdmHandleProfiling: void <clinit>()>:<static>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ActivityThread.DumpComponentInfo: void <init>()>:<>:<android.app.ActivityThread.DumpComponentInfo>
<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)>:<public static>:<android.app.ActivityManagerNative:android.os.Binder,android.app.IActivityManager>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.net.ConnectivityManager: void setAirplaneMode(boolean)>:<public>:<android.net.ConnectivityManager>
<android.filterfw.core.FilterPort: boolean filterMustClose()>:<public abstract>:<android.filterfw.core.FilterPort>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition: void stop()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedVectorDrawableTransition:android.graphics.drawable.AnimatedStateListDrawable.Transition>
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>:<public>:<android.os.ServiceManagerProxy:android.os.IServiceManager>
<android.webkit.PluginList: void removePlugin(android.webkit.Plugin)>:<public>:<android.webkit.PluginList>
<android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.IStopUserCallback.Stub: void <init>()>:<public>:<android.app.IStopUserCallback.Stub:android.os.Binder,android.app.IStopUserCallback>
<android.webkit.CookieManager: java.lang.Object clone()>:<protected>:<android.webkit.CookieManager>
<android.app.ContextImpl: void registerService(java.lang.String,android.app.ContextImpl.ServiceFetcher)>:<private static>:<android.app.ContextImpl:android.content.Context>
<android.net.ConnectivityManager.NetworkCallback: android.net.NetworkRequest access.300(android.net.ConnectivityManager.NetworkCallback)>:<static>:<android.net.ConnectivityManager.NetworkCallback>
<android.net.wifi.IWifiManager.Stub.Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.net.wifi.HwWifiCHRService: void handleMessage(android.os.Message)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.Matrix: void <clinit>()>:<static>:<android.opengl.Matrix>
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.BatteryManager: void <init>()>:<public>:<android.os.BatteryManager>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.net.NetworkCapabilities: long access.102(android.net.NetworkCapabilities,long)>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask.Response: void <init>(android.accounts.AccountManager.BaseFutureTask)>:<protected>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.net.INetworkStatsService.Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)>:<public static>:<android.net.INetworkStatsService.Stub:android.os.Binder,android.net.INetworkStatsService>
<android.app.IWallpaperManager: void setDimensionHints(int,int)>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.LinkAddress: int getFlags()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.os.FileObserver.ObserverThread: void stopWatching(int,int)>:<private native>:<android.os.FileObserver.ObserverThread:java.lang.Thread>
<android.renderscript.RenderScript: void rsnScriptSetVarF(long,long,int,float)>:<native>:<android.renderscript.RenderScript>
<android.graphics.Path: boolean native_isConvex(long)>:<private static native>:<android.graphics.Path>
<android.drm.DrmSupportInfo: void addMimeType(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.net.wifi.WifiLog.WiFiExceptionType: void <init>(java.lang.String,int)>:<private>:<android.net.wifi.WifiLog.WiFiExceptionType:java.lang.Enum>
<android.app.NativeActivity: void onDestroy()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.http.ConnectionThread: void requestStop()>:<>:<android.net.http.ConnectionThread:java.lang.Thread>
<android.net.http.Headers: void setExpires(java.lang.String)>:<public>:<android.net.http.Headers>
<android.renderscript.Byte2: void div(byte)>:<public>:<android.renderscript.Byte2>
<android.opengl.GLES10: void glScalex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.http.Connection: void closeConnection()>:<abstract>:<android.net.http.Connection>
<android.app.ActivityManagerProxy: void startLockTaskMode(int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.net.wifi.WifiEnterpriseConfig: java.security.PrivateKey getClientPrivateKey()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: long nAllocationCubeCreateFromBitmap(long,int,android.graphics.Bitmap,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.200(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.filterfw.core.OutputPort: java.lang.String toString()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.app.ContextImpl.23: java.lang.Object createService(android.app.ContextImpl)>:<public>:<android.app.ContextImpl.23:android.app.ContextImpl.ServiceFetcher>
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.os.PowerManager: boolean setPowerSaveMode(boolean)>:<public>:<android.os.PowerManager>
<android.app.Activity: boolean isDestroyed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.webkit.WebViewProvider: java.lang.String getOriginalUrl()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.WebViewFactory: boolean nativeReserveAddressSpace(long)>:<private static native>:<android.webkit.WebViewFactory>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Picture: int getWidth()>:<public>:<android.graphics.Picture>
<android.graphics.NinePatch: int getDensity()>:<public>:<android.graphics.NinePatch>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiScanner.WifiChangeSettings: void <clinit>()>:<static>:<android.net.wifi.WifiScanner.WifiChangeSettings:android.os.Parcelable>
<android.filterfw.core.GLFrame: boolean nativeDeallocate()>:<private native>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.renderscript.Path: android.renderscript.Allocation getVertexAllocation()>:<public>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.app.VoiceInteractor.1: void executeMessage(android.os.Message)>:<public>:<android.app.VoiceInteractor.1:com.android.internal.os.HandlerCaller.Callback>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteFinished(android.print.PageRange[],int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.os.Debug: void resetGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.RotateDrawable: void clearMutated()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.AnimatedRotateDrawable: void clearMutated()>:<public>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration(int)>:<final>:<android.app.ActivityThread>
<android.app.BackStackState: android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)>:<public>:<android.app.BackStackState:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glBlendFuncSeparate(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.StaticIpConfiguration.1: android.net.StaticIpConfiguration[] newArray(int)>:<public>:<android.net.StaticIpConfiguration.1:android.os.Parcelable.Creator>
<android.app.IActivityManager: boolean killProcessesBelowForeground(java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.IWallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.net.Uri.AbstractHierarchicalUri: int getPort()>:<public>:<android.net.Uri.AbstractHierarchicalUri:android.net.Uri>
<android.os.MessageQueue: boolean hasMessages(android.os.Handler,int,java.lang.Object)>:<>:<android.os.MessageQueue>
<android.opengl.EGL14: android.opengl.EGLSurface _eglCreateWindowSurfaceTexture(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<private static native>:<android.opengl.EGL14>
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.renderscript.Font.Style: android.renderscript.Font.Style[] values()>:<public static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.app.LoaderManagerImpl.LoaderInfo: void stop()>:<>:<android.app.LoaderManagerImpl.LoaderInfo:android.content.Loader.OnLoadCompleteListener,android.content.Loader.OnLoadCanceledListener>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2802(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void access.000(long)>:<static>:<android.graphics.Canvas>
<android.net.wifi.WifiConfiguration: void setHttpProxy(android.net.ProxyInfo)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.renderscript.Byte2: void mul(android.renderscript.Byte2)>:<public>:<android.renderscript.Byte2>
<android.app.AppOpsManager.OnOpChangedListener: void onOpChanged(java.lang.String,java.lang.String)>:<public abstract>:<android.app.AppOpsManager.OnOpChangedListener>
<android.opengl.GLSurfaceView.GLThread: void <init>(java.lang.ref.WeakReference)>:<>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.os.PowerManagerInternal: void setDozeOverrideFromDreamManager(int,int)>:<public abstract>:<android.os.PowerManagerInternal>
<android.opengl.GLES20: void glClearStencil(int)>:<public static native>:<android.opengl.GLES20>
<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.os.IBinder>
<android.app.admin.IDevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.backup.RestoreSet.1: android.app.backup.RestoreSet createFromParcel(android.os.Parcel)>:<public>:<android.app.backup.RestoreSet.1:android.os.Parcelable.Creator>
<android.filterfw.core.ProtocolException: void <init>(java.lang.String)>:<public>:<android.filterfw.core.ProtocolException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.IMultiWinService.Stub.Proxy: void releaseTokens(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.renderscript.Path: android.renderscript.Path.Primitive getPrimitive()>:<public>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element FONT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebViewFactory: void prepareWebViewInZygote()>:<public static>:<android.webkit.WebViewFactory>
<android.graphics.Region: boolean nativeGetBoundaryPath(long,long)>:<private static native>:<android.graphics.Region:android.os.Parcelable>
<android.net.Uri.OpaqueUri: void <init>(java.lang.String,android.net.Uri.Part,android.net.Uri.Part)>:<private>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.net.wifi.p2p.WifiP2pWfdInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.ActivityThread: void ensureJitEnabled()>:<>:<android.app.ActivityThread>
<android.os.IMultiWinService.Stub.Proxy: void updateMultiWinFrame(android.graphics.Rect)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.print.PrintDocumentInfo: void <init>(android.os.Parcel,android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.graphics.Canvas: void native_drawOval(long,float,float,float,float,long)>:<private static native>:<android.graphics.Canvas>
<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>:<public>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.os.Process: boolean parseProcLine(byte[],int,int,int[],java.lang.String[],long[],float[])>:<public static final native>:<android.os.Process>
<android.app.FragmentManager: void enableDebugLogging(boolean)>:<public static>:<android.app.FragmentManager>
<android.net.wifi.WifiScanner: void validateChannel()>:<private>:<android.net.wifi.WifiScanner>
<android.opengl.GLSurfaceView.LogWriter: void write(char[],int,int)>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.net.MobileDataStateTracker: android.net.NetworkInfo access.600(android.net.MobileDataStateTracker)>:<static>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.app.FragmentManager: boolean popBackStackImmediate(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.os.Bundle: void <init>(android.os.Parcel,int)>:<>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.Float2: void addMultiple(android.renderscript.Float2,float)>:<public>:<android.renderscript.Float2>
<android.webkit.JsResult: void wakeUp()>:<private final>:<android.webkit.JsResult>
<android.net.DhcpResults: boolean equals(java.lang.Object)>:<public>:<android.net.DhcpResults:android.net.StaticIpConfiguration>
<android.app.AbsWallpaperManager: void setCallback(android.app.AbsWallpaperManager.IBlurWallpaperCallback)>:<public>:<android.app.AbsWallpaperManager>
<android.drm.DrmManagerClient: void release()>:<public>:<android.drm.DrmManagerClient>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>:<public abstract>:<android.app.job.JobScheduler>
<android.mtp.MtpDatabase: void finalize()>:<protected>:<android.mtp.MtpDatabase>
<android.renderscript.Byte2: byte get(int)>:<public>:<android.renderscript.Byte2>
<android.net.INetworkScoreService.Stub.Proxy: boolean setActiveScorer(java.lang.String)>:<public>:<android.net.INetworkScoreService.Stub.Proxy:android.net.INetworkScoreService>
<android.transition.Recolor: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Recolor:android.transition.Transition>
<android.app.IActivityManager: boolean isInLockTaskMode()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityThread: void onCoreSettingsChange()>:<private>:<android.app.ActivityThread>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element I16_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.print.PrintManager: void restartPrintJob(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readVarLongArray(java.io.DataInputStream)>:<public static>:<android.net.NetworkStatsHistory.DataStreamUtils>
<android.net.wifi.IWifiManager.Stub.Proxy: int getAllowScansWithTraffic()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public abstract>:<android.accessibilityservice.IAccessibilityServiceConnection:android.os.IInterface>
<android.webkit.WebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.app.admin.IDevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.Uri.PathPart: android.net.Uri.PathSegments getPathSegments()>:<>:<android.net.Uri.PathPart:android.net.Uri.AbstractPart>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.app.job.JobService: boolean onStopJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.IActivityContainerCallback.Stub: android.app.IActivityContainerCallback asInterface(android.os.IBinder)>:<public static>:<android.app.IActivityContainerCallback.Stub:android.os.Binder,android.app.IActivityContainerCallback>
<android.os.StrictMode.ThreadSpanState: void <init>()>:<private>:<android.os.StrictMode.ThreadSpanState>
<android.net.http.SslCertificate: java.lang.String getSerialNumber(java.security.cert.X509Certificate)>:<private static>:<android.net.http.SslCertificate>
<android.net.IConnectivityManager.Stub.Proxy: void setVpnPackageAuthorization(boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.net.NetworkCapabilities: int hashCode()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create2D(android.renderscript.RenderScript,android.renderscript.Allocation)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.os.BatteryStats.TimerEntry: void <init>(java.lang.String,int,android.os.BatteryStats.Timer,long)>:<>:<android.os.BatteryStats.TimerEntry>
<android.app.INonHardwareAcceleratedPackagesManager: void setForceEnabled(java.lang.String,boolean)>:<public abstract>:<android.app.INonHardwareAcceleratedPackagesManager:android.os.IInterface>
<android.net.wifi.p2p.WifiP2pManager.Channel: int putListener(java.lang.Object)>:<private>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.net.NetworkStateTracker: boolean reconnect()>:<public abstract>:<android.net.NetworkStateTracker>
<android.renderscript.ScriptIntrinsicLUT: void setRed(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Parcel: int dataPosition()>:<public final>:<android.os.Parcel>
<android.renderscript.ScriptGroup: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.os.BatteryStats: java.lang.String printWakeLock(java.lang.StringBuilder,android.os.BatteryStats.Timer,long,java.lang.String,int,java.lang.String)>:<private static final>:<android.os.BatteryStats:android.os.Parcelable>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.filterfw.core.FilterGraph: void connectPorts()>:<private>:<android.filterfw.core.FilterGraph>
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.Bitmap: int getHeight()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<protected>:<android.os.Binder:android.os.IBinder>
<android.renderscript.Int3: android.renderscript.Int3 sub(android.renderscript.Int3,android.renderscript.Int3)>:<public static>:<android.renderscript.Int3>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>:<public>:<android.net.Uri.OpaqueUri:android.net.Uri>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.renderscript.Double4: void <init>(android.renderscript.Double4)>:<public>:<android.renderscript.Double4>
<android.app.ActivityThread.NewIntentData: void <init>()>:<>:<android.app.ActivityThread.NewIntentData>
<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.Message.1: android.os.Message createFromParcel(android.os.Parcel)>:<public>:<android.os.Message.1:android.os.Parcelable.Creator>
<android.net.http.IdleCache.IdleReaper: void <init>(android.net.http.IdleCache,android.net.http.IdleCache.1)>:<>:<android.net.http.IdleCache.IdleReaper:java.lang.Thread>
<android.renderscript.ScriptIntrinsicBlend: void <init>(long,android.renderscript.RenderScript)>:<>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLErrorWrapper: void glPointSizex(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.net.dhcp.DhcpStateMachine: void onInformReceived(int,byte[],java.net.InetAddress,byte[])>:<public abstract>:<android.net.dhcp.DhcpStateMachine>
<android.opengl.GLLogWrapper: void glClearColor(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.app.AppOpsManager: void finishOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.IUiAutomationConnection.Stub.Proxy: boolean injectInputEvent(android.view.InputEvent,boolean)>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.net.LocalSocketImpl: int access.100(android.net.LocalSocketImpl,java.io.FileDescriptor)>:<static>:<android.net.LocalSocketImpl>
<android.database.CursorWindow: boolean nativePutDouble(long,double,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.SearchDialog.2: void <init>(android.app.SearchDialog)>:<>:<android.app.SearchDialog.2:android.view.View.OnClickListener>
<android.app.IActivityManager: void killUid(int,java.lang.String)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES11Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES11Ext>
<android.app.SearchDialog.5: boolean onSuggestionSelect(int)>:<public>:<android.app.SearchDialog.5:android.widget.SearchView.OnSuggestionListener>
<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy: void onInterrupt()>:<public>:<android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceClient>
<android.net.http.Connection: void cancel()>:<>:<android.net.http.Connection>
<android.app.backup.IRestoreObserver.Stub.Proxy: void restoreSetsAvailable(android.app.backup.RestoreSet[])>:<public>:<android.app.backup.IRestoreObserver.Stub.Proxy:android.app.backup.IRestoreObserver>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>:<public>:<android.webkit.WebStorage>
<android.net.wifi.WifiConfiguration: void writeBitSet(android.os.Parcel,java.util.BitSet)>:<private static>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.Instrumentation: java.lang.Object access.200(android.app.Instrumentation)>:<static>:<android.app.Instrumentation>
<android.net.http.Request: void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpHost,java.lang.String,java.io.InputStream,int,android.net.http.EventHandler,java.util.Map)>:<>:<android.net.http.Request>
<android.os.storage.IObbActionListener.Stub.Proxy: void onObbResult(java.lang.String,int,int)>:<public>:<android.os.storage.IObbActionListener.Stub.Proxy:android.os.storage.IObbActionListener>
<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.webkit.WebViewProvider: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.ContextImpl.StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>:<public final>:<android.app.ContextImpl.StaticServiceFetcher:android.app.ContextImpl.ServiceFetcher>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.net.ConnectivityManager.LegacyRequest: void <init>(android.net.ConnectivityManager.1)>:<>:<android.net.ConnectivityManager.LegacyRequest>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int)>:<public static>:<android.filterfw.format.PrimitiveFormat>
<android.webkit.WebViewProvider: void loadData(java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.WebViewProvider>
<android.os.PerformanceCollector: void endPerformanceSnapshot()>:<private>:<android.os.PerformanceCollector>
<android.net.nsd.DnsSdTxtRecord: int keyCount()>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.os.Process: android.os.UserHandle myUserHandle()>:<public static final>:<android.os.Process>
<android.graphics.drawable.InsetDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.LoadedApk.ReceiverDispatcher: void access.200(android.app.LoadedApk.ReceiverDispatcher,android.app.ActivityThread.ActionTimeType)>:<static>:<android.app.LoadedApk.ReceiverDispatcher>
<android.renderscript.Float3: void div(float)>:<public>:<android.renderscript.Float3>
<android.filterfw.core.Filter: void initRemainingPorts(android.filterfw.core.KeyValueMap)>:<private final>:<android.filterfw.core.Filter>
<android.filterfw.core.Filter: void pushInputValue(java.lang.String,java.lang.Object)>:<final>:<android.filterfw.core.Filter>
<android.database.BulkCursorToCursorAdaptor: boolean onMove(int,int)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.filterfw.core.Filter: void releasePulledFrames(android.filterfw.core.FilterContext)>:<private final>:<android.filterfw.core.Filter>
<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>:<public>:<android.app.backup.RestoreSession>
<android.graphics.drawable.GradientDrawable: void updateGradientDrawablePadding(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.ContextImpl.41: void <init>()>:<>:<android.app.ContextImpl.41:android.app.ContextImpl.ServiceFetcher>
<android.app.backup.BackupManager: java.lang.String getCurrentTransport()>:<public>:<android.app.backup.BackupManager>
<android.os.JankBdData: void <clinit>()>:<static>:<android.os.JankBdData:android.os.Parcelable>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[])>:<public>:<android.net.LocalSocketImpl.SocketOutputStream:java.io.OutputStream>
<android.webkit.HwFindActionModeCallback: void findAll()>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.Region: boolean isEmpty()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.transition.Transition.1: android.graphics.Path getPath(float,float,float,float)>:<public>:<android.transition.Transition.1:android.transition.PathMotion>
<android.renderscript.RenderScript: void rsnAllocationRead2D(long,long,int,int,int,int,int,int,java.lang.Object,int,int)>:<native>:<android.renderscript.RenderScript>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: void onServiceConnected()>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>:<public>:<android.drm.ProcessedData>
<android.net.WebAddress: void setScheme(java.lang.String)>:<public>:<android.net.WebAddress>
<android.renderscript.Allocation: void copyTo(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.IConnectivityManager: android.net.Network getNetworkForTypeWifi()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.transition.ChangeText.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.transition.ChangeText.1:android.animation.AnimatorListenerAdapter>
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>:<public static>:<android.net.NetworkUtils>
<android.print.PrinterInfo: java.lang.String getDescription()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.filterfw.core.OutputPort: android.filterfw.core.Frame pullFrame()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.app.Activity: android.app.ActivityOptions getActivityOptions()>:<>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.os.PerformanceCollector: void startAllocCounting()>:<private static>:<android.os.PerformanceCollector>
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.graphics.Paint: int native_getTextAlign(long)>:<private static native>:<android.graphics.Paint>
<android.hwcontrol.HwWidgetFactory.Factory: android.view.View newHwOverflowMenuButton(android.content.Context,android.widget.ActionMenuPresenter)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.Factory>
<android.graphics.Point.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.graphics.Point.1:android.os.Parcelable.Creator>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.backup.IBackupManager: boolean hasBackupPassword()>:<public abstract>:<android.app.backup.IBackupManager:android.os.IInterface>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>:<public static>:<android.app.ActivityOptions>
<android.opengl.GLES20: void glDetachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.INetworkPolicyManager: void unregisterListener(android.net.INetworkPolicyListener)>:<public abstract>:<android.net.INetworkPolicyManager:android.os.IInterface>
<android.graphics.Paint: boolean isLinearText()>:<public final>:<android.graphics.Paint>
<android.os.INetworkManagementService.Stub.Proxy: void wifiFirmwareReload(java.lang.String,java.lang.String)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityManager.TaskDescription.1: android.app.ActivityManager.TaskDescription[] newArray(int)>:<public>:<android.app.ActivityManager.TaskDescription.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteConnectionPool: void discardAcquiredConnectionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.net.LinkProperties: boolean isIdenticalInterfaceName(android.net.LinkProperties)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>:<public>:<android.os.RemoteCallbackList>
<android.mtp.MtpDatabase: int getObjectFormat(int)>:<private>:<android.mtp.MtpDatabase>
<android.graphics.drawable.RippleBackground: float getOuterOpacity()>:<public>:<android.graphics.drawable.RippleBackground>
<android.net.wifi.WifiManager.WifiLock: void <init>(android.net.wifi.WifiManager,int,java.lang.String)>:<private>:<android.net.wifi.WifiManager.WifiLock>
<android.app.Activity: void performResume()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.os.IMultiWinService.Stub.Proxy: java.util.List getMWNonSystemAppNames()>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.graphics.drawable.VectorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.VectorDrawable: void printGroupTree(android.graphics.drawable.VectorDrawable.VGroup,int)>:<private>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.net.Uri.Part: android.net.Uri.Part nonNull(android.net.Uri.Part)>:<static>:<android.net.Uri.Part:android.net.Uri.AbstractPart>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.ActivityManager.RecentTaskInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.app.ActivityManager.RecentTaskInfo.1:android.os.Parcelable.Creator>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: void <init>(java.lang.String,int,int)>:<private>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.pdf.PdfDocument.PdfCanvas: void <init>(android.graphics.pdf.PdfDocument,long)>:<public>:<android.graphics.pdf.PdfDocument.PdfCanvas:android.graphics.Canvas>
<android.graphics.drawable.RotateDrawable.RotateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.RotateDrawable.RotateState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.CharSequence getTitle()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.hwcontrol.HwWidgetFactory.HwTextView: boolean playIvtEffect(android.content.Context,java.lang.String)>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwTextView>
<android.os.ParcelableParcel.1: android.os.ParcelableParcel[] newArray(int)>:<public>:<android.os.ParcelableParcel.1:android.os.Parcelable.ClassLoaderCreator>
<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel)>:<>:<android.os.BaseBundle>
<android.os.INetworkManagementService: void wifiFirmwareReload(java.lang.String,java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Camera>
<android.net.Network.2: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.Network.2:android.os.Parcelable.Creator>
<android.net.MobileLinkQualityInfo: int getMobileNetworkType()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.Uri.AbstractPart.Representation: void <init>()>:<>:<android.net.Uri.AbstractPart.Representation>
<android.os.IMultiWinService.Stub.Proxy: void removeFromTaskList(int)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.database.CursorWindow: byte[] getBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.2800(android.net.wifi.HwWifiStatStore.SSIDStat)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.net.NetworkStatsHistory: void dump(com.android.internal.util.IndentingPrintWriter,boolean)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.backup.RestoreSet: void <init>(java.lang.String,java.lang.String,long)>:<public>:<android.app.backup.RestoreSet:android.os.Parcelable>
<android.filterfw.core.SyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>:<public>:<android.filterfw.core.SyncRunner:android.filterfw.core.GraphRunner>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ActivityThread: void dumpGraphicsInfo(java.io.FileDescriptor)>:<private native>:<android.app.ActivityThread>
<android.webkit.HwFindActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>:<public>:<android.webkit.HwFindActionModeCallback:android.view.ActionMode.Callback,android.text.TextWatcher,android.view.View.OnClickListener,android.webkit.WebView.FindListener>
<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateGammaTable(float)>:<public static>:<android.graphics.TableMaskFilter:android.graphics.MaskFilter>
<android.graphics.Matrix.1: void setValues(float[])>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.AppOpsManager: int checkAudioOpNoThrow(int,int,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.app.IUiAutomationConnection.Stub.Proxy: void disconnect()>:<public>:<android.app.IUiAutomationConnection.Stub.Proxy:android.app.IUiAutomationConnection>
<android.os.FileObserver: void <init>(java.lang.String)>:<public>:<android.os.FileObserver>
<android.os.BatteryStats.1: int compare(android.os.BatteryStats.TimerEntry,android.os.BatteryStats.TimerEntry)>:<public>:<android.os.BatteryStats.1:java.util.Comparator>
<android.transition.Transition.TransitionListenerAdapter: void <init>()>:<public>:<android.transition.Transition.TransitionListenerAdapter:android.transition.Transition.TransitionListener>
<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>:<private>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1:android.accounts.AccountManagerCallback>
<android.net.http.LoggingEventHandler: void locationChanged(java.lang.String,boolean)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.net.Network: javax.net.SocketFactory getSocketFactory()>:<public>:<android.net.Network:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pProvDiscEvent>
<android.renderscript.FieldPacker: android.renderscript.Short2 subShort2()>:<public>:<android.renderscript.FieldPacker>
<android.net.http.AndroidHttpClient.LoggingConfiguration: boolean access.400(android.net.http.AndroidHttpClient.LoggingConfiguration)>:<static>:<android.net.http.AndroidHttpClient.LoggingConfiguration>
<android.graphics.Matrix: void native_preScale(long,float,float,float,float)>:<private static native>:<android.graphics.Matrix>
<android.os.storage.IMountService: int destroySecureContainer(java.lang.String,boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.NetworkScoreManager: void disableScoring()>:<public>:<android.net.NetworkScoreManager>
<android.net.wifi.IWifiManager: java.util.List getPrivilegedConfiguredNetworks()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.renderscript.Long4: android.renderscript.Long4 mul(android.renderscript.Long4,android.renderscript.Long4)>:<public static>:<android.renderscript.Long4>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Picture: void nativeDestructor(long)>:<private static native>:<android.graphics.Picture>
<android.net.wifi.HwWifiCHRService: void disableNetwork(int,int)>:<public>:<android.net.wifi.HwWifiCHRService:android.os.Handler>
<android.drm.DrmSupportInfo: boolean isSupportedFileSuffix(java.lang.String)>:<>:<android.drm.DrmSupportInfo>
<android.os.BatteryStats.HistoryPrinter: void reset()>:<>:<android.os.BatteryStats.HistoryPrinter>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.app.AbsWallpaperManager: void <init>()>:<public>:<android.app.AbsWallpaperManager>
<android.print.IPrintManager: java.util.List getPrintJobInfos(int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>:<public static>:<android.net.ConnectivityManager>
<android.filterfw.core.GLFrameTimer: void <init>()>:<>:<android.filterfw.core.GLFrameTimer>
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.IActivityManager: boolean convertFromTranslucent(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CursorFactory>
<android.net.PskKeyManager: void <init>()>:<public>:<android.net.PskKeyManager:com.android.org.conscrypt.PSKKeyManager>
<android.app.FragmentManagerState: int describeContents()>:<public>:<android.app.FragmentManagerState:android.os.Parcelable>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.net.TrafficStats: long getTxPackets(java.lang.String)>:<public static>:<android.net.TrafficStats>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle)>:<public>:<android.os.UserManager>
<android.os.Debug: java.lang.String getCaller(java.lang.StackTraceElement[],int)>:<private static>:<android.os.Debug>
<android.app.ListFragment: void onDestroyView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener access.702(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.accounts.AbstractAccountAuthenticator: void handleException(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>:<private>:<android.accounts.AbstractAccountAuthenticator>
<android.net.NetworkMisc.1: void <init>()>:<>:<android.net.NetworkMisc.1:android.os.Parcelable.Creator>
<android.app.Activity: android.view.View onCreatePanelView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState: void mutate()>:<private>:<android.graphics.drawable.AnimatedStateListDrawable.AnimatedStateListState:android.graphics.drawable.StateListDrawable.StateListState,android.graphics.drawable.DrawableContainer.DrawableContainerState,android.graphics.drawable.Drawable.ConstantState>
<android.net.ScoredNetwork: void <init>(android.os.Parcel)>:<private>:<android.net.ScoredNetwork:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.ClipDrawable.ClipState,android.content.res.Resources)>:<private>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.IWifiManager: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.app.AppImportanceMonitor: void <init>(android.content.Context,android.os.Looper)>:<public>:<android.app.AppImportanceMonitor>
<android.app.PackageDeleteObserver.1: void <init>(android.app.PackageDeleteObserver)>:<>:<android.app.PackageDeleteObserver.1:android.content.pm.IPackageDeleteObserver2.Stub>
<android.graphics.drawable.RotateDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.IAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.mtp.MtpServer: void native_run()>:<private final native>:<android.mtp.MtpServer:java.lang.Runnable>
<android.app.TabActivity: void onContentChanged()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Region: boolean set(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.app.IProcessObserver.Stub: android.app.IProcessObserver asInterface(android.os.IBinder)>:<public static>:<android.app.IProcessObserver.Stub:android.os.Binder,android.app.IProcessObserver>
<android.net.WifiLinkQualityInfo: android.net.WifiLinkQualityInfo createFromParcelBody(android.os.Parcel)>:<public static>:<android.net.WifiLinkQualityInfo:android.net.LinkQualityInfo>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.net.http.LoggingEventHandler: void headers(android.net.http.Headers)>:<public>:<android.net.http.LoggingEventHandler:android.net.http.EventHandler>
<android.transition.PathMotion: void <init>()>:<public>:<android.transition.PathMotion>
<android.os.BaseBundle: java.util.Set keySet()>:<public>:<android.os.BaseBundle>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>:<public>:<android.filterfw.core.CachedFrameManager:android.filterfw.core.SimpleFrameManager,android.filterfw.core.FrameManager>
<android.graphics.drawable.AnimatedRotateDrawable: void <init>(android.graphics.drawable.AnimatedRotateDrawable.AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable.1)>:<>:<android.graphics.drawable.AnimatedRotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.NetworkInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.NetworkInfo.1:android.os.Parcelable.Creator>
<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)>:<public>:<android.os.PerformanceCollector>
<android.os.IMultiWinService: int setMultiWinSoftKeyBoardVisible(android.os.IBinder,int)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.os.INetworkManagementService.Stub.Proxy: void removeNetwork(int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.PersistableBundle: java.lang.Object clone()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable,com.android.internal.util.XmlUtils.WriteMapCallback>
<android.app.ContextImpl.7: void <init>()>:<>:<android.app.ContextImpl.7:android.app.ContextImpl.ServiceFetcher>
<android.database.sqlite.JankSqlite: long access.000()>:<static>:<android.database.sqlite.JankSqlite>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.UserHandle: boolean isApp(int)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.net.wifi.ScanResult: boolean is24GHz()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Slot: void <init>(android.renderscript.ProgramFragmentFixedFunction.Builder,android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode,android.renderscript.ProgramFragmentFixedFunction.Builder.Format)>:<>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Slot>
<android.net.MobileDataStateTracker: boolean isReady()>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.renderscript.Long4: void set(android.renderscript.Long4)>:<public>:<android.renderscript.Long4>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.net.DhcpStateMachine: void access.2000(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.Class,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.Uri: int hashCode()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.ApplicationErrorReport: void <clinit>()>:<static>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDeviceList: void validateDeviceAddress(java.lang.String)>:<private>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.webkit.CacheManager.CacheResult: java.lang.String getLastModified()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.WifiNetworkConnectionStatistics.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.wifi.WifiNetworkConnectionStatistics.1:android.os.Parcelable.Creator>
<android.net.UidRange.1: void <init>()>:<>:<android.net.UidRange.1:android.os.Parcelable.Creator>
<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.transition.ChangeTransform.1: float[] get(android.transition.ChangeTransform.PathAnimatorMatrix)>:<public>:<android.transition.ChangeTransform.1:android.util.Property>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.IHDMIConnectService.Stub: void <init>()>:<public>:<android.os.IHDMIConnectService.Stub:android.os.Binder,android.os.IHDMIConnectService>
<android.app.IActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.Instrumentation.InstrumentationThread: void run()>:<public>:<android.app.Instrumentation.InstrumentationThread:java.lang.Thread>
<android.app.IActivityManager: void unstableProviderDied(android.os.IBinder)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.filterfw.core.GLFrame: void <clinit>()>:<static>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.Uri.StringUri: android.net.Uri.PathPart getPathPart()>:<private>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.NetworkStatsHistory: void recordData(long,long,long,long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.opengl.GLLogWrapper: boolean glIsRenderbufferOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.job.JobInfo: void <clinit>()>:<static>:<android.app.job.JobInfo:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.wifi.HwWifiStatStore: void addReConnectSuccCnt()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.opengl.GLES20: void glCullFace(int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManagerProxy: void moveTaskToStack(int,int,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>:<private>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.graphics.pdf.PdfRenderer.Page: void <init>(android.graphics.pdf.PdfRenderer,int)>:<private>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.http.DelegatingSSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.app.IActivityManager: void signalPersistentProcesses(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.MobileDataStateTracker: void <init>(int,java.lang.String)>:<public>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.os.Debug.MemoryInfo: int getOtherSharedClean(int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.os.BatteryStats: int getWifiSignalStrengthCount(int,int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.filterfw.core.NativeAllocatorTag: void <init>()>:<public>:<android.filterfw.core.NativeAllocatorTag>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo)>:<>:<android.app.ActivityThread>
<android.opengl.GLLogWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.Activity: void performRestart()>:<final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.app.ContextImpl.46: void <init>()>:<>:<android.app.ContextImpl.46:android.app.ContextImpl.ServiceFetcher>
<android.os.INetworkManagementService: void shutdown()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTexParameterx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.renderscript.RenderScript: void rsnAllocationCopyFromBitmap(long,long,android.graphics.Bitmap)>:<native>:<android.renderscript.RenderScript>
<android.database.sqlite.JankSqlite.DBOprMonitor: boolean addOpr(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite.DBOprMonitor>
<android.filterfw.core.Frame: android.graphics.Bitmap convertBitmapToRGBA(android.graphics.Bitmap)>:<protected static>:<android.filterfw.core.Frame>
<android.net.LinkProperties: boolean hasIPv4DnsServer()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.security.cert.X509Certificate)>:<private>:<android.net.http.SslCertificate>
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>:<public>:<android.app.ActivityManager>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpDisplayLists(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.filterfw.core.StreamPort: void pushFrame(android.filterfw.core.Frame)>:<public>:<android.filterfw.core.StreamPort:android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.net.ConnectivityManager.CallbackHandler: void <init>(android.net.ConnectivityManager,android.os.Looper,java.util.HashMap,java.util.concurrent.atomic.AtomicInteger,android.net.ConnectivityManager)>:<>:<android.net.ConnectivityManager.CallbackHandler:android.os.Handler>
<android.renderscript.Matrix3f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.app.ActivityThread.ApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.transition.ChangeTransform.1: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.transition.ChangeTransform.1:android.util.Property>
<android.filterfw.core.GLEnvironment: int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)>:<public>:<android.filterfw.core.GLEnvironment>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.renderscript.Mesh: void updateFromNative()>:<>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.opengl.GLES10: void glLineWidth(float)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.ScriptC: long internalStringCreate(android.renderscript.RenderScript,java.lang.String,byte[])>:<private static>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentManagerImpl: boolean executePendingTransactions()>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.print.PrintJobId: int describeContents()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.transition.Transition: android.transition.Transition removeTarget(int)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.FindActionModeCallback.NoAction: void onDestroyActionMode(android.view.ActionMode)>:<public>:<android.webkit.FindActionModeCallback.NoAction:android.view.ActionMode.Callback>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.net.Uri.StringUri: android.net.Uri readFrom(android.os.Parcel)>:<static>:<android.net.Uri.StringUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.app.ContextImpl.20: java.lang.Object createStaticService()>:<public>:<android.app.ContextImpl.20:android.app.ContextImpl.StaticServiceFetcher,android.app.ContextImpl.ServiceFetcher>
<android.renderscript.Int4: android.renderscript.Int4 mod(android.renderscript.Int4,int)>:<public static>:<android.renderscript.Int4>
<android.renderscript.Double2: void div(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.graphics.pdf.PdfEditor: int getPageCount()>:<public>:<android.graphics.pdf.PdfEditor>
<android.os.CountDownTimer.1: void handleMessage(android.os.Message)>:<public>:<android.os.CountDownTimer.1:android.os.Handler>
<android.test.AndroidTestCase: void setUp()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.print.PrintAttributes.MediaSize: java.lang.String toString()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.net.DhcpStateMachine.DefaultState: void <init>(android.net.DhcpStateMachine)>:<>:<android.net.DhcpStateMachine.DefaultState:com.android.internal.util.State>
<android.graphics.drawable.VectorDrawable.VPathRenderer: android.graphics.Paint access.302(android.graphics.drawable.VectorDrawable.VPathRenderer,android.graphics.Paint)>:<static>:<android.graphics.drawable.VectorDrawable.VPathRenderer>
<android.net.wifi.IWifiManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.os.ParcelFileDescriptor: void releaseResources()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.EnterTransitionCoordinator.8: void onAnimationEnd(android.animation.Animator)>:<public>:<android.app.EnterTransitionCoordinator.8:android.animation.AnimatorListenerAdapter>
<android.renderscript.ProgramVertex: int getInputCount()>:<public>:<android.renderscript.ProgramVertex:android.renderscript.Program,android.renderscript.BaseObj>
<android.graphics.drawable.ScaleDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>:<private>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.TaskStackBuilder: void <init>(android.content.Context)>:<private>:<android.app.TaskStackBuilder>
<android.net.IConnectivityManager: int untether(java.lang.String)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.net.SSLCertificateSocketFactory: void <init>(int,android.net.SSLSessionCache,boolean)>:<private>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.hwtheme.HwThemeManager: boolean saveIconToCache(android.graphics.Bitmap,java.lang.String,boolean)>:<public static>:<android.hwtheme.HwThemeManager>
<android.app.ActivityThread.ActivityClientRecord: java.lang.String toString()>:<public>:<android.app.ActivityThread.ActivityClientRecord>
<android.app.ITaskStackListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.ITaskStackListener.Stub.Proxy:android.app.ITaskStackListener>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateBluetooth()>:<public static>:<android.net.NetworkTemplate:android.os.Parcelable>
<android.os.BatteryStats: void finishIteratingOldHistoryLocked()>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.print.PrintJobInfo: int getCopies()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.transition.Transition.TransitionListener: void onTransitionEnd(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.net.IConnectivityManager: android.net.NetworkState[] getAllNetworkState()>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.app.ActivityThread.EventLoggingReporter: void <init>(android.app.ActivityThread.1)>:<>:<android.app.ActivityThread.EventLoggingReporter:libcore.io.EventLogger.Reporter>
<android.opengl.GLErrorWrapper: void glColor4f(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.database.AbstractCursor: boolean isLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.ActivityManager.TaskDescription: void <init>(android.os.Parcel,android.app.ActivityManager.1)>:<>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isCoupledSinkSupportedAtSource()>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebView.PrivateAccess: int getHorizontalScrollbarHeight()>:<public>:<android.webkit.WebView.PrivateAccess>
<android.os.Bundle: java.lang.String toString()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.wifi.HwWifiStatStore.SSIDStat: int access.1902(android.net.wifi.HwWifiStatStore.SSIDStat,int)>:<static>:<android.net.wifi.HwWifiStatStore.SSIDStat>
<android.os.Bundle: int describeContents()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.app.ActivityView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.os.Parcel: void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>:<>:<android.os.Parcel>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.Rect: void union(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.NetworkCapabilities: void setNetworkSpecifier(java.lang.String)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.EthernetManager.1: void handleMessage(android.os.Message)>:<public>:<android.net.EthernetManager.1:android.os.Handler>
<android.app.IActivityManager: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.net.wifi.RssiPacketCountInfo.1: android.net.wifi.RssiPacketCountInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.RssiPacketCountInfo.1:android.os.Parcelable.Creator>
<android.print.PrintManager.PrintDocumentAdapterDelegate: boolean isDestroyedLocked()>:<private>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.net.BaseNetworkStateTracker: void <init>()>:<protected>:<android.net.BaseNetworkStateTracker:android.net.NetworkStateTracker>
<android.app.Fragment: int hashCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.IActivityManager: java.lang.String getProviderMimeType(android.net.Uri,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.filterfw.core.OutputPort: boolean hasFrame()>:<public>:<android.filterfw.core.OutputPort:android.filterfw.core.FilterPort>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.renderscript.RenderScript: void nElementGetSubElements(long,long[],java.lang.String[],int[])>:<>:<android.renderscript.RenderScript>
<android.os.IMultiWinService: void releaseMultiWin(android.os.IBinder)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.opengl.GLSurfaceView.GLThread: void stopEglSurfaceLocked()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>:<public>:<android.graphics.Paint>
<android.print.PrintJobInfo.1: android.print.PrintJobInfo[] newArray(int)>:<public>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.net.dhcp.DhcpPacket: void doNextOp(android.net.dhcp.DhcpStateMachine)>:<public abstract>:<android.net.dhcp.DhcpPacket>
<android.net.NetworkStatsHistory: void <clinit>()>:<static>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.app.backup.IRestoreSession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.app.backup.IRestoreSession.Stub.Proxy:android.app.backup.IRestoreSession>
<android.net.dhcp.DhcpOfferPacket: java.lang.String toString()>:<public>:<android.net.dhcp.DhcpOfferPacket:android.net.dhcp.DhcpPacket>
<android.app.RemoteInput.Builder: void setFlag(int,boolean)>:<private>:<android.app.RemoteInput.Builder>
<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator: int getTotalDuration()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable.FrameInterpolator:android.animation.TimeInterpolator>
<android.opengl.GLException: void <init>(int)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.FieldPacker: void addF64(double)>:<public>:<android.renderscript.FieldPacker>
<android.transition.TransitionManager: android.util.ArrayMap access.100()>:<static>:<android.transition.TransitionManager>
<android.renderscript.RenderScript: long rsnFileA3DGetEntryByIndex(long,long,int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.http.HttpAuthHeader: java.lang.String getUsername()>:<public>:<android.net.http.HttpAuthHeader>
<android.graphics.Path: void setLastPoint(float,float)>:<public>:<android.graphics.Path>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<android.webkit.Plugin.DefaultClickHandler: void <init>(android.webkit.Plugin,android.webkit.Plugin.1)>:<>:<android.webkit.Plugin.DefaultClickHandler:android.webkit.Plugin.PreferencesClickHandler,android.content.DialogInterface.OnClickListener>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Notification.WearableExtender: boolean getHintHideIcon()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.net.LinkQualityInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.net.LinkQualityInfo.1:android.os.Parcelable.Creator>
<android.accessibilityservice.AccessibilityServiceInfo: void appendFeedbackTypes(java.lang.StringBuilder,int)>:<private static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.database.AbstractCursor: boolean moveToFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.SamplingDataTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>:<public>:<android.net.SamplingDataTracker>
<android.net.http.RequestHandle: java.lang.String computeBasicAuthResponse(java.lang.String,java.lang.String)>:<public static>:<android.net.http.RequestHandle>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(java.lang.String)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.graphics.Canvas: boolean isOpaque()>:<public>:<android.graphics.Canvas>
<android.net.wifi.ScanSettings.1: android.net.wifi.ScanSettings createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.ScanSettings.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.net.wifi.DummyHwInnerWifiManager: void <init>()>:<public>:<android.net.wifi.DummyHwInnerWifiManager:android.net.wifi.HwInnerWifiManager>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy: boolean findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>:<public>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub.Proxy:android.accessibilityservice.IAccessibilityServiceConnection>
<android.os.INetworkManagementService.Stub.Proxy: void setInterfaceAlert(java.lang.String,long)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()>:<public>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.emoji.EmojiFactory: void finalize()>:<protected>:<android.emoji.EmojiFactory>
<android.app.backup.IBackupManager.Stub.Proxy: void setAutoRestore(boolean)>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.webkit.WebSettings: boolean supportZoom()>:<public abstract>:<android.webkit.WebSettings>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.job.IJobScheduler.Stub.Proxy: int schedule(android.app.job.JobInfo)>:<public>:<android.app.job.IJobScheduler.Stub.Proxy:android.app.job.IJobScheduler>
<android.net.dhcp.DhcpPacket: int checksum(java.nio.ByteBuffer,int,int,int)>:<private>:<android.net.dhcp.DhcpPacket>
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>:<public>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.os.Process: int setGid(int)>:<public static final native>:<android.os.Process>
<android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>:<public static>:<android.os.CancellationSignal>
<android.app.IActivityManager: boolean switchUser(int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetAllocation(android.renderscript.Allocation,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.filterfw.core.Frame: void setFloats(float[])>:<public abstract>:<android.filterfw.core.Frame>
<android.net.SamplingDataTracker: long getSampledTxByteCount()>:<public>:<android.net.SamplingDataTracker>
<android.graphics.drawable.BitmapDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.transition.ChangeBounds.ViewBounds: void setTopLeft(android.graphics.PointF)>:<public>:<android.transition.ChangeBounds.ViewBounds>
<android.app.IActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.AppOpsManager.PackageOps: java.util.List getOps()>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.net.wifi.WifiConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.Script.LaunchOptions: void <init>()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.renderscript.Long3: void addMultiple(android.renderscript.Long3,long)>:<public>:<android.renderscript.Long3>
<android.os.storage.IMountService: java.lang.String getField(java.lang.String)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.net.wifi.ScanResult.InformationElement: void <init>(android.net.wifi.ScanResult.InformationElement)>:<public>:<android.net.wifi.ScanResult.InformationElement>
<android.transition.TransitionSet: android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabledForUser(int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.net.http.Connection: void setCanPersist(boolean)>:<>:<android.net.http.Connection>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentBreadCrumbs: void onLayout(boolean,int,int,int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.ActivityThread: void access.2900(android.app.ActivityThread,android.app.ActivityThread.CreateBackupAgentData)>:<static>:<android.app.ActivityThread>
<android.os.BaseBundle: double getDouble(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo createFromParcel(android.os.Parcel)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo.1:android.os.Parcelable.Creator>
<android.app.backup.IRestoreSession.Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)>:<public static>:<android.app.backup.IRestoreSession.Stub:android.os.Binder,android.app.backup.IRestoreSession>
<android.app.ActivityThread: void updateDefaultDensity()>:<private>:<android.app.ActivityThread>
<android.drm.DrmManagerClient: int access.300(android.drm.DrmManagerClient,int)>:<static>:<android.drm.DrmManagerClient>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.NetworkStateTracker: void privateDnsRouteSet(boolean)>:<public abstract>:<android.net.NetworkStateTracker>
<android.graphics.drawable.BitmapDrawable.BitmapState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.BitmapDrawable.BitmapState:android.graphics.drawable.Drawable.ConstantState>
<android.os.PowerManagerInternal: void registerLowPowerModeObserver(android.os.PowerManagerInternal.LowPowerModeListener)>:<public abstract>:<android.os.PowerManagerInternal>
<android.os.storage.IMountShutdownObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.storage.IMountShutdownObserver.Stub.Proxy:android.os.storage.IMountShutdownObserver>
<android.os.INetworkManagementService.Stub.Proxy: void setMtu(java.lang.String,int)>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.os.IPowerManager.Stub.Proxy: void setLcdRatio(int,boolean)>:<public>:<android.os.IPowerManager.Stub.Proxy:android.os.IPowerManager>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>:<public abstract>:<android.webkit.WebSettings>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleHELO(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.graphics.drawable.VectorDrawable.VFullPath: void setStrokeWidth(float)>:<>:<android.graphics.drawable.VectorDrawable.VFullPath:android.graphics.drawable.VectorDrawable.VPath>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.app.ActivityManager.RunningTaskInfo: void <init>(android.os.Parcel)>:<private>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.app.ActivityThread.ApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>:<public>:<android.app.ActivityThread.ApplicationThread:android.app.ApplicationThreadNative,android.os.Binder>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL)>:<public>:<android.net.Network:android.os.Parcelable>
<android.accounts.AccountManager.7: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.7:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.filterfw.core.GLFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager,int,long)>:<>:<android.filterfw.core.GLFrame:android.filterfw.core.Frame>
<android.net.dhcp.DhcpAckPacket: void <init>(int,boolean,java.net.InetAddress,java.net.InetAddress,byte[])>:<>:<android.net.dhcp.DhcpAckPacket:android.net.dhcp.DhcpPacket>
<android.database.BulkCursorProxy: void onMove(int)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.filterfw.core.GLEnvironment: boolean nativeIsContextActive()>:<private native>:<android.filterfw.core.GLEnvironment>
<android.os.BaseBundle: int[] getIntArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.filterfw.core.KeyValueMap: android.filterfw.core.KeyValueMap fromKeyValues(java.lang.Object[])>:<public static transient>:<android.filterfw.core.KeyValueMap:java.util.HashMap,java.util.AbstractMap>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobTagResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStarted()>:<private>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable>
<android.net.Uri: java.lang.String getQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.http.SslError: boolean addError(int)>:<public>:<android.net.http.SslError>
<android.net.LinkAddress: void <clinit>()>:<static>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.http.DelegatingSSLSession: byte[] getId()>:<public>:<android.net.http.DelegatingSSLSession:javax.net.ssl.SSLSession>
<android.print.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)>:<public final>:<android.print.PrinterDiscoverySession>
<android.renderscript.RenderScript: long nContextCreate(long,int,int,int)>:<>:<android.renderscript.RenderScript>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void <init>(int,int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>:<protected>:<android.net.wifi.p2p.nsd.WifiP2pServiceResponse:android.os.Parcelable>
<android.webkit.WebChromeClient: void onChangeBlockedAds(android.webkit.WebView,int)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.drawable.Drawable.ConstantState: int addAtlasableBitmaps(java.util.Collection)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.net.NetworkStatsHistory.1: void <init>()>:<>:<android.net.NetworkStatsHistory.1:android.os.Parcelable.Creator>
<android.app.BackStackRecord: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Float2: android.renderscript.Float2 div(android.renderscript.Float2,float)>:<public static>:<android.renderscript.Float2>
<android.renderscript.Float2: android.renderscript.Float2 div(android.renderscript.Float2,android.renderscript.Float2)>:<public static>:<android.renderscript.Float2>
<android.renderscript.Short4: short elementSum()>:<public>:<android.renderscript.Short4>
<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter access.100(android.filterfw.io.TextGraphReader)>:<static>:<android.filterfw.io.TextGraphReader:android.filterfw.io.GraphReader>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.IWriteResultCallback: void onWriteFailed(java.lang.CharSequence,int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.graphics.SurfaceTexture: void postEventFromNative(java.lang.ref.WeakReference)>:<private static>:<android.graphics.SurfaceTexture>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.R.animator: void <init>()>:<public>:<android.R.animator>
<android.app.backup.BackupTransport.TransportImpl: int clearBackupData(android.content.pm.PackageInfo)>:<public>:<android.app.backup.BackupTransport.TransportImpl:com.android.internal.backup.IBackupTransport.Stub>
<android.renderscript.FieldPacker: android.renderscript.Short4 subShort4()>:<public>:<android.renderscript.FieldPacker>
<android.os.INetworkManagementService: void createVirtualNetwork(int,boolean,boolean)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.app.ApplicationThreadProxy: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,java.lang.String[])>:<public>:<android.app.ApplicationThreadProxy:android.app.IApplicationThread>
<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture: void <init>(android.graphics.drawable.Drawable)>:<private>:<android.graphics.drawable.DrawableContainer.DrawableContainerState.ConstantStateFuture>
<android.graphics.drawable.NinePatchDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.PendingIntent: java.lang.String toString()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,android.renderscript.Allocation,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase.2: boolean accept(java.io.File)>:<public>:<android.database.sqlite.SQLiteDatabase.2:java.io.FileFilter>
<android.net.NetworkStats: int internalSize()>:<public>:<android.net.NetworkStats:android.os.Parcelable>
<android.filterfw.core.FilterFunction: void close()>:<public>:<android.filterfw.core.FilterFunction>
<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.net.wifi.p2p.WifiP2pGroup: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.ddm.DdmHandleAppName: void disconnected()>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.os.Message.1: void <init>()>:<>:<android.os.Message.1:android.os.Parcelable.Creator>
<android.renderscript.Float2: android.renderscript.Float2 add(android.renderscript.Float2,android.renderscript.Float2)>:<public static>:<android.renderscript.Float2>
<android.app.Presentation: void onDisplayRemoved()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.app.Activity: int getRequestedOrientation()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.renderscript.Font: void addFamilyToMap(android.renderscript.Font.FontFamily)>:<private static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.app.IActivityManager: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.os.Bundle: char getChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.storage.IMountService.Stub.Proxy: void shutdown(android.os.storage.IMountShutdownObserver)>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.opengl.GLErrorWrapper: void glTexEnvx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.webkit.WebViewProvider: boolean canGoBackOrForward(int)>:<public abstract>:<android.webkit.WebViewProvider>
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addCapability(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewProvider createWebView(android.webkit.WebView,android.webkit.WebView.PrivateAccess)>:<public abstract>:<android.webkit.WebViewFactoryProvider>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.ChangeClipBounds: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.transition.Scene: void <init>(android.view.ViewGroup,int,android.content.Context)>:<private>:<android.transition.Scene>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.filterfw.core.ShaderProgram: boolean shaderProcess(android.filterfw.core.GLFrame[],android.filterfw.core.GLFrame)>:<private native>:<android.filterfw.core.ShaderProgram:android.filterfw.core.Program>
<android.webkit.WebIconDatabase: void open(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.app.SharedElementCallback.1: void <init>()>:<>:<android.app.SharedElementCallback.1:android.app.SharedElementCallback>
<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)>:<public>:<android.os.PerformanceCollector>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.net.dhcp.DhcpNakPacket: void <init>(int,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,byte[])>:<>:<android.net.dhcp.DhcpNakPacket:android.net.dhcp.DhcpPacket>
<android.webkit.WebViewDelegate: boolean canInvokeDrawGlFunctor(android.view.View)>:<public>:<android.webkit.WebViewDelegate>
<android.net.ConnectivityManager.LegacyRequest.1: void onAvailable(android.net.Network)>:<public>:<android.net.ConnectivityManager.LegacyRequest.1:android.net.ConnectivityManager.NetworkCallback>
<android.net.Uri.HierarchicalUri: android.net.Uri.Part getSsp()>:<private>:<android.net.Uri.HierarchicalUri:android.net.Uri.AbstractHierarchicalUri,android.net.Uri>
<android.net.SSLCertificateSocketFactory: byte[] getAlpnSelectedProtocol(java.net.Socket)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.net.wifi.IWifiManager: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>:<private>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.Rect: void set(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>:<public static>:<android.graphics.Color>
<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>:<public>:<android.graphics.Paint>
<android.app.AppOpsManager.PackageOps: void <init>(java.lang.String,int,java.util.List)>:<public>:<android.app.AppOpsManager.PackageOps:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnScriptSetVarI(long,long,int,int)>:<native>:<android.renderscript.RenderScript>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.os.IPowerManager: void boostScreenBrightness(long)>:<public abstract>:<android.os.IPowerManager:android.os.IInterface>
<android.print.PrintManager: android.print.PrintManager getGlobalPrintManagerForUser(int)>:<public>:<android.print.PrintManager>
<android.net.wifi.p2p.WifiP2pManager.Channel: android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener access.902(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)>:<static>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.os.Debug: void resetGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.filterfw.core.FilterSurfaceView: void bindToListener(android.view.SurfaceHolder.Callback,android.filterfw.core.GLEnvironment)>:<public>:<android.filterfw.core.FilterSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.RectF: void union(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.mtp.MtpDatabase: int setDeviceProperty(int,long,java.lang.String)>:<private>:<android.mtp.MtpDatabase>
<android.renderscript.RenderScript: void nScriptSetVarF(long,int,float)>:<>:<android.renderscript.RenderScript>
<android.app.INonHardwareAcceleratedPackagesManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.INonHardwareAcceleratedPackagesManager.Stub:android.os.Binder,android.app.INonHardwareAcceleratedPackagesManager>
<android.opengl.GLLogWrapper: void glTranslatef(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onReadFromDisk()>:<public>:<android.os.StrictMode.AndroidBlockGuardPolicy:dalvik.system.BlockGuard.Policy>
<android.app.Notification.Builder: int getInboxLayoutResource()>:<private>:<android.app.Notification.Builder>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.graphics.Matrix.1: void setSinCos(float,float)>:<public>:<android.graphics.Matrix.1:android.graphics.Matrix>
<android.os.FileBridge: void setTargetFile(java.io.FileDescriptor)>:<public>:<android.os.FileBridge:java.lang.Thread>
<android.filterfw.core.NativeBuffer: int count()>:<public>:<android.filterfw.core.NativeBuffer>
<android.net.wifi.IWifiManager: void clearBlacklist()>:<public abstract>:<android.net.wifi.IWifiManager:android.os.IInterface>
<android.graphics.Color: int green(int)>:<public static>:<android.graphics.Color>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double2)>:<public>:<android.renderscript.FieldPacker>
<android.app.BackStackRecord: int getTransitionStyle()>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.net.wifi.WifiManager: void validateChannel()>:<private>:<android.net.wifi.WifiManager:android.net.wifi.HwCustAbsWifiManager>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigPicture(android.graphics.Bitmap)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.webkit.WebView: boolean access.501(android.webkit.WebView,int,android.os.Bundle)>:<static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.graphics.Bitmap: boolean hasAlpha()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.ChangeText: void <clinit>()>:<static>:<android.transition.ChangeText:android.transition.Transition>
<android.net.wifi.WifiCHRStateManager: void updateLinkSpeed(int)>:<public>:<android.net.wifi.WifiCHRStateManager>
<android.app.SharedPreferencesImpl.EditorImpl: void <init>(android.app.SharedPreferencesImpl)>:<public>:<android.app.SharedPreferencesImpl.EditorImpl:android.content.SharedPreferences.Editor>
<android.netdetect.HwCustNetDetectServiceImpl: boolean access.900(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.app.backup.BackupAgent: void access.100(android.app.backup.BackupAgent)>:<static>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.os.BatteryManagerInternal: int getBatteryLevel()>:<public abstract>:<android.os.BatteryManagerInternal>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>:<public>:<android.graphics.Paint>
<android.os.INetworkManagementService: void removeInterfaceAlert(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.renderscript.Allocation: void copyTo(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.net.ProxyDataTracker: android.os.Messenger access.102(android.net.ProxyDataTracker,android.os.Messenger)>:<static>:<android.net.ProxyDataTracker:android.net.BaseNetworkStateTracker>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result valueOf(java.lang.String)>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.app.ActivityView: boolean isAttachedToDisplay()>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.net.DhcpStateMachine: void access.1700(android.net.DhcpStateMachine,com.android.internal.util.IState)>:<static>:<android.net.DhcpStateMachine:com.android.internal.util.StateMachine>
<android.webkit.WebSettings: void setDefaultFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAllowedApplication(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.database.DataSetObserver: void <init>()>:<public>:<android.database.DataSetObserver>
<android.webkit.WebViewProvider: void clearView()>:<public abstract>:<android.webkit.WebViewProvider>
<android.app.BackStackRecord.1: void <init>(android.app.BackStackRecord,android.view.View,java.util.ArrayList,android.app.Fragment,android.transition.Transition,android.transition.Transition,android.app.BackStackRecord.TransitionState,boolean,java.util.ArrayList,android.app.Fragment,android.transition.Transition,java.util.ArrayList)>:<>:<android.app.BackStackRecord.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>:<public>:<android.graphics.Outline>
<android.app.SearchDialog.3: void <init>(android.app.SearchDialog)>:<>:<android.app.SearchDialog.3:android.widget.SearchView.OnCloseListener>
<android.graphics.Bitmap: void setDefaultDensity(int)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLSurfaceView.GLThreadManager: void <init>()>:<private>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.ChangeImageTransform.2: void <init>(java.lang.Class,java.lang.String)>:<>:<android.transition.ChangeImageTransform.2:android.util.Property>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket connectToHost(java.lang.String,int,java.net.SocketAddress)>:<private>:<android.net.Network.NetworkBoundSocketFactory:javax.net.SocketFactory>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>:<public>:<android.webkit.WebChromeClient>
<android.app.ApplicationErrorReport.AnrInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.renderscript.Short2: void div(short)>:<public>:<android.renderscript.Short2>
<android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.accessibilityservice.IAccessibilityServiceConnection.Stub: android.accessibilityservice.IAccessibilityServiceConnection asInterface(android.os.IBinder)>:<public static>:<android.accessibilityservice.IAccessibilityServiceConnection.Stub:android.os.Binder,android.accessibilityservice.IAccessibilityServiceConnection>
<android.app.EnterTransitionCoordinator: void startEnterTransitionOnly()>:<private>:<android.app.EnterTransitionCoordinator:android.app.ActivityTransitionCoordinator,android.os.ResultReceiver>
<android.net.IConnectivityManager.Stub.Proxy: void setAirplaneMode(boolean)>:<public>:<android.net.IConnectivityManager.Stub.Proxy:android.net.IConnectivityManager>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2,android.view.Window.OnWindowDismissedCallback>
<android.transition.ChangeImageTransform: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.os.RecoverySystem.1: void <init>(android.os.ConditionVariable)>:<>:<android.os.RecoverySystem.1:android.content.BroadcastReceiver>
<android.hwtheme.HwThemeManager: android.hwtheme.HwThemeManager.IHwThemeManager getImplObject()>:<private static>:<android.hwtheme.HwThemeManager>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.app.backup.BackupDataInput: void <init>(java.io.FileDescriptor)>:<public>:<android.app.backup.BackupDataInput>
<android.os.Parcel: void writeSize(android.util.Size)>:<public final>:<android.os.Parcel>
<android.net.dhcp.DhcpInformPacket: void <init>(int,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,byte[])>:<>:<android.net.dhcp.DhcpInformPacket:android.net.dhcp.DhcpPacket>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>:<public>:<android.app.ActivityManager>
<android.os.Parcel: void writeTypedList(java.util.List)>:<public final>:<android.os.Parcel>
<android.app.Notification.Builder: boolean access.1500(android.app.Notification.Builder,android.widget.RemoteViews,int)>:<static>:<android.app.Notification.Builder>
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.Debug: void setFieldsOn(java.lang.Class)>:<public static>:<android.os.Debug>
<android.net.nsd.NsdManager: java.util.concurrent.CountDownLatch access.100(android.net.nsd.NsdManager)>:<static>:<android.net.nsd.NsdManager>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.Broadcaster.Registration: void <init>(android.os.Broadcaster)>:<private>:<android.os.Broadcaster.Registration>
<android.app.admin.IDevicePolicyManager.Stub: android.os.IBinder asBinder()>:<public>:<android.app.admin.IDevicePolicyManager.Stub:android.os.Binder,android.app.admin.IDevicePolicyManager>
<android.app.Presentation: void onDisplayChanged()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.netdetect.HwCustNetDetectServiceImpl: void setWebDetectTimer(java.lang.String,java.lang.String,long)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.graphics.drawable.Drawable: int getLayoutDirection()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.RippleBackground: boolean access.302(android.graphics.drawable.RippleBackground,boolean)>:<static>:<android.graphics.drawable.RippleBackground>
<android.renderscript.BaseObj: void helpDestroy()>:<private>:<android.renderscript.BaseObj>
<android.net.RssiCurve: int describeContents()>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>:<public>:<android.app.AppOpsManager>
<android.app.Notification.Style: android.app.Notification build()>:<public>:<android.app.Notification.Style>
<android.net.INetworkPolicyManager.Stub.Proxy: int[] getPowerSaveAppIdWhitelist()>:<public>:<android.net.INetworkPolicyManager.Stub.Proxy:android.net.INetworkPolicyManager>
<android.app.IBackupAgent: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>:<public abstract>:<android.app.IBackupAgent:android.os.IInterface>
<android.graphics.CornerPathEffect: void <init>(float)>:<public>:<android.graphics.CornerPathEffect:android.graphics.PathEffect>
<android.app.trust.ITrustManager: void reportUnlockAttempt(boolean,int)>:<public abstract>:<android.app.trust.ITrustManager:android.os.IInterface>
<android.app.ActivityView: void <init>(android.content.Context)>:<public>:<android.app.ActivityView:android.view.ViewGroup,android.view.View>
<android.transition.Transition: void matchNames(android.util.ArrayMap,android.util.ArrayMap,android.util.ArrayMap,android.util.ArrayMap)>:<private>:<android.transition.Transition:java.lang.Cloneable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: java.util.List getPermittedAccessibilityServicesForUser(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.IBatteryPropertiesListener.Stub: android.os.IBinder asBinder()>:<public>:<android.os.IBatteryPropertiesListener.Stub:android.os.Binder,android.os.IBatteryPropertiesListener>
<android.app.IActivityManager: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.trust.TrustManager.2: void <init>(android.app.trust.TrustManager,android.os.Looper)>:<>:<android.app.trust.TrustManager.2:android.os.Handler>
<android.accounts.IAccountManagerResponse.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetFloatv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31: void <init>()>:<private>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.IWifiManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.accounts.IAccountManager.Stub.Proxy: boolean removeSharedAccountAsUser(android.accounts.Account,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.renderscript.Matrix4f: void <init>(float[])>:<public>:<android.renderscript.Matrix4f>
<android.os.IMultiWinService: void updateFrameVisibility(boolean,boolean)>:<public abstract>:<android.os.IMultiWinService:android.os.IInterface>
<android.renderscript.Int2: void <init>(android.renderscript.Int2)>:<public>:<android.renderscript.Int2>
<android.renderscript.RenderScript: long nElementCreate2(long[],java.lang.String[],int[])>:<>:<android.renderscript.RenderScript>
<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)>:<public>:<android.filterfw.core.NativeFrame:android.filterfw.core.Frame>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public>:<android.app.ContextImpl:android.content.Context>
<android.webkit.PluginList: void <init>()>:<public>:<android.webkit.PluginList>
<android.net.wifi.p2p.WifiP2pManager: void startWps(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.WpsInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>:<public>:<android.os.UserManager>
<android.os.INetworkManagementService: void stopAccessPoint(java.lang.String)>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.graphics.drawable.Drawable.ConstantState: void <init>()>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.app.ActivityThread.2: void <init>(android.app.ActivityThread,android.app.IActivityManager)>:<>:<android.app.ActivityThread.2:java.lang.Runnable>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ActivityManagerProxy: void setUserIsMonkey(boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.transition.ChangeText.5: void <init>(android.transition.ChangeText,android.widget.TextView,int)>:<>:<android.transition.ChangeText.5:android.animation.AnimatorListenerAdapter>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void setPasswordHistoryLength(android.content.ComponentName,int,int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.database.CursorWindow: int nativeGetNumRows(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebView: void clearClientCertPreferences(java.lang.Runnable)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener,android.view.ViewDebug.HierarchyHandler>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>:<public static>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.opengl.GLES31: void glMemoryBarrier(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterfw.core.Frame: boolean requestResize(int[])>:<protected>:<android.filterfw.core.Frame>
<android.app.ProgressDialog: int getProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.drm.DrmInfoRequest: int getInfoType()>:<public>:<android.drm.DrmInfoRequest>
<android.app.backup.IBackupManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.app.backup.IBackupManager.Stub.Proxy:android.app.backup.IBackupManager>
<android.app.ISearchManager.Stub.Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>:<public>:<android.app.ISearchManager.Stub.Proxy:android.app.ISearchManager>
<android.net.NetworkQuotaInfo: int describeContents()>:<public>:<android.net.NetworkQuotaInfo:android.os.Parcelable>
<android.app.ActionBar: void setIcon(int)>:<public abstract>:<android.app.ActionBar>
<android.net.MobileDataStateTracker: void loge(java.lang.String)>:<private>:<android.net.MobileDataStateTracker:android.net.BaseNetworkStateTracker>
<android.graphics.Path.Op: android.graphics.Path.Op valueOf(java.lang.String)>:<public static>:<android.graphics.Path.Op:java.lang.Enum>
<android.app.admin.DevicePolicyManager: void <clinit>()>:<static>:<android.app.admin.DevicePolicyManager>
<android.app.Instrumentation.EmptyRunnable: void <init>()>:<private>:<android.app.Instrumentation.EmptyRunnable:java.lang.Runnable>
<android.app.ActionBar.Tab: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar.Tab>
<android.net.wifi.ScanResult: boolean is5GHz()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.app.BackStackRecord: android.app.BackStackRecord.TransitionState popFromBackStack(boolean,android.app.BackStackRecord.TransitionState,android.util.SparseArray,android.util.SparseArray)>:<public>:<android.app.BackStackRecord:android.app.FragmentTransaction,android.app.FragmentManager.BackStackEntry,java.lang.Runnable>
<android.os.BatteryStats: java.lang.String getHistoryTagPoolString(int)>:<public abstract>:<android.os.BatteryStats:android.os.Parcelable>
<android.os.IUserManager.Stub.Proxy: android.graphics.Bitmap getUserIcon(int)>:<public>:<android.os.IUserManager.Stub.Proxy:android.os.IUserManager>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>:<public final>:<android.graphics.drawable.Drawable>
<android.graphics.Rect: float exactCenterX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.app.usage.UsageStats: long getLastTimeUsed()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.os.Trace: void nativeAsyncTraceBegin(long,java.lang.String,int)>:<private static native>:<android.os.Trace>
<android.netdetect.HwCustNetDetectServiceImpl: void access.400(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.os.Process: int getThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.os.IMultiWinService.Stub.Proxy: void setLauncherVisibility(boolean)>:<public>:<android.os.IMultiWinService.Stub.Proxy:android.os.IMultiWinService>
<android.os.StrictMode: void onVmPolicyViolation(java.lang.String,java.lang.Throwable)>:<public static>:<android.os.StrictMode>
<android.app.SearchableInfo.1: void <init>()>:<>:<android.app.SearchableInfo.1:android.os.Parcelable.Creator>
<android.graphics.Paint: int native_getDigitFlag()>:<private static native>:<android.graphics.Paint>
<android.renderscript.RenderScript: int rsnSystemGetPointerSize()>:<static native>:<android.renderscript.RenderScript>
<android.filterfw.core.NativeProgram: boolean bindGetValueFunction(java.lang.String)>:<private native>:<android.filterfw.core.NativeProgram:android.filterfw.core.Program>
<android.net.nsd.DnsSdTxtRecord: int remove(java.lang.String)>:<public>:<android.net.nsd.DnsSdTxtRecord:android.os.Parcelable>
<android.renderscript.Float3: void sub(android.renderscript.Float3)>:<public>:<android.renderscript.Float3>
<android.graphics.Canvas: void native_skew(long,float,float)>:<private static native>:<android.graphics.Canvas>
<android.net.NetworkCapabilities: boolean hasCapability(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.net.NetworkStatsHistory: boolean intersects(long,long)>:<public>:<android.net.NetworkStatsHistory:android.os.Parcelable>
<android.webkit.WebViewProvider.ViewDelegate: boolean setFrame(int,int,int,int)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ActivityTransitionCoordinator: void viewsReady(android.util.ArrayMap)>:<protected>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Double2: void sub(android.renderscript.Double2)>:<public>:<android.renderscript.Double2>
<android.net.http.RequestQueue.ActivePool: org.apache.http.HttpHost getProxyHost()>:<public>:<android.net.http.RequestQueue.ActivePool:android.net.http.RequestQueue.ConnectionManager>
<android.print.PrintAttributes.Resolution: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.Resolution>
<android.app.Notification: java.lang.String access.502(android.app.Notification,java.lang.String)>:<static>:<android.app.Notification:android.os.Parcelable>
<android.app.ApplicationThreadNative: android.app.IApplicationThread asInterface(android.os.IBinder)>:<public static>:<android.app.ApplicationThreadNative:android.os.Binder,android.app.IApplicationThread>
<android.opengl.EGLLogWrapper: void end()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.app.NativeActivity: void onGlobalLayout()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLU: java.lang.String gluErrorString(int)>:<public static>:<android.opengl.GLU>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder setClassInstanceLimit(java.lang.Class,int)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.ActivityThread.ServiceArgsData: java.lang.String toString()>:<public>:<android.app.ActivityThread.ServiceArgsData>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES10: void glFogxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActivityTransitionCoordinator: boolean access.102(android.app.ActivityTransitionCoordinator,boolean)>:<static>:<android.app.ActivityTransitionCoordinator:android.os.ResultReceiver>
<android.net.wifi.IWifiManager.Stub.Proxy: void setSoftapMacFilter(java.lang.String)>:<public>:<android.net.wifi.IWifiManager.Stub.Proxy:android.net.wifi.IWifiManager>
<android.app.SearchDialog.5: boolean onSuggestionClick(int)>:<public>:<android.app.SearchDialog.5:android.widget.SearchView.OnSuggestionListener>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.http.Request: void addHeaders(java.util.Map)>:<>:<android.net.http.Request>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.app.FragmentBreadCrumbs: android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener access.100(android.app.FragmentBreadCrumbs)>:<static>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.net.MobileLinkQualityInfo: void <init>()>:<public>:<android.net.MobileLinkQualityInfo:android.net.LinkQualityInfo>
<android.net.RssiCurve: byte lookupScore(int,boolean)>:<public>:<android.net.RssiCurve:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.GLThreadManager access.800()>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String,java.lang.Class)>:<public>:<android.filterfw.core.FrameFormat>
<android.opengl.GLErrorWrapper: void glLogicOp(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.storage.StorageVolume: int getDescriptionId()>:<public>:<android.os.storage.StorageVolume:android.os.Parcelable>
<android.hwcontrol.HwWidgetFactory.HwDialogStub: void dismissDialogFactory()>:<public abstract>:<android.hwcontrol.HwWidgetFactory.HwDialogStub>
<android.graphics.drawable.RippleDrawable: void drawContent(android.graphics.Canvas)>:<private>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.webkit.WebViewProvider: void destroy()>:<public abstract>:<android.webkit.WebViewProvider>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel[] values()>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.os.INetworkManagementService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.INetworkManagementService.Stub.Proxy:android.os.INetworkManagementService>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.app.WallpaperManager.FastBitmapDrawable: void draw(android.graphics.Canvas)>:<public>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.app.IActivityManager: void moveTaskToStack(int,int,boolean)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.UiAutomation.IAccessibilityServiceClientImpl.1: boolean onKeyEvent(android.view.KeyEvent)>:<public>:<android.app.UiAutomation.IAccessibilityServiceClientImpl.1:android.accessibilityservice.AccessibilityService.Callbacks>
<android.app.IApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.app.IApplicationThread:android.os.IInterface>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision: boolean splitHorizontal(int,int,int,int)>:<public>:<android.graphics.Atlas.SlicePolicy.MaxAreaSplitDecision:android.graphics.Atlas.SlicePolicy.SplitDecision>
<android.app.EnterTransitionCoordinator.11: void run()>:<public>:<android.app.EnterTransitionCoordinator.11:java.lang.Runnable>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(int,int,int)>:<public>:<android.net.wifi.p2p.WifiP2pWfdInfo:android.os.Parcelable>
<android.app.usage.ConfigurationStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.app.usage.ConfigurationStats.1:android.os.Parcelable.Creator>
<android.renderscript.RenderScript: long rsnScriptKernelIDCreate(long,long,int,int)>:<native>:<android.renderscript.RenderScript>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.admin.IDevicePolicyManager.Stub.Proxy: void reportFailedPasswordAttempt(int)>:<public>:<android.app.admin.IDevicePolicyManager.Stub.Proxy:android.app.admin.IDevicePolicyManager>
<android.os.IBinder: boolean isBinderAlive()>:<public abstract>:<android.os.IBinder>
<android.app.Dialog: void registerForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.view.Window.OnWindowDismissedCallback>
<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>:<>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.os.storage.IMountService: void setUsbMassStorageEnabled(boolean)>:<public abstract>:<android.os.storage.IMountService:android.os.IInterface>
<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>:<public>:<android.app.FragmentManagerImpl:android.app.FragmentManager,android.view.LayoutInflater.Factory2>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>:<public abstract>:<android.os.INetworkManagementService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glPolygonOffset(float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.renderscript.Allocation: void generateMipmaps()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.AbstractCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.database.AbstractCursor: double getDouble(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.IConnectivityManager: boolean removeVpnAddress(java.lang.String,int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.net.NetworkFactory: void handleSetScore(int)>:<private>:<android.net.NetworkFactory:android.os.Handler>
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>:<public>:<android.net.wifi.WifiConfiguration:android.net.wifi.HwCustAbsWifiConfiguration,android.os.Parcelable>
<android.app.IActivityManager: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>:<public abstract>:<android.app.IActivityManager:android.os.IInterface>
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)>:<static>:<android.app.ContextImpl:android.content.Context>
<android.os.Parcel: void nativeUnmarshall(long,byte[],int,int)>:<private static native>:<android.os.Parcel>
<android.webkit.WebViewProvider.ViewDelegate: void onWindowFocusChanged(boolean)>:<public abstract>:<android.webkit.WebViewProvider.ViewDelegate>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.IConnectivityManager: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>:<public abstract>:<android.net.IConnectivityManager:android.os.IInterface>
<android.renderscript.Byte2: android.renderscript.Byte2 mul(android.renderscript.Byte2,byte)>:<public static>:<android.renderscript.Byte2>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.SearchableInfo.1: android.app.SearchableInfo[] newArray(int)>:<public>:<android.app.SearchableInfo.1:android.os.Parcelable.Creator>
<android.net.wifi.WifiConnectionStatistics: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiConnectionStatistics:android.os.Parcelable>
<android.os.StrictMode: void onWebViewMethodCalledOnWrongThread(java.lang.Throwable)>:<public static>:<android.os.StrictMode>
<android.opengl.GLES30: void glWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Debug.MemoryInfo: int getTotalSwappablePss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.os.BatteryStats: void dumpLine(java.io.PrintWriter,int,java.lang.String,java.lang.String,java.lang.Object[])>:<private static final transient>:<android.os.BatteryStats:android.os.Parcelable>
<android.renderscript.RenderScript: void rsnMeshGetIndices(long,long,long[],int[],int)>:<native>:<android.renderscript.RenderScript>
<android.renderscript.Path: android.renderscript.Path createDynamicPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation,android.renderscript.Allocation)>:<public static>:<android.renderscript.Path:android.renderscript.BaseObj>
<android.app.Fragment.SavedState.1: void <init>()>:<>:<android.app.Fragment.SavedState.1:android.os.Parcelable.ClassLoaderCreator>
<android.opengl.GLES10: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLErrorWrapper: void glTexGeni(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.os.UpdateLock: void release()>:<public>:<android.os.UpdateLock>
<android.graphics.PixelXorXfermode: void <init>(int)>:<public>:<android.graphics.PixelXorXfermode:android.graphics.Xfermode>
<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String)>:<private>:<android.net.http.HttpAuthHeader>
<android.graphics.drawable.LevelListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>:<public>:<android.net.LocalSocketAddress>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>:<public static>:<android.filterfw.format.ImageFormat>
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()>:<public>:<android.net.http.Headers>
<android.transition.TransitionSet: android.transition.Transition setStartDelay(long)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.filterfw.core.AsyncRunner: android.filterfw.core.SyncRunner access.400(android.filterfw.core.AsyncRunner)>:<static>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.os.storage.IMountService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.os.storage.IMountService.Stub.Proxy:android.os.storage.IMountService>
<android.os.DropBoxManager: void <init>(com.android.internal.os.IDropBoxManagerService)>:<public>:<android.os.DropBoxManager>
<android.app.AppOpsManager.PackageOps.1: android.app.AppOpsManager.PackageOps createFromParcel(android.os.Parcel)>:<public>:<android.app.AppOpsManager.PackageOps.1:android.os.Parcelable.Creator>
<android.os.ISchedulingPolicyService: int requestPriority(int,int,int)>:<public abstract>:<android.os.ISchedulingPolicyService:android.os.IInterface>
<android.app.VoiceInteractor.CommandRequest: void onCommandResult(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CommandRequest:android.app.VoiceInteractor.Request>
<android.print.PrintJobId: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.net.wifi.WifiScanner.ParcelableScanResults.1: void <init>()>:<>:<android.net.wifi.WifiScanner.ParcelableScanResults.1:android.os.Parcelable.Creator>
<android.app.IWallpaperManager: void settingsRestored()>:<public abstract>:<android.app.IWallpaperManager:android.os.IInterface>
<android.app.WallpaperManager.FastBitmapDrawable: void <init>(android.graphics.Bitmap,android.app.WallpaperManager.1)>:<>:<android.app.WallpaperManager.FastBitmapDrawable:android.graphics.drawable.Drawable>
<android.net.NetworkScoreManager: java.lang.String getActiveScorerPackage()>:<public>:<android.net.NetworkScoreManager>
<android.transition.Scene: void setCurrentScene(android.view.View,android.transition.Scene)>:<static>:<android.transition.Scene>
<android.os.ParcelFileDescriptor.ListenerBridge: void run()>:<public>:<android.os.ParcelFileDescriptor.ListenerBridge:java.lang.Thread>
<android.app.ActivityManagerProxy: void hang(android.os.IBinder,boolean)>:<public>:<android.app.ActivityManagerProxy:android.app.IActivityManager>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebViewFactory: java.lang.Class getFactoryClass()>:<private static>:<android.webkit.WebViewFactory>
<android.graphics.Bitmap: int nativeConfig(long)>:<private static native>:<android.graphics.Bitmap:android.os.Parcelable>
<android.filterfw.core.ProgramPort: void transfer(android.filterfw.core.FilterContext)>:<public>:<android.filterfw.core.ProgramPort:android.filterfw.core.FieldPort,android.filterfw.core.InputPort,android.filterfw.core.FilterPort>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.app.IActivityContainer.Stub: android.os.IBinder asBinder()>:<public>:<android.app.IActivityContainer.Stub:android.os.Binder,android.app.IActivityContainer>
<android.opengl.GLErrorWrapper: void glOrthof(float,float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.net.wifi.HwWifiStatStore: void triggerUploadIfNeed()>:<private>:<android.net.wifi.HwWifiStatStore>
<android.app.admin.IDevicePolicyManager: boolean isDeviceOwner(java.lang.String)>:<public abstract>:<android.app.admin.IDevicePolicyManager:android.os.IInterface>
<android.app.IUiAutomationConnection: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>:<public abstract>:<android.app.IUiAutomationConnection:android.os.IInterface>
<android.os.BatteryStats.Uid: java.util.Map getSyncStats()>:<public abstract>:<android.os.BatteryStats.Uid>
<android.os.PowerManager: boolean isPowerSaveMode()>:<public>:<android.os.PowerManager>
<android.filterfw.core.AsyncRunner: void run()>:<public>:<android.filterfw.core.AsyncRunner:android.filterfw.core.GraphRunner>
<android.database.sqlite.SQLiteConnectionPool: void onConnectionLeaked()>:<>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.transition.TransitionManager.MultiListener: void removeListeners()>:<private>:<android.transition.TransitionManager.MultiListener:android.view.ViewTreeObserver.OnPreDrawListener,android.view.View.OnAttachStateChangeListener>
<android.renderscript.Script.LaunchOptions: int getYEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
