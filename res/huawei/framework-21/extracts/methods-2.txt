<android.media.MediaSyncEvent: android.media.MediaSyncEvent setAudioSessionId(int)>:<public>:<android.media.MediaSyncEvent>
<android.media.MediaFile: void hwAddFileType(java.lang.String,int,java.lang.String)>:<public static>:<android.media.MediaFile>
<android.view.accessibility.AccessibilityWindowInfo: void setLayer(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.DayPickerView: int access.002(android.widget.DayPickerView,int)>:<static>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.AmrInputStream: int read(byte[])>:<public>:<android.media.AmrInputStream:java.io.InputStream>
<android.animation.PropertyValuesHolder: void setIntValues(int[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.media.FocusRequester: void dump(java.io.PrintWriter)>:<>:<android.media.FocusRequester>
<android.animation.LayoutTransition: long access.1200(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.security.KeyChain: void ensureNotOnMainThread(android.content.Context)>:<private static>:<android.security.KeyChain>
<android.media.ResampleInputStream: void close()>:<public>:<android.media.ResampleInputStream:java.io.InputStream>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.printservice.IPrintService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.printservice.IPrintService.Stub:android.os.Binder,android.printservice.IPrintService>
<android.media.MediaInserter: void flush(android.net.Uri,java.util.List)>:<private>:<android.media.MediaInserter>
<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.session.ISession.Stub.Proxy: void setPlaybackToLocal(android.media.AudioAttributes)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.media.MiniThumbFile: java.io.RandomAccessFile miniThumbDataFile(long)>:<private>:<android.media.MiniThumbFile>
<android.widget.TextView: boolean hasPasswordTransformationMethod()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.TextureView:android.view.View>
<android.media.RemoteController.MediaControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public>:<android.media.RemoteController.MediaControllerCallback:android.media.session.MediaController.Callback>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.security.IKeyChainService: byte[] getCertificate(java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorClosed()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.view.HardwareRenderer: void dumpGfxInfo(java.io.PrintWriter,java.io.FileDescriptor)>:<abstract>:<android.view.HardwareRenderer>
<android.view.ViewRootImpl.CalledFromWrongThreadException: void <init>(java.lang.String)>:<public>:<android.view.ViewRootImpl.CalledFromWrongThreadException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.animation.AnimatorSet.DependencyListener: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.media.MediaRouter.SimpleCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setFormat(android.media.AudioFormat)>:<public>:<android.media.audiopolicy.AudioMix.Builder>
<android.view.VelocityTracker: android.view.VelocityTracker obtain(java.lang.String)>:<public static>:<android.view.VelocityTracker>
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>:<public static>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.View: int getVerticalScrollbarPosition()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.ViewDebug: void capture(android.view.View,java.io.OutputStream,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onChannelRetuned(android.net.Uri)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.opengl.GLES20: int glGetError()>:<public static native>:<android.opengl.GLES20>
<android.widget.Editor.HandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.inputmethod.InputMethodSubtype: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>:<public>:<android.media.AudioManager>
<android.view.MotionEvent: float getAxisValue(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.WindowAnimationFrameStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.WindowAnimationFrameStats.1:android.os.Parcelable.Creator>
<android.appwidget.AppWidgetHost: void deleteHost()>:<public>:<android.appwidget.AppWidgetHost>
<android.database.CursorWindow: void nativeFreeLastRow(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.CCParser.CCData: void <clinit>()>:<static>:<android.media.CCParser.CCData>
<android.media.AudioService: boolean isPlatformTelevision()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AbsListView.SavedState: void <init>(android.os.Parcel)>:<private>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.AudioService.VolumeStreamState: boolean adjustIndex(int,int)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.service.trust.TrustAgentService: void grantTrust(java.lang.CharSequence,long,boolean)>:<public final>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.IntArrayEvaluator: void <init>()>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onGetPrintJobInfoResult(android.print.PrintJobInfo,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.media.FocusRequester: int getStreamType()>:<>:<android.media.FocusRequester>
<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>:<public>:<android.view.accessibility.CaptioningManager>
<android.database.sqlite.SQLiteSession: boolean hasConnection()>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public abstract>:<android.view.ViewParent>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getWindows(int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.SoundPool.SoundPoolDelegate: void release()>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.RenderNodeAnimator: void <init>(int,int,float,float)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.textservice.TextInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.textservice.TextInfo.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.CursorJoiner.1: void <clinit>()>:<static>:<android.database.CursorJoiner.1>
<android.widget.ZoomControls: void hide()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>:<public>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.widget.Toolbar.SavedState.1: android.widget.Toolbar.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.widget.Toolbar.SavedState.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSEOrSPSE(org.apache.harmony.dalvik.ddmc.Chunk,java.lang.String)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.MediaScanner.MyMediaScannerClient: boolean doesPathHaveFilename(java.lang.String,java.lang.String)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.preference.RingtonePreference: void <init>(android.content.Context)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.filterpacks.imageproc.ToRGBFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.media.TimedText: java.util.Set keySet()>:<private>:<android.media.TimedText>
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>:<public>:<android.media.session.MediaController>
<android.view.IWindowSession.Stub.Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.MediaScanner: void access.3100(android.media.MediaScanner,java.lang.String,java.lang.String)>:<static>:<android.media.MediaScanner>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy:android.service.voice.IVoiceInteractionSessionService>
<android.opengl.GLLogWrapper: void glFogxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.PlaybackState.CustomAction: void <init>(android.os.Parcel)>:<private>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.WindowId: void unregisterFocusObserver(android.view.WindowId.FocusObserver)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.GLES20Canvas: int getHeight()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.Editor.InsertionHandleView: void hideAfterDelay()>:<private>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.RemoteController: android.media.RemoteController.OnClientUpdateListener getUpdateListener()>:<>:<android.media.RemoteController>
<android.media.AudioService.VolumeStreamState: void applyAllVolumes()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.view.View: void setPivotY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.RectEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.gesture.Gesture: float getLength()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.accounts.AccountManager.5: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.View: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor.EasyEditPopupWindow: int getVerticalLocalPosition(int)>:<protected>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.Switch: void cancelPositionAnimator()>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.filterpacks.imageproc.FisheyeFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.widget.RemoteViews.TextViewDrawableAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.TextViewDrawableAction:android.widget.RemoteViews.Action>
<android.media.IRemoteControlClient: void seekTo(int,long)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onTracksChanged(java.util.List)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.WebVttRenderingWidget: void layoutRegion(int,int,android.media.WebVttRenderingWidget.RegionLayout)>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.session.PlaybackState: java.util.List getCustomActions()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback:android.os.IInterface>
<android.view.IWindowManager: void startAppFreezingScreen(android.os.IBinder,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.View: boolean fitSystemWindowsInt(android.graphics.Rect)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDrm.Certificate: byte[] getWrappedPrivateKey()>:<public>:<android.media.MediaDrm.Certificate>
<android.opengl.GLLogWrapper: void glDisable(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService.Stub.Proxy: void setVibrateSetting(int,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.print.pdf.PrintedPdfDocument: int getPageWidth()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.accounts.AccountManager.AmsTask.Response: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.widget.ListView: void scrollListItemsBy(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioRecord: int native_setup(java.lang.Object,java.lang.Object,int,int,int,int,int[])>:<private final native>:<android.media.AudioRecord>
<android.media.effect.effects.BackDropperEffect.1: void onLearningDone(android.filterpacks.videoproc.BackDropperFilter)>:<public>:<android.media.effect.effects.BackDropperEffect.1:android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener>
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLErrorWrapper: void glMultMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>:<public>:<android.media.effect.SingleFilterEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.AudioFormat: void <init>()>:<public>:<android.media.AudioFormat>
<android.media.tv.TvView: int access.2002(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityManager: java.lang.Object access.300(android.view.accessibility.AccessibilityManager)>:<static>:<android.view.accessibility.AccessibilityManager>
<android.media.audiofx.AudioEffect: int getParameter(int,int[])>:<public>:<android.media.audiofx.AudioEffect>
<android.view.GLES20Canvas: void restore()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaPlayer: void _setAudioStreamType(int)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.textservice.SpellCheckerInfo.1: android.view.textservice.SpellCheckerInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.textservice.SpellCheckerInfo.1:android.os.Parcelable.Creator>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onRewind()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.media.RemoteDisplayState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.view.ViewGroup: void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: void cancelLongPress()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.voice.AlwaysOnHotwordDetector: void access.600(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.Nsd: void computeSavePageNo()>:<public static>:<android.view.Nsd>
<android.media.tv.ITvInputManager.Stub: void <init>()>:<public>:<android.media.tv.ITvInputManager.Stub:android.os.Binder,android.media.tv.ITvInputManager>
<android.widget.ListView: int lookForSelectablePositionOnScreen(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onSeekTo(long)>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setBufferedPosition(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.media.AudioTrack: int native_set_loop(int,int,int)>:<private final native>:<android.media.AudioTrack>
<android.media.SoundPool.SoundPoolImpl: void setVolume(int,float,float)>:<public final>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.service.dreams.IDreamManager: void setDreamComponents(android.content.ComponentName[])>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.print.PrinterId.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.widget.AbsListView.RecycleBin: android.view.View getActiveView(int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.view.PointerIcon: float getHotSpotY()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.SurfaceView.4: void setKeepScreenOn(boolean)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.media.tv.ITvInputService.Stub: android.media.tv.ITvInputService asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputService.Stub:android.os.Binder,android.media.tv.ITvInputService>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getWeekNumberColor()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.AudioService: int access.2500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.textservice.SpellCheckerSession.1: void <init>(android.view.textservice.SpellCheckerSession)>:<>:<android.view.textservice.SpellCheckerSession.1:android.os.Handler>
<android.view.inputmethod.CorrectionInfo.1: android.view.inputmethod.CorrectionInfo[] newArray(int)>:<public>:<android.view.inputmethod.CorrectionInfo.1:android.os.Parcelable.Creator>
<android.media.CCParser.CCMemory: void <init>()>:<>:<android.media.CCParser.CCMemory>
<android.database.sqlite.SQLiteOpenHelper: void close()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.media.MediaScanner.MyMediaScannerClient: void processImageFile(java.lang.String)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.media.AudioService.AudioHandler: void <init>(android.media.AudioService,android.media.AudioService.1)>:<>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.view.IInputFilterHost.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IInputFilterHost.Stub.Proxy:android.view.IInputFilterHost>
<android.media.Rating.1: android.media.Rating[] newArray(int)>:<public>:<android.media.Rating.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: boolean postFling(long)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.session.MediaSession: void dispatchPlayFromMediaId(java.lang.String,android.os.Bundle)>:<private>:<android.media.session.MediaSession>
<android.widget.ScrollBarDrawable: void <init>()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setDescription(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.view.View.2: boolean apply(java.lang.Object)>:<public volatile>:<android.view.View.2:com.android.internal.util.Predicate>
<android.preference.SeekBarPreference: void setMax(int)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.widget.AdapterView: int findSyncPosition()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.preference.Preference: void setEnabledStateOnViews(android.view.View,boolean)>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.media.tv.ITvInputHardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>:<public abstract>:<android.media.tv.ITvInputHardware:android.os.IInterface>
<android.media.MediaCodec.MediaImage.MediaPlane: int getRowStride()>:<public>:<android.media.MediaCodec.MediaImage.MediaPlane:android.media.Image.Plane>
<android.database.sqlite.SQLiteSession.Transaction: void <init>()>:<private>:<android.database.sqlite.SQLiteSession.Transaction>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioAddress(java.lang.String)>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>:<public>:<android.view.ViewConfiguration>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SearchView: void access.2000(android.widget.SearchView,java.lang.CharSequence)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewOverlay.OverlayViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.WebVttRenderer: void <init>(android.content.Context)>:<public>:<android.media.WebVttRenderer:android.media.SubtitleController.Renderer>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.ViewRootImpl.AsyncInputStage: void enqueue(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>:<public abstract>:<android.view.SurfaceHolder>
<android.media.projection.MediaProjectionInfo: void <clinit>()>:<static>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.view.IWindowManager: int getBaseDisplayDensity(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<huawei.android.net.wifi.HwCustWifiManager: void validateChannel()>:<private>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.media.audiofx.AudioEffect: boolean getEnabled()>:<public>:<android.media.audiofx.AudioEffect>
<android.printservice.PrintJob: boolean isStarted()>:<public>:<android.printservice.PrintJob>
<android.widget.Spinner.DropDownAdapter: boolean isEnabled(int)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.CalendarView: void setEnabled(boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.GridView: void setVerticalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.service.wallpaper.WallpaperService.Engine: void attach(android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2800(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.IInputFilterHost.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IInputFilterHost.Stub.Proxy:android.view.IInputFilterHost>
<android.accounts.IAccountManager.Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.accounts.ChooseTypeAndAccountActivity: void onDestroy()>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.preference.SeekBarVolumizer.Observer: void <init>(android.preference.SeekBarVolumizer,android.os.Handler)>:<public>:<android.preference.SeekBarVolumizer.Observer:android.database.ContentObserver>
<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector.Callback access.300(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.media.session.ISession: void setPlaybackToLocal(android.media.AudioAttributes)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.view.Window: void setExitTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.media.SoundPool: void setVolume(int,float,float)>:<public final>:<android.media.SoundPool>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.SpinnerAdapter:android.widget.Adapter>
<android.view.WindowInfo: void initFromParcel(android.os.Parcel)>:<private>:<android.view.WindowInfo:android.os.Parcelable>
<android.media.MediaPlayer: void native_init()>:<private static final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.IAudioService: boolean isStreamAffectedByRingerMode(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ViewRootImpl: void trackFPS()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.WindowManagerPolicy: boolean isKeyguardLocked()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.MediaDrm.OnEventListener: void onEvent(android.media.MediaDrm,byte[],int,int,byte[])>:<public abstract>:<android.media.MediaDrm.OnEventListener>
<android.widget.RemoteViewsAdapter: void loadNextIndexInBackground()>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.accessibility.AccessibilityWindowInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.accessibility.AccessibilityWindowInfo.1:android.os.Parcelable.Creator>
<android.media.AudioTrack: int native_write_byte(byte[],int,int,int,boolean)>:<private final native>:<android.media.AudioTrack>
<android.widget.QuickContactBadge.QueryHandler: void <init>(android.widget.QuickContactBadge,android.content.ContentResolver)>:<public>:<android.widget.QuickContactBadge.QueryHandler:android.content.AsyncQueryHandler,android.os.Handler>
<android.view.ViewGroup: boolean hasTransientState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListView: boolean isOpaque()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.Image: void <init>()>:<protected>:<android.media.Image:java.lang.AutoCloseable>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)>:<public static>:<android.media.MediaFile>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.database.sqlite.SQLiteDatabase: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hsm.HwSystemManager: boolean checkWindowType(int)>:<public static>:<android.hsm.HwSystemManager>
<android.view.IWindowSessionCallback.Stub: android.view.IWindowSessionCallback asInterface(android.os.IBinder)>:<public static>:<android.view.IWindowSessionCallback.Stub:android.os.Binder,android.view.IWindowSessionCallback>
<android.widget.TextView: void setText(char[],int,int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IApplicationToken.Stub: void <init>()>:<public>:<android.view.IApplicationToken.Stub:android.os.Binder,android.view.IApplicationToken>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.GridLayout.Spec: void <clinit>()>:<static>:<android.widget.GridLayout.Spec>
<android.view.IWindowSession.Stub.Proxy: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.session.MediaSession: void access.900(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.view.PointerIcon: boolean isLoaded()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.MotionEvent: int getPointerIdBits()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewGroup: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: int getBoxHeight(android.text.Layout)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GhostView: void onDraw(android.graphics.Canvas)>:<protected>:<android.view.GhostView:android.view.View>
<android.widget.ListView: android.view.View fillFromMiddle(int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.projection.MediaProjection.MediaProjectionCallback: void <init>(android.media.projection.MediaProjection,android.media.projection.MediaProjection.1)>:<>:<android.media.projection.MediaProjection.MediaProjectionCallback:android.media.projection.IMediaProjectionCallback.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.dreams.DreamService: void finish()>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.ClosedCaptionTrack: void <init>(android.media.ClosedCaptionWidget,android.media.MediaFormat)>:<>:<android.media.ClosedCaptionTrack:android.media.SubtitleTrack>
<android.widget.VideoView: void measureAndLayoutSubtitleWidget()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.ViewRootImpl: void dumpGfxInfo(int[])>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl: void setStopped(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.InputQueue: long nativeSendMotionEvent(long,android.view.MotionEvent)>:<private static native>:<android.view.InputQueue>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.widget.Editor: boolean isPositionVisible(float,float)>:<private>:<android.widget.Editor>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.view.View.14: java.lang.Float get(android.view.View)>:<public>:<android.view.View.14:android.util.FloatProperty>
<android.media.session.ISessionManager.Stub.Proxy: void removeSessionsListener(android.media.session.IActiveSessionsListener)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.service.notification.NotificationListenerService.RankingMap: int describeContents()>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void notifyUserAction()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.VelocityTracker.Estimator: float getXCoeff(int)>:<public>:<android.view.VelocityTracker.Estimator>
<android.service.fingerprint.FingerprintUtils: void addFingerprintIdForUser(int,android.content.ContentResolver,int)>:<public static>:<android.service.fingerprint.FingerprintUtils>
<android.view.ThreadedRenderer: void nSetup(long,int,int,float,float,float,float,int,int)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.preference.MultiCheckPreference: java.lang.CharSequence getSummary()>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.DateTimeView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.service.dreams.IDreamManager.Stub.Proxy: android.content.ComponentName[] getDreamComponents()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.SearchView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.IWindowId: void unregisterFocusObserver(android.view.IWindowFocusObserver)>:<public abstract>:<android.view.IWindowId:android.os.IInterface>
<android.media.tv.ITvInputSession: void release()>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.widget.TextView: void debug(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.SurfaceHolder: void setFormat(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnSpan()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.media.AudioService: void startBluetoothScoInt(android.os.IBinder,int)>:<>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.Menu: void removeGroup(int)>:<public abstract>:<android.view.Menu>
<android.view.View: void drawableHotspotChanged(float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Space: void draw(android.graphics.Canvas)>:<public>:<android.widget.Space:android.view.View>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>:<public>:<android.view.TouchDelegate>
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.FloatEvaluator: void <init>()>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.view.LayoutInflater: android.content.Context getContext()>:<public>:<android.view.LayoutInflater>
<android.media.AudioService.VolumeController: void postVolumeChanged(int,int)>:<public>:<android.media.AudioService.VolumeController>
<android.service.fingerprint.FingerprintManager: void stopListening()>:<public>:<android.service.fingerprint.FingerprintManager>
<android.filterpacks.imageproc.SaturateFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.view.View: void setTransitionName(java.lang.String)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void doRelayoutAsyncly(boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.accessibility.CaptioningManager: void access.000(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.netdetect.HwCustNetDetectServiceImpl.1: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.view.IWindow.Stub.Proxy: void windowFocusChanged(boolean,boolean)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.animation.Transformation: void postCompose(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.printservice.PrinterDiscoverySession: void destroy()>:<>:<android.printservice.PrinterDiscoverySession>
<android.view.animation.PathInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.gesture.OrientedBoundingBox: void <init>(float,float,float,float,float)>:<>:<android.gesture.OrientedBoundingBox>
<android.view.accessibility.AccessibilityManager: void tryConnectToServiceLocked()>:<private>:<android.view.accessibility.AccessibilityManager>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackStream(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.media.MediaDescription.1: void <init>()>:<>:<android.media.MediaDescription.1:android.os.Parcelable.Creator>
<android.media.AudioRecord: void handleFullVolumeRec(boolean)>:<private>:<android.media.AudioRecord>
<android.widget.CursorAdapter: int getCount()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.View: boolean canHaveDisplayList()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getComplexityRange()>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.widget.AbsListView.InputConnectionWrapper: boolean beginBatchEdit()>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.preference.SeekBarVolumizer: void startSample()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,long,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.WindowContentFrameStats: void <init>()>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.widget.AdapterView: android.view.View getSelectedView()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.Surface.CompatibleCanvas: void setMatrix(android.graphics.Matrix)>:<public>:<android.view.Surface.CompatibleCanvas:android.graphics.Canvas>
<android.widget.RemoteViews.MemoryUsageCounter: void <init>(android.widget.RemoteViews)>:<private>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.animation.ValueAnimator: void notifyStartListeners()>:<private>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.textservice.SpellCheckerSession: void access.000(android.view.textservice.SpellCheckerSession,android.view.textservice.SuggestionsInfo[])>:<static>:<android.view.textservice.SpellCheckerSession>
<android.accounts.AccountsException: void <init>(java.lang.String)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.widget.GridView: boolean commonKey(int,int,android.view.KeyEvent)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.ActionButtonSubmenu access.700(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>:<public abstract>:<android.view.MenuItem>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.view.Window: boolean hasFeature(int)>:<public>:<android.view.Window>
<android.widget.RemoteViews.ReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.view.IWindowManager.Stub.Proxy: void updateRotation(boolean,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.Switch: int getThumbTextPadding()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.SearchView: android.view.View getSubmitArea()>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void access.1800(android.view.ViewRootImpl.SyntheticTouchNavigationHandler,long,int,int)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.FaceDetector.Face: float confidence()>:<public>:<android.media.FaceDetector.Face>
<android.media.IMediaHTTPConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.database.sqlite.DatabaseObjectNotClosedException: void <init>()>:<public>:<android.database.sqlite.DatabaseObjectNotClosedException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.IRemoteVolumeController.Stub: void <init>()>:<public>:<android.media.IRemoteVolumeController.Stub:android.os.Binder,android.media.IRemoteVolumeController>
<android.view.View.SendViewScrolledAccessibilityEvent: void run()>:<public>:<android.view.View.SendViewScrolledAccessibilityEvent:java.lang.Runnable>
<android.media.tv.TvInputService: android.media.tv.TvInputService.Session onCreateSession(java.lang.String)>:<public abstract>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public>:<android.media.MediaMetadataEditor>
<android.view.SurfaceHolder: void setFixedSize(int,int)>:<public abstract>:<android.view.SurfaceHolder>
<android.media.AudioService.AudioServiceInternal: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.AudioServiceInternal:android.media.AudioManagerInternal>
<android.view.OrientationEventListener: int access.100(android.view.OrientationEventListener)>:<static>:<android.view.OrientationEventListener>
<android.media.IRemoteControlClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMin()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.1: android.print.PrinterCapabilitiesInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.widget.ProgressBar: void updateDrawableState()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.widget.Editor.Blink: void run()>:<public>:<android.widget.Editor.Blink:android.os.Handler,java.lang.Runnable>
<android.view.GLES20Canvas: void translate(float,float)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.HwSplineOverScrollerDummy: int getBallisticDuration(int)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.service.fingerprint.FingerprintManager.2: void onProcessed(int)>:<public>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void handleMessage(android.os.Message)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.accounts.AbstractAccountAuthenticator.Transport: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.animation.ObjectAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.DatePickerCalendarDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.WebVttRenderingWidget.RegionLayout: boolean prune()>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.printservice.PrintJob: boolean isBlocked()>:<public>:<android.printservice.PrintJob>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.PackedMap pack()>:<public>:<android.widget.GridLayout.Assoc:java.util.ArrayList,java.util.AbstractList,java.util.AbstractCollection>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.Assoc of(java.lang.Class,java.lang.Class)>:<public static>:<android.widget.GridLayout.Assoc:java.util.ArrayList,java.util.AbstractList,java.util.AbstractCollection>
<android.printservice.PrintJob: boolean equals(java.lang.Object)>:<public>:<android.printservice.PrintJob>
<android.widget.Editor: android.view.ActionMode getSelectionActionMode()>:<protected>:<android.widget.Editor>
<android.widget.DatePicker: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.Session: void setMain()>:<>:<android.media.tv.TvInputManager.Session>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void setTrustAgentFeaturesEnabled(android.os.Bundle,android.os.IBinder)>:<public>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.media.MediaScanner.MyMediaScannerClient: void setSettingIfNotSet(java.lang.String,android.net.Uri,long)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.widget.GridLayout: int getTotalMargin(android.view.View,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.SurfaceView: com.huawei.android.hwaps.IFpsController access.200()>:<static>:<android.view.SurfaceView:android.view.View>
<android.widget.Editor: boolean canPaste()>:<protected>:<android.widget.Editor>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.view.TextureView: boolean isAvailable()>:<public>:<android.view.TextureView:android.view.View>
<android.gesture.GesturePoint: void <init>(float,float,long)>:<public>:<android.gesture.GesturePoint>
<android.view.GLES20Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.Editor.InsertionPointCursorController: void onTouchModeChanged(boolean)>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.widget.Editor: void selectAllText()>:<protected>:<android.widget.Editor>
<android.media.WebVttParser.3: android.media.TextTrackRegion parseRegion(java.lang.String)>:<>:<android.media.WebVttParser.3:android.media.WebVttParser.Phase>
<androidhwext.R: void <init>()>:<public>:<androidhwext.R>
<android.view.accessibility.AccessibilityCache: void addWindow(android.view.accessibility.AccessibilityWindowInfo)>:<public>:<android.view.accessibility.AccessibilityCache>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>:<static>:<android.view.FocusFinder>
<android.widget.SlidingDrawer.SlidingHandler: void handleMessage(android.os.Message)>:<public>:<android.widget.SlidingDrawer.SlidingHandler:android.os.Handler>
<android.media.session.MediaController.Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.Callback>
<android.media.audiofx.Visualizer.NativeEventHandler: void <init>(android.media.audiofx.Visualizer,android.media.audiofx.Visualizer,android.os.Looper)>:<public>:<android.media.audiofx.Visualizer.NativeEventHandler:android.os.Handler>
<android.media.RemoteControlClient: void setTransportControlFlags(int)>:<public>:<android.media.RemoteControlClient>
<android.filterpacks.imageproc.GrainFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.view.GLES20Canvas: void nDrawArc(long,float,float,float,float,float,float,boolean,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLSurfaceView.SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>:<public>:<android.opengl.GLSurfaceView.SimpleEGLConfigChooser:android.opengl.GLSurfaceView.ComponentSizeChooser,android.opengl.GLSurfaceView.BaseConfigChooser>
<android.animation.AnimatorInflater: android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray)>:<private static>:<android.animation.AnimatorInflater>
<android.media.MediaCodecInfo.CodecCapabilities: boolean checkFeature(java.lang.String,int)>:<private>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.accounts.Account: java.lang.String toString()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.view.View: boolean isVisibleToUser()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Tokenizer: int access.108(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.widget.GridView: boolean sequenceScroll(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setOnSubtitleDataListener(android.media.MediaPlayer.OnSubtitleDataListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioService: boolean access.3000(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.opengl.GLLogWrapper: void glLightModelxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiopolicy.AudioPolicy: void setStatusListener(android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener)>:<>:<android.media.audiopolicy.AudioPolicy>
<android.view.KeyEvent: int getDeviceId()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.MediaSession.Token: void <init>(android.media.session.ISessionController)>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: int getVolumeHandling()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.widget.RelativeLayout: void centerHorizontal(android.view.View,android.widget.RelativeLayout.LayoutParams,int)>:<private static>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GLES20Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.notification.INotificationListener: void onNotificationRemoved(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.CamcorderProfile: void <init>(int,int,int,int,int,int,int,int,int,int,int,int)>:<private>:<android.media.CamcorderProfile>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.IntKeyframes)>:<public>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLConfigChooser access.300(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.ListPopupWindow.PopupTouchInterceptor: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow.1)>:<>:<android.widget.ListPopupWindow.PopupTouchInterceptor:android.view.View.OnTouchListener>
<android.view.IWindowManager: void setOverscan(int,int,int,int,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.service.wallpaper.IWallpaperService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.wallpaper.IWallpaperService.Stub.Proxy:android.service.wallpaper.IWallpaperService>
<android.media.tv.ITvInputSession.Stub.Proxy: void setCaptionEnabled(boolean)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.media.TtmlNodeListener: void onTtmlNodeParsed(android.media.TtmlNode)>:<public abstract>:<android.media.TtmlNodeListener>
<android.widget.DatePickerCalendarDelegate: void setMinDate(long)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLErrorWrapper: void glClearColor(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.OrientationEventListener: android.view.OrientationListener access.000(android.view.OrientationEventListener)>:<static>:<android.view.OrientationEventListener>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postLayoutSurface(int,int,int,int)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.view.WindowInsets: boolean hasInsets()>:<public>:<android.view.WindowInsets>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postContentBlocked(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.media.session.ISessionController.Stub.Proxy: android.os.Bundle getExtras()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ScaleGestureDetector: boolean inDoubleTapMode()>:<private>:<android.view.ScaleGestureDetector>
<android.widget.VideoView: android.media.MediaPlayer access.700(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.session.MediaSessionManager.SessionsChangedWrapper: android.media.session.MediaSessionManager.OnActiveSessionsChangedListener access.300(android.media.session.MediaSessionManager.SessionsChangedWrapper)>:<static>:<android.media.session.MediaSessionManager.SessionsChangedWrapper>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.RelativeLayout.DependencyGraph: java.util.ArrayDeque findRoots(int[])>:<private>:<android.widget.RelativeLayout.DependencyGraph>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter.CalendarGestureListener: void <init>(android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter)>:<>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter.CalendarGestureListener:android.view.GestureDetector.SimpleOnGestureListener>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onSetPrintJobStateResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.database.sqlite.SQLiteQuery: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal)>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.printservice.IPrintService: void createPrinterDiscoverySession()>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.media.MediaRouter.RouteInfo: java.lang.String getDeviceAddress()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.RenderNode: boolean nSetTranslationX(long,float)>:<private static native>:<android.view.RenderNode>
<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.widget.Scroller.ViscousFluidInterpolator: float viscousFluid(float)>:<private static>:<android.widget.Scroller.ViscousFluidInterpolator:android.view.animation.Interpolator>
<android.widget.Switch: int getCompoundPaddingLeft()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrinterCapabilitiesInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>:<public>:<android.media.AudioManager>
<android.media.AmrInputStream: void <init>(java.io.InputStream)>:<public>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.IWindowManager: int getPreferredOptionsPanelGravity()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: void onAnimationStart()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy: boolean validateRotationAnimationLw(int,int,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.animation.StateListAnimator: void <init>()>:<public>:<android.animation.StateListAnimator>
<android.view.FocusFinder: boolean isTouchCandidate(int,int,android.graphics.Rect,int)>:<private>:<android.view.FocusFinder>
<android.media.session.PlaybackState: long getActions()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.preference.DialogPreference.SavedState.1: void <init>()>:<>:<android.preference.DialogPreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeights()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES31: void <clinit>()>:<static>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: int getPaddingBottom()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.print.PrintAttributes.Resolution: int hashCode()>:<public>:<android.print.PrintAttributes.Resolution>
<android.print.IPrintSpooler.Stub: android.print.IPrintSpooler asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.view.ViewDebug: java.lang.Object invokeViewMethod(android.view.View,java.lang.reflect.Method,java.lang.Object[])>:<public static>:<android.view.ViewDebug>
<android.media.AmrInputStream: int read(byte[],int,int)>:<public>:<android.media.AmrInputStream:java.io.InputStream>
<android.widget.AutoCompleteTextView: void access.900(android.widget.AutoCompleteTextView,int)>:<static>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.MediaDrm: void postEventFromNative(java.lang.Object,int,int,java.lang.Object)>:<private static>:<android.media.MediaDrm>
<android.view.KeyCharacterMap.1: android.view.KeyCharacterMap[] newArray(int)>:<public>:<android.view.KeyCharacterMap.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleHello: void sendWAIT(int)>:<public static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.tv.ITvInputHardware: void overrideAudioSink(int,java.lang.String,int,int,int)>:<public abstract>:<android.media.tv.ITvInputHardware:android.os.IInterface>
<android.media.AudioManager: void setRouting(int,int,int)>:<public>:<android.media.AudioManager>
<android.database.sqlite.SQLiteConnectionPool: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.IStatusBarNotificationHolder.Stub: android.service.notification.IStatusBarNotificationHolder asInterface(android.os.IBinder)>:<public static>:<android.service.notification.IStatusBarNotificationHolder.Stub:android.os.Binder,android.service.notification.IStatusBarNotificationHolder>
<android.media.tv.TvInputService.Session.9: void <init>(android.media.tv.TvInputService.Session,android.media.tv.TvContentRating)>:<>:<android.media.tv.TvInputService.Session.9:java.lang.Runnable>
<android.security.AndroidKeyStore: void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.IWindowManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.ActionMenuPresenter.SavedState: void <init>(android.os.Parcel)>:<>:<android.widget.ActionMenuPresenter.SavedState:android.os.Parcelable>
<android.widget.GridLayout: void setRowOrderPreserved(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnectionPool: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.View: void drawableStateChanged()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerInternal: void requestTraversalFromDisplayManager()>:<public abstract>:<android.view.WindowManagerInternal>
<android.view.ViewDebug: void stopHierarchyTracing()>:<public static>:<android.view.ViewDebug>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.widget.RelativeLayout.DependencyGraph: void getSortedViews(android.view.View[],int[])>:<transient>:<android.widget.RelativeLayout.DependencyGraph>
<android.view.View: android.util.SparseArray getAttributeMap()>:<private static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Rating: android.media.Rating newUnratedRating(int)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.view.RenderNode: void <init>(java.lang.String,android.view.View)>:<private>:<android.view.RenderNode>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.view.MotionEvent: long nativeCopy(long,long,boolean)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteDatabase: void addCustomFunction(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>:<public static>:<android.opengl.ETC1Util>
<android.media.RemoteController: void onNewMetadata(int,android.os.Bundle)>:<private>:<android.media.RemoteController>
<android.preference.Preference: void performClick(android.preference.PreferenceScreen)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.service.persistentdata.PersistentDataBlockManager: int getDataBlockSize()>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.service.notification.IConditionProvider.Stub: android.os.IBinder asBinder()>:<public>:<android.service.notification.IConditionProvider.Stub:android.os.Binder,android.service.notification.IConditionProvider>
<android.view.View: void setTag(int,java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvInputService.Session.6: void run()>:<public>:<android.media.tv.TvInputService.Session.6:java.lang.Runnable>
<android.filterpacks.videosrc.SurfaceTextureSource: void <clinit>()>:<static>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.Nsd.LauncherPara: void <init>()>:<public>:<android.view.Nsd.LauncherPara>
<android.view.animation.Animation: void setRepeatCount(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.filterpacks.videosrc.SurfaceTextureTarget: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.MediaSession: void dispatchRate(android.media.Rating)>:<private>:<android.media.session.MediaSession>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.opengl.GLLogWrapper: java.lang.String getBeginMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ThreadedRenderer: void finalize()>:<protected>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.service.notification.ZenModeConfig: android.net.Uri toCountdownConditionId(long)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>:<public>:<android.media.MediaRecorder>
<android.view.InputFilter: void install(android.view.IInputFilterHost)>:<public final>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.hsm.HwCameraPermWrapper: boolean isBlocked()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.gesture.GestureOverlayView: void clear(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.FocusFinder: android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int)>:<private static>:<android.view.FocusFinder>
<android.view.ActionMode: void setTag(java.lang.Object)>:<public>:<android.view.ActionMode>
<android.view.MotionEvent: long nativeGetDownTimeNanos(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Editor.SuggestionsPopupWindow: void createPopupWindow()>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.media.MediaFocusControl: void sendVolumeUpdateToRemote(int,int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.session.MediaSession.QueueItem: android.media.MediaDescription getDescription()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.session.PlaybackState.CustomAction.1:android.os.Parcelable.Creator>
<android.view.IInputFilterHost.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IInputFilterHost.Stub.Proxy:android.view.IInputFilterHost>
<android.view.MotionEvent.PointerProperties: void clear()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.preference.PreferenceGroupAdapter: java.lang.Object getItem(int)>:<public volatile>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.RadialTimePickerView: void calculateGridSizes(android.graphics.Paint,float,float,float,float,float[],float[])>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.view.InputQueue: void <init>()>:<public>:<android.view.InputQueue>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.IRemoteControlClient: void setWantsSyncForDisplay(android.media.IRemoteControlDisplay,boolean)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.widget.NumberPicker.PressedStateHelper: void buttonPressDelayed(int)>:<public>:<android.widget.NumberPicker.PressedStateHelper:java.lang.Runnable>
<android.view.InputDevice.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.InputDevice.1:android.os.Parcelable.Creator>
<android.widget.FastScroller: void scrollTo(float)>:<private>:<android.widget.FastScroller>
<android.view.View.13: void <init>(java.lang.String)>:<>:<android.view.View.13:android.util.FloatProperty>
<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()>:<>:<android.preference.PreferenceManager>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.media.browse.MediaBrowser.MediaItem: int getFlags()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.media.session.MediaSession: boolean isActiveState(int)>:<public static>:<android.media.session.MediaSession>
<android.service.notification.ZenModeConfig.1: android.service.notification.ZenModeConfig createFromParcel(android.os.Parcel)>:<public>:<android.service.notification.ZenModeConfig.1:android.os.Parcelable.Creator>
<android.media.AudioManager: int resetAudioPortGeneration()>:<>:<android.media.AudioManager>
<android.view.View.3: void <init>(java.lang.String)>:<>:<android.view.View.3:android.util.FloatProperty>
<android.media.CCParser.CCData: java.lang.String getExtendedChar()>:<private>:<android.media.CCParser.CCData>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.session.MediaSessionLegacyHelper: void removeRccListener(android.app.PendingIntent)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.service.wallpaper.WallpaperService: void <init>()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: void invalidateViewProperty(boolean,boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: void nativeDispose(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.session.MediaSession: void access.1700(android.media.session.MediaSession,java.lang.String,android.os.Bundle)>:<static>:<android.media.session.MediaSession>
<android.widget.CursorAdapter.ChangeObserver: boolean deliverSelfNotifications()>:<public>:<android.widget.CursorAdapter.ChangeObserver:android.database.ContentObserver>
<android.database.sqlite.JankSqlite: boolean addUpdate(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.filterpacks.imageproc.ImageStitcher: void setupPorts()>:<public>:<android.filterpacks.imageproc.ImageStitcher:android.filterfw.core.Filter>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: void removeTvInput(java.lang.String)>:<public>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.view.ViewRootImpl: void childDrawableStateChanged(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.PathKeyframes: android.animation.Keyframes clone()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.media.AudioService: void systemReady()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.dreams.IDreamManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.dreams.IDreamManager.Stub:android.os.Binder,android.service.dreams.IDreamManager>
<android.view.View.1: void onClick(android.view.View)>:<public>:<android.view.View.1:android.view.View.OnClickListener>
<android.media.CCParser.CCData: java.lang.String getSpecialChar()>:<private>:<android.media.CCParser.CCData>
<android.opengl.GLLogWrapper: void glFogf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.HwCustAudioService: void getDtsstatus(android.content.ContentResolver)>:<protected>:<android.media.HwCustAudioService>
<android.view.VelocityTracker: void finalize()>:<protected>:<android.view.VelocityTracker>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.inputmethod.EditorInfo: void makeCompatible(int)>:<public final>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.media.session.MediaController.CallbackStub: void <init>(android.media.session.MediaController)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.view.textservice.SpellCheckerSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>:<public static>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.ViewRootImpl.TraversalRunnable: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.TraversalRunnable:java.lang.Runnable>
<android.media.IMediaRouterClient: void onStateChanged()>:<public abstract>:<android.media.IMediaRouterClient:android.os.IInterface>
<android.print.IPrintDocumentAdapter.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.widget.ListView.ArrowScrollFocusResult: int getAmountToScroll()>:<public>:<android.widget.ListView.ArrowScrollFocusResult>
<android.media.MediaDrm: android.media.MediaDrm.ProvisionRequest getProvisionRequestNative(int,java.lang.String)>:<private native>:<android.media.MediaDrm>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OpenOverflowRunnable access.302(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.OpenOverflowRunnable)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.AudioManager: int registerAudioPolicy(android.media.audiopolicy.AudioPolicy)>:<public>:<android.media.AudioManager>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>:<private>:<android.view.AccessibilityInteractionController>
<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.RotateFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.media.tv.TvContract.Programs.Genres: boolean isCanonical(java.lang.String)>:<public static>:<android.media.tv.TvContract.Programs.Genres>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.IAudioService: void reloadAudioSettings()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.ScrollView: boolean fullScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFormat(int)>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.media.AudioRecord: void native_stop()>:<private final native>:<android.media.AudioRecord>
<android.view.Window: void setLogo(int)>:<public>:<android.view.Window>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.media.AudioSystem: int setLowPowerApk(boolean)>:<public static native>:<android.media.AudioSystem>
<android.accounts.AccountManager: java.lang.Exception convertErrorToException(int,java.lang.String)>:<private>:<android.accounts.AccountManager>
<android.media.tv.ITvInputClient.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputClient.Stub:android.os.Binder,android.media.tv.ITvInputClient>
<android.media.MediaPlayer.2: void <init>(android.media.MediaPlayer,java.io.InputStream,android.media.MediaFormat,android.os.HandlerThread)>:<>:<android.media.MediaPlayer.2:java.lang.Runnable>
<android.widget.TimePickerClockDelegate.3: void onClick(android.view.View)>:<public>:<android.widget.TimePickerClockDelegate.3:android.view.View.OnClickListener>
<android.media.MediaRouter: int getCategoryCount()>:<public>:<android.media.MediaRouter>
<android.database.AbstractCursor: int getType(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onPause()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.media.AudioService.AudioHandler: void setDeviceVolume(android.media.AudioService.VolumeStreamState,int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.widget.DatePickerCalendarDelegate: boolean getCalendarViewShown()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.AudioRecord: int native_set_pos_update_period(int)>:<private final native>:<android.media.AudioRecord>
<android.view.HardwareRenderer: void buildLayer(android.view.RenderNode)>:<abstract>:<android.view.HardwareRenderer>
<android.widget.TextView: int getBottomPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews)>:<>:<android.appwidget.AppWidgetHost>
<android.media.AmrInputStream: void GsmAmrEncoderInitialize(long)>:<private static native>:<android.media.AmrInputStream:java.io.InputStream>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.netdetect.INetDetectService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.animation.KeyframeSet: java.lang.String toString()>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.widget.Gallery: void layout(int,boolean)>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.browse.MediaBrowser: void access.2000(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.content.pm.ParceledListSlice)>:<static>:<android.media.browse.MediaBrowser>
<android.media.session.ISession: void setMetadata(android.media.MediaMetadata)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.animation.LayoutTransition: long access.1100(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.session.MediaSession: void dispatchRewind()>:<private>:<android.media.session.MediaSession>
<android.media.tv.TvInputHardwareInfo.1: android.media.tv.TvInputHardwareInfo[] newArray(int)>:<public>:<android.media.tv.TvInputHardwareInfo.1:android.os.Parcelable.Creator>
<android.animation.TimeAnimator: boolean animationFrame(long)>:<>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.filterpacks.text.ToUpperCase: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.text.ToUpperCase:android.filterfw.core.Filter>
<android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.TextView: boolean onPreDraw()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowInsets: int getWindowDecorInsetLeft()>:<public>:<android.view.WindowInsets>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.accounts.IAccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.Surface: void destroy()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.602(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,boolean)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.service.notification.NotificationListenerService: void requestInterruptionFilter(int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputManager.1: void <init>(android.media.tv.TvInputManager)>:<>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.view.SurfaceControl.PhysicalDisplayInfo: int hashCode()>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.view.View.MeasureSpec: int adjust(int,int)>:<static>:<android.view.View.MeasureSpec>
<android.opengl.Matrix: float length(float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void drawBackground(android.graphics.Canvas)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.widget.Gallery: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize)>:<public>:<android.print.PrintAttributes.Builder>
<android.media.AsyncPlayer: void <init>(java.lang.String)>:<public>:<android.media.AsyncPlayer>
<android.widget.RadioGroup.CheckedStateTracker: void onCheckedChanged(android.widget.CompoundButton,boolean)>:<public>:<android.widget.RadioGroup.CheckedStateTracker:android.widget.CompoundButton.OnCheckedChangeListener>
<android.widget.AbsListView.CheckForTap: void <init>(android.widget.AbsListView)>:<private>:<android.widget.AbsListView.CheckForTap:java.lang.Runnable>
<android.media.AudioService: void checkAllFixedVolumeDevices()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputDevice: int getId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.View.AccessibilityDelegate: void <init>()>:<public>:<android.view.View.AccessibilityDelegate>
<android.printservice.IPrintService.Stub: android.os.IBinder asBinder()>:<public>:<android.printservice.IPrintService.Stub:android.os.Binder,android.printservice.IPrintService>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>:<public static>:<android.gesture.GestureUtils>
<android.widget.GridLayout: boolean canStretch(int)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void <init>()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.media.ResampleInputStream: void finalize()>:<protected>:<android.media.ResampleInputStream:java.io.InputStream>
<android.service.media.MediaBrowserService.Result: void detach()>:<public>:<android.service.media.MediaBrowserService.Result>
<android.media.audiofx.PresetReverb: short getPreset()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.widget.ExpandableListView: boolean handleItemClick(android.view.View,int,long)>:<>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GLES20Canvas: void getMatrix(android.graphics.Matrix)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.KeyCharacterMap: int getModifierBehavior()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.Editor: void setAddtionalConfig(android.widget.Editor.EditTextAddtionConfig)>:<public>:<android.widget.Editor>
<android.view.ViewGroup: void clearCachedLayoutMode()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.GLES20Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.print.PrintAttributes.MediaSize: int hashCode()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.media.session.ISessionController.Stub.Proxy: void pause()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.FastScroller: boolean isPointInside(float,float)>:<private>:<android.widget.FastScroller>
<android.widget.TimePickerSpinnerDelegate: boolean access.600(android.widget.TimePickerSpinnerDelegate,int)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.animation.KeyframeSet: java.util.ArrayList getKeyframes()>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowSpan()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.filterpacks.base.GLTextureSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.GLTextureSource:android.filterfw.core.Filter>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.TextViewSizeAction:android.widget.RemoteViews.Action>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaCodecInfo.VideoCapabilities: boolean isSizeSupported(int,int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.filterpacks.numeric.SinWaveFilter: void setupPorts()>:<public>:<android.filterpacks.numeric.SinWaveFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.notification.ZenModeConfig.DowntimeInfo: int hashCode()>:<public>:<android.service.notification.ZenModeConfig.DowntimeInfo>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.HardwareLayer: void nUpdateRenderLayer(long,long,int,int,int,int)>:<private static native>:<android.view.HardwareLayer>
<android.print.PrintDocumentInfo: int getPageCount()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: void setAppGroupId(android.os.IBinder,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.database.MergeCursor: byte[] getBlob(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.Surface: void checkNotReleasedLocked()>:<private>:<android.view.Surface:android.os.Parcelable>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteDebug>
<android.media.IAudioService.Stub.Proxy: int getMasterVolume()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.ViewGroup: android.graphics.Insets computeOpticalInsets()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.CursorWindow: void setStartPosition(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.Editor.SuggestionsPopupWindow: void hide()>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>:<public>:<android.view.DisplayAdjustments>
<android.printservice.PrintServiceInfo.1: void <init>()>:<>:<android.printservice.PrintServiceInfo.1:android.os.Parcelable.Creator>
<android.preference.ListPreference.1: void onClick(android.content.DialogInterface,int)>:<public>:<android.preference.ListPreference.1:android.content.DialogInterface.OnClickListener>
<android.printservice.PrinterDiscoverySession: java.util.List getPrinters()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.media.IMediaRouterService: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTexGenf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IRemoteDisplayProvider: void adjustVolume(java.lang.String,int)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.media.IRemoteControlClient.Stub.Proxy: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.media.AudioRecord: int native_set_marker_pos(int)>:<private final native>:<android.media.AudioRecord>
<android.opengl.GLSurfaceView.GLThread: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.media.tv.TvView.1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.media.tv.TvView.1:android.view.SurfaceHolder.Callback>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaDrm: byte[] access.400(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<static>:<android.media.MediaDrm>
<android.media.IMediaRouterService.Stub.Proxy: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.media.session.PlaybackState.CustomAction.Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug.PagerStats getDatabaseInfo()>:<public static>:<android.database.sqlite.SQLiteDebug>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoHeight(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.view.Choreographer: float getRefreshRate()>:<private static>:<android.view.Choreographer>
<android.opengl.GLSurfaceView: int getDebugFlags()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy:android.service.voice.IVoiceInteractionSessionService>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.ListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.filterpacks.imageproc.FisheyeFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.view.textservice.TextInfo.1: android.view.textservice.TextInfo[] newArray(int)>:<public>:<android.view.textservice.TextInfo.1:android.os.Parcelable.Creator>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.DataSetObservable: void notifyInvalidated()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.widget.TabHost: void invalidateTabWidget()>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaScanner.MyMediaScannerClient: android.net.Uri endFile(android.media.MediaScanner.FileEntry,boolean,boolean,boolean,boolean,boolean)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.media.session.PlaybackState.CustomAction: void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)>:<private>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>:<public>:<android.media.AudioManager>
<android.media.MediaRouterClientState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.MediaRouterClientState.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.tv.TvInputManager.SessionCallbackRecord.11: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.11:java.lang.Runnable>
<android.media.session.ParcelableVolumeInfo: void <init>(int,android.media.AudioAttributes,int,int,int)>:<public>:<android.media.session.ParcelableVolumeInfo:android.os.Parcelable>
<android.view.WindowId.FocusObserver.1: void <init>(android.view.WindowId.FocusObserver)>:<>:<android.view.WindowId.FocusObserver.1:android.view.IWindowFocusObserver.Stub,android.os.Binder>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener access.100(android.media.audiofx.EnvironmentalReverb)>:<static>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.TwoLineListItem: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.FocusFinder.SequentialFocusComparator: int compare(android.view.View,android.view.View)>:<public>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.filterpacks.imageproc.SharpenFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>:<abstract>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.preference.PreferenceFragment.3: void <init>(android.preference.PreferenceFragment)>:<>:<android.preference.PreferenceFragment.3:android.view.View.OnKeyListener>
<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaSession.QueueItem: void <init>(android.os.Parcel)>:<private>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.media.session.ISessionController.Stub.Proxy: void rewind()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.service.notification.StatusBarNotification: java.lang.String groupKey()>:<private>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.GLES10: void glClearStencil(int)>:<public static native>:<android.opengl.GLES10>
<android.print.PrintDocumentInfo: int access.200(android.print.PrintDocumentInfo)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.R.id: void <init>()>:<public>:<android.R.id>
<android.accounts.AccountManager.AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.media.session.MediaController: boolean removeCallbackLocked(android.media.session.MediaController.Callback)>:<private>:<android.media.session.MediaController>
<android.view.Choreographer: long getFrameDelay()>:<public static>:<android.view.Choreographer>
<android.media.SoundPool.SoundPoolDelegate: void setVolume(int,float,float)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.media.MediaCodecInfo.VideoCapabilities: void applyLevelLimits()>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.media.tv.ITvInputSession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.GridView: void <init>(android.content.Context)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo: void setDocumentInfo(android.print.PrintDocumentInfo)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.PlayerRecord: void destroy()>:<public>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.view.SurfaceHolder: void setType(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.preference.MultiSelectListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.sqlite.SQLiteConnection: int nativeGetColumnCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.animation.LayoutTransition: void <clinit>()>:<static>:<android.animation.LayoutTransition>
<android.widget.HwAbsListView: boolean hasHighSpeedStableMask()>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.accounts.AccountManagerFuture: boolean isCancelled()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.widget.ScrollBarDrawable: java.lang.String toString()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvInputManager: void releaseTvInputHardware(int,android.media.tv.TvInputManager.Hardware)>:<public>:<android.media.tv.TvInputManager>
<android.media.MediaCodec: java.util.Map getFormatNative(boolean)>:<private final native>:<android.media.MediaCodec>
<android.widget.DateTimeView: void onAttachedToWindow()>:<protected>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.widget.GridLayout: void handleInvalidParams(java.lang.String)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void cancel()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.security.Credentials: void unlock(android.content.Context)>:<public>:<android.security.Credentials>
<android.service.notification.NotificationRankingUpdate: java.lang.String[] getOrderedKeys()>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.view.MotionEvent: float getPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.MotionEvent: boolean isTouchEvent()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.ClosedCaptionWidget.CCLayout: void <init>(android.content.Context)>:<>:<android.media.ClosedCaptionWidget.CCLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.AudioEffect: short byteArrayToShort(byte[])>:<public static>:<android.media.audiofx.AudioEffect>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String access.100(int)>:<static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress: void run()>:<public>:<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress:java.lang.Runnable>
<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.view.RenderNode: boolean nSetClipToBounds(long,boolean)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.WindowManagerImpl: void <init>(android.view.Display,android.view.Window)>:<private>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.NumberPicker.3: void onFocusChange(android.view.View,boolean)>:<public>:<android.widget.NumberPicker.3:android.view.View.OnFocusChangeListener>
<android.view.MenuInflater.MenuState: void resetGroup()>:<public>:<android.view.MenuInflater.MenuState>
<android.printservice.PrintServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.widget.GridLayout.Axis: int getMeasure(int,int)>:<private>:<android.widget.GridLayout.Axis>
<android.view.TextureView: void init()>:<private>:<android.view.TextureView:android.view.View>
<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)>:<public>:<android.print.PrintManager>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: void <clinit>()>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.gesture.GestureOverlayView: android.view.animation.AccelerateDecelerateInterpolator access.1100(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Surface: void nativeRelease(long)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.gesture.OrientedBoundingBox: android.graphics.Path toPath()>:<public>:<android.gesture.OrientedBoundingBox>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.SoundPool: void <init>(int,android.media.AudioAttributes,android.media.SoundPool.1)>:<>:<android.media.SoundPool>
<android.widget.CalendarView: void setWeekNumberColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.hsm.HwSystemManager: boolean allowOp(android.content.Context,int)>:<public static>:<android.hsm.HwSystemManager>
<android.view.ActionProvider: void refreshVisibility()>:<public>:<android.view.ActionProvider>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.AudioService.AudioHandler: void onPersistSafeVolumeState(int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.MediaRouterClientState.1: android.media.MediaRouterClientState[] newArray(int)>:<public>:<android.media.MediaRouterClientState.1:android.os.Parcelable.Creator>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.media.IAudioService.Stub.Proxy: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.accounts.ChooseTypeAndAccountActivity: void onCancelButtonClicked(android.view.View)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.view.Display: void updateCachedAppSizeIfNeededLocked()>:<private>:<android.view.Display>
<android.media.session.MediaSession.Command: void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaSession.Command>
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.IMediaRouterService: void unregisterClient(android.media.IMediaRouterClient)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.view.WindowManagerInternal: void setInputFilter(android.view.IInputFilter)>:<public abstract>:<android.view.WindowManagerInternal>
<android.widget.TextView: android.widget.Editor getEditor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.ClosedCaptionWidget: android.view.accessibility.CaptioningManager.CaptionStyle getCaptionStyle()>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.accounts.IAccountManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>:<public>:<android.media.AudioManager>
<android.media.audiofx.Visualizer: int native_getPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)>:<private final native>:<android.media.audiofx.Visualizer>
<android.media.AudioService.AudioHandler: void <init>(android.media.AudioService)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glDisableClientState(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy:android.media.projection.IMediaProjectionWatcherCallback>
<android.widget.ActionMenuView: boolean showOverflowMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.VelocityTracker: float getXVelocity()>:<public>:<android.view.VelocityTracker>
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.media.MediaRouter.RouteInfo: boolean isConnecting()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.filterpacks.imageproc.BlackWhiteFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.media.session.MediaSessionManager: void dispatchAdjustVolume(int,int,int)>:<public>:<android.media.session.MediaSessionManager>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.SetOnClickPendingIntent:android.widget.RemoteViews.Action>
<android.opengl.GLES20: boolean glIsShader(int)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.DialogPreference: void setNegativeButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.Choreographer: void <init>(android.os.Looper,android.view.Choreographer.1)>:<>:<android.view.Choreographer>
<android.media.MediaFocusControl: android.net.Uri access.200()>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.IAudioService.Stub.Proxy: void startBluetoothScoVirtualCall(android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.security.IKeystoreService: int reset()>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.View: boolean isDrawablesResolved()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter: void removeUserRoute(android.media.MediaRouter.UserRouteInfo)>:<public>:<android.media.MediaRouter>
<android.view.KeyCharacterMap: char getNumber(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioFormat: int access.100(android.media.AudioFormat)>:<static>:<android.media.AudioFormat>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.sqlite.SQLiteDatabase: int getVersion()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.PopupMenu: android.view.View.OnTouchListener getDragToOpenListener()>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.RadioGroup: boolean access.302(android.widget.RadioGroup,boolean)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.print.IPrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.view.Choreographer.CallbackQueue: void removeCallbacksLocked(java.lang.Object,java.lang.Object)>:<public>:<android.view.Choreographer.CallbackQueue>
<android.opengl.GLErrorWrapper: void glTranslatef(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityManager.1: void <init>(android.view.accessibility.AccessibilityManager)>:<>:<android.view.accessibility.AccessibilityManager.1:android.view.accessibility.IAccessibilityManagerClient.Stub,android.os.Binder>
<android.view.View: void getLocationInWindow(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFormatSupported(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.accounts.AccountManager: boolean addSharedAccount(android.accounts.Account,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.media.MediaFocusControl: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.animation.PathInterpolator: void <init>(float,float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.media.AudioTrack: void flush()>:<public>:<android.media.AudioTrack>
<android.media.AudioService: void setVoiceALGODeviceChange(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrintAttributes.Margins: void <clinit>()>:<static>:<android.print.PrintAttributes.Margins>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.service.notification.Condition: int describeContents()>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.service.dreams.DreamService: void setContentView(android.view.View)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.Gallery: void fillToGalleryLeftRtl()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1.1: void run()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1.1:java.lang.Runnable>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.security.KeyStore: boolean isHardwareBacked()>:<public>:<android.security.KeyStore>
<android.widget.RemoteViews.BitmapCache: void addBitmapMemory(android.widget.RemoteViews.MemoryUsageCounter)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.media.MediaFocusControl: int getRemoteStreamVolume()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.service.voice.IVoiceInteractionSessionService.Stub: void <init>()>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSessionService>
<android.media.tv.ITvInputSession: void createOverlayView(android.os.IBinder,android.graphics.Rect)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.service.notification.NotificationRankingUpdate: void <clinit>()>:<static>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.preference.MultiSelectListPreference: void setEntries(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.wallpaper.IWallpaperConnection.Stub: android.service.wallpaper.IWallpaperConnection asInterface(android.os.IBinder)>:<public static>:<android.service.wallpaper.IWallpaperConnection.Stub:android.os.Binder,android.service.wallpaper.IWallpaperConnection>
<android.service.fingerprint.FingerprintUtils: void <init>()>:<public>:<android.service.fingerprint.FingerprintUtils>
<android.widget.TextView: int getExtendedPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaFocusControl: boolean canReassignAudioFocus()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.ListView: int getTopSelectionPixel(int,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaCodec: android.view.Surface createInputSurface()>:<public final native>:<android.media.MediaCodec>
<android.opengl.GLErrorWrapper: void glTexParameteri(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: float getAnimationScale(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLLogWrapper: void glBlendFuncSeparate(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OverflowPopup access.202(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.OverflowPopup)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.tv.TvView: void onMeasure(int,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.print.PageRange.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.media.effect.effects.VignetteEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.VignetteEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.RemoteViewsAdapter: java.util.ArrayList getVisibleWindow(int,int,int)>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.ListView: boolean pageScroll(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.OnDateChangedListener: void onDateChanged()>:<public abstract>:<android.widget.OnDateChangedListener>
<android.widget.TextView: boolean isAccessibilitySelectionExtendable()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.IMediaScannerService.Stub.Proxy: void scanFile(java.lang.String,java.lang.String)>:<public>:<android.media.IMediaScannerService.Stub.Proxy:android.media.IMediaScannerService>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>:<protected>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.IApplicationToken.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.animation.TimeAnimator: void animateValue(float)>:<>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.Editor.InsertionHandleView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.InputDevice.MotionRange: float getFlat()>:<public>:<android.view.InputDevice.MotionRange>
<android.opengl.GLLogWrapper: void glBindFramebufferOES(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.accounts.ChooseAccountTypeActivity: void setResultAndFinish(java.lang.String)>:<private>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputManager.SessionCallbackRecord.3: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.3:java.lang.Runnable>
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.media.browse.MediaBrowser.MediaItem.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.browse.MediaBrowser.MediaItem.1:android.os.Parcelable.Creator>
<android.view.DisplayInfo: int getNaturalWidth()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: void reloadAudioSettings()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewDebug: android.view.View findView(android.view.ViewGroup,java.lang.String,int)>:<private static>:<android.view.ViewDebug>
<android.view.Surface.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.Surface.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleNativeHeap: void <init>()>:<private>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.audiofx.BassBoost.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.accounts.ChooseAccountTypeActivity: void access.100(android.accounts.ChooseAccountTypeActivity,java.lang.String)>:<static>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hsm.HwAudioPermWrapper: void <init>()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: void onCancel()>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.view.ViewGroup: android.view.View findFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.view.ViewGroup: boolean isLayoutSuppressed()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvInputService.Session: void dispatchSurfaceChanged(int,int,int)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.InputQueue: void finalize()>:<protected>:<android.view.InputQueue>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.AnimatorSetListener:android.animation.Animator.AnimatorListener>
<android.media.tv.ITvInputClient.Stub: void <init>()>:<public>:<android.media.tv.ITvInputClient.Stub:android.os.Binder,android.media.tv.ITvInputClient>
<android.widget.SearchView: int getSuggestionCommitIconResId()>:<>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.IRemoteDisplayProvider: void setDiscoveryMode(int)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.media.session.ISessionController.Stub.Proxy: java.lang.String getTag()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.media.RemoteController.MetadataEditor: void apply()>:<public>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.ViewGroup: void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Gravity: boolean isVertical(int)>:<public static>:<android.view.Gravity>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName(android.content.Context)>:<public>:<android.media.MediaRouter.RouteCategory>
<android.gesture.GestureOverlayView: boolean access.502(android.gesture.GestureOverlayView,boolean)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy.WindowState,int,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.GridView: android.view.View fillFromTop(int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.HardwareRenderer: void invalidate(android.view.Surface)>:<abstract>:<android.view.HardwareRenderer>
<android.widget.HwAbsListView: void setOverScrollMode(int)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.print.IPrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>:<public abstract>:<android.print.IPrintJobStateChangeListener:android.os.IInterface>
<android.widget.ListView: android.view.View addViewAbove(android.view.View,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ActionMode: android.view.MenuInflater getMenuInflater()>:<public abstract>:<android.view.ActionMode>
<android.database.sqlite.SQLiteConnection: void setJournalMode(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.SearchView.10: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.SearchView.10:android.widget.AdapterView.OnItemSelectedListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: boolean access.200(android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.view.ActionMode: boolean isUiFocusable()>:<public>:<android.view.ActionMode>
<android.media.tv.TvTrackInfo: void <init>(int,java.lang.String,java.lang.String,int,int,int,int,float,android.os.Bundle)>:<private>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.security.Credentials: void install(android.content.Context,java.security.KeyPair)>:<public>:<android.security.Credentials>
<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.sqlite.SQLiteConnection: void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.IRemoteVolumeController.Stub: android.media.IRemoteVolumeController asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteVolumeController.Stub:android.os.Binder,android.media.IRemoteVolumeController>
<android.media.AudioSystem: int listAudioPorts(java.util.ArrayList,int[])>:<public static native>:<android.media.AudioSystem>
<android.view.ViewRootImpl: boolean access.400(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaRouter: void dispatchRouteAdded(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.view.IWindowManager.Stub.Proxy: int getPreferredOptionsPanelGravity()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.View: void needGlobalAttributesUpdate(boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.base.NullFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.NullFilter:android.filterfw.core.Filter>
<android.media.IAudioService: boolean isMasterMute()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: boolean bringTextIntoView()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.textservice.SpellCheckerSubtype: int hashCode()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.AudioService: void sendMasterVolumeUpdate(int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: boolean access.1000(int)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setContentDescriptions()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.accounts.IAccountManager.Stub.Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.widget.Editor.SelectionModifierCursorController: void <init>(android.widget.Editor)>:<>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.service.dreams.DreamService: void onCreate()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.TimePickerSpinnerDelegate: void setEnabled(boolean)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.MediaCodec.MediaImage.MediaPlane: java.nio.ByteBuffer getBuffer()>:<public>:<android.media.MediaCodec.MediaImage.MediaPlane:android.media.Image.Plane>
<android.media.tv.TvView.TvInputCallback: void onTrackSelected(java.lang.String,int,java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.inputmethod.InputMethodManager,boolean)>:<>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.accounts.IAccountManager.Stub.Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.widget.ListView: int getBottomSelectionPixel(int,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void dispatchCancelPendingInputEvents()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiopolicy.AudioMix: void <init>(android.media.audiopolicy.AudioMixingRule,android.media.AudioFormat,int,android.media.audiopolicy.AudioMix.1)>:<>:<android.media.audiopolicy.AudioMix>
<android.view.MenuItem: boolean collapseActionView()>:<public abstract>:<android.view.MenuItem>
<android.view.MenuItem: android.view.MenuItem setShowAsActionFlags(int)>:<public abstract>:<android.view.MenuItem>
<android.view.inputmethod.InputBinding: void <init>(android.os.Parcel)>:<>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.ITvInputSession access.802(android.media.tv.TvInputService.HardwareSession,android.media.tv.ITvInputSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.SRTRenderer: void <init>(android.content.Context)>:<public>:<android.media.SRTRenderer:android.media.SubtitleController.Renderer>
<android.view.View: java.lang.String printFlags(int)>:<private static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteConnection: void setWalModeFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.RadialTimePickerView: void initialize(int,int,boolean)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.AudioService: int checkSendBecomingNoisyIntent(int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.tv.TvView: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.SparseRectFArray.1: void <init>()>:<>:<android.view.inputmethod.SparseRectFArray.1:android.os.Parcelable.Creator>
<android.media.session.MediaSessionLegacyHelper: void addMediaButtonListener(android.app.PendingIntent,android.content.ComponentName,android.content.Context)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.view.WindowManagerPolicy: void setInitialDisplaySize(android.view.Display,int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.GLES20Canvas: boolean clipPath(android.graphics.Path)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.CalendarView.LegacyCalendarViewDelegate: long getMinDate()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewGroup: void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.tv.ITvInputService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[])>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.widget.TextView: boolean isShowingHint()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.widget.Editor.SuggestionsPopupWindow: void onParentLostFocus()>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.printservice.IPrintService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.opengl.GLES30: void glPauseTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.GLES20Canvas: void drawARGB(int,int,int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.media.session.MediaController.TransportControls: void fastForward()>:<public>:<android.media.session.MediaController.TransportControls>
<android.view.VelocityTracker: void nativeAddMovement(long,android.view.MotionEvent)>:<private static native>:<android.view.VelocityTracker>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>:<protected transient>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.filterpacks.videosrc.CameraSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.ListPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.ListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.widget.StackView: void setupStackSlider(android.view.View,int)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>:<public>:<android.media.Ringtone>
<android.media.IAudioService: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.Choreographer.CallbackRecord: void <init>()>:<private>:<android.view.Choreographer.CallbackRecord>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.view.MotionEvent: void nativeSetAction(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.IRemoteControlDisplay.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteControlDisplay.Stub:android.os.Binder,android.media.IRemoteControlDisplay>
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.view.View: int getPaddingEnd()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>:<private>:<android.view.AccessibilityInteractionController>
<android.widget.TimePicker.TimePickerDelegate: void setEnabled(boolean)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.media.MediaCodecInfo.VideoCapabilities: void initWithPlatformLimits()>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.security.IKeystoreService.Stub.Proxy: int zero()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.ResampleInputStream: int read(byte[],int,int)>:<public>:<android.media.ResampleInputStream:java.io.InputStream>
<android.media.AudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioManager: void setMicrophoneMute(boolean)>:<public>:<android.media.AudioManager>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.AudioSystem: int muteMicrophone(boolean)>:<public static native>:<android.media.AudioSystem>
<android.widget.GridLayout.Axis: int[] getOriginalMeasurements()>:<public>:<android.widget.GridLayout.Axis>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo: int access.002(android.print.PrintJobInfo,int)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.ddm.DdmHandleNativeHeap: void connected()>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler access.300(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.widget.RadialTimePickerView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewTreeObserver: void addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.inputmethod.InputBinding: int getPid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.Gallery.FlingRunnable: android.widget.Scroller access.200(android.widget.Gallery.FlingRunnable)>:<static>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.view.ViewPropertyAnimator: void access.100(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.media.Ringtone: void play()>:<public>:<android.media.Ringtone>
<android.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.SoundPool: void autoResume()>:<public final>:<android.media.SoundPool>
<android.media.ImageReader: void nativeClassInit()>:<private static native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.widget.ScrollView: void onMeasure(int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.GenericInflater.Factory: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.preference.GenericInflater.Factory>
<android.media.ImageReader.SurfaceImage: long getTimestamp()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.widget.SearchView.7: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.widget.SearchView.7:android.view.View.OnKeyListener>
<android.animation.ValueAnimator: java.lang.String getNameForTrace()>:<>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.session.MediaSession: void access.1500(android.media.session.MediaSession,long)>:<static>:<android.media.session.MediaSession>
<android.view.ViewGroup: void notifyAnimationListener()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ListView.FocusSelector: void <init>(android.widget.ListView)>:<private>:<android.widget.ListView.FocusSelector:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glLightModelx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.HardwareLayer: boolean copyInto(android.graphics.Bitmap)>:<public>:<android.view.HardwareLayer>
<android.animation.PathKeyframes: float interpolate(float,float,float)>:<private static>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.media.ToneGenerator: int getAudioSessionId()>:<public final native>:<android.media.ToneGenerator>
<android.accounts.AccountManager.BaseFutureTask: void access.800(android.accounts.AccountManager.BaseFutureTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.media.browse.MediaBrowser.3: void <init>(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks)>:<>:<android.media.browse.MediaBrowser.3:java.lang.Runnable>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.filterpacks.base.FrameSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.FrameSource:android.filterfw.core.Filter>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.view.WindowManagerGlobal: void doRemoveView(android.view.ViewRootImpl)>:<>:<android.view.WindowManagerGlobal>
<android.media.MediaCodecInfo.EncoderCapabilities: void applyLevelLimits()>:<private>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.opengl.ETC1: void <init>()>:<public>:<android.opengl.ETC1>
<android.view.GLES20Canvas: int getMaximumBitmapWidth()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioService: void access.6100(android.media.AudioService,int,boolean)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: boolean performClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SearchView: void forceSuggestionQuery()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onError(int,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioService: void access.10300(android.media.AudioService,int,int,int,java.lang.String,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Editor.InsertionPointCursorController: void hide()>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.media.AudioPortConfig: void <init>(android.media.AudioPort,int,int,int,android.media.AudioGainConfig)>:<>:<android.media.AudioPortConfig>
<android.media.AudioService: void handleConfigurationChanged(android.content.Context)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TimePicker.TimePickerDelegate: void setCurrentMinute(java.lang.Integer)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.session.ISessionControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.view.RenderNode: boolean nHasShadow(long)>:<private static native>:<android.view.RenderNode>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void <init>(android.content.Context)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable:java.lang.Runnable>
<android.widget.RemoteViews.3: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.RemoteViews.3:android.os.Parcelable.Creator>
<android.widget.DatePicker.ValidationCallback: void onValidationChanged(boolean)>:<public abstract>:<android.widget.DatePicker.ValidationCallback>
<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>:<>:<android.view.LayoutInflater>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.SurfaceControl: void checkNotReleased()>:<private>:<android.view.SurfaceControl>
<android.widget.RatingBar: float getProgressPerStar()>:<private>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: void setVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupMenu: void inflate(int)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.animation.AnimatorSet.Builder: void <init>(android.animation.AnimatorSet,android.animation.Animator)>:<>:<android.animation.AnimatorSet.Builder>
<android.view.View: void setScrollBarFadeDuration(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ZoomButtonsController.5: void run()>:<public>:<android.widget.ZoomButtonsController.5:java.lang.Runnable>
<android.security.KeyPairGeneratorSpec: int getDefaultKeySizeForType(int)>:<private static>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.view.MotionEvent.PointerProperties: void copyFrom(android.view.MotionEvent.PointerProperties)>:<public>:<android.view.MotionEvent.PointerProperties>
<android.media.audiofx.BassBoost.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.media.browse.MediaBrowser: int access.502(android.media.browse.MediaBrowser,int)>:<static>:<android.media.browse.MediaBrowser>
<android.media.MediaMuxer: void finalize()>:<protected>:<android.media.MediaMuxer>
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe.FloatKeyframe clone()>:<public>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.view.ViewTreeObserver.OnWindowFocusChangeListener: void onWindowFocusChanged(boolean)>:<public abstract>:<android.view.ViewTreeObserver.OnWindowFocusChangeListener>
<android.database.sqlite.SQLiteConnection: void nativeRegisterLocalizedCollators(long,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper.PointerInfo: void unbindByteBuffer()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.accessibility.AccessibilityInteractionClient: void setPerformAccessibilityActionResult(boolean,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.ViewRootImpl: void setLocalDragState(java.lang.Object)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>:<>:<android.view.inputmethod.InputMethodManager>
<android.widget.AdapterView: boolean isInFilterMode()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.View: boolean isSoundEffectsEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.Animator: boolean isPaused()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.service.fingerprint.IFingerprintService.Stub: android.service.fingerprint.IFingerprintService asInterface(android.os.IBinder)>:<public static>:<android.service.fingerprint.IFingerprintService.Stub:android.os.Binder,android.service.fingerprint.IFingerprintService>
<android.media.TextTrackCueSpan: boolean equals(java.lang.Object)>:<public>:<android.media.TextTrackCueSpan>
<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.InputEventReceiver: void onBatchedInputEventPending()>:<public>:<android.view.InputEventReceiver>
<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager.LayoutParams,boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.print.PrintJob: boolean isQueued()>:<public>:<android.print.PrintJob>
<android.security.IKeyChainService.Stub.Proxy: boolean deleteCaCertificate(java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.view.IWindowSession.Stub.Proxy: boolean performHapticFeedback(android.view.IWindow,int,boolean)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.opengl.GLES20: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.view.RenderNode: float nGetTranslationY(long)>:<private static native>:<android.view.RenderNode>
<android.widget.GridView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES10Ext>
<android.view.MotionEvent: int getDeviceId()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.MultiSelectListPreference.SavedState: void <clinit>()>:<static>:<android.preference.MultiSelectListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.service.dreams.Sandman: void startDreamWhenDockedIfAppropriate(android.content.Context)>:<public static>:<android.service.dreams.Sandman>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.AbsListView.InputConnectionWrapper: boolean performEditorAction(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>:<public>:<android.media.effect.EffectContext>
<android.printservice.PrintService.ServiceHandler: void handleMessage(android.os.Message)>:<public>:<android.printservice.PrintService.ServiceHandler:android.os.Handler>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.DataSource: long getSize()>:<public abstract>:<android.media.DataSource:java.io.Closeable>
<android.view.ViewDebug.2: java.lang.Object[] pre()>:<public volatile>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.printservice.PrintService: android.printservice.IPrintServiceClient access.302(android.printservice.PrintService,android.printservice.IPrintServiceClient)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.filterpacks.text.ToUpperCase: void <init>(java.lang.String)>:<public>:<android.filterpacks.text.ToUpperCase:android.filterfw.core.Filter>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.service.dreams.DreamService: boolean getSystemUiVisibilityFlagValue(int,boolean)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void access.000(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.MediaScanner: android.drm.DrmManagerClient access.2902(android.media.MediaScanner,android.drm.DrmManagerClient)>:<static>:<android.media.MediaScanner>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.MediaRouter: void dispatchRouteRemoved(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.402(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,java.lang.String)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.print.PrinterInfo: int describeContents()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.session.MediaSession.Callback: void onStop()>:<public>:<android.media.session.MediaSession.Callback>
<android.opengl.GLSurfaceView.GLThreadManager: void releaseEglContextLocked(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.view.IWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.media.MediaMuxer: void start()>:<public>:<android.media.MediaMuxer>
<android.media.session.ISessionCallback.Stub.Proxy: void onSeekTo(long)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.FaceDetector.Face: float pose(int)>:<public>:<android.media.FaceDetector.Face>
<android.media.SoundPool.SoundPoolDelegate: int load(android.content.res.AssetFileDescriptor,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.media.tv.ITvInputManagerCallback: void onInputUpdated(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputManagerCallback:android.os.IInterface>
<android.view.View: int getPaddingStart()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.AbsSavedState: int describeContents()>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<huawei.android.net.wifi.HwCustWifiManager: void disableInternetNetwork(int,android.net.wifi.HwCustActionListener)>:<public>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void start()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.service.trust.ITrustAgentService: void setCallback(android.service.trust.ITrustAgentServiceCallback)>:<public abstract>:<android.service.trust.ITrustAgentService:android.os.IInterface>
<android.preference.PreferenceManager: void setFragment(android.preference.PreferenceFragment)>:<>:<android.preference.PreferenceManager>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.security.IKeystoreService.Stub.Proxy: byte[] get_pubkey(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.preference.MultiSelectListPreference: boolean[] getSelectedItems()>:<private>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.sqlite.SQLiteConnection: void bindArguments(android.database.sqlite.SQLiteConnection.PreparedStatement,java.lang.Object[])>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setOverridesImplicitlyEnabledSubtype(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.database.sqlite.SQLiteDatabase.2: void <init>(java.lang.String)>:<>:<android.database.sqlite.SQLiteDatabase.2:java.io.FileFilter>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter: void <init>(java.util.Locale)>:<public>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter>
<android.widget.MediaController: void setEnabled(boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaFocusControl: void unregisterMediaButtonIntent(android.app.PendingIntent)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewTreeObserver: void dispatchOnTouchModeChanged(boolean)>:<final>:<android.view.ViewTreeObserver>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>:<public static native>:<android.opengl.GLES20>
<android.media.ResampleInputStream: void <clinit>()>:<static>:<android.media.ResampleInputStream:java.io.InputStream>
<android.view.accessibility.AccessibilityWindowInfo: void <init>()>:<private>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.AudioService: void access.3600(android.media.AudioService,java.lang.String)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.Virtualizer: boolean forceVirtualizationMode(int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.widget.GridView: int computeVerticalScrollOffset()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.projection.MediaProjectionManager.CallbackDelegate: void onStop(android.media.projection.MediaProjectionInfo)>:<public>:<android.media.projection.MediaProjectionManager.CallbackDelegate:android.media.projection.IMediaProjectionWatcherCallback.Stub,android.os.Binder>
<android.database.sqlite.SQLiteConnection: void access.200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection.PreparedStatement)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.accessibility.AccessibilityInteractionClient: boolean waitForResultTimedLocked(int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.InputChannel: void nativeDispose(boolean)>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.service.voice.VoiceInteractionService: void onReady()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.media.IAudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.InputChannel: android.view.InputChannel[] nativeOpenInputChannelPair(java.lang.String)>:<private static native>:<android.view.InputChannel:android.os.Parcelable>
<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>:<public>:<android.media.session.MediaSession>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.hsm.MediaTransactWrapper: void <init>()>:<public>:<android.hsm.MediaTransactWrapper>
<android.widget.NumberPicker.PressedStateHelper: void run()>:<public>:<android.widget.NumberPicker.PressedStateHelper:java.lang.Runnable>
<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.filterpacks.videosrc.CameraSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioType(int)>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>:<public>:<android.widget.RadioGroup.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.RenderNode: boolean setAlpha(float)>:<public>:<android.view.RenderNode>
<android.widget.AutoCompleteTextView: void access.600(android.widget.AutoCompleteTextView)>:<static>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.preference.PreferenceScreen.SavedState: void <clinit>()>:<static>:<android.preference.PreferenceScreen.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.test.AndroidTestCase: void assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask: boolean internalGetIsEnrolled(int,java.util.Locale)>:<private>:<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask:android.os.AsyncTask>
<android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>:<public static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.CCParser: boolean handleTabOffsets(android.media.CCParser.CCData)>:<private>:<android.media.CCParser>
<android.view.MotionEvent: int nativeGetSource(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void drawableHotspotChanged(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.Visualizer: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.audiofx.Visualizer>
<android.media.AmrInputStream: void finalize()>:<protected>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.ViewRootImpl.TrackballAxis: int generate()>:<>:<android.view.ViewRootImpl.TrackballAxis>
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>:<public>:<android.view.TextureView:android.view.View>
<android.media.AudioService.ForceControlStreamClient: void binderDied()>:<public>:<android.media.AudioService.ForceControlStreamClient:android.os.IBinder.DeathRecipient>
<android.animation.FloatKeyframeSet: void invalidateCache()>:<public>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.media.tv.ITvInputHardware.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.View: void dispatchDisplayHint(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.media.tv.ITvInputManager.Stub.Proxy: void unregisterCallback(android.media.tv.ITvInputManagerCallback,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.ViewRootImpl.3: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.3:android.view.Choreographer.FrameCallback>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.accounts.AccountsException: void <init>()>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.database.IBulkCursor: void deactivate()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.widget.TimePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.browse.MediaBrowser: int access.500(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.opengl.EGLLogWrapper: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.AudioTrack: void native_start()>:<private final native>:<android.media.AudioTrack>
<android.view.IWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.media.AudioTrack: void release()>:<public>:<android.media.AudioTrack>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void <init>()>:<public>:<android.view.RenderNodeAnimator.DelayedAnimationHelper:java.lang.Runnable>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>:<public abstract>:<android.view.Menu>
<android.view.Menu: void setGroupVisible(int,boolean)>:<public abstract>:<android.view.Menu>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.MediaController.4: void onClick(android.view.View)>:<public>:<android.widget.MediaController.4:android.view.View.OnClickListener>
<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer.OnDataCaptureListener access.100(android.media.audiofx.Visualizer)>:<static>:<android.media.audiofx.Visualizer>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onLayoutSurface(int,int,int,int)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.audiofx.LoudnessEnhancer: void setProperties(android.media.audiofx.LoudnessEnhancer.Settings)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.database.sqlite.SQLiteCursor: int getCount()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.tv.TvInputService.Session: void notifyVideoUnavailable(int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ViewConfiguration: int getFadingEdgeLength()>:<public static>:<android.view.ViewConfiguration>
<android.media.MediaFile: boolean isVideoFileType(int)>:<public static>:<android.media.MediaFile>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1: void <init>(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1:android.accounts.AccountManagerCallback>
<android.view.Display: void getOverscanInsets(android.graphics.Rect)>:<public>:<android.view.Display>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec: int getKeySize()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.TextView: void setEditorHideFlag(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glMaterialx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.StackView.StackSlider: float cubic(float)>:<private>:<android.widget.StackView.StackSlider>
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()>:<public>:<android.media.tv.TvContentRating>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.view.GhostView: android.view.GhostView getGhost(android.view.View)>:<public static>:<android.view.GhostView:android.view.View>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>:<public static>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.browse.MediaBrowser.SubscriptionCallback: void <init>()>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.service.textservice.SpellCheckerService.Session: void onCreate()>:<public abstract>:<android.service.textservice.SpellCheckerService.Session>
<android.widget.VideoView.6: void <init>(android.widget.VideoView)>:<>:<android.widget.VideoView.6:android.media.MediaPlayer.OnBufferingUpdateListener>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void onUnlockAttempt(boolean)>:<public>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.view.ViewRootImpl: boolean showContextMenuForChild(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.media.tv.TvInputManager.Session: android.media.tv.TvInputManager.Session.PendingEvent obtainPendingEventLocked(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager.Session.FinishedInputEventCallback,android.os.Handler)>:<private>:<android.media.tv.TvInputManager.Session>
<android.media.tv.TvInputHardwareInfo: void <init>()>:<private>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.AudioService: int access.2502(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.view.InputDevice.MotionRange: int getSource()>:<public>:<android.view.InputDevice.MotionRange>
<android.widget.StackView.StackFrame: void <init>(android.content.Context)>:<public>:<android.widget.StackView.StackFrame:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.RouteCategory: java.util.List getRoutes(java.util.List)>:<public>:<android.media.MediaRouter.RouteCategory>
<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>:<private>:<android.view.AccessibilityInteractionController>
<android.widget.VideoView: boolean access.402(android.widget.VideoView,boolean)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.printservice.IPrintService.Stub.Proxy: void requestCancelPrintJob(android.print.PrintJobInfo)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.media.MediaFocusControl: void onReevaluateRemoteControlDisplays()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: android.graphics.PorterDuff.Mode readPorterDuffMode(android.os.Parcel)>:<private>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.widget.Editor.HandleView: void showActionPopupWindowOuter(int)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setMaxDate(long)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.Editor.SpanController.2: void onDeleteClick(android.text.style.EasyEditSpan)>:<public>:<android.widget.Editor.SpanController.2:android.widget.Editor.EasyEditDeleteListener>
<android.widget.RemoteViews.ViewGroupAction: int mergeBehavior()>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setStatus(int)>:<public>:<android.print.PrinterInfo.Builder>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.inputmethod.CursorAnchorInfo.1: android.view.inputmethod.CursorAnchorInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.CursorAnchorInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowManager.Stub.Proxy: void setOverscan(int,int,int,int,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.service.voice.IVoiceInteractionService.Stub: android.service.voice.IVoiceInteractionService asInterface(android.os.IBinder)>:<public static>:<android.service.voice.IVoiceInteractionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionService>
<android.opengl.GLErrorWrapper: int glCheckFramebufferStatusOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaFormat: boolean getFeatureEnabled(java.lang.String)>:<public>:<android.media.MediaFormat>
<android.media.session.MediaController.TransportControls: void setRating(android.media.Rating)>:<public>:<android.media.session.MediaController.TransportControls>
<android.widget.TimePickerSpinnerDelegate: int getCurrentItemShowing()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.TextView: int getTypefaceStyle()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteFullException: void <init>()>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewGroup.TouchTarget: void <init>()>:<private>:<android.view.ViewGroup.TouchTarget>
<android.media.tv.TvView.TvInputCallback: void onDisconnected(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>:<public static>:<android.view.ViewConfiguration>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.TextView: void setInputType(int,boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>:<public abstract>:<android.view.View.OnFocusChangeListener>
<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.view.GLES20Canvas: void drawRoundRect(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.session.MediaController: android.media.session.MediaController.TransportControls getTransportControls()>:<public>:<android.media.session.MediaController>
<android.widget.TextView: void updateTextServicesLocaleAsync()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView: boolean setFrame(int,int,int,int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void setVisibility(boolean)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.gesture.GestureOverlayView.FadeOutRunnable: void <init>(android.gesture.GestureOverlayView,android.gesture.GestureOverlayView.1)>:<>:<android.gesture.GestureOverlayView.FadeOutRunnable:java.lang.Runnable>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.animation.RectEvaluator: android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.media.PlayerRecord.RcClientDeathHandler: android.os.IBinder access.000(android.media.PlayerRecord.RcClientDeathHandler)>:<static>:<android.media.PlayerRecord.RcClientDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.IWindowManager.Stub.Proxy: boolean startViewServer(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.SearchView.7: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.7:android.view.View.OnKeyListener>
<android.media.tv.ITvInputManager: void setVolume(android.os.IBinder,float,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>:<static>:<android.media.Utils>
<android.view.ViewGroup: void onStopNestedScroll(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextClock: void setTimeZone(java.lang.String)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.Spinner.DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.gesture.InstanceLearner.1: void <init>()>:<>:<android.gesture.InstanceLearner.1:java.util.Comparator>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()>:<>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.MediaScanner: android.content.Context access.2800(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.tv.TvInputInfo.TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>:<public static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.widget.SpellChecker: void createMisspelledSuggestionSpan(android.text.Editable,android.view.textservice.SuggestionsInfo,android.text.style.SpellCheckSpan,int,int)>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.widget.Editor: boolean startSelectionActionMode()>:<>:<android.widget.Editor>
<android.media.tv.TvInputManager.Session.PendingEvent: void <init>(android.media.tv.TvInputManager.Session)>:<private>:<android.media.tv.TvInputManager.Session.PendingEvent:java.lang.Runnable>
<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.accessibility.AccessibilityManager: boolean isHighTextContrastEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.filterpacks.ui.SurfaceTargetFilter: void unregisterSurface()>:<private>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.view.View: android.animation.StateListAnimator getStateListAnimator()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.view.MotionEvent: java.lang.String axisToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISessionController: android.media.session.PlaybackState getPlaybackState()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.ThreadedRenderer: boolean nLoadSystemProperties(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.InputChannel: java.lang.String getName()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.media.MediaDescription.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.MediaDescription.1:android.os.Parcelable.Creator>
<android.view.SurfaceView: void updateWindow(boolean,boolean)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>:<static>:<android.media.Utils>
<android.media.MediaFile: boolean isWMAEnabled()>:<private static>:<android.media.MediaFile>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.ViewRootImpl.ImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.ImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback>
<android.widget.TextView: void setImeOptions(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.ChooseTypeAndAccountActivity: void onOkButtonClicked(android.view.View)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.print.IPrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.media.AudioSystem: int getForceUse(int)>:<public static native>:<android.media.AudioSystem>
<android.database.AbstractCursor: android.os.Bundle getExtras()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void <init>(android.print.PrintFileDocumentAdapter,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void <init>(android.view.ViewRootImpl)>:<public>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.MediaRouter: boolean matchesDeviceAddress(android.hardware.display.WifiDisplay,android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.GridLayout.Axis: int getMeasure(int)>:<public>:<android.widget.GridLayout.Axis>
<android.service.notification.ZenModeConfig: int[] tryParseDays(java.lang.String)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.session.MediaController.PlaybackInfo: int getPlaybackType()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.service.notification.StatusBarNotification.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.service.notification.StatusBarNotification.1:android.os.Parcelable.Creator>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdClientThread(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.AccessibilityInteractionController>
<android.widget.Editor: void updateCursorPosition(int,int,int,float)>:<private>:<android.widget.Editor>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Editor.InsertionHandleView: int getHorizontalGravity(boolean)>:<protected>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.media.MediaMuxer: void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec.BufferInfo)>:<public>:<android.media.MediaMuxer>
<android.media.MediaMetadata: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>:<public>:<android.media.JetPlayer>
<android.view.ViewDebug: void dumpTheme(android.view.View,java.io.OutputStream)>:<public static>:<android.view.ViewDebug>
<android.view.GLES20Canvas: void setDrawFilter(android.graphics.DrawFilter)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.SoundPool.SoundPoolImpl: void autoPause()>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.widget.FastScroller: void access.000(android.widget.FastScroller,int)>:<static>:<android.widget.FastScroller>
<android.gesture.Gesture.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.gesture.Gesture.1:android.os.Parcelable.Creator>
<android.database.Cursor: boolean isLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(int,int)>:<public>:<android.preference.PreferenceFrameLayout.LayoutParams:android.widget.FrameLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.CCParser.CCData: char getBasicChar(byte)>:<private>:<android.media.CCParser.CCData>
<android.widget.TextView: int getLineCount()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.Window.Callback>
<android.media.AudioService: boolean access.9702(android.media.AudioService,boolean)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.view.View: void setPivotX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: java.lang.String glGetString(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.Gallery: int getCenterOfView(android.view.View)>:<private static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface)>:<public static>:<android.view.SurfaceControl>
<android.media.MediaCodec: int native_dequeueOutputBuffer(android.media.MediaCodec.BufferInfo,long)>:<private final native>:<android.media.MediaCodec>
<android.service.notification.NotificationListenerService.RankingMap: void buildInterceptedSetLocked()>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.accounts.AccountManager.AmsTask.1: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.view.Surface.1: android.view.Surface createFromParcel(android.os.Parcel)>:<public>:<android.view.Surface.1:android.os.Parcelable.Creator>
<android.animation.ValueAnimator: void setRepeatMode(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.IWindowManager.Stub.Proxy: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.preference.PreferenceScreen.HwDialog: void <init>(android.content.Context,int)>:<public>:<android.preference.PreferenceScreen.HwDialog:android.app.Dialog>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.JetPlayer: int getMaxTracks()>:<public static>:<android.media.JetPlayer>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>:<public static>:<android.view.FocusFinder>
<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.IAudioFocusDispatcher.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IAudioFocusDispatcher.Stub:android.os.Binder,android.media.IAudioFocusDispatcher>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.AnimatorSetListener:android.animation.Animator.AnimatorListener>
<android.view.ViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.GridView: android.view.View fillDown(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.IContentObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onStop()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.media.AudioService: boolean discardRmtSbmxFullVolDeathHandlerFor(android.os.IBinder)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioService: int access.1200(android.media.AudioService,int,android.os.IBinder,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.tv.ITvInputClient.Stub.Proxy: void onLayoutSurface(int,int,int,int,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.widget.ActionMenuView.LayoutParams)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setWeekNumberColor(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.AudioService: void access.9100(android.media.AudioService,android.content.Intent)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: void nGetInverseTransformMatrix(long,long)>:<private static native>:<android.view.RenderNode>
<android.media.AudioService: void onSendBecomingNoisyIntent()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.ITvInputManager.Stub.Proxy: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.tv.TvInputManager.Session: void access.1300(android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvInputManager.Session>
<android.filterpacks.videosink.MediaEncoderFilter: void setupPorts()>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: int getFarthestPositionFrom(int,java.util.ArrayList)>:<private>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.opengl.GLLogWrapper: void glMultMatrixf(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService.VolumeController: void postDismiss()>:<public>:<android.media.AudioService.VolumeController>
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.WindowId.FocusObserver: void onFocusGained(android.view.WindowId)>:<public abstract>:<android.view.WindowId.FocusObserver>
<android.view.MotionEvent: java.lang.String buttonStateToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: void sendAccessibilityEvent(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: void addAnimator(android.view.RenderNodeAnimator)>:<public>:<android.view.RenderNode>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.RemoteViewsListAdapter: void setViewsList(java.util.ArrayList)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.GLES20RecordingCanvas: boolean isRecordingFor(java.lang.Object)>:<public>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.tv.TvView.MySessionCallback: void onContentAllowed(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.widget.Editor: boolean isInBatchEditMode()>:<protected>:<android.widget.Editor>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback,int)>:<public>:<android.media.MediaRouter>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.RingtonePreference: void setRingtoneType(int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.AudioService: java.util.ArrayList access.1100(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AutoCompleteTextView.PopupDataSetObserver.1: void run()>:<public>:<android.widget.AutoCompleteTextView.PopupDataSetObserver.1:java.lang.Runnable>
<android.media.session.ISessionControllerCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionControllerCallback.Stub:android.os.Binder,android.media.session.ISessionControllerCallback>
<android.media.MediaDescription: java.lang.CharSequence getDescription()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.service.dreams.DreamService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.filterpacks.imageproc.RedEyeFilter: void createRedEyeFrame(android.filterfw.core.FilterContext)>:<private>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.view.View: boolean isHoverable()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void onAttachedToWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityWindowInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.accessibility.AccessibilityWindowInfo.1:android.os.Parcelable.Creator>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<android.media.session.ISessionController: android.media.session.ParcelableVolumeInfo getVolumeAttributes()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.tv.ITvInputManager.Stub.Proxy: void requestUnblockContent(android.os.IBinder,java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.filterpacks.performance.Throughput: java.lang.String toString()>:<public>:<android.filterpacks.performance.Throughput>
<android.animation.ValueAnimator: long getCurrentPlayTime()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.browse.MediaBrowser: java.lang.String getStateLabel(int)>:<private static>:<android.media.browse.MediaBrowser>
<android.media.Tokenizer.OnTokenListener: void onLineEnd()>:<public abstract>:<android.media.Tokenizer.OnTokenListener>
<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>:<public>:<android.media.session.MediaSession>
<android.animation.PathKeyframes: java.util.ArrayList getKeyframes()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.view.Nsd: boolean setCmdAdjFlag(java.lang.String)>:<public static>:<android.view.Nsd>
<android.media.AudioService.AudioServiceInternal: void adjustStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public>:<android.media.AudioService.AudioServiceInternal:android.media.AudioManagerInternal>
<android.media.AudioService.VolumeStreamState: java.lang.String getSettingNameForDevice(int)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.printservice.PrintService.1: void onPrintJobQueued(android.print.PrintJobInfo)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onFastForward()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.media.audiofx.Virtualizer: int deviceToMode(int)>:<private static>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.media.tv.TvTrackInfo: int getAudioSampleRate()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioHandle: void <init>(int)>:<>:<android.media.AudioHandle>
<android.view.WindowCallbackWrapper: void onAttachedToWindow()>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.Rating: android.media.Rating newStarRating(int,float)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.view.ViewGroup.3: void <init>(android.view.ViewGroup)>:<>:<android.view.ViewGroup.3:android.animation.LayoutTransition.TransitionListener>
<android.media.WebVttTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>:<public volatile>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.700(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.tv.TvInputService.HardwareSession.1: void onVideoUnavailable(android.media.tv.TvInputManager.Session,int)>:<public>:<android.media.tv.TvInputService.HardwareSession.1:android.media.tv.TvInputManager.SessionCallback>
<android.view.MotionEvent: float getHistoricalOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.IKeyChainService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.security.IKeyChainService.Stub:android.os.Binder,android.security.IKeyChainService>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.audiofx.Visualizer: int native_setScalingMode(int)>:<private final native>:<android.media.audiofx.Visualizer>
<android.view.View: boolean pointInView(float,float)>:<final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ActionMode: void <init>()>:<public>:<android.view.ActionMode>
<android.database.sqlite.SQLiteTableLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.IAudioService.Stub.Proxy: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.AccessibilityIterators.AbstractTextSegmentIterator: int[] getRange(int,int)>:<protected>:<android.view.AccessibilityIterators.AbstractTextSegmentIterator:android.view.AccessibilityIterators.TextSegmentIterator>
<android.database.sqlite.SQLiteConnection: void setPageSize()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.filterpacks.imageproc.PosterizeFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.PosterizeFilter:android.filterfw.core.Filter>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setIntValues(int[])>:<public transient>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.gesture.Instance: float[] spatialSampler(android.gesture.Gesture)>:<private static>:<android.gesture.Instance>
<android.opengl.GLLogWrapper: void glLightf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.session.MediaSession.QueueItem.1: android.media.session.MediaSession.QueueItem[] newArray(int)>:<public>:<android.media.session.MediaSession.QueueItem.1:android.os.Parcelable.Creator>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.service.notification.ZenModeConfig: int hashCode()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.SearchView: java.lang.CharSequence getQuery()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.accounts.IAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.View: boolean requestFocus(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.EGL14: boolean eglWaitClient()>:<public static native>:<android.opengl.EGL14>
<android.media.tv.TvInputService.Session: boolean onSelectTrack(int,java.lang.String)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.R.xml: void <init>()>:<public>:<android.R.xml>
<android.media.tv.TvView.OnUnhandledInputEventListener: boolean onUnhandledInputEvent(android.view.InputEvent)>:<public abstract>:<android.media.tv.TvView.OnUnhandledInputEventListener>
<android.animation.PathKeyframes.IntKeyframesBase: void <init>(android.animation.PathKeyframes.1)>:<>:<android.animation.PathKeyframes.IntKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.IntKeyframes>
<android.view.View: void createContextMenu(android.view.ContextMenu)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ValueAnimator: void animateValue(float)>:<>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.Editor: void beginBatchEdit()>:<public>:<android.widget.Editor>
<android.widget.TimePickerSpinnerDelegate: void updateHeaderSeparator()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.MediaController.4: void <init>(android.widget.MediaController)>:<>:<android.widget.MediaController.4:android.view.View.OnClickListener>
<android.preference.PreferenceActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.session.MediaSessionLegacyHelper: android.util.ArrayMap access.200(android.media.session.MediaSessionLegacyHelper)>:<static>:<android.media.session.MediaSessionLegacyHelper>
<android.media.AudioService.ScoClient: int getPid()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.widget.TextView: int getFadeHeight(boolean)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GLES20Canvas: boolean isOpaque()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaCodec.BufferMap.CodecBuffer: void free()>:<public>:<android.media.MediaCodec.BufferMap.CodecBuffer>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.KeyEvent: boolean isAltPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.ViewParent>
<android.widget.AutoCompleteTextView.PopupDataSetObserver.1: void <init>(android.widget.AutoCompleteTextView.PopupDataSetObserver)>:<>:<android.widget.AutoCompleteTextView.PopupDataSetObserver.1:java.lang.Runnable>
<android.security.IKeyChainService.Stub.Proxy: boolean reset()>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.view.LayoutInflater: void <clinit>()>:<static>:<android.view.LayoutInflater>
<android.media.MediaRouter.Static.1.1: void <init>(android.media.MediaRouter.Static.1,android.media.AudioRoutesInfo)>:<>:<android.media.MediaRouter.Static.1.1:java.lang.Runnable>
<android.media.tv.ITvInputServiceCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputServiceCallback.Stub:android.os.Binder,android.media.tv.ITvInputServiceCallback>
<android.view.HardwareRenderer: android.view.HardwareRenderer create(android.content.Context,boolean)>:<static>:<android.view.HardwareRenderer>
<android.widget.Switch: void setTextOff(java.lang.CharSequence)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View.13: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.13:android.util.FloatProperty>
<android.view.RenderNode: float nGetTranslationX(long)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLES20: void <init>()>:<public>:<android.opengl.GLES20>
<android.widget.RtlSpacingHelper: void <init>()>:<>:<android.widget.RtlSpacingHelper>
<android.media.session.MediaController: int getRatingType()>:<public>:<android.media.session.MediaController>
<android.view.ViewRootImpl: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.CursorAnchorInfo.Builder: java.lang.CharSequence access.400(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.inputmethod.CompletionInfo: long getId()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>:<private>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.session.ParcelableVolumeInfo.1: void <init>()>:<>:<android.media.session.ParcelableVolumeInfo.1:android.os.Parcelable.Creator>
<android.media.WebVttTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>:<>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.view.InputEventConsistencyVerifier.KeyState: android.view.InputEventConsistencyVerifier.KeyState obtain(int,int,int)>:<public static>:<android.view.InputEventConsistencyVerifier.KeyState>
<android.view.IWindowManager.Stub.Proxy: boolean isSafeModeEnabled()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.PropertyValuesHolder: void access.700(java.lang.Object,long,float,float,float,float)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View: void setMeasuredDimensionRaw(int,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.service.dreams.DreamService: void setInteractive(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.voice.VoiceInteractionSessionService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.widget.FastScroller: void setEnabled(boolean)>:<public>:<android.widget.FastScroller>
<android.widget.Editor.1: void <init>(android.widget.Editor)>:<>:<android.widget.Editor.1:java.lang.Runnable>
<android.media.tv.TvInputManager.Session.TvInputEventSender: void onInputEventFinished(int,boolean)>:<public>:<android.media.tv.TvInputManager.Session.TvInputEventSender:android.view.InputEventSender>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.appwidget.AppWidgetManager: void convertSizesToPixels(android.appwidget.AppWidgetProviderInfo)>:<private>:<android.appwidget.AppWidgetManager>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: float access.1932(android.view.ViewRootImpl.SyntheticTouchNavigationHandler,float)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.Rating: boolean hasHeart()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.view.AccessibilityInteractionController: void findFocusUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.media.session.MediaSession.Callback: void <init>()>:<public>:<android.media.session.MediaSession.Callback>
<android.widget.TextView.1: void <init>(android.widget.TextView,java.lang.CharSequence)>:<>:<android.widget.TextView.1:java.lang.Runnable>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>:<public static native>:<android.opengl.ETC1>
<android.media.MediaCodec: android.media.MediaCodec.Callback access.000(android.media.MediaCodec)>:<static>:<android.media.MediaCodec>
<android.view.ThreadedRenderer: void destroyHardwareResources(android.view.View)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.View: int getScrollBarDefaultDelayBeforeFade()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.media.AmrInputStream: void <clinit>()>:<static>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.FocusFinder.SequentialFocusComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.database.IBulkCursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.view.inputmethod.InputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.view.IWindowManager.Stub.Proxy: void closeSystemDialogs(java.lang.String)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder valueOf(java.lang.String)>:<public static>:<android.media.DecoderCapabilities.VideoDecoder:java.lang.Enum>
<android.view.HardwareRenderer: void destroy()>:<abstract>:<android.view.HardwareRenderer>
<android.media.MediaRouter.Callback: void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.Callback>
<android.view.MotionEvent: float getSize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView.TvInputCallback: void onConnectionFailed(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.opengl.GLLogWrapper: void end()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glLightfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View.6: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.6:android.util.FloatProperty>
<android.view.ViewRootImpl: boolean ensureTouchModeLocally(boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService: android.media.AudioService.SoundPoolCallback access.1802(android.media.AudioService,android.media.AudioService.SoundPoolCallback)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.SurfaceView.4: void setFixedSize(int,int)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.preference.PreferenceActivity: void setSelectedHeader(android.preference.PreferenceActivity.Header)>:<>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.hsm.HwAudioPermWrapper: void <clinit>()>:<static>:<android.hsm.HwAudioPermWrapper>
<android.media.MediaPlayer: android.media.SubtitleTrack[] access.000(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaCodecList: java.lang.String findCodecForFormat(boolean,android.media.MediaFormat)>:<private>:<android.media.MediaCodecList>
<android.print.PrintAttributes.Margins: android.print.PrintAttributes.Margins createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.Margins>
<android.media.tv.TvView: void setStreamVolume(float)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.AudioService: java.util.List access.5300()>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.IAudioService.Stub.Proxy: boolean registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.Cursor: boolean requery()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.audiofx.Visualizer: void native_init()>:<private static final native>:<android.media.audiofx.Visualizer>
<android.media.MediaCodec: java.util.Map getOutputFormatNative(int)>:<private final native>:<android.media.MediaCodec>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.CursorWindow: boolean isFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.Image: int getFormat()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.widget.ScrollView: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.Utils.2: int compare(android.util.Range,android.util.Range)>:<public>:<android.media.Utils.2:java.util.Comparator>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.database.CursorWindow: void <clinit>()>:<static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnection: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.audiopolicy.AudioPolicyConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.audiopolicy.AudioPolicyConfig.1:android.os.Parcelable.Creator>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: int bytesToInt(byte[])>:<private>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.media.TextTrackCue: java.lang.String toString()>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.opengl.GLLogWrapper: void glSampleCoverage(float,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodManager: void closeCurrentInput()>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.IWindow: void windowFocusChanged(boolean,boolean)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.media.MediaRecorder: void setAudioChannels(int)>:<public>:<android.media.MediaRecorder>
<android.media.tv.TvStreamConfig: int describeContents()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.widget.TextView: int getMaxWidth()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.IDreamService: void detach()>:<public abstract>:<android.service.dreams.IDreamService:android.os.IInterface>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.VideoView: java.lang.String access.1500(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaCodecInfo.Feature: void <init>(java.lang.String,int,boolean)>:<public>:<android.media.MediaCodecInfo.Feature>
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager.CaptionStyle getUserStyle()>:<public>:<android.view.accessibility.CaptioningManager>
<android.media.MediaFocusControl: void registerRemoteControlDisplay_int(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.print.IPrintManager.Stub.Proxy: void validatePrinters(java.util.List,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.media.MediaCodec: void finalize()>:<protected>:<android.media.MediaCodec>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: void <init>(android.widget.ActionMenuPresenter)>:<private>:<android.widget.ActionMenuPresenter.PopupPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.500(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.PopupMenu: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.KeyCharacterMap: boolean nativeGetFallbackAction(long,int,int,android.view.KeyCharacterMap.FallbackAction)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void nativeResetCancel(long,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.ViewTreeObserver.InternalInsetsInfo: void set(android.view.ViewTreeObserver.InternalInsetsInfo)>:<>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewRootImpl.ViewPreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>:<public>:<android.view.ViewRootImpl.ViewPreImeInputStage:android.view.ViewRootImpl.InputStage>
<android.view.ViewDebug: void dumpViewHierarchy(android.content.Context,android.view.ViewGroup,java.io.BufferedWriter,int,boolean,boolean)>:<private static>:<android.view.ViewDebug>
<android.print.PrinterId: void <clinit>()>:<static>:<android.print.PrinterId:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.MediaActionSound.1: void onLoadComplete(android.media.SoundPool,int,int)>:<public>:<android.media.MediaActionSound.1:android.media.SoundPool.OnLoadCompleteListener>
<android.media.ClosedCaptionWidget.CCLineBox: void onMeasure(int,int)>:<protected>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.media.AudioGain: int stepValue()>:<public>:<android.media.AudioGain>
<android.media.AudioService.VolumeController: void postDisplaySafeVolumeWarning(int)>:<public>:<android.media.AudioService.VolumeController>
<android.service.notification.StatusBarNotification: int describeContents()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.AppSecurityPermissions.PermissionItemView: void setPermission(android.widget.AppSecurityPermissions.MyPermissionGroupInfo,android.widget.AppSecurityPermissions.MyPermissionInfo,boolean,java.lang.CharSequence,java.lang.String,boolean)>:<public>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.view.inputmethod.CorrectionInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.CorrectionInfo.1:android.os.Parcelable.Creator>
<android.media.effect.effects.ContrastEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.ContrastEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.ViewGroup.MarginLayoutParams: boolean isMarginRelative()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.tv.TvInputService.1: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.view.ViewRootImpl.QueuedInputEvent: void <init>()>:<private>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.database.sqlite.SQLiteConnectionPool: void closeExcessConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.View: void setAnimationMatrix(android.graphics.Matrix)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ThreadedRenderer: void nPauseSurface(long,android.view.Surface)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.animation.LayoutTransition.2: void <init>(android.animation.LayoutTransition,android.view.View)>:<>:<android.animation.LayoutTransition.2:android.animation.AnimatorListenerAdapter>
<android.service.media.MediaBrowserService: void addSubscription(java.lang.String,android.service.media.MediaBrowserService.ConnectionRecord)>:<private>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceManager: int getDefaultSharedPreferencesMode()>:<private static>:<android.preference.PreferenceManager>
<android.animation.PathKeyframes: android.graphics.PointF interpolateInRange(float,int,int)>:<private>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.opengl.GLES10: void glPushMatrix()>:<public static native>:<android.opengl.GLES10>
<android.view.Window: android.view.View getCurrentFocus()>:<public abstract>:<android.view.Window>
<android.filterpacks.imageproc.ImageSlicer: void setupPorts()>:<public>:<android.filterpacks.imageproc.ImageSlicer:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteSession: boolean yieldTransactionUnchecked(long,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputService.Session: int dispatchInputEvent(android.view.InputEvent,android.view.InputEventReceiver)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback access.102(android.service.trust.TrustAgentService,android.service.trust.ITrustAgentServiceCallback)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.JetPlayer: java.lang.Object access.000(android.media.JetPlayer)>:<static>:<android.media.JetPlayer>
<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.Spinner.DropDownAdapter: long getItemId(int)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: void <init>()>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: java.lang.ref.WeakReference access.800(android.widget.AutoCompleteTextView.PopupDataSetObserver)>:<static>:<android.widget.AutoCompleteTextView.PopupDataSetObserver:android.database.DataSetObserver>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.SessionCallbackRecord.10: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,int,int,int,int)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.10:java.lang.Runnable>
<android.accounts.ChooseTypeAndAccountActivity: void onResume()>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES20: void glFrontFace(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView: android.text.Editable getEditableText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaPlayer: android.media.MediaPlayer.OnCompletionListener access.800(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.RemoteController.RcDisplay: void setEnabled(boolean)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.media.session.MediaSessionLegacyHelper: boolean isGlobalPriorityActive()>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.widget.Editor: boolean extractedTextModeWillBeStarted()>:<private>:<android.widget.Editor>
<android.print.PrintJobInfo: void setCopies(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask: void doWork()>:<public abstract>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.media.SubtitleController: void processOnAnchor(android.os.Message)>:<private>:<android.media.SubtitleController>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.AudioService: void createAudioSystemThread()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.session.PlaybackState: java.lang.String toString()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.filterpacks.imageproc.SharpenFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.view.ViewPropertyAnimator: android.animation.ValueAnimator.AnimatorUpdateListener getUpdateListener()>:<>:<android.view.ViewPropertyAnimator>
<android.widget.ZoomButtonsController: boolean isInterestingKey(int)>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.Scroller: void abortAnimation()>:<public>:<android.widget.Scroller>
<android.media.MediaRecorder: void resume()>:<public native>:<android.media.MediaRecorder>
<android.widget.TextView: android.text.Layout access.800(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.EditTextPreference: java.lang.String getText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioTrack: int native_get_min_buff_size(int,int,int)>:<private static final native>:<android.media.AudioTrack>
<android.view.IWindowFocusObserver.Stub.Proxy: void focusLost(android.os.IBinder)>:<public>:<android.view.IWindowFocusObserver.Stub.Proxy:android.view.IWindowFocusObserver>
<android.opengl.GLErrorWrapper: void glHint(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: void performCollectViewAttributes(android.view.View.AttachInfo,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onError()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfoResult(android.print.PrintJobInfo,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.widget.PopupMenu.1: android.widget.ListPopupWindow getPopup()>:<public>:<android.widget.PopupMenu.1:android.widget.ListPopupWindow.ForwardingListener>
<android.security.IKeystoreService.Stub: void <init>()>:<public>:<android.security.IKeystoreService.Stub:android.os.Binder,android.security.IKeystoreService>
<android.widget.TextView.3: void <init>(android.widget.TextView)>:<>:<android.widget.TextView.3:java.lang.Runnable>
<android.view.KeyCharacterMap.1: void <init>()>:<>:<android.view.KeyCharacterMap.1:android.os.Parcelable.Creator>
<android.widget.StackView: void showOnly(int,boolean)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaFocusControl: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.opengl.GLErrorWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaScanner: boolean access.2002(android.media.MediaScanner,boolean)>:<static>:<android.media.MediaScanner>
<android.ddm.DdmHandleExit: void register()>:<public static>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnection>
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewRootImpl: void invalidateChild(android.view.View,android.graphics.Rect)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaScannerConnection.ClientProxy: void <init>(java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>:<>:<android.media.MediaScannerConnection.ClientProxy:android.media.MediaScannerConnection.MediaScannerConnectionClient>
<android.widget.HwAbsListView: boolean checkIsEnabled(android.widget.ListAdapter,int)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.Choreographer: void scheduleFrameLocked(long)>:<private>:<android.view.Choreographer>
<android.opengl.GLES10: void glTexCoordPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.view.MotionEvent: long getHistoricalEventTime(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewGroup.HoverTarget: android.view.ViewGroup.HoverTarget obtain(android.view.View)>:<public static>:<android.view.ViewGroup.HoverTarget>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioRecord: java.lang.Object access.000(android.media.AudioRecord)>:<static>:<android.media.AudioRecord>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.preference.Preference: android.content.Context getContext()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.DatePickerController: java.util.Calendar getMinDate()>:<public abstract>:<android.widget.DatePickerController>
<android.preference.VolumePreference: void setStreamType(int)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.widget.FastScroller: void getSectionsFromIndexer()>:<private>:<android.widget.FastScroller>
<android.view.RenderNode: float nGetCameraDistance(long)>:<private static native>:<android.view.RenderNode>
<android.view.View: void requestLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl.TakenSurfaceHolder: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.hsm.HwAudioPermWrapper: void confirmPermission()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.test.InstrumentationTestSuite: void <init>(java.lang.Class,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.media.SubtitleController: android.media.SubtitleTrack getSelectedTrack()>:<public>:<android.media.SubtitleController>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrintAttributes.Builder>
<android.database.Cursor: int getInt(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.ViewGroup: void cancelAndClearTouchTargets(android.view.MotionEvent)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaSession: void dispatchPlayFromSearch(java.lang.String,android.os.Bundle)>:<private>:<android.media.session.MediaSession>
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void <init>(android.service.trust.TrustAgentService)>:<private>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.view.animation.PathInterpolator: void <init>(android.graphics.Path)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.opengl.GLSurfaceView.EglHelper: void finish()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.security.KeyChain.AliasResponse: void alias(java.lang.String)>:<public>:<android.security.KeyChain.AliasResponse:android.security.IKeyChainAliasCallback.Stub,android.os.Binder>
<android.view.WindowManagerPolicy.WindowManagerFuncs: android.view.WindowManagerPolicy.FakeWindow addFakeWindow(android.os.Looper,android.view.InputEventReceiver.Factory,java.lang.String,int,int,int,boolean,boolean,boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.widget.ScrollView: void setFillViewport(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void removeUnsetPressCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.Animation: void setRepeatMode(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.print.PrinterCapabilitiesInfo: java.util.List access.200(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: void setBluetoothScoOn(boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterpacks.ui.SurfaceTargetFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>:<public>:<android.media.JetPlayer>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void cancel(android.view.MotionEvent)>:<private>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.print.IPrintManager: void restartPrintJob(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()>:<public final>:<android.media.MediaCodecInfo>
<android.media.AudioManager: int getStreamVolume(int)>:<public>:<android.media.AudioManager>
<android.media.tv.TvInputManager.Session: void flushPendingEventsLocked()>:<private>:<android.media.tv.TvInputManager.Session>
<android.view.SurfaceView.4: android.view.Surface getSurface()>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.accounts.IAccountManager: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.widget.FastScroller: void setAlwaysShow(boolean)>:<public>:<android.widget.FastScroller>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.MediaScannerConnection.ClientProxy: void onMediaScannerConnected()>:<public>:<android.media.MediaScannerConnection.ClientProxy:android.media.MediaScannerConnection.MediaScannerConnectionClient>
<android.view.ViewStub: int getInflatedId()>:<public>:<android.view.ViewStub:android.view.View>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb.Settings)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.widget.SimpleCursorAdapter: void findColumns(android.database.Cursor,java.lang.String[])>:<private>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.Editor.Blink: void cancel()>:<>:<android.widget.Editor.Blink:android.os.Handler,java.lang.Runnable>
<android.media.MediaRouter: int getWifiDisplayStatusCode(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)>:<static>:<android.media.MediaRouter>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.FastScroller: void transitionToVisible()>:<private>:<android.widget.FastScroller>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.SoundPool.SoundPoolDelegate: void pause(int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.widget.Gallery.1: void run()>:<public>:<android.widget.Gallery.1:java.lang.Runnable>
<android.widget.MediaController: android.widget.TextView access.1000(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewParent: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.preference.PreferenceActivity.HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.preference.PreferenceActivity.HeaderAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.print.IPrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.service.media.MediaBrowserService.ServiceBinder.3: void <init>(android.service.media.MediaBrowserService.ServiceBinder,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String)>:<>:<android.service.media.MediaBrowserService.ServiceBinder.3:java.lang.Runnable>
<android.filterpacks.ui.SurfaceTargetFilter: void updateRenderMode()>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.filterpacks.videosrc.SurfaceTextureTarget: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void onError(int,java.lang.String)>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.opengl.GLErrorWrapper: void glScissor(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.MotionEvent: float getRawX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowDetached()>:<public abstract>:<android.view.ViewTreeObserver.OnWindowAttachListener>
<android.media.AudioService.SettingsObserver: void onChange(boolean)>:<public>:<android.media.AudioService.SettingsObserver:android.database.ContentObserver>
<android.accounts.IAccountAuthenticator: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.opengl.GLLogWrapper: void glSampleCoveragex(int,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SubtitleTrack.CueList: long nextTimeAfter(long)>:<public>:<android.media.SubtitleTrack.CueList>
<android.media.Rating: float getPercentRating()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.media.browse.MediaBrowser.4: void run()>:<public>:<android.media.browse.MediaBrowser.4:java.lang.Runnable>
<android.widget.SearchView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.MediaPlayer: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.ScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.ISessionControllerCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.media.AudioService: void setLVMMode(int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: boolean die(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl.1: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.1:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.EGLContext: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.widget.TextView: int getBaseline()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection access.200(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.filterpacks.imageproc.TintFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.view.inputmethod.SparseRectFArray.1: android.view.inputmethod.SparseRectFArray createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.SparseRectFArray.1:android.os.Parcelable.Creator>
<android.media.session.ISessionController: void rate(android.media.Rating)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>:<public static final>:<android.media.MediaCrypto>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void access.700(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.service.notification.IConditionProvider.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.view.ViewRootImpl.W: void doneAnimating()>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.preference.VolumePreference.SavedState: void <clinit>()>:<static>:<android.preference.VolumePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.1300(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.audiofx.Virtualizer: int getDeviceForModeQuery(int)>:<private static>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.View: boolean updateLocalSystemUiVisibility(int,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.RemoteDisplayState.RemoteDisplayInfo.1: android.media.RemoteDisplayState.RemoteDisplayInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo.1:android.os.Parcelable.Creator>
<android.view.HardwareCanvas: void drawRoundRect(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>:<public abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void destroyDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollBarDrawable: void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean)>:<protected>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.inputmethod.InputMethodSession: void finishInput()>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.view.ViewGroup: int getLayoutMode()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.Preference: boolean shouldDisableDependents()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>:<public>:<android.view.Window>
<android.security.IKeyChainService.Stub.Proxy: void setGrant(int,java.lang.String,boolean)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.Editor: void access.500(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>:<public abstract>:<android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaPlayer.EventHandler: void <init>(android.media.MediaPlayer,android.media.MediaPlayer,android.os.Looper)>:<public>:<android.media.MediaPlayer.EventHandler:android.os.Handler>
<android.widget.DayPickerView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.AudioService.1: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.1:android.media.AudioSystem.ErrorCallback>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void setFocusMonth(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.media.AudioDevicePort: java.lang.String address()>:<public>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.service.notification.INotificationListener.Stub.Proxy: void onNotificationRankingUpdate(android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.view.ScaleGestureDetector: long getEventTime()>:<public>:<android.view.ScaleGestureDetector>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>:<public>:<android.view.ViewConfiguration>
<android.media.AudioTrack: void stop()>:<public>:<android.media.AudioTrack>
<android.database.sqlite.SQLiteConnection: void setJournalSizeLimit()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.AudioManager.FocusEventHandlerDelegate: void <init>(android.media.AudioManager)>:<>:<android.media.AudioManager.FocusEventHandlerDelegate>
<android.media.MediaCodec: java.nio.ByteBuffer[] access.400(android.media.MediaCodec)>:<static>:<android.media.MediaCodec>
<android.view.View.12: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.12:android.util.FloatProperty>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.service.dreams.DreamService: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean isBitrateModeSupported(int)>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.media.AudioMixPort: boolean equals(java.lang.Object)>:<public>:<android.media.AudioMixPort:android.media.AudioPort>
<android.media.MediaPlayer: boolean setParameter(int,android.os.Parcel)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Editor: boolean selectCurrentWord()>:<private>:<android.widget.Editor>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: void onSetTrustAgentFeaturesEnabledCompleted(boolean,android.os.IBinder)>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.media.AudioService: java.util.HashMap access.10400(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaCodec.CodecException: java.lang.String getDiagnosticInfo()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.MediaDrm.EventHandler: void <init>(android.media.MediaDrm,android.media.MediaDrm,android.os.Looper)>:<public>:<android.media.MediaDrm.EventHandler:android.os.Handler>
<android.widget.RadialTimePickerView: void preparePrefer30sMap()>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.media.MediaRecorder: void setVideoSize(int,int)>:<public native>:<android.media.MediaRecorder>
<android.accounts.AccountManager.AmsTask: void set(java.lang.Object)>:<protected volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.accessibility.AccessibilityWindowInfo: void setType(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.session.MediaController.CallbackStub: void onQueueTitleChanged(java.lang.CharSequence)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.service.voice.VoiceInteractionSession.Request.1: void <init>(android.service.voice.VoiceInteractionSession.Request)>:<>:<android.service.voice.VoiceInteractionSession.Request.1:com.android.internal.app.IVoiceInteractorRequest.Stub>
<android.view.WindowAnimationFrameStats.1: void <init>()>:<>:<android.view.WindowAnimationFrameStats.1:android.os.Parcelable.Creator>
<android.media.AudioManager: boolean isSpeakerphoneOn()>:<public>:<android.media.AudioManager>
<android.view.ViewRootImpl: android.view.ViewParent getParent()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void reset()>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.IRemoteDisplayCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteDisplayCallback.Stub.Proxy:android.media.IRemoteDisplayCallback>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.ImageReader: void postEventFromNative(java.lang.Object)>:<private static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLSurfaceView.GLThread: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.animation.PropertyValuesHolder: java.lang.Object convertBack(java.lang.Object)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setCurrentClientId(int,android.app.PendingIntent,boolean)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.audiofx.Visualizer: int native_setCaptureSize(int)>:<private final native>:<android.media.audiofx.Visualizer>
<android.service.dreams.DreamService: void onDreamingStopped()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnPreparedListener>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.1400()>:<static>:<android.animation.LayoutTransition>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ListView: void setSelection(int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GraphicBuffer: void nWriteGraphicBufferToParcel(long,android.os.Parcel)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.HardwareLayer: boolean isValid()>:<public>:<android.view.HardwareLayer>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.widget.AdapterView: void fireOnSelected()>:<private>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService: java.lang.String onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.IMediaScannerListener.Stub.Proxy: void scanCompleted(java.lang.String,android.net.Uri)>:<public>:<android.media.IMediaScannerListener.Stub.Proxy:android.media.IMediaScannerListener>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.JetPlayer: boolean native_pauseJet()>:<private final native>:<android.media.JetPlayer>
<android.preference.PreferenceActivity: boolean onIsHidingHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.AdapterView: void updateEmptyStatus(boolean)>:<private>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.projection.MediaProjection: android.media.projection.IMediaProjection getProjection()>:<public>:<android.media.projection.MediaProjection>
<android.media.AudioService: int findVolumeDelta(int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AdapterView: void handleDataChanged()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.InputChannel.1: android.view.InputChannel[] newArray(int)>:<public>:<android.view.InputChannel.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.IAudioService: int setHdmiSystemAudioSupported(boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.AbsSpinner.SavedState: void <clinit>()>:<static>:<android.widget.AbsSpinner.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.media.browse.MediaBrowser: void disconnect()>:<public>:<android.media.browse.MediaBrowser>
<android.animation.LayoutTransition: void cancel(int)>:<public>:<android.animation.LayoutTransition>
<android.accounts.AccountManager.6: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.6:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLLogWrapper: void glStencilMask(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.animation.AnimationSet: void setFlag(int,boolean)>:<private>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.FastScroller: void measurePreview(android.view.View,android.graphics.Rect)>:<private>:<android.widget.FastScroller>
<android.media.AudioService: void readPersistedSettings()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.CursorWrapper: boolean moveToPrevious()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean isReadOnly()>:<public>:<android.gesture.GestureLibraries.FileGestureLibrary:android.gesture.GestureLibrary>
<android.media.audiofx.AudioEffect: byte[] concatArrays(byte[][])>:<public static transient>:<android.media.audiofx.AudioEffect>
<android.view.ViewRootImpl: int getLayoutDirection()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ProgressBar: void setVisibility(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaRecorder.AudioEncoder: void <init>(android.media.MediaRecorder)>:<private>:<android.media.MediaRecorder.AudioEncoder>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.dreams.DreamService.DreamServiceWrapper.2: void <init>(android.service.dreams.DreamService.DreamServiceWrapper)>:<>:<android.service.dreams.DreamService.DreamServiceWrapper.2:java.lang.Runnable>
<android.database.sqlite.SQLiteConnection: void attachCancellationSignal(android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.IWindowManager: boolean startViewServer(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>:<public>:<android.media.AudioManager>
<android.view.animation.Transformation: java.lang.String toString()>:<public>:<android.view.animation.Transformation>
<android.database.sqlite.SQLiteConnection: void nativeCancel(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.View: void cleanupDraw()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>:<public static native>:<android.opengl.GLES11Ext>
<android.media.session.ISessionController: void play()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface,android.graphics.Rect,int,int,int,int,boolean,boolean)>:<private static>:<android.view.SurfaceControl>
<android.media.tv.TvInputManager.Session.PendingEvent: void <init>(android.media.tv.TvInputManager.Session,android.media.tv.TvInputManager.1)>:<>:<android.media.tv.TvInputManager.Session.PendingEvent:java.lang.Runnable>
<android.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: void measureChildren(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService: void unregisterAudioFocusClient(java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.Animation: float getScaleFactor()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Window: boolean hasChildren()>:<public final>:<android.view.Window>
<android.service.voice.VoiceInteractionSession.Insets: void <init>()>:<public>:<android.service.voice.VoiceInteractionSession.Insets>
<android.widget.ZoomControls: void <init>(android.content.Context)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CheckedTextView: boolean isCheckMarkAtStart()>:<private>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.security.IKeystoreService.Stub.Proxy: int password_uid(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: boolean nSetHasOverlappingRendering(long,boolean)>:<private static native>:<android.view.RenderNode>
<android.media.MiniThumbFile: long getFilePos(long)>:<private>:<android.media.MiniThumbFile>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: void recycle()>:<>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.view.ActionMode.Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.media.audiofx.Visualizer.OnServerDiedListener: void onServerDied()>:<public abstract>:<android.media.audiofx.Visualizer.OnServerDiedListener>
<android.media.AudioService.ScoClient: void decCount()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.media.SRTRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>:<public>:<android.media.SRTRenderer:android.media.SubtitleController.Renderer>
<android.view.View: void getDrawingRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutStarted(android.os.ICancellationSignal,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.media.MediaRouter.RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.service.notification.NotificationListenerService: void onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.IWindowSession.Stub.Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.media.tv.TvContentRatingSystemInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.tv.TvContentRatingSystemInfo.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>:<protected>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: void startAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaPlayer: android.media.MediaPlayer.TrackInfo[] getInbandTrackInfo()>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.WindowId: void <init>(android.view.IWindowId)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.service.trust.ITrustAgentService.Stub: void <init>()>:<public>:<android.service.trust.ITrustAgentService.Stub:android.os.Binder,android.service.trust.ITrustAgentService>
<android.media.MutableBackgroundColorSpan: int getBackgroundColor()>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.media.ResampleInputStream: int read(byte[])>:<public>:<android.media.ResampleInputStream:java.io.InputStream>
<android.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.AudioService: void loadTouchSoundAssetDefaults()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.IMediaRouterClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaRouterClient.Stub.Proxy:android.media.IMediaRouterClient>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.printservice.PrintServiceInfo: java.lang.String getId()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDescription: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle)>:<private>:<android.media.MediaDescription:android.os.Parcelable>
<android.media.RemoteController.MediaControllerCallback: void <init>(android.media.RemoteController,android.media.RemoteController.1)>:<>:<android.media.RemoteController.MediaControllerCallback:android.media.session.MediaController.Callback>
<android.view.WindowManagerPolicy: int getInputMethodWindowVisibleHeightLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.ViewRootImpl.NativePreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>:<public>:<android.view.ViewRootImpl.NativePreImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioService: int getMasterStreamType()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.Choreographer: long getFrameTime()>:<public>:<android.view.Choreographer>
<android.view.View: int getLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Menu: void removeItem(int)>:<public abstract>:<android.view.Menu>
<android.database.BulkCursorToCursorAdaptor: void deactivate()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.AudioRecord: void sendStateChangedIntent(int)>:<private>:<android.media.AudioRecord>
<android.view.accessibility.CaptioningManager: void notifyEnabledChanged()>:<private>:<android.view.accessibility.CaptioningManager>
<android.view.View: void <clinit>()>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.service.fingerprint.IFingerprintService.Stub: void <init>()>:<public>:<android.service.fingerprint.IFingerprintService.Stub:android.os.Binder,android.service.fingerprint.IFingerprintService>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putRating(java.lang.String,android.media.Rating)>:<public>:<android.media.MediaMetadata.Builder>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.widget.VideoView: int access.1200(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaScanner.MyMediaScannerClient: void handleStringTag(java.lang.String,java.lang.String)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.media.AudioGainConfig: int rampDurationMs()>:<public>:<android.media.AudioGainConfig>
<android.printservice.IPrintService: void startPrinterDiscovery(java.util.List)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.DatePickerCalendarDelegate: void onClick(android.view.View)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.TextView: void onDetachedFromWindowInternal()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaDrm: byte[] signRSANative(android.media.MediaDrm,byte[],java.lang.String,byte[],byte[])>:<private static final native>:<android.media.MediaDrm>
<android.widget.TextView: int getTotalPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PrinterInfo: int access.302(android.print.PrinterInfo,int)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.view.WindowId.1: android.view.WindowId createFromParcel(android.os.Parcel)>:<public>:<android.view.WindowId.1:android.os.Parcelable.Creator>
<android.media.MediaFocusControl: void dumpRCDList(java.io.PrintWriter)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.RenderNode: float getRotationY()>:<public>:<android.view.RenderNode>
<android.media.projection.IMediaProjectionCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.projection.IMediaProjectionCallback.Stub.Proxy:android.media.projection.IMediaProjectionCallback>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.RatingBar: int getNumStars()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.RemoteController: boolean sendMediaKeyEvent(android.view.KeyEvent)>:<public>:<android.media.RemoteController>
<android.media.audiofx.AudioEffect: int byteArrayToInt(byte[],int)>:<public static>:<android.media.audiofx.AudioEffect>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder[] values()>:<public static>:<android.media.DecoderCapabilities.VideoDecoder:java.lang.Enum>
<android.media.IMediaHTTPConnection: void disconnect()>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.accounts.IAccountManager.Stub.Proxy: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.filterpacks.base.ObjectSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.ObjectSource:android.filterfw.core.Filter>
<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaHTTPConnection: int native_readAt(long,int)>:<private final native>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.accounts.AccountManager.1: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.opengl.GLES20: void glClear(int)>:<public static native>:<android.opengl.GLES20>
<android.media.IRemoteVolumeController.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteVolumeController.Stub:android.os.Binder,android.media.IRemoteVolumeController>
<android.media.AudioMixPortConfig: android.media.AudioPort port()>:<public volatile>:<android.media.AudioMixPortConfig:android.media.AudioPortConfig>
<android.widget.TextView: int getImeActionId()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>:<public>:<android.database.ContentObserver>
<android.media.MediaScanner.MyMediaScannerClient: java.lang.String getGenreName(java.lang.String)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.widget.TextView: boolean isVisiblePasswordInputType(int)>:<private static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountAuthenticatorResponse.1: void <init>()>:<>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.media.MediaPlayer.TimeProvider: void scheduleUpdate(android.media.MediaTimeProvider.OnMediaTimeListener)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.security.KeyStore: boolean duplicate(java.lang.String,int,java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.media.tv.TvView: int access.002(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.DatePicker: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: void onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener)>:<public>:<android.media.RemoteController>
<android.preference.MultiSelectListPreference.1: void onClick(android.content.DialogInterface,int,boolean)>:<public>:<android.preference.MultiSelectListPreference.1:android.content.DialogInterface.OnMultiChoiceClickListener>
<android.media.tv.TvInputService.1: void registerCallback(android.media.tv.ITvInputServiceCallback)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.appwidget.AppWidgetHost.Callbacks: void viewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.view.accessibility.AccessibilityNodeInfo: boolean canOpenPopup()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES20: void glUniform2i(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationEventListener>
<android.media.AudioService: android.media.AudioService.SoundPoolListenerThread access.5202(android.media.AudioService,android.media.AudioService.SoundPoolListenerThread)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ListPopupWindow.PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>:<public>:<android.widget.ListPopupWindow.PopupScrollListener:android.widget.AbsListView.OnScrollListener>
<android.media.session.MediaController.TransportControls: void rewind()>:<public>:<android.media.session.MediaController.TransportControls>
<android.service.fingerprint.IFingerprintServiceReceiver: void onProcessed(int)>:<public abstract>:<android.service.fingerprint.IFingerprintServiceReceiver:android.os.IInterface>
<android.media.MediaFocusControl: void <clinit>()>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.database.sqlite.SQLiteConnection: void nativeFinalizeStatement(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.security.KeyPairGeneratorSpec: void <init>(android.content.Context,java.lang.String,java.lang.String,int,java.security.spec.AlgorithmParameterSpec,javax.security.auth.x500.X500Principal,java.math.BigInteger,java.util.Date,java.util.Date,int)>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.filterpacks.imageproc.FisheyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.media.AudioService: void <init>(android.content.Context)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrinterCapabilitiesInfo: void copyFrom(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.session.MediaController.TransportControls: void seekTo(long)>:<public>:<android.media.session.MediaController.TransportControls>
<android.media.session.MediaSession: void access.800(android.media.session.MediaSession,long)>:<static>:<android.media.session.MediaSession>
<android.widget.SearchView: void updateSearchAutoComplete()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.DatePicker: void updateDate(int,int,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer.SlidingHandler: void <init>(android.widget.SlidingDrawer,android.widget.SlidingDrawer.1)>:<>:<android.widget.SlidingDrawer.SlidingHandler:android.os.Handler>
<android.view.WindowInfo: void recycle()>:<public>:<android.view.WindowInfo:android.os.Parcelable>
<android.media.AudioTrack: void finalize()>:<protected>:<android.media.AudioTrack>
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.database.CursorWrapper: android.os.Bundle getExtras()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper: boolean isActive()>:<public>:<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper:com.android.internal.view.IInputConnectionWrapper>
<android.print.pdf.PrintedPdfDocument: void <init>(android.content.Context,android.print.PrintAttributes)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.3300(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.print.PrintJobInfo: int getState()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.GLES20Canvas: boolean clipRect(float,float,float,float)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.dreams.DreamService: boolean isFullscreen()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean parseDate(java.lang.String,java.util.Calendar)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>:<public>:<android.view.WindowManagerGlobal>
<android.widget.CalendarView.LegacyCalendarViewDelegate: java.util.Calendar access.1700(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.ViewGroupOverlay: void <init>(android.content.Context,android.view.View)>:<>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.media.effect.Effect: void apply(int,int,int,int)>:<public abstract>:<android.media.effect.Effect>
<android.opengl.GLSurfaceView.GLThreadManager: void <clinit>()>:<static>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.media.MediaPlayer: int native_setMetadataFilter(android.os.Parcel)>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.TextView: boolean isPaddingOffsetRequired()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.LoudnessEnhancer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.LoudnessEnhancer.Settings>
<android.media.MediaRouter.UserRouteInfo: void setVolumeCallback(android.media.MediaRouter.VolumeCallback)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.media.AudioService: android.bluetooth.BluetoothDevice access.2802(android.media.AudioService,android.bluetooth.BluetoothDevice)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.LayoutTransition.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.2:android.animation.AnimatorListenerAdapter>
<android.view.animation.Transformation: void setClipRect(int,int,int,int)>:<public>:<android.view.animation.Transformation>
<android.animation.ValueAnimator: void resume()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.AudioManager: void handleKeyDown(android.view.KeyEvent,int)>:<public>:<android.media.AudioManager>
<android.widget.GridLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaDrm: void native_init()>:<private static final native>:<android.media.MediaDrm>
<android.media.MediaPlayer.TrackInfo.1: android.media.MediaPlayer.TrackInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.MediaPlayer.TrackInfo.1:android.os.Parcelable.Creator>
<android.animation.PropertyValuesHolder: void nCallTwoFloatMethod(java.lang.Object,long,float,float)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View: boolean awakenScrollBars(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.ScrollabilityCache: void <clinit>()>:<static>:<android.view.View.ScrollabilityCache:java.lang.Runnable>
<android.media.tv.TvInputInfo: java.lang.String getParentId()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(android.media.RemoteDisplayState.RemoteDisplayInfo)>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForLastInsertedRowId(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewDebug.6: void run()>:<public>:<android.view.ViewDebug.6:java.lang.Runnable>
<android.media.tv.TvInputService.Session: void onSurfaceChanged(int,int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.accessibility.AccessibilityWindowInfo: void setBooleanProperty(int,boolean)>:<private>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.TimePicker.TimePickerDelegate: void setIs24HourView(java.lang.Boolean)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.media.SoundPool.SoundPoolImpl: int load(android.content.res.AssetFileDescriptor,int)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.projection.IMediaProjection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.widget.ActivityChooserModel.ActivityChooserModelClient: void setActivityChooserModel(android.widget.ActivityChooserModel)>:<public abstract>:<android.widget.ActivityChooserModel.ActivityChooserModelClient>
<android.widget.TabHost: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: void taskFinished(android.content.Intent,int)>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.ListPreference.SavedState.1: android.preference.ListPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.ListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.GridLayout.Spec: void <init>(boolean,int,int,android.widget.GridLayout.Alignment,float,android.widget.GridLayout.1)>:<>:<android.widget.GridLayout.Spec>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.KeyEvent: java.lang.String keyCodeToString(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate.SavedState.1: android.widget.DatePickerCalendarDelegate.SavedState[] newArray(int)>:<public>:<android.widget.DatePickerCalendarDelegate.SavedState.1:android.os.Parcelable.Creator>
<android.media.tv.TvInputService.Session: void onOverlayViewSizeChanged(int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.widget.ListView: boolean commonKey(int,int,android.view.KeyEvent)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GLES20Canvas: void insertReorderBarrier()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>:<public>:<android.view.ViewConfiguration>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo.CodecCapabilities getCapabilitiesForType(java.lang.String)>:<public final>:<android.media.MediaCodecInfo>
<android.filterpacks.videosrc.SurfaceTextureSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationEnd(android.animation.Animator)>:<public>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean getCalendarViewShown()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.MenuInflater: android.content.Context access.100(android.view.MenuInflater)>:<static>:<android.view.MenuInflater>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void access.600(android.widget.DatePicker.DatePickerSpinnerDelegate,int,int,int)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.hsm.HwSystemManager: android.location.Location getFakeLocation(java.lang.String)>:<public static>:<android.hsm.HwSystemManager>
<android.filterpacks.imageproc.CropRectFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.preference.SwitchPreference: void onBindView(android.view.View)>:<protected>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.filterpacks.base.OutputStreamTarget: void setupPorts()>:<public>:<android.filterpacks.base.OutputStreamTarget:android.filterfw.core.Filter>
<android.media.MediaPlayer.TimeProvider: long getCurrentTimeUs(boolean,boolean)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioManager: int getLastAudibleMasterVolume()>:<public>:<android.media.AudioManager>
<android.media.IAudioService: boolean registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.test.RepetitiveTest: int numIterations()>:<public abstract>:<android.test.RepetitiveTest:java.lang.annotation.Annotation>
<android.animation.PathKeyframes: android.graphics.PointF pointForIndex(int)>:<private>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.animation.StateListAnimator.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.StateListAnimator.1:android.animation.AnimatorListenerAdapter>
<android.media.IRemoteVolumeController.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteVolumeController.Stub.Proxy:android.media.IRemoteVolumeController>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.accounts.AccountManager.AmsTask: android.os.Bundle internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>:<private>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.media.IMediaRouterService.Stub.Proxy: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.Map)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.RatingBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.ImageReader.SurfaceImage: void clearSurfacePlanes()>:<private>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.database.CursorWindow.1: android.database.CursorWindow createFromParcel(android.os.Parcel)>:<public>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.service.notification.ZenModeConfig.DowntimeInfo: boolean equals(java.lang.Object)>:<public>:<android.service.notification.ZenModeConfig.DowntimeInfo>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>:<public final>:<android.database.ContentObserver>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)>:<public>:<android.media.session.MediaSessionManager>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter.Builder setEncryptionRequired(boolean)>:<public>:<android.security.KeyStoreParameter.Builder>
<android.view.ViewRootImpl.SyntheticJoystickHandler: int joystickAxisValueToDirection(float)>:<private>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy:android.service.notification.IStatusBarNotificationHolder>
<android.print.IPrintSpooler.Stub.Proxy: void removeObsoletePrintJobs()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.widget.ActivityChooserModel.DataModelPackageMonitor: void onSomePackagesChanged()>:<public>:<android.widget.ActivityChooserModel.DataModelPackageMonitor:com.android.internal.content.PackageMonitor>
<android.media.Tokenizer.OnTokenListener: void onTimeStamp(long)>:<public abstract>:<android.media.Tokenizer.OnTokenListener>
<android.view.View: void computeScroll()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void selectTrack(int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.Editor.ActionPopupWindow: android.widget.TextView getReplaceTextView()>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.ViewPropertyAnimator: void <init>(android.view.View)>:<>:<android.view.ViewPropertyAnimator>
<android.widget.VideoView: android.widget.MediaController access.800(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.ActionMenuPresenter: void setMenuView(android.widget.ActionMenuView)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.security.KeyChain.KeyChainConnection: void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService,android.security.KeyChain.1)>:<>:<android.security.KeyChain.KeyChainConnection:java.io.Closeable>
<android.preference.MultiCheckPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewDebug.3: void post(java.lang.Object[])>:<public volatile>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.media.tv.TvInputManager.SessionCallbackRecord.6: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.6:java.lang.Runnable>
<android.opengl.GLES10: void glClientActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.view.ViewStub:android.view.View>
<android.media.audiopolicy.AudioMix: void <init>(android.media.audiopolicy.AudioMixingRule,android.media.AudioFormat,int)>:<private>:<android.media.audiopolicy.AudioMix>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>:<public static>:<android.opengl.ETC1Util>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.preference.MultiSelectListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.persistentdata.PersistentDataBlockManager: byte[] read()>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.media.MediaFocusControl: void access.900(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.SurfaceView.4: void setType(int)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputManager.TvInputCallbackRecord: android.media.tv.TvInputManager.TvInputCallback access.800(android.media.tv.TvInputManager.TvInputCallbackRecord)>:<static>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.media.WebVttParser.2: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.2:android.media.WebVttParser.Phase>
<android.service.notification.INotificationListener.Stub.Proxy: void onInterruptionFilterChanged(int)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.media.MediaActionSound: int access.000(android.media.MediaActionSound)>:<static>:<android.media.MediaActionSound>
<android.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.service.wallpaper.WallpaperService.Engine: void setFixedSizeAllowed(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.ToGrayFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.projection.IMediaProjectionCallback.Stub: android.media.projection.IMediaProjectionCallback asInterface(android.os.IBinder)>:<public static>:<android.media.projection.IMediaProjectionCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionCallback>
<android.media.tv.TvInputManager.Session: void access.2000(android.media.tv.TvInputManager.Session,android.media.tv.TvInputManager.Session.PendingEvent)>:<static>:<android.media.tv.TvInputManager.Session>
<android.widget.TabHost: void onDetachedFromWindow()>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setSelectionRange(int,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.Display: long getAppVsyncOffsetNanos()>:<public>:<android.view.Display>
<android.view.MotionEvent: float getX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.gesture.GestureOverlayView: long getFadeOffset()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.ExifInterface: java.lang.String getAttributesNative(java.lang.String)>:<private native>:<android.media.ExifInterface>
<android.widget.AdapterView: void setFocusable(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.AbsSpinner.SavedState.1: void <init>()>:<>:<android.widget.AbsSpinner.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaRecorder: void setOutputFormat(int)>:<public native>:<android.media.MediaRecorder>
<android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup)>:<public static>:<android.view.GhostView:android.view.View>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onInvalidated()>:<public>:<android.widget.ListPopupWindow.PopupDataSetObserver:android.database.DataSetObserver>
<android.media.MediaDescription.1: android.media.MediaDescription createFromParcel(android.os.Parcel)>:<public>:<android.media.MediaDescription.1:android.os.Parcelable.Creator>
<android.widget.TextView: boolean textCanBeSelected()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AdapterView: void setNextSelectedPositionInt(int)>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.media.MediaRouterClientState.RouteInfo: void <init>(java.lang.String)>:<public>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.widget.TabHost: android.view.View getCurrentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.print.ILayoutResultCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.media.IVolumeController.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.media.SoundPool.SoundPoolDelegate: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.preference.PreferenceActivity: void postBindPreferences()>:<private>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.GraphicBuffer: android.graphics.Canvas lockCanvas()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1200(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.MediaCodec.CodecException: boolean isTransient()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.animation.PathKeyframes: java.util.ArrayList access.200()>:<static>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.media.WebVttRenderingWidget.RegionLayout: void measureForParent(int,int)>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glGenBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void access.1300(android.widget.TextView,java.lang.CharSequence,int,int,int)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.ImageCombineFilter: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.widget.DatePickerCalendarDelegate: void updatePickers()>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.gesture.GestureUtils: float[][] computeCoVariance(float[])>:<private static>:<android.gesture.GestureUtils>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2400(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.ddm.DdmHandleThread: void <init>()>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.security.KeyStore: boolean isHardwareBacked(java.lang.String)>:<public>:<android.security.KeyStore>
<android.view.KeyCharacterMap: void finalize()>:<protected>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.Editor: android.widget.Editor.InsertionHandleView getInsertionHandleView(android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor>
<android.view.GLES20Canvas: void nDrawOval(long,float,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.animation.Keyframe: java.lang.Object getValue()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.media.RemoteDisplay: void nativeResume(long)>:<private native>:<android.media.RemoteDisplay>
<android.opengl.GLLogWrapper: java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>:<public abstract>:<android.media.SoundPool.OnLoadCompleteListener>
<android.view.InputDevice.MotionRange: int access.200(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.widget.RemoteViews.ReflectionAction: java.lang.Class getParameterType()>:<private>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.print.PrinterId: java.lang.String getLocalId()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.media.audiofx.Equalizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int)>:<public abstract>:<android.media.audiofx.Equalizer.OnParameterChangeListener>
<android.print.PrintFileDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.view.WindowManagerInternal: void getWindowFrame(android.os.IBinder,android.graphics.Rect)>:<public abstract>:<android.view.WindowManagerInternal>
<android.view.View: void cancelLongPress()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IWindowManager.Stub.Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.AudioService.AudioServiceBroadcastReceiver: void <init>(android.media.AudioService)>:<private>:<android.media.AudioService.AudioServiceBroadcastReceiver:android.content.BroadcastReceiver>
<android.test.PerformanceTestCase.Intermediates: void startTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.view.RenderNode: boolean nSetRight(long,int)>:<private static native>:<android.view.RenderNode>
<android.widget.TimePickerSpinnerDelegate: boolean access.800(android.widget.TimePickerSpinnerDelegate)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.GridLayout.Axis: java.lang.String arcsToString(java.util.List)>:<private>:<android.widget.GridLayout.Axis>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)>:<public>:<android.media.MediaMetadataEditor>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.KeyCharacterMap: void addCombining(int,int)>:<private static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.opengl.GLSurfaceView.GLThread: void onResume()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.media.MediaFile: boolean isDrmFileType(int)>:<public static>:<android.media.MediaFile>
<android.view.MenuInflater: android.content.Context getContext()>:<>:<android.view.MenuInflater>
<android.widget.VideoView.7: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.widget.VideoView.7:android.view.SurfaceHolder.Callback>
<android.widget.ZoomButtonsController: void access.200(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.ViewRootImpl: boolean isTextDirectionResolved()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.animation.LayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.LayoutAnimationController.AnimationParameters>
<android.animation.PropertyValuesHolder: void nCallFourFloatMethod(java.lang.Object,long,float,float,float,float)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.RenderNode: android.view.HardwareCanvas start(int,int)>:<public>:<android.view.RenderNode>
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.GLES20Canvas: int nGetSaveCount(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.service.textservice.SpellCheckerService: android.service.textservice.SpellCheckerService.Session createSession()>:<public abstract>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureUtils: float[] computeOrientation(float[][])>:<private static>:<android.gesture.GestureUtils>
<android.security.IKeystoreService: int test()>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.dreams.DreamService: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewPropertyAnimator: java.util.HashMap access.300(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.view.WindowId.1: android.view.WindowId[] newArray(int)>:<public>:<android.view.WindowId.1:android.os.Parcelable.Creator>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.Gallery: void updateSelectedItemMetadata()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.View.ListenerInfo: java.util.ArrayList access.102(android.view.View.ListenerInfo,java.util.ArrayList)>:<static>:<android.view.View.ListenerInfo>
<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>:<public native>:<android.media.MediaDrm>
<android.widget.MediaController: android.os.Handler access.900(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IRotationWatcher.Stub: void <init>()>:<public>:<android.view.IRotationWatcher.Stub:android.os.Binder,android.view.IRotationWatcher>
<android.media.ImageReader.OnImageAvailableListener: void onImageAvailable(android.media.ImageReader)>:<public abstract>:<android.media.ImageReader.OnImageAvailableListener>
<android.view.ViewConfiguration: void <clinit>()>:<static>:<android.view.ViewConfiguration>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public abstract>:<android.view.Window.Callback>
<android.media.HwCustAudioServiceImpl: void getDtsstatus(android.content.ContentResolver)>:<protected>:<android.media.HwCustAudioServiceImpl:android.media.HwCustAudioService>
<android.filterpacks.videosrc.CameraSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.filterpacks.videoproc.BackDropperFilter: boolean createMemoryFormat(android.filterfw.core.FrameFormat)>:<private>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.database.Cursor: int getType(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: int access.1600(android.view.ViewRootImpl.SyntheticTouchNavigationHandler)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.effect.FilterEffect: void endGLEffect()>:<protected>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.widget.GridLayout.Axis: void <init>(android.widget.GridLayout,boolean,android.widget.GridLayout.1)>:<>:<android.widget.GridLayout.Axis>
<android.view.GLES20Canvas: float[] getLineStorage()>:<private>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.SoundPool.SoundPoolDelegate: int load(java.lang.String,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TimePickerSpinnerDelegate: int lastIndexOfAny(java.lang.String,char[])>:<private static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.EGLConfig: void <init>(long)>:<private>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.media.effect.effects.CropEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.CropEffect:android.media.effect.SizeChangeEffect,android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.VideoCapabilities getVideoCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.browse.MediaBrowser.MediaServiceConnection: boolean isCurrent(java.lang.String)>:<private>:<android.media.browse.MediaBrowser.MediaServiceConnection:android.content.ServiceConnection>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void destroy()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.widget.Editor: void ensureEndedBatchEdit()>:<>:<android.widget.Editor>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.animation.Keyframe: java.lang.Class getType()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.preference.PreferenceGroupAdapter: void syncMyPreferences()>:<private>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.Switch: void drawableStateChanged()>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ViewGroup: void cancelHoverTarget(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaScanner: boolean inScanDirectory(java.lang.String,java.lang.String[])>:<private>:<android.media.MediaScanner>
<android.widget.ListPopupWindow.DropDownListView.1: void setValue(java.lang.Object,int)>:<public volatile>:<android.widget.ListPopupWindow.DropDownListView.1:android.util.IntProperty>
<android.print.PrintDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.media.MediaMetadata: long getLong(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String)>:<private>:<android.media.WebVttParser>
<android.security.KeyStore: boolean resetUid(int)>:<public>:<android.security.KeyStore>
<android.opengl.GLSurfaceView.GLThread: void stopEglContextLocked()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.view.ViewRootImpl: void handleGetNewSurface()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.ITvInputManager: void createSession(android.media.tv.ITvInputClient,java.lang.String,int,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.security.AndroidKeyStore: void setPrivateKeyEntry(java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],android.security.KeyStoreParameter)>:<private>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.widget.ActionMenuPresenter: void updateMenuView(boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.FocusRequester: void finalize()>:<protected>:<android.media.FocusRequester>
<android.widget.TextView: void setMaxWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioFormat.Builder: void <init>()>:<public>:<android.media.AudioFormat.Builder>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.widget.RemoteViews.MutablePair: boolean equals(java.lang.Object)>:<public>:<android.widget.RemoteViews.MutablePair>
<android.widget.Toolbar.1: void <init>(android.widget.Toolbar)>:<>:<android.widget.Toolbar.1:android.widget.ActionMenuView.OnMenuItemClickListener>
<android.service.dreams.DreamService: android.view.View findViewById(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.KeyEvent: long getDownTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.IMediaScannerService.Stub: void <init>()>:<public>:<android.media.IMediaScannerService.Stub:android.os.Binder,android.media.IMediaScannerService>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenContentInsetsLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.media.tv.ITvInputManager.Stub.Proxy: void relayoutOverlayView(android.os.IBinder,android.graphics.Rect,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.service.textservice.SpellCheckerService: void <init>()>:<public>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ActivityChooserView.Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.ISessionController: void registerCallbackListener(android.media.session.ISessionControllerCallback)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.IApplicationToken.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.widget.ActionMenuView: boolean isOverflowReserved()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.GridLayout.Axis: void solve(int[])>:<private>:<android.widget.GridLayout.Axis>
<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.widget.TimePickerSpinnerDelegate: boolean addKeyIfLegal(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.Window: void setSharedElementExitTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.MediaFocusControl.MediaEventHandler: void <init>(android.media.MediaFocusControl,android.os.Looper)>:<>:<android.media.MediaFocusControl.MediaEventHandler:android.os.Handler>
<android.accounts.AccountManagerResponse.1: void <init>()>:<>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.widget.AdapterViewAnimator: int access.000(android.widget.AdapterViewAnimator)>:<static>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.GridView: int getGravity()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: void <init>()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.KeyEvent: boolean isCanceled()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvTrackInfo: int getAudioChannelCount()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.View.CheckForLongPress: void run()>:<public>:<android.view.View.CheckForLongPress:java.lang.Runnable>
<android.view.View: void access.2200(android.view.View,boolean,float,float)>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteController.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.RemoteController.EventHandler:android.os.Handler>
<android.filterpacks.videosrc.MediaSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.View.CheckForTap: void run()>:<public>:<android.view.View.CheckForTap:java.lang.Runnable>
<android.view.SurfaceView: void onDetachedFromWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.RenderNodeAnimator: void start()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.print.PrintManager.1: void handleMessage(android.os.Message)>:<public>:<android.print.PrintManager.1:android.os.Handler>
<android.media.ExifInterface: long getDateTime()>:<public>:<android.media.ExifInterface>
<android.view.SurfaceControl: void setDisplayLayerStack(android.os.IBinder,int)>:<public static>:<android.view.SurfaceControl>
<android.filterpacks.imageproc.FillLightFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.media.FocusRequester: void <init>(int,int,android.media.IAudioFocusDispatcher,android.os.IBinder,java.lang.String,android.media.MediaFocusControl.AudioFocusDeathHandler,java.lang.String,int)>:<>:<android.media.FocusRequester>
<android.widget.CalendarView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void goTo(java.util.Calendar,boolean,boolean,boolean)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.MatrixCursor: java.lang.String getString(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.View: int getBottom()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.projection.IMediaProjectionCallback.Stub: void <init>()>:<public>:<android.media.projection.IMediaProjectionCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionCallback>
<android.filterpacks.imageproc.LomoishFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.media.tv.TvInputService: void <init>()>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Scroller: int getCurrY()>:<public final>:<android.widget.Scroller>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.MediaPlayer.3: android.os.Looper getSubtitleLooper()>:<public>:<android.media.MediaPlayer.3:android.media.SubtitleController.Anchor>
<android.database.sqlite.SQLiteConnection: java.lang.String canonicalizeSyncMode(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.AutoCompleteTextView.DropDownItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.AutoCompleteTextView.DropDownItemClickListener:android.widget.AdapterView.OnItemClickListener>
<android.view.AccessibilityIterators.AbstractTextSegmentIterator: void <init>()>:<public>:<android.view.AccessibilityIterators.AbstractTextSegmentIterator:android.view.AccessibilityIterators.TextSegmentIterator>
<android.view.View: android.view.ViewPropertyAnimator animate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDebug.PagerStats: void <init>()>:<public>:<android.database.sqlite.SQLiteDebug.PagerStats>
<android.view.SurfaceView.4: android.graphics.Canvas lockCanvas()>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.animation.KeyframeSet: android.animation.Keyframes clone()>:<public volatile>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.view.View: void setNextFocusUpId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupWindow.PopupViewContainer: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.DatePickerCalendarDelegate: int getMaxDay()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.AudioRoutesInfo: int describeContents()>:<public>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.animation.AnimatorInflater: android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<private static>:<android.animation.AnimatorInflater>
<android.media.session.ISessionController: android.media.MediaMetadata getMetadata()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.StackView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void access.000(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.browse.MediaBrowser.ServiceCallbacks: void onConnect(java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<public>:<android.media.browse.MediaBrowser.ServiceCallbacks:android.service.media.IMediaBrowserServiceCallbacks.Stub,android.os.Binder>
<android.security.KeyStore: boolean generate(java.lang.String,int,int,int,int,byte[][])>:<public>:<android.security.KeyStore>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.opengl.EGLLogWrapper: void logLine(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.widget.TextClock: java.lang.CharSequence getFormat()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.View: int getNextFocusDownId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.ContrastFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.GLES20Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.GhostView: void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>:<public static>:<android.view.GhostView:android.view.View>
<android.opengl.GLErrorWrapper: void glLightx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.effect.EffectFactory: void <clinit>()>:<static>:<android.media.effect.EffectFactory>
<android.view.animation.LayoutAnimationController: int getOrder()>:<public>:<android.view.animation.LayoutAnimationController>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.print.IPrintManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.filterpacks.imageproc.ToPackedGrayFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.view.MagnificationSpec: boolean isNop()>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.widget.AdapterViewAnimator: int getNumActiveViews()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.AudioService.VolumeStreamState: int getMaxIndex()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.view.ViewRootImpl: void scheduleConsumeBatchedInput()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.Session: void finishedInputEvent(int,boolean,boolean)>:<>:<android.media.tv.TvInputManager.Session>
<android.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.IRemoteControlClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void reset()>:<public>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.media.MediaFocusControl: void onRegisterVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.SeekBarPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: void <init>(android.content.Intent.FilterComparison,int)>:<>:<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey>
<android.widget.Editor.1: void run()>:<public>:<android.widget.Editor.1:java.lang.Runnable>
<android.widget.RemoteViews.SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.SetOnClickPendingIntent:android.widget.RemoteViews.Action>
<android.widget.VideoView: int getVideoHeight()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.Editor: boolean startSelectionActionModeOuter()>:<protected>:<android.widget.Editor>
<android.view.GLES20Canvas: void nResetDisplayListRenderer(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.GLES20Canvas: int callDrawGLFunction(long)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.notification.NotificationListenerService: void cancelAllNotifications()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioService: int setHdmiSystemAudioSupported(boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.RemoteController: void access.1000(android.media.RemoteController,android.media.session.MediaController)>:<static>:<android.media.RemoteController>
<android.media.TextTrackCueSpan: void <init>(java.lang.String,long)>:<>:<android.media.TextTrackCueSpan>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAuxiliary(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.filterpacks.imageproc.RotateFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<huawei.cust.HwCustUtils: void log_info(java.lang.String)>:<static>:<huawei.cust.HwCustUtils>
<android.media.MediaRouter.VolumeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.media.MediaRouter.VolumeChangeReceiver:android.content.BroadcastReceiver>
<android.preference.SeekBarVolumizer.Receiver: void setListening(boolean)>:<public>:<android.preference.SeekBarVolumizer.Receiver:android.content.BroadcastReceiver>
<android.widget.StackView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.IWindowId.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>:<private>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.audiofx.AudioEffect.Descriptor: void <init>()>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>:<public>:<android.animation.LayoutTransition>
<android.media.tv.ITvInputSession.Stub: void <init>()>:<public>:<android.media.tv.ITvInputSession.Stub:android.os.Binder,android.media.tv.ITvInputSession>
<android.view.ViewRootImpl: boolean checkForLeavingTouchModeAndConsume(android.view.KeyEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.Image: int getWidth()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>:<public final>:<android.media.MediaCodec>
<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObserver>
<android.view.ViewRootImpl: void dispatchApplyInsets(android.view.View)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.IWindowManager.Stub.Proxy: void setInTouchMode(boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLErrorWrapper: void glGenerateMipmapOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.filterpacks.imageproc.SharpenFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.media.tv.TvInputService.Session: android.media.tv.ITvInputSessionCallback access.600(android.media.tv.TvInputService.Session)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.TextView: boolean isSingleLine()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GesturePoint: java.lang.Object clone()>:<public>:<android.gesture.GesturePoint>
<android.view.GLES20Canvas: int getSaveCount()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.CCParser.CCData: void <init>(byte,byte,byte)>:<>:<android.media.CCParser.CCData>
<android.filterpacks.performance.Throughput: int getTotalFrameCount()>:<public>:<android.filterpacks.performance.Throughput>
<android.widget.CalendarView.LegacyCalendarViewDelegate: android.graphics.drawable.Drawable access.3200(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.tv.ITvInputService.Stub.Proxy: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.ddm.DdmHandleViewDebug: void disconnected()>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.audiofx.NoiseSuppressor: boolean isAvailable()>:<public static>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.widget.SearchView: android.widget.ImageView getSubmitButton()>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLLogWrapper: void glLoadMatrixx(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.Hardware: void overrideAudioSink(int,java.lang.String,int,int,int)>:<public>:<android.media.tv.TvInputManager.Hardware>
<android.media.tv.TvInputService.Session: boolean access.300(android.media.tv.TvInputService.Session)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.session.ISession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.ISession.Stub:android.os.Binder,android.media.session.ISession>
<android.widget.MediaController: void access.000(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.PointerIcon.1: android.view.PointerIcon[] newArray(int)>:<public>:<android.view.PointerIcon.1:android.os.Parcelable.Creator>
<android.widget.ListView: void setDividerHeight(int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: boolean isParentalControlsEnabled(int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.AutoCompleteTextView.MyWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AutoCompleteTextView.MyWatcher:android.text.TextWatcher>
<android.widget.Editor.CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.Editor.CorrectionHighlighter>
<android.service.fingerprint.FingerprintManagerReceiver: void onAcquired(int)>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.widget.AbsListView.RecycleBin: void pruneScrapViews()>:<private>:<android.widget.AbsListView.RecycleBin>
<android.widget.Editor: android.widget.Editor.SelectionEndHandleView getSelectionEndHandleView(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor>
<android.media.SubtitleTrack.RenderingWidget: void setVisible(boolean)>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.widget.Spinner.DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.preference.SeekBarPreference: java.lang.CharSequence getSummary()>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.GridView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AuthenticatorDescription: void <clinit>()>:<static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.Editor: float getPrimaryHorizontalOuter(android.text.Layout,android.text.Layout,int,boolean)>:<protected>:<android.widget.Editor>
<android.animation.AnimatorSet: void sortNodes()>:<private>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLES11: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.printservice.PrintServiceInfo.1: android.printservice.PrintServiceInfo createFromParcel(android.os.Parcel)>:<public>:<android.printservice.PrintServiceInfo.1:android.os.Parcelable.Creator>
<android.animation.PropertyValuesHolder: void <init>(android.util.Property,android.animation.PropertyValuesHolder.1)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,short[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.InputChannel: void nativeWriteToParcel(android.os.Parcel)>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.preference.SeekBarPreference: void onStartTrackingTouch(android.widget.SeekBar)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.media.tv.TvInputService.Session: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.database.CursorWindow: boolean putDouble(double,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.HardwareRenderer: void notifyFramePending()>:<abstract>:<android.view.HardwareRenderer>
<android.view.FocusFinder.1: java.lang.Object initialValue()>:<protected volatile>:<android.view.FocusFinder.1:java.lang.ThreadLocal>
<android.media.Image: void setCropRect(android.graphics.Rect)>:<public>:<android.media.Image:java.lang.AutoCloseable>
<android.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected abstract>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ThreadedRenderer: void nSetAtlas(long,android.view.GraphicBuffer,long[])>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.session.MediaSession.CallbackStub: void <init>(android.media.session.MediaSession)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.view.ViewGroup: void dispatchStartTemporaryDetach()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Editor.SuggestionsPopupWindow: int getTextOffset()>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.media.SoundPool.SoundPoolImpl: int load(java.io.FileDescriptor,long,long,int)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.accounts.AccountManager.Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.media.session.PlaybackState: long getBufferedPosition()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.ViewOutlineProvider: void <init>()>:<public>:<android.view.ViewOutlineProvider>
<android.media.tv.TvView: boolean access.2302(android.media.tv.TvView,boolean)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.GridView: void pinToTop(int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TimePickerClockDelegate.2: void <init>(android.widget.TimePickerClockDelegate)>:<>:<android.widget.TimePickerClockDelegate.2:android.widget.NumberPicker.OnValueChangeListener>
<android.view.KeyEvent: void recycle()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.AbsSavedState.2: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.AbsSavedState.2:android.os.Parcelable.Creator>
<android.widget.ActionMenuPresenter.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.ActionMenuPresenter.SavedState:android.os.Parcelable>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>:<>:<android.view.FocusFinder>
<android.media.audiofx.AudioEffect: void release()>:<public>:<android.media.audiofx.AudioEffect>
<android.security.AndroidKeyStore: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.database.CursorWindow: short getShort(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.accounts.AccountManager.4: void doWork()>:<public>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.widget.RadialTimePickerView: void drawDebug(android.graphics.Canvas)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.MediaScanner: byte[] extractAlbumArt(java.io.FileDescriptor)>:<public native>:<android.media.MediaScanner>
<android.media.MediaFocusControl.DisplayInfoForServer: boolean access.2002(android.media.MediaFocusControl.DisplayInfoForServer,boolean)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.filterpacks.ui.SurfaceTargetFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnectionPool: void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.preference.TwoStatePreference: void syncSummaryView(android.view.View)>:<>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.browse.MediaBrowser.MediaServiceConnection: void onServiceDisconnected(android.content.ComponentName)>:<public>:<android.media.browse.MediaBrowser.MediaServiceConnection:android.content.ServiceConnection>
<android.media.MediaScannerConnection: boolean isConnected()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.opengl.GLLogWrapper: void glPushMatrix()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: android.graphics.Rect getClipBounds()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <clinit>()>:<static>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.service.voice.VoiceInteractionSession.Request: void finishRequest()>:<>:<android.service.voice.VoiceInteractionSession.Request>
<android.filterpacks.performance.Throughput: float getFramesPerSecond()>:<public>:<android.filterpacks.performance.Throughput>
<android.media.MediaCodecInfo.VideoCapabilities: void parseFromInfo(android.media.MediaFormat)>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.service.notification.Condition: java.lang.String stateToString(int)>:<public static>:<android.service.notification.Condition:android.os.Parcelable>
<android.media.audiofx.Visualizer: int getSamplingRate()>:<public>:<android.media.audiofx.Visualizer>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>:<public>:<android.widget.FastScroller>
<android.media.tv.TvInputService.Session.2: void <init>(android.media.tv.TvInputService.Session,java.lang.String,android.os.Bundle)>:<>:<android.media.tv.TvInputService.Session.2:java.lang.Runnable>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.View: boolean isHovered()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.TextureView: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.TextureView:android.view.View>
<android.media.MediaScanner: void processPlayLists()>:<private>:<android.media.MediaScanner>
<android.widget.DatePickerCalendarDelegate: void onYearSelected(int)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.EditText: void setSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.database.sqlite.JankSqlite: boolean addDelete(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.widget.ActionMenuPresenter: void setItemLimit(int)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.animation.AnimatorSet.Node: void addDependency(android.animation.AnimatorSet.Dependency)>:<public>:<android.animation.AnimatorSet.Node:java.lang.Cloneable>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void checkIndex(int)>:<private>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.preference.PreferenceActivity: boolean isMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()>:<>:<android.media.audiopolicy.AudioMixingRule>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>:<public abstract>:<android.preference.Preference.OnPreferenceChangeListener>
<android.database.sqlite.SQLiteConnection: void nativeBindLong(long,long,int,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.View: boolean isTextAlignmentInherited()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Surface: java.lang.String rotationToString(int)>:<public static>:<android.view.Surface:android.os.Parcelable>
<android.view.View: void dispatchSetSelected(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.DragEvent: void <clinit>()>:<static>:<android.view.DragEvent:android.os.Parcelable>
<android.view.SurfaceView.4: boolean isCreating()>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.view.SurfaceControl: void setOpaque(boolean)>:<public>:<android.view.SurfaceControl>
<android.view.KeyEvent: int getModifiers()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>:<public abstract>:<android.view.ViewStub.OnInflateListener>
<android.service.dreams.DreamService: boolean access.502(android.service.dreams.DreamService,boolean)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.Advanceable: void advance()>:<public abstract>:<android.widget.Advanceable>
<android.view.ViewOutlineProvider: void <clinit>()>:<static>:<android.view.ViewOutlineProvider>
<android.widget.SearchView: boolean isEmuiStyle()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.service.notification.StatusBarNotification: long getPostTime()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>:<public static>:<android.opengl.ETC1Util>
<android.widget.SearchView: void onTextChanged(java.lang.CharSequence)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.animation.LayoutTransition: void cancel()>:<public>:<android.animation.LayoutTransition>
<android.media.MediaDrm: boolean isCryptoSchemeSupportedNative(byte[],java.lang.String)>:<private static final native>:<android.media.MediaDrm>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo makeWifiDisplayRoute(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)>:<static>:<android.media.MediaRouter>
<android.media.MediaDrm.CryptoSession: byte[] sign(byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.media.IAudioService.Stub.Proxy: void startBluetoothSco(android.os.IBinder,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaRouter: void rebindAsUser(int)>:<public>:<android.media.MediaRouter>
<android.view.View: boolean isHapticFeedbackEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.view.accessibility.CaptioningManager: void notifyLocaleChanged()>:<private>:<android.view.accessibility.CaptioningManager>
<android.media.IMediaScannerService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaScannerService.Stub.Proxy:android.media.IMediaScannerService>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.view.ThreadedRenderer: boolean nInitialize(long,android.view.Surface)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.SoundPool.SoundPoolDelegate: int load(android.content.Context,int,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.media.session.MediaSessionLegacyHelper: void <clinit>()>:<static>:<android.media.session.MediaSessionLegacyHelper>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.Preference.BaseSavedState.1: void <init>()>:<>:<android.preference.Preference.BaseSavedState.1:android.os.Parcelable.Creator>
<android.view.inputmethod.CursorAnchorInfo: void <clinit>()>:<static>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.Editor.HandleView: void addPositionToTouchUpFilter(int)>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.SurfaceControl: void nativeCloseTransaction()>:<private static native>:<android.view.SurfaceControl>
<android.security.KeyChainAliasCallback: void alias(java.lang.String)>:<public abstract>:<android.security.KeyChainAliasCallback>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeySize(int)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.printservice.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)>:<>:<android.printservice.PrinterDiscoverySession>
<huawei.android.app.HwCustEmergDataManagerImpl: void backupEmergencyDataFile()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl:huawei.android.app.HwCustEmergDataManager>
<android.media.effect.effects.AutoFixEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.AutoFixEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMax()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable: void run()>:<public>:<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable:java.lang.Runnable>
<android.media.MediaFocusControl: boolean isCurrentRcController(android.app.PendingIntent)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.FastScroller.6: void setValue(java.lang.Object,int)>:<public volatile>:<android.widget.FastScroller.6:android.util.IntProperty>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewDebug: java.lang.reflect.Field[] filterFieldsProperties(java.lang.reflect.Field[],java.lang.String[])>:<private static>:<android.view.ViewDebug>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.ViewDebug.5: void run()>:<public>:<android.view.ViewDebug.5:java.lang.Runnable>
<android.media.MediaRouter: void dispatchRouteChanged(android.media.MediaRouter.RouteInfo,int)>:<static>:<android.media.MediaRouter>
<android.media.tv.TvInputService.Session: void notifyContentAllowed()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.service.wallpaper.IWallpaperEngine.Stub: void <init>()>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub:android.os.Binder,android.service.wallpaper.IWallpaperEngine>
<android.view.accessibility.IAccessibilityManager: void interrupt(int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.media.tv.TvContract.Programs: void <init>()>:<private>:<android.media.tv.TvContract.Programs:android.media.tv.TvContract.BaseTvColumns>
<android.view.KeyEvent.DispatcherState: void <init>()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.view.View: java.lang.String printPrivateFlags(int)>:<private static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.AnimatorInflater.PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.AnimatorInflater.PathDataEvaluator:android.animation.TypeEvaluator>
<android.media.SubtitleTrack: boolean isTimedText()>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.filterpacks.imageproc.SharpenFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.view.ScaleGestureDetector: long getTimeDelta()>:<public>:<android.view.ScaleGestureDetector>
<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.ShortBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.Window: void setAllowExitTransitionOverlap(boolean)>:<public>:<android.view.Window>
<android.widget.ListView: android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSessionLegacyHelper getHelper(android.content.Context)>:<public static>:<android.media.session.MediaSessionLegacyHelper>
<android.gesture.Learner: void addInstance(android.gesture.Instance)>:<>:<android.gesture.Learner>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.media.RingtoneManager: boolean getSetUriStat()>:<public static>:<android.media.RingtoneManager>
<android.print.PrinterCapabilitiesInfo: int[] access.100(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.ViewRootImpl: void deliverInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLSurfaceView.GLThread: boolean ableToDraw()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.security.Credentials: boolean deleteCertificateTypesForAlias(android.security.KeyStore,java.lang.String)>:<static>:<android.security.Credentials>
<android.media.AudioPortConfig: int samplingRate()>:<public>:<android.media.AudioPortConfig>
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceManager>
<android.ddm.DdmHandleThread: void connected()>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.accounts.AccountManager.10: void doWork()>:<public>:<android.accounts.AccountManager.10:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.widget.TextView: void onBeginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureUtils: float[] scale(float[],float,float)>:<static>:<android.gesture.GestureUtils>
<android.widget.TimePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.AbsListView.AdapterDataSetObserver: void onInvalidated()>:<public>:<android.widget.AbsListView.AdapterDataSetObserver:android.widget.AdapterView.AdapterDataSetObserver>
<android.view.DisplayAdjustments: void <init>()>:<public>:<android.view.DisplayAdjustments>
<android.service.dreams.Sandman: void <init>()>:<private>:<android.service.dreams.Sandman>
<android.media.session.ISessionCallback: void onStop()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.IRotationWatcher.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IRotationWatcher.Stub:android.os.Binder,android.view.IRotationWatcher>
<android.preference.SeekBarVolumizer.Observer: void onChange(boolean)>:<public>:<android.preference.SeekBarVolumizer.Observer:android.database.ContentObserver>
<android.view.ViewRootImpl: void destroyHardwareResources()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int,boolean)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnlyLocked()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.RenderNodeAnimator: void doStart()>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.print.PrintJob: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJob>
<android.view.Display: int getHeight()>:<public>:<android.view.Display>
<android.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.opengl.GLLogWrapper: java.lang.String getClientState(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputHardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>:<public abstract>:<android.media.tv.ITvInputHardwareCallback:android.os.IInterface>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder addTag(java.lang.String)>:<public>:<android.media.AudioAttributes.Builder>
<android.view.KeyCharacterMap: char nativeGetNumber(long,int)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.View: void sendAccessibilityHoverEvent(int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>:<public static>:<android.view.accessibility.AccessibilityManager>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: boolean isHdmiSystemAudioSupported()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.WindowId: void registerFocusObserver(android.view.WindowId.FocusObserver)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.view.textservice.TextInfo: void <init>(java.lang.String)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.IRemoteVolumeController.Stub.Proxy: void updateRemoteController(android.media.session.ISessionController)>:<public>:<android.media.IRemoteVolumeController.Stub.Proxy:android.media.IRemoteVolumeController>
<android.view.IOnKeyguardExitResult.Stub.Proxy: void onKeyguardExitResult(boolean)>:<public>:<android.view.IOnKeyguardExitResult.Stub.Proxy:android.view.IOnKeyguardExitResult>
<android.widget.Toast: float getHorizontalMargin()>:<public>:<android.widget.Toast>
<android.view.RenderNode: float nGetRotation(long)>:<private static native>:<android.view.RenderNode>
<android.widget.TabHost: void <init>(android.content.Context)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AudioService: void access.9800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction getActionSingleton(int)>:<private static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.MultiCheckPreference: void setValues(boolean[])>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioManager: void <clinit>()>:<static>:<android.media.AudioManager>
<android.database.AbstractCursor: void deactivate()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.GLES20Canvas: void nFinish(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.session.ISession: void setCurrentVolume(int)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.widget.RemoteViews.ViewGroupAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.media.session.ISessionController: void setVolumeTo(int,int,java.lang.String)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.ddm.DdmHandleHello: void disconnected()>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.ViewPropertyAnimator: android.animation.ValueAnimator.AnimatorUpdateListener access.900(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.animation.ValueAnimator: boolean isRunning()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.MotionEvent: float getX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES20>
<android.media.MutableBackgroundColorSpan: void <init>(int)>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.CheckedTextView: android.graphics.PorterDuff.Mode getCheckMarkTintMode()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.MediaCodecList: int findCodecByName(java.lang.String)>:<static final native>:<android.media.MediaCodecList>
<android.view.ViewTreeObserver.CopyOnWriteArray: void addAll(android.view.ViewTreeObserver.CopyOnWriteArray)>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.view.View: boolean initialAwakenScrollBars()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadialTimePickerView.IntHolder: int getValue()>:<public>:<android.widget.RadialTimePickerView.IntHolder>
<android.media.IRingtonePlayer.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.media.RemoteController: long getEstimatedMediaPosition()>:<public>:<android.media.RemoteController>
<android.view.ViewGroup.ViewLocationHolder: void init(android.view.ViewGroup,android.view.View)>:<private>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.accounts.AccountManager.16: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.16:android.content.BroadcastReceiver>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.session.IActiveSessionsListener.Stub: void <init>()>:<public>:<android.media.session.IActiveSessionsListener.Stub:android.os.Binder,android.media.session.IActiveSessionsListener>
<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.opengl.GLLogWrapper.PointerInfo: int sizeof(int)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.widget.Editor.SelectionModifierCursorController: android.widget.Editor.SelectionStartHandleView getStartHandle()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()>:<public>:<android.print.PrintManager>
<android.media.AudioFormat: boolean isValidEncoding(int)>:<public static>:<android.media.AudioFormat>
<android.media.AudioRecord: void finalize()>:<protected>:<android.media.AudioRecord>
<android.view.View: void setAlpha(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.VolumeProvider: void setCurrentVolume(int)>:<public final>:<android.media.VolumeProvider>
<android.widget.TimePickerClockDelegate.3: void <init>(android.widget.TimePickerClockDelegate)>:<>:<android.widget.TimePickerClockDelegate.3:android.view.View.OnClickListener>
<android.view.WindowAnimationFrameStats: java.lang.String toString()>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.media.projection.IMediaProjectionWatcherCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionWatcherCallback>
<android.view.ViewRootImpl.InputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.media.Ringtone: void setTitle(java.lang.String)>:<>:<android.media.Ringtone>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.media.tv.TvInputManager.SessionCallback: void onTrackSelected(android.media.tv.TvInputManager.Session,int,java.lang.String)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.widget.CalendarView: void setDateTextAppearance(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.projection.MediaProjectionInfo: java.lang.String getPackageName()>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.view.DisplayInfo: boolean equals(java.lang.Object)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.TtmlParser: void extractAttribute(org.xmlpull.v1.XmlPullParser,int,java.lang.StringBuilder)>:<private>:<android.media.TtmlParser>
<android.widget.TextView: void setAllCaps(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureOverlayView: android.graphics.Paint getGesturePaint()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioAttributes: java.lang.String access.602(android.media.AudioAttributes,java.lang.String)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.IApplicationToken: void windowsGone()>:<public abstract>:<android.view.IApplicationToken:android.os.IInterface>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public abstract>:<android.view.View.OnKeyListener>
<android.print.PrinterId.1: void <init>()>:<>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.view.View: boolean resolveRtlPropertiesIfNeeded()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.HwAbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.service.media.MediaBrowserService.ServiceBinder: void removeSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,int)>:<private>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.GhostView: boolean isOnTop(java.util.ArrayList,java.util.ArrayList)>:<private static>:<android.view.GhostView:android.view.View>
<android.media.projection.MediaProjectionInfo.1: void <init>()>:<>:<android.media.projection.MediaProjectionInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.tv.ITvInputServiceCallback: void addHdmiTvInput(int,android.media.tv.TvInputInfo)>:<public abstract>:<android.media.tv.ITvInputServiceCallback:android.os.IInterface>
<android.media.AudioService.AudioHandler: void onUnloadSoundEffects()>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.MediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>:<public abstract>:<android.media.MediaScannerClient>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>:<public>:<android.print.PrintManager>
<android.database.Cursor: long getLong(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.security.SystemKeyStore: void <init>()>:<private>:<android.security.SystemKeyStore>
<android.view.GLES20Canvas: void nInsertReorderBarrier(long,boolean)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.tv.TvView: boolean onUnhandledInputEvent(android.view.InputEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.CaptioningManager.CaptionStyle: void <clinit>()>:<static>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.view.ViewRootImpl: void debug()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.print.PrintJobInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.widget.RadialTimePickerView: void showHours(boolean)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.EGLLogWrapper: boolean eglWaitGL()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.RenderNode: void destroyDisplayListData()>:<public>:<android.view.RenderNode>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.text.StringSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.text.StringSource:android.filterfw.core.Filter>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer.OnServerDiedListener access.200(android.media.audiofx.Visualizer)>:<static>:<android.media.audiofx.Visualizer>
<android.media.AudioService: int getRingerMode()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.IWindowManager.Stub.Proxy: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.PropertyValuesHolder: void <init>(java.lang.String,android.animation.PropertyValuesHolder.1)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.SearchView: void <init>(android.content.Context)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.KeyEvent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.KeyEvent.1:android.os.Parcelable.Creator>
<android.widget.ListView: int distanceToView(android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.WindowManagerGlobal: java.util.ArrayList access.100(android.view.WindowManagerGlobal)>:<static>:<android.view.WindowManagerGlobal>
<android.view.View: void dispatchSetActivated(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IWindow: void closeSystemDialogs(java.lang.String)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<public final>:<android.appwidget.AppWidgetHost>
<android.media.IRemoteControlDisplay.Stub: void <init>()>:<public>:<android.media.IRemoteControlDisplay.Stub:android.os.Binder,android.media.IRemoteControlDisplay>
<android.media.tv.TvInputManager.TvInputCallbackRecord.4: void run()>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord.4:java.lang.Runnable>
<android.service.media.IMediaBrowserService: void addSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public abstract>:<android.service.media.IMediaBrowserService:android.os.IInterface>
<android.opengl.GLES11Ext: void <init>()>:<public>:<android.opengl.GLES11Ext>
<android.media.MediaCodecInfo.EncoderCapabilities: void <init>()>:<private>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.IMediaHTTPConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.view.LayoutInflater.BlinkLayout: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.ImageReader.SurfaceImage: int getFormat()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.accounts.AccountManager.AmsTask: android.accounts.AccountManagerFuture start()>:<public final>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.widget.FastScroller.5: java.lang.Integer get(android.view.View)>:<public>:<android.widget.FastScroller.5:android.util.IntProperty>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ShareActionProvider: boolean hasSubMenu()>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.view.View.MatchIdPredicate: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.MatchIdPredicate:com.android.internal.util.Predicate>
<android.widget.GridLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.browse.MediaBrowser: void onConnectionFailed(android.service.media.IMediaBrowserServiceCallbacks)>:<private final>:<android.media.browse.MediaBrowser>
<android.media.session.MediaController.TransportControls: void <init>(android.media.session.MediaController,android.media.session.MediaController.1)>:<>:<android.media.session.MediaController.TransportControls>
<android.media.AudioService: void access.8200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept: void <init>(android.widget.ListPopupWindow.ForwardingListener,android.widget.ListPopupWindow.1)>:<>:<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept:java.lang.Runnable>
<android.view.IWindowManager: void setScreenCaptureDisabled(int,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.security.IKeystoreService: int duplicate(java.lang.String,int,java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<android.media.AudioService.ScoClient: int totalCount()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.view.Window: void setContentView(android.view.View)>:<public abstract>:<android.view.Window>
<android.animation.IntArrayEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)>:<private static>:<android.database.DatabaseUtils>
<android.opengl.GLErrorWrapper: void glBindTexture(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.EnvironmentalReverb: void <clinit>()>:<static>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: void <init>(android.widget.AutoCompleteTextView)>:<private>:<android.widget.AutoCompleteTextView.PopupDataSetObserver:android.database.DataSetObserver>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.media.Utils: int binarySearchDistinctRanges(android.util.Range[],java.lang.Comparable)>:<public static>:<android.media.Utils>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>:<public>:<android.media.ExifInterface>
<android.view.View: boolean canResolveTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.media.MediaBrowserService.Result: boolean isDone()>:<>:<android.service.media.MediaBrowserService.Result>
<android.media.session.MediaController: android.media.session.ISessionController access.200(android.media.session.MediaController)>:<static>:<android.media.session.MediaController>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>:<public>:<android.appwidget.AppWidgetHost>
<android.gesture.GestureOverlayView: void init()>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void clearDisappearingChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.SurfaceControl: boolean nativeClearAnimationFrameStats()>:<private static native>:<android.view.SurfaceControl>
<android.view.Window: void addPrivateFlags(int)>:<public>:<android.view.Window>
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrinterDiscoverySession: void finalize()>:<protected final>:<android.print.PrinterDiscoverySession>
<android.service.wallpaper.WallpaperService.Engine: void reportSurfaceDestroyed()>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.media.session.PlaybackState: int describeContents()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.GridLayout.Axis: void <clinit>()>:<static>:<android.widget.GridLayout.Axis>
<android.opengl.GLES20: void _nativeClassInit()>:<private static native>:<android.opengl.GLES20>
<android.view.GLES20Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec.BufferInfo,long)>:<public final>:<android.media.MediaCodec>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postSessionReleased()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.media.effect.FilterGraphEffect: void createGraph(java.lang.String)>:<private>:<android.media.effect.FilterGraphEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISessionControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.Editor: void setTempRect(android.graphics.Rect)>:<protected>:<android.widget.Editor>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setupSetter(java.lang.Class)>:<>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.Editor: void stopSelectionActionMode()>:<protected>:<android.widget.Editor>
<android.animation.AnimatorInflater: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float)>:<private static>:<android.animation.AnimatorInflater>
<android.view.IWindowSession.Stub.Proxy: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.MediaPlayer.TimeProvider: void notifyStop()>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)>:<public>:<android.widget.FastScroller>
<android.media.MediaScanner.MediaBulkDeleter: void flush()>:<public>:<android.media.MediaScanner.MediaBulkDeleter>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void switchKeyboardLayout(int,int)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.preference.TwoStatePreference: void setSummaryOff(int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.PlayerRecord.RccPlaybackState: void reset()>:<public>:<android.media.PlayerRecord.RccPlaybackState>
<android.view.Window: android.view.View findViewById(int)>:<public>:<android.view.Window>
<android.netdetect.INetDetectService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.opengl.GLErrorWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.702(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,boolean)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceActivity: void switchToHeaderInner(java.lang.String,android.os.Bundle)>:<private>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.ViewRootImpl: android.view.ViewRootImpl.QueuedInputEvent obtainQueuedInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.GridLayout.LayoutParams: void reInitSuper(android.content.Context,android.util.AttributeSet)>:<private>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View.SendViewStateChangedAccessibilityEvent: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.SendViewStateChangedAccessibilityEvent:java.lang.Runnable>
<android.widget.TabWidget: int getSelectedTabIndex()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.GestureDetector: void <clinit>()>:<static>:<android.view.GestureDetector>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewGroup: void captureTransitioningViews(java.util.List)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MediaController: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaCodec.MediaImage: void <init>(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,long,int,int,android.graphics.Rect)>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.widget.MediaController: void hide()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvContract.Channels.Logo: void <init>()>:<private>:<android.media.tv.TvContract.Channels.Logo>
<android.opengl.GLES10: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: java.lang.String colorModesToString()>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.Choreographer: void postFrameCallbackDelayed(android.view.Choreographer.FrameCallback,long)>:<public>:<android.view.Choreographer>
<android.appwidget.AppWidgetProviderInfo: void <clinit>()>:<static>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.media.UnstyledTextExtractor: void onEnd(java.lang.String)>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.media.browse.MediaBrowser.2: void <init>(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<>:<android.media.browse.MediaBrowser.2:java.lang.Runnable>
<android.database.CharArrayBuffer: void <init>(char[])>:<public>:<android.database.CharArrayBuffer>
<android.print.PrinterInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.print.PrintManager: void <init>(android.content.Context,android.print.IPrintManager,int,int)>:<public>:<android.print.PrintManager>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: void mute_syncVSS(boolean)>:<public>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<androidhwext.R.color: void <init>()>:<public>:<androidhwext.R.color>
<android.widget.RemoteViews.SetPendingIntentTemplate.1: void <init>(android.widget.RemoteViews.SetPendingIntentTemplate,android.widget.RemoteViews.OnClickHandler)>:<>:<android.widget.RemoteViews.SetPendingIntentTemplate.1:android.widget.AdapterView.OnItemClickListener>
<android.filterpacks.imageproc.FixedRotationFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.FixedRotationFilter:android.filterfw.core.Filter>
<android.view.ViewDebug.2: void forceLayout(android.view.View)>:<private>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.media.tv.TvInputHardwareInfo: java.lang.String getAudioAddress()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.database.StaleDataException: void <init>(java.lang.String)>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputHardwareInfo: void <init>(android.media.tv.TvInputHardwareInfo.1)>:<>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityManager: void interrupt()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.media.tv.TvInputManager.Session: android.os.IBinder getToken()>:<>:<android.media.tv.TvInputManager.Session>
<android.media.audiopolicy.AudioPolicyConfig.1: android.media.audiopolicy.AudioPolicyConfig createFromParcel(android.os.Parcel)>:<public>:<android.media.audiopolicy.AudioPolicyConfig.1:android.os.Parcelable.Creator>
<android.view.View: boolean canResolveLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.opengl.GLES20: int glCreateProgram()>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.AutoCompleteTextView: void access.500(android.widget.AutoCompleteTextView,android.view.View,int,long)>:<static>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.filterpacks.imageproc.BitmapSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.media.session.MediaSession: void postToCallback(int,java.lang.Object)>:<private>:<android.media.session.MediaSession>
<android.widget.TextView.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.TextView.SavedState.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputSessionWrapper: void release()>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.printservice.PrintJob: java.lang.String getAdvancedStringOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.media.IRemoteVolumeController.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteVolumeController.Stub:android.os.Binder,android.media.IRemoteVolumeController>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.1)>:<>:<android.widget.ActionMenuPresenter.PopupPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.ITvInputSession.Stub.Proxy: void removeOverlayView()>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.media.tv.TvView.TvInputCallback: void onVideoAvailable(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.view.ViewRootImpl: void invalidate()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.print.IWriteResultCallback.Stub: void <init>()>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.printservice.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)>:<>:<android.printservice.PrinterDiscoverySession>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLErrorWrapper: void glShadeModel(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IMediaScannerListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaScannerListener.Stub.Proxy:android.media.IMediaScannerListener>
<android.view.ViewDebug.3: java.lang.Object[] pre()>:<public volatile>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.SubtitleController: void setAnchor(android.media.SubtitleController.Anchor)>:<public>:<android.media.SubtitleController>
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.Editor: boolean areSuggestionsShown()>:<>:<android.widget.Editor>
<android.widget.TextClock: java.lang.String access.200(android.widget.TextClock)>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.CalendarView: int getWeekDayTextAppearance()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.opengl.EGL14: void <clinit>()>:<static>:<android.opengl.EGL14>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.Editor.PositionListener: void onScrollChanged()>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.ObjectAnimator: void <init>(java.lang.Object,android.util.Property)>:<private>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.service.dreams.IDreamService.Stub: android.service.dreams.IDreamService asInterface(android.os.IBinder)>:<public static>:<android.service.dreams.IDreamService.Stub:android.os.Binder,android.service.dreams.IDreamService>
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>:<public>:<android.view.TextureView:android.view.View>
<android.widget.RemoteViewsAdapter: java.util.HashMap access.1400()>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.Editor: void setFrame()>:<>:<android.widget.Editor>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.database.CursorWindow: long nativeCreate(java.lang.String,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.GLES20Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ListView: android.view.View findViewWithTagInHeadersOrFooters(java.util.ArrayList,java.lang.Object)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnCompletionListener>
<android.widget.AutoCompleteTextView: void performCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.HardwareRenderer.HardwareDrawCallbacks: void onHardwarePreDraw(android.view.HardwareCanvas)>:<public abstract>:<android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glMaterialf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.service.fingerprint.FingerprintManager: void remove(int)>:<public>:<android.service.fingerprint.FingerprintManager>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.PointerIcon: void <clinit>()>:<static>:<android.view.PointerIcon:android.os.Parcelable>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.database.sqlite.SQLiteConnection.OperationLog: int newOperationCookieLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.view.View: void setMinimumWidth(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: void <init>()>:<private>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.widget.Editor.SelectionModifierCursorController: void resetTouchOffsets()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.filterpacks.videosink.MediaEncoderFilter: void updateSourceRegion()>:<private>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition[])>:<public final transient>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.IPrintManager.Stub.Proxy: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.animation.PathKeyframes.SimpleKeyframes: void <init>()>:<private>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.widget.SearchView: boolean hasVoiceSearch()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()>:<public>:<android.media.tv.TvInputManager>
<android.view.MenuItem: android.view.MenuItem setActionView(android.view.View)>:<public abstract>:<android.view.MenuItem>
<android.database.CursorWindow: long getLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus[] values()>:<public static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.view.inputmethod.BaseInputConnection: boolean requestCursorUpdates(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.database.MatrixCursor: void <init>(java.lang.String[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.service.voice.VoiceInteractionService: void startSession(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLErrorWrapper: void glBlendEquationSeparate(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ActionMenuView: boolean hasDividerBeforeChildAt(int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.security.IKeyChainService.Stub: android.os.IBinder asBinder()>:<public>:<android.security.IKeyChainService.Stub:android.os.Binder,android.security.IKeyChainService>
<android.filterpacks.base.FrameFetch: void setupPorts()>:<public>:<android.filterpacks.base.FrameFetch:android.filterfw.core.Filter>
<android.view.View.11: void setValue(android.view.View,float)>:<public>:<android.view.View.11:android.util.FloatProperty>
<android.opengl.EGL14: void <init>()>:<public>:<android.opengl.EGL14>
<android.view.ViewGroup: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: android.view.View findViewByAccessibilityIdTraversal(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: void glNormal3x(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteCanceled(int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.MotionEvent: long getEventTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISession.Stub.Proxy: void setCurrentVolume(int)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.View: int getMeasuredWidthAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.DayPickerView: void postSetSelection(int)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.widget.Editor: boolean isCursorInsideSuggestionSpan()>:<private>:<android.widget.Editor>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView.GLThread: void requestExitAndWait()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.view.SurfaceView: void setSecure(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.media.MediaScanner.WplHandler: void end()>:<public>:<android.media.MediaScanner.WplHandler:android.sax.ElementListener>
<android.animation.PathKeyframes.SimpleKeyframes: java.util.ArrayList getKeyframes()>:<public>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.media.AudioPortEventHandler: void native_finalize()>:<private native>:<android.media.AudioPortEventHandler>
<android.animation.AnimatorSet: boolean access.602(android.animation.AnimatorSet,boolean)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.AudioManager: boolean isOutputDevice(int)>:<public static>:<android.media.AudioManager>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.Filter: void <init>()>:<public>:<android.widget.Filter>
<android.filterpacks.imageproc.DocumentaryFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.filterpacks.imageproc.SepiaFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.preference.SeekBarVolumizer: boolean handleMessage(android.os.Message)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.ISessionManager: void dispatchAdjustVolume(int,int,int)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.media.MediaCodec.MediaImage: void checkValid()>:<private>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.media.AudioService: boolean isBluetoothA2dpOn()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiofx.LoudnessEnhancer: void setParameterListener(android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.preference.PreferenceFragment: void onStop()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.tv.TvInputManager.TvInputCallbackRecord: void postInputStateChanged(java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaRouter.RouteGroup: android.media.MediaRouter.RouteInfo getRouteAt(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.security.KeyPairGeneratorSpec: void checkValidKeySize(int,int)>:<private static>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.TextureView: void nCreateNativeWindow(android.graphics.SurfaceTexture)>:<private native>:<android.view.TextureView:android.view.View>
<android.media.projection.IMediaProjection.Stub.Proxy: int applyVirtualDisplayFlags(int)>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.view.KeyEvent: int getFlags()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISessionController.Stub.Proxy: void sendCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>:<public abstract>:<android.view.MenuItem>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.HwCustAudioServiceImpl: void <init>(android.content.Context)>:<public>:<android.media.HwCustAudioServiceImpl:android.media.HwCustAudioService>
<android.view.MotionEvent: float getTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: boolean isScrollable()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.1: void <init>(android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl,android.os.Looper)>:<>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.1:android.os.Handler>
<android.view.ViewDebug: java.lang.Object callMethodOnAppropriateTheadBlocking(java.lang.reflect.Method,java.lang.Object)>:<private static>:<android.view.ViewDebug>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaSyncEvent: void <init>(int)>:<private>:<android.media.MediaSyncEvent>
<android.view.KeyEvent: long getEventTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.security.Credentials: android.security.Credentials getInstance()>:<public static>:<android.security.Credentials>
<android.widget.ExpandableListView: void resolveIndicator()>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.DocumentaryFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioService.VolumeStreamState: int getValidIndex(int)>:<private>:<android.media.AudioService.VolumeStreamState>
<android.printservice.PrintJob: java.lang.String getTag()>:<public>:<android.printservice.PrintJob>
<android.media.AudioAttributes: void <init>(android.os.Parcel)>:<private>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.tv.TvInputManager.Session: void removeOverlayView()>:<>:<android.media.tv.TvInputManager.Session>
<android.view.IWindowManager: void setAnimationScales(float[])>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.audiofx.AudioEffect: void native_finalize()>:<private final native>:<android.media.audiofx.AudioEffect>
<android.media.AudioService: void makeA2dpSrcUnavailable(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AdapterView: void setSelection(int)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.902(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,boolean)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.view.View: boolean resolveTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.VolumePreference.SavedState: android.preference.VolumePreference.VolumeStore getVolumeStore()>:<>:<android.preference.VolumePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.view.IWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>:<public static>:<android.animation.AnimatorInflater>
<android.test.PerformanceTestCase.Intermediates: void finishTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.tv.ITvInputSessionCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub:android.os.Binder,android.media.tv.ITvInputSessionCallback>
<android.media.projection.MediaProjectionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.gesture.GestureOverlayView: boolean access.102(android.gesture.GestureOverlayView,boolean)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void detachAllViewsFromParent()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void notifyGlobalFocusCleared(android.view.View)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: void glFrustumx(int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10Ext: void <init>()>:<public>:<android.opengl.GLES10Ext>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.Editor: boolean canSelectAll()>:<protected>:<android.widget.Editor>
<android.media.WebVttRenderingWidget: void manageChangeListener()>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.accounts.AccountManager: android.accounts.Account[] getSharedAccounts(android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.widget.TextView: int getMinHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>:<public>:<android.media.MediaCrypto>
<android.media.AudioManager: int getDevicesForStream(int)>:<public>:<android.media.AudioManager>
<android.widget.GridView: android.view.View fillFromSelection(int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.CursorWindow.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.InputEventConsistencyVerifier: void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean)>:<private static>:<android.view.InputEventConsistencyVerifier>
<android.media.MediaFocusControl: android.content.ContentResolver access.100(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.GLES20Canvas: void nResetPaintFilter(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.PlayerRecord: void <init>(android.app.PendingIntent,android.content.ComponentName,android.os.IBinder)>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.view.ViewGroup.LayoutParams: java.lang.String sizeToString(int)>:<protected static>:<android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteConnection.OperationLog: void logOperation(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.view.RenderNode: void nOutput(long)>:<private static native>:<android.view.RenderNode>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.audiofx.EnvironmentalReverb: void <init>(int,int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>:<public>:<android.view.Display>
<android.view.GestureDetector.SimpleOnGestureListener: void <init>()>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.media.MediaRouter: void removeCallback(android.media.MediaRouter.Callback)>:<public>:<android.media.MediaRouter>
<android.view.Window.Callback: void onContentChanged()>:<public abstract>:<android.view.Window.Callback>
<android.view.RenderNode: boolean nSetLeft(long,int)>:<private static native>:<android.view.RenderNode>
<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.RemoteController: void setIsRegistered(boolean)>:<>:<android.media.RemoteController>
<android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback: void destroy()>:<public abstract>:<android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getUnfocusedMonthDateColor()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.service.media.IMediaBrowserService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.view.FrameStats: long getRefreshPeriodNano()>:<public final>:<android.view.FrameStats>
<android.media.MediaRecorder.VideoSource: void <init>(android.media.MediaRecorder)>:<private>:<android.media.MediaRecorder.VideoSource>
<android.view.MotionEvent: float getHistoricalX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaFocusControl: boolean isValidVoiceInputKeyCode(int)>:<private static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.animation.Keyframe.FloatKeyframe: java.lang.Object getValue()>:<public>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.widget.TextView: boolean selectAllText()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ScaleGestureDetector: float getCurrentSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.print.PrintJobInfo.1: android.print.PrintJobInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public abstract>:<android.animation.TypeEvaluator>
<android.view.Window: android.transition.Transition getEnterTransition()>:<public>:<android.view.Window>
<android.security.IKeystoreService.Stub.Proxy: int grant(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.preference.EditTextPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.EditTextPreference.SavedState.1:android.os.Parcelable.Creator>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>:<public static native>:<android.opengl.GLES31Ext>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>:<public static>:<android.appwidget.AppWidgetManager>
<android.opengl.EGLLogWrapper: void log(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ThreadedRenderer: void <clinit>()>:<static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getCurrent()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.media.MediaCodecList: boolean isEncoder(int)>:<static final native>:<android.media.MediaCodecList>
<android.media.ClosedCaptionWidget.CCLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>:<>:<android.media.ClosedCaptionWidget.CCLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>:<public>:<android.media.session.MediaSession>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeyType()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.view.SurfaceControl: void show()>:<public>:<android.view.SurfaceControl>
<android.media.JetPlayer: void release()>:<public>:<android.media.JetPlayer>
<android.view.ViewGroup: void removeViewInternal(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.RemoteDisplay.Listener: void onDisplayDisconnected()>:<public abstract>:<android.media.RemoteDisplay.Listener>
<android.service.media.IMediaBrowserServiceCallbacks.Stub: void <init>()>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub:android.os.Binder,android.service.media.IMediaBrowserServiceCallbacks>
<huawei.cust.HwCustUtils: void <init>()>:<public>:<huawei.cust.HwCustUtils>
<android.accounts.ChooseTypeAndAccountActivity: void <init>()>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(android.view.ViewGroup.ViewLocationHolder)>:<public>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.print.IPrintManager: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.view.ViewGroup: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvInputInfo: boolean isPassthroughInput()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.tv.TvView: boolean access.302(android.media.tv.TvView,boolean)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaScanner: boolean access.800(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.animation.ObjectAnimator: boolean hasSameTargetAndProperties(android.animation.Animator)>:<private>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: void clear()>:<private>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>:<public>:<android.media.session.MediaController>
<android.media.SoundPool.SoundPoolImpl: int _load(java.lang.String,int)>:<private final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.SoundPool.SoundPoolImpl: void finalize()>:<protected>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.AudioPort: android.media.AudioPortConfig activeConfig()>:<public>:<android.media.AudioPort>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: void nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.accessibility.AccessibilityWindowInfo: void addChild(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.ThumbnailUtils: android.os.ParcelFileDescriptor makeInputStream(android.net.Uri,android.content.ContentResolver)>:<private static>:<android.media.ThumbnailUtils>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.ViewRootImpl.InputStage: void finish(android.view.ViewRootImpl.QueuedInputEvent,boolean)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.accounts.IAccountManager.Stub.Proxy: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.AudioService: void onConfigureSafeVolume(boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewTreeObserver: void removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.GridLayout.Axis: int calculateMaxIndex()>:<private>:<android.widget.GridLayout.Axis>
<android.view.TextureView: android.view.TextureView.SurfaceTextureListener getSurfaceTextureListener()>:<public>:<android.view.TextureView:android.view.View>
<android.view.HardwareCanvas: int callDrawGLFunction(long)>:<public>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ScrollView: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>:<public static>:<android.media.AudioSystem>
<android.media.AudioService: android.bluetooth.BluetoothHeadset access.2902(android.media.AudioService,android.bluetooth.BluetoothHeadset)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.KeyCharacterMap: char getMatch(int,char[])>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvView: android.media.tv.TvInputManager.Session access.900(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(java.lang.String,long,float)>:<public>:<android.widget.ActivityChooserModel.HistoricalRecord>
<android.view.textservice.SentenceSuggestionsInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.textservice.SentenceSuggestionsInfo.1:android.os.Parcelable.Creator>
<android.security.IKeystoreService: int password_uid(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.DecoderCapabilities: int native_get_audio_decoder_type(int)>:<private static final native>:<android.media.DecoderCapabilities>
<android.opengl.EGL14: void _nativeClassInit()>:<private static native>:<android.opengl.EGL14>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()>:<public static>:<android.view.inputmethod.InputMethodManager>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: int getRemoteViewsBitmapMemoryUsage()>:<private>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.view.View: boolean isPaddingRelative()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor.CorrectionHighlighter: boolean updatePath()>:<private>:<android.widget.Editor.CorrectionHighlighter>
<android.service.dreams.DreamService: android.view.View onCreatePanelView(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.AbsSavedState.1: void <init>()>:<>:<android.view.AbsSavedState.1:android.view.AbsSavedState>
<android.view.Surface.CompatibleCanvas: void getMatrix(android.graphics.Matrix)>:<public>:<android.view.Surface.CompatibleCanvas:android.graphics.Canvas>
<android.media.MediaRouter: java.lang.String typesToString(int)>:<static>:<android.media.MediaRouter>
<android.print.PrinterInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: void writeMediaSizes(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onPause()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.media.AudioMixPort: void <init>(android.media.AudioHandle,int,int[],int[],int[],android.media.AudioGain[])>:<>:<android.media.AudioMixPort:android.media.AudioPort>
<android.media.session.MediaSession: void postCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<private>:<android.media.session.MediaSession>
<android.filterpacks.imageproc.TintFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.service.notification.NotificationListenerService.RankingMap: void <clinit>()>:<static>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.widget.VideoView: int access.1102(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.View: int getLayerType()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: android.transition.Transition getSharedElementExitTransition()>:<public>:<android.view.Window>
<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.ViewRootImpl: boolean onNestedPreFling(android.view.View,float,float)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.TtmlTrack: void onData(byte[],boolean,long)>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.view.ThreadedRenderer: void nSetFrameInterval(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.ViewRootImpl.RunQueue.HandlerAction: void <init>(android.view.ViewRootImpl.1)>:<>:<android.view.ViewRootImpl.RunQueue.HandlerAction>
<android.database.CursorWindow: boolean nativeSetNumColumns(long,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.OnScanCompletedListener>
<android.opengl.GLES10: void glAlphaFunc(int,float)>:<public static native>:<android.opengl.GLES10>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.AudioTrack: int getAudioFormat()>:<public>:<android.media.AudioTrack>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection.OperationLog: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.view.SurfaceControl: void setDisplayPowerMode(android.os.IBinder,int)>:<public static>:<android.view.SurfaceControl>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void postIfNeededLocked()>:<private>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.widget.PopupWindow.PopupViewContainer: void <init>(android.widget.PopupWindow,android.content.Context)>:<public>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void setupSetter(java.lang.Class)>:<>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.view.accessibility.AccessibilityEvent: void readAccessibilityRecordFromParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel)>:<private>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.RatingBar: void setIsIndicator(boolean)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.opengl.GLES10: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES10>
<android.view.Window: void setPrivateFlags(int,int)>:<private>:<android.view.Window>
<android.media.audiofx.AudioEffect: void native_release()>:<private final native>:<android.media.audiofx.AudioEffect>
<android.media.MediaCodecInfo.VideoCapabilities: void applyBlockLimits(int,int,android.util.Range,android.util.Range,android.util.Range)>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.TintFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.widget.Editor.HandleView: int getPreferredWidth()>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void commitTemporaryMetaData()>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxWidth(int)>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Nsd: boolean isLauncherIdle(android.view.View)>:<static>:<android.view.Nsd>
<android.view.InputDevice: void <init>(android.os.Parcel)>:<private>:<android.view.InputDevice:android.os.Parcelable>
<android.service.trust.TrustAgentService: void onError(java.lang.String)>:<private>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterpacks.imageproc.VignetteFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>:<public static>:<android.gesture.GestureUtils>
<android.accounts.IAccountManager.Stub.Proxy: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarPreference: int getProgress()>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.widget.ProgressBar: void setAnimationPosition(float)>:<>:<android.widget.ProgressBar:android.view.View>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.TextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowManagerPolicy: void setInputMethodWindowVisible(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.voice.VoiceInteractionSession: void setTheme(int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.session.MediaController: java.lang.String getTag()>:<public>:<android.media.session.MediaController>
<android.widget.RemoteViewsAdapter: void onNotifyDataSetChanged()>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.LayoutInflater.BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IVolumeController.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IVolumeController.Stub:android.os.Binder,android.media.IVolumeController>
<android.hsm.HwSystemManager: void <init>()>:<public>:<android.hsm.HwSystemManager>
<android.preference.PreferenceManager: void dispatchNewIntent(android.content.Intent)>:<>:<android.preference.PreferenceManager>
<android.media.MediaPlayer: void native_finalize()>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLES10: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.MenuItem: android.view.MenuItem setActionView(int)>:<public abstract>:<android.view.MenuItem>
<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask: java.lang.Object doInBackground(java.lang.Object[])>:<public volatile>:<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask:android.os.AsyncTask>
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaController>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.database.sqlite.SQLiteClosable: void <init>()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.widget.DatePickerCalendarDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.service.notification.INotificationListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.media.IAudioRoutesObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IAudioRoutesObserver.Stub.Proxy:android.media.IAudioRoutesObserver>
<android.view.View.ListenerInfo: void <init>()>:<>:<android.view.View.ListenerInfo>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onListenerConnected(android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.media.IAudioService: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.HardwareCanvas: void <init>()>:<public>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.media.AudioService: void setMode(int,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ListPopupWindow.DropDownListView.1: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.widget.ListPopupWindow.DropDownListView.1:android.util.IntProperty>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.widget.SpellChecker: void spellCheck(int,int)>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.widget.SearchView: int getImeOptions()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.tv.TvTrackInfo: void <init>(android.os.Parcel)>:<private>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getCategoryAt(int)>:<public>:<android.media.MediaRouter>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.database.IContentObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback,android.os.Handler)>:<public>:<android.media.session.MediaController>
<android.view.textservice.SpellCheckerSubtype: boolean equals(java.lang.Object)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.preference.PreferenceFragment: void onUnbindPreferences()>:<protected>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.MediaFocusControl: void plugRemoteControlDisplaysIntoClient_syncPrs(android.media.IRemoteControlClient)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.database.sqlite.SQLiteConnection: int nativeExecuteForBlobFileDescriptor(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.View.DragShadowBuilder: android.view.View getView()>:<public final>:<android.view.View.DragShadowBuilder>
<android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.RemoteController.RcDisplay: void setCurrentClientId(int,android.app.PendingIntent,boolean)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder append(int,float,float,float,float,int)>:<public>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.gesture.GestureLibrary: void setSequenceType(int)>:<public>:<android.gesture.GestureLibrary>
<android.view.InputDevice.MotionRange: float access.600(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.accounts.ChooseAccountTypeActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onSkipToNext()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.widget.Switch: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.media.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnIndex()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.VelocityTracker: float getYVelocity()>:<public>:<android.view.VelocityTracker>
<android.widget.RadialTimePickerView: void initHoursAndMinutesText()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.RelativeLayout: boolean positionChildVertical(android.view.View,android.widget.RelativeLayout.LayoutParams,int,boolean)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.MotionEvent.PointerProperties: boolean equals(android.view.MotionEvent.PointerProperties)>:<private>:<android.view.MotionEvent.PointerProperties>
<android.media.JetPlayer: boolean play()>:<public>:<android.media.JetPlayer>
<android.media.tv.TvInputManager.Hardware: void <init>(android.media.tv.ITvInputHardware,android.media.tv.TvInputManager.1)>:<>:<android.media.tv.TvInputManager.Hardware>
<android.filterpacks.base.FrameStore: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.FrameStore:android.filterfw.core.Filter>
<android.view.View: float getY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrintSpoolerCallbacks.Stub: android.print.IPrintSpoolerCallbacks asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.view.IWindowManager: void setAnimationScale(int,float)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.GridView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.GLES20Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onInterruptionFilterChanged(int)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodManager: boolean isCursorAnchorInfoEnabled()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.DayPickerView.ScrollStateRunnable: void run()>:<public>:<android.widget.DayPickerView.ScrollStateRunnable:java.lang.Runnable>
<android.service.wallpaper.WallpaperService.Engine: void reportVisibility()>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.filterpacks.performance.Throughput: int getPeriodTime()>:<public>:<android.filterpacks.performance.Throughput>
<android.widget.ListView: void smoothScrollByOffset(int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: void postToHandler(android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<private>:<android.accounts.AccountManager>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.Editor.HandleView: int getHorizontalGravity(boolean)>:<protected abstract>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.WindowInsets: void <clinit>()>:<static>:<android.view.WindowInsets>
<android.media.tv.TvInputManager.1: void onVideoAvailable(int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.CheckedTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.TextureView: boolean hasStaticLayer()>:<>:<android.view.TextureView:android.view.View>
<android.print.IWriteResultCallback.Stub: android.print.IWriteResultCallback asInterface(android.os.IBinder)>:<public static>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.widget.TextView: void setPadding(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.ITvInputSessionCallback access.902(android.media.tv.TvInputService.HardwareSession,android.media.tv.ITvInputSessionCallback)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.ViewRootImpl: boolean isSupportAps(int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.2: void onInputStateChanged(java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.2:android.media.tv.ITvInputManagerCallback.Stub,android.os.Binder>
<android.widget.DatePicker: void setEnabled(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService.AudioOrientationEventListener: void onOrientationChanged(int)>:<public>:<android.media.AudioService.AudioOrientationEventListener:android.view.OrientationEventListener>
<android.media.browse.MediaBrowser.Subscription: void <init>(java.lang.String)>:<>:<android.media.browse.MediaBrowser.Subscription>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.View: void destroyHardwareResources()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteController: void onNewTransportInfo(int,int)>:<private>:<android.media.RemoteController>
<android.view.RenderNode: boolean offsetTopAndBottom(int)>:<public>:<android.view.RenderNode>
<android.filterpacks.videosrc.CameraSource: android.hardware.Camera.Parameters getCameraParameters()>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.view.RenderNodeAnimator: void notifyStartListeners()>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.View: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeType()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.media.MediaMetadata: void <init>(android.os.Bundle,android.media.MediaMetadata.1)>:<>:<android.media.MediaMetadata:android.os.Parcelable>
<android.ddm.DdmHandleProfiling: void <init>()>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLSurfaceView.DefaultContextFactory: void <init>(android.opengl.GLSurfaceView)>:<private>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.media.audiofx.NoiseSuppressor: void <init>(int)>:<private>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.view.animation.Animation.3: void run()>:<public>:<android.view.animation.Animation.3:java.lang.Runnable>
<android.widget.Spinner.DropDownAdapter: int getItemViewType(int)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: android.view.View findViewById(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioAttributes: int getCapturePreset()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.MediaHTTPService: android.media.IMediaHTTPConnection makeHTTPConnection()>:<public>:<android.media.MediaHTTPService:android.media.IMediaHTTPService.Stub,android.os.Binder>
<android.view.View: void dispatchFinishTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView.RecycleBin: void clear()>:<>:<android.widget.AbsListView.RecycleBin>
<android.preference.PreferenceManager: boolean shouldCommit()>:<>:<android.preference.PreferenceManager>
<android.opengl.GLErrorWrapper: void glMaterialf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.voice.VoiceInteractionSessionService.2: void executeMessage(android.os.Message)>:<public>:<android.service.voice.VoiceInteractionSessionService.2:com.android.internal.os.HandlerCaller.Callback>
<android.widget.DayPickerView: int access.102(android.widget.DayPickerView,int)>:<static>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.tv.ITvInputManager.Stub.Proxy: java.util.List getBlockedRatings(int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.View: boolean getClipToOutline()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.tv.TvView: java.util.List getTracks(int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.BlackWhiteFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.media.session.PlaybackState.CustomAction.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.session.PlaybackState.CustomAction.1:android.os.Parcelable.Creator>
<android.media.WebVttParser: java.lang.String timeToString(long)>:<public static>:<android.media.WebVttParser>
<android.widget.GridLayout.LayoutParams: void setRowSpecSpan(android.widget.GridLayout.Interval)>:<final>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.ViewGroup: void addInArray(android.view.View,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.CursorToBulkCursorAdaptor: void disposeLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.media.session.MediaController.TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(android.media.session.PlaybackState.CustomAction)>:<public>:<android.media.session.PlaybackState.Builder>
<android.preference.SeekBarVolumizer: int access.302(android.preference.SeekBarVolumizer,int)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onTimedEvent(long)>:<public abstract>:<android.media.MediaTimeProvider.OnMediaTimeListener>
<android.filterpacks.videosrc.CameraSource.1: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public>:<android.filterpacks.videosrc.CameraSource.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.view.LayoutInflater.BlinkLayout.1: boolean handleMessage(android.os.Message)>:<public>:<android.view.LayoutInflater.BlinkLayout.1:android.os.Handler.Callback>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.inputmethod.CompletionInfo.1: android.view.inputmethod.CompletionInfo[] newArray(int)>:<public>:<android.view.inputmethod.CompletionInfo.1:android.os.Parcelable.Creator>
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext()>:<private>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabWidget: void setRightStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.View.BaseSavedState.1: android.view.View.BaseSavedState[] newArray(int)>:<public>:<android.view.View.BaseSavedState.1:android.os.Parcelable.Creator>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.dreams.DreamService: int clampAbsoluteBrightness(int)>:<private static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.InputQueue: void recycleActiveInputEvent(android.view.InputQueue.ActiveInputEvent)>:<private>:<android.view.InputQueue>
<android.media.effect.effects.BackDropperEffect: void setUpdateListener(android.media.effect.EffectUpdateListener)>:<public>:<android.media.effect.effects.BackDropperEffect:android.media.effect.FilterGraphEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.animation.AnimatorSet.Node: android.animation.AnimatorSet.Node clone()>:<public>:<android.animation.AnimatorSet.Node:java.lang.Cloneable>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: void <init>()>:<private>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.media.MediaCrypto: void <clinit>()>:<static>:<android.media.MediaCrypto>
<android.database.sqlite.SQLiteSession: void endTransaction(android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.widget.TextView.CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.security.IKeystoreService.Stub.Proxy: int verify(java.lang.String,byte[],byte[])>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>:<public>:<android.view.accessibility.AccessibilityCache>
<android.media.SoundPool.SoundPoolImpl: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path,float)>:<public static>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.media.session.ISessionCallback.Stub.Proxy: void onRewind()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.IWindowManager.Stub.Proxy: int getPendingAppTransition()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>:<public static native>:<android.media.AudioSystem>
<android.print.PrinterCapabilitiesInfo: void writeResolutions(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.Window: void setAllowEnterTransitionOverlap(boolean)>:<public>:<android.view.Window>
<android.preference.MultiCheckPreference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.ActionMenuView: int getGeneratedItemPadding()>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.tv.TvInputManager: void setParentalControlsEnabled(boolean)>:<public>:<android.media.tv.TvInputManager>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void <init>(android.print.PrintManager.PrintJobStateChangeListener,android.os.Handler)>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.media.PlayerRecord.RcClientDeathHandler: void binderDied()>:<public>:<android.media.PlayerRecord.RcClientDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.Metadata: boolean parse(android.os.Parcel)>:<public>:<android.media.Metadata>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(int[],int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.Keyframes.FloatKeyframes: float getFloatValue(float)>:<public abstract>:<android.animation.Keyframes.FloatKeyframes:android.animation.Keyframes>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.security.KeyStoreParameter: boolean isEncryptionRequired()>:<public>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManager.LayoutParams: int describeContents()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MutableBackgroundColorSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.View: boolean isTextDirectionInherited()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Tokenizer.DataTokenizer: android.media.Tokenizer.TokenizerPhase start()>:<public>:<android.media.Tokenizer.DataTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.Editor: long getCharRangeOuter(int)>:<protected>:<android.widget.Editor>
<android.media.AudioManager: void setMasterMute(boolean,int)>:<public>:<android.media.AudioManager>
<android.security.KeyChain.KeyChainConnection: android.security.IKeyChainService getService()>:<public>:<android.security.KeyChain.KeyChainConnection:java.io.Closeable>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.IAccountManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.filterpacks.imageproc.BitmapOverlayFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.preference.PreferenceActivity.Header.1: void <init>()>:<>:<android.preference.PreferenceActivity.Header.1:android.os.Parcelable.Creator>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: boolean nSetOutlineEmpty(long)>:<private static native>:<android.view.RenderNode>
<android.view.InputQueue: long nativeInit(java.lang.ref.WeakReference,android.os.MessageQueue)>:<private static native>:<android.view.InputQueue>
<android.widget.GridLayout.Axis: boolean relax(int[],android.widget.GridLayout.Arc)>:<private>:<android.widget.GridLayout.Axis>
<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas obtain(android.view.RenderNode)>:<static>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.browse.MediaBrowser: android.content.Context access.1600(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.view.accessibility.AccessibilityWindowInfo.1: android.view.accessibility.AccessibilityWindowInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityWindowInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.media.session.MediaController.Callback: void onMetadataChanged(android.media.MediaMetadata)>:<public>:<android.media.session.MediaController.Callback>
<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener: void onStatusChange()>:<>:<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.ActionMenuView.ActionMenuPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.IAudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.MediaRouter: boolean isWifiDisplayEnabled(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus)>:<static>:<android.media.MediaRouter>
<android.media.AudioDevice: void <init>(android.media.AudioDevicePortConfig)>:<>:<android.media.AudioDevice>
<android.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.IApplicationToken.Stub.Proxy: void windowsVisible()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.view.IWindowManager.Stub.Proxy: void setAppWillBeHidden(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.audiofx.Virtualizer.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.Virtualizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.MediaRecorder.AudioSource: void <init>(android.media.MediaRecorder)>:<private>:<android.media.MediaRecorder.AudioSource>
<android.media.session.ISessionController: void playFromSearch(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.filterpacks.imageproc.FlipFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.print.PrintJobInfo: void setStateReason(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.HardwareRenderer: int getWidth()>:<abstract>:<android.view.HardwareRenderer>
<android.media.AudioManager: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public>:<android.media.AudioManager>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.ComponentName)>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.view.textservice.TextInfo.1: android.view.textservice.TextInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.textservice.TextInfo.1:android.os.Parcelable.Creator>
<android.media.session.ISessionCallback: void onAdjustVolume(int)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.notification.ZenModeConfig: void writeConditionXml(android.service.notification.Condition,org.xmlpull.v1.XmlSerializer)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager>
<android.view.animation.Animation: void fireAnimationRepeat()>:<private>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewRootImpl: void dispatchCheckFocus()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener access.200(android.view.ViewGroup)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteConnection: void nativeExecute(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.AudioService.SetModeDeathHandler: int access.1400(android.media.AudioService.SetModeDeathHandler)>:<static>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void getSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.database.MergeCursor.1: void onInvalidated()>:<public>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.MatchLabelForPredicate: int access.902(android.view.View.MatchLabelForPredicate,int)>:<static>:<android.view.View.MatchLabelForPredicate:com.android.internal.util.Predicate>
<android.filterpacks.imageproc.RedEyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected abstract>:<android.widget.Filter>
<android.media.MediaCodecInfo: java.lang.String getName()>:<public final>:<android.media.MediaCodecInfo>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.ui.SurfaceRenderFilter: void updateTargetRect()>:<private>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.view.KeyEvent: char getMatch(char[],int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.SeekBarVolumizer.H: void postUpdateSlider(int)>:<public>:<android.preference.SeekBarVolumizer.H:android.os.Handler>
<android.media.tv.TvView: void setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.ReflectionAction: int mergeBehavior()>:<public>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.view.View: void outputDirtyFlags(java.lang.String,boolean,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFocusControl: java.util.ArrayList access.2200(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.session.ISession.Stub: void <init>()>:<public>:<android.media.session.ISession.Stub:android.os.Binder,android.media.session.ISession>
<android.filterpacks.videosink.MediaEncoderFilter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.media.AudioService.VolumeController: android.os.IBinder asBinder()>:<public>:<android.media.AudioService.VolumeController>
<android.print.PrintAttributes.1: android.print.PrintAttributes createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowInsets: boolean isRound()>:<public>:<android.view.WindowInsets>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLErrorWrapper: void glLightModelf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityManager: void handleNotifyAccessibilityStateChanged()>:<private>:<android.view.accessibility.AccessibilityManager>
<android.service.wallpaper.WallpaperService.Engine.2: void setKeepScreenOn(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OverflowPopup access.200(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.animation.KeyframeSet: java.lang.Class getType()>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.Display: java.lang.String stateToString(int)>:<public static>:<android.view.Display>
<android.accounts.AccountManager.8: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<>:<android.accounts.AccountManager.8:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.opengl.EGLSurface: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.database.MatrixCursor: void addRow(java.util.ArrayList,int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.animation.KeyframeSet: java.lang.Object clone()>:<public volatile>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.IWindowFocusObserver.Stub: android.view.IWindowFocusObserver asInterface(android.os.IBinder)>:<public static>:<android.view.IWindowFocusObserver.Stub:android.os.Binder,android.view.IWindowFocusObserver>
<android.view.ViewRootImpl.RunQueue: void postDelayed(java.lang.Runnable,long)>:<>:<android.view.ViewRootImpl.RunQueue>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void access.300(android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl,com.android.internal.textservice.ISpellCheckerSession,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.SpellCheckerParams,boolean)>:<static>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.database.sqlite.SQLiteDebug.DbStats: void <init>(java.lang.String,long,long,int,int,int,int)>:<public>:<android.database.sqlite.SQLiteDebug.DbStats>
<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.inputmethod.InputMethodManager.H: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper)>:<>:<android.view.inputmethod.InputMethodManager.H:android.os.Handler>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputClient.Stub.Proxy: void onSessionEvent(java.lang.String,android.os.Bundle,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.media.IRemoteDisplayProvider.Stub: void <init>()>:<public>:<android.media.IRemoteDisplayProvider.Stub:android.os.Binder,android.media.IRemoteDisplayProvider>
<android.media.audiofx.AutomaticGainControl: void <init>(int)>:<private>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<android.filterpacks.imageproc.PosterizeFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.PosterizeFilter:android.filterfw.core.Filter>
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.lang.String[],java.lang.String[])>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioSystem: int getStreamVolumeIndex(int,int)>:<public static native>:<android.media.AudioSystem>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void <init>(android.content.Context)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ZoomButtonsController.5: void <init>(android.widget.ZoomButtonsController)>:<>:<android.widget.ZoomButtonsController.5:java.lang.Runnable>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: java.util.ArrayList getTouchables()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountManager: void clearPassword(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.Rating: float getStarRating()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.media.MediaFocusControl: void removeMediaButtonReceiver_syncPrs(android.app.PendingIntent)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: void closeSystemDialogs()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.database.sqlite.SQLiteConnection: byte[] access.500()>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.print.PrintAttributes.MediaSize: int getHeightMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.VoiceInteractionSession: void onCreate(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.print.IPrintManager.Stub.Proxy: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.opengl.GLES20: void glHint(int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void onPostExecute(java.lang.Boolean)>:<protected>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.view.animation.AnimationSet: void <init>(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.ScaleGestureDetector: int access.102(android.view.ScaleGestureDetector,int)>:<static>:<android.view.ScaleGestureDetector>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.GridLayout.4: int getGravityOffset(android.view.View,int)>:<>:<android.widget.GridLayout.4:android.widget.GridLayout.Alignment>
<android.widget.TextView: void setPaintFlags(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaSession.CallbackStub: void onSetVolumeTo(int)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.gesture.GestureLibraries.FileGestureLibrary: void <init>(java.io.File)>:<public>:<android.gesture.GestureLibraries.FileGestureLibrary:android.gesture.GestureLibrary>
<android.database.sqlite.SQLiteDatabase: void reopenReadWrite()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.AccessibilityEvent: void init(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.tv.ITvInputHardware.Stub.Proxy: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: void setFindAccessibilityNodeInfosResult(java.util.List,int)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Void)>:<protected>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.accounts.AccountAndUser: java.lang.String toString()>:<public>:<android.accounts.AccountAndUser>
<android.animation.Animator: void setAllowRunningAsynchronously(boolean)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.ActivityChooserView.1: void <init>(android.widget.ActivityChooserView)>:<>:<android.widget.ActivityChooserView.1:android.database.DataSetObserver>
<android.media.tv.ITvInputSessionCallback: void onLayoutSurface(int,int,int,int)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.media.MediaFocusControl.DisplayInfoForServer: android.content.ComponentName access.402(android.media.MediaFocusControl.DisplayInfoForServer,android.content.ComponentName)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.service.trust.ITrustAgentService: void onUnlockAttempt(boolean)>:<public abstract>:<android.service.trust.ITrustAgentService:android.os.IInterface>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.widget.ProgressBar: void setIndeterminate(boolean)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar access.200(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.animation.Animation: java.lang.Object clone()>:<protected volatile>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.AmrInputStream: int read()>:<public>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.SurfaceControl: void setDisplaySurface(android.os.IBinder,android.view.Surface)>:<public static>:<android.view.SurfaceControl>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>:<public>:<android.media.RemoteController>
<android.filterpacks.videosink.MediaEncoderFilter: void updateMediaRecorderParams()>:<private>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.view.animation.AnticipateOvershootInterpolator: float a(float,float)>:<private static>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.textservice.TextInfo: java.lang.String getText()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: void setFocusedApp(android.os.IBinder,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getDescription()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setFloatValues(float[])>:<public transient>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.projection.IMediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>:<public>:<android.opengl.GLWrapperBase:javax.microedition.khronos.opengles.GL,javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.opengles.GL10Ext,javax.microedition.khronos.opengles.GL11,javax.microedition.khronos.opengles.GL11Ext,javax.microedition.khronos.opengles.GL11ExtensionPack>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterpacks.videoproc.BackDropperFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.media.AudioService: java.lang.Boolean access.4000(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void <init>(android.service.notification.NotificationListenerService)>:<private>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.database.CursorToBulkCursorAdaptor: void <init>(android.database.Cursor,android.database.IContentObserver,java.lang.String)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.media.IAudioService: boolean isCameraSoundForced()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.projection.IMediaProjectionCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.projection.IMediaProjectionCallback.Stub.Proxy:android.media.projection.IMediaProjectionCallback>
<android.media.tv.TvInputInfo: java.lang.String generateInputIdForHdmiDevice(android.content.ComponentName,android.hardware.hdmi.HdmiDeviceInfo)>:<private static final>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>:<public>:<android.view.GestureDetector>
<android.media.CCParser.StyleCode: int getColor()>:<>:<android.media.CCParser.StyleCode>
<android.view.ViewGroup.ChildListForAccessibility: void <clinit>()>:<static>:<android.view.ViewGroup.ChildListForAccessibility>
<android.view.ThreadedRenderer: void invalidateRoot()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>:<private static>:<android.media.ThumbnailUtils>
<android.media.session.MediaSession.CallbackMessageHandler: void post(int,java.lang.Object,android.os.Bundle)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.RemoteControlClient.MetadataEditor: void clear()>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.View.5: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.5:android.util.FloatProperty>
<android.view.WindowInfo: void <init>()>:<private>:<android.view.WindowInfo:android.os.Parcelable>
<android.media.tv.TvInputManager: android.media.tv.TvInputManager.Hardware acquireTvInputHardware(int,android.media.tv.TvInputManager.HardwareCallback,android.media.tv.TvInputInfo)>:<public>:<android.media.tv.TvInputManager>
<android.view.WindowManagerGlobal: java.lang.String[] getViewRootNames()>:<public>:<android.view.WindowManagerGlobal>
<android.view.View.SendViewStateChangedAccessibilityEvent: void run()>:<public>:<android.view.View.SendViewStateChangedAccessibilityEvent:java.lang.Runnable>
<android.widget.Toast.TN: void trySendAccessibilityEvent()>:<private>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.View: void onScreenStateChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.DatePickerController: void tryVibrate()>:<public abstract>:<android.widget.DatePickerController>
<android.print.IPrintSpooler.Stub.Proxy: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.widget.QuickContactBadge.QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>:<protected>:<android.widget.QuickContactBadge.QueryHandler:android.content.AsyncQueryHandler,android.os.Handler>
<android.widget.Editor.PositionListener: boolean onPreDraw()>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.security.IKeystoreService.Stub.Proxy: int test()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.AudioManager: int getLastAudibleStreamVolume(int)>:<public>:<android.media.AudioManager>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.animation.TimeAnimator.TimeListener: void onTimeUpdate(android.animation.TimeAnimator,long,long)>:<public abstract>:<android.animation.TimeAnimator.TimeListener>
<android.media.AudioAttributes: java.util.HashSet access.302(android.media.AudioAttributes,java.util.HashSet)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.widget.TextView: int getLineAtCoordinate(float)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.DateTimeView: java.text.DateFormat getDateFormat()>:<private>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.print.PrintJobId.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.print.IPrintDocumentAdapter.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.widget.Spinner.SpinnerPopup: int getHorizontalOffset()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: int getTotalPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.SurfaceView.2: void onScrollChanged()>:<public>:<android.view.SurfaceView.2:android.view.ViewTreeObserver.OnScrollChangedListener>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.VideoView: android.media.MediaPlayer.OnInfoListener access.1400(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.TextClock: void createTime(java.lang.String)>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceGroupAdapter: int getItemViewType(int)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.tv.ITvInputManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.AudioService.MyDisplayStatusCallback: void onComplete(int)>:<public>:<android.media.AudioService.MyDisplayStatusCallback:android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback>
<android.widget.TextView: void setRawInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.preference.PreferenceFragment: void onDestroy()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.accessibility.IAccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.media.MediaActionSound: void play(int)>:<public>:<android.media.MediaActionSound>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder streamId(int)>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.view.InputEvent: void setSource(int)>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.IOnKeyguardExitResult.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IOnKeyguardExitResult.Stub.Proxy:android.view.IOnKeyguardExitResult>
<android.media.MediaCodec: void setParameters(java.lang.String[],java.lang.Object[])>:<private final native>:<android.media.MediaCodec>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.802(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,int)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>:<private>:<android.view.AccessibilityInteractionController>
<android.opengl.GLErrorWrapper: void glTexEnvf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextClock: boolean is24HourModeEnabled()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.tv.TvView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.GridLayout.Axis: int[] getDeltas()>:<public>:<android.widget.GridLayout.Axis>
<android.view.InputDevice: android.hardware.input.InputDeviceIdentifier getIdentifier()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.View.3: void setValue(android.view.View,float)>:<public>:<android.view.View.3:android.util.FloatProperty>
<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.TwoStatePreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.TwoStatePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLSurfaceView.LogWriter: void <init>()>:<>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobCancelling(android.print.PrintJobId,boolean)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.view.animation.CycleInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.preference.PreferenceFragment.3: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.preference.PreferenceFragment.3:android.view.View.OnKeyListener>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteFailed(java.lang.CharSequence,int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.media.tv.TvInputService.Session: void relayoutOverlayView(android.graphics.Rect)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.tv.TvInputService.Session: void createOverlayView(android.os.IBinder,android.graphics.Rect)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.accounts.AccountManagerResponse.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.service.notification.Condition: boolean equals(java.lang.Object)>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.widget.Editor.EasyEditPopupWindow: void setOnDeleteListener(android.widget.Editor.EasyEditDeleteListener)>:<private>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.filterpacks.videosink.MediaEncoderFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.media.CCParser.StyleCode: void <init>(int,int)>:<>:<android.media.CCParser.StyleCode>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)>:<public final>:<android.media.MediaExtractor>
<android.print.IPrintSpoolerClient.Stub: android.print.IPrintSpoolerClient asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.opengl.GLErrorWrapper: void glRotatex(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.notification.Condition: android.service.notification.Condition copy()>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.view.WindowManagerInternal: void setMagnificationCallbacks(android.view.WindowManagerInternal.MagnificationCallbacks)>:<public abstract>:<android.view.WindowManagerInternal>
<android.media.MediaSyncEvent: int getType()>:<public>:<android.media.MediaSyncEvent>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.videosrc.MediaSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glRotatef(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<android.media.session.MediaSession: void setActive(boolean)>:<public>:<android.media.session.MediaSession>
<android.security.IKeystoreService.Stub.Proxy: byte[] get(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.tv.ITvInputManager.Stub.Proxy: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.media.tv.TvInputService.Session.3: void <init>(android.media.tv.TvInputService.Session,android.net.Uri)>:<>:<android.media.tv.TvInputService.Session.3:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glLineWidthx(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.service.dreams.DreamManagerInternal: boolean isDreaming()>:<public abstract>:<android.service.dreams.DreamManagerInternal>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.media.MediaScannerConnection: void connect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.media.AudioManagerInternal: void adjustStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public abstract>:<android.media.AudioManagerInternal>
<android.media.MediaPlayer.TrackInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getRowStride()>:<public>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String,boolean)>:<public static final>:<android.media.tv.TvContract>
<android.filterpacks.videosrc.CameraSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>:<protected abstract>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.widget.Toast: float getVerticalMargin()>:<public>:<android.widget.Toast>
<android.widget.StackView: void <init>(android.content.Context)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.IntToString: int 'from'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>:<public>:<android.service.media.MediaBrowserService.Result>
<android.widget.SearchView: android.widget.CursorAdapter access.100(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.IWriteResultCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.printservice.PrinterDiscoverySession: void onStopPrinterDiscovery()>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.view.View: void setClipToOutline(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IAssetAtlas.Stub: void <init>()>:<public>:<android.view.IAssetAtlas.Stub:android.os.Binder,android.view.IAssetAtlas>
<android.media.session.ParcelableVolumeInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.session.ParcelableVolumeInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: int getFogParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.animation.Animation.3: void <init>(android.view.animation.Animation)>:<>:<android.view.animation.Animation.3:java.lang.Runnable>
<android.media.SoundPool.SoundPoolDelegate: void resume(int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.ViewRootImpl: boolean isTypingKey(android.view.KeyEvent)>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GLES20Canvas: void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint)>:<>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasWindowColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: boolean getDayFromLocation(float,java.util.Calendar)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Window: void setMediaController(android.media.session.MediaController)>:<public>:<android.view.Window>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.RouteCategory: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.view.GLES20Canvas: void nDrawTextOnPath(long,char[],int,int,long,float,float,int,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: int getSystemUiVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.StateListAnimator.Tuple: void <init>(int[],android.animation.Animator)>:<private>:<android.animation.StateListAnimator.Tuple>
<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper: void deactivate()>:<>:<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper:com.android.internal.view.IInputConnectionWrapper>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onMetadataChanged(android.media.MediaMetadata)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.widget.RelativeLayout.DependencyGraph: void add(android.view.View)>:<>:<android.widget.RelativeLayout.DependencyGraph>
<android.widget.TextView: void addTextCopyFinishedListener(android.widget.TextCopyFinishedListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: int getAccessibilitySelectionStart()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountAuthenticator: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.service.dreams.DreamService: java.lang.String access.400(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.filterpacks.base.RetargetFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.RetargetFilter:android.filterfw.core.Filter>
<android.media.AudioManager: int getOutputLatency(int)>:<public>:<android.media.AudioManager>
<android.media.tv.TvInputManager.SessionCallbackRecord.7: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,int)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.7:java.lang.Runnable>
<android.view.RenderNodeAnimator: void nStart(long,android.view.RenderNodeAnimator)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.session.MediaSession.CallbackStub: void onPlayFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int,boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>:<protected abstract>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Utils: android.util.Range factorRange(android.util.Range,int)>:<static>:<android.media.Utils>
<android.media.MediaActionSound: int access.002(android.media.MediaActionSound,int)>:<static>:<android.media.MediaActionSound>
<android.widget.GridView: void setNumColumns(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.SessionCallbackRecord.11: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,java.lang.String,android.os.Bundle)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.11:java.lang.Runnable>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>:<public abstract>:<android.view.MenuItem>
<android.view.WindowManager.LayoutParams: void restore()>:<>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.print.IWriteResultCallback: void onWriteFinished(android.print.PageRange[],int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glLoadPaletteFromModelViewMatrixOES()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.ChooseTypeAndAccountActivity: void startChooseAccountTypeActivity()>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.media.AudioSystem: void <init>()>:<public>:<android.media.AudioSystem>
<android.media.WebVttRenderer: boolean supports(android.media.MediaFormat)>:<public>:<android.media.WebVttRenderer:android.media.SubtitleController.Renderer>
<android.view.View: void dispatchGetDisplayList()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaController.TransportControls: void skipToQueueItem(long)>:<public>:<android.media.session.MediaController.TransportControls>
<android.security.IKeyChainAliasCallback.Stub: android.security.IKeyChainAliasCallback asInterface(android.os.IBinder)>:<public static>:<android.security.IKeyChainAliasCallback.Stub:android.os.Binder,android.security.IKeyChainAliasCallback>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioManager: android.media.AudioPortConfig updatePortConfig(android.media.AudioPortConfig,java.util.ArrayList)>:<>:<android.media.AudioManager>
<android.printservice.IPrintServiceClient.Stub: android.printservice.IPrintServiceClient asInterface(android.os.IBinder)>:<public static>:<android.printservice.IPrintServiceClient.Stub:android.os.Binder,android.printservice.IPrintServiceClient>
<android.opengl.GLES10: void _nativeClassInit()>:<private static native>:<android.opengl.GLES10>
<android.media.RemoteController.RcDisplay: void <init>(android.media.RemoteController)>:<>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.print.IPrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public abstract>:<android.print.IPrinterDiscoveryObserver:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.JetPlayer: void native_release()>:<private final native>:<android.media.JetPlayer>
<android.animation.PathKeyframes.SimpleKeyframes: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle,long)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.browse.MediaBrowser: boolean isCurrent(android.service.media.IMediaBrowserServiceCallbacks,java.lang.String)>:<private>:<android.media.browse.MediaBrowser>
<android.opengl.GLLogWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>:<public static>:<android.view.WindowManagerGlobal>
<android.view.InputEvent: int getDeviceId()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.media.session.ISessionController.Stub.Proxy: void adjustVolume(int,int,java.lang.String)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void run()>:<public>:<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent:java.lang.Runnable>
<android.widget.StackView: void advance()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.service.dreams.DreamService: void wakeUp(boolean)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaRouter.Static: void onDisplayRemoved(int)>:<public>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.preference.PreferenceFragment: void postBindPreferences()>:<private>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void stopListening(android.os.IBinder,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.widget.Editor.SelectionModifierCursorController: void initDrawables()>:<private>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.view.InputFilter: void <init>(android.os.Looper)>:<public>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.hsm.HwSystemManager.HsmDefImpl: void setOutputFile(android.media.MediaRecorder,long,long)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.widget.HwAbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSessionLegacyHelper: android.graphics.Bitmap scaleBitmapIfTooBig(android.graphics.Bitmap,int,int)>:<private static>:<android.media.session.MediaSessionLegacyHelper>
<android.test.PerformanceTestCase: boolean isPerformanceOnly()>:<public abstract>:<android.test.PerformanceTestCase>
<android.view.MenuInflater.MenuState: char getShortcut(java.lang.String)>:<private>:<android.view.MenuInflater.MenuState>
<android.gesture.Gesture: long getID()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.widget.MediaController: int access.500(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView.GLThread: void requestReleaseEglContextLocked()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>:<public>:<android.accounts.AccountManager>
<android.widget.DatePickerCalendarDelegate: int getMinMonth()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.IWindowSessionCallback.Stub.Proxy: void onAnimatorScaleChanged(float)>:<public>:<android.view.IWindowSessionCallback.Stub.Proxy:android.view.IWindowSessionCallback>
<android.media.AudioService.SoundPoolCallback: void <init>(android.media.AudioService)>:<private>:<android.media.AudioService.SoundPoolCallback:android.media.SoundPool.OnLoadCompleteListener>
<android.view.DragEvent: android.content.ClipData getClipData()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.media.projection.MediaProjectionManager.CallbackDelegate.1: void run()>:<public>:<android.media.projection.MediaProjectionManager.CallbackDelegate.1:java.lang.Runnable>
<android.widget.ExpandableListView: boolean isEmuiStyle()>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.PlaybackState: long access.500(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.ViewFlipper: boolean isFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManager.LayoutParams: void <clinit>()>:<static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.appwidget.AppWidgetHostView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: boolean access.2000(android.view.ViewRootImpl.SyntheticTouchNavigationHandler,long)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.widget.ExpandableListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioService.RmtSbmxFullVolDeathHandler: void forget()>:<>:<android.media.AudioService.RmtSbmxFullVolDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.CCParser.CCMemory: void writePAC(android.media.CCParser.PAC)>:<>:<android.media.CCParser.CCMemory>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setDate(long,boolean,boolean)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.textservice.SpellCheckerSession: void handleOnGetSentenceSuggestionsMultiple(android.view.textservice.SentenceSuggestionsInfo[])>:<private>:<android.view.textservice.SpellCheckerSession>
<android.view.WindowManagerPolicy.WindowState: boolean getGivenInsetsPendingLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioSystem: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])>:<public static native>:<android.media.AudioSystem>
<android.widget.RadioGroup: void clearCheck()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>:<public final>:<android.accounts.AbstractAccountAuthenticator>
<android.media.SubtitleTrack.CueList.EntryIterator: void remove()>:<public>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.media.IMediaHTTPConnection.Stub.Proxy: void disconnect()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.media.AudioService: void access.5100(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: void onInputStateChanged(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.media.MediaDrm: void <clinit>()>:<static>:<android.media.MediaDrm>
<android.service.notification.ZenModeConfig.1: void <init>()>:<>:<android.service.notification.ZenModeConfig.1:android.os.Parcelable.Creator>
<android.accounts.IAccountAuthenticatorResponse: void onRequestContinued()>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.widget.Editor.PositionListener: int getPositionY()>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void <init>(android.service.trust.TrustAgentService,android.service.trust.TrustAgentService.1)>:<>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.view.KeyEvent: boolean isDown()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvInputService.Session.10: void <init>(android.media.tv.TvInputService.Session,int,int,int,int)>:<>:<android.media.tv.TvInputService.Session.10:java.lang.Runnable>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioTrack>
<android.filterpacks.imageproc.AutoFixFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.imageproc.SaturateFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.PointerIcon.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.PointerIcon.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintAttributes: boolean isPortrait()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter build()>:<public>:<android.security.KeyStoreParameter.Builder>
<android.view.ViewRootImpl.W: void dispatchWallpaperOffsets(float,float,float,float,boolean)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: java.lang.String getLocale()>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.media.projection.IMediaProjectionManager: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.widget.ListView: void addFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.CursorAnchorInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.CursorAnchorInfo.1:android.os.Parcelable.Creator>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofObject(java.lang.Object[])>:<public static transient>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.animation.OvershootInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask access.100(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.widget.SearchView: android.graphics.drawable.Drawable getIcon(android.content.Context)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.session.PlaybackState: long access.1100(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.SurfaceControl: void nativeSetWindowCrop(long,int,int,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.view.GLES20Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.EGLLogWrapper: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.service.notification.INotificationListener: void onNotificationPosted(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.view.KeyEvent: char getDisplayLabel()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.accounts.ChooseTypeAndAccountActivity.1: void <init>(android.accounts.ChooseTypeAndAccountActivity)>:<>:<android.accounts.ChooseTypeAndAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glBeginQuery(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.service.persistentdata.IPersistentDataBlockService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub:android.os.Binder,android.service.persistentdata.IPersistentDataBlockService>
<android.media.AudioManager: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.view.View: boolean hasFocusable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.RenderNode: boolean setStaticMatrix(android.graphics.Matrix)>:<public>:<android.view.RenderNode>
<android.media.MediaCodec.BufferMap: void <init>()>:<private>:<android.media.MediaCodec.BufferMap>
<android.media.session.ISessionController.Stub.Proxy: android.media.session.ParcelableVolumeInfo getVolumeAttributes()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.IWindowManager: void statusBarVisibilityChanged(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.filterpacks.imageproc.DocumentaryFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.media.AudioService: android.media.AudioService.SoundPoolCallback access.1800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: boolean hasAncestorThatBlocksDescendantFocusOuter()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList)>:<private>:<android.view.FocusFinder>
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String)>:<private>:<android.opengl.GLSurfaceView.EglHelper>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void <init>()>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputManager: java.util.List getBlockedRatings()>:<public>:<android.media.tv.TvInputManager>
<android.media.tv.ITvInputManager: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.RenderNodeAnimator: void setStartValue(float)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.projection.MediaProjectionInfo: int describeContents()>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: void initialize(android.widget.TextView)>:<public>:<android.widget.AccessibilityIterators.PageTextSegmentIterator:android.widget.AccessibilityIterators.LineTextSegmentIterator>
<android.preference.ListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.ListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.AudioFormat: int getPropertySetMask()>:<public>:<android.media.AudioFormat>
<android.view.View: boolean getFilterTouchesWhenObscured()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.Static.1.1: void run()>:<public>:<android.media.MediaRouter.Static.1.1:java.lang.Runnable>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: boolean isScrollbarFadingEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ThreadedRenderer: long getJankDrawData(int)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: int write(byte[])>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.accounts.AccountManagerResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.preference.DialogPreference.SavedState: void <clinit>()>:<static>:<android.preference.DialogPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.RenderNode: boolean nSetScaleX(long,float)>:<private static native>:<android.view.RenderNode>
<android.database.DatabaseUtils: int cursorPickFillWindowStartPosition(int,int)>:<public static>:<android.database.DatabaseUtils>
<android.widget.ListView: void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RelativeLayout: void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.service.wallpaper.IWallpaperConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub:android.os.Binder,android.service.wallpaper.IWallpaperConnection>
<android.widget.HwAbsListView: void setStableItemHeight(android.widget.OverScroller,android.widget.AbsListView.FlingRunnable)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.textservice.SpellCheckerSession: java.lang.String access.200()>:<static>:<android.view.textservice.SpellCheckerSession>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.UnsupportedSchemeException: void <init>(java.lang.String)>:<public>:<android.media.UnsupportedSchemeException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.media.SubtitleTrack.CueList: void add(android.media.SubtitleTrack.Cue)>:<public>:<android.media.SubtitleTrack.CueList>
<android.animation.Keyframe.ObjectKeyframe: void <init>(float,java.lang.Object)>:<>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextCopyFinishedListener: void copyDone()>:<public abstract>:<android.widget.TextCopyFinishedListener>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowIndex()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.security.KeyStoreParameter.Builder: void <init>(android.content.Context)>:<public>:<android.security.KeyStoreParameter.Builder>
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.MediaController.3: void <init>(android.widget.MediaController)>:<>:<android.widget.MediaController.3:android.os.Handler>
<android.widget.AbsListView.RecycleBin: android.view.View getTransientStateView(int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.print.ILayoutResultCallback.Stub: void <init>()>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.media.session.PlaybackState.1: void <init>()>:<>:<android.media.session.PlaybackState.1:android.os.Parcelable.Creator>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.media.RemoteControlClient: void access.700(android.media.RemoteControlClient,int,long)>:<static>:<android.media.RemoteControlClient>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setEnabled(boolean)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.projection.MediaProjection: void unregisterCallback(android.media.projection.MediaProjection.Callback)>:<public>:<android.media.projection.MediaProjection>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.view.MenuItem: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.MenuItem>
<android.filterpacks.imageproc.VignetteFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<android.service.fingerprint.FingerprintManager.2: void onEnrollResult(int,int)>:<public>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.widget.GridLayout.2: void <init>()>:<>:<android.widget.GridLayout.2:android.widget.GridLayout.Alignment>
<android.service.dreams.DreamService.DreamServiceWrapper.2: void run()>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper.2:java.lang.Runnable>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.Display: int getMaximumSizeDimension()>:<public>:<android.view.Display>
<android.preference.MultiSelectListPreference: boolean access.076(android.preference.MultiSelectListPreference,int)>:<static>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.FastScroller: void updateLongList(int,int)>:<private>:<android.widget.FastScroller>
<android.animation.Animator: void setupEndValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.media.DecoderCapabilities: java.util.List getVideoDecoders()>:<public static>:<android.media.DecoderCapabilities>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onMagnifedBoundsChanged(android.graphics.Region)>:<public abstract>:<android.view.WindowManagerInternal.MagnificationCallbacks>
<android.filterpacks.videosrc.CameraSource: void <clinit>()>:<static>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.ProgressBar: void access.200(android.widget.ProgressBar,int,float,boolean,boolean,boolean)>:<static>:<android.widget.ProgressBar:android.view.View>
<android.view.SurfaceControl: void nativeSetAnimationTransaction()>:<private static native>:<android.view.SurfaceControl>
<android.service.trust.ITrustAgentServiceCallback.Stub: android.service.trust.ITrustAgentServiceCallback asInterface(android.os.IBinder)>:<public static>:<android.service.trust.ITrustAgentServiceCallback.Stub:android.os.Binder,android.service.trust.ITrustAgentServiceCallback>
<android.view.Window: android.view.Window.Callback getCallback()>:<public final>:<android.view.Window>
<android.media.projection.MediaProjectionInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.projection.MediaProjectionInfo.1:android.os.Parcelable.Creator>
<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: android.graphics.Paint getDebugPaint()>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent.1: android.view.MotionEvent[] newArray(int)>:<public>:<android.view.MotionEvent.1:android.os.Parcelable.Creator>
<android.media.TtmlRenderingWidget: void onDetachedFromWindow()>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.ScrollView: void fling(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowContentFrameStats: void <init>(android.os.Parcel)>:<private>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.netdetect.HwCustNetDetectServiceImpl: boolean access.500(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.service.notification.INotificationListener.Stub: android.os.IBinder asBinder()>:<public>:<android.service.notification.INotificationListener.Stub:android.os.Binder,android.service.notification.INotificationListener>
<android.widget.GridLayout: void checkLayoutParams(android.widget.GridLayout.LayoutParams,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>:<public>:<android.widget.Scroller>
<android.media.MediaRouter: void <clinit>()>:<static>:<android.media.MediaRouter>
<android.media.AudioSystem: int checkAudioFlinger()>:<public static native>:<android.media.AudioSystem>
<android.media.AudioPort: android.media.AudioGain[] gains()>:<public>:<android.media.AudioPort>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.browse.MediaBrowser.ServiceCallbacks: void onConnectFailed()>:<public>:<android.media.browse.MediaBrowser.ServiceCallbacks:android.service.media.IMediaBrowserServiceCallbacks.Stub,android.os.Binder>
<android.test.InstrumentationTestCase: void tearDown()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.RemoteViewsAdapter.6: void run()>:<public>:<android.widget.RemoteViewsAdapter.6:java.lang.Runnable>
<android.view.RenderNode: boolean nSetPivotY(long,float)>:<private static native>:<android.view.RenderNode>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.view.ViewRootImpl.ViewRootHandler: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.ViewRootHandler:android.os.Handler>
<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)>:<public>:<android.view.WindowManagerGlobal>
<android.widget.ZoomButtonsController: void dismissControlsDelayed(int)>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.Switch: void setSwitchTypefaceByIndex(int,int)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.preference.Preference: void onClick()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.ExifInterface: long[] getThumbnailRangeNative(java.lang.String)>:<private native>:<android.media.ExifInterface>
<androidhwext.R.styleable: void <clinit>()>:<static>:<androidhwext.R.styleable>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getOverscanFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.View: float getPivotX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvInputInfo: boolean equals(java.lang.Object)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.service.textservice.SpellCheckerService.Session: void onClose()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.media.MediaCodec.CryptoInfo: void <init>()>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.view.View: int getMinimumWidth()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: int getRawTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.KeyPairGeneratorSpec: java.util.Date getStartDate()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.InflateException: void <init>()>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewGroup.MarginLayoutParams: void resolveLayoutDirection(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.KeyEvent: int getKeyboardDevice()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrinterDiscoverySession.SessionHandler: void handleMessage(android.os.Message)>:<public>:<android.print.PrinterDiscoverySession.SessionHandler:android.os.Handler>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void onScroll(android.widget.AbsListView,int,int,int)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ListView.ArrowScrollFocusResult: void populate(int,int)>:<>:<android.widget.ListView.ArrowScrollFocusResult>
<android.view.MotionEvent: float getToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.ObjectAnimator: void setAutoCancel(boolean)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.print.IPrintManager.Stub.Proxy: java.util.List getInstalledPrintServices(int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)>:<public>:<android.view.textservice.TextServicesManager>
<android.widget.Editor: void destroyDisplayListsData()>:<private>:<android.widget.Editor>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setMinDate(long)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.session.MediaSession: android.media.VolumeProvider access.1800(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.accounts.CantAddAccountActivity: void onCancelButtonClicked(android.view.View)>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES10: void glDisable(int)>:<public static native>:<android.opengl.GLES10>
<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.AbstractWindowedCursor: boolean isLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<android.preference.PreferenceGroupAdapter: void setHighlighted(int)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean usingNumericMonths()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.preference.DialogPreference.SavedState.1: android.preference.DialogPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.DialogPreference.SavedState.1:android.os.Parcelable.Creator>
<android.widget.TextView: boolean isTextEditable()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.PopupMenu: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.tv.TvInputHardwareInfo.1: android.media.tv.TvInputHardwareInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvInputHardwareInfo.1:android.os.Parcelable.Creator>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnActionExpandListener>
<android.media.session.ISession.Stub.Proxy: void setMetadata(android.media.MediaMetadata)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.fingerprint.IFingerprintService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.fingerprint.IFingerprintService.Stub:android.os.Binder,android.service.fingerprint.IFingerprintService>
<android.media.IAudioService.Stub.Proxy: void setBluetoothA2dpOn(boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.Spinner.DropDownAdapter: boolean hasStableIds()>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.MediaRouter.Static: void publishClientDiscoveryRequest()>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void sendKeyUp(long)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.widget.SimpleMonthAdapter: void setCalendarTextColor(android.content.res.ColorStateList)>:<>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.media.MediaFocusControl: void startVoiceBasedInteractions(boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>:<public final>:<android.widget.ProgressBar:android.view.View>
<android.service.trust.TrustAgentService: void onUnlockAttempt(boolean)>:<public>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.ITvInputManager.Stub.Proxy: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.EditText: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.AdapterViewAnimator.SavedState: void <init>(android.os.Parcel)>:<private>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins readMargins(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.session.MediaSession.Callback: boolean onMediaButtonEvent(android.content.Intent)>:<public>:<android.media.session.MediaSession.Callback>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.RemoteController.RcDisplay: void setArtwork(int,android.graphics.Bitmap)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>:<private static>:<android.media.Ringtone>
<android.view.IWindowFocusObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindowFocusObserver.Stub:android.os.Binder,android.view.IWindowFocusObserver>
<android.view.View: int computeVerticalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.AccelerateDecelerateInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.widget.ExpandableListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)>:<>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IAudioService: void setBluetoothScoOn(boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.audiofx.Visualizer: void release()>:<public>:<android.media.audiofx.Visualizer>
<android.printservice.IPrintService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.service.fingerprint.FingerprintUtils: int[] getFingerprintIdsForUser(android.content.ContentResolver,int)>:<public static>:<android.service.fingerprint.FingerprintUtils>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void updateDate(int,int,int)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.printservice.IPrintServiceClient: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.widget.RemoteViews.3: void <init>()>:<>:<android.widget.RemoteViews.3:android.os.Parcelable.Creator>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>:<protected>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec: int getFlags()>:<>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.view.MotionEvent: float getOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.preference.SeekBarVolumizer: void onStartSample()>:<private>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.WindowManagerPolicy.WindowState: int getSurfaceLayer()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.print.PrintJobInfo: void setPrinterName(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.RemoteController.MetadataEditor: void <init>(android.media.RemoteController)>:<protected>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.hsm.HwMediaPermWrapper: void confirmCameraPermission()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.view.WindowManagerPolicy: int rotationForOrientationLw(int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.DayPickerView: void setController(android.widget.DatePickerController)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.session.PlaybackState.Builder: void <init>()>:<public>:<android.media.session.PlaybackState.Builder>
<android.view.LayoutInflater.BlinkLayout: void makeBlink()>:<private>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void onSubmitQuery()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.tv.TvStreamConfig.Builder: void <init>()>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.media.projection.MediaProjectionManager: void addCallback(android.media.projection.MediaProjectionManager.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjectionManager>
<android.database.CursorWindow: boolean nativeAllocRow(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.imageproc.AlphaBlendFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.AlphaBlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.view.animation.LayoutAnimationController: void setOrder(int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.Choreographer.FrameDisplayEventReceiver: void <init>(android.view.Choreographer,android.os.Looper)>:<public>:<android.view.Choreographer.FrameDisplayEventReceiver:android.view.DisplayEventReceiver,java.lang.Runnable>
<android.view.SurfaceView: boolean isAPSReady()>:<private>:<android.view.SurfaceView:android.view.View>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void sendKeyDownOrRepeat(long,int,int)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.Window: boolean getAllowReturnTransitionOverlap()>:<public>:<android.view.Window>
<android.media.AudioService: void access.7400(android.media.AudioService,int,int,java.lang.String)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onTrackSelected(int,java.lang.String)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.MediaPlayer: int getVideoWidth()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.tv.TvView: boolean access.1702(android.media.tv.TvView,boolean)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.database.Cursor: boolean isFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.RenderNode: int nGetDebugSize(long)>:<private static native>:<android.view.RenderNode>
<android.widget.SearchView: java.lang.String getActionKeyMessage(android.database.Cursor,android.app.SearchableInfo.ActionKeyInfo)>:<private static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.audiofx.LoudnessEnhancer: float getTargetGain()>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.view.DisplayInfo: int getNaturalHeight()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.MotionEvent: float getXPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvView.1: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.media.tv.TvView.1:android.view.SurfaceHolder.Callback>
<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener: void onRecognitionResumed()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener:android.hardware.soundtrigger.IRecognitionStatusCallback.Stub>
<android.view.WindowContentFrameStats.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.WindowContentFrameStats.1:android.os.Parcelable.Creator>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.KeyEvent: java.lang.String metaStateToString(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.netdetect.HwCustNetDetectServiceImpl.2: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.2:android.content.BroadcastReceiver>
<android.widget.GridView: int getRequestedHorizontalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IRemoteVolumeObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteVolumeObserver.Stub:android.os.Binder,android.media.IRemoteVolumeObserver>
<android.service.dreams.DreamService: void <init>()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setCalendarViewShown(boolean)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.textservice.SpellCheckerInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int compareTo(java.lang.Object)>:<public volatile>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.view.ViewRootImpl: void removeSendWindowContentChangedCallback()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.audiofx.Virtualizer: short getRoundedStrength()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.View: android.graphics.Insets computeOpticalInsets()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewTreeObserver: void dispatchOnWindowFocusChange(boolean)>:<final>:<android.view.ViewTreeObserver>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RelativeLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.preference.Preference: boolean getShouldDisableView()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getSelectedDay()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.IWindow.Stub.Proxy: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.service.voice.IVoiceInteractionService.Stub: void <init>()>:<public>:<android.service.voice.IVoiceInteractionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionService>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.media.VolumeProvider: void setCallback(android.media.VolumeProvider.Callback)>:<public>:<android.media.VolumeProvider>
<android.view.ThreadedRenderer.AtlasInitializer: void init(android.content.Context,long)>:<>:<android.view.ThreadedRenderer.AtlasInitializer>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaRouter.Callback: void <init>()>:<public>:<android.media.MediaRouter.Callback>
<android.widget.ActionMenuView: android.view.Menu getMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Nsd: void unBlockAdView(android.view.View)>:<private static>:<android.view.Nsd>
<android.view.ViewRootImpl: void registerAnimatingRenderNode(android.view.RenderNode)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.NumberPicker.3: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.3:android.view.View.OnFocusChangeListener>
<android.print.PrintJob: void restart()>:<public>:<android.print.PrintJob>
<android.view.ScaleGestureDetector.1: boolean onDoubleTap(android.view.MotionEvent)>:<public>:<android.view.ScaleGestureDetector.1:android.view.GestureDetector.SimpleOnGestureListener>
<android.preference.Preference: boolean persistString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.animation.AnimatorSet.Node: java.lang.Object clone()>:<public volatile>:<android.animation.AnimatorSet.Node:java.lang.Cloneable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glBlendFunc(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor.ActionPopupWindow: int clipVertically(int)>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.Surface: void <init>(long)>:<private>:<android.view.Surface:android.os.Parcelable>
<android.view.SurfaceControl: void setLayerStack(int)>:<public>:<android.view.SurfaceControl>
<android.view.SurfaceControl: void nativeDestroy(long)>:<private static native>:<android.view.SurfaceControl>
<android.widget.FastScroller.6: void <init>(java.lang.String)>:<>:<android.widget.FastScroller.6:android.util.IntProperty>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES10: void glFinish()>:<public static native>:<android.opengl.GLES10>
<android.widget.Switch: boolean getSplitTrack()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLErrorWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.HwAbsListView.LeveledView: void <init>(android.view.View,int,java.lang.String)>:<public>:<android.widget.HwAbsListView.LeveledView>
<android.media.SubtitleData: long getStartTimeUs()>:<public>:<android.media.SubtitleData>
<android.view.ViewRootImpl: void handleDispatchSystemUiVisibilityChanged(android.view.ViewRootImpl.SystemUiVisibilityInfo)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.session.PlaybackState: int getRccControlFlagsFromActions(long)>:<public static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.Editor.ActionPopupWindow: int getTextOffset()>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.AudioRecord.NativeEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.AudioRecord.NativeEventHandler:android.os.Handler>
<android.media.session.MediaSession.CallbackStub: void onMediaButton(android.content.Intent,int,android.os.ResultReceiver)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.hsm.HwMediaPermWrapper: boolean confirmCameraPermissionWithResult()>:<private>:<android.hsm.HwMediaPermWrapper>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.ITvInputClient: void onSessionCreated(java.lang.String,android.os.IBinder,android.view.InputChannel,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.preference.PreferenceActivity: void showBreadCrumbs(android.preference.PreferenceActivity.Header)>:<>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.database.IContentObserver: void onChange(boolean,android.net.Uri,int)>:<public abstract>:<android.database.IContentObserver:android.os.IInterface>
<android.view.ViewTreeObserver: void checkIsAlive()>:<private>:<android.view.ViewTreeObserver>
<android.database.sqlite.SQLiteConnection: int nativeExecuteForChangedRowCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.Metadata: void <init>()>:<public>:<android.media.Metadata>
<android.view.View.6: java.lang.Float get(android.view.View)>:<public>:<android.view.View.6:android.util.FloatProperty>
<android.view.View: int getPaddingLeft()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.ColorTemperatureFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>:<public>:<android.view.ViewStub:android.view.View>
<android.view.animation.Animation: boolean getFillBefore()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFailed(java.lang.CharSequence)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources.Theme,org.xmlpull.v1.XmlPullParser,float)>:<private static>:<android.animation.AnimatorInflater>
<android.view.MotionEvent.PointerCoords: android.view.MotionEvent.PointerCoords[] createArray(int)>:<public static>:<android.view.MotionEvent.PointerCoords>
<android.print.PrintJob: boolean isFailed()>:<public>:<android.print.PrintJob>
<android.media.MediaScanner.PlaylistEntry: void <init>(android.media.MediaScanner.1)>:<>:<android.media.MediaScanner.PlaylistEntry>
<android.media.TtmlRenderingWidget: void setSize(int,int)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IMediaHTTPService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaHTTPService.Stub.Proxy:android.media.IMediaHTTPService>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.SearchView: void setOnSearchClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.PrinterCapabilitiesInfo: void writeMargins(android.print.PrintAttributes.Margins,android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.RemoteDisplay.2: void run()>:<public>:<android.media.RemoteDisplay.2:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.Preference: void setPersistent(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.InputEvent: void prepareForReuse()>:<protected>:<android.view.InputEvent:android.os.Parcelable>
<android.printservice.IPrintService: void validatePrinters(java.util.List)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.opengl.GLES20: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioFormat: int getSampleRate()>:<public>:<android.media.AudioFormat>
<android.widget.CalendarView.LegacyCalendarViewDelegate: android.widget.ListView access.1900(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.TimedText: void readHighlight(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.widget.FastScroller.4: void setValue(android.view.View,int)>:<public>:<android.widget.FastScroller.4:android.util.IntProperty>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onQueueTitleChanged(java.lang.CharSequence)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: void onScreenStateChanged(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.DreamService: void applySystemUiVisibilityFlags(int,int)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.View: void resetPaddingToInitialValues()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.DrawRectFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.view.SurfaceControl: int getActiveConfig(android.os.IBinder)>:<public static>:<android.view.SurfaceControl>
<android.media.AudioPort: java.lang.String toString()>:<public>:<android.media.AudioPort>
<android.accounts.AbstractAccountAuthenticator: void access.100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>:<static>:<android.accounts.AbstractAccountAuthenticator>
<android.view.WindowManagerPolicy.WindowState: boolean isGoneForLayoutLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.security.IKeystoreService.Stub.Proxy: int reset()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.ListPopupWindow.1: void <init>(android.widget.ListPopupWindow,android.view.View)>:<>:<android.widget.ListPopupWindow.1:android.widget.ListPopupWindow.ForwardingListener>
<android.view.ViewRootImpl: void recycleQueuedInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.IRemoteControlClient: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.view.ThreadedRenderer: void nFence(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.VideoView: int access.100(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.database.sqlite.SQLiteDatabaseConfiguration: boolean isInMemoryDb()>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.filterpacks.imageproc.CropRectFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.view.View: int getHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.KeyCharacterMap.FallbackAction: android.view.KeyCharacterMap.FallbackAction obtain()>:<public static>:<android.view.KeyCharacterMap.FallbackAction>
<android.view.MenuItem: android.view.ActionProvider getActionProvider()>:<public abstract>:<android.view.MenuItem>
<android.view.View.4: void <init>(java.lang.String)>:<>:<android.view.View.4:android.util.FloatProperty>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Editor.InsertionHandleView: void onHandleMovedOuter()>:<protected>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.widget.CalendarView: long getDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaMetadata.Builder: void <init>()>:<public>:<android.media.MediaMetadata.Builder>
<android.media.AudioManager: boolean isWiredHeadsetOn()>:<public>:<android.media.AudioManager>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.Editor: boolean canCut()>:<protected>:<android.widget.Editor>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder type(int)>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.preference.Preference: void registerDependency()>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.animation.PropertyValuesHolder: void nCallMultipleFloatMethod(java.lang.Object,long,float[])>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>:<public static native>:<android.opengl.EGL14>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.HardwareRenderer: long getJankDrawData(int)>:<abstract>:<android.view.HardwareRenderer>
<android.view.View: int getDrawingCacheBackgroundColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IWindowManager: void enableScreenIfNeeded()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.ScrollView: void onDetachedFromWindow()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.voice.VoiceInteractionSession: void onAbortVoice(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.textservice.SpellCheckerSession.1: void handleMessage(android.os.Message)>:<public>:<android.view.textservice.SpellCheckerSession.1:android.os.Handler>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Object)>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.widget.TextView: void setText(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.AudioManagerInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public abstract>:<android.media.AudioManagerInternal>
<android.widget.RadialTimePickerView: int getIsTouchingAmOrPm(float,float)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.TextView: android.content.UndoManager getUndoManager()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowManagerPolicy: void getContentRectLw(android.graphics.Rect)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor.PositionListener: void <init>(android.widget.Editor,android.widget.Editor.1)>:<>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.GLWrapper access.600(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.PointerIcon: android.graphics.Bitmap getBitmap()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.widget.PopupMenu.1: boolean onForwardingStarted()>:<protected>:<android.widget.PopupMenu.1:android.widget.ListPopupWindow.ForwardingListener>
<android.widget.DayPickerView: int access.200()>:<static>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.ViewRootImpl.AsyncInputStage: void defer(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.media.tv.TvContentRatingSystemInfo: void <init>(android.net.Uri,android.content.pm.ApplicationInfo)>:<private>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.media.tv.ITvInputClient.Stub.Proxy: void onVideoAvailable(int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.print.PrintJobInfo: int getAppId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.TextView.ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.media.ImageReader: android.media.Image acquireNextImageNoThrowISE()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: void revokeTrust()>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.widget.GridLayout.3: int getAlignmentValue(android.view.View,int,int)>:<public>:<android.widget.GridLayout.3:android.widget.GridLayout.Alignment>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: void <init>()>:<>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES30: long glFenceSync(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.SearchView: void onDetachedFromWindow()>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.service.notification.ZenModeConfig: boolean isValidSleepMode(java.lang.String)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.AudioService.ScoClient: void <init>(android.media.AudioService,android.os.IBinder)>:<>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.media.SubtitleTrack.CueList: java.util.SortedMap access.200(android.media.SubtitleTrack.CueList)>:<static>:<android.media.SubtitleTrack.CueList>
<android.media.MediaExtractor: int getSampleFlags()>:<public native>:<android.media.MediaExtractor>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.MediaRouter.Callback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.view.SurfaceSession: void <init>()>:<public>:<android.view.SurfaceSession>
<android.print.PrintAttributes.Resolution: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Resolution>
<android.view.ViewGroup: boolean damageChildDeferred(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: boolean isMultilineInputType(int)>:<private static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: android.view.MotionEvent createFromParcelBody(android.os.Parcel)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.Account.1: android.accounts.Account[] newArray(int)>:<public>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub: void <init>()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnection>
<android.media.MediaRouter.Static: void onDisplayChanged(int)>:<public>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void <init>(android.widget.RadioGroup)>:<private>:<android.widget.RadioGroup.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View.AttachInfo.Callbacks: boolean performHapticFeedback(int,boolean)>:<public abstract>:<android.view.View.AttachInfo.Callbacks>
<android.media.tv.ITvInputSession: void relayoutOverlayView(android.graphics.Rect)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.view.View.14: void setValue(android.view.View,float)>:<public>:<android.view.View.14:android.util.FloatProperty>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.media.tv.TvInputService.HardwareSession: android.os.Handler access.1000(android.media.tv.TvInputService.HardwareSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.view.IWindowSession.Stub.Proxy: int add(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.tv.ITvInputManager: java.util.List getTvInputList(int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.widget.ListView: boolean areFooterDividersEnabled()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadDrawable(android.content.Context,int,int,boolean)>:<private>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.Window: boolean haveDimAmount()>:<protected>:<android.view.Window>
<android.widget.Editor.ActionPopupWindow: void hide()>:<public volatile>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.ProgressBar: void refreshProgress(int,float,boolean,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.view.View: boolean isFocused()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridView: boolean pageScroll(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine.1: void <init>(android.service.wallpaper.WallpaperService.Engine)>:<>:<android.service.wallpaper.WallpaperService.Engine.1:android.content.BroadcastReceiver>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.service.wallpaper.WallpaperService.Engine.2: void <init>(android.service.wallpaper.WallpaperService.Engine)>:<>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.accounts.AccountManager.12: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.app.Activity,android.os.Bundle)>:<>:<android.accounts.AccountManager.12:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.view.IInputFilter.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IInputFilter.Stub:android.os.Binder,android.view.IInputFilter>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long,long,long)>:<public static final>:<android.media.tv.TvContract>
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.AlphaBlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.CCParser: void parse(byte[])>:<>:<android.media.CCParser>
<android.widget.TextClock: void unregisterObserver()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: int access.1700(android.view.ViewRootImpl.SyntheticTouchNavigationHandler)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.ActionProvider: boolean onPerformDefaultAction()>:<public>:<android.view.ActionProvider>
<android.media.WebVttParser: java.util.Vector access.1100(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: android.print.PrintManager.PrintJobStateChangeListener getListener()>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.animation.TimeInterpolator: float getInterpolation(float)>:<public abstract>:<android.animation.TimeInterpolator>
<android.media.tv.TvView.1: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.media.tv.TvView.1:android.view.SurfaceHolder.Callback>
<android.widget.Editor.CorrectionHighlighter: void draw(android.graphics.Canvas,int)>:<public>:<android.widget.Editor.CorrectionHighlighter>
<android.view.IWindowSession.Stub: android.view.IWindowSession asInterface(android.os.IBinder)>:<public static>:<android.view.IWindowSession.Stub:android.os.Binder,android.view.IWindowSession>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler.1: void <init>(android.view.ViewRootImpl.SyntheticTouchNavigationHandler)>:<>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler.1:java.lang.Runnable>
<android.widget.GridView: android.view.View fillFromBottom(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.ISessionCallback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.IWindowFocusObserver: void focusLost(android.os.IBinder)>:<public abstract>:<android.view.IWindowFocusObserver:android.os.IInterface>
<android.widget.Editor.SelectionModifierCursorController: boolean isSelectionStartDragged()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.media.MediaPlayer.2: int addTrack()>:<private>:<android.media.MediaPlayer.2:java.lang.Runnable>
<android.animation.LayoutTransition.1: void <init>(android.animation.LayoutTransition,android.view.ViewGroup)>:<>:<android.animation.LayoutTransition.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar access.100(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.View.11: java.lang.Float get(android.view.View)>:<public>:<android.view.View.11:android.util.FloatProperty>
<android.accounts.IAccountManagerResponse.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.security.KeyStore: long getmtime(java.lang.String)>:<public>:<android.security.KeyStore>
<android.view.RenderNode: float getPivotX()>:<public>:<android.view.RenderNode>
<android.media.tv.TvInputHardwareInfo: int describeContents()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.TtmlNodeListener: void onRootNodeParsed(android.media.TtmlNode)>:<public abstract>:<android.media.TtmlNodeListener>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.database.sqlite.SQLiteConnection: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.View: void setId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IMediaHTTPService.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaHTTPService.Stub:android.os.Binder,android.media.IMediaHTTPService>
<android.view.RenderNode: boolean nSetScaleY(long,float)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: int hashCode()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey>
<android.media.MediaCodecInfo.CodecCapabilities: void <clinit>()>:<static>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.IMediaRouterService.Stub: android.media.IMediaRouterService asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaRouterService.Stub:android.os.Binder,android.media.IMediaRouterService>
<android.view.SurfaceControl: void nativeSetDisplayPowerMode(android.os.IBinder,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.AudioService.SoundPoolListenerThread: void <init>(android.media.AudioService)>:<public>:<android.media.AudioService.SoundPoolListenerThread:java.lang.Thread>
<android.service.fingerprint.IFingerprintService: void remove(android.os.IBinder,int,int)>:<public abstract>:<android.service.fingerprint.IFingerprintService:android.os.IInterface>
<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>:<public>:<android.media.audiofx.AudioEffect>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>:<public>:<android.view.WindowInsets>
<android.view.GLES20Canvas: boolean clipRect(int,int,int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.media.Ringtone: android.net.Uri handleSettingsUri(android.net.Uri)>:<private>:<android.media.Ringtone>
<android.widget.CheckedTextView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.print.IPrintJobStateChangeListener.Stub: android.print.IPrintJobStateChangeListener asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ActionMode.Callback: void onDestroyActionMode(android.view.ActionMode)>:<public abstract>:<android.view.ActionMode.Callback>
<android.database.Cursor: java.lang.String getString(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.animation.LayoutTransition: void setStagger(int,long)>:<public>:<android.animation.LayoutTransition>
<android.media.session.MediaController.CallbackStub: void onQueueChanged(android.content.pm.ParceledListSlice)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.view.ViewRootImpl: void handleDispatchDoneAnimating()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.service.voice.IVoiceInteractionSession: void taskFinished(android.content.Intent,int)>:<public abstract>:<android.service.voice.IVoiceInteractionSession:android.os.IInterface>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.GridLayout: void setRowCount(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession: void dispatchSkipToItem(long)>:<private>:<android.media.session.MediaSession>
<android.media.browse.MediaBrowser: android.service.media.IMediaBrowserServiceCallbacks access.1102(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks)>:<static>:<android.media.browse.MediaBrowser>
<android.widget.Toolbar.SavedState.1: android.widget.Toolbar.SavedState[] newArray(int)>:<public>:<android.widget.Toolbar.SavedState.1:android.os.Parcelable.Creator>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.VolumePreference: void onActivityStop()>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.EncoderCapabilities: int[] getOutputFileFormats()>:<public static>:<android.media.EncoderCapabilities>
<android.media.ImageReader: android.media.ImageReader.OnImageAvailableListener access.400(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.View: boolean isInTouchMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor.HandleView: void updateDrawable()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.tv.TvInputManager.Session.TvInputEventSender: void <init>(android.media.tv.TvInputManager.Session,android.view.InputChannel,android.os.Looper)>:<public>:<android.media.tv.TvInputManager.Session.TvInputEventSender:android.view.InputEventSender>
<android.widget.ScrollView: int computeVerticalScrollOffset()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewConfiguration: int getHoverTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.gesture.GestureOverlayView: void setGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat calcOutputFormatForInput(android.filterfw.core.FrameFormat)>:<private>:<android.filterpacks.imageproc.ImageStitcher:android.filterfw.core.Filter>
<android.view.HardwareRenderer: void stopDrawing()>:<abstract>:<android.view.HardwareRenderer>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>:<public>:<android.view.LayoutInflater>
<android.view.inputmethod.CompletionInfo: int getPosition()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.media.AudioService.VolumeController: boolean suppressAdjustment(int,int)>:<public>:<android.media.AudioService.VolumeController>
<android.view.RenderNodeAnimator: void <clinit>()>:<static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.ViewDebug: java.lang.Object resolveId(android.content.Context,int)>:<static>:<android.view.ViewDebug>
<android.animation.ValueAnimator.AnimationHandler: void <init>()>:<private>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.animation.Keyframe: void <init>()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.Window: void setLayout(int,int)>:<public>:<android.view.Window>
<android.media.AudioService: android.media.AudioService.AudioOrientationEventListener access.9300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLWindowSurfaceFactory access.500(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.SurfaceControl: void nativeSetTransparentRegionHint(long,android.graphics.Region)>:<private static native>:<android.view.SurfaceControl>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.service.notification.ZenModeConfig: boolean isValidCountdownConditionId(android.net.Uri)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String[] computeProjection(java.lang.String[])>:<private>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.accessibility.CaptioningManager: void access.500(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.preference.PreferenceManager: void <init>(android.content.Context)>:<private>:<android.preference.PreferenceManager>
<android.widget.GridLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaCodec: void freeAllTrackedBuffers()>:<private final>:<android.media.MediaCodec>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>:<public>:<android.media.RingtoneManager>
<android.widget.AppSecurityPermissions.MyPermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>:<>:<android.widget.AppSecurityPermissions.MyPermissionGroupInfo:android.content.pm.PermissionGroupInfo,android.content.pm.PackageItemInfo>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>:<public static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.Gallery: int computeHorizontalScrollExtent()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.CCParser.CCMemory: void moveCursorToRow(int)>:<private>:<android.media.CCParser.CCMemory>
<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: void <init>()>:<>:<android.widget.AccessibilityIterators.PageTextSegmentIterator:android.widget.AccessibilityIterators.LineTextSegmentIterator>
<android.view.inputmethod.InputMethodManager: void sendInputEventAndReportResultOnMainLooper(android.view.inputmethod.InputMethodManager.PendingEvent)>:<>:<android.view.inputmethod.InputMethodManager>
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>:<public>:<android.animation.LayoutTransition>
<android.widget.DatePicker: boolean hwValueChange(android.widget.NumberPicker,int,int)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: void setVolumeController(android.media.IVolumeController)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>:<public static>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.animation.AnimatorInflater: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float)>:<private static>:<android.animation.AnimatorInflater>
<android.media.MediaRecorder: void pause()>:<public native>:<android.media.MediaRecorder>
<android.service.notification.NotificationListenerService: void access.400(android.service.notification.NotificationListenerService,android.service.notification.NotificationRankingUpdate)>:<static>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewParent: boolean isLayoutDirectionResolved()>:<public abstract>:<android.view.ViewParent>
<android.view.SurfaceView: com.huawei.android.hwaps.IFpsController access.202(com.huawei.android.hwaps.IFpsController)>:<static>:<android.view.SurfaceView:android.view.View>
<android.media.Utils: android.util.Range factorRange(android.util.Range,long)>:<static>:<android.media.Utils>
<android.media.MediaPlayer: void nativeSetDataSource(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[])>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.TextView: void nullLayouts()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: android.view.View findViewByPredicate(com.android.internal.util.Predicate)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.FlagToString[] flagMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>:<public>:<android.media.FaceDetector.Face>
<android.view.ViewOutlineProvider.2: void getOutline(android.view.View,android.graphics.Outline)>:<public>:<android.view.ViewOutlineProvider.2:android.view.ViewOutlineProvider>
<android.printservice.PrinterDiscoverySession: void addPrinters(java.util.List)>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.service.dreams.DreamService: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaScanner: void postscan(java.lang.String[])>:<public>:<android.media.MediaScanner>
<android.service.media.MediaBrowserService.ServiceBinder: void <init>(android.service.media.MediaBrowserService)>:<private>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.tv.TvStreamConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.view.textservice.SentenceSuggestionsInfo.1: android.view.textservice.SentenceSuggestionsInfo[] newArray(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo.1:android.os.Parcelable.Creator>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.opengl.GLLogWrapper: void logLine(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView.Marquee: boolean shouldDrawGhost()>:<>:<android.widget.TextView.Marquee>
<android.widget.TextView: int getExtendedPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.gesture.Gesture: void <clinit>()>:<static>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.WebVttParser: void eos()>:<public>:<android.media.WebVttParser>
<android.database.sqlite.SQLiteConnectionPool: void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,int,boolean)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.MediaFocusControl: void removeFocusStackEntryForClient(android.os.IBinder)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.Editor.TextModifyOperation.1: android.widget.Editor.TextModifyOperation[] newArray(int)>:<public>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.media.AudioManager: int setHdmiSystemAudioSupported(boolean)>:<public>:<android.media.AudioManager>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.InputEventReceiver: void dispatchBatchedInputEventPending()>:<private>:<android.view.InputEventReceiver>
<android.view.ViewGroup: android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.PrintAttributes: int getColorMode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.ViewGroup.MarginLayoutParams: void setLayoutDirection(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.opengl.EGLLogWrapper: java.lang.String toString(int,int[],int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.MotionEvent.PointerProperties: boolean access.000(android.view.MotionEvent.PointerProperties,android.view.MotionEvent.PointerProperties)>:<static>:<android.view.MotionEvent.PointerProperties>
<android.media.session.MediaController.TransportControls: void skipToPrevious()>:<public>:<android.media.session.MediaController.TransportControls>
<android.media.AudioAttributes.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.AudioAttributes.1:android.os.Parcelable.Creator>
<android.view.SurfaceView: void onMeasure(int,int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.media.session.MediaSession.Callback: void onSkipToQueueItem(long)>:<public>:<android.media.session.MediaSession.Callback>
<android.print.PrintAttributes.Margins: int getLeftMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.view.View: boolean requestAccessibilityFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: int getDeviceForStream(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.IWindowFocusObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindowFocusObserver.Stub.Proxy:android.view.IWindowFocusObserver>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.projection.IMediaProjectionCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.projection.IMediaProjectionCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionCallback>
<android.media.AudioService.SoundPoolCallback: void onLoadComplete(android.media.SoundPool,int,int)>:<public>:<android.media.AudioService.SoundPoolCallback:android.media.SoundPool.OnLoadCompleteListener>
<android.view.InputEventReceiver: void nativeDispose(long)>:<private static native>:<android.view.InputEventReceiver>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.SurfaceControl: void nativeSetLayer(long,int)>:<private static native>:<android.view.SurfaceControl>
<android.widget.Switch: int getThumbScrollRange()>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener: void onError(int)>:<public>:<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener:android.hardware.soundtrigger.IRecognitionStatusCallback.Stub>
<android.media.WebVttParser: float parseFloatPercentage(java.lang.String)>:<public static>:<android.media.WebVttParser>
<android.media.tv.TvInputManager.TvInputCallback: void onInputRemoved(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.inputmethod.CursorAnchorInfo.Builder: float access.800(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: void engineShown(android.service.wallpaper.IWallpaperEngine)>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.media.MediaPlayer: int getDuration()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.RatingBar: android.graphics.drawable.shapes.Shape getDrawableShape()>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.ViewDebug.4: java.lang.Object[] pre()>:<public>:<android.view.ViewDebug.4:android.view.ViewDebug.ViewOperation>
<android.view.ViewRootImpl: void access.700(android.view.ViewRootImpl,android.view.DragEvent)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.PointerIcon: android.view.PointerIcon createCustomIcon(android.graphics.Bitmap,float,float)>:<public static>:<android.view.PointerIcon:android.os.Parcelable>
<android.media.MediaMetadata: void <clinit>()>:<static>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.AudioPort: int hashCode()>:<public>:<android.media.AudioPort>
<android.widget.ZoomControls: boolean hasFocus()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void reorderSpinners()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)>:<>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void setListFooter(android.view.View)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSendToSynthesizer()>:<public>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.media.IAudioService: boolean isHdmiSystemAudioSupported()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,java.lang.String)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.CollapsibleActionView: void onActionViewCollapsed()>:<public abstract>:<android.view.CollapsibleActionView>
<android.widget.Editor: android.graphics.Rect access.1900(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.media.TtmlParser: boolean isEndOfDoc()>:<private>:<android.media.TtmlParser>
<android.filterpacks.imageproc.ResizeFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ResizeFilter:android.filterfw.core.Filter>
<android.media.browse.MediaBrowser: java.lang.String getRoot()>:<public>:<android.media.browse.MediaBrowser>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.media.tv.TvInputInfo.TvInputSettings: java.lang.String getCustomLabel(android.content.Context,java.lang.String,int)>:<private static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.media.projection.IMediaProjection: void start(android.media.projection.IMediaProjectionCallback)>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContentInvalid()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Window: void takeSurface(android.view.SurfaceHolder.Callback2)>:<public abstract>:<android.view.Window>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterpacks.imageproc.SimpleImageFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.view.ViewGroup: void resolvePadding()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onStop()>:<public abstract>:<android.media.MediaTimeProvider.OnMediaTimeListener>
<android.media.MediaRouter.Static: void onDisplayAdded(int)>:<public>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.widget.GridView: android.view.View fillSelection(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.media.tv.TvInputService.Session: void <init>(android.content.Context)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.IRingtonePlayer: void stop(android.os.IBinder)>:<public abstract>:<android.media.IRingtonePlayer:android.os.IInterface>
<android.media.MediaRouter.SimpleCallback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.dreams.DreamService.2: void dump(java.io.PrintWriter)>:<public>:<android.service.dreams.DreamService.2:com.android.internal.util.DumpUtils.Dump>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.printservice.PrintJob: android.printservice.PrintDocument getDocument()>:<public>:<android.printservice.PrintJob>
<android.accounts.AccountManager.3: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String[])>:<>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.media.tv.ITvInputSession: void removeOverlayView()>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.DatePicker: int getDayOfMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfosResult(java.util.List,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.media.tv.TvView: void <clinit>()>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.security.IKeyChainAliasCallback.Stub.Proxy: void alias(java.lang.String)>:<public>:<android.security.IKeyChainAliasCallback.Stub.Proxy:android.security.IKeyChainAliasCallback>
<android.print.IPrintDocumentAdapter.Stub: android.print.IPrintDocumentAdapter asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo: int describeContents()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: android.appwidget.AppWidgetHostView.ParcelableSparseArray createFromParcel(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.view.View: boolean callOnClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean setFrame(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glMaterialx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.RemoteControlClient: android.media.MediaMetadata access.402(android.media.RemoteControlClient,android.media.MediaMetadata)>:<static>:<android.media.RemoteControlClient>
<android.widget.RadialTimePickerView: void setAnimationRadiusMultiplierMinutes(float)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.preference.DialogPreference: void setPositiveButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewParent: boolean canResolveTextDirection()>:<public abstract>:<android.view.ViewParent>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.view.MotionEvent.PointerProperties: android.view.MotionEvent.PointerProperties[] createArray(int)>:<public static>:<android.view.MotionEvent.PointerProperties>
<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>:<private>:<android.view.AccessibilityInteractionController>
<android.preference.SeekBarVolumizer: void muteVolume()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.textservice.SpellCheckerSubtype: java.util.HashMap getExtraValueHashMap()>:<private>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.widget.Editor.SelectionStartHandleView: int getHorizontalGravity(boolean)>:<protected>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.IWindowManager: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.ClosedCaptionTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>:<public>:<android.media.ClosedCaptionTrack:android.media.SubtitleTrack>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.View.8: java.lang.Float get(android.view.View)>:<public>:<android.view.View.8:android.util.FloatProperty>
<android.animation.Animator: java.util.ArrayList getListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.hsm.HwSystemManager.HsmInterface: void setOutputFile(android.media.MediaRecorder,long,long)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.service.notification.ConditionProviderService: android.app.INotificationManager getNotificationInterface()>:<private final>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaScanner.MediaBulkDeleter: void delete(long)>:<public>:<android.media.MediaScanner.MediaBulkDeleter>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.preference.MultiCheckPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.MultiCheckPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.tv.TvInputService.ServiceHandler: void <init>(android.media.tv.TvInputService)>:<private>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.security.IKeystoreService.Stub.Proxy: int generate(java.lang.String,int,int,int,int,byte[][])>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.ZoomButtonsController: android.widget.ZoomButtonsController.OnZoomListener access.600(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.ProgressBar: void initProgressBar()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>:<public>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.RingtoneManager: boolean getIncludeDrm()>:<public>:<android.media.RingtoneManager>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.animation.ArgbEvaluator: void <init>()>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.media.tv.ITvInputClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputClient.Stub:android.os.Binder,android.media.tv.ITvInputClient>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.gesture.Instance: float[] temporalSampler(int,android.gesture.Gesture)>:<private static>:<android.gesture.Instance>
<android.view.ViewOverlay.OverlayViewGroup: void damageChild(android.view.View,android.graphics.Rect)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.SimpleImageFilter: void <init>(java.lang.String,java.lang.String)>:<public>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.view.ViewDebug: void profileViewAndChildren(android.view.View,java.io.BufferedWriter,boolean)>:<private static>:<android.view.ViewDebug>
<android.media.MediaPlayer.TimeProvider: long getEstimatedTime(long,boolean)>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.accessibility.IAccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.view.ViewRootImpl: void <clinit>()>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.SearchView: int getPreferredWidth()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaScanner: boolean access.500(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>:<private>:<android.view.FocusFinder>
<android.view.MotionEvent: boolean addBatch(android.view.MotionEvent)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.ITvInputManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputManager.Stub:android.os.Binder,android.media.tv.ITvInputManager>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLLogWrapper: void glEnable(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.voice.VoiceInteractionSession.Caller: void <init>(java.lang.String,int)>:<>:<android.service.voice.VoiceInteractionSession.Caller>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean isEnabled()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaPlayer: int native_pullBatteryData(android.os.Parcel)>:<public static native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>:<public final>:<android.view.Window>
<android.view.textservice.SpellCheckerInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.textservice.SpellCheckerInfo.1:android.os.Parcelable.Creator>
<android.media.AudioService: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>:<protected static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputEvent: void recycle()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.media.RingtoneManager: java.lang.String constructBooleanTrueWhereClause(java.util.List)>:<private static>:<android.media.RingtoneManager>
<android.widget.Editor.HandleView: void updateSelection(int)>:<protected abstract>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.SoundPool.SoundPoolImpl: void release()>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.IWindowManager: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.View: float getZ()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: java.util.Locale getSpellCheckerLocale()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureOverlayView.FadeOutRunnable: void run()>:<public>:<android.gesture.GestureOverlayView.FadeOutRunnable:java.lang.Runnable>
<android.animation.Keyframe: boolean valueWasSetOnStart()>:<>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.Gallery: void fillToGalleryRight()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.RemoteViews.BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.view.Nsd: void processCase(android.view.HardwareCanvas)>:<public static>:<android.view.Nsd>
<android.media.SubtitleController: void doSelectTrack(android.media.SubtitleTrack)>:<private>:<android.media.SubtitleController>
<android.view.RenderNodeAnimator: void nEnd(long)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.RemoteViews.MutablePair: int hashCode()>:<public>:<android.widget.RemoteViews.MutablePair>
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView.OnCloseListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.PrintDocumentInfo: void <init>()>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDepthMask(boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaMuxer: long nativeSetup(java.io.FileDescriptor,int)>:<private static native>:<android.media.MediaMuxer>
<android.view.View.14: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.14:android.util.FloatProperty>
<android.media.MediaPlayer: int native_invoke(android.os.Parcel,android.os.Parcel)>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.accessibility.AccessibilityCache: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.accessibility.AccessibilityCache>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onRewind()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.animation.Animator.AnimatorListener: void onAnimationStart(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.gesture.Gesture.1: android.gesture.Gesture createFromParcel(android.os.Parcel)>:<public>:<android.gesture.Gesture.1:android.os.Parcelable.Creator>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.ClosedCaptionWidget: void <clinit>()>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.service.voice.VoiceInteractionSession: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.tv.TvInputManager.Session: void createOverlayView(android.view.View,android.graphics.Rect)>:<>:<android.media.tv.TvInputManager.Session>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.TextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.notification.NotificationListenerService.RankingMap: java.lang.String[] getOrderedKeys()>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteConnection: int nativeGetDbLookaside(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.service.media.MediaBrowserService.BrowserRoot: java.lang.String getRootId()>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.CursorAdapter.MyDataSetObserver: void onInvalidated()>:<public>:<android.widget.CursorAdapter.MyDataSetObserver:android.database.DataSetObserver>
<android.widget.TextView.Marquee.3: void doFrame(long)>:<public>:<android.widget.TextView.Marquee.3:android.view.Choreographer.FrameCallback>
<android.widget.HwAbsListView: void onTouchUp(android.view.MotionEvent)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.ViewTreeObserver: void kill()>:<private>:<android.view.ViewTreeObserver>
<android.security.AndroidKeyStore: boolean isCertificateEntry(java.lang.String)>:<private>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.WindowManagerGlobal.1: void onAnimatorScaleChanged(float)>:<public>:<android.view.WindowManagerGlobal.1:android.view.IWindowSessionCallback.Stub,android.os.Binder>
<android.view.IApplicationToken.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IApplicationToken.Stub:android.os.Binder,android.view.IApplicationToken>
<android.view.accessibility.AccessibilityRecord: boolean isFullScreen()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.preference.SeekBarPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.SeekBarPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.session.MediaSession: void setFlags(int)>:<public>:<android.media.session.MediaSession>
<android.media.audiofx.AudioEffect: int command(int,byte[],byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.media.MediaScanner: java.lang.String access.900(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.widget.SearchView: void launchIntent(android.content.Intent)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.ViewConfiguration: int getWindowTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<android.view.ViewGroup.3: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public>:<android.view.ViewGroup.3:android.animation.LayoutTransition.TransitionListener>
<android.preference.PreferenceActivity: void finishPreferencePanel(android.app.Fragment,int,android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.IAudioService: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Menu>
<android.service.notification.Condition.1: void <init>()>:<>:<android.service.notification.Condition.1:android.os.Parcelable.Creator>
<android.media.AudioService: java.lang.Object access.700(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>:<public>:<android.view.TextureView:android.view.View>
<android.media.ThumbnailUtils: void createThumbnailFromEXIF(java.lang.String,int,int,android.media.ThumbnailUtils.SizedThumbnailBitmap)>:<private static>:<android.media.ThumbnailUtils>
<android.media.IAudioService.Stub.Proxy: void unregisterAudioFocusClient(java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void process(android.view.MotionEvent)>:<public>:<android.view.ViewRootImpl.SyntheticTrackballHandler>
<android.widget.VideoView: void toggleMediaControlsVisiblity()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void finishInputLocked()>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.View.MeasureSpec: void <init>()>:<public>:<android.view.View.MeasureSpec>
<android.service.wallpaper.IWallpaperEngine: void dispatchPointer(android.view.MotionEvent)>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.preference.GenericInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>:<public abstract>:<android.preference.GenericInflater>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.filterpacks.base.CallbackFilter.CallbackRunnable: void run()>:<public>:<android.filterpacks.base.CallbackFilter.CallbackRunnable:java.lang.Runnable>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.filterpacks.videosink.MediaRecorderStopException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.View: float getTranslationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.dreams.IDreamService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.service.voice.VoiceInteractionSession.2: void closeSystemDialogs()>:<public>:<android.service.voice.VoiceInteractionSession.2:android.service.voice.IVoiceInteractionSession.Stub,android.os.Binder>
<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.audiofx.BassBoost.Settings: void <init>()>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.LoudnessEnhancer: android.media.audiofx.LoudnessEnhancer.Settings getProperties()>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.ClosedCaptionTrack: void updateView(java.util.Vector)>:<public>:<android.media.ClosedCaptionTrack:android.media.SubtitleTrack>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setTitle(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.widget.RemoteViews.ReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.view.ViewGroup: void internalSetPadding(int,int,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent.PointerProperties)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.FloatKeyframeSet: void <init>(android.animation.Keyframe.FloatKeyframe[])>:<public transient>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.media.CCParser.CCData: android.media.CCParser.StyleCode getMidRow()>:<>:<android.media.CCParser.CCData>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.NumberPicker access.300(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.KeyEvent: int access.076(android.view.KeyEvent,int)>:<static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.OrientationEventListener: void registerListener(android.view.OrientationListener)>:<>:<android.view.OrientationEventListener>
<android.media.session.IActiveSessionsListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.IActiveSessionsListener.Stub.Proxy:android.media.session.IActiveSessionsListener>
<android.widget.AbsListView.RecycleBin: void removeSkippedScrap()>:<>:<android.widget.AbsListView.RecycleBin>
<android.service.media.MediaBrowserService.ServiceBinder.1: void run()>:<public>:<android.service.media.MediaBrowserService.ServiceBinder.1:java.lang.Runnable>
<android.media.session.ISessionCallback.Stub.Proxy: void onNext()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.widget.RatingBar: void setNumStars(int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.DecoderCapabilities.AudioDecoder: void <clinit>()>:<static>:<android.media.DecoderCapabilities.AudioDecoder:java.lang.Enum>
<android.service.voice.VoiceInteractionSession.3: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>:<public>:<android.service.voice.VoiceInteractionSession.3:android.view.ViewTreeObserver.OnComputeInternalInsetsListener>
<android.media.MediaDrm: byte[] decryptNative(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<private static final native>:<android.media.MediaDrm>
<android.view.inputmethod.InputBinding: int getUid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.view.View: void setScaleX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: int getNextFocusLeftId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.IConditionProvider.Stub.Proxy: void onRequestConditions(int)>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>:<public>:<android.gesture.GestureLibrary>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void onMeasure(int,int)>:<protected>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.view.inputmethod.InputMethodSubtype.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.InputMethodSubtype.1:android.os.Parcelable.Creator>
<android.media.IAudioService.Stub.Proxy: void setSpeakerphoneOn(boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaRouter.UserRouteInfo: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean apply(java.lang.Object)>:<public volatile>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>:<public>:<android.view.Display>
<android.widget.TextView: int getMinLines()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.DragEvent.1: android.view.DragEvent[] newArray(int)>:<public>:<android.view.DragEvent.1:android.os.Parcelable.Creator>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityCreated(android.app.Activity,android.os.Bundle)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.session.ISessionControllerCallback: void onQueueChanged(android.content.pm.ParceledListSlice)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.opengl.EGLExt: void <init>()>:<public>:<android.opengl.EGLExt>
<android.view.SurfaceControl: android.graphics.Bitmap nativeScreenshot(android.os.IBinder,android.graphics.Rect,int,int,int,int,boolean,boolean,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.audiopolicy.AudioMix: int getRouteFlags()>:<>:<android.media.audiopolicy.AudioMix>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.service.notification.Condition: android.net.Uri.Builder newId(android.content.Context)>:<public static>:<android.service.notification.Condition:android.os.Parcelable>
<android.service.dreams.DreamService: void setWindowless(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>:<public static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaSession: void dispatchPrevious()>:<private>:<android.media.session.MediaSession>
<android.widget.StackView: void initStackView()>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ZoomButtonsController: android.os.Handler access.100(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.AudioService: boolean access.3900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.ToneGenerator: void stopTone()>:<public native>:<android.media.ToneGenerator>
<android.print.PrinterDiscoverySession: void destroy()>:<public final>:<android.print.PrinterDiscoverySession>
<android.view.InputEventConsistencyVerifier: void ensurePointerCountIsOneForThisAction(android.view.MotionEvent)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.print.IWriteResultCallback: void onWriteStarted(android.os.ICancellationSignal,int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.media.MediaRouter.RouteInfo: void setStatusInt(java.lang.CharSequence)>:<>:<android.media.MediaRouter.RouteInfo>
<android.preference.MultiCheckPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLLogWrapper: void glGenTextures(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouter.Static: android.view.Display[] getAllPresentationDisplays()>:<public>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.Choreographer.CallbackQueue: void <init>(android.view.Choreographer)>:<private>:<android.view.Choreographer.CallbackQueue>
<android.media.CCParser.PAC: java.lang.String toString()>:<public>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.media.AudioManager: void adjustMasterVolume(int,int)>:<public>:<android.media.AudioManager>
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.ViewPropertyAnimator.2: void <init>(android.view.ViewPropertyAnimator)>:<>:<android.view.ViewPropertyAnimator.2:java.lang.Runnable>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postTrackSelected(int,java.lang.String)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.animation.PropertyValuesHolder: void init()>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.GridLayout.Axis: int getMaxIndex()>:<private>:<android.widget.GridLayout.Axis>
<android.widget.NumberPicker.1: void onClick(android.view.View)>:<public>:<android.widget.NumberPicker.1:android.view.View.OnClickListener>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.preference.PreferenceActivity: void switchToHeader(android.preference.PreferenceActivity.Header)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.MediaDrm.CertificateRequest: java.lang.String getDefaultUrl()>:<public>:<android.media.MediaDrm.CertificateRequest>
<android.printservice.PrintJob: boolean hasAdvancedOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.view.HardwareCanvas: void drawRenderNode(android.view.RenderNode)>:<public>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void dump(android.util.Printer)>:<public>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.widget.SearchView: void updateCloseButton()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.Editor.SuggestionsPopupWindow: int clipVertically(int)>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.widget.TextView: void setHint(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.FloatKeyframeSet: android.animation.KeyframeSet clone()>:<public volatile>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.view.KeyCharacterMap: int nativeGetKeyboardType(long)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glFogxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.animation.Animation: void setFillBefore(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.DatePickerCalendarDelegate: void registerOnDateChangedListener(android.widget.OnDateChangedListener)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.ViewStub: void setVisibility(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.RunQueue: void post(java.lang.Runnable)>:<>:<android.view.ViewRootImpl.RunQueue>
<android.opengl.GLES10: void glClear(int)>:<public static native>:<android.opengl.GLES10>
<android.media.SRTRenderer: void <init>(android.content.Context,android.os.Handler)>:<>:<android.media.SRTRenderer:android.media.SubtitleController.Renderer>
<android.view.Window: android.os.Bundle saveHierarchyState()>:<public abstract>:<android.view.Window>
<android.widget.ListView: android.view.View fillFromSelection(int,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isSaveFromParentEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.media.MediaBrowserService.ConnectionRecord: void <init>(android.service.media.MediaBrowserService,android.service.media.MediaBrowserService.1)>:<>:<android.service.media.MediaBrowserService.ConnectionRecord>
<android.media.SoundPool.SoundPoolImpl: android.media.SoundPool.OnLoadCompleteListener access.200(android.media.SoundPool.SoundPoolImpl)>:<static>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.animation.AnimationSet: boolean willChangeBounds()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.animation.PathKeyframes: android.animation.Keyframes.FloatKeyframes createXFloatKeyframes()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.widget.HwAbsListView: void <init>(android.content.Context)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.IWindowManager: void clearForcedDisplaySize(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<androidhwext.R.dimen: void <init>()>:<public>:<androidhwext.R.dimen>
<android.view.RenderNode: boolean getClipToOutline()>:<public>:<android.view.RenderNode>
<android.widget.NumberPicker.OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>:<public abstract>:<android.widget.NumberPicker.OnScrollListener>
<android.media.audiofx.Visualizer: int getWaveForm(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.view.ViewDebug.8: void run()>:<public>:<android.view.ViewDebug.8:java.lang.Runnable>
<android.widget.Editor: void hideCursorControllers()>:<private>:<android.widget.Editor>
<android.widget.TimePickerSpinnerDelegate: void finishKbMode()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.hsm.MediaTransactWrapper: void <clinit>()>:<static>:<android.hsm.MediaTransactWrapper>
<android.database.IContentObserver.Stub: android.database.IContentObserver asInterface(android.os.IBinder)>:<public static>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.view.IWindowManager.Stub.Proxy: int getRotation()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.Editor.Blink: void <init>(android.widget.Editor,android.widget.Editor.1)>:<>:<android.widget.Editor.Blink:android.os.Handler,java.lang.Runnable>
<android.view.WindowManagerGlobal: void trimForeground()>:<public static>:<android.view.WindowManagerGlobal>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.ViewRootImpl: void doTraversal()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLLogWrapper: void glPixelStorei(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Spinner.SpinnerPopup: void setPromptText(java.lang.CharSequence)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo: void initFromParcel(android.os.Parcel)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: void disableSafeMediaVolume()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>:<public abstract>:<android.view.MenuItem>
<android.view.ViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int)>:<public>:<android.widget.RemoteViews.SetRemoteViewsAdapterList:android.widget.RemoteViews.Action>
<android.media.RemoteDisplayState.RemoteDisplayInfo.1: void <init>()>:<>:<android.media.RemoteDisplayState.RemoteDisplayInfo.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onVideoAvailable()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.view.View: java.util.ArrayList getFocusables(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SubtitleTrack: void show()>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.Session: void selectTrack(int,java.lang.String)>:<public>:<android.media.tv.TvInputManager.Session>
<android.widget.ImageView.ScaleType: void <clinit>()>:<static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.media.FocusRequester: boolean hasSameUid(int)>:<>:<android.media.FocusRequester>
<android.view.SurfaceView.2: void <init>(android.view.SurfaceView)>:<>:<android.view.SurfaceView.2:android.view.ViewTreeObserver.OnScrollChangedListener>
<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes build()>:<public>:<android.print.PrintAttributes.Builder>
<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept: void <init>(android.widget.ListPopupWindow.ForwardingListener)>:<private>:<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept:java.lang.Runnable>
<android.widget.TextView: void setExtracting(android.view.inputmethod.ExtractedTextRequest)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioMixPortConfig: void <init>(android.media.AudioMixPort,int,int,int,android.media.AudioGainConfig)>:<>:<android.media.AudioMixPortConfig:android.media.AudioPortConfig>
<android.media.CameraProfile: void <clinit>()>:<static>:<android.media.CameraProfile>
<android.media.ToneGenerator: void finalize()>:<protected>:<android.media.ToneGenerator>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.VideoView.7: void <init>(android.widget.VideoView)>:<>:<android.widget.VideoView.7:android.view.SurfaceHolder.Callback>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.print.PrintJobId: android.print.PrintJobId unflattenFromString(java.lang.String)>:<public static>:<android.print.PrintJobId:android.os.Parcelable>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10Ext>
<android.media.IAudioService.Stub.Proxy: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.tv.TvInputService.Session: android.view.View onCreateOverlayView()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setEnabled(boolean)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.service.trust.ITrustAgentServiceCallback: void setManagingTrust(boolean)>:<public abstract>:<android.service.trust.ITrustAgentServiceCallback:android.os.IInterface>
<android.media.AudioService: boolean isTOPActivity(java.lang.String[])>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.service.media.MediaBrowserService.Result: void onResultSent(java.lang.Object)>:<>:<android.service.media.MediaBrowserService.Result>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getRouteAt(int)>:<public>:<android.media.MediaRouter>
<android.widget.ExpandableListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.BitmapReflectionAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.view.textservice.SpellCheckerSession: void close()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.media.tv.TvInputInfo: int hashCode()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void setResultAndFinish(java.lang.String,java.lang.String)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.tv.TvInputInfo: java.lang.String getId()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.MediaMuxer: void <init>(java.lang.String,int)>:<public>:<android.media.MediaMuxer>
<android.media.tv.TvContentRatingSystemInfo: void <init>(android.os.Parcel)>:<private>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.widget.ExpandableListView: int getFlatListPosition(long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.animation.OvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.SubtitleController.Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>:<public abstract>:<android.media.SubtitleController.Renderer>
<android.view.ActionMode: android.view.View getCustomView()>:<public abstract>:<android.view.ActionMode>
<android.media.IRingtonePlayer.Stub.Proxy: void stop(android.os.IBinder)>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.preference.PreferenceActivity.Header: int describeContents()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: java.lang.String nativeAxisToString(int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.Cursor: int getColumnIndex(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.AutoCompleteTextView: void doBeforeTextChanged()>:<>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.JetPlayer: java.lang.Object clone()>:<public>:<android.media.JetPlayer>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.FloatKeyframes)>:<public>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.AudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: android.text.method.WordIterator getWordIterator()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SpellChecker: int access.600(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.media.MediaSyncEvent: int getAudioSessionId()>:<public>:<android.media.MediaSyncEvent>
<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.security.IKeystoreService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider: void onAdjustVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider:android.media.VolumeProvider>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.UnstyledTextExtractor: void onTimeStamp(long)>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.preference.Preference: android.os.Bundle getExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: boolean isInEditMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: void setOnPreferenceChangeInternalListener(android.preference.Preference.OnPreferenceChangeInternalListener)>:<final>:<android.preference.Preference:java.lang.Comparable>
<android.media.AudioService: void setVolumeController(android.media.IVolumeController)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>:<public>:<android.appwidget.AppWidgetManager>
<android.service.notification.StatusBarNotification: java.lang.String getKey()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.GLES20Canvas: int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteDebug.DbStats getMainDbStatsUnsafe(int,long,long)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.View: void initScrollCache()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>:<public>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.view.textservice.SuggestionsInfo.1: android.view.textservice.SuggestionsInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.textservice.SuggestionsInfo.1:android.os.Parcelable.Creator>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(android.graphics.Rect)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: int nativeKeyCodeFromString(java.lang.String)>:<private static native>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk setLayoutParameter(android.view.View,android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.RemoteController: int access.502(android.media.RemoteController,int)>:<static>:<android.media.RemoteController>
<android.media.tv.ITvInputService.Stub.Proxy: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.GridLayout: int access.300(android.widget.GridLayout,android.view.View,boolean)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.HardwareCallback: void onReleased()>:<public abstract>:<android.media.tv.TvInputManager.HardwareCallback>
<android.media.MediaPlayer: void setSurface(android.view.Surface)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.Nsd: boolean setCmdSaveFlag(android.view.HardwareCanvas)>:<public static>:<android.view.Nsd>
<android.view.textservice.SpellCheckerInfo: int describeContents()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.projection.MediaProjectionManager.Callback: void <init>()>:<public>:<android.media.projection.MediaProjectionManager.Callback>
<android.media.tv.TvInputHardwareInfo: java.lang.String toString()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.view.LayoutInflater.BlinkLayout: void onDetachedFromWindow()>:<protected>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection.PreparedStatement acquirePreparedStatement(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.AppSecurityPermissions.PermissionItemView: void onClick(android.view.View)>:<public>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.view.View: boolean access.2000()>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy: int selectAnimationLw(android.view.WindowManagerPolicy.WindowState,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.SubtitleController.Listener: void onSubtitleTrackSelected(android.media.SubtitleTrack)>:<public abstract>:<android.media.SubtitleController.Listener>
<android.media.tv.ITvInputSessionWrapper: void setSurface(android.view.Surface)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.security.KeyChain.AliasResponse: void <init>(android.security.KeyChainAliasCallback)>:<private>:<android.security.KeyChain.AliasResponse:android.security.IKeyChainAliasCallback.Stub,android.os.Binder>
<android.view.Window: void setDimAmount(float)>:<public>:<android.view.Window>
<android.view.accessibility.AccessibilityNodeInfo: void access.200(android.view.accessibility.AccessibilityNodeInfo,android.os.Parcel)>:<static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.MenuInflater: java.lang.Object getRealOwner()>:<private>:<android.view.MenuInflater>
<android.view.MotionEvent: int getEdgeFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.SurfaceControl: android.graphics.Bitmap screenshot(android.graphics.Rect,int,int,int,int,boolean,int)>:<public static>:<android.view.SurfaceControl>
<android.animation.BidirectionalTypeConverter: java.lang.Object convertBack(java.lang.Object)>:<public abstract>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void sendKeyEvent(int)>:<private>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.view.animation.AnimationSet: void setStartTime(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.media.audiofx.Equalizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.media.session.PlaybackState: long getActionForRccFlag(int)>:<private static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.service.notification.ZenModeConfig: void <init>(android.os.Parcel)>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.TextView: boolean canPaste()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Toast: void setText(int)>:<public>:<android.widget.Toast>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void close()>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.media.MediaCodecInfo: int checkPowerOfTwo(int,java.lang.String)>:<private static>:<android.media.MediaCodecInfo>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.RemoteViewsAdapter: android.os.Handler access.600(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String)>:<private>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.media.MediaRecorder: void native_start()>:<public native>:<android.media.MediaRecorder>
<android.media.session.ISession: void setLaunchPendingIntent(android.app.PendingIntent)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>:<public>:<android.accounts.AccountManager>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.media.session.MediaSession: void dispatchFastForward()>:<private>:<android.media.session.MediaSession>
<android.filterpacks.imageproc.CropRectFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.accounts.IAccountManager.Stub.Proxy: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.view.View: boolean isDirty()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ActivityChooserView.Callbacks: boolean onLongClick(android.view.View)>:<public>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.preference.ListPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.ListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.database.AbstractCursor: boolean requery()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.CCParser.CCData: java.lang.String ctrlCodeToString(int)>:<private>:<android.media.CCParser.CCData>
<android.accounts.AccountManager.BaseFutureTask: void access.700(android.accounts.AccountManager.BaseFutureTask,java.lang.Object)>:<static>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentIfNeeded()>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.media.IAudioService: void setSpeakerphoneOn(boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.tv.ITvInputClient: void onContentAllowed(int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowId.FocusObserver.1: void focusGained(android.os.IBinder)>:<public>:<android.view.WindowId.FocusObserver.1:android.view.IWindowFocusObserver.Stub,android.os.Binder>
<android.view.InputEventReceiver: void nativeFinishInputEvent(long,int,boolean)>:<private static native>:<android.view.InputEventReceiver>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.media.session.MediaSessionLegacyHelper: void addRccListener(android.app.PendingIntent,android.media.session.MediaSession.Callback)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.view.ViewGroup: void clearFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.widget.Editor.HandleView: void onDetached()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.FaceDetector: void <init>(int,int,int)>:<public>:<android.media.FaceDetector>
<android.widget.EdgeEffect: int getColor()>:<public>:<android.widget.EdgeEffect>
<android.print.PrinterId: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterId:android.os.Parcelable>
<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountAuthenticator.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.media.AudioService.VolumeStreamState: int muteCount()>:<private>:<android.media.AudioService.VolumeStreamState>
<android.service.notification.ZenModeConfig.DowntimeInfo: void <init>()>:<public>:<android.service.notification.ZenModeConfig.DowntimeInfo>
<android.view.SurfaceSession: long nativeCreate()>:<private static native>:<android.view.SurfaceSession>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ThreadedRenderer: void invokeFunctor(long,boolean)>:<static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.MotionEvent: void nativeScale(long,float)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Editor: void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>:<private>:<android.widget.Editor>
<android.media.session.MediaSession.QueueItem: long getQueueId()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.view.SurfaceView.MyWindow: void <init>(android.view.SurfaceView)>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.service.notification.NotificationRankingUpdate: java.lang.String[] getInterceptedKeys()>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.media.TtmlNode: void <init>(java.lang.String,java.lang.String,java.lang.String,long,long,android.media.TtmlNode,long)>:<public>:<android.media.TtmlNode>
<android.opengl.GLSurfaceView.GLThread: void onWindowResize(int,int)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.media.session.ISessionCallback: void onMediaButton(android.content.Intent,int,android.os.ResultReceiver)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.widget.DatePicker: void setSpinnersShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.DatePicker: android.widget.NumberPicker getDaySpinner()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onCancelPrintJobResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.view.GestureDetector: boolean access.400(android.view.GestureDetector)>:<static>:<android.view.GestureDetector>
<android.media.MediaCodec: android.media.Image getImage(boolean,int)>:<private final native>:<android.media.MediaCodec>
<android.view.animation.LayoutAnimationController: void start()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.ListView: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)>:<>:<android.media.MediaRouter.RouteCategory>
<android.preference.SwitchPreference.Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>:<public>:<android.preference.SwitchPreference.Listener:android.widget.CompoundButton.OnCheckedChangeListener>
<android.view.ViewTreeObserver: void merge(android.view.ViewTreeObserver)>:<>:<android.view.ViewTreeObserver>
<android.animation.Keyframes: android.animation.Keyframes clone()>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.service.notification.ZenModeConfig: android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser,java.lang.String)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.projection.MediaProjection.CallbackRecord: void <init>(android.media.projection.MediaProjection.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection.CallbackRecord>
<android.media.MediaExtractor: void nativeSetDataSource(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[])>:<private final native>:<android.media.MediaExtractor>
<android.animation.PropertyValuesHolder: void setupValue(java.lang.Object,android.animation.Keyframe)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.MediaDrm.Certificate: byte[] getContent()>:<public>:<android.media.MediaDrm.Certificate>
<android.print.IPrinterDiscoveryObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.animation.AnimatorSet: void setupStartValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.service.voice.VoiceInteractionSession: void onTaskStarted(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.WindowInsets: boolean hasSystemWindowInsets()>:<public>:<android.view.WindowInsets>
<android.database.AbstractWindowedCursor: short getShort(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteConnectionPool: void collectDbStats(java.util.ArrayList)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.AudioSystem.ErrorCallback: void onError(int)>:<public abstract>:<android.media.AudioSystem.ErrorCallback>
<android.print.IPrintSpoolerClient: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.media.tv.TvInputManager.1: void onTracksChanged(java.util.List,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.view.DragEvent: void recycle()>:<public final>:<android.view.DragEvent:android.os.Parcelable>
<android.media.tv.TvInputManager.Session: void release()>:<public>:<android.media.tv.TvInputManager.Session>
<android.view.ViewRootImpl.W: void moved(int,int)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.media.effect.EffectContext: void release()>:<public>:<android.media.effect.EffectContext>
<android.widget.FastScroller: void updateContainerRect()>:<private>:<android.widget.FastScroller>
<android.view.ActionMode.Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public abstract>:<android.view.ActionMode.Callback>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: void removeOverlayView(android.os.IBinder,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.SimpleMonthAdapter: void init()>:<protected>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.view.View: int[] mergeDrawableStates(int[],int[])>:<protected static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy:android.media.projection.IMediaProjectionWatcherCallback>
<android.media.effect.EffectContext: void assertValidGLState()>:<final>:<android.media.effect.EffectContext>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.NumberPicker access.400(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.MediaFocusControl: void dump(java.io.PrintWriter)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.SuggestionsAdapter.1: void <init>(android.widget.SuggestionsAdapter)>:<>:<android.widget.SuggestionsAdapter.1:android.widget.Filter.Delayer>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.media.MediaBrowserService: android.os.Handler access.300(android.service.media.MediaBrowserService)>:<static>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaController.MessageHandler: void handleMessage(android.os.Message)>:<public>:<android.media.session.MediaController.MessageHandler:android.os.Handler>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.IWindowManager: void closeSystemDialogs(java.lang.String)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.accounts.IAccountManager: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.print.PrintJobInfo: int getAdvancedIntOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.RenderNode: void endAllAnimators()>:<public>:<android.view.RenderNode>
<android.media.Metadata: boolean scanAllRecords(android.os.Parcel,int)>:<private>:<android.media.Metadata>
<android.media.tv.TvInputManager.Session: void access.2100(android.media.tv.TvInputManager.Session,android.media.tv.TvInputManager.Session.PendingEvent)>:<static>:<android.media.tv.TvInputManager.Session>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void invalidateOutline()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentInfo: java.lang.String getName()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>:<public>:<android.media.JetPlayer>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.200(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.widget.TextView: int getCompoundDrawablePadding()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.ClosedCaptionWidget: android.view.accessibility.CaptioningManager.CaptionStyle access.100()>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.view.accessibility.AccessibilityNodeInfo.1: android.view.accessibility.AccessibilityNodeInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: void <init>(int,int,int,int,boolean,boolean)>:<private>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLES11Ext: void <clinit>()>:<static>:<android.opengl.GLES11Ext>
<android.widget.AbsListView.FlingRunnable.1: void <init>(android.widget.AbsListView.FlingRunnable)>:<>:<android.widget.AbsListView.FlingRunnable.1:java.lang.Runnable>
<android.view.WindowManagerPolicy: void hideBootMessages()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.audiofx.EnvironmentalReverb.BaseParameterListener: void <init>(android.media.audiofx.EnvironmentalReverb)>:<private>:<android.media.audiofx.EnvironmentalReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.accessibility.AccessibilityWindowInfo: boolean changed(android.view.accessibility.AccessibilityWindowInfo)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.RenderNode: void nAddAnimator(long,long)>:<private static native>:<android.view.RenderNode>
<android.database.CursorWrapper: boolean moveToPosition(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.PlaybackState: long getPosition()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.AudioPort: int[] samplingRates()>:<public>:<android.media.AudioPort>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.ViewRootImpl: void scheduleConsumeBatchedInputImmediately()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaCodec.BufferMap: void put(int,java.nio.ByteBuffer)>:<public>:<android.media.MediaCodec.BufferMap>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.animation.Keyframes.IntKeyframes: int getIntValue(float)>:<public abstract>:<android.animation.Keyframes.IntKeyframes:android.animation.Keyframes>
<android.ddm.DdmHandleThread: void register()>:<public static>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.MediaMuxer: void <clinit>()>:<static>:<android.media.MediaMuxer>
<android.media.IRemoteControlClient: void setCurrentClientGenerationId(int)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener: void onRecognitionPaused()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener:android.hardware.soundtrigger.IRecognitionStatusCallback.Stub>
<android.media.session.ISessionControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.view.FrameStats: int getFrameCount()>:<public final>:<android.view.FrameStats>
<android.view.InputEventReceiver: void dispatchInputEvent(int,android.view.InputEvent)>:<private>:<android.view.InputEventReceiver>
<android.media.session.ISessionManager.Stub.Proxy: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.database.sqlite.SQLiteDatabase: void throwIfNotOpenLocked()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.animation.ValueAnimator: void end()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getWeeksSinceMinDate(java.util.Calendar)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.animation.Animation: void fireAnimationStart()>:<private>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewDebug.2: void run(java.lang.Object[])>:<public volatile>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>:<public>:<android.view.WindowInsets>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.database.sqlite.SQLiteStatement: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])>:<>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.media.browse.MediaBrowser.MediaItem: boolean isBrowsable()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.media.IMediaHTTPService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaHTTPService.Stub.Proxy:android.media.IMediaHTTPService>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void updateSelectionPositions()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getSessionService()>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.view.RenderNode: boolean setTranslationY(float)>:<public>:<android.view.RenderNode>
<android.view.inputmethod.ExtractedTextRequest.1: android.view.inputmethod.ExtractedTextRequest[] newArray(int)>:<public>:<android.view.inputmethod.ExtractedTextRequest.1:android.os.Parcelable.Creator>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] preceding(int)>:<public>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.audiofx.BassBoost.BaseParameterListener: void <init>(android.media.audiofx.BassBoost)>:<private>:<android.media.audiofx.BassBoost.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.widget.RemoteViews.MemoryUsageCounter: void increment(int)>:<public>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.opengl.GLLogWrapper: void glAlphaFuncx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ThreadedRenderer: void pauseSurface(android.view.Surface)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.WebVttTrack: void updateView(java.util.Vector)>:<public>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioSystem: float getMasterVolume()>:<public static native>:<android.media.AudioSystem>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.media.projection.IMediaProjection: int applyVirtualDisplayFlags(int)>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.media.AudioService: void playSoundEffectVolume(int,float)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: void requestTransitionStart(android.animation.LayoutTransition)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaPlayer.1: void onSubtitleData(android.media.MediaPlayer,android.media.SubtitleData)>:<public>:<android.media.MediaPlayer.1:android.media.MediaPlayer.OnSubtitleDataListener>
<android.database.ContentObserver.NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver.NotificationRunnable:java.lang.Runnable>
<android.view.Window.Callback: boolean onSearchRequested()>:<public abstract>:<android.view.Window.Callback>
<android.media.audiofx.AudioEffect: byte[] shortToByteArray(short)>:<public static>:<android.media.audiofx.AudioEffect>
<android.view.ThreadedRenderer: void nInvokeFunctor(long,boolean)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: void onInputRemoved(java.lang.String)>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.service.voice.VoiceInteractionSession.Request: void sendAbortVoiceResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter: android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceTextInfoParams access.000(android.service.textservice.SpellCheckerService.SentenceLevelAdapter,android.view.textservice.TextInfo)>:<static>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter>
<android.preference.MultiCheckPreference.1: void onClick(android.content.DialogInterface,int,boolean)>:<public>:<android.preference.MultiCheckPreference.1:android.content.DialogInterface.OnMultiChoiceClickListener>
<android.view.View.BaseSavedState: void <clinit>()>:<static>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.view.ViewGroup: void drawableHotspotChanged(float,float)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TabHost.ViewIdContentStrategy: void <init>(android.widget.TabHost,int)>:<private>:<android.widget.TabHost.ViewIdContentStrategy:android.widget.TabHost.ContentStrategy>
<android.view.OrientationListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.opengl.GLLogWrapper: void begin(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AnalogClock.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.widget.AnalogClock.1:android.content.BroadcastReceiver>
<android.opengl.GLES30: void glEndTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.R.color: void <init>()>:<public>:<android.R.color>
<android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.RelativeLayout: boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout.LayoutParams,int,boolean)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvView: android.media.tv.TvView.MySessionCallback access.802(android.media.tv.TvView,android.media.tv.TvView.MySessionCallback)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void adjustVolume(java.lang.String,int)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.widget.GridView: android.view.View fillSpecific(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.trust.TrustAgentService: void onTrustTimeout()>:<public>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.PrintAttributes: void setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.widget.Gallery: void fillToGalleryLeft()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View: boolean hasOverlappingRendering()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewRootImpl: boolean isInLayout()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.HwAbsListView: boolean hasScrollMultiSelectMask()>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.ViewRootImpl.SyntheticKeyboardHandler: void process(android.view.KeyEvent)>:<public>:<android.view.ViewRootImpl.SyntheticKeyboardHandler>
<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand:java.lang.Runnable>
<android.media.RemoteController: void access.800(android.media.RemoteController,android.media.session.PlaybackState)>:<static>:<android.media.RemoteController>
<android.view.MotionEvent: int getActionMasked()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.InputDevice.MotionRange: int getAxis()>:<public>:<android.view.InputDevice.MotionRange>
<android.view.MotionEvent: float nativeGetYOffset(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.animation.StateListAnimator: void start(android.animation.StateListAnimator.Tuple)>:<private>:<android.animation.StateListAnimator>
<android.service.media.IMediaBrowserServiceCallbacks.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub:android.os.Binder,android.service.media.IMediaBrowserServiceCallbacks>
<android.printservice.IPrintServiceClient: java.util.List getPrintJobInfos()>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: android.util.ArraySet access.000()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.animation.Keyframe: void setValue(java.lang.Object)>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.TextView.Marquee: int access.700(android.widget.TextView.Marquee)>:<static>:<android.widget.TextView.Marquee>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.service.voice.IVoiceInteractionSession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.voice.IVoiceInteractionSession.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSession>
<android.media.audiofx.AudioEffect: int getId()>:<public>:<android.media.audiofx.AudioEffect>
<android.service.dreams.DreamService: android.view.Window getWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.DayPickerView: boolean goTo(java.util.Calendar,boolean,boolean,boolean)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.IAudioService.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IAudioService.Stub:android.os.Binder,android.media.IAudioService>
<android.view.RenderNode: boolean setScaleY(float)>:<public>:<android.view.RenderNode>
<android.widget.SearchView: android.app.SearchableInfo access.1400(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.service.persistentdata.IPersistentDataBlockService: void wipe()>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.view.InputEventConsistencyVerifier.KeyState: void <clinit>()>:<static>:<android.view.InputEventConsistencyVerifier.KeyState>
<android.opengl.EGLLogWrapper: void begin(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.TimePickerSpinnerDelegate: boolean is24HourView()>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.View.SendViewStateChangedAccessibilityEvent: void runOrPost(int)>:<public>:<android.view.View.SendViewStateChangedAccessibilityEvent:java.lang.Runnable>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>:<public>:<android.widget.RemoteViews.TextViewDrawableAction:android.widget.RemoteViews.Action>
<android.widget.Editor.SelectionStartHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>:<protected>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.view.ViewGroup: void exitHoverTargets()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void debug(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnGenericMotionListener>
<android.view.IApplicationToken: void windowsDrawn()>:<public abstract>:<android.view.IApplicationToken:android.os.IInterface>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.media.JetPlayer: boolean native_setMuteArray(boolean[],boolean)>:<private final native>:<android.media.JetPlayer>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>:<public abstract>:<android.view.Window>
<android.view.InputEventSender: void nativeDispose(long)>:<private static native>:<android.view.InputEventSender>
<android.media.AudioAttributes: int getFlags()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.database.AbstractWindowedCursor: float getFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.Switch: void access.100(android.widget.Switch,float)>:<static>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.service.dreams.Sandman: void startDream(android.content.Context,boolean)>:<private static>:<android.service.dreams.Sandman>
<android.widget.AdapterView: void removeAllViews()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy: int getMaxWallpaperLayer()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.AccessibilityIterators.WordTextSegmentIterator: void onLocaleChanged(java.util.Locale)>:<protected>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.session.ISession.Stub.Proxy: void setLaunchPendingIntent(android.app.PendingIntent)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.widget.VideoView: int getDuration()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.security.KeyStore: int getKeyTypeForAlgorithm(java.lang.String)>:<static>:<android.security.KeyStore>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.AudioService: boolean getBluetoothHeadset()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.EncoderCapabilities getEncoderCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.RemoteDisplay: void pause()>:<public>:<android.media.RemoteDisplay>
<android.media.session.MediaSession: void access.1600(android.media.session.MediaSession,android.media.Rating)>:<static>:<android.media.session.MediaSession>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.ViewRootImpl: android.view.ViewGroup findAncestorToTakeFocusInTouchMode(android.view.View)>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaDrm: void closeSession(byte[])>:<public native>:<android.media.MediaDrm>
<android.media.tv.ITvInputClient: void onTracksChanged(java.util.List,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.animation.StateListAnimator.Tuple: android.animation.Animator getAnimator()>:<public>:<android.animation.StateListAnimator.Tuple>
<android.widget.RadioGroup: void onFinishInflate()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: java.lang.String getFontFeatureSettings()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.BassBoost.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.BassBoost.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.database.sqlite.SQLiteStatement: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.media.AudioService: void waitForAudioHandlerCreation()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.GridLayout: void measureChildWithMargins2(android.view.View,int,int,int,int)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.WindowAnimationFrameStats: void <init>()>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.service.voice.AlwaysOnHotwordDetector: int access.202(android.service.voice.AlwaysOnHotwordDetector,int)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.database.AbstractCursor: long getLong(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.CCParser.CCLineBuilder: void applyStyleSpan(android.text.SpannableStringBuilder,android.media.CCParser.StyleCode,int,int)>:<>:<android.media.CCParser.CCLineBuilder>
<android.service.notification.IConditionListener.Stub: android.service.notification.IConditionListener asInterface(android.os.IBinder)>:<public static>:<android.service.notification.IConditionListener.Stub:android.os.Binder,android.service.notification.IConditionListener>
<android.animation.LayoutTransition.6: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.6:android.animation.AnimatorListenerAdapter>
<android.view.MotionEvent.PointerProperties: int hashCode()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.TextureView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.view.TextureView:android.view.View>
<android.media.tv.TvInputManager.Session: java.util.List access.200(android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvInputManager.Session>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy build()>:<public>:<android.media.audiopolicy.AudioPolicy.Builder>
<android.view.InputEvent: long getEventTimeNano()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.media.AudioAttributes: java.lang.String usageToString(int)>:<public static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.View: void announceForAccessibility(java.lang.CharSequence)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute(int)>:<public>:<android.media.MediaRouter>
<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] following(int)>:<public>:<android.widget.AccessibilityIterators.PageTextSegmentIterator:android.widget.AccessibilityIterators.LineTextSegmentIterator>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ScaleGestureDetector>
<android.view.KeyEvent: android.view.InputEvent copy()>:<public volatile>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.MatchIdPredicate: boolean apply(java.lang.Object)>:<public volatile>:<android.view.View.MatchIdPredicate:com.android.internal.util.Predicate>
<android.view.WindowManagerPolicy: boolean isTopLevelWindow(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.tv.TvInputManager: void createSession(java.lang.String,android.media.tv.TvInputManager.SessionCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager>
<android.media.audiofx.NoiseSuppressor: android.media.audiofx.NoiseSuppressor create(int)>:<public static>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.widget.RelativeLayout: int getRelatedViewBaseline(int[],int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.InputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.printservice.PrinterDiscoverySession: void validatePrinters(java.util.List)>:<>:<android.printservice.PrinterDiscoverySession>
<android.widget.GridLayout.Axis: void addComponentSizes(java.util.List,android.widget.GridLayout.PackedMap)>:<private>:<android.widget.GridLayout.Axis>
<android.widget.NumberPicker.1: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.1:android.view.View.OnClickListener>
<android.security.KeyChain: android.security.KeyChain.KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle)>:<public static>:<android.security.KeyChain>
<android.view.accessibility.AccessibilityNodeInfo: void addChildInternal(android.view.View,int,boolean)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.EditTextPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.animation.StateListAnimator.Tuple: int[] getSpecs()>:<public>:<android.animation.StateListAnimator.Tuple>
<android.widget.TextView: boolean performLongClick()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.TimedText: void readStyle(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.view.View: int getNextFocusRightId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewDebug: java.util.HashMap getMethodMap()>:<private static>:<android.view.ViewDebug>
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewDebug.ViewOperation: void run(java.lang.Object[])>:<public abstract transient>:<android.view.ViewDebug.ViewOperation>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.RingtoneManager: java.lang.String getSettingForType(int)>:<private static>:<android.media.RingtoneManager>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Spinner.SpinnerPopup: boolean isShowing()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.filterpacks.videosrc.CameraSource: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.widget.RatingBar: void setMax(int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.ListPopupWindow.DropDownListView.1: java.lang.Integer get(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListPopupWindow.DropDownListView.1:android.util.IntProperty>
<android.widget.GridView: android.view.View moveSelection(int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaFile: boolean isAudioFileType(int)>:<public static>:<android.media.MediaFile>
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.MediaPlayer: java.util.Vector access.300(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.CamcorderProfile: void native_init()>:<private static final native>:<android.media.CamcorderProfile>
<android.widget.AdapterViewAnimator: int modulo(int,int)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.accessibility.AccessibilityInteractionClient: boolean getPerformAccessibilityActionResultAndClear(int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.inputmethod.CursorAnchorInfo.Builder: int access.100(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.IWindowId.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.media.IRingtonePlayer: void play(android.os.IBinder,android.net.Uri,android.media.AudioAttributes)>:<public abstract>:<android.media.IRingtonePlayer:android.os.IInterface>
<android.media.CCParser: boolean handleCtrlCode(android.media.CCParser.CCData)>:<private>:<android.media.CCParser>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.print.PrintDocumentInfo.1: android.print.PrintDocumentInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.MagnificationSpec.1: void <init>()>:<>:<android.view.MagnificationSpec.1:android.os.Parcelable.Creator>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.view.ViewDebug.2: void post(java.lang.Object[])>:<public volatile>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.View: boolean isAttachedToWindow()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputInfo.1: android.media.tv.TvInputInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvInputInfo.1:android.os.Parcelable.Creator>
<android.view.animation.Transformation: android.graphics.Rect getClipRect()>:<public>:<android.view.animation.Transformation>
<android.widget.StackView: android.widget.ImageView access.000(android.widget.StackView)>:<static>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.ISessionManager.Stub.Proxy: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,int)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.media.MediaRouter.RouteInfo: boolean updatePresentationDisplay()>:<>:<android.media.MediaRouter.RouteInfo>
<android.widget.DatePickerController: int getMaxMonth()>:<public abstract>:<android.widget.DatePickerController>
<android.view.GLES20Canvas: long getRenderer()>:<>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.sqlite.SQLiteGlobal: int nativeReleaseMemory()>:<private static native>:<android.database.sqlite.SQLiteGlobal>
<android.service.persistentdata.PersistentDataBlockManager: int write(byte[])>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.media.ImageReader.SurfaceImage: void <init>(android.media.ImageReader)>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker.Estimator)>:<public>:<android.view.VelocityTracker>
<android.service.voice.VoiceInteractionSession: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.SurfaceControl: void destroy()>:<public>:<android.view.SurfaceControl>
<android.media.RemoteDisplay: long nativeListen(java.lang.String)>:<private native>:<android.media.RemoteDisplay>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isHeading()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.view.ViewOverlay.OverlayViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.Window: void dispatchWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<protected>:<android.view.Window>
<android.media.MediaDrm.CryptoSession: byte[] encrypt(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.view.SurfaceControl: android.os.IBinder nativeGetBuiltInDisplay(int)>:<private static native>:<android.view.SurfaceControl>
<android.media.Utils.2: void <init>()>:<>:<android.media.Utils.2:java.util.Comparator>
<android.media.effect.effects.BlackWhiteEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.BlackWhiteEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.security.AndroidKeyPairGenerator: void initialize(int,java.security.SecureRandom)>:<public>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.preference.VolumePreference: void cleanup()>:<private>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.widget.FastScroller: void beginDrag()>:<private>:<android.widget.FastScroller>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintJobId: void <init>(java.lang.String)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.security.KeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.media.tv.TvInputService.Session: android.os.IBinder access.400(android.media.tv.TvInputService.Session)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.media.audiopolicy.AudioPolicyConfig: void <init>(java.util.ArrayList)>:<>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.opengl.GLSurfaceView.ComponentSizeChooser: void <init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>:<public>:<android.media.MediaMetadataRetriever>
<android.media.ClosedCaptionWidget: void onLayout(boolean,int,int,int,int)>:<protected>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.HardwareRenderer: void fence()>:<abstract>:<android.view.HardwareRenderer>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>:<public abstract>:<android.widget.ExpandableListView.OnGroupExpandListener>
<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.widget.Editor: void adjustInputType(boolean,boolean,boolean,boolean)>:<>:<android.widget.Editor>
<android.media.session.MediaSessionManager: android.content.Context access.200(android.media.session.MediaSessionManager)>:<static>:<android.media.session.MediaSessionManager>
<android.view.View: void onWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.widget.ListView: void <init>(android.content.Context)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void invokeFunctor(long,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityInteractionClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.IWindowSession.Stub.Proxy: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.tv.TvView.TvInputCallback: void onContentBlocked(java.lang.String,android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>:<public abstract>:<android.view.MenuItem>
<android.view.ViewGroup.MarginLayoutParams: boolean isLayoutRtl()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.AudioService: void setRotationForAudioSystem()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaCodecInfo.VideoCapabilities: boolean areSizeAndRateSupported(int,int,double)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.textservice.SpellCheckerSubtype: void <clinit>()>:<static>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.RenderNode: boolean setRotationX(float)>:<public>:<android.view.RenderNode>
<android.preference.Preference: boolean isSelectable()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.security.IKeyChainAliasCallback: void alias(java.lang.String)>:<public abstract>:<android.security.IKeyChainAliasCallback:android.os.IInterface>
<android.gesture.GestureUtils: float[] rotate(float[],float)>:<static>:<android.gesture.GestureUtils>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1202(android.widget.CalendarView.LegacyCalendarViewDelegate,int)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.projection.MediaProjection: android.media.AudioRecord createAudioRecord(int,int,int,int)>:<public>:<android.media.projection.MediaProjection>
<android.media.AudioTrack: int getStreamType()>:<public>:<android.media.AudioTrack>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.MenuInflater: void <init>(android.content.Context)>:<public>:<android.view.MenuInflater>
<android.view.View: void onStartTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityEvent: int getEventType()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.View: boolean dispatchNestedFling(float,float,boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.SearchView: void setAppSearchData(android.os.Bundle)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>:<protected>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isActive()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.EncoderCapabilities: int native_get_num_file_formats()>:<private static final native>:<android.media.EncoderCapabilities>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutCanceled(int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.print.PrinterCapabilitiesInfo: int access.400(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.View: void setKeyedTag(int,java.lang.Object)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDrm: void native_finalize()>:<private final native>:<android.media.MediaDrm>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>:<private static>:<android.media.RingtoneManager>
<android.media.MiniThumbFile: void reset()>:<public static>:<android.media.MiniThumbFile>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void setDiscoveryMode(int)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.media.AudioDevicePort: java.lang.String toString()>:<public>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.view.View: void onCancelPendingInputEvents()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ThreadedRenderer: void destroy()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.textservice.SuggestionsInfo: void <clinit>()>:<static>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.media.MediaExtractor: void selectTrack(int)>:<public native>:<android.media.MediaExtractor>
<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.FastScroller>
<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener: void <init>()>:<public>:<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener>
<android.media.SubtitleTrack.CueList.1: void <init>(android.media.SubtitleTrack.CueList,long,long)>:<>:<android.media.SubtitleTrack.CueList.1:java.lang.Iterable>
<android.animation.Animator: long getDuration()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.voice.VoiceInteractionService: boolean isActiveService(android.content.Context,android.content.ComponentName)>:<public static>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SearchView.10: void onNothingSelected(android.widget.AdapterView)>:<public>:<android.widget.SearchView.10:android.widget.AdapterView.OnItemSelectedListener>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.VideoView.8: void <init>(android.widget.VideoView)>:<>:<android.widget.VideoView.8:android.media.SubtitleTrack.RenderingWidget.OnChangedListener>
<android.widget.EdgeEffect: int getMaxHeight()>:<public>:<android.widget.EdgeEffect>
<android.media.tv.ITvInputClient.Stub.Proxy: void onTracksChanged(java.util.List,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Editor.SelectionModifierCursorController: void hide()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.widget.TextView: boolean canMarquee()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityManager: void access.400(android.view.accessibility.AccessibilityManager,int)>:<static>:<android.view.accessibility.AccessibilityManager>
<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe.IntKeyframe clone()>:<public>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.widget.TextView: void updateTextServicesLocaleLocked()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.WebVttRenderingWidget: int calculateLinePosition(android.media.WebVttRenderingWidget.CueLayout)>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.Choreographer: long getFrameIntervalNanos()>:<public>:<android.view.Choreographer>
<android.media.AudioService.ScoClient: android.os.IBinder getBinder()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.ddm.DdmHandleProfiling: void connected()>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.GridView: android.view.View makeRow(int,int,boolean)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>:<public abstract>:<android.view.SurfaceHolder>
<android.print.IPrintSpooler.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>:<public final native>:<android.media.MediaExtractor>
<android.widget.TextView: boolean didTouchFocusSelect()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaSessionManager.SessionsChangedWrapper.1.1: void <init>(android.media.session.MediaSessionManager.SessionsChangedWrapper.1,java.util.List)>:<>:<android.media.session.MediaSessionManager.SessionsChangedWrapper.1.1:java.lang.Runnable>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onSensorChanged(android.hardware.SensorEvent)>:<public>:<android.view.OrientationEventListener.SensorEventListenerImpl:android.hardware.SensorEventListener>
<android.media.AudioRoutesInfo.1: android.media.AudioRoutesInfo[] newArray(int)>:<public>:<android.media.AudioRoutesInfo.1:android.os.Parcelable.Creator>
<android.widget.ZoomButtonsController: boolean access.800(android.widget.ZoomButtonsController,android.view.KeyEvent)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.gesture.Gesture: void <init>()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.widget.GridLayout.Axis: void computeGroupBounds()>:<private>:<android.widget.GridLayout.Axis>
<android.media.MediaCodec: void cacheBuffers(boolean)>:<private final>:<android.media.MediaCodec>
<android.widget.Editor: boolean access.1000(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.database.CursorWindow: void dispose()>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.filterpacks.videosrc.SurfaceTextureTarget: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteCustomFunction: void dispatchCallback(java.lang.String[])>:<private>:<android.database.sqlite.SQLiteCustomFunction>
<android.database.sqlite.SQLiteConnectionPool.1: void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter,int)>:<>:<android.database.sqlite.SQLiteConnectionPool.1:android.os.CancellationSignal.OnCancelListener>
<android.media.tv.TvView: android.graphics.Rect access.1802(android.media.tv.TvView,android.graphics.Rect)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.View: boolean willNotCacheDrawing()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView.CharWrapper: void set(char[],int,int)>:<>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.gesture.GestureOverlayView: android.graphics.Rect touchMove(android.view.MotionEvent)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isLayoutDirectionInherited()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec.MediaImage: int readInt(java.nio.ByteBuffer,boolean)>:<private>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.view.ViewTreeObserver.CopyOnWriteArray: void clear()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.view.IRotationWatcher: void onRotationChanged(int)>:<public abstract>:<android.view.IRotationWatcher:android.os.IInterface>
<android.view.ViewRootImpl: boolean canResolveTextAlignment()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.GridLayout.Axis: boolean computeHasWeights()>:<private>:<android.widget.GridLayout.Axis>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TimePickerSpinnerDelegate: void setCurrentMinute(java.lang.Integer)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.database.DataSetObservable: void <init>()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: java.lang.Object get(int)>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Gallery.FlingRunnable: void startUsingDistance(int)>:<public>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.print.PrinterCapabilitiesInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void startNsd(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SubtitleController: void doSelectDefaultTrack()>:<private>:<android.media.SubtitleController>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>:<public>:<android.view.accessibility.CaptioningManager>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<huawei.cust.HwCustUtils.ClassInfo: void <init>(java.lang.String,java.lang.Class)>:<>:<huawei.cust.HwCustUtils.ClassInfo>
<android.media.AudioService.VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int)>:<private>:<android.media.AudioService.VolumeStreamState>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <clinit>()>:<static>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.animation.AnimatorInflater: void <init>()>:<public>:<android.animation.AnimatorInflater>
<android.preference.Preference: void onAttachedToActivity()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: int getMonthOfLastWeekDay()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.widget.RadialTimePickerView: int getCurrentMinute()>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ViewRootImpl: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.session.PlaybackState.1: android.media.session.PlaybackState[] newArray(int)>:<public>:<android.media.session.PlaybackState.1:android.os.Parcelable.Creator>
<android.widget.VideoView: android.media.MediaPlayer.OnCompletionListener access.1300(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.opengl.GLLogWrapper: void glDisableClientState(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.security.IKeystoreService: int sync_uid(int,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.view.TextureView: void setTransform(android.graphics.Matrix)>:<public>:<android.view.TextureView:android.view.View>
<android.widget.RelativeLayout: void onMeasure(int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioAttributes: int getUsage()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.print.PrintAttributes.Resolution: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Resolution>
<android.media.tv.ITvInputSession.Stub.Proxy: void createOverlayView(android.os.IBinder,android.graphics.Rect)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.service.notification.ZenModeConfig: int[] tryParseHourAndMinute(java.lang.String)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.WebVttRenderingWidget: void prepForPrune()>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.preference.SeekBarDialogPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LayoutAnimationController>
<android.filterpacks.text.StringSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.text.StringSource:android.filterfw.core.Filter>
<android.preference.PreferenceScreen.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.PreferenceScreen.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.tv.TvInputService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputService.Session: void setSurface(android.view.Surface)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay>
<android.view.HardwareLayer: long getLayer()>:<public>:<android.view.HardwareLayer>
<android.opengl.GLLogWrapper: void glFogfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceFragment: void requirePreferenceManager()>:<private>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewRootImpl: void scheduleProcessInputEvents()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaScanner: boolean isNoMediaPath(java.lang.String)>:<public static>:<android.media.MediaScanner>
<android.widget.DayPickerView: void onScrollStateChanged(android.widget.AbsListView,int)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.widget.TextView.CharWrapper: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.media.MediaFocusControl: void filterMediaKeyEvent(android.view.KeyEvent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.opengl.GLLogWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteStarted(android.os.ICancellationSignal,int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.opengl.GLLogWrapper: void glAlphaFunc(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.HardwareRenderer: void setup(int,int,android.graphics.Rect)>:<abstract>:<android.view.HardwareRenderer>
<android.media.SRTTrack: void onData(byte[],boolean,long)>:<public>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.filterpacks.ui.SurfaceRenderFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.view.MenuItem: android.content.Intent getIntent()>:<public abstract>:<android.view.MenuItem>
<android.view.RenderNode: float getScaleX()>:<public>:<android.view.RenderNode>
<android.media.IRemoteVolumeObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteVolumeObserver.Stub:android.os.Binder,android.media.IRemoteVolumeObserver>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.RemoteViewsListAdapter: boolean hasStableIds()>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.media.tv.ITvInputSession: void setMain(boolean)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.animation.ValueAnimator: int getRepeatMode()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.print.PrintJobInfo: android.print.PrintAttributes access.102(android.print.PrintJobInfo,android.print.PrintAttributes)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.animation.Animation: void setBackgroundColor(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.audiopolicy.AudioMixingRule.Builder: void <init>()>:<public>:<android.media.audiopolicy.AudioMixingRule.Builder>
<android.media.MediaDescription: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.media.MediaDescription.1)>:<>:<android.media.MediaDescription:android.os.Parcelable>
<android.widget.TextView: int getGravity()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession onCreatePrinterDiscoverySession()>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.dreams.DreamService.DreamServiceWrapper: void <init>(android.service.dreams.DreamService,android.service.dreams.DreamService.1)>:<>:<android.service.dreams.DreamService.DreamServiceWrapper:android.service.dreams.IDreamService.Stub,android.os.Binder>
<android.preference.PreferenceFrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputHardwareInfo: int access.202(android.media.tv.TvInputHardwareInfo,int)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>:<private>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.SpellChecker: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.database.Cursor: byte[] getBlob(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteConnection: void open()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.print.PrintManager: java.util.List getEnabledPrintServices()>:<public>:<android.print.PrintManager>
<android.media.audiofx.LoudnessEnhancer: void <init>(int,int)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.view.Choreographer: void setFrameDelay(long)>:<public static>:<android.view.Choreographer>
<android.view.ViewParent: boolean isLayoutRequested()>:<public abstract>:<android.view.ViewParent>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.widget.SuggestionsAdapter.1: long getPostingDelay(java.lang.CharSequence)>:<public>:<android.widget.SuggestionsAdapter.1:android.widget.Filter.Delayer>
<android.accounts.AccountManager.BaseFutureTask.1: java.lang.Object call()>:<public>:<android.accounts.AccountManager.BaseFutureTask.1:java.util.concurrent.Callable>
<android.view.View: java.lang.CharSequence getContentDescription()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.view.accessibility.CaptioningManager.CaptionStyle getCustomStyle(android.content.ContentResolver)>:<public static>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.media.RemoteDisplay: void nativeDispose(long)>:<private native>:<android.media.RemoteDisplay>
<android.media.MediaCodec.Callback: void onInputBufferAvailable(android.media.MediaCodec,int)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.animation.ValueAnimator: boolean doAnimationFrame(long)>:<final>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.TtmlRenderingWidget: void setVisible(boolean)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.AudioTrack.NativeEventHandlerDelegate.1: void handleMessage(android.os.Message)>:<public>:<android.media.AudioTrack.NativeEventHandlerDelegate.1:android.os.Handler>
<android.media.CCParser.CCData: java.lang.String toString()>:<public>:<android.media.CCParser.CCData>
<android.view.animation.Animation: void start()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.session.ISessionCallback: void onRewind()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.MotionEvent: void offsetLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvInputManager: int getInputState(java.lang.String)>:<public>:<android.media.tv.TvInputManager>
<android.accounts.IAccountAuthenticatorResponse.Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.view.MotionEvent: long getDownTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.VideoView: void access.2200(android.widget.VideoView,boolean)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.RenderNode: boolean nSetTranslationY(long,float)>:<private static native>:<android.view.RenderNode>
<android.view.View: void setActivated(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.ImageStitcher: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ImageStitcher:android.filterfw.core.Filter>
<android.accounts.AccountManager: boolean removeSharedAccount(android.accounts.Account,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.animation.PropertyValuesHolder: void setFloatValues(float[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.SimpleMonthAdapter: long getItemId(int)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.view.ViewDebug.9: void <init>(android.view.View,android.view.ViewGroup.LayoutParams)>:<>:<android.view.ViewDebug.9:java.lang.Runnable>
<android.view.Surface: int getGenerationId()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.ViewGroup: android.view.View findViewWithTagTraversal(java.lang.Object)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaFormat: boolean containsKey(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.voice.VoiceInteractionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLLogWrapper: java.lang.String getTextureParamName(float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputManager: void removeBlockedRating(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.preference.PreferenceActivity.HeaderAdapter.HeaderViewHolder: void <init>(android.preference.PreferenceActivity.1)>:<>:<android.preference.PreferenceActivity.HeaderAdapter.HeaderViewHolder>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.security.KeyStore: java.lang.String[] saw(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.accounts.AccountManager.13: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,android.app.Activity)>:<>:<android.accounts.AccountManager.13:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.net.Uri,int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void setUse64bitOffset(int)>:<public>:<android.media.MediaRecorder>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView.CharWrapper: float measureText(int,int,android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.preference.SeekBarVolumizer: void onInitSample()>:<private>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet,android.animation.ValueAnimator,float)>:<private static>:<android.animation.AnimatorInflater>
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.widget.VideoView: void onBufferingUpdateOuter(android.media.MediaPlayer,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.TextView: int getCurrentHintTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void onRemoteViewsLoaded(android.widget.RemoteViews,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvStreamConfig: int access.502(android.media.tv.TvStreamConfig,int)>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setColorModes(int,int)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.widget.RadialTimePickerView: void setInputEnabled(boolean)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.animation.ValueAnimator: void setRepeatCount(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.preference.SeekBarPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.IWindowSession.Stub.Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setArtwork(int,android.graphics.Bitmap)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.filterpacks.performance.ThroughputFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.performance.ThroughputFilter:android.filterfw.core.Filter>
<android.widget.Editor: void sendOnTextChanged(int,int)>:<protected>:<android.widget.Editor>
<android.database.sqlite.SQLiteConnection: int getConnectionId()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.Window: boolean hasSoftInputMode()>:<protected final>:<android.view.Window>
<android.widget.TextView.CharWrapper: char charAt(int)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.media.tv.TvInputService.Session.7: void run()>:<public>:<android.media.tv.TvInputService.Session.7:java.lang.Runnable>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodecInfo: int access.500(int,java.lang.String)>:<static>:<android.media.MediaCodecInfo>
<android.widget.ActionMenuView: boolean hideOverflowMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.HardwareCanvas: void setProperty(java.lang.String,java.lang.String)>:<public static>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.opengl.GLLogWrapper: java.lang.String toString(int,float[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[],float[])>:<private static>:<android.gesture.GestureUtils>
<android.widget.TabHost: int getCurrentTab()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.WebVttParser.5: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.5:android.media.WebVttParser.Phase>
<android.view.View: int getScrollBarSize()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.StackView: void onMeasure(int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void access.1500(android.view.ViewRootImpl.SyntheticJoystickHandler,android.view.MotionEvent)>:<static>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.print.IPrinterDiscoveryObserver.Stub: android.print.IPrinterDiscoveryObserver asInterface(android.os.IBinder)>:<public static>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setLanguage(java.lang.String)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.database.MatrixCursor: boolean isNull(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.Editor.HandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>:<protected abstract>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>:<private>:<android.view.ViewPropertyAnimator>
<android.view.View: void resolveDrawables()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaHTTPConnection: void finalize()>:<protected>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.media.tv.ITvInputManagerCallback: void onInputRemoved(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputManagerCallback:android.os.IInterface>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.media.effect.FilterGraphEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class)>:<public>:<android.media.effect.FilterGraphEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.tv.TvInputManager.1: void onSessionCreated(java.lang.String,android.os.IBinder,android.view.InputChannel,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.widget.HwAbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap createGroupBounds()>:<private>:<android.widget.GridLayout.Axis>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onInvalidated()>:<public>:<android.widget.ExpandableListConnector.MyDataSetObserver:android.database.DataSetObserver>
<android.media.tv.TvView: void setZOrderMediaOverlay(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.tv.TvStreamConfig: int access.202(android.media.tv.TvStreamConfig,int)>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glOrthof(float,float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.MediaSession.Token.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.session.MediaSession.Token.1:android.os.Parcelable.Creator>
<android.preference.SeekBarPreference: void onStopTrackingTouch(android.widget.SeekBar)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.accessibility.AccessibilityEvent: int getAction()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.TextView: void <clinit>()>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.AudioService: boolean isStreamAffectedByRingerMode(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityEvent: void appendRecord(android.view.accessibility.AccessibilityRecord)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.IRingtonePlayer.Stub.Proxy: boolean isPlaying(android.os.IBinder)>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept: void run()>:<public>:<android.widget.ListPopupWindow.ForwardingListener.DisallowIntercept:java.lang.Runnable>
<android.view.ViewRootImpl: void jank_processAfterTraversal(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.notification.ConditionProviderService.Provider: void <init>(android.service.notification.ConditionProviderService)>:<private>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.view.View.8: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.8:android.util.FloatProperty>
<android.opengl.GLES20: void glStencilMask(int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioService.AudioOrientationEventListener: void <init>(android.media.AudioService,android.content.Context)>:<public>:<android.media.AudioService.AudioOrientationEventListener:android.view.OrientationEventListener>
<android.preference.PreferenceActivity.HeaderAdapter: void <init>(android.content.Context,java.util.List,int,boolean)>:<public>:<android.preference.PreferenceActivity.HeaderAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.view.WindowId.1: void <init>()>:<>:<android.view.WindowId.1:android.os.Parcelable.Creator>
<android.service.dreams.DreamManagerInternal: void stopDream(boolean)>:<public abstract>:<android.service.dreams.DreamManagerInternal>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeNameResId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.TextView.Marquee: boolean isRunning()>:<>:<android.widget.TextView.Marquee>
<android.media.AudioPort: void <init>(android.media.AudioHandle,int,int[],int[],int[],android.media.AudioGain[])>:<>:<android.media.AudioPort>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>:<public abstract>:<android.media.AudioManager.OnAudioFocusChangeListener>
<android.view.WindowManagerPolicy.WindowState: android.view.IApplicationToken getAppToken()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.widget.Editor.CorrectionHighlighter: void invalidate(boolean)>:<private>:<android.widget.Editor.CorrectionHighlighter>
<android.view.IWindowManager.Stub.Proxy: void statusBarVisibilityChanged(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.session.MediaSession: void access.500(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.view.WindowInsets: boolean hasWindowDecorInsets()>:<public>:<android.view.WindowInsets>
<android.opengl.GLLogWrapper: void startLogIndices()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISessionController: void stop()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.IWindowManager.Stub.Proxy: void setScreenCaptureDisabled(int,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.AudioService.StreamOverride: void init(android.content.Context)>:<static>:<android.media.AudioService.StreamOverride:android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.media.FocusRequester: java.lang.String focusLossToString()>:<private>:<android.media.FocusRequester>
<android.security.IKeystoreService.Stub.Proxy: int exist(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.View.12: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.12:android.util.FloatProperty>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.widget.TimePickerSpinnerDelegate: int modulo12(int,boolean)>:<private static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int)>:<private native>:<android.media.MediaMetadataRetriever>
<android.opengl.GLLogWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean connectSocket()>:<private final>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.service.dreams.DreamService: boolean isInteractive()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.print.PrinterId: java.lang.String toString()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: int watchRotation(android.view.IRotationWatcher)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.IWindowSession.Stub: void <init>()>:<public>:<android.view.IWindowSession.Stub:android.os.Binder,android.view.IWindowSession>
<android.view.KeyCharacterMap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.session.ISession: void destroy()>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.service.notification.ZenModeConfig: boolean isValid()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.MediaController: void doPauseResume()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.MediaPlayer.TrackInfo.1: void <init>()>:<>:<android.media.MediaPlayer.TrackInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvInputInfo: void <init>(android.os.Parcel,android.media.tv.TvInputInfo.1)>:<>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.MediaExtractor: long getSampleTime()>:<public native>:<android.media.MediaExtractor>
<android.database.CursorWrapper: boolean isBeforeFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.MediaCodec.CryptoInfo: void set(int,int[],int[],byte[],byte[],int)>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.AudioService: int getStreamMaxVolume(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.gesture.GestureStore: void save(java.io.OutputStream)>:<public>:<android.gesture.GestureStore>
<android.media.ImageReader.SurfaceImage: android.media.ImageReader getReader()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SearchView: void setQrcodeEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.ExifInterface: void <clinit>()>:<static>:<android.media.ExifInterface>
<android.hsm.MediaTransactWrapper: void musicPausedOrStopped(int,int)>:<public static>:<android.hsm.MediaTransactWrapper>
<android.media.AudioSystem: int setForceUse(int,int)>:<public static native>:<android.media.AudioSystem>
<android.service.notification.ZenModeConfig: void writeXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IWindowManager: boolean inKeyguardRestrictedInputMode()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.gesture.GestureOverlayView: float access.1000(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: boolean glIsBuffer(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaScanner: android.graphics.BitmapFactory.Options access.1300(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryPreProcessings(int)>:<public static>:<android.media.audiofx.AudioEffect>
<android.widget.EdgeEffect: void update()>:<private>:<android.widget.EdgeEffect>
<android.view.View: java.lang.String toString()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ScaleGestureDetector: float getPreviousSpanX()>:<public>:<android.view.ScaleGestureDetector>
<android.media.session.ISessionCallback.Stub: void <init>()>:<public>:<android.media.session.ISessionCallback.Stub:android.os.Binder,android.media.session.ISessionCallback>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.view.TextureView: void setLayerPaint(android.graphics.Paint)>:<public>:<android.view.TextureView:android.view.View>
<android.view.PointerIcon: int access.102(android.view.PointerIcon,int)>:<static>:<android.view.PointerIcon:android.os.Parcelable>
<android.media.RemoteDisplay: void startListening(java.lang.String)>:<private>:<android.media.RemoteDisplay>
<android.media.CCParser: void <init>(android.media.CCParser.DisplayListener)>:<>:<android.media.CCParser>
<android.media.tv.TvStreamConfig.1: void <init>()>:<>:<android.media.tv.TvStreamConfig.1:android.os.Parcelable.Creator>
<android.filterpacks.imageproc.DrawOverlayFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.DrawOverlayFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnectionPool: void close()>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.MediaFile.MediaFileType: void <init>(int,java.lang.String)>:<>:<android.media.MediaFile.MediaFileType>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.Editor: void createInputContentTypeIfNeeded()>:<>:<android.widget.Editor>
<android.view.View: float getRotationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ProgressBar: void updateDrawableBounds(int,int)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.accounts.AccountManager.11: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.Bundle,android.app.Activity,int)>:<>:<android.accounts.AccountManager.11:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.view.ViewGroup: void <clinit>()>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.MediaPlayer.TrackInfo: java.lang.String toString()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.view.View: void postInvalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.textservice.TextServicesManager: void <clinit>()>:<static>:<android.view.textservice.TextServicesManager>
<android.filterpacks.imageproc.GrainFilter: void updateFrameSize(int,int)>:<private>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.GestureStroke: void <init>(android.graphics.RectF,float,float[],long[])>:<private>:<android.gesture.GestureStroke>
<android.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.media.AudioGain: void <init>(int,int,int,int,int,int,int,int,int)>:<>:<android.media.AudioGain>
<android.view.MotionEvent: void setTainted(boolean)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.media.AudioService: void sendAudioRecordStateChangedIntent(java.lang.String,int,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery.FlingRunnable: void <init>(android.widget.Gallery)>:<public>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.accessibility.AccessibilityWindowInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.ViewParent: void requestFitSystemWindows()>:<public abstract>:<android.view.ViewParent>
<android.netdetect.HwCustNetDetectServiceImpl: void registerForBroadcasts()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.gesture.GestureOverlayView: void setPaintAlpha(int)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputService.Stub.Proxy: void registerCallback(android.media.tv.ITvInputServiceCallback)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.Spinner.SpinnerPopup: android.graphics.drawable.Drawable getBackground()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.media.projection.IMediaProjectionManager.Stub: android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder)>:<public static>:<android.media.projection.IMediaProjectionManager.Stub:android.os.Binder,android.media.projection.IMediaProjectionManager>
<android.widget.Editor: void hideError()>:<private>:<android.widget.Editor>
<android.media.tv.TvInputService.1: void <init>(android.media.tv.TvInputService)>:<>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.view.ViewRootImpl: void handleOutOfResourcesException(android.view.Surface.OutOfResourcesException)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.projection.IMediaProjection: boolean canProjectAudio()>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.PresetReverb.BaseParameterListener: void <init>(android.media.audiofx.PresetReverb,android.media.audiofx.PresetReverb.1)>:<>:<android.media.audiofx.PresetReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.AbsLayoutParams: void clearHwFlags(int)>:<public>:<android.view.AbsLayoutParams>
<android.view.View: void resetResolvedPadding()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup.ChildListForAccessibility: void init(android.view.ViewGroup,boolean)>:<private>:<android.view.ViewGroup.ChildListForAccessibility>
<android.view.SurfaceControl: void nativeSetSize(long,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType valueOf(java.lang.String)>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.widget.Gallery: boolean access.002(android.widget.Gallery,boolean)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewOverlay.OverlayViewGroup: android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect)>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnectionPool: void throwIfClosedLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.DatePickerCalendarDelegate: boolean isEnabled()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.Window: void setSoftInputMode(int)>:<public>:<android.view.Window>
<android.print.PrinterDiscoverySession: void handlePrintersAdded(java.util.List)>:<private>:<android.print.PrinterDiscoverySession>
<android.security.KeyStoreParameter: int getFlags()>:<public>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.preference.PreferenceManager: void dismissAllScreens()>:<private>:<android.preference.PreferenceManager>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.DialogPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES30: void glEndQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.browse.MediaBrowser.MediaItem.1: void <init>()>:<>:<android.media.browse.MediaBrowser.MediaItem.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onNotificationRemoved(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.preference.PreferenceActivity: boolean hasNextButton()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.SurfaceControl.PhysicalDisplayInfo: void <init>(android.view.SurfaceControl.PhysicalDisplayInfo)>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.widget.RemoteViewsAdapter: void finalize()>:<protected>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.AccessibilityIterators: void <init>()>:<>:<android.widget.AccessibilityIterators>
<android.media.audiofx.Virtualizer: int getVirtualizationMode()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.widget.GridLayout.Axis: int[] getLocations()>:<public>:<android.widget.GridLayout.Axis>
<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaController.MessageHandler: void post(int,java.lang.Object,android.os.Bundle)>:<public>:<android.media.session.MediaController.MessageHandler:android.os.Handler>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int,boolean)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.ui.SurfaceTargetFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.view.Display: java.lang.String toString()>:<public>:<android.view.Display>
<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>:<private final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: void setScrollbarFadingEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetHost.UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>:<public>:<android.appwidget.AppWidgetHost.UpdateHandler:android.os.Handler>
<android.media.tv.ITvInputSession.Stub.Proxy: void setVolume(float)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.widget.Gallery: boolean access.800(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getQualityRange()>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.widget.FastScroller: void startPendingDrag()>:<private>:<android.widget.FastScroller>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor.PositionListener: void <init>(android.widget.Editor)>:<private>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RelativeLayout: void applyHorizontalSizeRules(android.widget.RelativeLayout.LayoutParams,int,int[])>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.ViewPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>:<public>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.preference.EditTextPreference.SavedState.1: void <init>()>:<>:<android.preference.EditTextPreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.AudioManager: boolean isMusicActiveRemotely()>:<public>:<android.media.AudioManager>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.media.MediaCodec.MediaImage: int getFormat()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.view.RenderNode: boolean nSetTop(long,int)>:<private static native>:<android.view.RenderNode>
<android.service.notification.ZenModeConfig: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.view.ViewDebug.3: void post(java.lang.Void[])>:<public transient>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.widget.ImageView.ScaleType: void <init>(java.lang.String,int,int)>:<private>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.media.MiniThumbFile: long getFileIndex(long)>:<private>:<android.media.MiniThumbFile>
<android.opengl.GLErrorWrapper: void glStencilMask(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.projection.IMediaProjection: void registerCallback(android.media.projection.IMediaProjectionCallback)>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.MediaScanner: android.net.Uri access.1700(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.SoundPool.SoundPoolDelegate: void autoPause()>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.FocusFinder: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>:<>:<android.view.FocusFinder>
<android.media.audiofx.Visualizer: int setCaptureSize(int)>:<public>:<android.media.audiofx.Visualizer>
<android.print.IPrintDocumentAdapter: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.database.sqlite.SQLiteConnection: void collectDbStatsUnsafe(java.util.ArrayList)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaRouter: void <init>(android.content.Context)>:<public>:<android.media.MediaRouter>
<android.preference.PreferenceActivity: void onContentChanged()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpHierarchy(android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.preference.PreferenceFragment: void onDestroyView()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.service.trust.TrustAgentService: void setManagingTrust(boolean)>:<public final>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManagerResponse: void <init>(android.accounts.IAccountManagerResponse)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.media.Image.Plane: int getRowStride()>:<public abstract>:<android.media.Image.Plane>
<android.widget.TextView.1: void run()>:<public>:<android.widget.TextView.1:java.lang.Runnable>
<android.preference.SeekBarVolumizer: void setSeekBar(android.widget.SeekBar)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.1000(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.view.View: boolean isDrawingCacheEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl: int getTextAlignment()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.1: void onSessionEvent(java.lang.String,android.os.Bundle,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.gesture.GestureStroke: android.gesture.GestureStroke deserialize(java.io.DataInputStream)>:<static>:<android.gesture.GestureStroke>
<android.printservice.PrintDocument: android.print.PrintDocumentInfo getInfo()>:<public>:<android.printservice.PrintDocument>
<android.view.InputDevice.1: void <init>()>:<>:<android.view.InputDevice.1:android.os.Parcelable.Creator>
<android.animation.Keyframe.FloatKeyframe: float getFloatValue()>:<public>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.media.MediaCodec: void native_queueInputBuffer(int,int,int,long,int)>:<private final native>:<android.media.MediaCodec>
<android.view.Choreographer: void removeCallbacksInternal(int,java.lang.Object,java.lang.Object)>:<private>:<android.view.Choreographer>
<android.view.ViewGroup: void setBooleanFlag(int,boolean)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.InputMethodManager: int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager.PendingEvent)>:<>:<android.view.inputmethod.InputMethodManager>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.GridLayout.Spec: int hashCode()>:<public>:<android.widget.GridLayout.Spec>
<android.media.AudioManager: void handleKeyUp(android.view.KeyEvent,int)>:<public>:<android.media.AudioManager>
<android.view.inputmethod.ExtractedText.1: void <init>()>:<>:<android.view.inputmethod.ExtractedText.1:android.os.Parcelable.Creator>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setShowWeekNumber(boolean)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.EncoderCapabilities.VideoEncoderCap: void <init>(int,int,int,int,int,int,int,int,int)>:<private>:<android.media.EncoderCapabilities.VideoEncoderCap>
<android.media.MediaRouter.RouteInfo: void setTag(java.lang.Object)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.AudioTrack: int native_get_playback_rate()>:<private final native>:<android.media.AudioTrack>
<android.animation.AnimatorSet: java.util.HashMap access.200(android.animation.AnimatorSet)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.service.media.MediaBrowserService: void performLoadChildren(java.lang.String,android.service.media.MediaBrowserService.ConnectionRecord)>:<private>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: int getRawTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRecorder.VideoEncoder: void <init>(android.media.MediaRecorder)>:<private>:<android.media.MediaRecorder.VideoEncoder>
<android.media.tv.TvInputService.1: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.view.GLES20Canvas: void nSetHighContrastText(long,boolean)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.session.ISessionCallback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.media.MediaScanner: boolean access.2400(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.WindowManagerPolicy.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.service.fingerprint.FingerprintManager: int getCurrentUserId()>:<private>:<android.service.fingerprint.FingerprintManager>
<android.view.WindowManager.LayoutParams: void <init>(int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.MediaPlayer.4: void <init>(android.media.MediaPlayer,java.io.FileDescriptor,long,long,android.media.SubtitleTrack,android.os.HandlerThread)>:<>:<android.media.MediaPlayer.4:java.lang.Runnable>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.Editor.HandleView: void onHandleMovedOuter()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.IInputFilterHost.Stub: android.view.IInputFilterHost asInterface(android.os.IBinder)>:<public static>:<android.view.IInputFilterHost.Stub:android.os.Binder,android.view.IInputFilterHost>
<android.view.RenderNode: boolean nSetTranslationZ(long,float)>:<private static native>:<android.view.RenderNode>
<android.media.MediaRecorder: void native_stop()>:<public native>:<android.media.MediaRecorder>
<android.opengl.GLES20: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvInputService.Session.1: void run()>:<public>:<android.media.tv.TvInputService.Session.1:java.lang.Runnable>
<android.view.View: int getTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo getRangeInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.filterpacks.imageproc.RedEyeFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.media.tv.ITvInputManager: java.util.List getTvContentRatingSystemList(int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.AudioSystem: int initStreamVolume(int,int,int)>:<public static native>:<android.media.AudioSystem>
<android.view.accessibility.AccessibilityNodeInfo: boolean isDefaultLegacyStandardAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>:<private static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaMetadataRetriever: void <init>()>:<public>:<android.media.MediaMetadataRetriever>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar getMinDate()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.ViewParent: boolean canResolveTextAlignment()>:<public abstract>:<android.view.ViewParent>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setUpListView()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.media.MediaMuxer: void nativeStop(long)>:<private static native>:<android.media.MediaMuxer>
<android.accounts.Account.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFinished(android.print.PageRange[])>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder hdmiPortId(int)>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.view.ViewDebug: java.lang.String formatIntToHexString(int)>:<private static>:<android.view.ViewDebug>
<android.widget.Scroller.ViscousFluidInterpolator: void <init>()>:<>:<android.widget.Scroller.ViscousFluidInterpolator:android.view.animation.Interpolator>
<android.database.ContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.ContentObserver>
<android.media.MediaCodec: void <clinit>()>:<static>:<android.media.MediaCodec>
<android.widget.ProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.DatePicker: void <clinit>()>:<static>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISession: void setExtras(android.os.Bundle)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.media.SubtitleTrack.Run: void removeAtEndTimeMs()>:<public>:<android.media.SubtitleTrack.Run>
<android.media.IAudioService.Stub.Proxy: void setMasterMute(boolean,int,java.lang.String,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.media.MediaDrm: long access.000(android.media.MediaDrm)>:<static>:<android.media.MediaDrm>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.view.inputmethod.InputMethodManager.PendingEvent: void run()>:<public>:<android.view.inputmethod.InputMethodManager.PendingEvent:java.lang.Runnable>
<android.printservice.PrintJob: android.print.PrintJobInfo getInfo()>:<public>:<android.printservice.PrintJob>
<android.view.inputmethod.ExtractedTextRequest.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.ExtractedTextRequest.1:android.os.Parcelable.Creator>
<android.view.GestureDetector.GestureHandler: void <init>(android.view.GestureDetector)>:<>:<android.view.GestureDetector.GestureHandler:android.os.Handler>
<android.view.InputFilter: void filterInputEvent(android.view.InputEvent,int)>:<public final>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.media.AudioService.ScoClient: void incCount(int)>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.netdetect.HwCustNetDetectServiceImpl: void startWiFiWebStateDetect(java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.browse.MediaBrowser.MediaItem: boolean isPlayable()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.media.IVolumeController.Stub.Proxy: void masterVolumeChanged(int)>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean parseDate(java.lang.String,java.util.Calendar)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.animation.IntKeyframeSet: void <init>(android.animation.Keyframe.IntKeyframe[])>:<public transient>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.videosrc.SurfaceTextureSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.service.notification.ConditionProviderService: android.service.notification.ConditionProviderService.H access.200(android.service.notification.ConditionProviderService)>:<static>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.notification.Condition: java.lang.String toString()>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.widget.ScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void startListening(android.os.IBinder,android.service.fingerprint.IFingerprintServiceReceiver,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.view.accessibility.AccessibilityManager: void handleNotifyHighTextContrastStateChanged()>:<private>:<android.view.accessibility.AccessibilityManager>
<android.view.HardwareRenderer: void <clinit>()>:<static>:<android.view.HardwareRenderer>
<android.widget.ActionMenuView: void <init>(android.content.Context)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.Transformation: float getAlpha()>:<public>:<android.view.animation.Transformation>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.ViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes: void setMediaSize(android.print.PrintAttributes.MediaSize)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.AudioService.AudioHandler: void setAllVolumes(android.media.AudioService.VolumeStreamState)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.AudioRecord: void loge(java.lang.String)>:<private static>:<android.media.AudioRecord>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ProgressBar: void setProgress(int,boolean)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.Menu: android.view.MenuItem add(int)>:<public abstract>:<android.view.Menu>
<android.view.accessibility.AccessibilityManager: void access.200(android.view.accessibility.AccessibilityManager)>:<static>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLSurfaceView.GLThreadManager: boolean tryAcquireEglContextLocked(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.filterpacks.ui.SurfaceRenderFilter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.media.tv.TvInputManager: java.util.List getTvInputList()>:<public>:<android.media.tv.TvInputManager>
<android.gesture.Gesture: int describeContents()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.printservice.PrintServiceInfo: java.lang.String toString()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<android.widget.CalendarView: int getShownWeekCount()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)>:<private>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.ViewTreeObserver.InternalInsetsInfo: void reset()>:<>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void <init>(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.view.WindowLeaked: void <init>(java.lang.String)>:<public>:<android.view.WindowLeaked:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.preference.PreferenceGroupAdapter: void onPreferenceChange(android.preference.Preference)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.service.notification.NotificationRankingUpdate.1: android.service.notification.NotificationRankingUpdate createFromParcel(android.os.Parcel)>:<public>:<android.service.notification.NotificationRankingUpdate.1:android.os.Parcelable.Creator>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.test.AndroidTestCase: void <init>()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.View: boolean isScrollContainer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl.TrackballAxis: void <init>()>:<>:<android.view.ViewRootImpl.TrackballAxis>
<android.widget.AutoCompleteTextView.DropDownItemClickListener: void <init>(android.widget.AutoCompleteTextView)>:<private>:<android.widget.AutoCompleteTextView.DropDownItemClickListener:android.widget.AdapterView.OnItemClickListener>
<android.view.ViewDebug.2: void run(java.lang.Void[])>:<public transient>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.DatePickerCalendarDelegate: void setSpinnersShown(boolean)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.Editor: boolean shouldBlink()>:<private>:<android.widget.Editor>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.media.WebVttParser.6: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.6:android.media.WebVttParser.Phase>
<android.preference.MultiSelectListPreference: java.util.Set access.200(android.preference.MultiSelectListPreference)>:<static>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>:<private>:<android.view.WindowManagerGlobal>
<android.widget.CalendarView: long getMinDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Equalizer: short[] getBandLevelRange()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.widget.ZoomControls: void show()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.ProgressBar: void setProgressDrawableTiled(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.audiofx.AudioEffect.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<android.widget.TabHost: void clearAllTabs()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.Window: android.transition.Transition getExitTransition()>:<public>:<android.view.Window>
<android.widget.SearchView: void onSearchClicked()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void <init>()>:<public>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.media.ImageReader: void access.500(android.media.ImageReader,android.media.Image)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.ViewRootImpl: void createContextMenu(android.view.ContextMenu)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.media.MediaMetadataRetriever: void <clinit>()>:<static>:<android.media.MediaMetadataRetriever>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.accounts.AccountManager.BaseFutureTask: void <init>(android.accounts.AccountManager,android.os.Handler)>:<public>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.media.MediaScanner: void processM3uPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>:<private>:<android.media.MediaScanner>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: void <clinit>()>:<static>:<android.view.MenuInflater.InflatedOnMenuItemClickListener:android.view.MenuItem.OnMenuItemClickListener>
<android.security.AndroidKeyStore: java.security.cert.Certificate engineGetCertificate(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.service.wallpaper.IWallpaperConnection: void engineShown(android.service.wallpaper.IWallpaperEngine)>:<public abstract>:<android.service.wallpaper.IWallpaperConnection:android.os.IInterface>
<android.view.DisplayAdjustments: int hashCode()>:<public>:<android.view.DisplayAdjustments>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>:<public static transient>:<android.view.ViewDebug>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdClientThread(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.AccessibilityInteractionController>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: void nCallTwoIntMethod(java.lang.Object,long,int,int)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>:<static>:<android.media.Utils>
<android.media.session.ParcelableVolumeInfo.1: android.media.session.ParcelableVolumeInfo[] newArray(int)>:<public>:<android.media.session.ParcelableVolumeInfo.1:android.os.Parcelable.Creator>
<android.view.MotionEvent: void setDownTime(long)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.ITvInputService: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.database.CursorWindow: void clear()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.AudioService: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.notification.NotificationListenerService: void onListenerConnected()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onChanged()>:<public>:<android.widget.ExpandableListConnector.MyDataSetObserver:android.database.DataSetObserver>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.AbstractCursor: boolean onMove(int,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.IAudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.IWindowManager: int getRotation()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.preference.Preference.BaseSavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.Preference.BaseSavedState.1:android.os.Parcelable.Creator>
<android.media.session.MediaController.MessageHandler: void <init>(android.os.Looper,android.media.session.MediaController.Callback)>:<public>:<android.media.session.MediaController.MessageHandler:android.os.Handler>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.IDreamManager: void dream()>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.view.ViewGroup: boolean resolveRtlPropertiesIfNeeded()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowManagerPolicy: int getConfigDisplayHeight(int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask: void run()>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask:java.util.TimerTask>
<android.appwidget.AppWidgetHostView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.SetRemoteViewsAdapterList:android.widget.RemoteViews.Action>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.gesture.GestureOverlayView: long access.200(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.media.MediaPlayer: boolean isPlaying()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.accounts.AccountManagerResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRotationChanged(int)>:<public abstract>:<android.view.WindowManagerInternal.MagnificationCallbacks>
<android.media.MediaDrm: boolean access.700(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<static>:<android.media.MediaDrm>
<android.view.IWindowManager.Stub.Proxy: void startAppFreezingScreen(android.os.IBinder,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.SeekBarPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.print.PrinterCapabilitiesInfo: void <init>(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onFastForward()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.preference.SeekBarVolumizer: void postSetVolume(int)>:<>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.AudioDevice: boolean isInputDevice()>:<public>:<android.media.AudioDevice>
<android.view.GraphicBuffer.1: void <init>()>:<>:<android.view.GraphicBuffer.1:android.os.Parcelable.Creator>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.widget.GridLayout.Spec: boolean equals(java.lang.Object)>:<public>:<android.widget.GridLayout.Spec>
<android.widget.TimePickerSpinnerDelegate: boolean isEnabled()>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.print.PrintDocumentInfo.Builder: void <init>(java.lang.String)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.media.RemoteControlClient.OnGetPlaybackPositionListener: long onGetPlaybackPosition()>:<public abstract>:<android.media.RemoteControlClient.OnGetPlaybackPositionListener>
<android.widget.Gallery: void detachOffScreenChildren(boolean)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.accounts.ChooseAccountActivity: void <init>()>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.service.persistentdata.PersistentDataBlockManager: void setOemUnlockEnabled(boolean)>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.tv.TvInputManager.Session: void tune(android.net.Uri,android.os.Bundle)>:<public>:<android.media.tv.TvInputManager.Session>
<android.media.ClosedCaptionWidget.CCLineBox: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>:<>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: boolean getOemUnlockEnabled()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.view.View: float getTranslationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: void recordNewWindow(int,long)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.MediaCodecList: java.lang.String findEncoderForFormat(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecList>
<android.media.IAudioService.Stub.Proxy: boolean isMasterMute()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.view.Window: void <init>(android.content.Context)>:<public>:<android.view.Window>
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>:<public abstract>:<android.view.MenuItem>
<android.printservice.PrintJob: boolean isInImmutableState()>:<private>:<android.printservice.PrintJob>
<android.widget.ProgressBar: void drawTrack(android.graphics.Canvas)>:<>:<android.widget.ProgressBar:android.view.View>
<android.widget.Toast: android.app.INotificationManager getService()>:<private static>:<android.widget.Toast>
<android.print.IPrintSpooler.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>:<public static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityCache: void <init>()>:<>:<android.view.accessibility.AccessibilityCache>
<android.media.effect.effects.BackDropperEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.BackDropperEffect:android.media.effect.FilterGraphEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.media.AudioService: void startBluetoothSco(android.os.IBinder,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: void clearComposingText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ActionProvider: void subUiVisibilityChanged(boolean)>:<public>:<android.view.ActionProvider>
<android.media.projection.IMediaProjection.Stub: void <init>()>:<public>:<android.media.projection.IMediaProjection.Stub:android.os.Binder,android.media.projection.IMediaProjection>
<android.view.GraphicBuffer: void finalize()>:<protected>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.media.session.ISessionCallback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.widget.AdapterView: void removeViewAt(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.ViewRootImpl: boolean access.600(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioTrack: int native_write_native_bytes(java.lang.Object,int,int,int,boolean)>:<private final native>:<android.media.AudioTrack>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>:<public>:<android.media.JetPlayer>
<android.media.MediaCodec.BufferMap.CodecBuffer: void <init>(android.media.MediaCodec.1)>:<>:<android.media.MediaCodec.BufferMap.CodecBuffer>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.IAudioService.Stub.Proxy: int setHdmiSystemAudioSupported(boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.EGLLogWrapper: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.security.KeyStore: boolean delete(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.view.AbsSavedState: void <clinit>()>:<static>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.View: void onDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.TextView: boolean getDefaultEditable()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewAnimator: void showOnly(int)>:<>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.VideoView: int access.1100(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.service.notification.NotificationListenerService.RankingMap: void <init>(android.service.notification.NotificationRankingUpdate,android.service.notification.NotificationListenerService.1)>:<>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] preceding(int)>:<public>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.widget.GridLayout.Axis: void solveAndDistributeSpace(int[])>:<private>:<android.widget.GridLayout.Axis>
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.IAudioService.Stub.Proxy: boolean shouldVibrate(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.EGLObjectHandle: long getNativeHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>:<protected transient>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.widget.RemoteViewsAdapter: void access.1600(android.widget.RemoteViewsAdapter,int,boolean)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.Display: int getOrientation()>:<public>:<android.view.Display>
<android.widget.ProgressBar: void applyIndeterminateTint()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.Editor.SuggestionsPopupWindow: void highlightTextDifferences(android.widget.Editor.SuggestionsPopupWindow.SuggestionInfo,int,int)>:<private>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.widget.RemoteViewsAdapter: android.widget.RemoteViews.OnClickHandler access.1100(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>:<public>:<android.animation.LayoutTransition>
<android.media.FocusRequester: void handleExternalFocusGain(int)>:<>:<android.media.FocusRequester>
<android.media.session.MediaSession.QueueItem: void <init>(android.os.Parcel,android.media.session.MediaSession.1)>:<>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.service.fingerprint.IFingerprintService: void startListening(android.os.IBinder,android.service.fingerprint.IFingerprintServiceReceiver,int)>:<public abstract>:<android.service.fingerprint.IFingerprintService:android.os.IInterface>
<android.view.ViewPropertyAnimatorRT: void cancelAnimators(java.util.ArrayList)>:<private>:<android.view.ViewPropertyAnimatorRT>
<android.preference.PreferenceManager: java.lang.String getDefaultSharedPreferencesName(android.content.Context)>:<private static>:<android.preference.PreferenceManager>
<android.opengl.GLES30: void _nativeClassInit()>:<private static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.HwAbsListView: android.view.View getCheckableView(android.view.View)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.RenderNode: boolean nSetOutlineRoundRect(long,int,int,int,int,float,float)>:<private static native>:<android.view.RenderNode>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.InputEventSender: boolean nativeSendMotionEvent(long,int,android.view.MotionEvent)>:<private static native>:<android.view.InputEventSender>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>:<public abstract>:<android.view.Window.Callback>
<android.media.TtmlRenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>:<public>:<android.widget.RemoteViews.TextViewSizeAction:android.widget.RemoteViews.Action>
<android.view.View: void jumpDrawablesToCurrentState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.ViewRootImpl: void handleDragEvent(android.view.DragEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaCodec: java.lang.String getName()>:<public final native>:<android.media.MediaCodec>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.LayoutTransition: boolean isTransitionTypeEnabled(int)>:<public>:<android.animation.LayoutTransition>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.animation.ArgbEvaluator: void <clinit>()>:<static>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.media.session.MediaController: long getFlags()>:<public>:<android.media.session.MediaController>
<android.widget.Scroller: int getFinalY()>:<public final>:<android.widget.Scroller>
<android.print.PrintAttributes.1: void <init>()>:<>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.animation.StateListAnimator: android.animation.Animator getRunningAnimator()>:<public>:<android.animation.StateListAnimator>
<android.preference.PreferenceGroupAdapter.1: void <init>(android.preference.PreferenceGroupAdapter)>:<>:<android.preference.PreferenceGroupAdapter.1:java.lang.Runnable>
<android.media.SoundPool.SoundPoolDelegate: int play(int,float,float,int,int,float)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.R.string: void <init>()>:<public>:<android.R.string>
<android.accounts.CantAddAccountActivity: void <init>()>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void drawableStateChanged()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()>:<>:<android.view.TextureView:android.view.View>
<android.widget.Editor: android.graphics.drawable.Drawable access.2600(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.media.AudioService.ScoClient: void requestScoState(int,int)>:<private>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.media.tv.TvStreamConfig: int getType()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.view.View.8: void setValue(android.view.View,float)>:<public>:<android.view.View.8:android.util.FloatProperty>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.opengl.GLES10: void glFogfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputManager.Session: java.lang.String access.502(android.media.tv.TvInputManager.Session,java.lang.String)>:<static>:<android.media.tv.TvInputManager.Session>
<android.service.notification.ZenModeConfig: void <clinit>()>:<static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.SearchView: void setActionModeEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.WindowManagerImpl: void removeViewImmediate(android.view.View)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.ShareActionProvider: void setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ThreadedRenderer: void nTrimMemory(int)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.View: void setAccessibilityDelegate(android.view.View.AccessibilityDelegate)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.media.tv.ITvInputSessionWrapper: void createOverlayView(android.os.IBinder,android.graphics.Rect)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.animation.AnimatorSet.Node: void <init>(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Node:java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvInputManager.SessionCallback: void <init>()>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.view.inputmethod.CorrectionInfo: int describeContents()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionService.MyHandler: void handleMessage(android.os.Message)>:<public>:<android.service.voice.VoiceInteractionService.MyHandler:android.os.Handler>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.session.ISession: void setPlaybackState(android.media.session.PlaybackState)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.effect.effects.GrayscaleEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.GrayscaleEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void access.2200(android.view.ViewRootImpl.SyntheticTouchNavigationHandler,long)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.widget.Gallery.FlingRunnable: void access.100(android.widget.Gallery.FlingRunnable,boolean)>:<static>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.opengl.EGLLogWrapper: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewRootImpl: boolean enableRefreshDirty()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.print.PrintAttributes: void setResolution(android.print.PrintAttributes.Resolution)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.accessibility.IAccessibilityManager: android.os.IBinder getWindowToken(int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.opengl.GLES20: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: int getScrollY()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Tokenizer.DataTokenizer: void <init>(android.media.Tokenizer)>:<>:<android.media.Tokenizer.DataTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.view.View: boolean isActionableForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper.PointerInfo: void bindByteBuffer()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.media.SoundPool.SoundPoolImpl: boolean isRestricted()>:<private>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.AbsSavedState.2: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.AbsSavedState.2:android.os.Parcelable.Creator>
<android.view.HardwareRenderer: void setOpaque(boolean)>:<abstract>:<android.view.HardwareRenderer>
<android.media.MediaFormat: int getInteger(java.lang.String,int)>:<public final>:<android.media.MediaFormat>
<android.widget.Editor: void <init>(android.widget.TextView)>:<public>:<android.widget.Editor>
<android.view.ViewGroupOverlay: void add(android.view.View)>:<public>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.view.RenderNode: boolean setOutline(android.graphics.Outline)>:<public>:<android.view.RenderNode>
<android.widget.ZoomButtonsController: android.view.View findViewForTouch(int,int)>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.database.MergeCursor: int getInt(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.MediaRouter.Callback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.media.effect.FilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<protected>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataRetriever: void native_setup()>:<private native>:<android.media.MediaMetadataRetriever>
<android.view.GraphicBuffer: void <clinit>()>:<static>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.RenderNodeAnimator: android.animation.Animator clone()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.opengl.GLES30: void glBindSampler(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaFocusControl: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.KeyEvent: int getKeyCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.widget.ListPopupWindow.3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.ListPopupWindow.3:android.widget.AdapterView.OnItemSelectedListener>
<android.widget.RelativeLayout: void setGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.RenderNode: boolean nHasIdentityMatrix(long)>:<private static native>:<android.view.RenderNode>
<android.filterpacks.videosink.MediaEncoderFilter: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.filterpacks.base.CallbackFilter.CallbackRunnable: void <init>(android.filterpacks.base.CallbackFilter,android.filterfw.core.FilterContext.OnFrameReceivedListener,android.filterfw.core.Filter,android.filterfw.core.Frame,java.lang.Object)>:<public>:<android.filterpacks.base.CallbackFilter.CallbackRunnable:java.lang.Runnable>
<android.database.BulkCursorDescriptor: int describeContents()>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.preference.PreferenceScreen.HwDialog: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.preference.PreferenceScreen.HwDialog:android.app.Dialog>
<android.service.dreams.DreamService: void setFullscreen(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.widget.AbsListView.SavedState: java.lang.String toString()>:<public>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.Editor.TextModifyOperation: void undo()>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.media.tv.TvInputService.Session: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.media.ExifInterface: boolean hasThumbnail()>:<public>:<android.media.ExifInterface>
<android.widget.FastScroller: void setScrollbarPosition(int)>:<public>:<android.widget.FastScroller>
<android.media.session.MediaSession.Token.1: android.media.session.MediaSession.Token createFromParcel(android.os.Parcel)>:<public>:<android.media.session.MediaSession.Token.1:android.os.Parcelable.Creator>
<android.preference.RingtonePreference: void setShowDefault(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLLogWrapper: java.lang.String getFactor(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.Virtualizer: boolean getAnglesInt(int,int,int[])>:<private>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.service.fingerprint.FingerprintUtils: boolean removeFingerprintIdForUser(int,android.content.ContentResolver,int)>:<public static>:<android.service.fingerprint.FingerprintUtils>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.MotionEvent: void nativeSetEdgeFlags(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.SurfaceControl: void nativeSetLayerStack(long,int)>:<private static native>:<android.view.SurfaceControl>
<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: byte[] nativeGetBlob(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.audiofx.PresetReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.media.audiofx.PresetReverb.BaseParameterListener: void <init>(android.media.audiofx.PresetReverb)>:<private>:<android.media.audiofx.PresetReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.service.media.MediaBrowserService.ServiceBinder.2: void <init>(android.service.media.MediaBrowserService.ServiceBinder,android.service.media.IMediaBrowserServiceCallbacks)>:<>:<android.service.media.MediaBrowserService.ServiceBinder.2:java.lang.Runnable>
<android.widget.ListView: boolean fullScroll(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.CCParser.CCLineBuilder: android.text.SpannableStringBuilder getStyledText(android.view.accessibility.CaptioningManager.CaptionStyle)>:<>:<android.media.CCParser.CCLineBuilder>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.InputChannel: java.lang.String nativeGetName()>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glFlush()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.SearchView.11: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.SearchView.11:android.text.TextWatcher>
<android.widget.ListView: int getArrowScrollPreviewLength()>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe.IntKeyframe: void <init>(float,int)>:<>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.media.PlayerRecord: boolean hasMatchingMediaButtonIntent(android.app.PendingIntent)>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.WebVttRenderingWidget.SpanLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<public>:<android.media.WebVttRenderingWidget.SpanLayout:com.android.internal.widget.SubtitleView>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>:<public static native>:<android.opengl.EGL14>
<android.media.TtmlUtils: java.lang.String applyDefaultSpacePolicy(java.lang.String)>:<public static>:<android.media.TtmlUtils>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AutoCompleteTextView: int getThreshold()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.MediaCodecInfo.AudioCapabilities: boolean isSampleRateSupported(int)>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.Editor.ActionPopupWindow: int getVerticalLocalPosition(int)>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.service.wallpaper.WallpaperService.Engine.2: void onRelayoutContainer()>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.filterpacks.base.GLTextureSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.GLTextureSource:android.filterfw.core.Filter>
<android.view.View: android.view.ViewOverlay getOverlay()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)>:<public static final>:<android.media.MediaCodecList>
<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)>:<public>:<android.view.ViewTreeObserver>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.900(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.media.tv.TvView: int access.102(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.Window: void setGravity(int)>:<public>:<android.view.Window>
<android.media.AudioPortEventHandler: java.util.ArrayList access.000(android.media.AudioPortEventHandler)>:<static>:<android.media.AudioPortEventHandler>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.media.ClosedCaptionWidget: android.graphics.Rect access.300()>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.preference.Preference: boolean isEnabled()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView: void setUndoManager(android.content.UndoManager,java.lang.String)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.TtmlNode: boolean isActive(long,long)>:<public>:<android.media.TtmlNode>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>:<public native>:<android.media.MediaMetadataRetriever>
<android.service.voice.VoiceInteractionSession.1: boolean[] supportsCommands(java.lang.String,java.lang.String[])>:<public>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.animation.RectEvaluator: void <init>()>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.media.session.MediaSession.CallbackStub: void onSkipToTrack(long)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.GLES20Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioService: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.HardwareRenderer: void destroyHardwareResources(android.view.View)>:<abstract>:<android.view.HardwareRenderer>
<android.database.IBulkCursor: void onMove(int)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.view.AccessibilityIterators.WordTextSegmentIterator: boolean isStartBoundary(int)>:<private>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.AudioTrack: int native_get_native_frame_count()>:<private final native>:<android.media.AudioTrack>
<android.view.ScaleGestureDetector: void setQuickScaleEnabled(boolean)>:<public>:<android.view.ScaleGestureDetector>
<android.service.media.MediaBrowserService: void <init>()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)>:<private static>:<android.media.RingtoneManager>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaMetadataRetriever>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onFastForward()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioPatch: void <init>(android.media.AudioHandle,android.media.AudioPortConfig[],android.media.AudioPortConfig[])>:<>:<android.media.AudioPatch>
<android.media.Metadata: java.lang.String getString(int)>:<public>:<android.media.Metadata>
<android.filterpacks.base.InputStreamSource: void setupPorts()>:<public>:<android.filterpacks.base.InputStreamSource:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection.PreparedStatement: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.PreparedStatement>
<android.media.MediaCodecInfo.CodecCapabilities: void <init>()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.MenuInflater: void <clinit>()>:<static>:<android.view.MenuInflater>
<android.database.CursorWrapper: int getPosition()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.service.trust.TrustAgentService: android.os.Handler access.400(android.service.trust.TrustAgentService)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.service.dreams.DreamService: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.TextClock: void unregisterReceiver()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.effect.effects.DuotoneEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.DuotoneEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.service.notification.StatusBarNotification: java.lang.String toString()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glBindFramebufferOES(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.AudioEffect: int getParameter(int[],int[])>:<public>:<android.media.audiofx.AudioEffect>
<android.security.IKeyChainAliasCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.security.IKeyChainAliasCallback.Stub.Proxy:android.security.IKeyChainAliasCallback>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>:<public>:<android.preference.PreferenceManager>
<android.widget.Editor: boolean performLongClick(boolean)>:<public>:<android.widget.Editor>
<android.view.View.UnsetPressedState: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.UnsetPressedState:java.lang.Runnable>
<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.media.MediaHTTPConnection: void seekTo(long)>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.service.voice.AlwaysOnHotwordDetector: void <init>(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback,android.hardware.soundtrigger.KeyphraseEnrollmentInfo,android.service.voice.IVoiceInteractionService,com.android.internal.app.IVoiceInteractionManagerService)>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.preference.PreferenceManager: void dispatchActivityResult(int,int,android.content.Intent)>:<>:<android.preference.PreferenceManager>
<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public abstract>:<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.ddm.DdmHandleHello: void <init>()>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources.Theme,int)>:<public static>:<android.animation.AnimatorInflater>
<android.media.MediaCodecInfo.CodecCapabilities: void <init>(android.media.MediaCodecInfo.CodecProfileLevel[],int[],boolean,int,android.media.MediaFormat,android.media.MediaFormat)>:<>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.AudioPortEventHandler: void unregisterListener(android.media.AudioManager.OnAudioPortUpdateListener)>:<>:<android.media.AudioPortEventHandler>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>:<public>:<android.widget.Filter>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>:<public final>:<android.view.AbsSavedState:android.os.Parcelable>
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>:<public>:<android.media.AudioManager>
<android.media.AudioGainConfig: int channelMask()>:<public>:<android.media.AudioGainConfig>
<android.view.animation.Animation: void setFillEnabled(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.preference.Preference: void dispatchSetInitialValue()>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodSubtype.1: void <init>()>:<>:<android.view.inputmethod.InputMethodSubtype.1:android.os.Parcelable.Creator>
<android.media.CCParser.CCMemory: void moveCursorTo(int,int)>:<private>:<android.media.CCParser.CCMemory>
<android.opengl.GLLogWrapper: void glClearColorx(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.VideoView: android.content.Context access.1800(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.InputChannel.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.InputChannel.1:android.os.Parcelable.Creator>
<android.view.inputmethod.InputMethodInfo: boolean supportsSwitchingToNextInputMethod()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.MagnificationSpec: void <clinit>()>:<static>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.media.session.MediaController: boolean controlsSameSession(android.media.session.MediaController)>:<public>:<android.media.session.MediaController>
<android.media.session.ISessionManager.Stub.Proxy: void dispatchAdjustVolume(int,int,int)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.media.tv.ITvInputSessionWrapper: void requestUnblockContent(java.lang.String)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.widget.Editor: boolean canSelectTextOuter()>:<protected>:<android.widget.Editor>
<android.view.MotionEvent: int getButtonState()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.security.IKeyChainAliasCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.security.IKeyChainAliasCallback.Stub.Proxy:android.security.IKeyChainAliasCallback>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<android.view.GLES20Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioService: void access.6400(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.GridLayout.Axis: int getCount()>:<public>:<android.widget.GridLayout.Axis>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.media.SoundPool.SoundPoolDelegate: void setPriority(int,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterpacks.imageproc.ImageSlicer: void calcOutputFormatForInput(android.filterfw.core.Frame)>:<private>:<android.filterpacks.imageproc.ImageSlicer:android.filterfw.core.Filter>
<android.media.AudioManager: void loadSoundEffects()>:<public>:<android.media.AudioManager>
<android.media.AudioTrack: int native_get_timestamp(long[])>:<private final native>:<android.media.AudioTrack>
<android.widget.Gallery: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.SubtitleController: void access.000(android.media.SubtitleController)>:<static>:<android.media.SubtitleController>
<android.preference.PreferenceActivity: void access.000(android.preference.PreferenceActivity)>:<static>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.TextView.3: void run()>:<public>:<android.widget.TextView.3:java.lang.Runnable>
<android.view.Nsd: void releaseNSD()>:<static>:<android.view.Nsd>
<android.view.ThreadedRenderer: android.view.HardwareLayer createTextureLayer()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.filterpacks.imageproc.BitmapSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setSubtitle(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.Keyframe.IntKeyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.media.MediaScanner.MyMediaScannerClient: boolean convertGenreCode(java.lang.String,java.lang.String)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.widget.ListView.ArrowScrollFocusResult: int getSelectedPosition()>:<public>:<android.widget.ListView.ArrowScrollFocusResult>
<android.widget.TabWidget: void setLeftStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.IRemoteControlClient.Stub.Proxy: void setBitmapSizeForDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.database.sqlite.SQLiteConnection: void setForeignKeyModeFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.AudioDevice: java.lang.String getAddress()>:<public>:<android.media.AudioDevice>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLErrorWrapper: void glSampleCoveragex(int,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.WindowInsets: int getWindowDecorInsetRight()>:<public>:<android.view.WindowInsets>
<android.media.MediaCodec: void freeByteBuffers(java.nio.ByteBuffer[])>:<private final>:<android.media.MediaCodec>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.MediaRouterClientState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.MediaRouterClientState.1:android.os.Parcelable.Creator>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.View.AttachInfo: void <init>(android.view.IWindowSession,android.view.IWindow,android.view.Display,android.view.ViewRootImpl,android.os.Handler,android.view.View.AttachInfo.Callbacks)>:<>:<android.view.View.AttachInfo>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void setAnimatedValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.view.SurfaceControl: void nativeSetAlpha(long,float)>:<private static native>:<android.view.SurfaceControl>
<android.widget.FastScroller: void stop()>:<public>:<android.widget.FastScroller>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.view.MotionEvent: void setAction(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.AudioEffect: int setParameter(int[],byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onFontScaleChanged(float)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.EdgeEffect: void setSize(int,int)>:<public>:<android.widget.EdgeEffect>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.DragEvent.1: android.view.DragEvent createFromParcel(android.os.Parcel)>:<public>:<android.view.DragEvent.1:android.os.Parcelable.Creator>
<android.opengl.GLES10: void glClearDepthx(int)>:<public static native>:<android.opengl.GLES10>
<android.database.BulkCursorToCursorAdaptor: void close()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.WindowManagerPolicy: boolean canBeForceHidden(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.tv.TvInputService.Session: void unblockContent(java.lang.String)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.preference.MultiSelectListPreference: void setEntryValues(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View.AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.accounts.ChooseAccountTypeActivity: java.util.ArrayList access.000(android.accounts.ChooseAccountTypeActivity)>:<static>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ScaleGestureDetector: float getScaleFactor()>:<public>:<android.view.ScaleGestureDetector>
<android.view.Choreographer: void doFrame(long,int)>:<>:<android.view.Choreographer>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView.OnDismissListener: void onDismiss()>:<public abstract>:<android.widget.AutoCompleteTextView.OnDismissListener>
<android.view.WindowAnimationFrameStats: void init(long,long[])>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.ViewGroup: void setLayoutMode(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>:<public>:<android.media.MediaExtractor>
<android.media.IRemoteControlClient.Stub.Proxy: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.view.View: android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.CaptioningManager.2: void run()>:<public>:<android.view.accessibility.CaptioningManager.2:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4x(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.AudioService.AudioHandler: void persistRingerMode(int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.tv.ITvInputService.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputService.Stub:android.os.Binder,android.media.tv.ITvInputService>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPSS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.RadialTimePickerView.IntHolder: void <init>(int)>:<public>:<android.widget.RadialTimePickerView.IntHolder>
<android.widget.TextView: void setInputExtras(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioService.VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int,android.media.AudioService.1)>:<>:<android.media.AudioService.VolumeStreamState>
<android.database.sqlite.SQLiteConnection.Operation: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.Operation>
<android.widget.ProgressBar: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.Gallery.FlingRunnable: void stop(boolean)>:<public>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.widget.GridView: int findMotionRow(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.InputQueue: void sendInputEvent(android.view.InputEvent,java.lang.Object,boolean,android.view.InputQueue.FinishedInputEventCallback)>:<public>:<android.view.InputQueue>
<android.view.IWindowManager: void lockNow(android.os.Bundle)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.ProgressBar: boolean isIndeterminate()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TabHost: void setup()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaRecorder: void native_setVideoSource(int)>:<public native>:<android.media.MediaRecorder>
<android.preference.PreferenceGroup: void notifyDependencyChange(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: java.util.Calendar getFirstDay()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putText(java.lang.String,java.lang.CharSequence)>:<public>:<android.media.MediaMetadata.Builder>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] mapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.media.MediaPlayer: boolean isLooping()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub: void <init>()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.view.KeyEvent: boolean isWakeKey(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.View.MatchLabelForPredicate: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.MatchLabelForPredicate:com.android.internal.util.Predicate>
<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)>:<public static>:<android.media.MediaFile>
<android.widget.SearchView.11: void afterTextChanged(android.text.Editable)>:<public>:<android.widget.SearchView.11:android.text.TextWatcher>
<android.accounts.AbstractAccountAuthenticator.2: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>:<>:<android.accounts.AbstractAccountAuthenticator.2:java.lang.Runnable>
<android.view.RenderNode: float nGetScaleX(long)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioSystem: int getDevicesForStream(int)>:<public static native>:<android.media.AudioSystem>
<android.media.audiopolicy.AudioPolicy: void <init>(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.AudioPolicy.1)>:<>:<android.media.audiopolicy.AudioPolicy>
<android.media.tv.TvContentRatingSystemInfo: boolean isSystemDefined()>:<public final>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.widget.Editor: void access.2000(android.widget.Editor,int,int,boolean)>:<static>:<android.widget.Editor>
<android.opengl.GLLogWrapper: void glPointParameterf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.media.IMediaBrowserService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.media.AudioService.VolumeController: void loadSettings(android.content.ContentResolver)>:<public>:<android.media.AudioService.VolumeController>
<android.database.sqlite.SQLiteConnection: boolean nativeIsReadOnly(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioAttributes: void <init>(android.os.Parcel,android.media.AudioAttributes.1)>:<>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.View: boolean hasHoveredChild()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiCheckPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onPlayFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.tv.TvContract.WatchedPrograms: void <init>()>:<private>:<android.media.tv.TvContract.WatchedPrograms:android.media.tv.TvContract.BaseTvColumns>
<android.preference.Preference.BaseSavedState.1: android.preference.Preference.BaseSavedState[] newArray(int)>:<public>:<android.preference.Preference.BaseSavedState.1:android.os.Parcelable.Creator>
<android.widget.ListPopupWindow.2: void <init>(android.widget.ListPopupWindow)>:<>:<android.widget.ListPopupWindow.2:java.lang.Runnable>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.AdapterView: void addView(android.view.View,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>:<public abstract>:<android.view.Window>
<android.widget.TextView: void setAccessibilitySelection(int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.wallpaper.WallpaperService.Engine: void doVisibilityChanged(boolean)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.AbsListView.PositionScroller.3: void <init>(android.widget.AbsListView.PositionScroller,int,int,int)>:<>:<android.widget.AbsListView.PositionScroller.3:java.lang.Runnable>
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.accessibility.CaptioningManager: java.lang.Runnable access.300(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.view.ViewDebug.ExportedProperty: boolean resolveId()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureStore>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>:<public static native>:<android.opengl.Visibility>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaDrm: byte[] signNative(android.media.MediaDrm,byte[],byte[],byte[])>:<private static final native>:<android.media.MediaDrm>
<android.widget.Switch: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.tv.ITvInputManager: void setParentalControlsEnabled(boolean,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.widget.SpellChecker: boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int)>:<public static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.media.MediaRecorder: void native_setup(java.lang.Object,java.lang.String)>:<private final native>:<android.media.MediaRecorder>
<android.media.SubtitleTrack.CueList: void remove(android.media.SubtitleTrack.Cue)>:<public>:<android.media.SubtitleTrack.CueList>
<android.widget.Editor.EasyEditPopupWindow: android.text.style.EasyEditSpan access.700(android.widget.Editor.EasyEditPopupWindow)>:<static>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.VideoView: boolean access.502(android.widget.VideoView,boolean)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.SubtitleController: void doHide()>:<private>:<android.media.SubtitleController>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>:<public static>:<android.widget.Toast>
<android.view.ViewRootImpl.5: void run()>:<public>:<android.view.ViewRootImpl.5:java.lang.Runnable>
<android.view.WindowInsets: int getStableInsetTop()>:<public>:<android.view.WindowInsets>
<android.media.AudioService: void dumpRingerMode(java.io.PrintWriter)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.LayoutTransition: void setDuration(long)>:<public>:<android.animation.LayoutTransition>
<android.media.MediaCodecList: int native_getCodecCount()>:<private static final native>:<android.media.MediaCodecList>
<android.widget.HwAbsListView: boolean inMultiSelectMoveMode(android.view.MotionEvent)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.opengl.GLSurfaceView: boolean access.900(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo focusSearch(int,int,long,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.service.dreams.DreamService: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.inputmethod.InputMethodManager: void windowDismissed(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.session.ISessionCallback: void onNext()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.media.MediaHTTPConnection: void native_finalize()>:<private final native>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.IRemoteVolumeObserver.Stub.Proxy: void dispatchRemoteVolumeUpdate(int,int)>:<public>:<android.media.IRemoteVolumeObserver.Stub.Proxy:android.media.IRemoteVolumeObserver>
<android.media.AudioSystem: int getNumStreamTypes()>:<public static final>:<android.media.AudioSystem>
<android.media.MediaFocusControl: int getRemoteStreamMaxVolume()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.MediaRouter.UserRouteInfo: void setVolumeHandling(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.database.sqlite.SQLiteSession: void throwIfTransactionMarkedSuccessful()>:<private>:<android.database.sqlite.SQLiteSession>
<android.widget.Switch: void setThumbPosition(float)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.Choreographer.1: android.view.Choreographer initialValue()>:<protected>:<android.view.Choreographer.1:java.lang.ThreadLocal>
<android.view.animation.Animation: int getRepeatMode()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean getSpinnersShown()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.FastScroller: android.widget.ImageView getThumbImage()>:<protected>:<android.widget.FastScroller>
<android.media.IAudioService: void setVolumeController(android.media.IVolumeController)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.SubtitleController: void finalize()>:<protected>:<android.media.SubtitleController>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: void <init>(int,int,boolean,int)>:<private>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.service.dreams.IDreamService.Stub.Proxy: void attach(android.os.IBinder,boolean)>:<public>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.media.effect.effects.StraightenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.StraightenEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.opengl.GLErrorWrapper: void glLoadIdentity()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodInfo: int describeContents()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.TimePicker.TimePickerDelegate: java.lang.Integer getCurrentMinute()>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.Animation: long computeDurationHint()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>:<public final>:<android.widget.Filter>
<android.media.RemoteDisplayState.RemoteDisplayInfo.1: android.media.RemoteDisplayState.RemoteDisplayInfo[] newArray(int)>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo.1:android.os.Parcelable.Creator>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: void <init>(boolean,boolean,android.media.AudioFormat,int,byte[],android.service.voice.AlwaysOnHotwordDetector.1)>:<>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.media.audiofx.AcousticEchoCanceler: void <init>(int)>:<private>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.service.dreams.DreamService: int getDozeScreenBrightness()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.voice.AlwaysOnHotwordDetector: void invalidate()>:<>:<android.service.voice.AlwaysOnHotwordDetector>
<android.accounts.AccountManager.2: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String[])>:<>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.widget.ZoomButtonsController.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.widget.ZoomButtonsController.1:android.content.BroadcastReceiver>
<android.test.FlakyTest: int tolerance()>:<public abstract>:<android.test.FlakyTest:java.lang.annotation.Annotation>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.RadialTimePickerView: void setAmOrPm(int)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLUtils: void setTracingLevel(int)>:<public static native>:<android.opengl.GLUtils>
<android.preference.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.InputDevice: void <init>(android.os.Parcel,android.view.InputDevice.1)>:<>:<android.view.InputDevice:android.os.Parcelable>
<android.media.AudioRecord: android.media.AudioRecord.OnRecordPositionUpdateListener access.100(android.media.AudioRecord)>:<static>:<android.media.AudioRecord>
<android.media.audiofx.Equalizer.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.Equalizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.animation.Animation: long getStartOffset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.service.dreams.DreamService: int getDozeScreenState()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.media.MediaCodec: void native_configure(java.lang.String[],java.lang.Object[],android.view.Surface,android.media.MediaCrypto,int)>:<private final native>:<android.media.MediaCodec>
<android.animation.AnimatorListenerAdapter: void onAnimationPause(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.widget.TextView: void resetResolvedDrawables()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor.HandleView.1: void <init>(android.widget.Editor.HandleView)>:<>:<android.widget.Editor.HandleView.1:java.lang.Runnable>
<android.service.voice.AlwaysOnHotwordDetector: void notifyStateChangedLocked()>:<private>:<android.service.voice.AlwaysOnHotwordDetector>
<android.opengl.GLES10: void glLoadIdentity()>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder deviceId(int)>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.view.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>:<public abstract>:<android.accounts.IAccountManagerResponse:android.os.IInterface>
<android.view.ActionMode: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.view.ActionMode>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onPrintJobStateChanged(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ExpandableListView: int getAbsoluteFlatPosition(int)>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.HardwareRenderer: void updateSurface(android.view.Surface)>:<abstract>:<android.view.HardwareRenderer>
<android.view.ViewRootImpl.W: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.view.MotionEvent: android.view.MotionEvent obtain()>:<private static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.FocusFinder.SequentialFocusComparator: void setRoot(android.view.ViewGroup)>:<public>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.media.browse.MediaBrowser.ConnectionCallback: void <init>()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.media.IRemoteVolumeObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteVolumeObserver.Stub.Proxy:android.media.IRemoteVolumeObserver>
<android.view.RenderNodeAnimator: void setStartDelay(long)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.MediaHTTPConnection: void <clinit>()>:<static>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.print.PrinterDiscoverySession: boolean isDestroyed()>:<public final>:<android.print.PrinterDiscoverySession>
<android.widget.StackView.StackSlider: void setXProgress(float)>:<public>:<android.widget.StackView.StackSlider>
<android.widget.AutoCompleteTextView: void clearListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void <init>(android.widget.TableLayout)>:<private>:<android.widget.TableLayout.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.RenderNode: boolean setCameraDistance(float)>:<public>:<android.view.RenderNode>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.tv.TvView: boolean dispatchUnhandledInputEvent(android.view.InputEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.AudioPortEventHandler: android.os.Handler handler()>:<>:<android.media.AudioPortEventHandler>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.SessionCallbackRecord.1: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.1:java.lang.Runnable>
<android.view.WindowManager.LayoutParams: void backup()>:<>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.GLES20Canvas: void nDrawBitmap(long,long,byte[],float,float,float,float,float,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: void setScrollBarStyle(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.FocusFinderHelper: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>:<public>:<android.view.FocusFinderHelper>
<android.view.IWindowManager.Stub.Proxy: boolean inKeyguardRestrictedInputMode()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.KeyCharacterMap: void <clinit>()>:<static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.GLES20Canvas: android.graphics.RectF getPathBounds()>:<private>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.ViewGroup: int getChildCount()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaFocusControl.DisplayInfoForServer: boolean init()>:<public>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.animation.BidirectionalTypeConverter: void <init>(java.lang.Class,java.lang.Class)>:<public>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.widget.ProgressBar: void onMeasure(int,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.widget.Switch: void setThumbTextPadding(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLSurfaceView.BaseConfigChooser: int[] filterConfigSpec(int[])>:<private>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.widget.CalendarView.LegacyCalendarViewDelegate: android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter access.700(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewDebug: void exportFields(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.Class,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.security.IKeyChainService: byte[] getEncodedCaCertificate(java.lang.String,boolean)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.security.IKeyChainAliasCallback.Stub: void <init>()>:<public>:<android.security.IKeyChainAliasCallback.Stub:android.os.Binder,android.security.IKeyChainAliasCallback>
<android.widget.RadialTimePickerView: void drawTextElements(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[],android.graphics.Paint,int,int)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.HardwareRenderer: void registerAnimatingRenderNode(android.view.RenderNode)>:<abstract>:<android.view.HardwareRenderer>
<android.media.ImageReader.SurfaceImage: int getWidth()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.ViewTreeObserver: void <init>()>:<>:<android.view.ViewTreeObserver>
<android.widget.AutoCompleteTextView: void onClickImpl()>:<private>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.filterpacks.base.ObjectSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.ObjectSource:android.filterfw.core.Filter>
<android.view.View.TransformationInfo: android.graphics.Matrix access.1702(android.view.View.TransformationInfo,android.graphics.Matrix)>:<static>:<android.view.View.TransformationInfo>
<android.widget.Toolbar.2: void <init>(android.widget.Toolbar)>:<>:<android.widget.Toolbar.2:java.lang.Runnable>
<android.preference.GenericInflater.FactoryMerger: void <init>(android.preference.GenericInflater.Factory,android.preference.GenericInflater.Factory)>:<>:<android.preference.GenericInflater.FactoryMerger:android.preference.GenericInflater.Factory>
<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.IMediaScannerService: void scanFile(java.lang.String,java.lang.String)>:<public abstract>:<android.media.IMediaScannerService:android.os.IInterface>
<android.widget.ActivityChooserView.Callbacks: void onClick(android.view.View)>:<public>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.media.tv.TvInputManager.SessionCallback: void onContentAllowed(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>()>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.Window: void adjustLayoutParamsForSubWindow(android.view.WindowManager.LayoutParams)>:<>:<android.view.Window>
<android.filterpacks.imageproc.BlackWhiteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: void <init>(android.widget.Editor.SuggestionsPopupWindow,android.widget.Editor.1)>:<>:<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator:java.util.Comparator>
<android.opengl.GLErrorWrapper: void glFrontFace(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.notification.INotificationListener.Stub.Proxy: void onListenerHintsChanged(int)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy: void newSession(android.os.IBinder,android.os.Bundle)>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy:android.service.voice.IVoiceInteractionSessionService>
<android.widget.TextView: boolean isCursorVisible()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowCallbackWrapper: void onDetachedFromWindow()>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.audiofx.Visualizer: int native_getSamplingRate()>:<private final native>:<android.media.audiofx.Visualizer>
<android.media.AudioManager: void unregisterRemoteController(android.media.RemoteController)>:<public>:<android.media.AudioManager>
<android.widget.FastScroller: void onScroll(int,int,int)>:<public>:<android.widget.FastScroller>
<android.service.wallpaper.WallpaperSettingsActivity: void onCreate(android.os.Bundle)>:<protected>:<android.service.wallpaper.WallpaperSettingsActivity:android.preference.PreferenceActivity,android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.Scroller: int getSplineFlingDuration(float)>:<private>:<android.widget.Scroller>
<android.media.PlayerRecord: void resetControllerInfoForNoRcc()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.accounts.IAccountManager.Stub: void <init>()>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.widget.TextView.CharWrapper: void <init>(char[],int,int)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.projection.IMediaProjection.Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>:<public static>:<android.media.projection.IMediaProjection.Stub:android.os.Binder,android.media.projection.IMediaProjection>
<android.view.ViewRootImpl: void draw(boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.Editor: void hideControllersOuter()>:<protected>:<android.widget.Editor>
<android.widget.TextView: int getMinWidth()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.RemoteController.MetadataEditor: void cleanupBitmapFromBundle(int)>:<private>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.WindowManager.LayoutParams: void scale(float)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.animation.PathKeyframes: android.animation.Keyframes.FloatKeyframes createYFloatKeyframes()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.service.voice.VoiceInteractionService: void safelyShutdownHotwordDetector()>:<private>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewTreeObserver.CopyOnWriteArray: void <init>()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.security.AndroidKeyPairGenerator: java.lang.String getDefaultSignatureAlgorithmForKeyType(java.lang.String)>:<private static>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.session.MediaSessionManager.SessionsChangedWrapper.1: void <init>(android.media.session.MediaSessionManager.SessionsChangedWrapper)>:<>:<android.media.session.MediaSessionManager.SessionsChangedWrapper.1:android.media.session.IActiveSessionsListener.Stub,android.os.Binder>
<android.widget.Editor: boolean isPositionVisibleOuter(int,int)>:<protected>:<android.widget.Editor>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>:<public>:<android.security.KeyStore>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void calculateValue(float)>:<>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.GLES20Canvas: void drawPicture(android.graphics.Picture)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.audiofx.Virtualizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Virtualizer,int,int,short)>:<public abstract>:<android.media.audiofx.Virtualizer.OnParameterChangeListener>
<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>:<static>:<android.media.MediaFile>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.SearchView: boolean isInActionMode()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.GridLayout.4: void <init>()>:<>:<android.widget.GridLayout.4:android.widget.GridLayout.Alignment>
<android.widget.GridLayout.Axis: void computeLocations(int[])>:<private>:<android.widget.GridLayout.Axis>
<android.media.MediaRouterClientState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.filterpacks.imageproc.ImageEncoder: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ImageEncoder:android.filterfw.core.Filter>
<android.print.PrinterCapabilitiesInfo: void <init>()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.GLES20Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.PrintAttributes: void setColorMode(int)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.session.MediaController: android.media.session.MediaController.PlaybackInfo getPlaybackInfo()>:<public>:<android.media.session.MediaController>
<android.view.HardwareRenderer: boolean isRequested()>:<>:<android.view.HardwareRenderer>
<android.media.tv.TvStreamConfig: java.lang.String toString()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.media.MediaPlayer: void setVolume(float)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect.OnParameterChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.view.MotionEvent: boolean isButtonPressed(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvInputInfo: java.lang.String toString()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.SoundPool.SoundPoolDelegate: void setRate(int,float)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.ITvInputHardware.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputHardware.Stub:android.os.Binder,android.media.tv.ITvInputHardware>
<android.print.PrinterId: int describeContents()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.media.MediaExtractor: java.util.Map getTrackFormatNative(int)>:<private native>:<android.media.MediaExtractor>
<android.view.View: void draw(android.graphics.Canvas)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>:<private>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[][] groupArcsByFirstVertex(android.widget.GridLayout.Arc[])>:<>:<android.widget.GridLayout.Axis>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void access.500(android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand,boolean)>:<static>:<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.AnimatorSet: void start()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.MediaMetadata: java.util.Set keySet()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.IAssetAtlas.Stub.Proxy: long[] getMap()>:<public>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.widget.TextView: void registerForPreDraw()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.security.IKeystoreService.Stub.Proxy: int reset_uid(int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.AudioService: int getVibrateSetting(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void destroy()>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.media.ImageReader: int acquireNextSurfaceImage(android.media.ImageReader.SurfaceImage)>:<private>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.FastScroller: void setState(int)>:<private>:<android.widget.FastScroller>
<android.filterpacks.imageproc.SaturateFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.view.SurfaceControl: void setDisplayProjection(android.os.IBinder,int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.SurfaceControl>
<android.media.tv.TvInputService.Session: void onSetCaptionEnabled(boolean)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.FastScroller: boolean isAlwaysShowEnabled()>:<public>:<android.widget.FastScroller>
<android.accounts.AccountManager.3: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.WindowInsets: int getStableInsetLeft()>:<public>:<android.view.WindowInsets>
<android.service.voice.VoiceInteractionService: void <init>()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Window: void setAllowReturnTransitionOverlap(boolean)>:<public>:<android.view.Window>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>:<public static native>:<android.opengl.EGL14>
<android.security.SystemKeyStore: void <clinit>()>:<static>:<android.security.SystemKeyStore>
<android.view.MotionEvent.PointerCoords: void clear()>:<public>:<android.view.MotionEvent.PointerCoords>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] preceding(int)>:<public>:<android.widget.AccessibilityIterators.PageTextSegmentIterator:android.widget.AccessibilityIterators.LineTextSegmentIterator>
<android.media.session.MediaSession.QueueItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.widget.FastScroller: float getPosFromItemCount(int,int,int)>:<private>:<android.widget.FastScroller>
<android.media.session.ISessionController: boolean sendMediaButton(android.view.KeyEvent)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.inputmethod.InputMethodSession: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.widget.MediaController: android.view.View access.200(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Editor.HandleView.1: void run()>:<public>:<android.widget.Editor.HandleView.1:java.lang.Runnable>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>:<public static>:<android.preference.PreferenceManager>
<android.media.session.MediaSession: void access.1400(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.DragEvent: float getY()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.media.tv.TvInputManager: android.util.SparseArray access.900(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.media.MediaDrm.ProvisionRequest: byte[] getData()>:<public>:<android.media.MediaDrm.ProvisionRequest>
<android.database.CursorJoiner: java.lang.Object next()>:<public volatile>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.widget.TextView: int getVerticalOffset(boolean)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.VideoView: boolean canSeekBackward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.InputDevice: boolean[] hasKeys(int[])>:<public transient>:<android.view.InputDevice:android.os.Parcelable>
<android.media.tv.TvContract: android.net.Uri buildWatchedProgramUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.widget.ListView: boolean getItemsCanFocus()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void sendAccessibilityEventInternal(int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputService.Session: void tune(android.net.Uri,android.os.Bundle)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getActiveDatabases()>:<private static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.Cursor: android.net.Uri getNotificationUri()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.ViewRootImpl: void recomputeViewAttributes(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.PopupMenu: void onCloseSubMenu(com.android.internal.view.menu.SubMenuBuilder)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.ViewPropertyAnimator: java.util.HashMap access.700(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.media.session.PlaybackState.CustomAction: void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle,android.media.session.PlaybackState.1)>:<>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.session.ISession.Stub.Proxy: void setMediaButtonReceiver(android.app.PendingIntent)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.ActionProvider: android.view.View onCreateActionView()>:<public abstract>:<android.view.ActionProvider>
<android.view.MenuInflater.MenuState: void <init>(android.view.MenuInflater,android.view.Menu)>:<public>:<android.view.MenuInflater.MenuState>
<android.view.ViewTreeObserver.CopyOnWriteArray: int size()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.widget.TextView: void removeAdjacentSuggestionSpans(int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewRootImpl.AsyncInputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.view.animation.AnimationUtils: void <init>()>:<public>:<android.view.animation.AnimationUtils>
<android.view.IInputFilter.Stub.Proxy: void install(android.view.IInputFilterHost)>:<public>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.media.DecoderCapabilities.VideoDecoder: void <init>(java.lang.String,int)>:<private>:<android.media.DecoderCapabilities.VideoDecoder:java.lang.Enum>
<android.test.AndroidTestCase: void assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.filterpacks.videosrc.MediaSource.1: void <init>(android.filterpacks.videosrc.MediaSource)>:<>:<android.filterpacks.videosrc.MediaSource.1:android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.widget.Scroller: boolean isScrollingInDirection(float,float)>:<public>:<android.widget.Scroller>
<android.view.IWindowManager: void stopAppFreezingScreen(android.os.IBinder,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.audiofx.Visualizer.NativeEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.audiofx.Visualizer.NativeEventHandler:android.os.Handler>
<android.widget.MediaController: void updatePausePlay()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaFocusControl.DisplayInfoForServer: boolean access.502(android.media.MediaFocusControl.DisplayInfoForServer,boolean)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.TextView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ZoomButtonsController: void access.700(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.EGLLogWrapper: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.VideoView: void start()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.GridLayout: int max2(int[],int)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: java.lang.CharSequence getHint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.service.voice.IVoiceInteractionSessionService.Stub: android.service.voice.IVoiceInteractionSessionService asInterface(android.os.IBinder)>:<public static>:<android.service.voice.IVoiceInteractionSessionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSessionService>
<android.view.ViewDebug.4: void run(java.lang.Object[])>:<public transient>:<android.view.ViewDebug.4:android.view.ViewDebug.ViewOperation>
<android.view.ViewGroup: boolean debugDraw()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View.9: void setValue(android.view.View,float)>:<public>:<android.view.View.9:android.util.FloatProperty>
<android.filterpacks.imageproc.DuotoneFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.opengl.EGLLogWrapper: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewGroup: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.DisplayInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.DisplayInfo.1:android.os.Parcelable.Creator>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getSharedAccountsAsUser(int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.view.WindowManagerPolicy: void setRotationLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.RemoteViews.TextViewDrawableAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.TextViewDrawableAction:android.widget.RemoteViews.Action>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>:<public transient>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.MediaRouter.RouteInfo: java.lang.Object getTag()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.Gesture: android.graphics.Path toPath()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.SoundPool.SoundPoolStub: void autoPause()>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.AudioTrack.NativeEventHandlerDelegate: void <init>(android.media.AudioTrack,android.media.AudioTrack,android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>:<>:<android.media.AudioTrack.NativeEventHandlerDelegate>
<android.view.RenderNodeAnimator: void setTarget(android.graphics.Canvas)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.tv.TvStreamConfig: int access.302(android.media.tv.TvStreamConfig,int)>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.media.MediaCodec.Callback: void <init>()>:<public>:<android.media.MediaCodec.Callback>
<android.view.MotionEvent: float getToolMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ScaleGestureDetector: boolean isQuickScaleEnabled()>:<public>:<android.view.ScaleGestureDetector>
<android.media.audiofx.AudioEffect: int setParameter(byte[],byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.view.GestureDetector: void cancelTaps()>:<private>:<android.view.GestureDetector>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.MotionEvent: int findPointerIndex(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate: int getMaxYear()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.filterpacks.imageproc.BlendFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.BlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.media.session.ISession.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.ISession.Stub:android.os.Binder,android.media.session.ISession>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void setVisibility(boolean)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.media.audiofx.Visualizer: int native_setEnabled(boolean)>:<private final native>:<android.media.audiofx.Visualizer>
<android.print.PageRange.1: android.print.PageRange[] newArray(int)>:<public>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>:<public>:<android.media.MediaMetadataRetriever>
<android.media.SubtitleTrack.1: void run()>:<public>:<android.media.SubtitleTrack.1:java.lang.Runnable>
<android.service.notification.NotificationListenerService: void registerAsSystemService(android.content.Context,android.content.ComponentName,int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.WindowInsets: android.view.WindowInsets consumeWindowDecorInsets()>:<public>:<android.view.WindowInsets>
<android.view.WindowId: int describeContents()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.database.sqlite.SQLiteConnectionPool: int getPriority(int)>:<private static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.view.View: void setBackground(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CheckedTextView: void <init>(android.content.Context)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.filterpacks.videosrc.SurfaceTextureSource.SurfaceTextureSourceListener: void onSurfaceTextureSourceReady(android.graphics.SurfaceTexture)>:<public abstract>:<android.filterpacks.videosrc.SurfaceTextureSource.SurfaceTextureSourceListener>
<android.widget.MediaController: void access.1200(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void <init>(javax.microedition.khronos.opengles.GL,java.io.Writer,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.SurfaceControl: void nativeSetDisplaySurface(android.os.IBinder,long)>:<private static native>:<android.view.SurfaceControl>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo.Builder: void setPages(android.print.PageRange[])>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.ViewDebug.HierarchyTraceType: void <init>(java.lang.String,int)>:<private>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.filterpacks.base.NullFilter: void setupPorts()>:<public>:<android.filterpacks.base.NullFilter:android.filterfw.core.Filter>
<android.view.animation.LayoutAnimationController: boolean isDone()>:<public>:<android.view.animation.LayoutAnimationController>
<android.media.session.MediaSession.Token.1: android.media.session.MediaSession.Token[] newArray(int)>:<public>:<android.media.session.MediaSession.Token.1:android.os.Parcelable.Creator>
<android.view.InputChannel: void transferTo(android.view.InputChannel)>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.view.ViewGroup.LayoutParams: void <init>()>:<>:<android.view.ViewGroup.LayoutParams>
<android.widget.CheckedTextView: void setCheckMarkTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.FastScroller: android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[])>:<private static transient>:<android.widget.FastScroller>
<android.media.MediaCrypto: void native_finalize()>:<private final native>:<android.media.MediaCrypto>
<android.service.trust.ITrustAgentServiceCallback: void revokeTrust()>:<public abstract>:<android.service.trust.ITrustAgentServiceCallback:android.os.IInterface>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>:<public>:<android.media.session.MediaController>
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glCullFace(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.media.WebVttRenderingWidget.CueLayout: void <init>(android.content.Context,android.media.TextTrackCue,android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.accounts.AbstractAccountAuthenticator.Transport: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.widget.ListView: int getHeightForPosition(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Editor.TextModifyOperation: void <clinit>()>:<static>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.media.MediaCodecInfo.AudioCapabilities: void applyLevelLimits()>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.AudioTrack: void native_pause()>:<private final native>:<android.media.AudioTrack>
<android.service.notification.NotificationRankingUpdate.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.service.notification.NotificationRankingUpdate.1:android.os.Parcelable.Creator>
<android.widget.HorizontalScrollView.SavedState.1: void <init>()>:<>:<android.widget.HorizontalScrollView.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaPlayer.1: void <init>(android.media.MediaPlayer)>:<>:<android.media.MediaPlayer.1:android.media.MediaPlayer.OnSubtitleDataListener>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.MotionEvent: float getAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TabHost: void invokeOnTabChangeListener()>:<private>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView access.600(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.service.media.IMediaBrowserServiceCallbacks.Stub: android.os.IBinder asBinder()>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub:android.os.Binder,android.service.media.IMediaBrowserServiceCallbacks>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent.PointerProperties[],android.view.MotionEvent.PointerCoords[],int,int,float,float,int,int,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: float getVerticalScrollFactor()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.MediaActionSound.1: void <init>(android.media.MediaActionSound)>:<>:<android.media.MediaActionSound.1:android.media.SoundPool.OnLoadCompleteListener>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain()>:<public static>:<android.view.accessibility.AccessibilityRecord>
<android.view.View.BaseSavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.View.BaseSavedState.1:android.os.Parcelable.Creator>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>:<public>:<android.media.MediaMetadataRetriever>
<android.view.inputmethod.CursorAnchorInfo.1: void <init>()>:<>:<android.view.inputmethod.CursorAnchorInfo.1:android.os.Parcelable.Creator>
<android.widget.FastScroller: void applyLayout(android.view.View,android.graphics.Rect)>:<private>:<android.widget.FastScroller>
<android.view.GLES20Canvas: void <clinit>()>:<static>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>:<public static native>:<android.media.audiofx.Visualizer>
<android.view.inputmethod.EditorInfo: void <clinit>()>:<static>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.SpellChecker: void scheduleNewSpellCheck()>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.StackView: android.widget.FrameLayout getFrameForChild()>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.TouchDelegate>
<android.widget.TextClock.2: void <init>(android.widget.TextClock)>:<>:<android.widget.TextClock.2:android.content.BroadcastReceiver>
<android.service.notification.ZenModeConfig: boolean isValidMinute(int)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] access.100(android.preference.MultiSelectListPreference)>:<static>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.session.MediaSession.CallbackStub: void onAdjustVolume(int)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.database.sqlite.SQLiteClosable: void acquireReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.widget.Scroller: boolean isFinished()>:<public final>:<android.widget.Scroller>
<android.view.View: java.lang.String getTransitionName()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter: boolean custMasterClearAllData()>:<public>:<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter:com.android.internal.os.storage.IHwCustExternalStorageFormatter>
<android.media.MediaDrm: void <init>(java.util.UUID)>:<public>:<android.media.MediaDrm>
<android.media.AudioSystem: int setLowRamDevice(boolean)>:<public static native>:<android.media.AudioSystem>
<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder,boolean)>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.media.AudioManager: void preDispatchKeyEvent(android.view.KeyEvent,int)>:<public>:<android.media.AudioManager>
<android.view.textservice.SuggestionsInfo: int getCookie()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute()>:<public>:<android.media.MediaRouter>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturePerformedListener>
<android.view.animation.Animation: void startNow()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintDocumentInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.MediaHTTPConnection: void teardownConnection()>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.widget.RadialTimePickerView: int getCurrentHour()>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.View: void resetResolvedTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.12: java.lang.Float get(android.view.View)>:<public>:<android.view.View.12:android.util.FloatProperty>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.GridLayout.Axis: void solve(android.widget.GridLayout.Arc[],int[])>:<private>:<android.widget.GridLayout.Axis>
<android.view.View: boolean resolveTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityWindowInfo: void recycle()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.MediaMetadata: android.os.Bundle access.100(android.media.MediaMetadata)>:<static>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.accessibility.AccessibilityManager: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityManager>
<android.view.View: void setWillNotDraw(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputHardware.Stub: android.media.tv.ITvInputHardware asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputHardware.Stub:android.os.Binder,android.media.tv.ITvInputHardware>
<android.preference.PreferenceScreen.SavedState.1: void <init>()>:<>:<android.preference.PreferenceScreen.SavedState.1:android.os.Parcelable.Creator>
<android.media.CCParser.CCData: android.media.CCParser.PAC getPAC()>:<>:<android.media.CCParser.CCData>
<android.widget.Editor: boolean isCursorVisible()>:<>:<android.widget.Editor>
<android.hsm.HwAudioPermWrapper: int mockRead(short[],int,int)>:<public>:<android.hsm.HwAudioPermWrapper>
<android.media.AudioService: void access.8300(android.media.AudioService,int,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.AnimationSet: long getStartTime()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.opengl.GLLogWrapper: void log(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.StackView.StackSlider: float highlightAlphaInterpolator(float)>:<private>:<android.widget.StackView.StackSlider>
<android.media.tv.ITvInputSessionCallback: void onTracksChanged(java.util.List)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.media.AudioService: int getMasterMaxVolume()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.StackView.StackFrame: void setTransformAnimator(android.animation.ObjectAnimator)>:<>:<android.widget.StackView.StackFrame:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.accessibility.AccessibilityNodeInfo: boolean isMultiLine()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void <init>(android.widget.CalendarView.LegacyCalendarViewDelegate,android.content.Context)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.service.textservice.SpellCheckerService.Session: android.os.Bundle getBundle()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.view.textservice.SentenceSuggestionsInfo.1: android.view.textservice.SentenceSuggestionsInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.textservice.SentenceSuggestionsInfo.1:android.os.Parcelable.Creator>
<android.database.Cursor: int getPosition()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioChannelCount(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.media.tv.TvInputManager.2: void onInputUpdated(java.lang.String)>:<public>:<android.media.tv.TvInputManager.2:android.media.tv.ITvInputManagerCallback.Stub,android.os.Binder>
<android.widget.EditText: void <init>(android.content.Context)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.view.textservice.SpellCheckerInfo.1: void <init>()>:<>:<android.view.textservice.SpellCheckerInfo.1:android.os.Parcelable.Creator>
<android.widget.Gallery: void dispatchUnpress()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>:<public abstract>:<android.view.Menu>
<android.service.dreams.IDreamManager: android.content.ComponentName[] getDreamComponents()>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.widget.Editor.SelectionStartHandleView: void updatePosition(float,float)>:<public>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.AudioRecord: int native_start(int,int)>:<private final native>:<android.media.AudioRecord>
<android.preference.PreferenceScreen: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.service.notification.IConditionListener.Stub.Proxy: void onConditionsReceived(android.service.notification.Condition[])>:<public>:<android.service.notification.IConditionListener.Stub.Proxy:android.service.notification.IConditionListener>
<android.printservice.PrintJob: boolean setState(int,java.lang.String)>:<private>:<android.printservice.PrintJob>
<android.view.inputmethod.InputMethodInfo: int hashCode()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: void bindPreferences()>:<private>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.InputEventConsistencyVerifier: void addKeyState(int,int,int)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setZAdjustment(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.GLES20Canvas: int save()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.AbsListView.AdapterDataSetObserver: void <init>(android.widget.AbsListView)>:<>:<android.widget.AbsListView.AdapterDataSetObserver:android.widget.AdapterView.AdapterDataSetObserver>
<android.media.MediaScanner.MyMediaScannerClient: int parseSubstring(java.lang.String,int,int)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.widget.RemoteViewsAdapter: boolean hasStableIds()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.service.notification.Condition: java.lang.String relevanceToString(int)>:<public static>:<android.service.notification.Condition:android.os.Parcelable>
<android.widget.CalendarView: long getMaxDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void _release()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.IAssetAtlas.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IAssetAtlas.Stub:android.os.Binder,android.view.IAssetAtlas>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.InputBinding.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.InputBinding.1:android.os.Parcelable.Creator>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.view.Choreographer: void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long)>:<public>:<android.view.Choreographer>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.GridLayout: void invalidateStructure()>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes: void <init>(android.os.Parcel)>:<private>:<android.print.PrintAttributes:android.os.Parcelable>
<android.security.IKeystoreService.Stub.Proxy: int is_hardware_backed(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.service.media.MediaBrowserService.ServiceBinder.2: void run()>:<public>:<android.service.media.MediaBrowserService.ServiceBinder.2:java.lang.Runnable>
<android.media.tv.TvInputInfo: int getType()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.ViewRootImpl: void onNestedPreScroll(android.view.View,int,int,int[])>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaFocusControl: void propagateFocusLossFromGain_syncAf(int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.Window: android.media.session.MediaController getMediaController()>:<public>:<android.view.Window>
<androidhwext.R.anim: void <init>()>:<public>:<androidhwext.R.anim>
<android.media.Metadata: int firstCustomId()>:<public static>:<android.media.Metadata>
<android.media.SoundPool.SoundPoolDelegate: void setVolume(int,float)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.media.MediaRouterClientState.RouteInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.MediaRouterClientState.RouteInfo.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.browse.MediaBrowser.2: void run()>:<public>:<android.media.browse.MediaBrowser.2:java.lang.Runnable>
<android.media.MediaFocusControl: void checkUpdateRemoteControlDisplay_syncPrs(int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.View.5: void <init>(java.lang.String)>:<>:<android.view.View.5:android.util.FloatProperty>
<android.ddm.DdmHandleExit: void <init>()>:<private>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap.FallbackAction getFallbackAction(int,int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>:<public>:<android.view.ViewConfiguration>
<android.media.tv.TvContentRating: java.lang.String getDomain()>:<public>:<android.media.tv.TvContentRating>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[],int,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.media.WebVttRenderingWidget: void layoutCue(int,int,android.media.WebVttRenderingWidget.CueLayout)>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.WindowManagerPolicy: boolean isForceHiding(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.MediaPlayer: void _prepare()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionResumed()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.StackView.StackFrame: boolean cancelTransformAnimator()>:<>:<android.widget.StackView.StackFrame:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.animation.Animator: void cancel()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.tv.TvView: void access.600(android.media.tv.TvView,android.view.Surface)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.session.ISessionController.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.ViewFlipper: boolean access.300(android.widget.ViewFlipper)>:<static>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioSystem: int setAudioPortConfig(android.media.AudioPortConfig)>:<public static native>:<android.media.AudioSystem>
<android.media.AudioManager: int generateAudioSessionId()>:<public>:<android.media.AudioManager>
<android.print.PrinterInfo: int getStatus()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.animation.PropertyValuesHolder: void <clinit>()>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.CCParser.CCMemory: void access.100(android.media.CCParser.CCMemory,int,int)>:<static>:<android.media.CCParser.CCMemory>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.audiofx.AudioEffect: int setParameter(int,int)>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getSecondaryProgressTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.tv.TvView.MySessionCallback: void onTracksChanged(android.media.tv.TvInputManager.Session,java.util.List)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.Utils: void sortDistinctRanges(android.util.Range[])>:<public static>:<android.media.Utils>
<android.widget.TextView: android.content.Context access.900(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: void resetResolvedPadding()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: void dismissKeyguard()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.RenderNodeAnimator: void cancel()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.TextView: int getLeftPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>:<public>:<android.media.RingtoneManager>
<android.media.AudioService.VolumeController: android.os.IBinder binder(android.media.IVolumeController)>:<private static>:<android.media.AudioService.VolumeController>
<android.view.ThreadedRenderer: void setName(java.lang.String)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.MediaDescription: void <init>(android.os.Parcel,android.media.MediaDescription.1)>:<>:<android.media.MediaDescription:android.os.Parcelable>
<android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.audiofx.AutomaticGainControl: boolean isAvailable()>:<public static>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CheckedTextView: void applyCheckMarkTint()>:<private>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.EditText: void extendSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.CalendarView: void setDate(long,boolean,boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glPopMatrix()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.Settings getProperties()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.preference.TwoStatePreference.SavedState.1: android.preference.TwoStatePreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.TwoStatePreference.SavedState.1:android.os.Parcelable.Creator>
<android.service.voice.VoiceInteractionService.1: void soundModelsChanged()>:<public>:<android.service.voice.VoiceInteractionService.1:android.service.voice.IVoiceInteractionService.Stub,android.os.Binder>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: void checkAllAliasStreamVolumes()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder addCharacterBounds(int,float,float,float,float,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void setupSetter(java.lang.Class)>:<>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.ProgressBar: void doRefreshProgress(int,float,boolean,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.Editor.SuggestionsPopupWindow: android.text.style.SuggestionSpan[] getSuggestionSpans()>:<private>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.view.accessibility.AccessibilityInteractionClient: void clearResultLocked()>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.database.CursorWindow: boolean putLong(long,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>:<public>:<android.media.AudioTrack>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSession getSession(android.app.PendingIntent)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.widget.TabWidget: void setCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy:android.service.notification.IStatusBarNotificationHolder>
<android.widget.TextView: void setShowSoftInputOnFocus(boolean)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: int glCreateShader(int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewRootImpl.ViewRootHandler: java.lang.String getMessageName(android.os.Message)>:<public>:<android.view.ViewRootImpl.ViewRootHandler:android.os.Handler>
<android.media.MediaRouter.Static: void <init>(android.content.Context)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.animation.ValueAnimator: boolean isStarted()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.CursorFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected>:<android.widget.CursorFilter:android.widget.Filter>
<android.service.persistentdata.IPersistentDataBlockService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub:android.os.Binder,android.service.persistentdata.IPersistentDataBlockService>
<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.view.Window: void setSharedElementsUseOverlay(boolean)>:<public>:<android.view.Window>
<android.view.IWindowManager: void showStrictModeViolation(boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.preference.DialogPreference: android.app.Dialog getDialog()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.Image: long getTimestamp()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.widget.EdgeEffect: boolean isFinished()>:<public>:<android.widget.EdgeEffect>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onExtrasChanged(android.os.Bundle)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.view.ViewRootImpl: void dispatchUnhandledInputEvent(android.view.InputEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.RenderNode: boolean setLayerType(int)>:<public>:<android.view.RenderNode>
<android.media.AudioSystem: int getAudioHwSyncForSession(int)>:<public static native>:<android.media.AudioSystem>
<android.widget.TextView: java.util.Locale getTextLocale()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRouter.RouteInfo: void <init>(android.media.MediaRouter.RouteCategory)>:<>:<android.media.MediaRouter.RouteInfo>
<android.service.notification.StatusBarNotification.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.service.notification.StatusBarNotification.1:android.os.Parcelable.Creator>
<android.media.IAudioService.Stub.Proxy: boolean isSpeakerphoneOn()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.Window: void setCloseOnTouchOutside(boolean)>:<public>:<android.view.Window>
<android.view.ViewGroup: void dispatchSetActivated(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowManagerPolicy: void enableScreenAfterBoot()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.IWindowManager: void thawRotation()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.preference.DialogPreference: void setDialogIcon(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.View: int[] getLocationOnScreen()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: float getY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaScanner: void processCachedPlaylist(android.database.Cursor,android.content.ContentValues,android.net.Uri)>:<private>:<android.media.MediaScanner>
<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void <init>(android.view.ViewPropertyAnimator)>:<private>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.view.animation.Animation: void setListenerHandler(android.os.Handler)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View.OnClickListener: void onClick(android.view.View)>:<public abstract>:<android.view.View.OnClickListener>
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.media.AudioSystem: boolean getLowPowerApk()>:<public static native>:<android.media.AudioSystem>
<android.media.MediaScanner: void native_init()>:<private static final native>:<android.media.MediaScanner>
<android.media.MediaPlayer.4: void run()>:<public>:<android.media.MediaPlayer.4:java.lang.Runnable>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Tokenizer: void reset()>:<>:<android.media.Tokenizer>
<android.media.SubtitleTrack.CueList: boolean addEvent(android.media.SubtitleTrack.Cue,long)>:<private>:<android.media.SubtitleTrack.CueList>
<android.database.Cursor: int getColumnCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.MediaController: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.RemoteViewsAdapter: android.os.Handler access.1000(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.ViewGroup: void onDebugDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void glFogxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>:<>:<android.widget.ProgressBar:android.view.View>
<android.filterpacks.videosink.MediaEncoderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setTextSelectHandleRes(int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.security.IKeystoreService: int import_key(java.lang.String,byte[],int,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.widget.CalendarView.LegacyCalendarViewDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ExpandableListView: android.view.ContextMenu.ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>:<>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Surface: void release()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.CCParser.CCData: boolean isDisplayableChar()>:<>:<android.media.CCParser.CCData>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.view.accessibility.CaptioningManager.CaptionStyle applyStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.view.WindowManagerPolicy: void wakingUp()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.AudioService: void enforceSafeMediaVolume(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.CursorJoiner.Result: void <init>(java.lang.String,int)>:<private>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>:<public static final>:<android.media.MediaDrm>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>:<public>:<android.appwidget.AppWidgetHost>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.TvInputCallbackRecord.3: void run()>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord.3:java.lang.Runnable>
<android.database.AbstractCursor: java.lang.String getString(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.RemoteControlClient: android.media.RemoteControlClient.MetadataEditor editMetadata(boolean)>:<public>:<android.media.RemoteControlClient>
<android.animation.ObjectAnimator: void animateValue(float)>:<>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.RemoteControlClient: void onSeekTo(int,long)>:<private>:<android.media.RemoteControlClient>
<android.view.ViewDebug: void outputDisplayList(android.view.View,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory>
<android.media.IMediaScannerService.Stub.Proxy: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>:<public>:<android.media.IMediaScannerService.Stub.Proxy:android.media.IMediaScannerService>
<android.view.View: boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.IKeystoreService: int zero()>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glClear(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.JetPlayer: void native_finalize()>:<private final native>:<android.media.JetPlayer>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putString(int,java.lang.String)>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ViewRootImpl.3: void doFrame(long)>:<public>:<android.view.ViewRootImpl.3:android.view.Choreographer.FrameCallback>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.widget.ViewFlipper: void updateRunning()>:<private>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession.QueueItem.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.session.MediaSession.QueueItem.1:android.os.Parcelable.Creator>
<android.widget.GridLayout.2: int getGravityOffset(android.view.View,int)>:<>:<android.widget.GridLayout.2:android.widget.GridLayout.Alignment>
<android.widget.CursorAdapter.MyDataSetObserver: void <init>(android.widget.CursorAdapter)>:<private>:<android.widget.CursorAdapter.MyDataSetObserver:android.database.DataSetObserver>
<android.print.PageRange: void <init>(android.os.Parcel)>:<private>:<android.print.PageRange:android.os.Parcelable>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.view.ViewGroup.LayoutParams>
<android.view.View: void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridView: void setStretchMode(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaFocusControl: void removeFocusStackEntry(java.lang.String,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.AudioService: boolean updateRingerModeAffectedStreams()>:<>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getSystemCategory()>:<public>:<android.media.MediaRouter>
<android.media.SubtitleTrack.CueList: void <init>()>:<>:<android.media.SubtitleTrack.CueList>
<android.widget.SearchView: void access.500(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: void setBottom(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RadialTimePickerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.ImageReader: int access.700(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.Editor.ActionPopupWindow: void <init>(android.widget.Editor)>:<public>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)>:<>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.opengl.GLErrorWrapper: void glBindRenderbufferOES(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: void setScrollY(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaRouter.VolumeCallbackInfo: void <init>(android.media.MediaRouter.VolumeCallback,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.VolumeCallbackInfo>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,int[])>:<public transient>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ActionMenuPresenter.SavedState: void <init>()>:<>:<android.widget.ActionMenuPresenter.SavedState:android.os.Parcelable>
<android.view.SurfaceControl: void nativeSetDisplayProjection(android.os.IBinder,int,int,int,int,int,int,int,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.print.PrintJobInfo: void setAppId(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.filterpacks.videosrc.SurfaceTextureSource: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.media.session.ISessionCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.ISessionCallback.Stub:android.os.Binder,android.media.session.ISessionCallback>
<android.view.ViewDebug: void writeEntry(java.io.BufferedWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>:<private static>:<android.view.ViewDebug>
<android.media.projection.MediaProjection.MediaProjectionCallback: void <init>(android.media.projection.MediaProjection)>:<private>:<android.media.projection.MediaProjection.MediaProjectionCallback:android.media.projection.IMediaProjectionCallback.Stub,android.os.Binder>
<android.media.SoundPool.SoundPoolImpl: int native_setup(java.lang.Object,int,java.lang.Object)>:<private final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.service.notification.NotificationListenerService.Ranking: boolean isAmbient()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.preference.TwoStatePreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<android.database.sqlite.SQLiteDoneException: void <init>()>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.notification.StatusBarNotification.1: android.service.notification.StatusBarNotification[] newArray(int)>:<public>:<android.service.notification.StatusBarNotification.1:android.os.Parcelable.Creator>
<android.widget.Editor: void drawCursor(android.graphics.Canvas,int)>:<private>:<android.widget.Editor>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChangedAsync()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioTrack: int getPlaybackRate()>:<public>:<android.media.AudioTrack>
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.media.Utils: int divUp(int,int)>:<static>:<android.media.Utils>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>:<public abstract>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.accounts.IAccountManager.Stub.Proxy: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.service.wallpaper.WallpaperService: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.database.SQLException: void <init>()>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ActivityChooserModel.HistoricalRecord: java.lang.String toString()>:<public>:<android.widget.ActivityChooserModel.HistoricalRecord>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>:<public>:<android.media.AudioAttributes.Builder>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadCustomLabel(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.RemoteController: java.lang.Object access.400()>:<static>:<android.media.RemoteController>
<android.widget.ZoomButtonsController: android.widget.FrameLayout createContainer()>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>:<public>:<android.media.effect.FilterGraphEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.print.PrintFileDocumentAdapter: android.content.Context access.100(android.print.PrintFileDocumentAdapter)>:<static>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.opengl.GLLogWrapper: void glLightx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.AudioEffect: void native_init()>:<private static final native>:<android.media.audiofx.AudioEffect>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.view.WindowManagerPolicy: void enableKeyguard(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.GLES20Canvas: void nDrawPatch(long,long,byte[],long,float,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.TimedText.Karaoke: void <init>(int,int,int,int)>:<public>:<android.media.TimedText.Karaoke>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.RenderNode: float nGetElevation(long)>:<private static native>:<android.view.RenderNode>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActions(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.gesture.GestureStroke: java.lang.Object clone()>:<public>:<android.gesture.GestureStroke>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.EditTextPreference.SavedState: void <clinit>()>:<static>:<android.preference.EditTextPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.AudioEffect.OnControlStatusChangeListener: void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnControlStatusChangeListener>
<android.view.inputmethod.InputMethodManager.1: void setUserActionNotificationSequenceNumber(int)>:<public>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<huawei.android.common.HwCustFwkFactoryImpl: com.android.internal.os.storage.IHwCustExternalStorageFormatter createExternalStorageFormatterCust()>:<public>:<huawei.android.common.HwCustFwkFactoryImpl:android.common.HwCustFwkFactory.Factory>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy.Builder addMix(android.media.audiopolicy.AudioMix)>:<public>:<android.media.audiopolicy.AudioPolicy.Builder>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.RadioGroup.CheckedStateTracker: void <init>(android.widget.RadioGroup)>:<private>:<android.widget.RadioGroup.CheckedStateTracker:android.widget.CompoundButton.OnCheckedChangeListener>
<android.service.notification.NotificationRankingUpdate.1: android.service.notification.NotificationRankingUpdate[] newArray(int)>:<public>:<android.service.notification.NotificationRankingUpdate.1:android.os.Parcelable.Creator>
<android.media.MediaCryptoException: void <init>(java.lang.String)>:<public>:<android.media.MediaCryptoException:java.lang.Exception,java.lang.Throwable>
<android.preference.VolumePreference.SavedState.1: android.preference.VolumePreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.VolumePreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.GLES20Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLSurfaceView.ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>:<public>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.view.ViewRootImpl: void transformMatrixToGlobal(android.graphics.Matrix)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.WindowManagerPolicy: void userActivity()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.opengl.GLLogWrapper: void glFrustumx(int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouterClientState.RouteInfo: void <clinit>()>:<static>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: void setCursorVisible(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.effect.EffectContext: void initInCurrentGlContext()>:<private>:<android.media.effect.EffectContext>
<android.view.accessibility.AccessibilityManager: boolean addHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.widget.RatingBar: void onMeasure(int,int)>:<protected>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.GridLayout.Axis: void computeLinks(android.widget.GridLayout.PackedMap,boolean)>:<private>:<android.widget.GridLayout.Axis>
<android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>:<static>:<android.view.FocusFinder>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: int access.2102(android.media.AudioService.VolumeStreamState.VolumeDeathHandler,int)>:<static>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo)>:<public static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.widget.ExpandableListView: long getChildOrGroupId(android.widget.ExpandableListPosition)>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.EdgeEffect: void onPull(float,float)>:<public>:<android.widget.EdgeEffect>
<android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.view.MotionEvent.PointerCoords: void copyFrom(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.opengl.GLLogWrapper: void glGenerateMipmapOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.ImageReader: void nativeClose()>:<private synchronized native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.TextureView: void draw(android.graphics.Canvas)>:<public final>:<android.view.TextureView:android.view.View>
<android.view.ViewGroup: boolean shouldBlockFocusForTouchscreen()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewGroup: boolean isLayoutModeOptical()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvInputService.Session: boolean onSetSurface(android.view.Surface)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.animation.PointFEvaluator: void <init>(android.graphics.PointF)>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.widget.CheckedTextView: boolean isChecked()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.service.fingerprint.FingerprintManagerReceiver: void onProcessed(int)>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.view.ViewGroup.ViewLocationHolder: void recycle()>:<public>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.media.tv.TvInputInfo: int describeContents()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.filterpacks.imageproc.Invert: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.Invert:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.database.sqlite.SQLiteQueryBuilder: void validateQuerySql(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.CursorJoiner: void incrementCursors()>:<private>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.preference.MultiCheckPreference.SavedState.1: android.preference.MultiCheckPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.MultiCheckPreference.SavedState.1:android.os.Parcelable.Creator>
<android.animation.AnimatorSet: boolean isStarted()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider.OnMediaTimeListener)>:<public abstract>:<android.media.MediaTimeProvider>
<android.media.CCParser.PAC: android.media.CCParser.PAC fromBytes(byte,byte)>:<static>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.view.WindowInsets: boolean isConsumed()>:<public>:<android.view.WindowInsets>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent)>:<public>:<android.preference.GenericInflater>
<android.view.ViewPropertyAnimator: void cancel()>:<public>:<android.view.ViewPropertyAnimator>
<android.animation.ValueAnimator: void clearAllAnimations()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.TimePickerClockDelegate.4: void onValueChange(android.widget.NumberPicker,int,int)>:<public>:<android.widget.TimePickerClockDelegate.4:android.widget.NumberPicker.OnValueChangeListener>
<android.media.ClosedCaptionWidget: void onMeasure(int,int)>:<protected>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.widget.MediaController: void access.800(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.View: int[] getDrawableState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.AudioEffect: byte[] intToByteArray(int)>:<public static>:<android.media.audiofx.AudioEffect>
<android.service.fingerprint.FingerprintManagerReceiver: void onError(int)>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.media.session.ISessionManager.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionManager.Stub:android.os.Binder,android.media.session.ISessionManager>
<android.view.textservice.SuggestionsInfo: int describeContents()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.view.inputmethod.SparseRectFArray.1: android.view.inputmethod.SparseRectFArray[] newArray(int)>:<public>:<android.view.inputmethod.SparseRectFArray.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11:android.opengl.GLES10>
<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(int,float,float,float)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.view.WindowManagerPolicy: void selectRotationAnimationLw(int[])>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.AutoCompleteTextView.MyWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AutoCompleteTextView.MyWatcher:android.text.TextWatcher>
<android.media.IMediaHTTPService.Stub.Proxy: android.media.IMediaHTTPConnection makeHTTPConnection()>:<public>:<android.media.IMediaHTTPService.Stub.Proxy:android.media.IMediaHTTPService>
<android.media.MediaRouter.RouteInfo: int getVolumeMax()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.DialogPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.WindowManagerPolicy: boolean isScreenOn()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)>:<public>:<android.view.TextureView:android.view.View>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void getSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.accounts.AccountManager.AmsTask.1: android.os.Bundle call()>:<public>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.media.AudioDevicePort: android.media.AudioDevicePortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>:<public>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.view.Window: int getForcedWindowFlags()>:<protected final>:<android.view.Window>
<android.media.browse.MediaBrowser: void access.1900(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks)>:<static>:<android.media.browse.MediaBrowser>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.SRTTrack: void onData(android.media.SubtitleData)>:<protected>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.service.textservice.SpellCheckerService.SpellCheckerServiceBinder: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>:<public>:<android.service.textservice.SpellCheckerService.SpellCheckerServiceBinder:com.android.internal.textservice.ISpellCheckerService.Stub>
<android.preference.MultiCheckPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View.9: void <init>(java.lang.String)>:<>:<android.view.View.9:android.util.FloatProperty>
<android.media.MutableBackgroundColorSpan: void <init>(android.os.Parcel)>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.TextClock: void registerObserver()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.security.KeyChain: void <init>()>:<public>:<android.security.KeyChain>
<android.media.WebVttRenderingWidget.CueLayout: void measureForParent(int,int)>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.TtmlUtils: java.lang.String extractTtmlFragment(android.media.TtmlNode,long,long)>:<public static>:<android.media.TtmlUtils>
<android.view.inputmethod.ExtractedTextRequest.1: android.view.inputmethod.ExtractedTextRequest createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.ExtractedTextRequest.1:android.os.Parcelable.Creator>
<android.view.Nsd: void setView(android.view.View)>:<public static>:<android.view.Nsd>
<android.print.PrintDocumentInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: boolean equals(java.lang.Object)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey>
<android.opengl.GLES20: void glUseProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>:<static>:<android.media.MediaFile>
<android.widget.StackView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.animation.AnticipateOvershootInterpolator: float o(float,float)>:<private static>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.audiopolicy.AudioMixingRule: void <init>(java.util.ArrayList)>:<private>:<android.media.audiopolicy.AudioMixingRule>
<android.service.media.MediaBrowserService.ServiceBinder.3: void run()>:<public>:<android.service.media.MediaBrowserService.ServiceBinder.3:java.lang.Runnable>
<android.view.ViewRootImpl.ViewPostImeInputStage: int processKeyEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.MediaCrypto: byte[] getByteArrayFromUUID(java.util.UUID)>:<private static final>:<android.media.MediaCrypto>
<android.widget.CalendarView: void setMinDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.effect.effects.SaturateEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.SaturateEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.TextView: boolean onCheckIsTextEditor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodec.EventHandler: void handleCallback(android.os.Message)>:<private>:<android.media.MediaCodec.EventHandler:android.os.Handler>
<android.print.PrinterInfo: java.lang.String access.202(android.print.PrinterInfo,java.lang.String)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.RenderNode: boolean setRotationY(float)>:<public>:<android.view.RenderNode>
<android.view.HardwareLayer: void detachSurfaceTexture()>:<public>:<android.view.HardwareLayer>
<android.service.media.IMediaBrowserServiceCallbacks.Stub: android.service.media.IMediaBrowserServiceCallbacks asInterface(android.os.IBinder)>:<public static>:<android.service.media.IMediaBrowserServiceCallbacks.Stub:android.os.Binder,android.service.media.IMediaBrowserServiceCallbacks>
<android.media.MediaInserter: void flushAllPriority()>:<private>:<android.media.MediaInserter>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.ITvInputSession access.800(android.media.tv.TvInputService.HardwareSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.ViewDebug.CapturedViewProperty: boolean retrieveReturn()>:<public abstract>:<android.view.ViewDebug.CapturedViewProperty:java.lang.annotation.Annotation>
<android.ddm.DdmHandleProfiling: void disconnected()>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.hsm.MediaTransactWrapper: java.lang.String playingMusicUidStr()>:<private static>:<android.hsm.MediaTransactWrapper>
<android.media.AudioRecord: int read(short[],int,int)>:<public>:<android.media.AudioRecord>
<android.security.KeyStoreParameter: void <init>(int,android.security.KeyStoreParameter.1)>:<>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.widget.SearchView.11: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.11:android.text.TextWatcher>
<huawei.android.app.HwCustEmergDataManager: void backupEmergencyDataFile()>:<public>:<huawei.android.app.HwCustEmergDataManager>
<android.widget.TimePickerSpinnerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.database.Cursor: void close()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.AudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.TwoStatePreference: void setDisableDependentsState(boolean)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.view.DragEvent: android.view.DragEvent obtain()>:<static>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.SearchView: void setIconifiedByDefault(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.ScrollView: boolean pageScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.IWindowSession getWindowSession()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.TwoStatePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.AdapterViewAnimator.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.view.View: boolean isTextAlignmentResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: int checkForRingerModeChange(int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioTrack: void audioBuffSizeCheck(int)>:<private>:<android.media.AudioTrack>
<android.view.ViewGroup: boolean hasBooleanFlag(int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RatingBar: float getRating()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.Editor.InsertionHandleView: void removeHiderCallback()>:<private>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.AudioService: android.media.AudioService.ScoClient getScoClient(android.os.IBinder,boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.notification.ConditionProviderService.H: void <init>(android.service.notification.ConditionProviderService,android.service.notification.ConditionProviderService.1)>:<>:<android.service.notification.ConditionProviderService.H:android.os.Handler>
<android.preference.PreferenceGroup: int getPreferenceCount()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.widget.RemoteViews.BitmapReflectionAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.media.MediaCodecList: android.media.MediaCodecInfo getInfoFor(java.lang.String)>:<public static>:<android.media.MediaCodecList>
<android.view.ViewGroup: android.view.View getChildAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent: java.lang.String toolTypeToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CursorAdapter.ChangeObserver: void <init>(android.widget.CursorAdapter)>:<public>:<android.widget.CursorAdapter.ChangeObserver:android.database.ContentObserver>
<android.media.AudioManager: void playSoundEffect(int,float)>:<public>:<android.media.AudioManager>
<android.view.MagnificationSpec: void initialize(float,float,float)>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.widget.SearchView: void rewriteQueryFromSuggestion(int)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.Window: boolean getAllowExitTransitionOverlap()>:<public>:<android.view.Window>
<android.view.Window: void onActive()>:<protected abstract>:<android.view.Window>
<android.media.IAudioService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IAudioService.Stub:android.os.Binder,android.media.IAudioService>
<android.widget.StackView: android.widget.StackView.LayoutParams createOrReuseLayoutParams(android.view.View)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.Image: android.media.Image.Plane[] getPlanes()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.GridLayout.Spec: int getFlexibility()>:<final>:<android.widget.GridLayout.Spec>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void <init>(android.widget.CalendarView,android.content.Context,android.util.AttributeSet,int,int)>:<>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.service.media.IMediaBrowserService.Stub: void <init>()>:<public>:<android.service.media.IMediaBrowserService.Stub:android.os.Binder,android.service.media.IMediaBrowserService>
<android.view.textservice.SpellCheckerSubtype: void <init>(android.os.Parcel)>:<>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.IMediaRouterService: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.media.AudioService: void setSoundTrigger()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.Surface: boolean isValid()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.media.MediaFormat: long getLong(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void updateDateTextSize()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.accessibility.AccessibilityManager: void handleNotifyTouchExplorationStateChanged()>:<private>:<android.view.accessibility.AccessibilityManager>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.502(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,java.lang.String)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.view.textservice.TextInfo: void <init>(java.lang.CharSequence,int,int,int,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate.SavedState.1: void <init>()>:<>:<android.widget.DatePickerCalendarDelegate.SavedState.1:android.os.Parcelable.Creator>
<android.service.trust.TrustAgentService.2: void <init>(android.service.trust.TrustAgentService,java.lang.CharSequence,long,boolean)>:<>:<android.service.trust.TrustAgentService.2:java.lang.Runnable>
<android.widget.AdapterViewAnimator: void setSelection(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.HwCustAudioService: void <init>(android.content.Context)>:<public>:<android.media.HwCustAudioService>
<android.print.IPrintManager.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.media.MediaPlayer: android.media.MediaPlayer.OnSubtitleDataListener access.1700(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioService: void setSpeakerphoneOn(boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.VolumeProvider: void <init>(int,int,int)>:<public>:<android.media.VolumeProvider>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.view.GLES20Canvas: void nSetViewport(long,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.InputDevice.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.InputDevice.1:android.os.Parcelable.Creator>
<android.media.AudioManager: void forceVolumeControlStream(int)>:<public>:<android.media.AudioManager>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.opengl.GLES31: void glSampleMaski(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewRootImpl: void access.800(android.view.ViewRootImpl,android.view.ViewRootImpl.QueuedInputEvent)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.media.tv.ITvInputSessionWrapper: void setCaptionEnabled(boolean)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.media.audiofx.PresetReverb.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.PresetReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.GLES20Canvas: int save(int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.accounts.Account.1: void <init>()>:<>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ZoomButtonsController: void <clinit>()>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.session.ISessionManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: boolean getFitsSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>:<public abstract>:<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.widget.GridLayout: android.widget.GridLayout.Alignment createSwitchingAlignment(android.widget.GridLayout.Alignment,android.widget.GridLayout.Alignment)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>:<public>:<android.gesture.GestureStroke>
<android.view.accessibility.CaptioningManager.CaptionStyle: void <init>(int,int,int,int,int,java.lang.String)>:<private>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.view.ViewTreeObserver: void dispatchOnComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>:<final>:<android.view.ViewTreeObserver>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLSurfaceView.GLThread: void requestRender()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.widget.GridView: void setSelection(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.RemoteViewsListAdapter: void <init>(android.content.Context,java.util.ArrayList,int)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.view.View: void drawAccessibilityFocus(android.graphics.Canvas)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.UserRouteInfo: void setIconDrawable(android.graphics.drawable.Drawable)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.media.AudioService: void access.10100(android.media.AudioService,int,int,int,java.lang.String,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AbsSpinner.SavedState: java.lang.String toString()>:<public>:<android.widget.AbsSpinner.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.audiofx.Visualizer: java.lang.Object access.000(android.media.audiofx.Visualizer)>:<static>:<android.media.audiofx.Visualizer>
<android.view.ViewRootImpl.EarlyPostImeInputStage: int processKeyEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.EarlyPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>:<public>:<android.media.tv.TvInputManager>
<android.database.SQLException: void <init>(java.lang.String)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.MergeCursor: void close()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.InflateException: void <init>(java.lang.String)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.AudioService: void access.9600(android.media.AudioService,boolean)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowContentFrameStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.WindowContentFrameStats.1:android.os.Parcelable.Creator>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onUpdateSurface()>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>:<public>:<android.view.FocusFinder>
<android.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.IAssetAtlas.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IAssetAtlas.Stub:android.os.Binder,android.view.IAssetAtlas>
<android.view.WindowId: int hashCode()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.media.projection.MediaProjection.CallbackRecord.1: void <init>(android.media.projection.MediaProjection.CallbackRecord)>:<>:<android.media.projection.MediaProjection.CallbackRecord.1:java.lang.Runnable>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OpenOverflowRunnable access.300(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.Editor.EasyEditPopupWindow: void hide()>:<public>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.database.sqlite.SQLiteConnectionPool: void open()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.service.notification.Condition.1: android.service.notification.Condition createFromParcel(android.os.Parcel)>:<public>:<android.service.notification.Condition.1:android.os.Parcelable.Creator>
<android.print.PrinterCapabilitiesInfo.Builder: void throwIfDefaultAlreadySpecified(int)>:<private>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.service.notification.ConditionProviderService.Provider: void onConnected()>:<public>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.View.ListenerInfo: android.view.View.OnHoverListener access.602(android.view.View.ListenerInfo,android.view.View.OnHoverListener)>:<static>:<android.view.View.ListenerInfo>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.View.6: void setValue(android.view.View,float)>:<public>:<android.view.View.6:android.util.FloatProperty>
<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>:<private>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.View: void resetSubtreeAccessibilityStateChanged()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>:<public abstract>:<android.view.MenuItem>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.InputDevice: int[] getDeviceIds()>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.media.tv.TvView.MySessionCallback: void <init>(android.media.tv.TvView,java.lang.String,android.net.Uri,android.os.Bundle)>:<>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioRecord: int getAudioSessionId()>:<public>:<android.media.AudioRecord>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getWeekSeparatorLineColor()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewGroup: void resetTouchState()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.IAudioFocusDispatcher: void dispatchAudioFocusChange(int,java.lang.String)>:<public abstract>:<android.media.IAudioFocusDispatcher:android.os.IInterface>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView.IntHolder,int,int,android.widget.RadialTimePickerView.InvalidateUpdateListener)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.View: void forceRTL(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.tv.TvInputManager: int access.1100(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.filterpacks.imageproc.PosterizeFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.PosterizeFilter:android.filterfw.core.Filter>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.animation.LayoutTransition: void endChangingAnimations()>:<public>:<android.animation.LayoutTransition>
<android.view.GLES20Canvas: void nRestoreToCount(long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.MotionEvent: int getHistorySize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteDebug: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDebug>
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>:<public>:<android.media.MediaCodec>
<android.view.accessibility.IAccessibilityManager.Stub: void <init>()>:<public>:<android.view.accessibility.IAccessibilityManager.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManager>
<android.media.IAudioService.Stub.Proxy: int getMasterStreamType()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.AbsSavedState: void <init>(android.view.AbsSavedState.1)>:<>:<android.view.AbsSavedState:android.os.Parcelable>
<android.service.media.MediaBrowserService.ServiceBinder.4: void run()>:<public>:<android.service.media.MediaBrowserService.ServiceBinder.4:java.lang.Runnable>
<android.preference.ListPreference: void <init>(android.content.Context)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>:<public static native>:<android.opengl.EGL14>
<android.media.AudioAttributes: int getContentType()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.preference.TwoStatePreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.TwoStatePreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.IWindowId.Stub: android.view.IWindowId asInterface(android.os.IBinder)>:<public static>:<android.view.IWindowId.Stub:android.os.Binder,android.view.IWindowId>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLErrorWrapper: void glTexParameterx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.imageproc.FillLightFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.media.tv.ITvInputSessionCallback: void onVideoAvailable()>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnected()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.view.View: int getLeftPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: boolean access.2102(android.view.ViewRootImpl.SyntheticTouchNavigationHandler,boolean)>:<static>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.accessibility.AccessibilityCache: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityCache>
<android.media.TtmlCue: void <init>(long,long,java.lang.String,java.lang.String)>:<public>:<android.media.TtmlCue:android.media.SubtitleTrack.Cue>
<android.media.AudioManager.FocusEventHandlerDelegate: android.os.Handler getHandler()>:<>:<android.media.AudioManager.FocusEventHandlerDelegate>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void processTask(com.android.internal.textservice.ISpellCheckerSession,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.SpellCheckerParams,boolean)>:<private>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.animation.AnimatorSet: android.animation.ValueAnimator access.102(android.animation.AnimatorSet,android.animation.ValueAnimator)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.tv.TvInputManager.TvInputCallbackRecord.4: void <init>(android.media.tv.TvInputManager.TvInputCallbackRecord,java.lang.String)>:<>:<android.media.tv.TvInputManager.TvInputCallbackRecord.4:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.netdetect.HwCustNetDetectServiceImpl: android.net.wifi.WifiManager access.200(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.view.View.DragShadowBuilder: void <init>()>:<public>:<android.view.View.DragShadowBuilder>
<android.view.KeyEvent: boolean isFunctionPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrintFileDocumentAdapter: java.io.File access.000(android.print.PrintFileDocumentAdapter)>:<static>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.widget.RadialTimePickerView: void calculateGridSizesMinutes()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.Static.1: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>:<public>:<android.media.MediaRouter.Static.1:android.media.IAudioRoutesObserver.Stub,android.os.Binder>
<android.animation.FloatArrayEvaluator: void <init>(float[])>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.accounts.AccountManager.9: void doWork()>:<public>:<android.accounts.AccountManager.9:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.media.Ringtone: void stop()>:<public>:<android.media.Ringtone>
<android.media.tv.TvInputManager.Hardware: boolean dispatchKeyEventToHdmi(android.view.KeyEvent)>:<public>:<android.media.tv.TvInputManager.Hardware>
<android.widget.Gallery: void selectionChanged()>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<androidhwext.R.layout: void <init>()>:<public>:<androidhwext.R.layout>
<android.preference.PreferenceActivity.2: void <init>(android.preference.PreferenceActivity)>:<>:<android.preference.PreferenceActivity.2:android.view.View.OnClickListener>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(android.content.ComponentName,long,float)>:<public>:<android.widget.ActivityChooserModel.HistoricalRecord>
<android.media.AudioAttributes: int access.102(android.media.AudioAttributes,int)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.SubtitleController.1: void <init>(android.media.SubtitleController)>:<>:<android.media.SubtitleController.1:android.os.Handler.Callback>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Gallery: void setSelectionToCenterChild()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.print.IPrintDocumentAdapter.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.media.RemoteDisplayState: int describeContents()>:<public>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.view.View.TransformationInfo: void <init>()>:<>:<android.view.View.TransformationInfo>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,byte[],android.app.PendingIntent)>:<public static>:<android.hsm.HwSystemManager>
<android.media.tv.ITvInputSessionCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub:android.os.Binder,android.media.tv.ITvInputSessionCallback>
<android.widget.ListView: void addHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void createEventAnalyzed()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>:<public>:<android.widget.EdgeEffect>
<android.view.ViewGroup: boolean hasFocusable()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.GLES20Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.Editor: android.view.View.DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence)>:<private>:<android.widget.Editor>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void access.2100(android.widget.CalendarView.LegacyCalendarViewDelegate,java.util.Calendar)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.MediaFile: android.media.MediaFile.MediaFileType getFileType(java.lang.String)>:<public static>:<android.media.MediaFile>
<android.view.View: boolean isLayoutRtl()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IAudioService.Stub.Proxy: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.preference.VolumePreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.media.JetPlayer: boolean pause()>:<public>:<android.media.JetPlayer>
<android.database.sqlite.SQLiteConnection.OperationLog: boolean endOperationDeferLogLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.media.MiniThumbFile: java.lang.String randomAccessFilePath(int,long)>:<private>:<android.media.MiniThumbFile>
<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaCodecInfo.AudioCapabilities: android.media.MediaCodecInfo.AudioCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public static>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.session.ISessionControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.widget.AbsListView.InputConnectionWrapper: boolean clearMetaKeyStates(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.AudioRecord.NativeEventHandler: void <init>(android.media.AudioRecord,android.media.AudioRecord,android.os.Looper)>:<>:<android.media.AudioRecord.NativeEventHandler:android.os.Handler>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.Scroller: void extendDuration(int)>:<public>:<android.widget.Scroller>
<android.media.tv.TvInputManager.SessionCallbackRecord.9: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.9:java.lang.Runnable>
<android.widget.Editor: void makeBlink()>:<>:<android.widget.Editor>
<android.view.View: android.view.View getProjectionReceiver()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewParent: void childHasTransientStateChanged(android.view.View,boolean)>:<public abstract>:<android.view.ViewParent>
<android.widget.AdapterView: void addView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize getStandardMediaSizeById(java.lang.String)>:<public static>:<android.print.PrintAttributes.MediaSize>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.animation.ValueAnimator.AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>:<public abstract>:<android.animation.ValueAnimator.AnimatorUpdateListener>
<android.view.View: void setScrollBarSize(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean updateLocalSystemUiVisibility(int,int)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.notification.Condition.1: android.service.notification.Condition[] newArray(int)>:<public>:<android.service.notification.Condition.1:android.os.Parcelable.Creator>
<android.view.IWindowManager.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindowManager.Stub:android.os.Binder,android.view.IWindowManager>
<android.media.AudioManager: void registerAudioPortUpdateListener(android.media.AudioManager.OnAudioPortUpdateListener)>:<public>:<android.media.AudioManager>
<android.widget.ListView: int getDividerHeight()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.SearchView: boolean access.1800(android.widget.SearchView,int,int,java.lang.String)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.MediaHTTPConnection: int readAt(long,int)>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.widget.GridLayout.Axis: void include(java.util.List,android.widget.GridLayout.Interval,android.widget.GridLayout.MutableInt,boolean)>:<private>:<android.widget.GridLayout.Axis>
<android.widget.ProgressBar: void applyProgressBackgroundTint()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService: void adjustStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.ValueAnimator.AnimationHandler: void start()>:<public>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.view.ViewGroup.MarginLayoutParams: void copyMarginsFrom(android.view.ViewGroup.MarginLayoutParams)>:<public final>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.print.PageRange: int getEnd()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.view.View: boolean isRtlCompatibilityMode()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy: void screenTurningOn(android.view.WindowManagerPolicy.ScreenOnListener)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.animation.PropertyValuesHolder: void access.400(java.lang.Object,long,float)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.RtlSpacingHelper: int getStart()>:<public>:<android.widget.RtlSpacingHelper>
<android.view.InputEventConsistencyVerifier: void <clinit>()>:<static>:<android.view.InputEventConsistencyVerifier>
<android.widget.Editor.SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.view.inputmethod.InputMethodManager: void notifyInputConnectionFinished()>:<private>:<android.view.inputmethod.InputMethodManager>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.projection.MediaProjectionManager: void stopActiveProjection()>:<public>:<android.media.projection.MediaProjectionManager>
<android.media.SubtitleTrack: void onData(byte[],boolean,long)>:<public abstract>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.media.session.ISessionCallback: void onPrevious()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.preference.PreferenceActivity: boolean hasHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.printservice.PrintService.1: void stopPrinterDiscovery()>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.CCParser.CCLineBuilder: void <init>(java.lang.String)>:<>:<android.media.CCParser.CCLineBuilder>
<android.print.PrintJobId: int hashCode()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RemoteViewsListAdapter: void init()>:<private>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.widget.ListView: boolean removeFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.printservice.PrintJob: boolean setTag(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.view.animation.OvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.GridView: void setSelectionInt(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.security.IKeystoreService: java.lang.String[] saw(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.ViewGroup: android.view.ViewGroup.TouchTarget addTouchTarget(android.view.View,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.filterpacks.base.FrameSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.FrameSource:android.filterfw.core.Filter>
<android.widget.SearchView: void access.1700(android.widget.SearchView,int,java.lang.String,java.lang.String)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.accounts.ChooseTypeAndAccountActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.preference.ListPreference.SavedState: void <clinit>()>:<static>:<android.preference.ListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.media.AudioAttributes: boolean equals(java.lang.Object)>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.View: void setTransitionAlpha(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.media.audiofx.Equalizer: short getBandLevel(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.ViewConfiguration: int getTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewRootImpl.NativePostImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>:<public>:<android.view.ViewRootImpl.NativePostImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.preference.DialogPreference: void requestInputMethod(android.app.Dialog)>:<private>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.animation.Animation: void setStartTime(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.GridLayout: boolean isRowOrderPreserved()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session.5: void run()>:<public>:<android.media.tv.TvInputService.Session.5:java.lang.Runnable>
<android.media.session.MediaSession: void access.1200(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.media.AudioService: void makeA2dpDeviceAvailable(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.MultiCheckPreference: void setEntryValuesCS(java.lang.CharSequence[])>:<private>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViewsAdapter: int getItemViewType(int)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.View: void setClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.Animator: void setupStartValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.accounts.AccountAuthenticatorResponse.1: android.accounts.AccountAuthenticatorResponse[] newArray(int)>:<public>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.widget.Spinner.SpinnerPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.filterpacks.base.NullFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.NullFilter:android.filterfw.core.Filter>
<android.view.animation.AnticipateOvershootInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.IRemoteVolumeController.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteVolumeController.Stub.Proxy:android.media.IRemoteVolumeController>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getLidState()>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.media.WebVttParser: android.media.TextTrackCue access.900(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.view.IWindowManager.Stub.Proxy: float getCurrentAnimatorScale()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.AudioSystem: boolean isStreamActiveRemotely(int,int)>:<public static native>:<android.media.AudioSystem>
<android.media.AudioTrack: int write(short[],int,int)>:<public>:<android.media.AudioTrack>
<android.widget.DayPickerView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.GLES20Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>:<public static native>:<android.media.audiofx.Visualizer>
<android.printservice.PrintService: java.util.List getActivePrintJobs()>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.CrossProcessFilter:android.filterfw.core.Filter>
<android.view.View: boolean isActivated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputClient.Stub.Proxy: void onContentAllowed(int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaDrm: void setCipherAlgorithmNative(android.media.MediaDrm,byte[],java.lang.String)>:<private static final native>:<android.media.MediaDrm>
<android.view.Nsd: void <init>()>:<public>:<android.view.Nsd>
<android.preference.PreferenceGroup: void sortPreferences()>:<>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.widget.AdapterViewAnimator.SavedState: void <init>(android.os.Parcelable,int)>:<>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.MediaCodecInfo.AudioCapabilities: void limitSampleRates(int[])>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.database.AbstractWindowedCursor: void <init>()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.filterpacks.performance.Throughput: float getNanosPerPixel()>:<public>:<android.filterpacks.performance.Throughput>
<android.widget.GridLayout: android.util.Printer getPrinter()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.IWindow.Stub.Proxy: void closeSystemDialogs(java.lang.String)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.View.2: void <init>(android.view.View,int)>:<>:<android.view.View.2:com.android.internal.util.Predicate>
<android.media.AudioManager.OnAudioPortUpdateListener: void onAudioPortListUpdate(android.media.AudioPort[])>:<public abstract>:<android.media.AudioManager.OnAudioPortUpdateListener>
<android.view.ViewOverlay: void <init>(android.content.Context,android.view.View)>:<>:<android.view.ViewOverlay>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: void <init>(java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.media.session.PlaybackState.CustomAction: java.lang.CharSequence getName()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.filterpacks.videoproc.BackDropperFilter: void relearn()>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.media.CamcorderProfile: boolean hasProfile(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.view.Nsd: void enableNsdSave()>:<static>:<android.view.Nsd>
<android.view.View.14: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.14:android.util.FloatProperty>
<android.widget.TextView: void setTextIsSelectable(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.IAccessibilityManagerClient: void setState(int)>:<public abstract>:<android.view.accessibility.IAccessibilityManagerClient:android.os.IInterface>
<android.media.tv.TvStreamConfig: void <init>()>:<private>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.view.OrientationListener.OrientationEventListenerInternal: void onOrientationChanged(int)>:<public>:<android.view.OrientationListener.OrientationEventListenerInternal:android.view.OrientationEventListener>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onVolumeInfoChanged(android.media.session.ParcelableVolumeInfo)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.widget.Switch.1: java.lang.Float get(android.widget.Switch)>:<public>:<android.widget.Switch.1:android.util.FloatProperty>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.effect.SizeChangeEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>:<public transient>:<android.media.effect.SizeChangeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.ViewDebug.2: void post(java.lang.Void[])>:<public transient>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.widget.AbsListView.RecycleBin: void scrapActiveViews()>:<>:<android.widget.AbsListView.RecycleBin>
<android.media.IVolumeController.Stub.Proxy: void volumeChanged(int,int)>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.media.audiopolicy.AudioPolicyConfig: void <clinit>()>:<static>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.media.audiofx.Equalizer.Settings: void <init>()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.accounts.IAccountAuthenticator: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IMediaHTTPConnection: long getSize()>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.media.AudioService: void sendVolumeUpdate(int,int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.IPrintManager: java.util.List getInstalledPrintServices(int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.database.sqlite.SQLiteProgram: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.RenderNode: float getRotationX()>:<public>:<android.view.RenderNode>
<android.security.IKeystoreService.Stub.Proxy: byte[] sign(java.lang.String,byte[])>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.ListView: int amountToScroll(int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View.10: void <init>(java.lang.String)>:<>:<android.view.View.10:android.util.FloatProperty>
<android.media.AudioTrack: float getMaxVolume()>:<public static>:<android.media.AudioTrack>
<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>:<public>:<android.view.WindowManagerGlobal>
<android.view.IWindowManager.Stub.Proxy: boolean isKeyguardLocked()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.service.voice.VoiceInteractionSession: void onCloseSystemDialogs()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.PopupWindow.PopupViewContainer: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputQueue.Callback: void onInputQueueCreated(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.media.AudioSystem: boolean isSourceActive(int)>:<public static native>:<android.media.AudioSystem>
<android.media.MediaCodec.MediaImage: void close()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.view.InputEventReceiver: boolean consumeBatchedInputEvents(long)>:<public final>:<android.view.InputEventReceiver>
<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.IKeystoreService.Stub.Proxy: int ungrant(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.TabWidget: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>:<>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.1: void handleMessage(android.os.Message)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.1:android.os.Handler>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvView: int access.2102(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.RemoteDisplayState.RemoteDisplayInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.RemoteDisplayState.RemoteDisplayInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: void resetResolvedTextDirection()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Utils: int gcd(int,int)>:<static>:<android.media.Utils>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.service.notification.NotificationListenerService.RankingMap.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.service.notification.NotificationListenerService.RankingMap.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.View.10: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.10:android.util.FloatProperty>
<android.print.PrintAttributes: java.lang.String toString()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>:<public static>:<android.view.SoundEffectConstants>
<android.opengl.GLLogWrapper: void glColor4f(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void setRawTextSizeOuter(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.printservice.IPrintServiceClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.media.AudioTrack: int native_setAuxEffectSendLevel(float)>:<private final native>:<android.media.AudioTrack>
<android.view.RenderNodeAnimator: void init(long)>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager)>:<public>:<android.accounts.AccountManager>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewGroup: android.view.View findViewByAccessibilityIdTraversal(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: void clear()>:<private>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.MultiSelectListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLErrorWrapper: boolean glIsEnabled(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.service.voice.AlwaysOnHotwordDetector.MyHandler: void <init>(android.service.voice.AlwaysOnHotwordDetector)>:<>:<android.service.voice.AlwaysOnHotwordDetector.MyHandler:android.os.Handler>
<android.animation.ObjectAnimator: void initAnimation()>:<>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: int access.102(android.view.ViewTreeObserver.CopyOnWriteArray.Access,int)>:<static>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<android.view.View: void setOnGenericMotionListener(android.view.View.OnGenericMotionListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.tv.ITvInputManager.Stub.Proxy: void setCaptionEnabled(android.os.IBinder,boolean,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.FastScroller: boolean access.100(android.widget.FastScroller)>:<static>:<android.widget.FastScroller>
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.Invert:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.InputFilter.H: void <init>(android.view.InputFilter,android.os.Looper)>:<public>:<android.view.InputFilter.H:android.os.Handler>
<android.database.CursorWindow: void freeLastRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHost: boolean access.000(android.appwidget.AppWidgetHost)>:<static>:<android.appwidget.AppWidgetHost>
<android.database.sqlite.SQLiteConnection.OperationLog: void endOperation(int)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.view.RenderNode: boolean nOffsetTopAndBottom(long,int)>:<private static native>:<android.view.RenderNode>
<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.202(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,int)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.trust.TrustAgentService.2: void run()>:<public>:<android.service.trust.TrustAgentService.2:java.lang.Runnable>
<android.filterpacks.imageproc.NegativeFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.NegativeFilter:android.filterfw.core.Filter>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Class getType()>:<public>:<android.animation.PathKeyframes.FloatKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.FloatKeyframes>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.graphics.Matrix access.1100(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.MagnificationSpec: void clear()>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.view.ViewRootImpl: void dispatchGetNewSurface()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.View: boolean performHapticFeedback(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputClient: void onSessionReleased(int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.database.CursorWrapper: int getCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.MediaRecorder: void native_finalize()>:<private final native>:<android.media.MediaRecorder>
<android.widget.ProgressBar: void postInvalidate()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaRecorder: void <init>()>:<public>:<android.media.MediaRecorder>
<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES10>
<android.view.Choreographer.1: java.lang.Object initialValue()>:<protected volatile>:<android.view.Choreographer.1:java.lang.ThreadLocal>
<android.view.CollapsibleActionView: void onActionViewExpanded()>:<public abstract>:<android.view.CollapsibleActionView>
<android.print.IPrintManager.Stub.Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.preference.MultiCheckPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.MultiCheckPreference.SavedState.1:android.os.Parcelable.Creator>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.accessibility.AccessibilityRecord: boolean isChecked()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.TextView: void setMaxEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureOverlayView: void clear(boolean,boolean,boolean)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.media.projection.MediaProjectionInfo: void <init>(java.lang.String,android.os.UserHandle)>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.view.KeyCharacterMap: void <init>(android.os.Parcel,android.view.KeyCharacterMap.1)>:<>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.filterpacks.imageproc.RotateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.view.FocusFinder.SequentialFocusComparator: void recycle()>:<public>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.view.IInputFilter.Stub: void <init>()>:<public>:<android.view.IInputFilter.Stub:android.os.Binder,android.view.IInputFilter>
<android.widget.TextView: void setLetterSpacing(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadPreviewImage(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.View: void ensureTransformationInfo()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.CaptioningManager: float getFontScale()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.animation.Animation: boolean hasStarted()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Display: int getDisplayId()>:<public>:<android.view.Display>
<android.animation.ObjectAnimator: android.animation.ValueAnimator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterpacks.base.GLTextureSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.GLTextureSource:android.filterfw.core.Filter>
<android.view.ViewParent: android.view.ViewParent getParent()>:<public abstract>:<android.view.ViewParent>
<android.view.WindowManagerGlobal: void trimMemory(int)>:<public>:<android.view.WindowManagerGlobal>
<android.media.tv.TvTrackInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.ViewRootImpl: java.lang.String access.1100(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.accessibility.AccessibilityRecord: void enforceNotSealed()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.animation.PathKeyframes: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOESBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11Ext>
<android.media.JetPlayer: boolean native_loadJetFromFileD(java.io.FileDescriptor,long,long)>:<private final native>:<android.media.JetPlayer>
<android.widget.TextView: void updateTextColors()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowContentFrameStats.1: android.view.WindowContentFrameStats createFromParcel(android.os.Parcel)>:<public>:<android.view.WindowContentFrameStats.1:android.os.Parcelable.Creator>
<android.view.WindowManagerGlobal: void reportNewConfiguration(android.content.res.Configuration)>:<public>:<android.view.WindowManagerGlobal>
<android.view.AbsSavedState.2: android.view.AbsSavedState createFromParcel(android.os.Parcel)>:<public>:<android.view.AbsSavedState.2:android.os.Parcelable.Creator>
<android.widget.DatePickerController: java.util.Calendar getSelectedDay()>:<public abstract>:<android.widget.DatePickerController>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.animation.TimeAnimator: void setTimeListener(android.animation.TimeAnimator.TimeListener)>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.filterpacks.imageproc.BitmapOverlayFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.widget.TextView.Marquee.3: void <init>(android.widget.TextView.Marquee)>:<>:<android.widget.TextView.Marquee.3:android.view.Choreographer.FrameCallback>
<android.view.GLES20Canvas: void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.ILayoutResultCallback: void onLayoutStarted(android.os.ICancellationSignal,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.media.MediaCodecInfo.EncoderCapabilities: void parseFromInfo(android.media.MediaFormat)>:<private>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.widget.MediaController: int setProgress()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.media.MediaBrowserService: boolean access.000(android.service.media.MediaBrowserService,java.lang.String,int)>:<static>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.wallpaper.IWallpaperService.Stub: android.service.wallpaper.IWallpaperService asInterface(android.os.IBinder)>:<public static>:<android.service.wallpaper.IWallpaperService.Stub:android.os.Binder,android.service.wallpaper.IWallpaperService>
<android.media.RemoteControlClient.MetadataEditor: void <init>(android.media.RemoteControlClient)>:<private>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.RenderNode: void nSetDisplayListData(long,long)>:<private static native>:<android.view.RenderNode>
<android.media.MediaMetadataEditor: void <init>()>:<protected>:<android.media.MediaMetadataEditor>
<android.gesture.GestureUtils: float cosineDistance(float[],float[])>:<static>:<android.gesture.GestureUtils>
<android.animation.PropertyValuesHolder: void access.600(java.lang.Object,long,float,float)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.tv.TvInputInfo.1: android.media.tv.TvInputInfo[] newArray(int)>:<public>:<android.media.tv.TvInputInfo.1:android.os.Parcelable.Creator>
<android.media.ClosedCaptionRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>:<public>:<android.media.ClosedCaptionRenderer:android.media.SubtitleController.Renderer>
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.AudioService: android.bluetooth.BluetoothHeadset access.2900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiopolicy.AudioPolicyConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo build()>:<public>:<android.media.tv.TvTrackInfo.Builder>
<androidhwext.R.array: void <init>()>:<public>:<androidhwext.R.array>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>:<public static>:<android.media.RingtoneManager>
<android.view.View.11: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.11:android.util.FloatProperty>
<android.view.WindowManagerPolicy: boolean isKeyguardDrawnLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.tv.TvInputService.Session: void removeOverlayView(boolean)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.ISession: void setMediaButtonReceiver(android.app.PendingIntent)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.widget.RatingBar: void onStopTrackingTouch()>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View.OnHoverListener: boolean onHover(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnHoverListener>
<android.media.MediaRouter.VolumeCallback: void <init>()>:<public>:<android.media.MediaRouter.VolumeCallback>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>:<public>:<android.media.RingtoneManager>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.media.SoundPool: void setRate(int,float)>:<public final>:<android.media.SoundPool>
<android.media.tv.TvInputManager.Session: void <init>(android.os.IBinder,android.view.InputChannel,android.media.tv.ITvInputManager,int,int,android.util.SparseArray,android.media.tv.TvInputManager.1)>:<>:<android.media.tv.TvInputManager.Session>
<android.media.IAudioService.Stub.Proxy: void unloadSoundEffects()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.audiopolicy.AudioPolicyConfig: int describeContents()>:<public>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.preference.TwoStatePreference: void setSummaryOff(java.lang.CharSequence)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.View: boolean fitsSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.IAccessibilityManagerClient.Stub: void <init>()>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManagerClient>
<android.widget.ProgressBar.AccessibilityEventSender: void run()>:<public>:<android.widget.ProgressBar.AccessibilityEventSender:java.lang.Runnable>
<android.widget.AdapterViewAnimator: void advance()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.MenuInflater: java.lang.Class[] access.500()>:<static>:<android.view.MenuInflater>
<android.view.accessibility.AccessibilityManager.MyHandler: void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper)>:<public>:<android.view.accessibility.AccessibilityManager.MyHandler:android.os.Handler>
<android.view.InputEventReceiver: void dispose()>:<public>:<android.view.InputEventReceiver>
<android.view.SurfaceControl: android.view.SurfaceControl.PhysicalDisplayInfo[] nativeGetDisplayConfigs(android.os.IBinder)>:<private static native>:<android.view.SurfaceControl>
<android.widget.Editor.InsertionHandleView: int getCursorOffset()>:<protected>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.View: android.graphics.Matrix getMatrix()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>:<private>:<android.service.voice.AlwaysOnHotwordDetector>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.Rating: int describeContents()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.printservice.IPrintServiceClient.Stub.Proxy: java.util.List getPrintJobInfos()>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.view.accessibility.AccessibilityEvent: int describeContents()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.printservice.PrintService.1: void startPrinterDiscovery(java.util.List)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.WebVttRenderingWidget.CueLayout: void onMeasure(int,int)>:<protected>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.VideoView: void setSubtitleWidget(android.media.SubtitleTrack.RenderingWidget)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.Switch: void cancelSuperTouch(android.view.MotionEvent)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.SurfaceControl: void setSize(int,int)>:<public>:<android.view.SurfaceControl>
<android.opengl.GLES20: void glVertexAttribPointerBounds(int,int,int,boolean,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteConnection.OperationLog: void <init>(android.database.sqlite.SQLiteConnection.1)>:<>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.media.session.ISession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.media.tv.TvInputManager.SessionCallbackRecord.8: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.8:java.lang.Runnable>
<android.view.Display: void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments)>:<public>:<android.view.Display>
<android.media.SoundPool.SoundPoolImpl: int load(android.content.Context,int,int)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.tv.TvInputService.Session.2: void run()>:<public>:<android.media.tv.TvInputService.Session.2:java.lang.Runnable>
<android.view.GLES20Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.inputmethod.CursorAnchorInfo.Builder: int access.200(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.accounts.Account: int describeContents()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.security.IKeystoreService: int exist(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setOnWindowDismissedCallback(android.view.Window.OnWindowDismissedCallback)>:<public final>:<android.view.Window>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void requirePreferenceManager()>:<private>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.opengl.GLLogWrapper: java.lang.String glGetString(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Switch: void setSwitchMinWidth(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.widget.AbsListView.RecycleBin: android.view.View getScrapView(int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.media.AudioService: void access.8100(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.media.session.MediaController.Callback: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public>:<android.media.session.MediaController.Callback>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>:<public abstract>:<android.widget.RatingBar.OnRatingBarChangeListener>
<android.media.ImageReader: int getNumPlanesFromFormat()>:<private>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.Menu: void setGroupEnabled(int,boolean)>:<public abstract>:<android.view.Menu>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: float consumeAccumulatedMovement(long,int,float,int,int)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.effect.effects.BitmapOverlayEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.BitmapOverlayEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.YearPickerView.YearAdapter: void <init>(android.widget.YearPickerView,android.content.Context,int)>:<public>:<android.widget.YearPickerView.YearAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.widget.YearPickerView.YearAdapter: void setItemTextAppearance(int)>:<public>:<android.widget.YearPickerView.YearAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.Switch: void stopDrag(android.view.MotionEvent)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ViewGroup: void startViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewDebug: void <init>()>:<public>:<android.view.ViewDebug>
<android.service.media.IMediaBrowserService.Stub.Proxy: void addSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioService: void access.7600(android.media.AudioService,android.bluetooth.BluetoothDevice,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.SeekBarPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.SeekBarPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>:<public static>:<android.view.View.MeasureSpec>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFixedSize(int,int)>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.media.tv.TvInputHardwareInfo: int access.502(android.media.tv.TvInputHardwareInfo,int)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.ThumbnailUtils: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)>:<private static>:<android.media.ThumbnailUtils>
<android.media.session.IActiveSessionsListener.Stub: android.media.session.IActiveSessionsListener asInterface(android.os.IBinder)>:<public static>:<android.media.session.IActiveSessionsListener.Stub:android.os.Binder,android.media.session.IActiveSessionsListener>
<android.view.HardwareCanvas: boolean isHardwareAccelerated()>:<public>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.opengl.GLLogWrapper: void glMatrixMode(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.SessionCallback: void onChannelRetuned(android.media.tv.TvInputManager.Session,android.net.Uri)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.projection.IMediaProjection.Stub.Proxy: void start(android.media.projection.IMediaProjectionCallback)>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.database.BulkCursorDescriptor: void <clinit>()>:<static>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.media.tv.TvInputInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.printservice.PrintServiceInfo: void <init>(android.os.Parcel)>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.inputmethod.InputMethodManager: void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper)>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.media.session.ISessionManager.Stub: void <init>()>:<public>:<android.media.session.ISessionManager.Stub:android.os.Binder,android.media.session.ISessionManager>
<android.media.tv.TvView: android.media.tv.TvInputManager.Session access.902(android.media.tv.TvView,android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>:<public>:<android.view.WindowManagerGlobal>
<android.database.CursorWrapper: int getType(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.ViewOverlay.OverlayViewGroup: void <init>(android.content.Context,android.view.View)>:<>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.widget.ActivityChooserView.Callbacks: void onDismiss()>:<public>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.view.ViewGroup: boolean hasChildWithZ()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>:<public final>:<android.media.MediaCodecList>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.animation.PropertyValuesHolder: long access.900(java.lang.Class,java.lang.String,int)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(int)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioTrack>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void onChange(boolean)>:<public>:<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver:android.database.ContentObserver>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection.PreparedStatement,android.database.sqlite.SQLiteConnection.PreparedStatement)>:<protected>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.service.wallpaper.IWallpaperEngine: void setDesiredSize(int,int)>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.media.MediaDrm: java.util.List getSecureStops()>:<public native>:<android.media.MediaDrm>
<android.preference.TwoStatePreference.SavedState.1: android.preference.TwoStatePreference.SavedState[] newArray(int)>:<public>:<android.preference.TwoStatePreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaRouter: void dispatchRouteUnselected(int,android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.widget.ActivityChooserView.2: void onGlobalLayout()>:<public>:<android.widget.ActivityChooserView.2:android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.inputmethod.InputMethodSubtype: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder getBuilder(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,boolean)>:<private static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: void <init>(android.os.Parcel)>:<>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: void onChanged()>:<public>:<android.widget.AutoCompleteTextView.PopupDataSetObserver:android.database.DataSetObserver>
<android.view.ViewRootImpl: void focusableViewAvailable(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLErrorWrapper: void glDrawArrays(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.widget.RadialTimePickerView: void setOnValueSelectedListener(android.widget.RadialTimePickerView.OnValueSelectedListener)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.NumberPicker.PressedStateHelper: void cancel()>:<public>:<android.widget.NumberPicker.PressedStateHelper:java.lang.Runnable>
<android.print.PrintJobId.1: android.print.PrintJobId createFromParcel(android.os.Parcel)>:<public>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.security.KeyStore: boolean contains(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.media.tv.TvContentRatingSystemInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.widget.ListView: void layoutChildren()>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean canCopy()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.IWriteResultCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.media.tv.TvInputService: android.os.Handler access.200(android.media.tv.TvInputService)>:<static>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ExpandableListView: void setChildIndicatorBoundsRelative(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.widget.MediaController: void setAnchorView(android.view.View)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SimpleMonthAdapter: void onDayTapped(java.util.Calendar)>:<protected>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.view.View: void requestFitSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: int getActiveStreamType(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TabHost: void sendAccessibilityEvent(int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.FastScroller: void onItemCountChanged(int,int)>:<public>:<android.widget.FastScroller>
<android.media.SoundPool.SoundPoolDelegate: void autoResume()>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.widget.ViewAnimator: int getBaseline()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>:<>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>:<public>:<android.media.session.MediaController>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.MediaScanner: android.net.Uri access.1400(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.session.ISessionManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.ISessionManager.Stub:android.os.Binder,android.media.session.ISessionManager>
<android.widget.Editor.SuggestionsPopupWindow: void measureContent()>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.widget.SimpleMonthAdapter: int getCount()>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.opengl.GLErrorWrapper: void glAlphaFuncx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView.Marquee: void tick()>:<>:<android.widget.TextView.Marquee>
<android.preference.MultiCheckPreference.SavedState.1: android.preference.MultiCheckPreference.SavedState[] newArray(int)>:<public>:<android.preference.MultiCheckPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getDateTextAppearance()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.tv.TvInputManager.TvInputCallback: void onInputStateChanged(java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.GridLayout.Axis: void invalidateValues()>:<public>:<android.widget.GridLayout.Axis>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glPolygonOffset(float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintManager.Stub.Proxy: java.util.List getEnabledPrintServices(int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.Choreographer.CallbackQueue: void <init>(android.view.Choreographer,android.view.Choreographer.1)>:<>:<android.view.Choreographer.CallbackQueue>
<android.printservice.IPrintServiceClient: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.filterpacks.imageproc.ImageEncoder: void setupPorts()>:<public>:<android.filterpacks.imageproc.ImageEncoder:android.filterfw.core.Filter>
<android.print.PrintJobInfo.Builder: void setCopies(int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.widget.TimePickerSpinnerDelegate: void setupListeners()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.preference.GenericInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>:<protected>:<android.preference.GenericInflater>
<android.media.IVolumeController.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.widget.DatePickerController: void setMaxDate(long)>:<public abstract>:<android.widget.DatePickerController>
<android.widget.ViewFlipper: void stopFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.media.MediaPlayer.3: void setSubtitleWidget(android.media.SubtitleTrack.RenderingWidget)>:<public>:<android.media.MediaPlayer.3:android.media.SubtitleController.Anchor>
<android.widget.Editor.HandleView: void onHandleMoved()>:<>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.print.IPrintManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.Surface: void nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.hsm.MediaTransactWrapper: android.os.IBinder getBinder()>:<private static>:<android.hsm.MediaTransactWrapper>
<android.view.RenderNode: void nDestroyRenderNode(long)>:<private static native>:<android.view.RenderNode>
<android.gesture.GestureLibrary: int getOrientationStyle()>:<public>:<android.gesture.GestureLibrary>
<android.view.AccessibilityIterators.WordTextSegmentIterator: void <init>(java.util.Locale)>:<private>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GLES20Canvas: void nDrawText(long,char[],int,int,float,float,int,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.PageRange.1: android.print.PageRange createFromParcel(android.os.Parcel)>:<public>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.view.ViewTreeObserver.InternalInsetsInfo: boolean equals(java.lang.Object)>:<public>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.animation.PropertyValuesHolder: void access.1100(java.lang.Object,long,int,int,int,int)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.GridView: boolean fullScroll(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.notification.ConditionProviderService: java.lang.String access.300(android.service.notification.ConditionProviderService)>:<static>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterpacks.base.ObjectSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.ObjectSource:android.filterfw.core.Filter>
<android.view.ViewRootImpl: boolean isInLocalFocusMode()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.ITvInputSessionCallback: void onTrackSelected(int,java.lang.String)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.service.media.IMediaBrowserService.Stub: android.service.media.IMediaBrowserService asInterface(android.os.IBinder)>:<public static>:<android.service.media.IMediaBrowserService.Stub:android.os.Binder,android.service.media.IMediaBrowserService>
<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.session.MediaController.PlaybackInfo: int getCurrentVolume()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.preference.TwoStatePreference: void setSummaryOn(java.lang.CharSequence)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.DisplayInfo: void getLogicalMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.database.sqlite.SQLiteConnection: void collectDbStats(java.util.ArrayList)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.view.View: void dumpFlags()>:<private static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewConfiguration: int getEdgeSlop()>:<public static>:<android.view.ViewConfiguration>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioSystem: java.lang.String getParameters(java.lang.String)>:<public static native>:<android.media.AudioSystem>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>:<public static>:<android.media.RingtoneManager>
<android.media.SoundPool.Builder: void <init>()>:<public>:<android.media.SoundPool.Builder>
<android.media.browse.MediaBrowser: android.os.Bundle getExtras()>:<public>:<android.media.browse.MediaBrowser>
<android.hsm.HwSystemManager.HsmDefImpl: void <init>()>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.widget.MediaController: android.view.WindowManager access.400(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.SystemKeyStore: java.lang.String toHexString(byte[])>:<public static>:<android.security.SystemKeyStore>
<android.widget.Editor.HandleView: boolean isDragging()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.AudioService: android.os.PowerManager.WakeLock access.7500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.CursorWrapper: float getFloat(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLES31Ext: void <init>()>:<private>:<android.opengl.GLES31Ext>
<android.media.AudioTrack: int native_get_marker_pos()>:<private final native>:<android.media.AudioTrack>
<android.view.View.CheckForLongPress: void <init>(android.view.View)>:<private>:<android.view.View.CheckForLongPress:java.lang.Runnable>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public transient>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.media.tv.ITvInputService.Stub: void <init>()>:<public>:<android.media.tv.ITvInputService.Stub:android.os.Binder,android.media.tv.ITvInputService>
<android.widget.ListView: void measureItem(android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.WindowId getWindowId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService.RmtSbmxFullVolDeathHandler: void binderDied()>:<public>:<android.media.AudioService.RmtSbmxFullVolDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(java.lang.Object)>:<public volatile>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.print.PrinterId.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>:<public abstract>:<android.view.Window>
<android.media.AudioService.AudioHandler: void setForceUse(int,int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.MediaRouter: void dispatchRoutePresentationDisplayChanged(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.View.AttachInfo.InvalidateInfo: void <clinit>()>:<static>:<android.view.View.AttachInfo.InvalidateInfo>
<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnSeekCompleteListener>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.service.voice.IVoiceInteractionSession.Stub: android.service.voice.IVoiceInteractionSession asInterface(android.os.IBinder)>:<public static>:<android.service.voice.IVoiceInteractionSession.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSession>
<android.widget.TextView: int computeVerticalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaSession: void dispatchPause()>:<private>:<android.media.session.MediaSession>
<android.view.MotionEvent: int axisFromString(java.lang.String)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.IWindowManager: void startFreezingScreen(int,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.ViewGroup: void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Image.Plane: int getPixelStride()>:<public abstract>:<android.media.Image.Plane>
<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>:<public>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.view.WindowInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.WindowInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowManager: void executeAppTransition()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.service.notification.IConditionListener.Stub: android.os.IBinder asBinder()>:<public>:<android.service.notification.IConditionListener.Stub:android.os.Binder,android.service.notification.IConditionListener>
<android.view.DisplayInfo.1: void <init>()>:<>:<android.view.DisplayInfo.1:android.os.Parcelable.Creator>
<android.view.InputEvent: void <clinit>()>:<static>:<android.view.InputEvent:android.os.Parcelable>
<android.widget.TextView: void setTextColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ResizeFilter:android.filterfw.core.Filter>
<android.widget.DayPickerView: void setCalendarTextColor(android.content.res.ColorStateList)>:<>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.Gallery: void setCallbackOnUnselectedItemClick(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: void recycle()>:<>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.media.tv.TvInputService.Session.5: void <init>(android.media.tv.TvInputService.Session,int,java.lang.String)>:<>:<android.media.tv.TvInputService.Session.5:java.lang.Runnable>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void setupSetterAndGetter(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>:<public>:<android.gesture.GestureStroke>
<android.netdetect.HwCustNetDetectServiceImpl: android.content.Context access.600(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.MediaCodec.CodecException: boolean isRecoverable()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void setCallback(android.media.IRemoteDisplayCallback)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.media.AudioService.AudioPolicyProxy: void <init>(android.media.AudioService,android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>:<>:<android.media.AudioService.AudioPolicyProxy:android.os.IBinder.DeathRecipient>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioAttributes: java.lang.String toString()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.preference.SeekBarPreference: void setProgress(int)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.database.sqlite.SQLiteConnection: java.lang.String access.300(java.lang.String)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.session.MediaSessionLegacyHelper: void sendKeyEvent(android.app.PendingIntent,android.content.Context,android.content.Intent)>:<private static>:<android.media.session.MediaSessionLegacyHelper>
<android.view.ViewGroup.ViewLocationHolder: void <clinit>()>:<static>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.view.MenuItem: android.view.View getActionView()>:<public abstract>:<android.view.MenuItem>
<android.accounts.AccountManager.7: void doWork()>:<public>:<android.accounts.AccountManager.7:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID,java.lang.String)>:<public static final>:<android.media.MediaDrm>
<android.media.SubtitleTrack.CueList.EntryIterator: android.util.Pair next()>:<public>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.widget.TextView.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.TextView.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnErrorListener>
<android.view.Nsd: boolean checkIfSupportNsd()>:<public static>:<android.view.Nsd>
<android.media.AudioGain: int mode()>:<public>:<android.media.AudioGain>
<android.media.tv.TvInputManager.TvInputCallback: void onInputUpdated(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.view.animation.Animation: boolean isInitialized()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.ExpandableListView: boolean hasRtlSupport()>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.media.session.MediaSession.CallbackMessageHandler: void post(int,java.lang.Object,int)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>:<public>:<android.accounts.AccountManager>
<android.widget.ProgressBar.AccessibilityEventSender: void <init>(android.widget.ProgressBar)>:<private>:<android.widget.ProgressBar.AccessibilityEventSender:java.lang.Runnable>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.view.RenderNode: boolean nGetClipToOutline(long)>:<private static native>:<android.view.RenderNode>
<android.widget.TimePickerSpinnerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.GridLayout.2: int getAlignmentValue(android.view.View,int,int)>:<public>:<android.widget.GridLayout.2:android.widget.GridLayout.Alignment>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvContentRating: java.util.List getSubRatings()>:<public>:<android.media.tv.TvContentRating>
<android.animation.PropertyValuesHolder: void nCallFourIntMethod(java.lang.Object,long,int,int,int,int)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.CursorWindow: double nativeGetDouble(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.MotionEvent: boolean nativeIsTouchEvent(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.BulkCursorDescriptor.1: void <init>()>:<>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.media.AudioRecord: void release()>:<public>:<android.media.AudioRecord>
<android.media.IMediaRouterClient.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaRouterClient.Stub:android.os.Binder,android.media.IMediaRouterClient>
<android.service.notification.IConditionProvider: void onUnsubscribe(android.net.Uri)>:<public abstract>:<android.service.notification.IConditionProvider:android.os.IInterface>
<android.media.MediaPlayer.OnSubtitleDataListener: void onSubtitleData(android.media.MediaPlayer,android.media.SubtitleData)>:<public abstract>:<android.media.MediaPlayer.OnSubtitleDataListener>
<android.widget.DatePickerController: void onYearSelected(int)>:<public abstract>:<android.widget.DatePickerController>
<android.media.AudioService.AudioHandler: void access.5600(android.media.AudioService.AudioHandler,android.media.MediaPlayer)>:<static>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.print.PrintJobInfo: void setLabel(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.FixedRotationFilter:android.filterfw.core.Filter>
<android.widget.AbsListView.CheckForTap: void <init>(android.widget.AbsListView,android.widget.AbsListView.1)>:<>:<android.widget.AbsListView.CheckForTap:java.lang.Runnable>
<android.view.InputDevice: void <init>(int,int,int,java.lang.String,int,int,java.lang.String,boolean,int,int,android.view.KeyCharacterMap,boolean,boolean)>:<private>:<android.view.InputDevice:android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getReleventAccountTypes(android.content.Intent)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.widget.ArrayAdapter.ArrayFilter: void <init>(android.widget.ArrayAdapter)>:<private>:<android.widget.ArrayAdapter.ArrayFilter:android.widget.Filter>
<android.opengl.GLSurfaceView.GLThread: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.animation.PropertyValuesHolder: long access.300(java.lang.Class,java.lang.String)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.MediaScanner.WplHandler: void start(org.xml.sax.Attributes)>:<public>:<android.media.MediaScanner.WplHandler:android.sax.ElementListener>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glLoadPaletteFromModelViewMatrixOES()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: android.view.View findLabelForView(android.view.View,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputBinding.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.InputBinding.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteClosable: void releaseReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.view.ViewGroup.ViewLocationHolder: void setComparisonStrategy(int)>:<public static>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.view.accessibility.AccessibilityInteractionClient: void <init>()>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.service.dreams.IDreamManager: void awaken()>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.widget.ProgressBar: void applySecondaryProgressTint()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.service.notification.IConditionProvider: void onSubscribe(android.net.Uri)>:<public abstract>:<android.service.notification.IConditionProvider:android.os.IInterface>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.print.PrinterInfo: android.print.PrinterId access.102(android.print.PrinterInfo,android.print.PrinterId)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CalendarView: int getFocusedMonthDateColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.302(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,java.lang.String)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDestroy(android.content.Intent)>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.1: void <init>(android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider,int)>:<>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.1:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glCullFace(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.imageproc.FlipFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.media.session.MediaSession.CallbackStub: void onSeekTo(long)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLSurfaceView: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.GridLayout.Axis: int size(int[])>:<private>:<android.widget.GridLayout.Axis>
<android.media.tv.TvInputManager: java.util.List getTvContentRatingSystemList()>:<public>:<android.media.tv.TvInputManager>
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.AlphaBlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvContract: android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)>:<public static final>:<android.media.tv.TvContract>
<android.preference.GenericInflater: android.preference.GenericInflater.Factory getFactory()>:<public final>:<android.preference.GenericInflater>
<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.CursorWindow: int getInt(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter: void <init>()>:<private>:<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.animation.LayoutTransition: long getDuration(int)>:<public>:<android.animation.LayoutTransition>
<android.widget.RadialTimePickerView: void swapAmPm()>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.HardwareLayer: android.view.HardwareLayer adoptTextureLayer(android.view.HardwareRenderer,long)>:<static>:<android.view.HardwareLayer>
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.SubtitleController.Anchor: android.os.Looper getSubtitleLooper()>:<public abstract>:<android.media.SubtitleController.Anchor>
<android.widget.StackView.StackSlider: float viewAlphaInterpolator(float)>:<private>:<android.widget.StackView.StackSlider>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap getForwardLinks()>:<private>:<android.widget.GridLayout.Axis>
<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.ViewDebug: java.lang.reflect.Field[] capturedViewGetPropertyFields(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.widget.StackView.StackSlider: float getDurationForOffscreenPosition()>:<>:<android.widget.StackView.StackSlider>
<android.widget.ActionMenuPresenter: boolean isOverflowReserved()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.ViewPropertyAnimator.NameValuesHolder: void <init>(int,float,float)>:<>:<android.view.ViewPropertyAnimator.NameValuesHolder>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypesAsUser(int)>:<public>:<android.accounts.AccountManager>
<android.widget.TextView: int getRightPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.WebVttRenderingWidget.CueLayout: void prepForPrune()>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec: java.util.Date getEndDate()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.security.SystemKeyStore: void deleteKey(java.lang.String)>:<public>:<android.security.SystemKeyStore>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected abstract>:<android.widget.Filter>
<android.database.AbstractCursor: short getShort(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.CalendarView: java.lang.String access.1000()>:<static>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.2: void <init>(android.view.View)>:<>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.widget.RemoteViews.MemoryUsageCounter: void clear()>:<public>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.widget.TextView: void setLinkTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Switch: void onMeasure(int,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.AudioGainConfig: int index()>:<>:<android.media.AudioGainConfig>
<android.media.ThumbnailUtils.SizedThumbnailBitmap: void <init>()>:<private>:<android.media.ThumbnailUtils.SizedThumbnailBitmap>
<android.media.session.MediaController: void adjustVolume(int,int)>:<public>:<android.media.session.MediaController>
<android.media.MediaPlayer: int getAudioStreamType()>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.MediaSession: void access.1300(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.widget.TextView: int getMarqueeRepeatLimit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.IDreamManager.Stub.Proxy: void stopDozing(android.os.IBinder)>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.animation.StateListAnimator: android.view.View getTarget()>:<public>:<android.animation.StateListAnimator>
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.ContrastFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.Window: void setTransitionManager(android.transition.TransitionManager)>:<public>:<android.view.Window>
<android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>:<public static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.IWindowManager.Stub.Proxy: boolean stopViewServer()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.service.notification.StatusBarNotification: int getId()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.printservice.PrinterDiscoverySession: void setObserver(android.printservice.IPrintServiceClient)>:<>:<android.printservice.PrinterDiscoverySession>
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: void <init>(java.lang.Object,java.lang.String)>:<public>:<android.view.MenuInflater.InflatedOnMenuItemClickListener:android.view.MenuItem.OnMenuItemClickListener>
<android.view.View.TransformationInfo: android.graphics.Matrix access.1700(android.view.View.TransformationInfo)>:<static>:<android.view.View.TransformationInfo>
<android.view.ViewStub: android.view.View inflate()>:<public>:<android.view.ViewStub:android.view.View>
<android.view.Menu: boolean performIdentifierAction(int,int)>:<public abstract>:<android.view.Menu>
<android.filterpacks.performance.ThroughputFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.performance.ThroughputFilter:android.filterfw.core.Filter>
<android.opengl.GLES20: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.animation.Animator: long getStartDelay()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateOverflowButtonLayoutParams()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.MediaCodecInfo.VideoCapabilities: boolean supportsFormat(android.media.MediaFormat)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.DisplayInfo: void <init>()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.WindowManagerPolicy: void removeWindowLw(android.view.WindowManagerPolicy.WindowState)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.tv.TvInputService.Session: void notifyChannelRetuned(android.net.Uri)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.MediaHTTPConnection: boolean filterOutInternalHeaders(java.lang.String,java.lang.String)>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void access.800(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.RenderNodeAnimator: void end()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.filterpacks.imageproc.RotateFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.SoundPool.SoundPoolStub: void <init>()>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.view.IWindowManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.PreferenceManager: boolean setPreferences(android.preference.PreferenceScreen)>:<>:<android.preference.PreferenceManager>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.preference.PreferenceGroupAdapter: void <init>(android.preference.PreferenceGroup)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)>:<private>:<android.view.MenuInflater>
<android.preference.PreferenceGroupAdapter: boolean hasStableIds()>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.media.MediaRouterClientState.RouteInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.AudioService: void sendStickyBroadcastToAll(android.content.Intent)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Toast: void setText(java.lang.CharSequence)>:<public>:<android.widget.Toast>
<androidhwext.R.xml: void <init>()>:<public>:<androidhwext.R.xml>
<android.widget.Editor: android.graphics.drawable.Drawable access.2502(android.widget.Editor,android.graphics.drawable.Drawable)>:<static>:<android.widget.Editor>
<android.opengl.GLErrorWrapper: void glTranslatex(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputService.Session.8: void <init>(android.media.tv.TvInputService.Session)>:<>:<android.media.tv.TvInputService.Session.8:java.lang.Runnable>
<android.view.View: boolean hasAncestorThatBlocksDescendantFocus()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Ringtone: int getStreamType()>:<public>:<android.media.Ringtone>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.filterpacks.imageproc.SimpleImageFilter: void updateProgramWithTarget(int,android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.view.RenderNode: boolean nSetPivotX(long,float)>:<private static native>:<android.view.RenderNode>
<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>:<public>:<android.widget.FastScroller>
<android.view.ViewDebug.HierarchyHandler: android.view.View findHierarchyView(java.lang.String,int)>:<public abstract>:<android.view.ViewDebug.HierarchyHandler>
<android.media.tv.TvInputManager.SessionCallbackRecord.3: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,android.net.Uri)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.3:java.lang.Runnable>
<android.printservice.PrinterDiscoverySession: void <clinit>()>:<static>:<android.printservice.PrinterDiscoverySession>
<android.gesture.Learner: void removeInstance(long)>:<>:<android.gesture.Learner>
<android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>:<static>:<android.view.FocusFinder>
<android.widget.NumberPicker.PressedStateHelper: void buttonTapped(int)>:<public>:<android.widget.NumberPicker.PressedStateHelper:java.lang.Runnable>
<android.media.SRTRenderer: boolean supports(android.media.MediaFormat)>:<public>:<android.media.SRTRenderer:android.media.SubtitleController.Renderer>
<android.media.JetPlayer: void loge(java.lang.String)>:<private static>:<android.media.JetPlayer>
<android.opengl.EGLObjectHandle: int hashCode()>:<public>:<android.opengl.EGLObjectHandle>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.RenderNodeAnimator: java.util.ArrayList cloneListeners()>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioService: boolean access.6900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Toast: void show()>:<public>:<android.widget.Toast>
<android.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.preference.SeekBarVolumizer.H: void <init>(android.preference.SeekBarVolumizer)>:<private>:<android.preference.SeekBarVolumizer.H:android.os.Handler>
<android.filterpacks.videosrc.CameraSource.1: void <init>(android.filterpacks.videosrc.CameraSource)>:<>:<android.filterpacks.videosrc.CameraSource.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.widget.ViewFlipper: void <init>(android.content.Context)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Scroller: void setFinalX(int)>:<public>:<android.widget.Scroller>
<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>:<public>:<android.media.session.MediaSession>
<android.view.HardwareLayer: int nGetTexName(long)>:<private static native>:<android.view.HardwareLayer>
<android.filterpacks.imageproc.FixedRotationFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FixedRotationFilter:android.filterfw.core.Filter>
<android.view.RenderNode: float nGetAlpha(long)>:<private static native>:<android.view.RenderNode>
<android.media.RemoteController: boolean clearArtworkConfiguration()>:<public>:<android.media.RemoteController>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setFirstDayOfWeek(int)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.animation.Animation: int getZAdjustment()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.service.media.IMediaBrowserService.Stub.Proxy: void removeSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.media.AudioService: void showDtsLicenseNotification()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.PropertyValuesHolder.PointFToFloatArray: void <init>()>:<public>:<android.animation.PropertyValuesHolder.PointFToFloatArray:android.animation.TypeConverter>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void <init>(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.view.View: void sizeChange(int,int,int,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.RouteGroup: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.INotificationListener.Stub.Proxy: void onNotificationPosted(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.view.ViewDebug.ExportedProperty: boolean hasAdjacentMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.view.VelocityTracker: float nativeGetXVelocity(long,int)>:<private static native>:<android.view.VelocityTracker>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterViewAnimator: void showTapFeedback(android.view.View)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.opengl.GLES10: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.IAudioFocusDispatcher.Stub.Proxy: void dispatchAudioFocusChange(int,java.lang.String)>:<public>:<android.media.IAudioFocusDispatcher.Stub.Proxy:android.media.IAudioFocusDispatcher>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.animation.AnimatorSet: android.animation.Animator clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.animation.Keyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.IInputFilter.Stub.Proxy: void filterInputEvent(android.view.InputEvent,int)>:<public>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.media.session.PlaybackState.CustomAction.1: android.media.session.PlaybackState.CustomAction[] newArray(int)>:<public>:<android.media.session.PlaybackState.CustomAction.1:android.os.Parcelable.Creator>
<android.widget.Spinner.SpinnerPopup: void setAdapter(android.widget.ListAdapter)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.media.MediaPlayer: boolean isVideoScalingModeSupported(int)>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.600(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.preference.MultiCheckPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: int[] access.400(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder)>:<static>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.view.ViewOverlay.OverlayViewGroup: boolean isEmpty()>:<>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void <init>(android.os.Handler)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.print.PrintDocumentAdapter: void onStart()>:<public>:<android.print.PrintDocumentAdapter>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void setDisplayPadding(android.graphics.Rect)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.media.tv.TvContract.Channels: java.lang.String getVideoResolution(java.lang.String)>:<public static final>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.view.IWindowManager.Stub.Proxy: void showStrictModeViolation(boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.Gallery: void setSpacing(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.opengl.GLErrorWrapper: void glLineWidth(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.FrameStats: void <init>()>:<public>:<android.view.FrameStats>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES30: void <init>()>:<public>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.DatePickerController: java.util.Calendar getMaxDate()>:<public abstract>:<android.widget.DatePickerController>
<android.view.MagnificationSpec.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.MagnificationSpec.1:android.os.Parcelable.Creator>
<android.security.IKeystoreService: int lock()>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.IRemoteControlClient: void updateMetadata(int,int,android.media.Rating)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.filterpacks.videosrc.MediaSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.ViewDebug.ExportedProperty: boolean deepExport()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.widget.Spinner.DropdownPopup.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.Spinner.DropdownPopup.1:android.widget.AdapterView.OnItemClickListener>
<android.widget.Scroller: int getCurrX()>:<public final>:<android.widget.Scroller>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void <init>(javax.microedition.khronos.opengles.GL,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.tv.TvInputManager.Session.InputEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.tv.TvInputManager.Session.InputEventHandler:android.os.Handler>
<android.animation.AnimatorSet.Dependency: void <init>(android.animation.AnimatorSet.Node,int)>:<public>:<android.animation.AnimatorSet.Dependency>
<android.media.AudioService: void readAudioSettings(boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.BulkCursorDescriptor: void readFromParcel(android.os.Parcel)>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.widget.Editor: void setErrorIcon(android.graphics.drawable.Drawable)>:<private>:<android.widget.Editor>
<android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.database.sqlite.SQLiteSession: void acquireConnection(java.lang.String,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter: android.view.textservice.SentenceSuggestionsInfo reconstructSuggestions(android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceTextInfoParams,android.view.textservice.SuggestionsInfo[])>:<public static>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter>
<android.view.inputmethod.InputMethodSubtypeArray: byte[] marshall(android.view.inputmethod.InputMethodSubtype[])>:<private static>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.widget.ListView: boolean areHeaderDividersEnabled()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Editor.ActionPopupWindow: int getPositionY()>:<public volatile>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<androidhwext.R.id: void <init>()>:<public>:<androidhwext.R.id>
<android.widget.VideoView: boolean isInPlaybackState()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.filterpacks.imageproc.CropFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.CropFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: boolean resolveLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.widget.Gallery: void onUp()>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.accessibility.IAccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int,int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.opengl.GLLogWrapper: int glGetError()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.voice.IVoiceInteractionSession.Stub: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSession>
<android.view.IWindow.Stub.Proxy: void dispatchSystemUiVisibilityChanged(int,int,int,int)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>:<private static>:<android.view.animation.AnimationUtils>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>:<public static>:<android.gesture.GestureUtils>
<android.media.session.ISession.Stub.Proxy: void setFlags(int)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.ActionMode: void setSubtitle(int)>:<public abstract>:<android.view.ActionMode>
<android.service.wallpaper.IWallpaperService.Stub.Proxy: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect)>:<public>:<android.service.wallpaper.IWallpaperService.Stub.Proxy:android.service.wallpaper.IWallpaperService>
<android.media.AudioManager: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])>:<public>:<android.media.AudioManager>
<android.widget.VideoView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.SurfaceHolder: void setSizeFromLayout()>:<public abstract>:<android.view.SurfaceHolder>
<android.print.PrintManager: java.util.List getPrintJobs()>:<public>:<android.print.PrintManager>
<android.widget.AdapterView: int getCount()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes.MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>:<public abstract>:<android.view.MenuItem>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.tv.TvInputInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.tv.TvInputInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: boolean glIsBuffer(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.View: void setScaleY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void setDesiredSize(int,int)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.ActionMode: void setTitleOptionalHint(boolean)>:<public>:<android.view.ActionMode>
<android.opengl.GLLogWrapper: char[] toCharIndices(int,int,java.nio.Buffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri,android.os.Bundle)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.appwidget.AppWidgetProviderInfo.1: android.appwidget.AppWidgetProviderInfo createFromParcel(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.WindowId.FocusObserver.H: void handleMessage(android.os.Message)>:<public>:<android.view.WindowId.FocusObserver.H:android.os.Handler>
<android.view.InputChannel: void nativeDup(android.view.InputChannel)>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.view.KeyEvent: boolean hasModifiers(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewRootImpl.WindowInputEventReceiver: void <init>(android.view.ViewRootImpl,android.view.InputChannel,android.os.Looper)>:<public>:<android.view.ViewRootImpl.WindowInputEventReceiver:android.view.InputEventReceiver>
<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModes()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.media.Rating: android.media.Rating newThumbRating(boolean)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.IWindowId: void registerFocusObserver(android.view.IWindowFocusObserver)>:<public abstract>:<android.view.IWindowId:android.os.IInterface>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.dreams.DreamService: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.HwSplineOverScrollerDummy: int adjustBallisticVelocity(int,float,int)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.widget.TextView: void paste(int,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.Rating: boolean isRated()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.accounts.IAccountManagerResponse.Stub: void <init>()>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.widget.DatePicker: void access.1400(char[],java.util.Locale)>:<static>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.RemoteController.MetadataEditor: void <init>(android.media.RemoteController,android.os.Bundle,long)>:<protected>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>:<>:<android.widget.ProgressBar:android.view.View>
<android.widget.FastScroller: void onStateDependencyChanged(boolean)>:<private>:<android.widget.FastScroller>
<android.media.AudioManager: void adjustVolume(int,int)>:<public>:<android.media.AudioManager>
<android.widget.RadialTimePickerView: void updateLayoutData()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.MediaScanner: void processFile(java.lang.String,java.lang.String,android.media.MediaScannerClient)>:<private native>:<android.media.MediaScanner>
<android.opengl.EGLLogWrapper: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>:<public>:<android.media.MediaMetadataEditor>
<android.security.KeyChain: java.security.cert.X509Certificate toCertificate(byte[])>:<public static>:<android.security.KeyChain>
<android.media.AudioService: boolean handleDeviceConnection(boolean,int,java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.GridLayout.3: void <init>()>:<>:<android.widget.GridLayout.3:android.widget.GridLayout.Alignment>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.videosrc.MediaSource: boolean setupMediaPlayer(boolean)>:<private>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.view.View: boolean isLaidOut()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Callback: void onSkipToPrevious()>:<public>:<android.media.session.MediaSession.Callback>
<android.media.tv.TvInputService.ServiceHandler: void <init>(android.media.tv.TvInputService,android.media.tv.TvInputService.1)>:<>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.widget.MediaController: void initFloatingWindowLayout()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViewsAdapter: int getViewTypeCount()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.TextView: boolean canSelectText()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.accounts.IAccountManager: android.accounts.Account[] getSharedAccountsAsUser(int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.inputmethod.ExtractedText: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.view.SurfaceControl: android.os.IBinder getBuiltInDisplay(int)>:<public static>:<android.view.SurfaceControl>
<android.media.MediaMuxer: int nativeAddTrack(long,java.lang.String[],java.lang.Object[])>:<private static native>:<android.media.MediaMuxer>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.service.notification.StatusBarNotification: int getScore()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.VideoView: void adjustIsBuffering(int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaDescription: android.os.Bundle getExtras()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>:<private static>:<android.view.animation.AnimationUtils>
<android.print.IPrintJobStateChangeListener.Stub: void <init>()>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.media.session.HwMediaSessionManager: void updateTargetInService(android.app.PendingIntent,android.content.Context)>:<public abstract>:<android.media.session.HwMediaSessionManager>
<android.security.KeyStore: void <init>(android.security.IKeystoreService)>:<private>:<android.security.KeyStore>
<android.view.View: void requestUnbufferedDispatch(android.view.MotionEvent)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: float getShadowRadius()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewAnimator: boolean getAnimateFirstView()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface,int,int,int,int,boolean)>:<public static>:<android.view.SurfaceControl>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener,android.os.Handler)>:<public>:<android.view.ScaleGestureDetector>
<android.appwidget.AppWidgetManager: void unbindRemoteViewsService(java.lang.String,int,android.content.Intent)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.SoundPool.SoundPoolImpl: void pause(int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioFormat: int access.200(android.media.AudioFormat)>:<static>:<android.media.AudioFormat>
<android.opengl.GLErrorWrapper: void glTexGenx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: boolean access.902(android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection,boolean)>:<static>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.media.AudioService.AudioHandler.2: void <init>(android.media.AudioService.AudioHandler)>:<>:<android.media.AudioService.AudioHandler.2:android.media.MediaPlayer.OnErrorListener>
<android.view.MotionEvent: int getAction()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.RemoteViews.ViewGroupAction: void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews.BitmapCache)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.view.SurfaceControl: android.graphics.Bitmap screenshot(int,int)>:<public static>:<android.view.SurfaceControl>
<android.view.ViewRootImpl: void onHardwarePostDraw(android.view.HardwareCanvas)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.tv.ITvInputManager: void registerCallback(android.media.tv.ITvInputManagerCallback,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.MediaCrypto: boolean isCryptoSchemeSupportedNative(byte[])>:<private static final native>:<android.media.MediaCrypto>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.MediaController: void disableUnsupportedButtons()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.WebVttParser: void yieldCue()>:<public>:<android.media.WebVttParser>
<android.media.MediaMetadata.1: android.media.MediaMetadata[] newArray(int)>:<public>:<android.media.MediaMetadata.1:android.os.Parcelable.Creator>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioService.SetModeDeathHandler: void setMode(int)>:<public>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.AudioService: boolean isBluetoothScoOn()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.Gallery: boolean moveNext()>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.RemoteControlClient.MetadataEditor: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient.1)>:<>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.widget.FastScroller: void setStyle(int)>:<public>:<android.widget.FastScroller>
<android.media.MediaPlayer: void deselectTrack(int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: java.util.Calendar access.400(android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.SurfaceView: void onAttachedToWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<android.media.tv.TvInputService.1: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.view.DragEvent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.DragEvent.1:android.os.Parcelable.Creator>
<android.view.PointerIcon: boolean equals(java.lang.Object)>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.Editor.PositionListener: void removeSubscriber(android.widget.Editor.TextViewPositionListener)>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor.InputContentType: void <init>()>:<>:<android.widget.Editor.InputContentType>
<android.media.SoundPool: void stop(int)>:<public final>:<android.media.SoundPool>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int compareTo(android.widget.ActivityChooserModel.ActivityResolveInfo)>:<public>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.view.inputmethod.BaseInputConnection: void <clinit>()>:<static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.service.dreams.IDreamService.Stub: void <init>()>:<public>:<android.service.dreams.IDreamService.Stub:android.os.Binder,android.service.dreams.IDreamService>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionService.1: void <init>(android.service.voice.VoiceInteractionService)>:<>:<android.service.voice.VoiceInteractionService.1:android.service.voice.IVoiceInteractionService.Stub,android.os.Binder>
<android.view.GLES20Canvas: void drawCircle(float,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.test.InstrumentationTestCase: void injectInsrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.media.AudioService.VolumeStreamState: void setAllIndexesToMax()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.widget.ActivityChooserView.2: void <init>(android.widget.ActivityChooserView)>:<>:<android.widget.ActivityChooserView.2:android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.media.tv.ITvInputManager.Stub.Proxy: void setMainSession(android.os.IBinder,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.database.sqlite.SQLiteConnectionPool: boolean isSessionBlockingImportantConnectionWaitersLocked(boolean,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.TextView: boolean isSuggestionsEnabled()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AccountManager.4: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String)>:<>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void cancel()>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.media.AudioService.VolumeStreamState: void readSettings()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.media.MediaScanner.MediaBulkDeleter: void <init>(android.content.IContentProvider,java.lang.String,android.net.Uri)>:<public>:<android.media.MediaScanner.MediaBulkDeleter>
<android.view.IAssetAtlas.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.media.AudioService: void disconnectBluetoothSco(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Button: void <init>(android.content.Context)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.widget.RemoteViews.MutablePair: void <init>(java.lang.Object,java.lang.Object)>:<>:<android.widget.RemoteViews.MutablePair>
<android.media.AudioGain: int maxValue()>:<public>:<android.media.AudioGain>
<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.PathKeyframes: android.animation.Keyframes.IntKeyframes createXIntKeyframes()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService.BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)>:<public abstract>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.media.MediaScanner: void scanMtpFile(java.lang.String,java.lang.String,int,int)>:<public>:<android.media.MediaScanner>
<android.view.ViewGroup: void access.000(android.view.ViewGroup)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.IActiveSessionsListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.IActiveSessionsListener.Stub:android.os.Binder,android.media.session.IActiveSessionsListener>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>:<public abstract>:<android.widget.Filter.FilterListener>
<android.opengl.GLLogWrapper: void glClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(int,boolean)>:<public>:<android.media.MediaRouter>
<android.service.persistentdata.IPersistentDataBlockService.Stub: android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder)>:<public static>:<android.service.persistentdata.IPersistentDataBlockService.Stub:android.os.Binder,android.service.persistentdata.IPersistentDataBlockService>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>:<public static native>:<android.opengl.GLES20>
<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.MediaCodec: void native_queueSecureInputBuffer(int,int,android.media.MediaCodec.CryptoInfo,long,int)>:<private final native>:<android.media.MediaCodec>
<android.view.GLES20Canvas: boolean nQuickReject(long,float,float,float,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.accounts.AccountManager.Future2Task: void done()>:<protected>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: java.lang.String getHintTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioRecord: int native_read_in_byte_array(byte[],int,int)>:<private final native>:<android.media.AudioRecord>
<android.widget.ScrollView: void recycleVelocityTracker()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.database.sqlite.SQLiteConnectionPool: void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.effect.Effect: void <init>()>:<public>:<android.media.effect.Effect>
<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ImageSlicer:android.filterfw.core.Filter>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.ActivityChooserView.1: void onChanged()>:<public>:<android.widget.ActivityChooserView.1:android.database.DataSetObserver>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.IWindowManager.Stub.Proxy: void setNewConfiguration(android.content.res.Configuration)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.database.sqlite.SQLiteQueryBuilder: void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)>:<private static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.IAudioService: int getMasterStreamType()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.animation.AnimationSet: long getDuration()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.MotionEvent.1: void <init>()>:<>:<android.view.MotionEvent.1:android.os.Parcelable.Creator>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap createLinks(boolean)>:<private>:<android.widget.GridLayout.Axis>
<android.view.IApplicationToken.Stub.Proxy: void windowsGone()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.service.notification.NotificationListenerService.RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService.Ranking)>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.media.AudioPort: int[] channelMasks()>:<public>:<android.media.AudioPort>
<android.view.inputmethod.CursorAnchorInfo.Builder: int access.300(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>:<public>:<android.view.ViewConfiguration>
<android.media.session.MediaSession: void setQueue(java.util.List)>:<public>:<android.media.session.MediaSession>
<android.view.RenderNodeAnimator: void setAllowRunningAsynchronously(boolean)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.WebVttRenderingWidget.SpanLayout: void <init>(android.content.Context,android.media.TextTrackCueSpan[])>:<public>:<android.media.WebVttRenderingWidget.SpanLayout:com.android.internal.widget.SubtitleView>
<android.widget.Gallery: void dispatchSetSelected(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.MediaCodec: void access.500(android.media.MediaCodec,java.nio.ByteBuffer[],int,android.media.MediaCodec.BufferInfo)>:<static>:<android.media.MediaCodec>
<android.view.ViewGroup.MarginLayoutParams: void setMarginEnd(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.animation.BidirectionalTypeConverter.InvertedConverter: void <init>(android.animation.BidirectionalTypeConverter)>:<public>:<android.animation.BidirectionalTypeConverter.InvertedConverter:android.animation.BidirectionalTypeConverter,android.animation.TypeConverter>
<android.preference.PreferenceActivity.1: void <init>(android.preference.PreferenceActivity)>:<>:<android.preference.PreferenceActivity.1:android.os.Handler>
<android.service.voice.VoiceInteractionSession: void showWindow()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.MediaMetadataRetriever: void native_finalize()>:<private final native>:<android.media.MediaMetadataRetriever>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.database.AbstractWindowedCursor: boolean isString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.service.fingerprint.FingerprintManager: void enroll(long)>:<public>:<android.service.fingerprint.FingerprintManager>
<android.widget.ViewFlipper: void access.100(android.widget.ViewFlipper)>:<static>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void resetResolvedTextAlignment()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.AbstractCursor: float getFloat(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.AudioManager: void playSoundEffect(int,int)>:<public>:<android.media.AudioManager>
<android.service.notification.StatusBarNotification.1: android.service.notification.StatusBarNotification createFromParcel(android.os.Parcel)>:<public>:<android.service.notification.StatusBarNotification.1:android.os.Parcelable.Creator>
<android.view.HardwareRenderer: void detachSurfaceTexture(long)>:<abstract>:<android.view.HardwareRenderer>
<android.view.HardwareRenderer: void pauseSurface(android.view.Surface)>:<abstract>:<android.view.HardwareRenderer>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)>:<public final>:<android.appwidget.AppWidgetHost>
<android.widget.Toast.TN: void hideImmediate()>:<public>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.view.View: int getLeft()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Scroller: float getCurrVelocity()>:<public>:<android.widget.Scroller>
<android.media.AudioService: void makeA2dpSrcAvailable(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.filterpacks.imageproc.CrossProcessFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.CrossProcessFilter:android.filterfw.core.Filter>
<android.view.IWindowManager.Stub.Proxy: void lockNow(android.os.Bundle)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.Editor.ActionPopupWindow: void setPasteTextView(android.widget.TextView)>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.textservice.SpellCheckerSession: void finalize()>:<protected>:<android.view.textservice.SpellCheckerSession>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>:<public>:<android.media.projection.MediaProjectionManager>
<android.view.RenderNode: boolean setAnimationMatrix(android.graphics.Matrix)>:<public>:<android.view.RenderNode>
<android.widget.DatePickerCalendarDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.ViewGroup: void clearTouchTargets()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Editor: int getErrorY()>:<private>:<android.widget.Editor>
<android.view.IWindowSession: boolean outOfMemory(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.security.IKeyChainService.Stub.Proxy: boolean installKeyPair(byte[],byte[],java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.opengl.EGL14: int eglQueryAPI()>:<public static native>:<android.opengl.EGL14>
<android.print.PrinterCapabilitiesInfo.1: void <init>()>:<>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.media.session.MediaSession.Token: void <clinit>()>:<static>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: java.lang.String nativeGetColumnName(long,long,int)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.widget.TabHost.1: void <init>(android.widget.TabHost)>:<>:<android.widget.TabHost.1:android.view.View.OnKeyListener>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub: android.os.IBinder asBinder()>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub:android.os.Binder,android.service.fingerprint.IFingerprintServiceReceiver>
<android.widget.ListView: int findMotionRow(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.PopupWindow.PopupViewContainer: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Nsd: boolean isCase(android.view.View)>:<public static>:<android.view.Nsd>
<android.widget.TimePicker.AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>:<public>:<android.widget.TimePicker.AbstractTimePickerDelegate:android.widget.TimePicker.TimePickerDelegate>
<android.widget.TextView: void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.ProgressBar: void onAnimatePosition(float,boolean)>:<>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.SearchView: void updateQueryHint()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.IPrinterDiscoveryObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.view.GraphicBuffer: long access.000(android.os.Parcel)>:<static>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.Gallery: void setAnimationDuration(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.audiofx.BassBoost: java.lang.Object access.000(android.media.audiofx.BassBoost)>:<static>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.widget.TabWidget: void setTabSelectionListener(android.widget.TabWidget.OnTabSelectionChanged)>:<>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.accounts.AccountManager.3: void doWork()>:<public>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.preference.Preference: void setDependency(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.ListView: int positionOfNewFocus(android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glEnable(int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.JankSqlite: void <init>()>:<public>:<android.database.sqlite.JankSqlite>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IRemoteVolumeController: void remoteVolumeChanged(android.media.session.ISessionController,int)>:<public abstract>:<android.media.IRemoteVolumeController:android.os.IInterface>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void <init>(android.print.PrinterDiscoverySession)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.tv.ITvInputManager: void addBlockedRating(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.WindowInsets: java.lang.String toString()>:<public>:<android.view.WindowInsets>
<android.view.View.OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>:<public abstract>:<android.view.View.OnDragListener>
<android.widget.Spinner.DropdownPopup: void computeContentWidth()>:<>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.media.AudioService: int access.502(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.Image: int getHeight()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.animation.LayoutTransition: void runAppearingTransition(android.view.ViewGroup,android.view.View)>:<private>:<android.animation.LayoutTransition>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxHeight(int)>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.media.Ringtone: boolean getPrepareStat()>:<public>:<android.media.Ringtone>
<android.media.AudioRecord: int native_get_marker_pos()>:<private final native>:<android.media.AudioRecord>
<android.widget.ScrollView: void addView(android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.Instance: void <init>(long,float[],java.lang.String)>:<private>:<android.gesture.Instance>
<android.widget.TextView: int getCompoundPaddingEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.SoundPool.SoundPoolImpl: void setVolume(int,float)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.tv.TvInputManager.SessionCallbackRecord.2: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.2:java.lang.Runnable>
<android.view.KeyCharacterMap: void nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.print.PrinterInfo: int hashCode()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.session.PlaybackState: void <init>(android.os.Parcel,android.media.session.PlaybackState.1)>:<>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.Switch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLLogWrapper: java.lang.String getMatrixMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glDrawTexivOES(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.SoundPool: int play(int,float,float,int,int,float)>:<public final>:<android.media.SoundPool>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ViewAnimator: void removeViews(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindowManager: boolean stopViewServer()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.View: void invalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.VolumePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>:<public static>:<android.view.ViewConfiguration>
<android.service.wallpaper.WallpaperService.Engine.3: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.media.PlayerRecord: boolean isPlaybackActive()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.tv.TvView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void <init>()>:<public>:<android.opengl.GLES10>
<android.widget.VideoView: int getAudioSessionId()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.tv.TvInputService.ServiceHandler: void broadcastAddHardwareTvInput(int,android.media.tv.TvInputInfo)>:<private>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>:<>:<android.media.audiopolicy.AudioMix>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>:<protected volatile>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.service.dreams.DreamService: void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.MediaFormat: void <init>(java.util.Map)>:<>:<android.media.MediaFormat>
<android.media.IAudioService: boolean isBluetoothScoOn()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.ListPopupWindow.PopupDataSetObserver: void <init>(android.widget.ListPopupWindow)>:<private>:<android.widget.ListPopupWindow.PopupDataSetObserver:android.database.DataSetObserver>
<android.media.MediaRouterClientState.1: android.media.MediaRouterClientState createFromParcel(android.os.Parcel)>:<public>:<android.media.MediaRouterClientState.1:android.os.Parcelable.Creator>
<android.preference.PreferenceGroupAdapter: void <clinit>()>:<static>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.Editor: int getErrorX()>:<private>:<android.widget.Editor>
<android.view.MotionEvent: android.view.MotionEvent clampNoHistory(float,float,float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.ViewFlipper: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindow.Stub.Proxy: void dispatchGetNewSurface()>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.media.effect.effects.SepiaEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.SepiaEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.accounts.ChooseAccountTypeActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseAccountTypeActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.RemoteControlClient: boolean playbackPositionShouldMove(int)>:<static>:<android.media.RemoteControlClient>
<android.media.MediaPlayer: void prepare()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.IRemoteControlDisplay.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.widget.ProgressBar: int getSecondaryProgress()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.GhostView: void getParents(android.view.View,java.util.ArrayList)>:<private static>:<android.view.GhostView:android.view.View>
<android.view.IWindowManager: void setEventDispatching(boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.RenderNode: android.view.RenderNode create(java.lang.String,android.view.View)>:<public static>:<android.view.RenderNode>
<android.view.WindowManagerPolicy.WindowState: boolean getNeedsMenuLw(android.view.WindowManagerPolicy.WindowState)>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.animation.ValueAnimator: void startAnimation(android.animation.ValueAnimator.AnimationHandler)>:<private>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.tv.TvInputService.Session: void onUnblockContent(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.inputmethod.SparseRectFArray: int describeContents()>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.view.ViewGroup: boolean hasFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.appwidget.AppWidgetHost.Callbacks: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.InputQueue: void nativeDispose(long)>:<private static native>:<android.view.InputQueue>
<android.widget.AdapterView: void access.300(android.widget.AdapterView)>:<static>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.session.PlaybackState: long access.700(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.IWindowSession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindowSession.Stub:android.os.Binder,android.view.IWindowSession>
<android.widget.ProgressBar: void onProgressRefresh(float,boolean)>:<>:<android.widget.ProgressBar:android.view.View>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAsciiCapable(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.CursorAdapter.MyDataSetObserver: void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter.1)>:<>:<android.widget.CursorAdapter.MyDataSetObserver:android.database.DataSetObserver>
<android.animation.PathKeyframes.2: float getFloatValue(float)>:<public>:<android.animation.PathKeyframes.2:android.animation.PathKeyframes.FloatKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.media.MediaScannerConnection: void disconnect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.view.View: int getSuggestedMinimumWidth()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.videosrc.SurfaceTextureSource: void prepare(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.widget.ZoomButtonsController: boolean isVisible()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView.CharWrapper: java.lang.CharSequence subSequence(int,int)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.view.ViewRootImpl: int relayoutWindow(android.view.WindowManager.LayoutParams,int,boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaScanner: void <clinit>()>:<static>:<android.media.MediaScanner>
<android.widget.DateTimeView: void registerReceivers()>:<private>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.view.View.OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>:<public abstract>:<android.view.View.OnSystemUiVisibilityChangeListener>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.MediaPlayer.TimeProvider: void access.2000(android.media.MediaPlayer.TimeProvider)>:<static>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.filterpacks.imageproc.ToPackedGrayFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl: boolean isTextAlignmentResolved()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.audiofx.AudioEffect: int setParameter(int[],int[])>:<public>:<android.media.audiofx.AudioEffect>
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(android.util.Property,android.animation.Keyframes)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>:<public static>:<android.view.ViewDebug>
<android.view.WindowManagerPolicy: void notifyActivityDrawnForKeyguardLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.view.ViewConfiguration: int getPressedStateDuration()>:<public static>:<android.view.ViewConfiguration>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.Window: void removeFeature(int)>:<protected>:<android.view.Window>
<android.widget.TimePickerClockDelegate.1: void onValueChange(android.widget.NumberPicker,int,int)>:<public>:<android.widget.TimePickerClockDelegate.1:android.widget.NumberPicker.OnValueChangeListener>
<android.service.textservice.SpellCheckerService.Session: void <init>()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.printservice.PrintService.1: void destroyPrinterDiscoverySession()>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1.1:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.view.ThreadedRenderer: boolean checkIfProfilingRequested()>:<private static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.CheckedTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.Feature[] getValidFeatures()>:<private>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View: void setMeasuredDimension(int,int)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: char getMatch(char[])>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteConnectionPool: void logConnectionPoolBusyLocked(long,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.preference.MultiCheckPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLLogWrapper: void glDrawTexivOES(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AsyncPlayer: void setUsesWakeLock(android.content.Context)>:<public>:<android.media.AsyncPlayer>
<android.view.View: void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.preference.PreferenceManager: void unregisterOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)>:<public>:<android.preference.PreferenceManager>
<android.opengl.GLLogWrapper: void glHint(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.ViewRootImpl: boolean access.2402(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.4: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.4:android.util.FloatProperty>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.test.AndroidTestCase: void assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.database.MergeCursor: long getLong(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.AudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.tv.TvInputService.Session: void notifyContentBlocked(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup: void drawableStateChanged()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void cancelPendingInputEvents()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.2: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.widget.Editor: boolean isCursorInsideEasyCorrectionSpan()>:<private>:<android.widget.Editor>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.widget.ArrayAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected>:<android.widget.ArrayAdapter.ArrayFilter:android.widget.Filter>
<android.view.ViewRootImpl: void addConfigCallback(android.content.ComponentCallbacks)>:<public static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)>:<public>:<android.media.AudioTrack>
<android.view.animation.CycleInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>:<public abstract>:<android.view.Window>
<android.media.MediaScanner.MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.ddm.DdmHandleNativeHeap: void register()>:<public static>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void <init>(java.util.Locale)>:<private>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.media.AudioManager: int getMasterMaxVolume()>:<public>:<android.media.AudioManager>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void onAcquired(int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void processOrEnqueueTask(android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.SpellCheckerParams)>:<private>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.view.Surface: void <clinit>()>:<static>:<android.view.Surface:android.os.Parcelable>
<android.widget.FastScroller.6: java.lang.Integer get(android.view.View)>:<public>:<android.widget.FastScroller.6:android.util.IntProperty>
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.view.View: void removeSendViewScrolledAccessibilityEventCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.tv.TvInputManager.2: void <init>(android.media.tv.TvInputManager)>:<>:<android.media.tv.TvInputManager.2:android.media.tv.ITvInputManagerCallback.Stub,android.os.Binder>
<android.media.SubtitleController: void access.200(android.media.SubtitleController,android.media.SubtitleTrack)>:<static>:<android.media.SubtitleController>
<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.MediaFocusControl: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName,android.os.IBinder)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(java.lang.String,int)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.animation.Keyframe.FloatKeyframe: void setValue(java.lang.Object)>:<public>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.service.trust.ITrustAgentService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.trust.ITrustAgentService.Stub:android.os.Binder,android.service.trust.ITrustAgentService>
<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.session.ISession.Stub.Proxy: void setActive(boolean)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.View: boolean toGlobalMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.CheckForTap: void <init>(android.view.View)>:<private>:<android.view.View.CheckForTap:java.lang.Runnable>
<android.media.SubtitleTrack: void finalize()>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.filterpacks.imageproc.FillLightFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.PlaybackState: long access.400(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.HwAbsListView: void initMask(boolean)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.media.AudioService: void adjustMasterVolume(int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.RenderNode: boolean setTranslationZ(float)>:<public>:<android.view.RenderNode>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.tv.ITvInputManager: java.util.List getBlockedRatings(int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.R.plurals: void <init>()>:<public>:<android.R.plurals>
<android.view.View.5: void setValue(android.view.View,float)>:<public>:<android.view.View.5:android.util.FloatProperty>
<android.media.Tokenizer: android.media.Tokenizer.OnTokenListener access.400(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.service.notification.NotificationListenerService.RankingMap: int getVisibilityOverride(java.lang.String)>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)>:<public>:<android.media.effect.SingleFilterEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.MotionEvent: long getEventTimeNano()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ListView: void fillGap(boolean)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceInflater: void init(android.preference.PreferenceManager)>:<private>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.widget.ViewAnimator: void showNext()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureStore>
<android.view.InputChannel.1: android.view.InputChannel createFromParcel(android.os.Parcel)>:<public>:<android.view.InputChannel.1:android.os.Parcelable.Creator>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.accounts.GrantCredentialsPermissionActivity: android.view.View newPackageView(java.lang.String)>:<private>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.view.HapticFeedbackConstants: void <init>()>:<private>:<android.view.HapticFeedbackConstants>
<android.media.audiofx.Visualizer: boolean getEnabled()>:<public>:<android.media.audiofx.Visualizer>
<android.media.tv.TvInputHardwareInfo: java.lang.String access.402(android.media.tv.TvInputHardwareInfo,java.lang.String)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.service.notification.NotificationListenerService: void <init>()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.DragEvent: android.view.DragEvent obtain(android.view.DragEvent)>:<public static>:<android.view.DragEvent:android.os.Parcelable>
<android.view.KeyEvent: void <init>(int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TextView: boolean shouldAdvanceFocusOnTab()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteConnection: void nativeBindNull(long,long,int)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>:<public>:<android.view.DisplayAdjustments>
<android.media.IRemoteControlClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteControlClient.Stub:android.os.Binder,android.media.IRemoteControlClient>
<android.media.WebVttTrack: android.media.WebVttRenderingWidget getRenderingWidget()>:<public>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.accounts.IAccountManager: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.audiofx.LoudnessEnhancer: android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener access.100(android.media.audiofx.LoudnessEnhancer)>:<static>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.view.ViewRootImpl: void onHardwarePreDraw(android.view.HardwareCanvas)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES20: void glFlush()>:<public static native>:<android.opengl.GLES20>
<android.media.WebVttTrack: void onCueParsed(android.media.TextTrackCue)>:<public>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.IAudioService.Stub.Proxy: int getVibrateSetting(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewGroup.HoverTarget: void <init>()>:<private>:<android.view.ViewGroup.HoverTarget>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onVideoUnavailable(int)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.view.SurfaceHolder: android.view.Surface getSurface()>:<public abstract>:<android.view.SurfaceHolder>
<android.widget.PopupWindow.PopupViewContainer: void sendAccessibilityEvent(int)>:<public>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.CheckForLongPress: void run()>:<public>:<android.widget.AbsListView.CheckForLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.preference.Preference: java.lang.String getKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.RenderNode: boolean nIsPivotExplicitlySet(long)>:<private static native>:<android.view.RenderNode>
<android.service.notification.NotificationListenerService.Ranking: boolean matchesInterruptionFilter()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.media.effect.FilterEffect: void beginGLEffect()>:<protected>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.media.MediaFocusControl: void postReevaluateRemoteControlDisplays()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewGroup: int getPersistentDrawingCache()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.service.trust.ITrustAgentService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.service.dreams.DreamService: void setLowProfile(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.notification.StatusBarNotification: int getInitialPid()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void drawWeekNumbersAndDates(android.graphics.Canvas)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.animation.Animator: boolean isRunning()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLErrorWrapper: void glRenderbufferStorageOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.InputDevice: int getSources()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.Surface: void finalize()>:<protected>:<android.view.Surface:android.os.Parcelable>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.AudioDevicePortConfig: void <init>(android.media.AudioDevicePortConfig)>:<>:<android.media.AudioDevicePortConfig:android.media.AudioPortConfig>
<android.filterpacks.imageproc.NegativeFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.NegativeFilter:android.filterfw.core.Filter>
<android.widget.ProgressBar: void setProgress(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.IWindowSession.Stub.Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.view.View: boolean hasOnClickListeners()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.netdetect.HwCustNetDetectServiceImpl: void access.1000(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String,long)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(java.lang.CharSequence,boolean)>:<public>:<android.media.MediaRouter>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputManager: void selectTrack(android.os.IBinder,int,java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glDrawArrays(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvInputInfo.TvInputSettings: java.lang.String access.100(android.content.Context,java.lang.String,int)>:<static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void removePerformClickCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputManager: void setMainSession(android.os.IBinder,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.MediaDrm.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaDrm.EventHandler:android.os.Handler>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>:<public>:<android.media.MediaRecorder>
<android.media.session.ISessionManager.Stub.Proxy: java.util.List getSessions(android.content.ComponentName,int)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.opengl.Visibility: void <init>()>:<public>:<android.opengl.Visibility>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.printservice.IPrintServiceClient.Stub.Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.printservice.IPrintServiceClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.printservice.IPrintServiceClient.Stub:android.os.Binder,android.printservice.IPrintServiceClient>
<android.media.tv.TvInputManager.TvInputCallback: void onInputAdded(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.media.MediaHTTPConnection: boolean isLocalHost(java.net.URL)>:<private static final>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<huawei.android.app.HwCustEmergDataManager: void <clinit>()>:<static>:<huawei.android.app.HwCustEmergDataManager>
<android.media.tv.ITvInputSession.Stub.Proxy: void tune(android.net.Uri,android.os.Bundle)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.media.IAudioService: void adjustStreamVolume(int,int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.IAudioService.Stub.Proxy: int getMasterMaxVolume()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.CursorFilter: void <init>(android.widget.CursorFilter.CursorFilterClient)>:<>:<android.widget.CursorFilter:android.widget.Filter>
<android.filterpacks.imageproc.LomoishFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.widget.Scroller: void <init>(android.content.Context)>:<public>:<android.widget.Scroller>
<android.media.MediaRouter: void dispatchRouteGrouped(android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<static>:<android.media.MediaRouter>
<android.print.PageRange: boolean contains(int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.view.View: int getVerticalScrollbarWidth()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView.Marquee: void <init>(android.widget.TextView)>:<>:<android.widget.TextView.Marquee>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.1: void onTrackSelected(int,java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.widget.ActionMenuPresenter: void <init>(android.content.Context)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.audiopolicy.AudioPolicy: java.lang.String toString()>:<public>:<android.media.audiopolicy.AudioPolicy>
<android.media.CCParser.StyleCode: boolean isItalics()>:<>:<android.media.CCParser.StyleCode>
<android.media.tv.TvInputManager: void registerCallback(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager>
<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.videosrc.SurfaceTextureTarget: void updateTargetRect()>:<private>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.view.textservice.SuggestionsInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.textservice.SuggestionsInfo.1:android.os.Parcelable.Creator>
<android.view.DisplayInfo: void <init>(android.view.DisplayInfo)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.test.AndroidTestCase: android.content.Context getContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.media.IMediaHTTPService: android.media.IMediaHTTPConnection makeHTTPConnection()>:<public abstract>:<android.media.IMediaHTTPService:android.os.IInterface>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>:<public abstract>:<android.view.inputmethod.InputMethodSession.EventCallback>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>()>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.tv.ITvInputClient: void onVideoAvailable(int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.widget.AbsListView.PositionScroller.3: void run()>:<public>:<android.widget.AbsListView.PositionScroller.3:java.lang.Runnable>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleTHEN(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.inputmethod.InputMethodManager: int access.202(android.view.inputmethod.InputMethodManager,int)>:<static>:<android.view.inputmethod.InputMethodManager>
<android.media.tv.TvInputManager.Session: void relayoutOverlayView(android.graphics.Rect)>:<>:<android.media.tv.TvInputManager.Session>
<android.preference.Preference: void setIntent(android.content.Intent)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.RemoteController: void access.1100(android.media.RemoteController,int,android.app.PendingIntent)>:<static>:<android.media.RemoteController>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost.Settings)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.media.ImageReader: int getWidth()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.FocusRequester: java.lang.String focusChangeToString(int)>:<private static>:<android.media.FocusRequester>
<android.animation.AnimatorInflater.PathDataEvaluator: void <init>()>:<private>:<android.animation.AnimatorInflater.PathDataEvaluator:android.animation.TypeEvaluator>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnectionPool: void dispose(boolean)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.inputmethod.InputMethodManager.PendingEvent: void <init>(android.view.inputmethod.InputMethodManager)>:<private>:<android.view.inputmethod.InputMethodManager.PendingEvent:java.lang.Runnable>
<android.widget.ArrayAdapter.ArrayFilter: void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter.1)>:<>:<android.widget.ArrayAdapter.ArrayFilter:android.widget.Filter>
<android.media.AudioManager: void unregisterAudioPortUpdateListener(android.media.AudioManager.OnAudioPortUpdateListener)>:<public>:<android.media.AudioManager>
<android.view.View: void setPaddingRelative(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.effect.effects.IdentityEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.IdentityEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.100(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: void wipe()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.view.inputmethod.InputMethodManager.PendingEvent: void <init>(android.view.inputmethod.InputMethodManager,android.view.inputmethod.InputMethodManager.1)>:<>:<android.view.inputmethod.InputMethodManager.PendingEvent:java.lang.Runnable>
<android.print.PrintDocumentAdapter: void <init>()>:<public>:<android.print.PrintDocumentAdapter>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession access.202(android.printservice.PrintService,android.printservice.PrinterDiscoverySession)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioManager: boolean isMasterMute()>:<public>:<android.media.AudioManager>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: android.widget.AccessibilityIterators.PageTextSegmentIterator getInstance()>:<public static>:<android.widget.AccessibilityIterators.PageTextSegmentIterator:android.widget.AccessibilityIterators.LineTextSegmentIterator>
<android.view.GLES20RecordingCanvas: void <clinit>()>:<static>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata access.400(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.widget.ListView: void setupChild(android.view.View,int,int,boolean,int,boolean,boolean)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.IKeyChainService: void installCaCertificate(byte[])>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.widget.GridLayout.Axis: void access.100(android.widget.GridLayout.Axis,int)>:<static>:<android.widget.GridLayout.Axis>
<android.view.ViewDebug: void profile(android.view.View,java.io.OutputStream,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.preference.MultiSelectListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.EncoderCapabilities: android.media.EncoderCapabilities.VideoEncoderCap native_get_video_encoder_cap(int)>:<private static final native>:<android.media.EncoderCapabilities>
<android.service.media.MediaBrowserService: boolean isValidPackage(java.lang.String,int)>:<private>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.EGLLogWrapper: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.IWindow.Stub.Proxy: void dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.WindowManager.BadTokenException: void <init>()>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.gesture.GestureLibrary: boolean load()>:<public abstract>:<android.gesture.GestureLibrary>
<android.view.animation.BounceInterpolator: void <init>()>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.RemoteDisplayState.RemoteDisplayInfo: boolean isValid()>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.media.AudioFormat: int access.302(android.media.AudioFormat,int)>:<static>:<android.media.AudioFormat>
<android.view.View.TintInfo: void <init>()>:<private>:<android.view.View.TintInfo>
<android.database.sqlite.SQLiteAccessPermException: void <init>()>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.filterpacks.base.GLTextureSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.GLTextureSource:android.filterfw.core.Filter>
<android.media.tv.TvInputManager.3: void onReleased()>:<public>:<android.media.tv.TvInputManager.3:android.media.tv.ITvInputHardwareCallback.Stub,android.os.Binder>
<android.service.dreams.DreamService: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.Editor: android.graphics.Rect getTempRect()>:<protected>:<android.widget.Editor>
<android.opengl.GLErrorWrapper: void glPolygonOffsetx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>:<public>:<android.view.TextureView:android.view.View>
<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AbsListView.InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.print.IPrintSpoolerClient.Stub: void <init>()>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.Window: void setContentView(int)>:<public abstract>:<android.view.Window>
<android.opengl.GLLogWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] unmarshall(byte[])>:<private static>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.hsm.HwMediaPermWrapper: void setOutputFile(android.media.MediaRecorder,java.io.FileDescriptor,long,long)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void ensureBufferSize()>:<private>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.view.SurfaceSession: void kill()>:<public>:<android.view.SurfaceSession>
<android.view.RenderNode: boolean setRotation(float)>:<public>:<android.view.RenderNode>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>:<public abstract>:<android.widget.PopupWindow.OnDismissListener>
<android.widget.ListView: void smoothScrollToPosition(int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void setIsRootNamespace(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountManager.Stub.Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.AudioService: void access.1300(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.AccountManagerResponse: int describeContents()>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.database.AbstractCursor: int getColumnCount()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.ViewConfiguration: int getDoubleTapMinTime()>:<public static>:<android.view.ViewConfiguration>
<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.AudioManager>
<android.media.tv.ITvInputClient: void onTrackSelected(int,java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: java.util.ArrayList access.400(android.view.ViewGroup)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.JetPlayer.NativeEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.JetPlayer.NativeEventHandler:android.os.Handler>
<android.widget.ViewFlipper.2: void <init>(android.widget.ViewFlipper)>:<>:<android.widget.ViewFlipper.2:android.os.Handler>
<android.widget.SearchView: android.widget.EditText getTextView()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLES10: void glFogx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaPlayer: void access.600(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setSelectedDateVerticalBar(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.tv.TvView.2: void onFinishedInputEvent(java.lang.Object,boolean)>:<public>:<android.media.tv.TvView.2:android.media.tv.TvInputManager.Session.FinishedInputEventCallback>
<android.database.BulkCursorDescriptor: void <init>()>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.view.GLES20Canvas: int nGetMaximumTextureHeight()>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.AppSecurityPermissions.PermissionItemView: java.lang.String access.000(android.widget.AppSecurityPermissions.PermissionItemView)>:<static>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void setDisplayPadding(android.graphics.Rect)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.View.DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>:<public>:<android.view.View.DragShadowBuilder>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: void destroy()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.view.AccessibilityInteractionController: void focusSearchClientThread(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.AccessibilityInteractionController>
<android.widget.Editor.TextModifyOperation.1: android.widget.Editor.TextModifyOperation createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void onError(int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.session.MediaSession.Callback: void onRewind()>:<public>:<android.media.session.MediaSession.Callback>
<android.database.sqlite.SQLiteDebug: boolean shouldLogSlowQuery(long)>:<public static final>:<android.database.sqlite.SQLiteDebug>
<android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet,float)>:<private static>:<android.animation.AnimatorInflater>
<android.widget.Switch: void setSwitchPadding(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLErrorWrapper: void glTexEnvi(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.Equalizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.widget.TextView: void createEditorIfNeeded()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.IPrintDocumentAdapterObserver: void onDestroy()>:<public abstract>:<android.print.IPrintDocumentAdapterObserver:android.os.IInterface>
<android.media.MediaFocusControl: java.util.Stack access.2100(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.print.PrintDocumentInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.netdetect.HwCustNetDetectServiceImpl: void cancelWebDetectTimer()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.widget.DatePicker: boolean isRightToLeft(java.util.Locale)>:<private static>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: android.appwidget.AppWidgetHostView.ParcelableSparseArray[] newArray(int)>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.widget.TimePickerSpinnerDelegate: void setInKbMode(boolean)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLES20: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES20>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void <init>(android.netdetect.HwCustNetDetectServiceImpl)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.widget.RemoteViews.BitmapReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.animation.RectEvaluator: void <init>(android.graphics.Rect)>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.view.inputmethod.CorrectionInfo.1: void <init>()>:<>:<android.view.inputmethod.CorrectionInfo.1:android.os.Parcelable.Creator>
<android.view.ViewRootImpl: void postSendWindowContentChangedCallback(android.view.View,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.SessionCallback: void onSessionCreated(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.view.Window: int getFeatures()>:<protected final>:<android.view.Window>
<android.view.accessibility.AccessibilityRecord: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityRecord>
<android.view.RenderNode: boolean nSetRotationX(long,float)>:<private static native>:<android.view.RenderNode>
<android.view.IWindowManager: int watchRotation(android.view.IRotationWatcher)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.IMediaScannerService: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>:<public abstract>:<android.media.IMediaScannerService:android.os.IInterface>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.appwidget.AppWidgetProviderInfo: void <init>()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.WindowManagerPolicy: void layoutWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.RemoteControlClient: android.media.session.MediaSession access.300(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.accounts.AccountManager.1: void doWork()>:<public>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.media.audiofx.AcousticEchoCanceler: android.media.audiofx.AcousticEchoCanceler create(int)>:<public static>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.print.PrintJobInfo: java.lang.String getStateReason()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.ProgressBar: void onResolveDrawables(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.AsyncPlayer: java.lang.String access.000(android.media.AsyncPlayer)>:<static>:<android.media.AsyncPlayer>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.widget.Editor: long getLastTouchOffsetsOuter()>:<public>:<android.widget.Editor>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.view.Surface.OutOfResourcesException: void <init>()>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewRootImpl: void outputDisplayList(android.view.View)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLLogWrapper: int getIntegerStateSize(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCrypto: void finalize()>:<protected>:<android.media.MediaCrypto>
<android.view.inputmethod.InputMethodManager: void clearBindingLocked()>:<>:<android.view.inputmethod.InputMethodManager>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.opengl.EGLLogWrapper: void flush()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent.PointerCoords[],int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.FastScroller.4: void <init>(java.lang.String)>:<>:<android.widget.FastScroller.4:android.util.IntProperty>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.MotionEvent: int nativeGetMetaState(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaMuxer: void stop()>:<public>:<android.media.MediaMuxer>
<android.accounts.AuthenticatorDescription.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Nsd: boolean setCmdDrawFlag(android.view.HardwareCanvas)>:<public static>:<android.view.Nsd>
<android.filterpacks.imageproc.DuotoneFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getAllowableAccountSet(android.content.Intent)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.view.accessibility.CaptioningManager: void access.100(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.ISessionCallback.Stub.Proxy: void onPrevious()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.view.View.7: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.7:android.util.FloatProperty>
<android.view.HardwareLayer: void destroy()>:<public>:<android.view.HardwareLayer>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>:<public static>:<android.view.ViewConfiguration>
<android.view.ViewGroup: void removeFromArray(int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.IWindow.Stub.Proxy: void dispatchAppVisibility(boolean)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.RenderNode: float getTranslationX()>:<public>:<android.view.RenderNode>
<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.View: void invalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Switch: java.lang.CharSequence getTextOff()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.database.IBulkCursor: int requery(android.database.IContentObserver)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.media.AudioManager: boolean isOnCombineMode()>:<private>:<android.media.AudioManager>
<android.view.SurfaceControl: void release()>:<public>:<android.view.SurfaceControl>
<android.view.accessibility.AccessibilityCache: java.util.List getWindows()>:<public>:<android.view.accessibility.AccessibilityCache>
<android.media.session.MediaSession: void release()>:<public>:<android.media.session.MediaSession>
<android.widget.FastScroller: void transitionToDragging()>:<private>:<android.widget.FastScroller>
<android.printservice.PrinterDiscoverySession: void onDestroy()>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.MotionEvent: android.view.MotionEvent copy()>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioManager: void unregisterAudioFocusListener(android.media.AudioManager.OnAudioFocusChangeListener)>:<public>:<android.media.AudioManager>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onQueueChanged(android.content.pm.ParceledListSlice)>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.widget.GridView: int getStretchMode()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.restrictions.RestrictionsReceiver: void onRequestPermission(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>:<public abstract>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.media.MediaFocusControl: void clearRemoteControlDisplay_syncPrs()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.WindowManagerPolicy: void notifyCameraLensCoverSwitchChanged(long,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.AutoCompleteTextView: void performCompletion(android.view.View,int,long)>:<private>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.VideoView.7: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.widget.VideoView.7:android.view.SurfaceHolder.Callback>
<android.opengl.GLES11: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.RenderNode: boolean setProjectBackwards(boolean)>:<public>:<android.view.RenderNode>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>:<public>:<android.media.ExifInterface>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.fingerprint.FingerprintManager.2: void onAcquired(int)>:<public>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.widget.GridLayout: void setUseDefaultMargins(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.KeyEvent.1:android.os.Parcelable.Creator>
<android.media.audiofx.AudioEffect: int setParameter(int,byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.media.tv.TvInputService.HardwareSession: java.lang.String getHardwareInputId()>:<public abstract>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.effect.effects.FillLightEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.FillLightEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.database.CursorJoiner.Result: void <clinit>()>:<static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.SubtitleController: void doShow()>:<private>:<android.media.SubtitleController>
<android.opengl.GLErrorWrapper: void glFogxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor: boolean access.400(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.media.AsyncPlayer: android.media.MediaPlayer access.300(android.media.AsyncPlayer)>:<static>:<android.media.AsyncPlayer>
<android.database.sqlite.SQLiteConnection.OperationLog: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnTouchListener>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusType(int)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.Toast: int getXOffset()>:<public>:<android.widget.Toast>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setWeekSeparatorLineColor(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.animation.PropertyValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.ListView.ArrowScrollFocusResult: void <init>()>:<private>:<android.widget.ListView.ArrowScrollFocusResult>
<android.media.tv.TvInputManager.TvInputCallbackRecord.2: void <init>(android.media.tv.TvInputManager.TvInputCallbackRecord,java.lang.String)>:<>:<android.media.tv.TvInputManager.TvInputCallbackRecord.2:java.lang.Runnable>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int,java.lang.String,android.net.Uri,boolean)>:<private static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.opengl.EGLObjectHandle: int getHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.WebVttRenderingWidget.RegionLayout: android.media.TextTrackRegion getRegion()>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater.Factory2)>:<public>:<android.view.LayoutInflater>
<android.view.View: void invalidateParentCaches()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SubtitleTrack.RenderingWidget: void onDetachedFromWindow()>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Object getValue(float)>:<public>:<android.animation.PathKeyframes.IntKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.IntKeyframes>
<android.service.media.MediaBrowserService: void setSessionToken(android.media.session.MediaSession.Token)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaController.TransportControls: void sendCustomAction(android.media.session.PlaybackState.CustomAction,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.view.accessibility.AccessibilityRecord: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.accounts.ChooseTypeAndAccountActivity: android.widget.Button access.100(android.accounts.ChooseTypeAndAccountActivity)>:<static>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.media.tv.ITvInputManager: boolean isRatingBlocked(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>:<public static>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.view.View.ScrollabilityCache: void run()>:<public>:<android.view.View.ScrollabilityCache:java.lang.Runnable>
<android.database.sqlite.SQLiteConnectionPool: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.RemoteViews.SetOnClickFillInIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.SetOnClickFillInIntent:android.widget.RemoteViews.Action>
<android.media.session.ISessionController.Stub.Proxy: android.media.session.PlaybackState getPlaybackState()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.ViewPropertyAnimatorRT: boolean startAnimation(android.view.ViewPropertyAnimator)>:<public>:<android.view.ViewPropertyAnimatorRT>
<android.security.IKeyChainService.Stub.Proxy: byte[] getCertificate(java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.widget.AutoCompleteTextView: void setThreshold(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.AbstractCursor: boolean moveToPrevious()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.projection.IMediaProjectionManager.Stub: void <init>()>:<public>:<android.media.projection.IMediaProjectionManager.Stub:android.os.Binder,android.media.projection.IMediaProjectionManager>
<android.view.inputmethod.InputMethodSubtypeArray: void writeToParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.preference.TwoStatePreference: boolean shouldDisableDependents()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconBitmap(android.graphics.Bitmap)>:<public>:<android.media.MediaDescription.Builder>
<android.filterpacks.numeric.SinWaveFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.numeric.SinWaveFilter:android.filterfw.core.Filter>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1: void run()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1:java.lang.Runnable>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.widget.RemoteViews.BitmapCache: void <init>()>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>:<public>:<android.media.Ringtone>
<android.animation.PathKeyframes.SimpleKeyframes: java.lang.Object clone()>:<public volatile>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.print.ILayoutResultCallback: void onLayoutFailed(java.lang.CharSequence,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.media.AudioManager: android.media.IAudioService getService()>:<private static>:<android.media.AudioManager>
<android.view.IWindowManager.Stub.Proxy: boolean clearWindowContentFrameStats(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.MediaDrm: byte[] encryptNative(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<private static final native>:<android.media.MediaDrm>
<android.media.session.MediaSessionLegacyHelper: void sendMediaButtonEvent(android.view.KeyEvent,boolean)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.GLES20Canvas: void drawRGB(int,int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.SurfaceView.3: void <init>(android.view.SurfaceView)>:<>:<android.view.SurfaceView.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutFailed(java.lang.CharSequence,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.media.MediaPlayer: void _pause()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.SeekBarVolumizer.Callback: void onSampleStarting(android.preference.SeekBarVolumizer)>:<public abstract>:<android.preference.SeekBarVolumizer.Callback>
<android.widget.RelativeLayout: void centerVertical(android.view.View,android.widget.RelativeLayout.LayoutParams,int)>:<private static>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>:<public static>:<android.media.JetPlayer>
<android.view.GestureDetector: boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)>:<private>:<android.view.GestureDetector>
<android.printservice.PrintJob: boolean cancel()>:<public>:<android.printservice.PrintJob>
<android.view.HardwareRenderer: boolean isEnabled()>:<>:<android.view.HardwareRenderer>
<android.view.ActionMode: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<android.view.ViewRootImpl: boolean measureHierarchy(android.view.View,android.view.WindowManager.LayoutParams,android.content.res.Resources,int,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaRouter: void selectDefaultRouteStatic()>:<static>:<android.media.MediaRouter>
<android.widget.TextView: void onLocaleChanged()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.Animator: java.lang.Object clone()>:<public volatile>:<android.animation.Animator:java.lang.Cloneable>
<android.view.IWindow.Stub: void <init>()>:<public>:<android.view.IWindow.Stub:android.os.Binder,android.view.IWindow>
<android.media.AudioSystem: int getPrimaryOutputSamplingRate()>:<public static native>:<android.media.AudioSystem>
<android.view.ViewRootImpl: void doProcessInputEvents()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.View: void getHitRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk createStackChunk(java.lang.StackTraceElement[],int)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.WindowAnimationFrameStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>:<public final>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>:<public>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.view.accessibility.AccessibilityWindowInfo.1: void <init>()>:<>:<android.view.accessibility.AccessibilityWindowInfo.1:android.os.Parcelable.Creator>
<android.view.ViewDebug: void customizedDump(android.view.View,java.io.OutputStream)>:<private static>:<android.view.ViewDebug>
<android.accounts.ChooseAccountTypeActivity.1: void <init>(android.accounts.ChooseAccountTypeActivity)>:<>:<android.accounts.ChooseAccountTypeActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.media.IMediaScannerService.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaScannerService.Stub:android.os.Binder,android.media.IMediaScannerService>
<android.accounts.ChooseTypeAndAccountActivity: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.media.TextTrackCue: int hashCode()>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.media.CCParser.CCMemory: void moveBaselineTo(int,int)>:<private>:<android.media.CCParser.CCMemory>
<android.widget.Gallery: int getCenterOfGallery()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.service.notification.StatusBarNotification: java.lang.String key()>:<private>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioSystem: int setPhoneState(int)>:<public static native>:<android.media.AudioSystem>
<android.filterpacks.base.CallbackFilter: void setupPorts()>:<public>:<android.filterpacks.base.CallbackFilter:android.filterfw.core.Filter>
<android.view.PointerIcon: int describeContents()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.service.notification.Condition: void <init>(android.os.Parcel)>:<private>:<android.service.notification.Condition:android.os.Parcelable>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.accounts.AuthenticatorDescription: void <init>(android.os.Parcel,android.accounts.AuthenticatorDescription.1)>:<>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.media.tv.TvInputService.Session.10: void run()>:<public>:<android.media.tv.TvInputService.Session.10:java.lang.Runnable>
<android.service.dreams.DreamService.2: void <init>(android.service.dreams.DreamService,java.io.FileDescriptor,java.lang.String[])>:<>:<android.service.dreams.DreamService.2:com.android.internal.util.DumpUtils.Dump>
<android.filterpacks.imageproc.SepiaFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int access.402(android.preference.PreferenceGroupAdapter.PreferenceLayout,int)>:<static>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.media.ClosedCaptionWidget: void setVisible(boolean)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.media.tv.TvView: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.ViewPostImeInputStage: int processPointerEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.ClosedCaptionWidget: void onDisplayChanged(android.text.SpannableStringBuilder[])>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.widget.TextView: void setGravity(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.filterpacks.videosrc.MediaSource.4: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public>:<android.filterpacks.videosrc.MediaSource.4:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.media.session.MediaController: java.lang.String getPackageName()>:<public>:<android.media.session.MediaController>
<android.widget.ViewFlipper: void updateRunning(boolean)>:<private>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: float getCameraDistance()>:<public>:<android.view.RenderNode>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.SurfaceView:android.view.View>
<android.widget.TextView: int viewportToContentVerticalOffset()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>:<public final>:<android.media.MediaFormat>
<android.media.session.MediaSessionManager: android.media.session.ISession createSession(android.media.session.MediaSession.CallbackStub,java.lang.String,int)>:<public>:<android.media.session.MediaSessionManager>
<android.media.AudioService: boolean usingHwSafeMediaConfig()>:<protected>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.Animation: void <init>()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.MediaRecorder: android.media.MediaRecorder.OnErrorListener access.100(android.media.MediaRecorder)>:<static>:<android.media.MediaRecorder>
<android.widget.ActionMenuView: int getWindowAnimations()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.MediaCodec.BufferInfo: void set(int,int,long,int)>:<public>:<android.media.MediaCodec.BufferInfo>
<android.media.MediaRouter.RouteGroup: void memberVolumeChanged(android.media.MediaRouter.RouteInfo)>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat convertInputFormat(android.filterfw.core.FrameFormat)>:<private>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.media.MediaCodecInfo.VideoCapabilities: int getWidthAlignment()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES11: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.TimePickerSpinnerDelegate: int getValFromKeyCode(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.SearchView: void setIconified(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.IPrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.media.AudioGainConfig: int mode()>:<public>:<android.media.AudioGainConfig>
<android.widget.AdapterViewAnimator.SavedState: void <clinit>()>:<static>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService.AudioHandler.2: boolean onError(android.media.MediaPlayer,int,int)>:<public>:<android.media.AudioService.AudioHandler.2:android.media.MediaPlayer.OnErrorListener>
<android.opengl.GLSurfaceView.DefaultContextFactory: void <init>(android.opengl.GLSurfaceView,android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.WindowInfo: android.view.WindowInfo obtain(android.view.WindowInfo)>:<public static>:<android.view.WindowInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void native_init()>:<private static final native>:<android.media.MediaRecorder>
<android.media.AudioDevice: boolean isOutputDevice()>:<public>:<android.media.AudioDevice>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.2: void <init>(android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider,int)>:<>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.2:java.lang.Runnable>
<android.widget.FastScroller: boolean isEnabled()>:<public>:<android.widget.FastScroller>
<android.media.TtmlUtils: java.lang.String applySpacePolicy(java.lang.String,boolean)>:<public static>:<android.media.TtmlUtils>
<android.view.ViewRootImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.VideoView: void stopPlayback()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.CamcorderProfile: boolean hasProfile(int)>:<public static>:<android.media.CamcorderProfile>
<android.media.tv.ITvInputClient.Stub.Proxy: void onSessionReleased(int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.preference.PreferenceActivity.Header: void <clinit>()>:<static>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.view.HardwareRenderer: void <init>()>:<public>:<android.view.HardwareRenderer>
<android.view.inputmethod.EditorInfo.1: void <init>()>:<>:<android.view.inputmethod.EditorInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowId.Stub.Proxy: void unregisterFocusObserver(android.view.IWindowFocusObserver)>:<public>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.view.WindowManagerGlobal: void removeView(android.view.View,boolean)>:<public>:<android.view.WindowManagerGlobal>
<android.media.tv.ITvInputService.Stub.Proxy: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.media.AudioRecord: int getSampleRate()>:<public>:<android.media.AudioRecord>
<android.media.session.MediaController: java.util.List getQueue()>:<public>:<android.media.session.MediaController>
<android.media.session.ISessionController: void pause()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.Editor: void onAttachedToWindow()>:<>:<android.widget.Editor>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.WindowManagerPolicy.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.OnKeyguardExitResult>
<android.view.MotionEvent: java.lang.String toString()>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.Tokenizer: java.lang.String access.000(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setShownWeekCount(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.HardwareLayer: long getDeferredLayerUpdater()>:<public>:<android.view.HardwareLayer>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.security.AndroidKeyStore: int engineSize()>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.tv.TvInputManager.Session: java.lang.String getSelectedTrack(int)>:<public>:<android.media.tv.TvInputManager.Session>
<android.media.RemoteController.RcDisplay: void setMetadata(int,android.os.Bundle)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.widget.Gallery: void trackMotionScroll(int)>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.tv.TvContentRatingSystemInfo: void <clinit>()>:<static>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.media.ExifInterface: void saveAttributes()>:<public>:<android.media.ExifInterface>
<android.animation.AnimatorSet: boolean access.402(android.animation.AnimatorSet,boolean)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.RenderNode: boolean hasIdentityMatrix()>:<public>:<android.view.RenderNode>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.print.PrintAttributes.Margins: int getBottomMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.view.Surface: void nativeSetRefreshDirty(long,android.graphics.Rect)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.view.WindowAnimationFrameStats.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.WindowAnimationFrameStats.1:android.os.Parcelable.Creator>
<android.preference.SeekBarVolumizer: void changeVolumeBy(int)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.AudioService: int access.8902(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLErrorWrapper: boolean glIsTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.print.IPrintDocumentAdapterObserver.Stub: android.print.IPrintDocumentAdapterObserver asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.SearchView: void setQuery(java.lang.CharSequence)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.AbsListView.CheckForTap: void run()>:<public>:<android.widget.AbsListView.CheckForTap:java.lang.Runnable>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.view.WindowInsets: android.view.WindowInsets consumeWindowDecorInsets(boolean,boolean,boolean,boolean)>:<public>:<android.view.WindowInsets>
<android.view.accessibility.CaptioningManager: boolean isEnabled()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.media.ExifInterface: void saveAttributesNative(java.lang.String,java.lang.String)>:<private native>:<android.media.ExifInterface>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>:<public>:<android.media.RingtoneManager>
<android.view.InputEvent.1: android.view.InputEvent createFromParcel(android.os.Parcel)>:<public>:<android.view.InputEvent.1:android.os.Parcelable.Creator>
<android.widget.SearchView: void access.1300(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.ProgressBar.AccessibilityEventSender: void <init>(android.widget.ProgressBar,android.widget.ProgressBar.1)>:<>:<android.widget.ProgressBar.AccessibilityEventSender:java.lang.Runnable>
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.widget.MediaController: android.view.WindowManager.LayoutParams access.300(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowInfo: void access.000(android.view.WindowInfo,android.os.Parcel)>:<static>:<android.view.WindowInfo:android.os.Parcelable>
<android.widget.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.View.12: void setValue(android.view.View,float)>:<public>:<android.view.View.12:android.util.FloatProperty>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(boolean)>:<>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.media.RemoteController.RcDisplay: void setPlaybackState(int,int,long,long,float)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.widget.AbsSpinner.SavedState.1: android.widget.AbsSpinner.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.widget.AbsSpinner.SavedState.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputHardware.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputHardware.Stub:android.os.Binder,android.media.tv.ITvInputHardware>
<android.media.tv.TvInputManager.Session: java.util.List access.300(android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvInputManager.Session>
<android.media.AudioService: void setStreamVolumeInt(int,int,int,boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.EdgeEffect: void onPull(float)>:<public>:<android.widget.EdgeEffect>
<android.database.sqlite.SQLiteOpenHelper: void <clinit>()>:<static>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.Window: void injectInputEvent(android.view.InputEvent)>:<public>:<android.view.Window>
<android.media.SoundPool.SoundPoolImpl: int _load(java.io.FileDescriptor,long,long,int)>:<private final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.netdetect.HwCustNetDetectServiceImpl.2: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.2:android.content.BroadcastReceiver>
<android.widget.MediaController: void initControllerView(android.view.View)>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution)>:<public>:<android.print.PrintAttributes.Builder>
<android.media.IVolumeController.Stub: void <init>()>:<public>:<android.media.IVolumeController.Stub:android.os.Binder,android.media.IVolumeController>
<android.accounts.AccountManager.AmsTask.Response: void <init>(android.accounts.AccountManager.AmsTask)>:<private>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.media.AudioManager: void abandonAudioFocusForCall()>:<public>:<android.media.AudioManager>
<android.view.ViewRootImpl.SyntheticInputStage: void <init>(android.view.ViewRootImpl)>:<public>:<android.view.ViewRootImpl.SyntheticInputStage:android.view.ViewRootImpl.InputStage>
<android.view.ViewDebug.4: void post(java.lang.Object[])>:<public transient>:<android.view.ViewDebug.4:android.view.ViewDebug.ViewOperation>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources.Theme,int,float)>:<public static>:<android.animation.AnimatorInflater>
<android.media.IRingtonePlayer.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.Utils: android.util.Rational scaleRatio(android.util.Rational,int,int)>:<private static>:<android.media.Utils>
<android.service.notification.ZenModeConfig: android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.Metadata: java.util.Date getDate(int)>:<public>:<android.media.Metadata>
<android.view.LayoutInflater.BlinkLayout: boolean access.102(android.view.LayoutInflater.BlinkLayout,boolean)>:<static>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory2 getFactory2()>:<public final>:<android.view.LayoutInflater>
<android.widget.Editor: android.widget.Editor.SelectionModifierCursorController getSelectionControllerDirectly()>:<protected>:<android.widget.Editor>
<android.print.PrintAttributes.Resolution: java.lang.String getLabel()>:<public>:<android.print.PrintAttributes.Resolution>
<android.service.notification.StatusBarNotification: int getUserId()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.DatePicker: int getFirstDayOfWeek()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector: void onSoundModelsChanged()>:<>:<android.service.voice.AlwaysOnHotwordDetector>
<android.filterpacks.imageproc.ImageSlicer: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ImageSlicer:android.filterfw.core.Filter>
<android.filterpacks.imageproc.BitmapSource: void setupPorts()>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.media.tv.ITvInputManagerCallback: void onInputStateChanged(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManagerCallback:android.os.IInterface>
<android.widget.FastScroller.6: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.widget.FastScroller.6:android.util.IntProperty>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>:<public abstract>:<android.widget.TabHost.TabContentFactory>
<android.widget.TimePicker.TimePickerDelegate: boolean isEnabled()>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.opengl.GLES20: void glFinish()>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager.H: void handleMessage(android.os.Message)>:<public>:<android.view.inputmethod.InputMethodManager.H:android.os.Handler>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.View: android.content.res.Resources getResources()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiCheckPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glFogfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.preference.ListPreference.1: void <init>(android.preference.ListPreference)>:<>:<android.preference.ListPreference.1:android.content.DialogInterface.OnClickListener>
<android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])>:<public static transient>:<android.security.Credentials>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>:<public final>:<android.view.ViewTreeObserver>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>:<public>:<android.security.KeyStore>
<android.widget.SimpleMonthAdapter: boolean isSelectedDayInMonth(int,int)>:<private>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.database.sqlite.SQLiteConnection.PreparedStatementCache: void <init>(android.database.sqlite.SQLiteConnection,int)>:<public>:<android.database.sqlite.SQLiteConnection.PreparedStatementCache:android.util.LruCache>
<android.media.ImageReader.SurfaceImage.SurfacePlane: java.nio.ByteBuffer getBuffer()>:<public>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.view.inputmethod.InputMethodManager.ImeInputEventSender: void onInputEventFinished(int,boolean)>:<public>:<android.view.inputmethod.InputMethodManager.ImeInputEventSender:android.view.InputEventSender>
<android.print.IPrintSpoolerClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.filterpacks.imageproc.AutoFixFilter: void createHistogramFrame(android.filterfw.core.FilterContext,int,int,int[])>:<private>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.media.MediaDrm: void finalize()>:<protected>:<android.media.MediaDrm>
<android.widget.VideoView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>:<private>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.session.ISessionController.Stub.Proxy: boolean isTransportControlEnabled()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.WindowManagerGlobal: void doTrimForeground()>:<private>:<android.view.WindowManagerGlobal>
<android.media.MutableBackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.DatePicker: android.widget.NumberPicker getMonthSpinner()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.accounts.ChooseAccountActivity: android.graphics.drawable.Drawable getDrawableForType(java.lang.String)>:<private>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.preference.SeekBarDialogPreference: android.widget.SeekBar getSeekBar(android.view.View)>:<protected static>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioRecord: int native_get_min_buff_size(int,int,int)>:<private static final native>:<android.media.AudioRecord>
<android.widget.TextView: void reLayoutAfterMeasure()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter: void <init>()>:<public>:<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter:com.android.internal.os.storage.IHwCustExternalStorageFormatter>
<android.widget.ListView: boolean handleHorizontalFocusWithinListItem(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.dreams.IDreamManager.Stub.Proxy: void dream()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.media.MediaCodec: void native_stop()>:<private final native>:<android.media.MediaCodec>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.TextureView: void onDraw(android.graphics.Canvas)>:<protected final>:<android.view.TextureView:android.view.View>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.IAccountManager.Stub.Proxy: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.GrantCredentialsPermissionActivity.1.1: void <init>(android.accounts.GrantCredentialsPermissionActivity.1,java.lang.String)>:<>:<android.accounts.GrantCredentialsPermissionActivity.1.1:java.lang.Runnable>
<android.media.RingtoneManager: void <clinit>()>:<static>:<android.media.RingtoneManager>
<android.media.AudioManager: void setMasterVolume(int,int)>:<public>:<android.media.AudioManager>
<android.view.RenderNodeAnimator: void setTarget(android.view.RenderNode)>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.opengl.GLES20: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.RtlSpacingHelper: int getEnd()>:<public>:<android.widget.RtlSpacingHelper>
<android.media.audiofx.BassBoost: short getRoundedStrength()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.hsm.HwAudioPermWrapper: int mockRead(byte[],int,int)>:<public>:<android.hsm.HwAudioPermWrapper>
<android.view.ViewRootImpl.EarlyPostImeInputStage: int processPointerEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.EarlyPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.ddm.DdmHandleHeap: void <init>()>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void glGetFixedv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.MediaSession: void access.1000(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SubtitleTrack.Run: void <clinit>()>:<static>:<android.media.SubtitleTrack.Run>
<android.view.IWindowSessionCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindowSessionCallback.Stub.Proxy:android.view.IWindowSessionCallback>
<android.view.View: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Display: int getPixelFormat()>:<public>:<android.view.Display>
<android.media.TimedText.HyperText: void <init>(int,int,java.lang.String,java.lang.String)>:<public>:<android.media.TimedText.HyperText>
<android.print.PrinterCapabilitiesInfo: void readMediaSizes(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.ViewGroup: void detachViewFromParent(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Gallery: boolean showContextMenu()>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.database.IContentObserver.Stub.Proxy: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.view.FocusFinderHelper: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.FocusFinderHelper>
<android.service.dreams.DreamService: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioAttributes: java.util.HashSet access.300(android.media.AudioAttributes)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.WindowManagerPolicy: android.view.animation.Animation createForceHideWallpaperExitAnimation(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setCapabilities(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.media.MediaScanner: void releaseResources()>:<private>:<android.media.MediaScanner>
<android.widget.ScrollView: void initOrResetVelocityTracker()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void scrollIntoSlots()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.YearPickerView.YearAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.YearPickerView.YearAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.view.DisplayInfo: void <clinit>()>:<static>:<android.view.DisplayInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: void onBackPressed()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.Editor.SuggestionsPopupWindow: android.widget.Editor.SuggestionsPopupWindow.SuggestionInfo[] access.1700(android.widget.Editor.SuggestionsPopupWindow)>:<static>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.print.IPrintSpooler.Stub.Proxy: void createPrintJob(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.media.projection.MediaProjectionManager.Callback: void onStart(android.media.projection.MediaProjectionInfo)>:<public abstract>:<android.media.projection.MediaProjectionManager.Callback>
<android.view.KeyCharacterMap: int describeContents()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.session.ISessionController: android.app.PendingIntent getLaunchPendingIntent()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.AudioManager: int getMasterStreamType()>:<public>:<android.media.AudioManager>
<android.media.session.ISessionCallback: void onPlay()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.opengl.GLLogWrapper: void glDrawTexsOES(short,short,short,short,short)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glScalex(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy.WindowState: boolean hasAppShownWindows()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.media.audiofx.BassBoost: void setStrength(short)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.view.InputDevice.MotionRange: float access.500(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.widget.RadioGroup: void setCheckedId(int)>:<private>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaActionSound: void <clinit>()>:<static>:<android.media.MediaActionSound>
<android.media.PlayerRecord: void binderDied()>:<public>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.widget.Editor.HandleView: void showActionPopupWindow(int)>:<>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.MotionEvent.PointerProperties: boolean equals(java.lang.Object)>:<public>:<android.view.MotionEvent.PointerProperties>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.accounts.AccountManager.2: java.lang.Boolean bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)>:<static>:<android.view.ViewDebug>
<android.media.MediaScanner: void setDefaultRingtoneFileNames()>:<private>:<android.media.MediaScanner>
<android.media.IRemoteDisplayProvider: void disconnect(java.lang.String)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.opengl.GLES10: void glMatrixMode(int)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioManager: void <init>(android.content.Context)>:<public>:<android.media.AudioManager>
<android.view.InputEventReceiver: void finalize()>:<protected>:<android.view.InputEventReceiver>
<android.media.MediaRouter.Callback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.audiofx.Virtualizer.BaseParameterListener: void <init>(android.media.audiofx.Virtualizer,android.media.audiofx.Virtualizer.1)>:<>:<android.media.audiofx.Virtualizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.MediaRecorder: void stop()>:<public>:<android.media.MediaRecorder>
<android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.accessibility.IAccessibilityManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManager>
<android.media.MediaScanner: boolean access.2000(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.MediaPlayer: void release()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.service.wallpaper.IWallpaperEngine: void setVisibility(boolean)>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.database.Observable: void <init>()>:<public>:<android.database.Observable>
<android.media.AudioService: android.hardware.hdmi.HdmiControlManager access.7000(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>:<public>:<android.view.ScaleGestureDetector>
<android.widget.Toolbar.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.Toolbar.SavedState.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationListenerService: android.content.Context getContext()>:<private>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Display: void getSize(android.graphics.Point)>:<public>:<android.view.Display>
<android.media.SubtitleTrack: void onTimedEvent(long)>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void destroy()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.EGLLogWrapper: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.audiofx.PresetReverb: java.lang.Object access.000(android.media.audiofx.PresetReverb)>:<static>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.ActionMode: java.lang.Object getTag()>:<public>:<android.view.ActionMode>
<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy:android.view.accessibility.IAccessibilityManagerClient>
<android.media.MediaInserter: void <init>(android.content.IContentProvider,java.lang.String,int)>:<public>:<android.media.MediaInserter>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setEnabled(boolean)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.ChooseAccountActivity: void finish()>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isVideo()>:<private>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.View: void postInvalidateDelayed(long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteController: void access.700(android.os.Handler,int,int,int,int,java.lang.Object,int)>:<static>:<android.media.RemoteController>
<android.media.MediaScanner: void clearMediaPathCache(boolean,boolean)>:<public static>:<android.media.MediaScanner>
<android.opengl.GLES10: void glMaterialf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.WindowId: java.lang.String toString()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService.Result)>:<public abstract>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.AutoCompleteTextView.MyWatcher: void afterTextChanged(android.text.Editable)>:<public>:<android.widget.AutoCompleteTextView.MyWatcher:android.text.TextWatcher>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.view.ViewGroup: android.view.ViewGroup.TouchTarget getTouchTarget(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.PrintJobInfo: void <init>()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.Tokenizer: void <init>(android.media.Tokenizer.OnTokenListener)>:<>:<android.media.Tokenizer>
<android.media.AudioRecord: int getNotificationMarkerPosition()>:<public>:<android.media.AudioRecord>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.view.ViewGroup.ChildListForAccessibility: int getChildCount()>:<public>:<android.view.ViewGroup.ChildListForAccessibility>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.CCParser.CCMemory: void rollUp(int)>:<>:<android.media.CCParser.CCMemory>
<android.view.InputEvent: int describeContents()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.media.session.ISessionManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.media.IAudioService.Stub.Proxy: void setRingerMode(int,boolean)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.RenderNodeAnimator: long nCreateCanvasPropertyPaintAnimator(long,int,float)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.accessibility.AccessibilityCache: void clear()>:<public>:<android.view.accessibility.AccessibilityCache>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLErrorWrapper: void glFinish()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy: int interceptMotionBeforeQueueingNonInteractive(long,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.MediaPlayer: boolean native_getMetadata(boolean,boolean,android.os.Parcel)>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.appwidget.AppWidgetProvider: void onRestored(android.content.Context,int[],int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.widget.TextView: void setCursorPosition_internal(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowManagerGlobal: java.lang.Object access.000(android.view.WindowManagerGlobal)>:<static>:<android.view.WindowManagerGlobal>
<android.widget.Editor.HandleView: int getDesignHandleHeight()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>:<public>:<android.media.SoundPool>
<android.view.ViewConfiguration: int getDoubleTapSlop()>:<public static>:<android.view.ViewConfiguration>
<android.filterpacks.imageproc.LomoishFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.security.KeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void setMaxWidth(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.database.Observable: void unregisterAll()>:<public>:<android.database.Observable>
<android.service.trust.TrustAgentService: void <init>()>:<public>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.WindowManagerPolicy: void setNaviBarFlag(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.database.sqlite.JankSqlite.DBOprMonitor: void <init>(long,int)>:<public>:<android.database.sqlite.JankSqlite.DBOprMonitor>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.MagnificationSpec: void <init>()>:<private>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public abstract>:<android.view.SurfaceHolder>
<android.view.MotionEvent: float getHistoricalY(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLLogWrapper: void glBlendEquationSeparate(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.SurfaceControl: android.os.IBinder nativeCreateDisplay(java.lang.String,boolean)>:<private static native>:<android.view.SurfaceControl>
<android.widget.Editor: android.graphics.drawable.Drawable access.2602(android.widget.Editor,android.graphics.drawable.Drawable)>:<static>:<android.widget.Editor>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>:<public>:<android.media.AudioRecord>
<android.media.tv.TvInputService.Session.3: void run()>:<public>:<android.media.tv.TvInputService.Session.3:java.lang.Runnable>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List)>:<public>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.media.CamcorderProfile: android.media.CamcorderProfile native_get_camcorder_profile(int,int)>:<private static final native>:<android.media.CamcorderProfile>
<android.media.MediaRouter.RouteCategory: int getSupportedTypes()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.media.MediaCodec: void freeByteBuffer(java.nio.ByteBuffer)>:<private final>:<android.media.MediaCodec>
<android.widget.TabWidget: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes.Margins: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.Margins>
<android.media.session.ISessionController.Stub.Proxy: void rate(android.media.Rating)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.InputDevice: android.os.Vibrator getVibrator()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.accounts.IAccountAuthenticator: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<huawei.android.common.HwCustFwkFactoryImpl: android.netdetect.NetDetectService getNetDetectService(android.content.Context)>:<public>:<huawei.android.common.HwCustFwkFactoryImpl:android.common.HwCustFwkFactory.Factory>
<android.media.AudioService: void restoreMasterVolume()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.MultiCheckPreference: void setEntries(int)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.inputmethod.InputMethodInfo: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.service.notification.IConditionProvider: void onRequestConditions(int)>:<public abstract>:<android.service.notification.IConditionProvider:android.os.IInterface>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.security.KeyStore: boolean syncUid(int,int)>:<public>:<android.security.KeyStore>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.media.AudioDevicePortConfig: android.media.AudioDevicePort port()>:<public>:<android.media.AudioDevicePortConfig:android.media.AudioPortConfig>
<android.media.RemoteController: void access.1500(android.media.RemoteController,int,boolean)>:<static>:<android.media.RemoteController>
<android.opengl.GLES10: void glNormal3x(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.AudioService: void access.600(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodManager.1: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.view.View: void setDrawingCacheEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: android.view.View findViewWithTagTraversal(java.lang.Object)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MenuInflater: java.lang.Object access.400(android.view.MenuInflater)>:<static>:<android.view.MenuInflater>
<android.view.View.AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>:<public>:<android.view.View.AccessibilityDelegate>
<android.media.AudioService: int access.8900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityNodeInfo getNode(int,long)>:<public>:<android.view.accessibility.AccessibilityCache>
<android.view.InputEvent.1: void <init>()>:<>:<android.view.InputEvent.1:android.os.Parcelable.Creator>
<android.filterpacks.imageproc.BitmapSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.widget.GridView: void setHorizontalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.SurfaceControl: boolean clearContentFrameStats()>:<public>:<android.view.SurfaceControl>
<android.view.View: float getLeftFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioPatch: android.media.AudioPortConfig[] sinks()>:<public>:<android.media.AudioPatch>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.filterpacks.imageproc.RedEyeFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.view.View: int access.2400(android.view.View)>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Utils.1: int compare(android.util.Range,android.util.Range)>:<public>:<android.media.Utils.1:java.util.Comparator>
<android.accounts.Account: boolean equals(java.lang.Object)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onRate(android.media.Rating)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.service.wallpaper.WallpaperService.Engine: void doCommand(android.service.wallpaper.WallpaperService.WallpaperCommand)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy: void onStop(android.media.projection.MediaProjectionInfo)>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy:android.media.projection.IMediaProjectionWatcherCallback>
<android.service.dreams.DreamService: void applyWindowFlags(int,int)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.IRemoteVolumeController.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteVolumeController.Stub.Proxy:android.media.IRemoteVolumeController>
<android.print.PrintDocumentAdapter.WriteResultCallback: void <init>()>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.media.RemoteDisplayState: void <init>()>:<public>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.view.GestureDetector: void access.200(android.view.GestureDetector)>:<static>:<android.view.GestureDetector>
<android.widget.EditText: boolean getDefaultEditable()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector.MyHandler: void handleMessage(android.os.Message)>:<public>:<android.service.voice.AlwaysOnHotwordDetector.MyHandler:android.os.Handler>
<android.widget.DatePicker: android.widget.DatePicker.DatePickerDelegate createSpinnerUIDelegate(android.content.Context,android.util.AttributeSet,int,int)>:<private>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: void setVolume(android.os.IBinder,float,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.print.PrinterDiscoverySession: void stopPrinterStateTracking(android.print.PrinterId)>:<public final>:<android.print.PrinterDiscoverySession>
<android.view.Window: void addFlags(int)>:<public>:<android.view.Window>
<android.view.View: android.view.View findViewByAccessibilityId(int)>:<final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer.TimeProvider.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaPlayer.TimeProvider.EventHandler:android.os.Handler>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void finish()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.opengl.GLUtils: int native_getInternalFormat(android.graphics.Bitmap)>:<private static native>:<android.opengl.GLUtils>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>:<public abstract>:<android.view.MenuItem>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.dreams.DreamService: void startDozing()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.MenuItem: char getAlphabeticShortcut()>:<public abstract>:<android.view.MenuItem>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingRegion(int,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.VideoView: android.media.MediaPlayer.OnPreparedListener access.600(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.ViewRootImpl: android.graphics.drawable.Drawable getAccessibilityFocusedDrawable()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ExpandableListView: boolean expandGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ThreadedRenderer: void updateRootDisplayList(android.view.View,android.view.HardwareRenderer.HardwareDrawCallbacks)>:<private>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.SoundPool.SoundPoolImpl: boolean unload(int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.AmrInputStream: int GsmAmrEncoderEncode(long,byte[],int,byte[],int)>:<private static native>:<android.media.AmrInputStream:java.io.InputStream>
<android.widget.DayPickerView: void onChange()>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.audiofx.Visualizer: int native_setMeasurementMode(int)>:<private final native>:<android.media.audiofx.Visualizer>
<android.view.ViewRootImpl: boolean access.000(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaMetadataEditor: void <clinit>()>:<static>:<android.media.MediaMetadataEditor>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.print.IPrintSpooler: void removeObsoletePrintJobs()>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterpacks.imageproc.FisheyeFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>:<public static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.WebVttRenderingWidget.CueLayout: int access.000(android.media.WebVttRenderingWidget.CueLayout)>:<static>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glDrawTexfOES(float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService: int getStreamMaxVolume(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.media.session.ISessionCallback.Stub.Proxy: void onPlay()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.service.dreams.DreamService: boolean canDoze()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.ViewRootImpl.WindowInputEventReceiver: void dispose()>:<public>:<android.view.ViewRootImpl.WindowInputEventReceiver:android.view.InputEventReceiver>
<android.view.View: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.KeyEvent: int getDeadChar(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Editor.SelectionStartHandleView: void updateSelection(int)>:<public>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.preference.SeekBarPreference: void onBindView(android.view.View)>:<protected>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.media.WebVttRenderingWidget: void <clinit>()>:<static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.TtmlUtils: void extractTtmlFragment(android.media.TtmlNode,long,long,java.lang.StringBuilder)>:<private static>:<android.media.TtmlUtils>
<android.view.WindowManagerGlobal: android.view.IWindowSession peekWindowSession()>:<public static>:<android.view.WindowManagerGlobal>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>()>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.Editor.SelectionStartHandleView: android.widget.Editor.ActionPopupWindow getActionPopupWindow()>:<public>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.session.ISessionController: android.os.Bundle getExtras()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.ThreadedRenderer: void nDestroyHardwareResources(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.ContextThemeWrapper: void <init>()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.IWindow: void moved(int,int)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.media.AudioManager: int getMasterVolume()>:<public>:<android.media.AudioManager>
<android.view.WindowManager.LayoutParams.1: android.view.WindowManager.LayoutParams[] newArray(int)>:<public>:<android.view.WindowManager.LayoutParams.1:android.os.Parcelable.Creator>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff.Mode)>:<public>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy:android.service.notification.IStatusBarNotificationHolder>
<android.ddm.DdmHandleExit: void <clinit>()>:<static>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.VideoView: boolean access.302(android.widget.VideoView,boolean)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.WindowInsets: int getSystemWindowInsetRight()>:<public>:<android.view.WindowInsets>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void consumeAccumulatedMovement(long,int)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.view.inputmethod.InputMethodSubtypeArray: byte[] compress(byte[])>:<private static>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.database.CursorWrapper: void close()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.session.MediaController.CallbackStub: void onSessionDestroyed()>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodManager: void showInputMethodPickerLocked()>:<private>:<android.view.inputmethod.InputMethodManager>
<android.service.dreams.DreamManagerInternal: void <init>()>:<public>:<android.service.dreams.DreamManagerInternal>
<android.media.Metadata: int lastType()>:<public static>:<android.media.Metadata>
<android.opengl.GLES10: void glShadeModel(int)>:<public static native>:<android.opengl.GLES10>
<android.animation.StateListAnimator: android.animation.Animator access.000(android.animation.StateListAnimator)>:<static>:<android.animation.StateListAnimator>
<android.filterpacks.performance.ThroughputFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.performance.ThroughputFilter:android.filterfw.core.Filter>
<android.widget.ExpandableListView: void <init>(android.content.Context)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ActionMenuView: void onMeasure(int,int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.CCParser.CCMemory: void writeMidRowCode(android.media.CCParser.StyleCode)>:<>:<android.media.CCParser.CCMemory>
<android.media.audiofx.PresetReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.widget.TextView: int getCurrentTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvContract: boolean isChannelUri(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.media.AudioService.SetModeDeathHandler: int getMode()>:<public>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.MediaHTTPService: android.os.IBinder createHttpServiceBinderIfNecessary(java.lang.String)>:<static>:<android.media.MediaHTTPService:android.media.IMediaHTTPService.Stub,android.os.Binder>
<android.media.tv.TvInputManager.Session: void tune(android.net.Uri)>:<public>:<android.media.tv.TvInputManager.Session>
<android.media.MediaCodecList: void native_init()>:<private static final native>:<android.media.MediaCodecList>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.ActionMenuPresenter: void setWidthLimit(int,boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.textservice.SuggestionsInfo.1: void <init>()>:<>:<android.view.textservice.SuggestionsInfo.1:android.os.Parcelable.Creator>
<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>:<public>:<android.view.textservice.TextServicesManager>
<android.filterpacks.videosrc.MediaSource: void setupPorts()>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.media.MediaFocusControl: android.media.MediaFocusControl.MediaEventHandler access.000(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.TextView: void setMinEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.media.session.ISessionController.Stub.Proxy: void fastForward()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.RatingBar: void setRating(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.MediaCodecInfo.AudioCapabilities: void setDefaultFormat(android.media.MediaFormat)>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.SearchView: boolean isActionModeEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: int computeVerticalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.Settings getProperties()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.Window.Callback>
<android.media.projection.MediaProjectionInfo: int hashCode()>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(android.preference.Preference)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.StackView.StackSlider: float getXProgress()>:<public>:<android.widget.StackView.StackSlider>
<android.widget.TextView.Marquee.1: void doFrame(long)>:<public>:<android.widget.TextView.Marquee.1:android.view.Choreographer.FrameCallback>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.ActionMode: boolean getTitleOptionalHint()>:<public>:<android.view.ActionMode>
<android.media.AudioService: int access.2602(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaExtractor: void native_finalize()>:<private final native>:<android.media.MediaExtractor>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onError(java.lang.String)>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.view.textservice.TextInfo: int getCookie()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.media.session.ISession.Stub.Proxy: void setPlaybackState(android.media.session.PlaybackState)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.service.trust.ITrustAgentService.Stub.Proxy: void setTrustAgentFeaturesEnabled(android.os.Bundle,android.os.IBinder)>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.BlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.opengl.GLLogWrapper: void returns(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SubtitleController.Renderer: void <init>()>:<public>:<android.media.SubtitleController.Renderer>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.service.notification.IConditionListener.Stub: void <init>()>:<public>:<android.service.notification.IConditionListener.Stub:android.os.Binder,android.service.notification.IConditionListener>
<android.widget.ListView: int amountToScrollToNewFocus(int,android.view.View,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.FastScroller.1: void <init>(android.widget.FastScroller)>:<>:<android.widget.FastScroller.1:java.lang.Runnable>
<android.service.dreams.IDreamManager.Stub.Proxy: void awaken()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.view.IWindowManager: void dismissKeyguard()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.View: boolean draw(android.graphics.Canvas,android.view.ViewGroup,long)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadialTimePickerView: void startHoursToMinutesAnimation()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.service.voice.IVoiceInteractionService: void ready()>:<public abstract>:<android.service.voice.IVoiceInteractionService:android.os.IInterface>
<android.widget.TimePickerSpinnerDelegate.3: void onClick(android.view.View)>:<public>:<android.widget.TimePickerSpinnerDelegate.3:android.view.View.OnClickListener>
<android.service.fingerprint.IFingerprintServiceReceiver: void onEnrollResult(int,int)>:<public abstract>:<android.service.fingerprint.IFingerprintServiceReceiver:android.os.IInterface>
<android.view.Choreographer.FrameCallback: void doFrame(long)>:<public abstract>:<android.view.Choreographer.FrameCallback>
<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintDocumentInfo: int access.202(android.print.PrintDocumentInfo,int)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.WindowManager.InvalidDisplayException: void <init>()>:<public>:<android.view.WindowManager.InvalidDisplayException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession.Request newRequest(com.android.internal.app.IVoiceInteractorCallback)>:<>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.TextureView: int getLayerType()>:<public>:<android.view.TextureView:android.view.View>
<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.widget.TextClock.2: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.widget.TextClock.2:android.content.BroadcastReceiver>
<android.database.CursorWindow: void <init>(boolean)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.preference.VolumePreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.view.Choreographer: long getDoFrameDelayTime()>:<public>:<android.view.Choreographer>
<android.view.WindowInsets: int getSystemWindowInsetTop()>:<public>:<android.view.WindowInsets>
<android.security.KeyStore: boolean unlock(java.lang.String)>:<public>:<android.security.KeyStore>
<android.view.ViewRootImpl: void childHasTransientStateChanged(android.view.View,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GLES20Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.FaceDetector.Face: void <init>(android.media.FaceDetector)>:<private>:<android.media.FaceDetector.Face>
<android.media.MediaRouter.RouteInfo: void routeUpdated()>:<>:<android.media.MediaRouter.RouteInfo>
<android.animation.AnimatorInflater: void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int)>:<private static>:<android.animation.AnimatorInflater>
<android.ddm.DdmHandleHello: void register()>:<public static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.MergeCursor: double getDouble(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.AudioPort: boolean equals(java.lang.Object)>:<public>:<android.media.AudioPort>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationCancel(android.animation.Animator)>:<public>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.preference.Preference: java.lang.String getDependency()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaFile: void addFileTypeExt()>:<private static>:<android.media.MediaFile>
<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()>:<private>:<android.media.RingtoneManager>
<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManagerResponse:android.os.IInterface>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.media.tv.TvView: android.view.Surface access.500(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.FocusRequester: void handleFocusLoss(int)>:<>:<android.media.FocusRequester>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: void <init>(android.widget.Editor.SuggestionsPopupWindow)>:<private>:<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator:java.util.Comparator>
<android.view.ViewRootImpl.TraversalRunnable: void run()>:<public>:<android.view.ViewRootImpl.TraversalRunnable:java.lang.Runnable>
<android.accounts.AccountManagerResponse: void <clinit>()>:<static>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.security.KeyChainException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.media.MediaPlayer.TrackInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.MediaPlayer.TrackInfo.1:android.os.Parcelable.Creator>
<android.widget.Editor: android.widget.Editor.SelectionModifierCursorController getSelectionController()>:<>:<android.widget.Editor>
<android.animation.Keyframe.IntKeyframe: void <init>(float)>:<>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.widget.ActionMenuView: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter.Callback,com.android.internal.view.menu.MenuBuilder.Callback)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.tv.TvInputManager.SessionCallbackRecord: android.media.tv.TvInputManager.Session access.100(android.media.tv.TvInputManager.SessionCallbackRecord)>:<static>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.preference.PreferenceActivity.Header.1: android.preference.PreferenceActivity.Header createFromParcel(android.os.Parcel)>:<public>:<android.preference.PreferenceActivity.Header.1:android.os.Parcelable.Creator>
<android.media.CCParser.CCMemory: void tab(int)>:<>:<android.media.CCParser.CCMemory>
<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>:<private>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeLegalSoFar()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.ImageReader.SurfaceImage.SurfacePlane: void access.900(android.media.ImageReader.SurfaceImage.SurfacePlane)>:<static>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.widget.AppSecurityPermissions.PermissionItemView: void onDetachedFromWindow()>:<protected>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.media.tv.ITvInputManager: void unregisterCallback(android.media.tv.ITvInputManagerCallback,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.FocusFinder: android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int)>:<private>:<android.view.FocusFinder>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setUpAdapter()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: int[] getNextIndexToLoad()>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.effect.effects.NegativeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.NegativeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.View: int getRightPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GraphicBuffer: int getWidth()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.Switch: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.accessibility.IAccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.filterpacks.imageproc.ToRGBFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.service.dreams.DreamService: void onAttachedToWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.AudioManager: void setMode(int)>:<public>:<android.media.AudioManager>
<android.media.AudioService: java.util.HashMap access.3300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setExtras(android.os.Bundle)>:<public>:<android.media.MediaDescription.Builder>
<android.view.View.ListenerInfo: java.util.ArrayList access.100(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.view.VelocityTracker.Estimator: void <init>()>:<public>:<android.view.VelocityTracker.Estimator>
<android.widget.PopupMenu.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.PopupMenu.OnMenuItemClickListener>
<android.media.tv.ITvInputService: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.view.View: void getLocationOnScreen(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.SurfaceControl: void setAnimationTransaction()>:<public static>:<android.view.SurfaceControl>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.Gallery.FlingRunnable: void run()>:<public>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.security.IKeyChainService: android.content.pm.ParceledListSlice getSystemCaAliases()>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.view.animation.AnimationSet: void initializeInvalidateRegion(int,int,int,int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.opengl.GLES10: void glVertexPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.media.tv.TvView.MySessionCallback: void onVideoAvailable(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.view.IWindowManager: void setAppOrientation(android.view.IApplicationToken,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.IWindowManager.Stub.Proxy: void prepareAppTransition(int,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.ValueAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiopolicy.AudioPolicyConfig.1: android.media.audiopolicy.AudioPolicyConfig[] newArray(int)>:<public>:<android.media.audiopolicy.AudioPolicyConfig.1:android.os.Parcelable.Creator>
<android.filterpacks.imageproc.CropFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.CropFilter:android.filterfw.core.Filter>
<android.printservice.PrintService.1: void validatePrinters(java.util.List)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.media.TextTrackCue: void <init>()>:<>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.database.sqlite.SQLiteProgram: void onCorruption()>:<protected final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.IWindowSession: boolean getInTouchMode()>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.media.MediaFocusControl: void setRemoteStreamVolume(int)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewGroup: boolean canViewReceivePointerEvents(android.view.View)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>:<public static>:<android.view.GhostView:android.view.View>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.SearchView: void updateViewsVisibility(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.printservice.IPrintService.Stub.Proxy: void stopPrinterDiscovery()>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.service.notification.IStatusBarNotificationHolder: android.service.notification.StatusBarNotification get()>:<public abstract>:<android.service.notification.IStatusBarNotificationHolder:android.os.IInterface>
<android.media.AudioDevicePortConfig: android.media.AudioPort port()>:<public volatile>:<android.media.AudioDevicePortConfig:android.media.AudioPortConfig>
<android.media.ImageReader: android.media.Image acquireLatestImage()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.GLES20Canvas: int nDrawRenderNode(long,long,android.graphics.Rect,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLLogWrapper: void glColor4ub(byte,byte,byte,byte)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.printservice.PrintServiceInfo.1: android.printservice.PrintServiceInfo[] newArray(int)>:<public>:<android.printservice.PrintServiceInfo.1:android.os.Parcelable.Creator>
<android.view.VelocityTracker: boolean nativeGetEstimator(long,int,android.view.VelocityTracker.Estimator)>:<private static native>:<android.view.VelocityTracker>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldReleaseEGLContextWhenPausing()>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.media.tv.TvTrackInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.tv.TvTrackInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLLogWrapper: void glOrthox(int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TimePicker.TimePickerDelegate: boolean is24HourView()>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.media.tv.ITvInputHardwareCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputHardwareCallback.Stub.Proxy:android.media.tv.ITvInputHardwareCallback>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>:<public abstract>:<android.preference.Preference.OnPreferenceClickListener>
<android.media.session.MediaSessionLegacyHelper.SessionHolder: void update()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.View.CheckForLongPress: void rememberWindowAttachCount()>:<public>:<android.view.View.CheckForLongPress:java.lang.Runnable>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo access.502(android.print.PrinterInfo,android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.RadialTimePickerView: void drawSelector(android.graphics.Canvas)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.WindowInfo.1: android.view.WindowInfo[] newArray(int)>:<public>:<android.view.WindowInfo.1:android.os.Parcelable.Creator>
<android.ddm.DdmHandleThread: void disconnected()>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void glGenTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.textservice.TextServicesManager: java.lang.String parseLanguageFromLocaleString(java.lang.String)>:<private static>:<android.view.textservice.TextServicesManager>
<android.media.IAudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.print.PrintJobInfo: void setTag(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.MultiAutoCompleteTextView: void finishInit()>:<>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.widget.VideoView: int access.900(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.accounts.ChooseAccountActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.widget.ScrollView: boolean arrowScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.view.WindowManagerPolicy: void getContentInsetHintLw(android.view.WindowManager.LayoutParams,android.graphics.Rect)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>:<public>:<android.widget.Editor>
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()>:<public>:<android.view.Window>
<android.animation.Keyframes: void setEvaluator(android.animation.TypeEvaluator)>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.media.IAudioService: void setMasterMute(boolean,int,java.lang.String,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.DisplayAdjustments: void <init>(android.os.IBinder)>:<public>:<android.view.DisplayAdjustments>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: void soundModelsChanged()>:<public>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<android.widget.ListView: void removeFixedViewInfo(android.view.View,java.util.ArrayList)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RtlSpacingHelper: int getRight()>:<public>:<android.widget.RtlSpacingHelper>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.VelocityTracker.Estimator: float estimateY(float)>:<public>:<android.view.VelocityTracker.Estimator>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleFEAT(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.MediaPlayer: android.media.MediaPlayer.TimeProvider access.1000(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.inputmethod.InputMethod: void unbindInput()>:<public abstract>:<android.view.inputmethod.InputMethod>
<huawei.cust.HwCustUtils: huawei.cust.HwCustUtils.ClassInfo getClassByName(java.lang.String,java.lang.ClassLoader,java.lang.String[])>:<static>:<huawei.cust.HwCustUtils>
<android.hsm.HwCameraPermWrapper: void <clinit>()>:<static>:<android.hsm.HwCameraPermWrapper>
<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: boolean isNavigationKey(android.view.KeyEvent)>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.RenderNode: android.view.RenderNode adopt(long)>:<public static>:<android.view.RenderNode>
<android.view.WindowContentFrameStats.1: void <init>()>:<>:<android.view.WindowContentFrameStats.1:android.os.Parcelable.Creator>
<android.view.ViewRootImpl: android.view.View focusSearch(android.view.View,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.View: boolean isDuplicateParentStateEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.InputDevice.MotionRange: float getMax()>:<public>:<android.view.InputDevice.MotionRange>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>:<public abstract>:<android.widget.TimePicker.OnTimeChangedListener>
<android.view.RenderNode: int getDebugSize()>:<public>:<android.view.RenderNode>
<android.filterpacks.videosrc.MediaSource: void prepare(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture(int)>:<private native>:<android.media.MediaMetadataRetriever>
<android.view.accessibility.CaptioningManager: void registerObserver(java.lang.String)>:<private>:<android.view.accessibility.CaptioningManager>
<android.media.AudioTrack: int getNotificationMarkerPosition()>:<public>:<android.media.AudioTrack>
<android.opengl.GLLogWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.imageproc.VignetteFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.LayoutInflater.BlinkLayout: void onAttachedToWindow()>:<protected>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.notification.Condition.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.service.notification.Condition.1:android.os.Parcelable.Creator>
<android.preference.Preference: int getTitleRes()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.ExifInterface: float convertRationalLatLonToFloat(java.lang.String,java.lang.String)>:<private static>:<android.media.ExifInterface>
<android.view.RenderNode: float getTranslationZ()>:<public>:<android.view.RenderNode>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: boolean isHierarchical()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.widget.Editor.HandleView: int getMovePositionY()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.print.IPrinterDiscoveryObserver.Stub: void <init>()>:<public>:<android.print.IPrinterDiscoveryObserver.Stub:android.os.Binder,android.print.IPrinterDiscoveryObserver>
<android.media.MediaCodecInfo.VideoCapabilities: void updateLimits()>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.netdetect.INetDetectService.Stub: android.os.IBinder asBinder()>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.view.MotionEvent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.MotionEvent.1:android.os.Parcelable.Creator>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.VideoView.8: void onChanged(android.media.SubtitleTrack.RenderingWidget)>:<public>:<android.widget.VideoView.8:android.media.SubtitleTrack.RenderingWidget.OnChangedListener>
<android.widget.Toast: void setView(android.view.View)>:<public>:<android.widget.Toast>
<android.opengl.EGL14: boolean eglWaitNative(int)>:<public static native>:<android.opengl.EGL14>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>:<public>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.media.effect.EffectFactory: void <init>(android.media.effect.EffectContext)>:<>:<android.media.effect.EffectFactory>
<android.appwidget.AppWidgetHost: boolean isLocalBinder()>:<private>:<android.appwidget.AppWidgetHost>
<android.widget.Editor.SelectionModifierCursorController: android.widget.Editor.SelectionEndHandleView getEndHandle()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.view.IWindowSession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.StackView.StackSlider: float getDuration(boolean,float)>:<private>:<android.widget.StackView.StackSlider>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.print.IPrintManager.Stub.Proxy: void restartPrintJob(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutCancelled()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.print.IPrintManager.Stub.Proxy: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask: java.lang.Void doInBackground(java.lang.Void[])>:<public transient>:<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask:android.os.AsyncTask>
<android.media.session.MediaController: android.os.Bundle getExtras()>:<public>:<android.media.session.MediaController>
<android.view.ViewRootImpl: boolean access.1000(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.UnstyledTextExtractor: void <init>()>:<>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.accounts.IAccountManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.widget.TimePicker.TimePickerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.View: void setFocusable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ValueAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaFocusControl: void access.1000(android.media.MediaFocusControl,android.media.PlayerRecord,int)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.InputDevice: java.util.List getMotionRanges()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.RemoteControlClient: android.media.MediaMetadata access.400(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.media.session.MediaSession.CallbackMessageHandler: void post(int,java.lang.Object)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.view.ViewPropertyAnimator: android.animation.Animator.AnimatorListener access.400(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.service.media.IMediaBrowserServiceCallbacks: void onConnect(java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<public abstract>:<android.service.media.IMediaBrowserServiceCallbacks:android.os.IInterface>
<android.widget.ActionMenuPresenter.SavedState: int describeContents()>:<public>:<android.widget.ActionMenuPresenter.SavedState:android.os.Parcelable>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.printservice.IPrintService.Stub.Proxy: void stopPrinterStateTracking(android.print.PrinterId)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.view.GLES20Canvas: void setMatrix(android.graphics.Matrix)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.RenderNode: boolean nSetRotationY(long,float)>:<private static native>:<android.view.RenderNode>
<android.view.Surface: boolean nativeIsConsumerRunningBehind(long)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void updateHeaderAmPm()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.session.ISessionController: android.content.pm.ParceledListSlice getQueue()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.service.dreams.DreamService: void onWindowFocusChanged(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setValidationCallback(android.widget.TimePicker.ValidationCallback)>:<public>:<android.widget.TimePicker.AbstractTimePickerDelegate:android.widget.TimePicker.TimePickerDelegate>
<android.media.IAudioService.Stub.Proxy: int getMode()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.accounts.GrantCredentialsPermissionActivity: void onClick(android.view.View)>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.printservice.IPrintService: void requestCancelPrintJob(android.print.PrintJobInfo)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.WebVttRenderingWidget: void setActiveCues(java.util.Vector)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLErrorWrapper: void glCurrentPaletteMatrixOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.InputDevice: java.lang.String getDescriptor()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>:<public static>:<android.view.animation.AnimationUtils>
<android.opengl.GLSurfaceView: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.300(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.PosterizeFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onRelayoutContainer()>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.media.ImageReader.SurfaceImage: void close()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener: void onHighTextContrastStateChanged(boolean)>:<public abstract>:<android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener>
<android.media.ClosedCaptionWidget: android.media.ClosedCaptionWidget.CCLayout access.200(android.media.ClosedCaptionWidget)>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.view.ViewRootImpl.2: void <init>(android.view.ViewRootImpl,java.util.ArrayList)>:<>:<android.view.ViewRootImpl.2:java.lang.Runnable>
<android.view.ViewRootImpl: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLErrorWrapper: void glColor4x(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: void glFlush()>:<public static native>:<android.opengl.GLES10>
<android.view.WindowManagerPolicy: void exitKeyguardSecurely(android.view.WindowManagerPolicy.OnKeyguardExitResult)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.IAudioService: void sendAudioRecordStateChangedIntent(java.lang.String,int,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.animation.PropertyValuesHolder: void calculateValue(float)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<huawei.cust.HwCustUtils: java.lang.reflect.Constructor findConstructor(huawei.cust.HwCustUtils.ClassInfo,java.lang.Object[])>:<static transient>:<huawei.cust.HwCustUtils>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.Editor: void finishBatchEdit(android.widget.Editor.InputMethodState)>:<>:<android.widget.Editor>
<android.media.MediaPlayer: int getAudioSessionId()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.IWindowManager.Stub.Proxy: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.View: boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.Future2Task: android.accounts.AccountManager.Future2Task start()>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.preference.Preference: boolean shouldPersist()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.IRotationWatcher.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IRotationWatcher.Stub.Proxy:android.view.IRotationWatcher>
<android.opengl.GLErrorWrapper: void glClearColorx(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.security.AndroidKeyStore: java.util.Enumeration engineAliases()>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.tv.TvInputInfo: void <init>(android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int)>:<private>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.IMediaHTTPConnection.Stub: android.media.IMediaHTTPConnection asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaHTTPConnection.Stub:android.os.Binder,android.media.IMediaHTTPConnection>
<android.service.dreams.DreamService: void attach(android.os.IBinder,boolean)>:<private final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.ViewGroup: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.media.audiofx.AudioEffect: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.audiofx.AudioEffect>
<android.view.IWindowManager: int getPendingAppTransition()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.AudioService: void disableSafeMediaVolume()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteConstraintException: void <init>()>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.animation.ValueAnimator: float getAnimatedFraction()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.RenderNodeAnimator: boolean isNativeInterpolator(android.animation.TimeInterpolator)>:<static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.MediaRouter.RouteInfo: int access.100(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter.RouteInfo>
<android.media.projection.IMediaProjection: void unregisterCallback(android.media.projection.IMediaProjectionCallback)>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.media.tv.TvTrackInfo: int getVideoWidth()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.SpellChecker: boolean access.400(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glScissor(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.accounts.IAccountManagerResponse.Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureLayers(android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.tv.TvView: void requestUnblockContent(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.MutableBackgroundColorSpan: int getSpanTypeId()>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.animation.LayoutTransition: long access.314(android.animation.LayoutTransition,long)>:<static>:<android.animation.LayoutTransition>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.HwAbsListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.animation.PropertyValuesHolder.PointFToIntArray: java.lang.Object convert(java.lang.Object)>:<public volatile>:<android.animation.PropertyValuesHolder.PointFToIntArray:android.animation.TypeConverter>
<android.view.IWindowManager: void removeWindowToken(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.filterpacks.imageproc.NegativeFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.NegativeFilter:android.filterfw.core.Filter>
<android.media.tv.TvInputManager.Hardware: android.media.tv.ITvInputHardware getInterface()>:<private>:<android.media.tv.TvInputManager.Hardware>
<android.widget.SearchView: void setIconsAndBackgrounds(android.content.res.TypedArray)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.IPrintManager: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.media.tv.TvInputManager.SessionCallbackRecord.6: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.6:java.lang.Runnable>
<android.preference.VolumePreference: void onSampleStarting(android.preference.SeekBarVolumizer)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.security.IKeystoreService: byte[] sign(java.lang.String,byte[])>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.Surface: void setRefreshDirty(android.graphics.Rect)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.widget.MediaController: boolean isShowing()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: char getNumber()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RemoteViews.SetOnClickFillInIntent: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.SetOnClickFillInIntent:android.widget.RemoteViews.Action>
<android.media.MediaCodecInfo.AudioCapabilities: void parseFromInfo(android.media.MediaFormat)>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void set(android.widget.RemoteViews,long)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData>
<android.view.ViewGroup: boolean resetCancelNextUpFlag(android.view.View)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.Animation.Description: void <init>()>:<protected>:<android.view.animation.Animation.Description>
<android.media.Rating: android.media.Rating newHeartRating(boolean)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.database.sqlite.SQLiteStatementInfo: void <init>()>:<public>:<android.database.sqlite.SQLiteStatementInfo>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Space:android.view.View>
<android.animation.TypeConverter: java.lang.Class getSourceType()>:<>:<android.animation.TypeConverter>
<android.media.MediaFocusControl: void dispatchMediaKeyEventForCalls(android.view.KeyEvent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.database.MatrixCursor: short getShort(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.Surface: void readFromParcel(android.os.Parcel)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.IHwViewRootImpl: boolean filterDecorPointerEvent(android.content.Context,android.view.MotionEvent,int,android.view.WindowManager.LayoutParams,android.view.Display)>:<public abstract>:<android.view.IHwViewRootImpl>
<android.view.View: boolean isVerticalScrollBarHidden()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.TwoStatePreference: void <init>(android.content.Context)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.WindowManagerPolicy: void showRecentApps()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.SpellCheckerParams: void <init>(int,android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl.SpellCheckerParams>
<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: void releaseConnection()>:<private>:<android.database.sqlite.SQLiteSession>
<android.view.View: boolean setAlphaNoInvalidation(float)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView.SavedState: void <init>(android.os.Parcel,android.widget.AbsListView.1)>:<>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.media.MediaFormat: void setLong(java.lang.String,long)>:<public final>:<android.media.MediaFormat>
<android.view.IWindowSession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>:<public>:<android.media.MediaCodec>
<android.media.browse.MediaBrowser: void forceCloseConnection()>:<private>:<android.media.browse.MediaBrowser>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postVideoAvailable()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.media.tv.TvView: int access.100(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.widget.SearchView: boolean isIconfiedByDefault()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.IWindowSession.Stub.Proxy: android.view.IWindowId getWindowId(android.os.IBinder)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.IAudioService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>:<public>:<android.media.session.MediaSession>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.IWindowManager: void stopFreezingScreen()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.security.AndroidKeyStore: void engineStore(java.io.OutputStream,char[])>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.widget.DatePickerCalendarDelegate: int getMonth()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>:<public static native>:<android.opengl.GLES11Ext>
<androidhwext.R.raw: void <init>()>:<public>:<androidhwext.R.raw>
<android.view.KeyEvent: boolean isConfirmKey(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView: void dispatchWindowFocusChanged(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.RemoteDisplay: void dispose()>:<public>:<android.media.RemoteDisplay>
<android.widget.GridView: void correctTooLow(int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window: boolean isActive()>:<public final>:<android.view.Window>
<android.accounts.AccountManager.15: void run()>:<public>:<android.accounts.AccountManager.15:java.lang.Runnable>
<android.view.ViewGroup: boolean hasHoveredChild()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvStreamConfig: void <clinit>()>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<android.widget.RemoteViewsAdapter: long getItemId(int)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.service.notification.NotificationRankingUpdate: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.print.PrintDocumentInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: android.view.inputmethod.InputConnection getTarget()>:<private>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.database.CursorWindow: boolean nativePutString(long,java.lang.String,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.TextureView: void onSizeChanged(int,int,int,int)>:<protected>:<android.view.TextureView:android.view.View>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Nsd: boolean isScreenHight(int)>:<public static>:<android.view.Nsd>
<android.media.RemoteController: void access.1400(android.media.RemoteController,int,android.os.Bundle)>:<static>:<android.media.RemoteController>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.RadioGroup.CheckedStateTracker: void <init>(android.widget.RadioGroup,android.widget.RadioGroup.1)>:<>:<android.widget.RadioGroup.CheckedStateTracker:android.widget.CompoundButton.OnCheckedChangeListener>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void <init>(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.AudioManager.1: void dispatchAudioFocusChange(int,java.lang.String)>:<public>:<android.media.AudioManager.1:android.media.IAudioFocusDispatcher.Stub,android.os.Binder>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap getBackwardLinks()>:<private>:<android.widget.GridLayout.Axis>
<android.opengl.GLLogWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void bind(android.content.Context,int,android.content.Intent)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.media.MediaFormat: float getFloat(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.view.InputQueue.ActiveInputEvent: void <init>(android.view.InputQueue)>:<private>:<android.view.InputQueue.ActiveInputEvent>
<android.media.session.MediaSession: void postToCallback(int)>:<private>:<android.media.session.MediaSession>
<android.media.AudioService: int access.2600(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>:<public>:<android.view.ActionProvider>
<android.security.AndroidKeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>:<public>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.media.session.PlaybackState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.InputDevice.MotionRange: float access.400(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.print.PrintJob: boolean isCancelled()>:<public>:<android.print.PrintJob>
<android.media.RemoteDisplayState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.RemoteDisplayState.1:android.os.Parcelable.Creator>
<android.test.InstrumentationTestCase: void runTest()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.service.dreams.IDreamManager: void stopDozing(android.os.IBinder)>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.view.WindowManagerPolicy: int subWindowTypeToLayerLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.CalendarView: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>:<public static>:<android.appwidget.AppWidgetHost>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.service.voice.VoiceInteractionSessionService.1: void <init>(android.service.voice.VoiceInteractionSessionService)>:<>:<android.service.voice.VoiceInteractionSessionService.1:android.service.voice.IVoiceInteractionSessionService.Stub,android.os.Binder>
<android.view.View: boolean isNestedScrollingEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RelativeLayout.DependencyGraph: void <init>(android.widget.RelativeLayout.1)>:<>:<android.widget.RelativeLayout.DependencyGraph>
<android.media.MediaRouter: boolean access.000()>:<static>:<android.media.MediaRouter>
<android.widget.ScrollView: void scrollTo(int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.ViewOutlineProvider.1: void getOutline(android.view.View,android.graphics.Outline)>:<public>:<android.view.ViewOutlineProvider.1:android.view.ViewOutlineProvider>
<android.media.ImageReader: int access.600(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.browse.MediaBrowser.MediaItem: void <clinit>()>:<static>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.tv.TvContract: boolean isChannelUriForTunerInput(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.view.WindowInsets: int getStableInsetBottom()>:<public>:<android.view.WindowInsets>
<android.preference.Preference: android.content.Intent getIntent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,boolean)>:<public>:<android.view.textservice.TextServicesManager>
<android.media.tv.ITvInputManager: void setSurface(android.os.IBinder,android.view.Surface,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.textservice.SuggestionsInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.preference.TwoStatePreference.SavedState: void <clinit>()>:<static>:<android.preference.TwoStatePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvContentRating: boolean contains(android.media.tv.TvContentRating)>:<public final>:<android.media.tv.TvContentRating>
<android.widget.TextView: void setText(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.ITvInputClient.Stub.Proxy: void onChannelRetuned(android.net.Uri,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.database.CursorToBulkCursorAdaptor: void binderDied()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.accounts.AccountManager: void ensureNotOnMainThread()>:<private>:<android.accounts.AccountManager>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.600()>:<static>:<android.animation.LayoutTransition>
<android.view.textservice.SpellCheckerSession: void handleOnGetSuggestionsMultiple(android.view.textservice.SuggestionsInfo[])>:<private>:<android.view.textservice.SpellCheckerSession>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void dispatchFinishTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SearchView.11: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.SearchView.11:android.text.TextWatcher>
<android.media.tv.TvView.TvInputCallback: void onVideoUnavailable(java.lang.String,int)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.accounts.ChooseTypeAndAccountActivity: int getItemIndexToSelect(java.util.ArrayList,java.lang.String,boolean)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.filterpacks.imageproc.DrawRectFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.preference.SeekBarPreference.SavedState: void <clinit>()>:<static>:<android.preference.SeekBarPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>:<public>:<android.media.MediaRecorder>
<android.view.ViewDebug: java.lang.reflect.Field[] getFields(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <init>()>:<private>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.database.sqlite.SQLiteConnectionPool: void cancelConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.opengl.GLES20: void glReleaseShaderCompiler()>:<public static native>:<android.opengl.GLES20>
<android.media.MediaFile: void <init>()>:<public>:<android.media.MediaFile>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleOpenGlTrace(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.Space: void onMeasure(int,int)>:<protected>:<android.widget.Space:android.view.View>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.media.IAudioRoutesObserver: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>:<public abstract>:<android.media.IAudioRoutesObserver:android.os.IInterface>
<android.view.ViewRootImpl: void applyKeepScreenOnFlag(android.view.WindowManager.LayoutParams)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.Display: float[] getSupportedRefreshRates()>:<public>:<android.view.Display>
<android.media.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.DayPickerView: boolean restoreAccessibilityFocus(java.util.Calendar)>:<private>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaFocusControl.DisplayInfoForServer: void binderDied()>:<public>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.media.ClosedCaptionWidget.1: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>:<public>:<android.media.ClosedCaptionWidget.1:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.media.RemoteController: void onNewPendingIntent(int,android.app.PendingIntent)>:<private>:<android.media.RemoteController>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.view.GhostView: void onDetachedFromWindow()>:<protected>:<android.view.GhostView:android.view.View>
<android.widget.Editor: void setEditorHideFlag(int)>:<public>:<android.widget.Editor>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IAudioService.Stub.Proxy: void sendAudioRecordStateChangedIntent(java.lang.String,int,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.printservice.IPrintServiceClient: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.widget.Switch: int getCompoundPaddingRight()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View: android.view.AccessibilityIterators.TextSegmentIterator getIteratorForGranularity(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Nsd: void adjNsd(java.lang.String)>:<static>:<android.view.Nsd>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.session.MediaSession.CallbackMessageHandler: void <init>(android.media.session.MediaSession,android.os.Looper,android.media.session.MediaSession.Callback)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.media.MediaInserter: void insertwithPriority(android.net.Uri,android.content.ContentValues)>:<public>:<android.media.MediaInserter>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.view.LayoutInflater.FactoryMerger:android.view.LayoutInflater.Factory2>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.ViewOutlineProvider.1: void <init>()>:<>:<android.view.ViewOutlineProvider.1:android.view.ViewOutlineProvider>
<android.view.PointerIcon: void <init>(int,android.view.PointerIcon.1)>:<>:<android.view.PointerIcon:android.os.Parcelable>
<android.media.MediaCodec: int native_dequeueInputBuffer(long)>:<private final native>:<android.media.MediaCodec>
<android.view.KeyEvent: void <clinit>()>:<static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrinterDiscoverySession: void access.000(android.print.PrinterDiscoverySession,java.util.List)>:<static>:<android.print.PrinterDiscoverySession>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintSpooler.Stub.Proxy: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.media.session.MediaSession: void access.400(android.media.session.MediaSession,android.content.Intent)>:<static>:<android.media.session.MediaSession>
<android.service.dreams.IDreamService: void wakeUp()>:<public abstract>:<android.service.dreams.IDreamService:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.MediaFocusControl.DisplayInfoForServer: int access.700(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.widget.Editor.TextModifyOperation: void commit()>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getMonth()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.database.sqlite.SQLiteConnection: void detachCancellationSignal(android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glLineWidth(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.GridLayout: void <clinit>()>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.ContextThemeWrapper: void setTheme(int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.media.ClosedCaptionWidget.CCLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.media.ClosedCaptionWidget.CCLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.ImageReader: void setOnImageAvailableListener(android.media.ImageReader.OnImageAvailableListener,android.os.Handler)>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.ScrollView: void onStopNestedScroll(android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.MediaRecorder: void setVideoSource(int)>:<public>:<android.media.MediaRecorder>
<android.preference.Preference: int getLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.session.MediaSessionLegacyHelper: android.os.Bundle getOldMetadata(android.media.MediaMetadata,int,int)>:<public static>:<android.media.session.MediaSessionLegacyHelper>
<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>:<public abstract>:<android.widget.RadioGroup.OnCheckedChangeListener>
<android.widget.ListView: android.view.View fillUp(int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AdapterViewAnimator.1.1: void run()>:<public>:<android.widget.AdapterViewAnimator.1.1:java.lang.Runnable>
<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout.Metrics,int,android.text.Layout.Alignment,boolean,android.text.TextUtils.TruncateAt,boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.effect.effects.ColorTemperatureEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.ColorTemperatureEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.MediaScanner.WplHandler: org.xml.sax.ContentHandler getContentHandler()>:<>:<android.media.MediaScanner.WplHandler:android.sax.ElementListener>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.String,java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.view.View.11: void <init>(java.lang.String)>:<>:<android.view.View.11:android.util.FloatProperty>
<android.widget.DatePicker: void setMaxDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe.ObjectKeyframe clone()>:<public>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.media.AudioDevice: void <clinit>()>:<static>:<android.media.AudioDevice>
<android.media.IAudioService: boolean isSpeakerphoneOn()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ViewPropertyAnimator: float getValue(int)>:<private>:<android.view.ViewPropertyAnimator>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void <init>(android.view.ViewRootImpl)>:<public>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.print.PrintJobId.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusDirection(int)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioTrack.NativeEventHandlerDelegate.1: void <init>(android.media.AudioTrack.NativeEventHandlerDelegate,android.os.Looper,android.media.AudioTrack,android.media.AudioTrack,android.media.AudioTrack.OnPlaybackPositionUpdateListener)>:<>:<android.media.AudioTrack.NativeEventHandlerDelegate.1:android.os.Handler>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.InputDevice.1: android.view.InputDevice[] newArray(int)>:<public>:<android.view.InputDevice.1:android.os.Parcelable.Creator>
<android.media.WebVttParser.4: void <clinit>()>:<static>:<android.media.WebVttParser.4:android.media.WebVttParser.Phase>
<android.database.Cursor: boolean isNull(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.view.View.11: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.11:android.util.FloatProperty>
<android.media.tv.ITvInputManager.Stub.Proxy: void addBlockedRating(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.IWindowSession.Stub.Proxy: boolean outOfMemory(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.audiofx.Visualizer: void finalize()>:<protected>:<android.media.audiofx.Visualizer>
<android.widget.TextClock: java.lang.Runnable access.400(android.widget.TextClock)>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.View: boolean isHardwareAccelerated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: void access.200(huawei.android.app.HwCustEmergDataManagerImpl.FileBackup)>:<static>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>:<public>:<android.appwidget.AppWidgetHost>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.MediaRecorder: android.view.Surface getSurface()>:<public native>:<android.media.MediaRecorder>
<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaFocusControl: boolean pushMediaButtonReceiver_syncPrs(android.app.PendingIntent,android.content.ComponentName,android.os.IBinder)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.SoundPool.SoundPoolImpl: void <init>(android.media.SoundPool,int,android.media.AudioAttributes)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.AudioService.AudioHandler.1: void onCompletion(android.media.MediaPlayer)>:<public>:<android.media.AudioService.AudioHandler.1:android.media.MediaPlayer.OnCompletionListener>
<android.media.session.MediaSession.QueueItem.1: android.media.session.MediaSession.QueueItem createFromParcel(android.os.Parcel)>:<public>:<android.media.session.MediaSession.QueueItem.1:android.os.Parcelable.Creator>
<android.media.session.MediaSession.CallbackStub: void onFastForward()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.media.MediaCodecInfo.AudioCapabilities: void <init>()>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.DayPickerView: void layoutChildren()>:<protected>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.SoundPool.SoundPoolImpl: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.inputmethod.EditorInfo: void <init>()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void tryVibrate()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.accessibility.AccessibilityRecord: void init(android.view.accessibility.AccessibilityRecord)>:<>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.Nsd: boolean isSFReady(int)>:<public static>:<android.view.Nsd>
<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)>:<protected>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>:<public>:<android.media.RemoteControlClient>
<android.view.ThreadedRenderer: void nDumpProfileInfo(long,java.io.FileDescriptor)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.service.dreams.DreamService: void onContentChanged()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.Toolbar.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.Toolbar.OnMenuItemClickListener>
<android.media.ImageReader.SurfaceImage: android.media.Image.Plane[] getPlanes()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>:<public static>:<android.view.ViewConfiguration>
<android.media.RemoteControlClient: void unregisterWithSession(android.media.session.MediaSessionLegacyHelper)>:<public>:<android.media.RemoteControlClient>
<android.widget.NumberPicker.CustomEditText: void onEditorAction(int)>:<public>:<android.widget.NumberPicker.CustomEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.HardwareRenderer: boolean initializeIfNeeded(int,int,android.view.Surface,android.graphics.Rect)>:<>:<android.view.HardwareRenderer>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>:<public>:<android.widget.RadioGroup.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean isNewDate(int,int,int)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.audiopolicy.AudioPolicyConfig: void addMix(android.media.audiopolicy.AudioMix)>:<public>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void recycle()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.AdapterView: int getLastVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.IWindow.Stub.Proxy: void dispatchWallpaperOffsets(float,float,float,float,boolean)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.print.PrinterId: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.database.sqlite.SQLiteSession: void throwIfNestedTransaction()>:<private>:<android.database.sqlite.SQLiteSession>
<android.media.session.PlaybackState.CustomAction: java.lang.String toString()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.media.browse.MediaBrowser: void onServiceConnected(android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<private final>:<android.media.browse.MediaBrowser>
<android.view.ViewRootImpl.HighContrastTextManager: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.HighContrastTextManager:android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener>
<android.opengl.GLES20: void <clinit>()>:<static>:<android.opengl.GLES20>
<android.media.AudioManager: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public>:<android.media.AudioManager>
<android.media.IMediaScannerListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaScannerListener.Stub.Proxy:android.media.IMediaScannerListener>
<android.view.WindowManagerPolicy: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.dreams.IDreamManager.Stub.Proxy: boolean isDreaming()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.widget.RadialTimePickerView: int getDegreesFromXY(float,float)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.IWindowSession: boolean performHapticFeedback(android.view.IWindow,int,boolean)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.accounts.IAccountManager: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.SurfaceControl: void nativeSetMatrix(long,float,float,float,float)>:<private static native>:<android.view.SurfaceControl>
<android.media.MediaDrm.KeyRequest: byte[] getData()>:<public>:<android.media.MediaDrm.KeyRequest>
<android.hsm.HwMediaPermWrapper: void <clinit>()>:<static>:<android.hsm.HwMediaPermWrapper>
<android.media.MediaExtractor: void <clinit>()>:<static>:<android.media.MediaExtractor>
<android.opengl.GLES10: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.DisplayAdjustments: void setActivityToken(android.os.IBinder)>:<public>:<android.view.DisplayAdjustments>
<android.media.AudioService: android.media.AudioService.VolumeStreamState[] access.4500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.TextureView: boolean nLockCanvas(long,android.graphics.Canvas,android.graphics.Rect)>:<private static native>:<android.view.TextureView:android.view.View>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.Spinner.SpinnerPopup: int getVerticalOffset()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: void <init>(android.widget.ActionMenuView)>:<private>:<android.widget.ActionMenuView.ActionMenuPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.TextView: int getAccessibilitySelectionEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodecInfo.AudioCapabilities: boolean supports(java.lang.Integer,java.lang.Integer)>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.session.MediaSession.CallbackMessageHandler: void post(int)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressBackgroundTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaFocusControl: java.lang.Object access.1700()>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void <init>(android.widget.CursorTreeAdapter.MyCursorHelper)>:<public>:<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver:android.database.ContentObserver>
<android.view.DisplayEventReceiver: void nativeDispose(long)>:<private static native>:<android.view.DisplayEventReceiver>
<android.view.RenderNode: boolean setLeft(int)>:<public>:<android.view.RenderNode>
<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.session.MediaSession: void access.300(android.media.session.MediaSession,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<static>:<android.media.session.MediaSession>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] topologicalSort(java.util.List)>:<private>:<android.widget.GridLayout.Axis>
<android.view.HardwareCanvas: int onPreDraw(android.graphics.Rect)>:<public abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.view.View: android.view.RenderNode getDisplayList()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.trust.ITrustAgentServiceCallback.Stub: void <init>()>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub:android.os.Binder,android.service.trust.ITrustAgentServiceCallback>
<android.view.IWindowManager.Stub.Proxy: void overridePendingAppTransitionScaleUp(int,int,int,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.ddm.DdmHandleAppName: void connected()>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpTheme(android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<android.opengl.GLSurfaceView.GLThread: void surfaceDestroyed()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.widget.SearchView: boolean access.1900(android.widget.SearchView,int)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec.CryptoInfo,long,int)>:<public final>:<android.media.MediaCodec>
<android.media.MediaPlayer.OnTimedTextListener: void onTimedText(android.media.MediaPlayer,android.media.TimedText)>:<public abstract>:<android.media.MediaPlayer.OnTimedTextListener>
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.BrightnessFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.View.4: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.4:android.util.FloatProperty>
<android.print.IPrintManager.Stub: android.print.IPrintManager asInterface(android.os.IBinder)>:<public static>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void setupSetterAndGetter(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.media.session.MediaSessionLegacyHelper: void sendAdjustVolumeBy(int,int,int)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.media.MediaSyncEvent: boolean isValidType(int)>:<private static>:<android.media.MediaSyncEvent>
<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>:<public>:<android.media.RemoteControlClient>
<android.view.ViewConfiguration: long getDeviceGlobalActionKeyTimeout()>:<public>:<android.view.ViewConfiguration>
<android.view.Surface: void copyFrom(android.view.SurfaceControl)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine.1: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.service.wallpaper.WallpaperService.Engine.1:android.content.BroadcastReceiver>
<android.media.AudioManager.OnAudioPortUpdateListener: void onAudioPatchListUpdate(android.media.AudioPatch[])>:<public abstract>:<android.media.AudioManager.OnAudioPortUpdateListener>
<android.view.animation.OvershootInterpolator: void <init>()>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onPlay()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.print.PrinterId: int hashCode()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.view.ViewRootImpl.ImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>:<public>:<android.view.ViewRootImpl.ImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.PreferenceActivity.4: void <init>(android.preference.PreferenceActivity)>:<>:<android.preference.PreferenceActivity.4:android.view.View.OnClickListener>
<android.widget.SpellChecker: void resetSession()>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.AnimatorSet: void resume()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLES10: void glDepthRangex(int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityCache: void checkIntegrity()>:<public>:<android.view.accessibility.AccessibilityCache>
<android.service.dreams.DreamService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<android.filterpacks.imageproc.ColorTemperatureFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.view.ViewDebug: void profileViewAndChildren(android.view.View,java.io.BufferedWriter)>:<public static>:<android.view.ViewDebug>
<android.widget.GridLayout: android.widget.GridLayout.Alignment getAlignment(android.widget.GridLayout.Alignment,boolean)>:<final>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.RemoteViews.SetOnClickFillInIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.SetOnClickFillInIntent:android.widget.RemoteViews.Action>
<android.view.GhostView: void setGhostedVisibility(int)>:<private>:<android.view.GhostView:android.view.View>
<android.media.IRemoteControlClient: void setBitmapSizeForDisplay(android.media.IRemoteControlDisplay,int,int)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.opengl.GLLogWrapper: void glClearStencil(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.IAccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.filterpacks.imageproc.AutoFixFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.view.ViewGroup: void onAttachedToWindow()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.LayoutTransition: java.util.LinkedHashMap access.1500(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.tv.TvView.MySessionCallback: void onSessionReleased(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.service.persistentdata.IPersistentDataBlockService: int getDataBlockSize()>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener: void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener>
<android.media.audiofx.AudioEffect: void finalize()>:<protected>:<android.media.audiofx.AudioEffect>
<android.service.notification.IConditionProvider.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.notification.IConditionProvider.Stub:android.os.Binder,android.service.notification.IConditionProvider>
<android.widget.TextView: void onFinishTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.AudioRecord: int getState()>:<public>:<android.media.AudioRecord>
<android.service.fingerprint.FingerprintManager.2: void <init>(android.service.fingerprint.FingerprintManager)>:<>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)>:<private>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.SubtitleController.2: void onLocaleChanged(java.util.Locale)>:<public>:<android.media.SubtitleController.2:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.voice.IVoiceInteractionSessionService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSessionService>
<android.view.GLES20Canvas: void nDrawPoints(long,float[],int,int,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.GridLayout: java.lang.Object[] append(java.lang.Object[],java.lang.Object[])>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticatorResponse:android.os.IInterface>
<android.view.View: int getWindowVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.security.IKeyChainService: void setGrant(int,java.lang.String,boolean)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.view.TextureView: void applyUpdate()>:<private>:<android.view.TextureView:android.view.View>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaFocusControl: java.lang.Object access.1500()>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.tv.ITvInputSessionWrapper.TvInputEventReceiver: void <init>(android.media.tv.ITvInputSessionWrapper,android.view.InputChannel,android.os.Looper)>:<public>:<android.media.tv.ITvInputSessionWrapper.TvInputEventReceiver:android.view.InputEventReceiver>
<android.accounts.IAccountAuthenticator: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.opengl.GLES11: void glPointSizePointerOESBounds(int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioManager: void startBluetoothSco()>:<public>:<android.media.AudioManager>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.MediaPlayer: void updateSurfaceScreenOn()>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.DatePickerCalendarDelegate: int getMinDay()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.AbsListView.RecycleBin: void clearTransientStateViews()>:<>:<android.widget.AbsListView.RecycleBin>
<android.widget.SpellChecker: void addSpellCheckSpan(android.text.Editable,int,int)>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: boolean shouldDelayChildPressedState()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadata.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.MediaMetadata.1:android.os.Parcelable.Creator>
<android.view.View: void clearFocusInternal(android.view.View,boolean,boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer.TimeProvider: void access.1900(android.media.MediaPlayer.TimeProvider)>:<static>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>:<public static>:<android.security.SystemKeyStore>
<android.media.MediaMetadataRetriever: void _setDataSource(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[])>:<private native>:<android.media.MediaMetadataRetriever>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>:<public static>:<android.gesture.GestureLibraries>
<android.view.View: void setSaveFromParentEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.dreams.DreamService.DreamServiceWrapper: void attach(android.os.IBinder,boolean)>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper:android.service.dreams.IDreamService.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodSubtype: int hashCodeInternal(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>:<private static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.service.media.MediaBrowserService.ServiceBinder.4: void <init>(android.service.media.MediaBrowserService.ServiceBinder,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String)>:<>:<android.service.media.MediaBrowserService.ServiceBinder.4:java.lang.Runnable>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter: android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceTextInfoParams getSplitWords(android.view.textservice.TextInfo)>:<private>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.IWriteResultCallback,android.os.ParcelFileDescriptor,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.Display: java.lang.String getAddress()>:<public>:<android.view.Display>
<android.media.MediaRouter.Static: android.media.MediaRouter.RouteInfo makeGlobalRoute(android.media.MediaRouterClientState.RouteInfo)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>:<private>:<android.view.accessibility.AccessibilityCache>
<android.preference.SeekBarVolumizer: void stop()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.database.MatrixCursor: byte[] getBlob(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.View: void resetDisplayList()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputService.Session: void release()>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLErrorWrapper: void glStencilFunc(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaPlayer: void finalize()>:<protected>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData access.1200(android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache)>:<static>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.ImageReader: java.lang.Object access.300(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.TimedText.Justification: void <init>(int,int)>:<public>:<android.media.TimedText.Justification>
<android.widget.Advanceable: void fyiWillBeAdvancedByHostKThx()>:<public abstract>:<android.widget.Advanceable>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener: void onMixStateUpdate(android.media.audiopolicy.AudioMix)>:<>:<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener>
<android.widget.TimePicker.TimePickerDelegate: int getBaseline()>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.media.DecoderCapabilities: int native_get_video_decoder_type(int)>:<private static final native>:<android.media.DecoderCapabilities>
<android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>:<private static>:<android.media.RemoteController>
<android.view.Window: void takeInputQueue(android.view.InputQueue.Callback)>:<public abstract>:<android.view.Window>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>:<public static native>:<android.opengl.EGL14>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.tv.TvInputService.Session: void onRelease()>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.MediaPlayer: android.media.MediaPlayer.OnTimedTextListener access.1600(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioService: boolean access.8400(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView.Marquee: float getMaxFadeScroll()>:<>:<android.widget.TextView.Marquee>
<android.service.voice.VoiceInteractionSessionService.1: void newSession(android.os.IBinder,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSessionService.1:android.service.voice.IVoiceInteractionSessionService.Stub,android.os.Binder>
<android.print.PrintJobInfo: void setCancelling(boolean)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.print.PrintJob: boolean isInImmutableState()>:<private>:<android.print.PrintJob>
<android.media.tv.TvInputInfo.TvInputSettings: void putHiddenTvInputs(android.content.Context,java.util.Set,int)>:<public static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.media.SoundPool: int load(java.lang.String,int)>:<public>:<android.media.SoundPool>
<android.widget.FastScroller: void cancelFling()>:<private>:<android.widget.FastScroller>
<android.view.View: void onFinishTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.MediaController.2: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.MediaController.2:android.view.View.OnTouchListener>
<android.widget.Editor: boolean access.2200(android.widget.Editor,float,float)>:<static>:<android.widget.Editor>
<android.widget.AutoCompleteTextView: void setDropDownDismissedOnCompletion(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.print.PrinterCapabilitiesInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.DisplayEventReceiver: void finalize()>:<protected>:<android.view.DisplayEventReceiver>
<android.view.View: void resetResolvedTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec: void native_release()>:<private final native>:<android.media.MediaCodec>
<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)>:<public final>:<android.preference.GenericInflater>
<android.widget.TextView: int getOffsetAtCoordinate(int,float)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.voice.IVoiceInteractionService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionService>
<android.media.MediaFocusControl.DisplayInfoForServer: void release()>:<public>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.widget.CursorAdapter.MyDataSetObserver: void onChanged()>:<public>:<android.widget.CursorAdapter.MyDataSetObserver:android.database.DataSetObserver>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Scroller: void setFriction(float)>:<public final>:<android.widget.Scroller>
<android.view.View: android.view.View findViewTraversal(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.CalendarView.LegacyCalendarViewDelegate: java.util.Calendar access.1600(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.InputQueue.ActiveInputEvent: void <init>(android.view.InputQueue,android.view.InputQueue.1)>:<>:<android.view.InputQueue.ActiveInputEvent>
<android.media.SubtitleTrack.Cue: void onTime(long)>:<public>:<android.media.SubtitleTrack.Cue>
<android.widget.ListView.FocusSelector: android.widget.ListView.FocusSelector setup(int,int)>:<public>:<android.widget.ListView.FocusSelector:java.lang.Runnable>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.MenuItem: boolean isCheckable()>:<public abstract>:<android.view.MenuItem>
<android.media.projection.IMediaProjection.Stub: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjection.Stub:android.os.Binder,android.media.projection.IMediaProjection>
<android.widget.RelativeLayout.DependencyGraph: void <init>()>:<private>:<android.widget.RelativeLayout.DependencyGraph>
<android.view.View: void scrollBy(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: int access.4200(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioRecord: int native_read_in_short_array(short[],int,int)>:<private final native>:<android.media.AudioRecord>
<android.media.tv.TvView.TvInputCallback: void onTracksChanged(java.lang.String,java.util.List)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.RenderNode: boolean setClipToBounds(boolean)>:<public>:<android.view.RenderNode>
<android.view.HardwareRenderer: void onLayerDestroyed(android.view.HardwareLayer)>:<abstract>:<android.view.HardwareRenderer>
<android.service.persistentdata.PersistentDataBlockManager: void <clinit>()>:<static>:<android.service.persistentdata.PersistentDataBlockManager>
<android.media.audiofx.Visualizer: int setEnabled(boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.media.session.ISessionController: void previous()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.ViewRootImpl: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.KeyCharacterMap: char nativeGetMatch(long,int,char[],int)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.effect.EffectFactory: boolean isEffectSupported(java.lang.String)>:<public static>:<android.media.effect.EffectFactory>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.ConditionProviderService.H: void handleMessage(android.os.Message)>:<public>:<android.service.notification.ConditionProviderService.H:android.os.Handler>
<android.print.PrinterDiscoverySession: boolean isDestroyedNoCheck()>:<private>:<android.print.PrinterDiscoverySession>
<android.widget.RadioGroup: void access.500(android.widget.RadioGroup,int,boolean)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: int getStreamVolume(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.FocusFinderHelper: void <init>(android.view.FocusFinder)>:<public>:<android.view.FocusFinderHelper>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEncryptionRequired()>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewPropertyAnimator.2: void run()>:<public>:<android.view.ViewPropertyAnimator.2:java.lang.Runnable>
<android.printservice.PrintServiceInfo: void <clinit>()>:<static>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.widget.SearchView: void onTextFocusChanged()>:<>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.accounts.AccountManager: android.accounts.IAccountManager access.000(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.database.ContentObserver: void access.000(android.database.ContentObserver,boolean,android.net.Uri,int)>:<static>:<android.database.ContentObserver>
<android.view.Menu: void clear()>:<public abstract>:<android.view.Menu>
<android.media.session.PlaybackState.CustomAction.1: android.media.session.PlaybackState.CustomAction createFromParcel(android.os.Parcel)>:<public>:<android.media.session.PlaybackState.CustomAction.1:android.os.Parcelable.Creator>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void access.800(android.widget.CalendarView.LegacyCalendarViewDelegate,android.widget.AbsListView,int)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.animation.ObjectAnimator: void <init>()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.view.ViewRootImpl: void detachFunctor(long)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLErrorWrapper: void glDrawTexxOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.Nsd: boolean checkAdBlock(android.view.View,java.lang.String)>:<public static>:<android.view.Nsd>
<android.view.View: void setMinimumHeight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec.CryptoInfo: java.lang.String toString()>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.media.AudioService: void saveMusicActiveMs()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.MotionEvent: int nativeGetPointerCount(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.SwitchPreference: void <init>(android.content.Context)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.tv.ITvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.widget.Filter: void filter(java.lang.CharSequence)>:<public final>:<android.widget.Filter>
<android.view.ThreadedRenderer: void detachSurfaceTexture(long)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.View: void offsetTopAndBottom(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IAudioService: void setMasterVolume(int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ThreadedRenderer: void registerAnimatingRenderNode(android.view.RenderNode)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.Editor.HandleView: float getTouchOffsetY()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.accessibility.IAccessibilityManager.Stub: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityManager.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManager>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.GLES20Canvas: void nDrawRect(long,float,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.test.InstrumentationTestCase: void access.000(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean)>:<static>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.netdetect.HwCustNetDetectServiceImpl: void setWebDetectAlarm(java.lang.String,java.lang.String,long)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.FocusRequester: void release()>:<>:<android.media.FocusRequester>
<android.service.fingerprint.FingerprintManager.2: void onRemoved(int)>:<public>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.textservice.SpellCheckerSubtype.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.textservice.SpellCheckerSubtype.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glPointParameterf(int,float)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.MediaMuxer.OutputFormat: void <init>()>:<private>:<android.media.MediaMuxer.OutputFormat>
<android.media.session.ISessionController.Stub.Proxy: int getRatingType()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.database.sqlite.SQLiteDirectCursorDriver: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onPlay()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getShownWeekCount()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.RenderNodeAnimator: long nCreateCanvasPropertyFloatAnimator(long,float)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.effect.SingleFilterEffect: void release()>:<public>:<android.media.effect.SingleFilterEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.IMediaHTTPConnection: java.lang.String getMIMEType()>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.view.View: android.view.animation.Animation getAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteDisplay: void <init>(android.media.RemoteDisplay.Listener,android.os.Handler)>:<private>:<android.media.RemoteDisplay>
<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.DatePickerCalendarDelegate: void setMaxDate(long)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: float getAlpha()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.accounts.AccountManager.AmsTask: void doWork()>:<public abstract>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.SurfaceControl.PhysicalDisplayInfo: java.lang.String toString()>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.media.AudioAttributes.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.AudioAttributes.1:android.os.Parcelable.Creator>
<android.filterpacks.videoproc.BackDropperFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.AnimatorSet: java.util.ArrayList access.300(android.animation.AnimatorSet)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.session.ISessionController: void fastForward()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void destroy()>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putBitmap(java.lang.String,android.graphics.Bitmap)>:<public>:<android.media.MediaMetadata.Builder>
<android.view.ViewRootImpl: boolean debugRefreshDirty()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.notification.ConditionProviderService: void onConnected()>:<public abstract>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.animation.AnimatorSet: void <init>()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.Ringtone: void <init>(android.content.Context,boolean)>:<public>:<android.media.Ringtone>
<android.service.notification.IConditionListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.notification.IConditionListener.Stub.Proxy:android.service.notification.IConditionListener>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void <init>(java.util.Locale,android.view.AccessibilityIterators.1)>:<>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Editor: android.text.method.WordIterator getWordIterator()>:<public>:<android.widget.Editor>
<android.view.animation.Animation.1: void <init>(android.view.animation.Animation)>:<>:<android.view.animation.Animation.1:java.lang.Runnable>
<android.animation.ValueAnimator: void start()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.security.IKeystoreService.Stub.Proxy: java.lang.String[] saw(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.database.sqlite.SQLiteCursor: void finalize()>:<protected>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.AsyncPlayer: android.media.AsyncPlayer.Thread access.402(android.media.AsyncPlayer,android.media.AsyncPlayer.Thread)>:<static>:<android.media.AsyncPlayer>
<android.widget.CalendarView: boolean getShowWeekNumber()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>:<public final>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.IAssetAtlas.Stub: android.view.IAssetAtlas asInterface(android.os.IBinder)>:<public static>:<android.view.IAssetAtlas.Stub:android.os.Binder,android.view.IAssetAtlas>
<android.media.effect.FilterEffect: java.lang.String getName()>:<public>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.media.MediaCodec: void <init>(java.lang.String,boolean,boolean)>:<private>:<android.media.MediaCodec>
<android.security.KeyChain.1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.security.KeyChain.1:android.content.ServiceConnection>
<android.database.sqlite.SQLiteConnection.OperationLog: android.database.sqlite.SQLiteConnection.Operation getOperationLocked(int)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.AnimationSet: void setDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.ViewDebug.1: void <init>(android.view.View)>:<>:<android.view.ViewDebug.1:java.lang.Runnable>
<android.view.WindowManagerPolicy.WindowState: int getOwningUid()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.ViewDebug: boolean dumpView(android.content.Context,android.view.View,java.io.BufferedWriter,int,boolean)>:<private static>:<android.view.ViewDebug>
<android.widget.Editor.HandleView: int getCurrentCursorOffset()>:<public abstract>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>:<public>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.view.SurfaceView.MyWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.hsm.HwCameraPermWrapper: void confirmPermission()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.security.KeyStore: boolean passwordUid(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.media.ToneGenerator: void native_setup(int,int)>:<private final native>:<android.media.ToneGenerator>
<android.view.View.SendViewScrolledAccessibilityEvent: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.SendViewScrolledAccessibilityEvent:java.lang.Runnable>
<android.view.ViewGroup: void resetResolvedDrawables()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.effect.EffectContext: void restoreGLState()>:<final>:<android.media.effect.EffectContext>
<android.database.sqlite.SQLiteSession: boolean hasNestedTransaction()>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.AudioRecord: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.AudioRecord>
<android.print.IPrintManager: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.service.wallpaper.WallpaperService.Engine: void doDisplayPaddingChanged(android.graphics.Rect)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.GridLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.AudioPort: int role()>:<public>:<android.media.AudioPort>
<android.media.audiofx.Equalizer: void usePreset(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.print.PageRange: int describeContents()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.service.trust.ITrustAgentService.Stub.Proxy: void onUnlockAttempt(boolean)>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.widget.AbsListView.InputConnectionWrapper: boolean setSelection(int,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.InputDevice: java.lang.String toString()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.print.IPrintManager: void cancelPrintJob(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.accessibility.AccessibilityNodeInfo.1:android.os.Parcelable.Creator>
<android.media.session.MediaController.TransportControls: void stop()>:<public>:<android.media.session.MediaController.TransportControls>
<android.opengl.GLES30: boolean glIsSampler(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.MotionEvent: boolean isWithinBoundsNoHistory(float,float,float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.view.Window.Callback: void onDetachedFromWindow()>:<public abstract>:<android.view.Window.Callback>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaScanner.MyMediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.security.KeyChain.AliasResponse: void <init>(android.security.KeyChainAliasCallback,android.security.KeyChain.1)>:<>:<android.security.KeyChain.AliasResponse:android.security.IKeyChainAliasCallback.Stub,android.os.Binder>
<android.service.dreams.DreamService.1: void <init>(android.service.dreams.DreamService)>:<>:<android.service.dreams.DreamService.1:java.lang.Runnable>
<android.view.GraphicBuffer: long nCreateGraphicBuffer(int,int,int,int)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.Editor.ActionPopupWindow: void directlyShow()>:<public>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.ListView: android.view.View moveSelection(android.view.View,android.view.View,int,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glRenderbufferStorageOES(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteGroup getGroup()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: void setOemUnlockEnabled(boolean)>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getMetaData()>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.MultiCheckPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MotionEvent: void setLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ActionMenuView: int getPopupTheme()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.security.AndroidKeyStore: java.util.Date engineGetCreationDate(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.inputmethod.CursorAnchorInfo: int hashCode()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.preference.RingtonePreference: boolean getShowDefault()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.MagnificationSpec: android.view.MagnificationSpec obtain(android.view.MagnificationSpec)>:<public static>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.widget.AdapterView: void removeView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.session.PlaybackState.Builder: void <init>(android.media.session.PlaybackState)>:<public>:<android.media.session.PlaybackState.Builder>
<android.media.MediaDrm: boolean verifyNative(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<private static final native>:<android.media.MediaDrm>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>:<public>:<android.accounts.AccountManager>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.View: int getId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: boolean isAfMusicActiveRecently(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaScanner: android.net.Uri access.1800(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.preference.SeekBarVolumizer: void postStopSample()>:<>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.View: boolean isShown()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.JetPlayer: void <init>()>:<private>:<android.media.JetPlayer>
<android.view.Nsd: void processCase(android.view.View,android.view.HardwareCanvas)>:<public static>:<android.view.Nsd>
<android.filterpacks.videosrc.MediaSource.2: void onPrepared(android.media.MediaPlayer)>:<public>:<android.filterpacks.videosrc.MediaSource.2:android.media.MediaPlayer.OnPreparedListener>
<android.view.Window: void setDefaultIcon(int)>:<public>:<android.view.Window>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.OnParameterChangeListener access.200(android.media.audiofx.AudioEffect)>:<static>:<android.media.audiofx.AudioEffect>
<android.database.AbstractWindowedCursor: void clearOrCreateWindow(java.lang.String)>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.FastScroller: void refreshDrawablePressedState()>:<private>:<android.widget.FastScroller>
<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.DrawOverlayFilter:android.filterfw.core.Filter>
<android.media.MediaRouter.RouteGroup: void removeRoute(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.widget.GridLayout: int getMeasurementIncludingMargin(android.view.View,boolean)>:<final>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>:<public abstract>:<android.view.LayoutInflater.Filter>
<android.print.PrintAttributes.MediaSize: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.MediaSize>
<android.view.AccessibilityIterators.WordTextSegmentIterator: boolean isEndBoundary(int)>:<private>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.EditText: void selectAll()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.opengl.GLLogWrapper: void glDepthRangef(float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl.ViewPostImeInputStage: int processGenericMotionEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.widget.TextView: void startMarquee()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasForegroundColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.widget.DatePickerCalendarDelegate: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.PopupWindow.1: void <init>(android.widget.PopupWindow)>:<>:<android.widget.PopupWindow.1:android.view.ViewTreeObserver.OnScrollChangedListener>
<android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>:<public static>:<android.service.notification.Condition:android.os.Parcelable>
<android.media.FaceDetector: void fft_get_face(android.media.FaceDetector.Face,int)>:<private native>:<android.media.FaceDetector>
<android.media.MediaScanner.WplHandler: void <init>(android.media.MediaScanner,java.lang.String,android.net.Uri,android.database.Cursor)>:<public>:<android.media.MediaScanner.WplHandler:android.sax.ElementListener>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>:<public>:<android.view.SurfaceView:android.view.View>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.netdetect.HwCustNetDetectServiceImpl: android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask access.102(android.netdetect.HwCustNetDetectServiceImpl,android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: boolean isViewTransitioning(android.view.View)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.Renderer access.1000(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ScrollBarDrawable: void setAlpha(int)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.View: void setDrawingCacheBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FastScroller.4: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.widget.FastScroller.4:android.util.IntProperty>
<android.widget.VideoView: void <init>(android.content.Context)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.gesture.Prediction: void <init>(java.lang.String,double)>:<>:<android.gesture.Prediction>
<android.media.tv.ITvInputManager: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.browse.MediaBrowser: void onLoadChildren(android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.content.pm.ParceledListSlice)>:<private final>:<android.media.browse.MediaBrowser>
<android.widget.AbsListView.RecycleBin: boolean shouldRecycleViewType(int)>:<public>:<android.widget.AbsListView.RecycleBin>
<android.media.ClosedCaptionWidget.1: void <init>(android.media.ClosedCaptionWidget)>:<>:<android.media.ClosedCaptionWidget.1:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.ViewGroup: void resetResolvedLayoutDirection()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.trust.ITrustAgentService.Stub.Proxy: void onTrustTimeout()>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.audiofx.AudioEffect: boolean isError(int)>:<public static>:<android.media.audiofx.AudioEffect>
<android.media.JetPlayer: void finalize()>:<protected>:<android.media.JetPlayer>
<android.media.audiofx.AudioEffect: java.lang.Object[] native_query_effects()>:<private static native>:<android.media.audiofx.AudioEffect>
<android.service.notification.ConditionProviderService: void onSubscribe(android.net.Uri)>:<public abstract>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.DisplayEventReceiver: void dispatchHotplug(long,int,boolean)>:<private>:<android.view.DisplayEventReceiver>
<android.media.IAudioService: void forceVolumeControlStream(int,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.TtmlTrack: android.media.TtmlRenderingWidget getRenderingWidget()>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLSurfaceView.GLThreadManager: void <init>(android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void connect(java.lang.String)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.widget.GridLayout: boolean isColumnOrderPreserved()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MiniThumbFile: long getMagic(long)>:<public>:<android.media.MiniThumbFile>
<android.view.Surface.1: void <init>()>:<>:<android.view.Surface.1:android.os.Parcelable.Creator>
<android.preference.ListPreference: void setEntryValues(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)>:<public>:<android.media.effect.effects.BackDropperEffect:android.media.effect.FilterGraphEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.tv.TvView: void removeSessionOverlayView()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void <clinit>()>:<static>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.accessibility.CaptioningManager.1: void onChange(boolean,android.net.Uri)>:<public>:<android.view.accessibility.CaptioningManager.1:android.database.ContentObserver>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeyType(java.lang.String)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.database.CursorWindow: boolean putNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.EGL14: boolean eglWaitGL()>:<public static native>:<android.opengl.EGL14>
<android.view.IApplicationToken.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.appwidget.AppWidgetManager: void <init>(android.content.Context,com.android.internal.appwidget.IAppWidgetService)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.SurfaceControl: void closeTransaction()>:<public static>:<android.view.SurfaceControl>
<android.media.RemoteControlClient.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.RemoteControlClient.EventHandler:android.os.Handler>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.PathInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk captureView(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.ClosedCaptionWidget.CCLineBox: void drawEdgeRaisedOrDepressed(android.graphics.Canvas)>:<private>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.media.session.IActiveSessionsListener.Stub.Proxy: void onActiveSessionsChanged(java.util.List)>:<public>:<android.media.session.IActiveSessionsListener.Stub.Proxy:android.media.session.IActiveSessionsListener>
<android.view.WindowInfo: void clear()>:<private>:<android.view.WindowInfo:android.os.Parcelable>
<android.view.MenuItem: int getItemId()>:<public abstract>:<android.view.MenuItem>
<android.accounts.AccountAuthenticatorResponse: void <clinit>()>:<static>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)>:<public>:<android.media.MediaMetadataEditor>
<android.print.PrinterCapabilitiesInfo: int hashCode()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.MediaRouter.Static: void updatePresentationDisplays(int)>:<private>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.ViewRootImpl: boolean ensureTouchMode(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.TextView: android.graphics.Typeface getTypeface()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.PreferenceManager: android.app.Activity getActivity()>:<>:<android.preference.PreferenceManager>
<android.print.IPrintDocumentAdapter: void setObserver(android.print.IPrintDocumentAdapterObserver)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.view.WindowManagerInternal: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal.WindowsForAccessibilityCallback)>:<public abstract>:<android.view.WindowManagerInternal>
<android.animation.AnimatorSet: java.lang.Object clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.ViewGroup: int dipsToPixels(int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.voice.VoiceInteractionSession.Request: void <init>(com.android.internal.app.IVoiceInteractorCallback,android.service.voice.VoiceInteractionSession)>:<>:<android.service.voice.VoiceInteractionSession.Request>
<android.print.PageRange: void <clinit>()>:<static>:<android.print.PageRange:android.os.Parcelable>
<android.widget.FastScroller: void layoutThumb()>:<private>:<android.widget.FastScroller>
<android.security.KeyStore: boolean isUnlocked()>:<public>:<android.security.KeyStore>
<android.opengl.GLLogWrapper: void glColor4x(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaActionSound: void <init>()>:<public>:<android.media.MediaActionSound>
<android.media.WebVttParser.4: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.4:android.media.WebVttParser.Phase>
<android.security.IKeystoreService: long getmtime(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.media.projection.IMediaProjectionWatcherCallback.Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>:<public static>:<android.media.projection.IMediaProjectionWatcherCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionWatcherCallback>
<android.filterpacks.imageproc.CropFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.CropFilter:android.filterfw.core.Filter>
<android.media.RemoteDisplay.1: void <init>(android.media.RemoteDisplay,android.view.Surface,int,int,int,int)>:<>:<android.media.RemoteDisplay.1:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glMultMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.PointerIcon.1: void <init>()>:<>:<android.view.PointerIcon.1:android.os.Parcelable.Creator>
<android.widget.ListView.FocusSelector: void run()>:<public>:<android.widget.ListView.FocusSelector:java.lang.Runnable>
<android.database.CursorWindow: void <init>(android.os.Parcel,android.database.CursorWindow.1)>:<>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.ThreadedRenderer: void buildLayer(android.view.RenderNode)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>:<public static>:<android.view.inputmethod.InputMethodManager>
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.content.Context,int)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.media.audiofx.Visualizer: int setScalingMode(int)>:<public>:<android.media.audiofx.Visualizer>
<android.media.AsyncPlayer: void enqueueLocked(android.media.AsyncPlayer.Command)>:<private>:<android.media.AsyncPlayer>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.print.PrintDocumentAdapter: void onFinish()>:<public>:<android.print.PrintDocumentAdapter>
<android.view.ViewStub: void onMeasure(int,int)>:<protected>:<android.view.ViewStub:android.view.View>
<android.print.IPrintDocumentAdapter.Stub: void <init>()>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.effect.Effect: java.lang.String getName()>:<public abstract>:<android.media.effect.Effect>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.animation.Keyframes: void invalidateCache()>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.view.MotionEvent: void nativeTransform(long,android.graphics.Matrix)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaFocusControl: void dumpRCCStack(java.io.PrintWriter)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.filterpacks.base.CallbackFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.CallbackFilter:android.filterfw.core.Filter>
<android.view.IWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.animation.ValueAnimator: int getCurrentAnimationsCount()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.ddm.DdmHandleHeap: void register()>:<public static>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.TextView: void setMinWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean awakenScrollBars(int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ResolveInfo buildDummyResolveInfo(java.lang.String,java.lang.String,java.lang.CharSequence)>:<private static>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityInteractionClient: void checkFindAccessibilityNodeInfoResultIntegrity(java.util.List)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.IWindowManager: int getInitialDisplayDensity(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.MediaScanner: void finalize()>:<protected>:<android.media.MediaScanner>
<android.view.animation.Animation: void scaleCurrentDuration(float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.widget.RemoteViewsListAdapter: long getItemId(int)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)>:<protected>:<android.widget.Editor>
<android.widget.TimePickerSpinnerDelegate: boolean processKeyUp(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.tv.ITvInputSession: void setSurface(android.view.Surface)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.view.GLES20Canvas: int getMaximumBitmapHeight()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.GLES20Canvas: void nDrawBitmapMesh(long,long,byte[],int,int,float[],int,int[],int,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioAttributes.1: void <init>()>:<>:<android.media.AudioAttributes.1:android.os.Parcelable.Creator>
<android.widget.DatePickerCalendarDelegate: int[] getMonthDayYearIndexes(java.lang.String)>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.Editor.CorrectionHighlighter: boolean updatePaint()>:<private>:<android.widget.Editor.CorrectionHighlighter>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: int getCount()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.netdetect.HwCustNetDetectServiceImpl.1: void onSuccess()>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.preference.DialogPreference: boolean needInputMethod()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.GridLayout.Spec: void <init>(boolean,int,int,android.widget.GridLayout.Alignment,float)>:<private>:<android.widget.GridLayout.Spec>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.service.media.IMediaBrowserService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.media.IMediaBrowserService.Stub:android.os.Binder,android.service.media.IMediaBrowserService>
<android.media.RingtoneManager: int inferStreamType()>:<public>:<android.media.RingtoneManager>
<android.view.MenuItem: void setShowAsAction(int)>:<public abstract>:<android.view.MenuItem>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetInitialHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.Gallery: int computeHorizontalScrollOffset()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.tv.ITvInputManager: void createOverlayView(android.os.IBinder,android.os.IBinder,android.graphics.Rect,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.IRemoteControlClient.Stub.Proxy: void updateMetadata(int,int,android.media.Rating)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.view.FocusFinder.SequentialFocusComparator: void setIsLayoutRtl(boolean)>:<public>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.view.inputmethod.CorrectionInfo: int getOffset()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioTrack: int getPlaybackHeadPosition()>:<public>:<android.media.AudioTrack>
<android.filterpacks.imageproc.FillLightFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.ImageReader: int nativeImageSetup(android.media.Image)>:<private synchronized native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.TtmlTrack: void updateView(java.util.Vector)>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,int[][])>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.View: boolean isVisibleToUser(android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RemoteViewsAdapter: void access.300(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.RemoteViewsAdapter: java.lang.ref.WeakReference access.500(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.R.fraction: void <init>()>:<public>:<android.R.fraction>
<android.widget.RelativeLayout: int getBaseline()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.session.IActiveSessionsListener.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.IActiveSessionsListener.Stub:android.os.Binder,android.media.session.IActiveSessionsListener>
<android.view.KeyEvent: boolean isMetaPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextClock: void onTimeChanged()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.security.KeyChainException: void <init>(java.lang.Throwable)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.tv.TvView.MySessionCallback: void onSessionCreated(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.MediaRecorder: void setMaxDuration(int)>:<public native>:<android.media.MediaRecorder>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: void onHeaderClick(android.preference.PreferenceActivity.Header,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.CCParser: boolean handlePACCode(android.media.CCParser.CCData)>:<private>:<android.media.CCParser>
<android.view.ViewStub: void <init>(android.content.Context)>:<public>:<android.view.ViewStub:android.view.View>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewDebug: void <clinit>()>:<static>:<android.view.ViewDebug>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources.Theme,org.xmlpull.v1.XmlPullParser)>:<private static>:<android.view.animation.AnimationUtils>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo build()>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.audiopolicy.AudioPolicyConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.audiopolicy.AudioPolicyConfig.1:android.os.Parcelable.Creator>
<android.view.GLES20Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.Ringtone: void setUri(android.net.Uri)>:<public>:<android.media.Ringtone>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.animation.ValueAnimator: void setAllowRunningAsynchronously(boolean)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.TextView: boolean isTextSelectable()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PrintAttributes.Margins: int hashCode()>:<public>:<android.print.PrintAttributes.Margins>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void calculateValue(float)>:<>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.view.View: long getDrawingTime()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession: void access.1100(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.database.AbstractCursor: int getCount()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.IWindowManager.Stub.Proxy: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.animation.Animation: android.view.animation.Animation clone()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.session.ISessionManager: boolean isGlobalPriorityActive()>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Editor.CorrectionHighlighter: void <init>(android.widget.Editor)>:<public>:<android.widget.Editor.CorrectionHighlighter>
<android.media.tv.TvInputManager.Session: void <init>(android.os.IBinder,android.view.InputChannel,android.media.tv.ITvInputManager,int,int,android.util.SparseArray)>:<private>:<android.media.tv.TvInputManager.Session>
<android.opengl.GLLogWrapper: void glColorMask(boolean,boolean,boolean,boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewOutlineProvider.3: void <init>()>:<>:<android.view.ViewOutlineProvider.3:android.view.ViewOutlineProvider>
<android.media.AudioService: boolean access.9000(android.media.AudioService,boolean,int,java.lang.String)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.voice.IVoiceInteractionSession.Stub: void <init>()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSession>
<android.media.RemoteControlClient.1: void <init>(android.media.RemoteControlClient)>:<>:<android.media.RemoteControlClient.1:android.media.session.MediaSession.Callback>
<android.view.GraphicBuffer: void nDestroyGraphicBuffer(long)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.media.AudioRoutesInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.AudioRoutesInfo.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.widget.RemoteViews.ViewGroupAction: void updateMemoryUsageEstimate(android.widget.RemoteViews.MemoryUsageCounter)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDrm: android.media.MediaDrm.Certificate provideProvisionResponseNative(byte[])>:<private native>:<android.media.MediaDrm>
<android.view.RenderNodeAnimator: void checkMutable()>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.filterpacks.imageproc.ImageStitcher: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ImageStitcher:android.filterfw.core.Filter>
<android.widget.GridLayout.3: int getGravityOffset(android.view.View,int)>:<>:<android.widget.GridLayout.3:android.widget.GridLayout.Alignment>
<android.opengl.GLLogWrapper: void glLightModelx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Switch: int getSwitchPadding()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaRouter.UserRouteInfo: void <init>(android.media.MediaRouter.RouteCategory)>:<>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.DatePickerCalendarDelegate: void updateDate(int,int,int)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.TtmlUtils: void extractText(android.media.TtmlNode,long,long,java.lang.StringBuilder,boolean)>:<private static>:<android.media.TtmlUtils>
<android.widget.Toast.TN: void hide()>:<public>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.view.AbsSavedState.2: android.view.AbsSavedState[] newArray(int)>:<public>:<android.view.AbsSavedState.2:android.os.Parcelable.Creator>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.Settings getProperties()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.Window: int getNavigationBarColor()>:<public abstract>:<android.view.Window>
<android.view.Window: void setUiOptions(int,int)>:<public>:<android.view.Window>
<android.view.inputmethod.InputMethodSubtypeArray: byte[] decompress(byte[],int)>:<private static>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.gesture.GestureStore: void <init>()>:<public>:<android.gesture.GestureStore>
<android.preference.MultiCheckPreference: void setEntryValues(int)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewRootImpl.NativePostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.NativePostImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.media.AudioService.LoadSoundEffectReply: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.LoadSoundEffectReply>
<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.filterpacks.base.OutputStreamTarget: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.OutputStreamTarget:android.filterfw.core.Filter>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.view.GLES20Canvas: boolean nGetClipBounds(long,android.graphics.Rect)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: void setTagInternal(int,java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioRecord: void startRecording(android.media.MediaSyncEvent)>:<public>:<android.media.AudioRecord>
<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider.OnMediaTimeListener)>:<public abstract>:<android.media.MediaTimeProvider>
<android.print.ILayoutResultCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected>:<android.widget.CursorFilter:android.widget.Filter>
<android.widget.DatePickerCalendarDelegate.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.DatePickerCalendarDelegate.SavedState.1:android.os.Parcelable.Creator>
<android.widget.GridView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.AdapterViewAnimator: void configureViewAnimator(int,int)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.projection.MediaProjection: void registerCallback(android.media.projection.MediaProjection.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.accessibility.AccessibilityCache: void clearNodesForWindowLocked(int)>:<private>:<android.view.accessibility.AccessibilityCache>
<android.animation.Keyframe.IntKeyframe: int getIntValue()>:<public>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureLibrary>
<android.widget.Gallery.FlingRunnable: void endFling(boolean)>:<private>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>:<public>:<android.media.MediaMetadataEditor>
<android.media.tv.ITvInputManagerCallback: void onInputAdded(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputManagerCallback:android.os.IInterface>
<android.view.View.BaseSavedState.1: android.view.View.BaseSavedState createFromParcel(android.os.Parcel)>:<public>:<android.view.View.BaseSavedState.1:android.os.Parcelable.Creator>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(java.lang.String,java.lang.String,int)>:<public>:<android.media.session.PlaybackState.Builder>
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.Animator: void addPauseListener(android.animation.Animator.AnimatorPauseListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.accounts.IAccountAuthenticator.Stub: void <init>()>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getMinDate()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLErrorWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.animation.GridLayoutAnimationController: int getDirection()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.widget.TextView: int getHorizontalOffsetForDrawables()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.IAccountManagerResponse.Stub.Proxy: void onResult(android.os.Bundle)>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.media.tv.ITvInputClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.database.CursorWindow: long nativeCreateFromParcel(android.os.Parcel)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.gesture.GestureLibrary: boolean isReadOnly()>:<public>:<android.gesture.GestureLibrary>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.DayPickerView: void onDateChanged()>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.media.AudioService: boolean hasRmtSbmxFullVolDeathHandlerFor(android.os.IBinder)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: boolean scrollToChild(int)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.MediaDrm: void unprovisionDevice()>:<public native>:<android.media.MediaDrm>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getFirstDayOfWeek()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.HardwareRenderer: boolean initialize(android.view.Surface)>:<abstract>:<android.view.HardwareRenderer>
<android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusReappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView.InvalidateUpdateListener,float,float)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.AudioFormat: int channelCountFromOutChannelMask(int)>:<public static>:<android.media.AudioFormat>
<android.media.tv.ITvInputService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.animation.PropertyValuesHolder: long nGetIntMethod(java.lang.Class,java.lang.String)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.AbsListView.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.CursorWindow: java.lang.String nativeGetName(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.JankSqlite: boolean addExecsql(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.media.MediaRouter.WifiDisplayStatusChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.media.MediaRouter.WifiDisplayStatusChangedReceiver:android.content.BroadcastReceiver>
<android.print.PrintJobInfo: android.os.Bundle access.302(android.print.PrintJobInfo,android.os.Bundle)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.AudioManager.FocusEventHandlerDelegate.1: void <init>(android.media.AudioManager.FocusEventHandlerDelegate,android.os.Looper,android.media.AudioManager)>:<>:<android.media.AudioManager.FocusEventHandlerDelegate.1:android.os.Handler>
<android.netdetect.HwCustNetDetectServiceDummy: void <init>(android.content.Context)>:<public>:<android.netdetect.HwCustNetDetectServiceDummy:android.netdetect.NetDetectService>
<android.media.MediaFocusControl: void setNewRcClientGenerationOnClients_syncRcsCurrc(int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.PlayerRecord: void resetControllerInfoForRcc(android.media.IRemoteControlClient,java.lang.String,int)>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.JetPlayer: boolean native_queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>:<private final native>:<android.media.JetPlayer>
<android.print.PrintAttributes.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.security.IKeyChainService.Stub.Proxy: android.content.pm.ParceledListSlice getUserCaAliases()>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.service.dreams.DreamService: boolean isLowProfile()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.tv.TvInputManager.Hardware: void <init>(android.media.tv.ITvInputHardware)>:<private>:<android.media.tv.TvInputManager.Hardware>
<android.view.inputmethod.InputMethodManager: void access.400(android.view.inputmethod.InputMethodManager,android.view.inputmethod.InputMethodManager.PendingEvent)>:<static>:<android.view.inputmethod.InputMethodManager>
<android.view.SurfaceControl: boolean clearAnimationFrameStats()>:<public static>:<android.view.SurfaceControl>
<android.media.session.MediaController: void postMessage(int,java.lang.Object,android.os.Bundle)>:<private final>:<android.media.session.MediaController>
<android.view.WindowManagerPolicy.WindowState: boolean showLw(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>:<public>:<android.media.session.MediaSessionManager>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.view.IWindowManager.Stub.Proxy: void setForcedDisplayDensity(int,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()>:<protected>:<android.media.effect.FilterEffect:android.media.effect.Effect>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>:<public abstract>:<android.view.MenuItem>
<android.widget.MediaController: void show()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>:<public>:<android.media.MediaMetadataEditor>
<android.view.IWindowManager: void removeRotationWatcher(android.view.IRotationWatcher)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.tv.ITvInputManager.Stub.Proxy: java.util.List getTvContentRatingSystemList(int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.filterpacks.numeric.SinWaveFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.numeric.SinWaveFilter:android.filterfw.core.Filter>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.widget.GridLayout: boolean getUseDefaultMargins()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.InputEventSender: void finalize()>:<protected>:<android.view.InputEventSender>
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()>:<public>:<android.view.Window>
<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView.OnMenuItemClickListener)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.WindowId.FocusObserver: void <init>()>:<public>:<android.view.WindowId.FocusObserver>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaScanner: boolean access.100(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int)>:<private>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.media.RemoteControlClient: void onUpdateMetadata(int,int,java.lang.Object)>:<private>:<android.media.RemoteControlClient>
<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.widget.ActionMenuPresenter: boolean flagActionItems()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.SoundPool.SoundPoolImpl: int play(int,float,float,int,int,float)>:<public final>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.AudioManager>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.database.DataSetObservable: void notifyChanged()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.animation.ValueAnimator: void reverse()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.IMediaScannerService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaScannerService.Stub.Proxy:android.media.IMediaScannerService>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>:<private static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.service.notification.ConditionProviderService.H: void <init>(android.service.notification.ConditionProviderService)>:<private>:<android.service.notification.ConditionProviderService.H:android.os.Handler>
<android.view.ViewRootImpl.ViewPostImeInputStage: int processTrackballEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.SubtitleTrack: java.lang.Runnable access.102(android.media.SubtitleTrack,java.lang.Runnable)>:<static>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.database.CursorToBulkCursorAdaptor: void close()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.view.GLES20Canvas: void nDrawRoundRect(long,long,long,long,long,long,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.AdapterView: void selectionChanged()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void start()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.security.AndroidKeyStore: boolean engineIsKeyEntry(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.View: float getRightFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.persistentdata.IPersistentDataBlockService: void setOemUnlockEnabled(boolean)>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.widget.FastScroller: void postAutoHide()>:<private>:<android.widget.FastScroller>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.widget.DatePickerCalendarDelegate.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.DatePickerCalendarDelegate.SavedState.1:android.os.Parcelable.Creator>
<android.media.IRingtonePlayer: boolean isPlaying(android.os.IBinder)>:<public abstract>:<android.media.IRingtonePlayer:android.os.IInterface>
<android.print.PrintAttributes: void enforceValidColorMode(int)>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.database.BulkCursorProxy: void deactivate()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.view.InputDevice: void addMotionRange(int,int,float,float,float,float,float)>:<private>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.Switch: android.text.Layout makeLayout(java.lang.CharSequence)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.tv.TvContentRatingSystemInfo.1: android.media.tv.TvContentRatingSystemInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvContentRatingSystemInfo.1:android.os.Parcelable.Creator>
<android.media.projection.IMediaProjectionCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionCallback.Stub.Proxy:android.media.projection.IMediaProjectionCallback>
<android.media.MediaPlayer.TimeProvider: void onStopped()>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.GLES20Canvas: void nSkew(long,float,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.RemoteController.TopTransportSessionListener: void onActiveSessionsChanged(java.util.List)>:<public>:<android.media.RemoteController.TopTransportSessionListener:android.media.session.MediaSessionManager.OnActiveSessionsChangedListener>
<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.Editor.SuggestionsPopupWindow: void show()>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.media.session.PlaybackState: long getActiveQueueItemId()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.inputmethod.CursorAnchorInfo.Builder: void reset()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.filterpacks.imageproc.ResizeFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ResizeFilter:android.filterfw.core.Filter>
<android.widget.ImageButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.media.RemoteController: void access.1300(android.media.RemoteController,int,int)>:<static>:<android.media.RemoteController>
<android.media.AsyncPlayer: void access.200(android.media.AsyncPlayer,android.media.AsyncPlayer.Command)>:<static>:<android.media.AsyncPlayer>
<android.media.SubtitleController.1: boolean handleMessage(android.os.Message)>:<public>:<android.media.SubtitleController.1:android.os.Handler.Callback>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.AnimatorSetListener:android.animation.Animator.AnimatorListener>
<android.database.MatrixCursor: float getFloat(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onSkipToPrevious()>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AccountManager>
<android.animation.Keyframe: void setFraction(float)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.filterpacks.imageproc.LomoishFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.AudioManager: java.lang.Object access.000(android.media.AudioManager)>:<static>:<android.media.AudioManager>
<android.media.AudioService.AudioHandler: void handleMessage(android.os.Message)>:<public>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.widget.GridView: void adjustViewsUpOrDown()>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.browse.MediaBrowser: android.os.Bundle access.902(android.media.browse.MediaBrowser,android.os.Bundle)>:<static>:<android.media.browse.MediaBrowser>
<android.media.IRemoteControlDisplay: void setCurrentClientId(int,android.app.PendingIntent,boolean)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaDrm.KeyRequest: java.lang.String getDefaultUrl()>:<public>:<android.media.MediaDrm.KeyRequest>
<android.media.JetPlayer: void logd(java.lang.String)>:<private static>:<android.media.JetPlayer>
<android.filterpacks.videosrc.SurfaceTextureSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.View: int resolveSizeAndState(int,int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AuthenticatorDescription: int describeContents()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.preference.MultiSelectListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup: void onChildVisibilityChanged(android.view.View,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Metadata: double getDouble(int)>:<public>:<android.media.Metadata>
<android.database.CursorWindow: double getDouble(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.WebVttRenderingWidget: void onMeasure(int,int)>:<protected>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.tv.TvInputService.Session: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.IWindowManager: void removeAppToken(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ImageStitcher:android.filterfw.core.Filter>
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaPlayer.2: void run()>:<public>:<android.media.MediaPlayer.2:java.lang.Runnable>
<android.media.MediaFocusControl: void access.1800(android.media.MediaFocusControl,android.os.IBinder)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.animation.Transformation: void setTransformationType(int)>:<public>:<android.view.animation.Transformation>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews.OnClickHandler,android.os.Looper)>:<public>:<android.appwidget.AppWidgetHost>
<android.media.MediaFocusControl.2: void <init>(android.media.MediaFocusControl)>:<>:<android.media.MediaFocusControl.2:android.content.BroadcastReceiver>
<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>:<public>:<android.view.textservice.TextServicesManager>
<android.media.ClosedCaptionTrack: void onData(byte[],boolean,long)>:<public>:<android.media.ClosedCaptionTrack:android.media.SubtitleTrack>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.widget.HwAbsListView: void dismissCurrentPressed()>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureStore>
<android.database.CursorWrapper: boolean isAfterLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.AudioSystem: int getPrimaryOutputFrameCount()>:<public static native>:<android.media.AudioSystem>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void enforceNodeTreeConsistent(java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofInt(int[])>:<public static transient>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.widget.Editor.InsertionHandleView: void onHandleMoved()>:<>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.widget.ScrollView: void initVelocityTrackerIfNotExists()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindowSession.Stub.Proxy: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.ArrayAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected>:<android.widget.ArrayAdapter.ArrayFilter:android.widget.Filter>
<android.media.AudioAttributes: int access.002(android.media.AudioAttributes,int)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.widget.TextView: float getLeftFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputMethodManager: void focusOut(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.IMediaHTTPService.Stub: android.media.IMediaHTTPService asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaHTTPService.Stub:android.os.Binder,android.media.IMediaHTTPService>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.widget.ActionMenuView: boolean isOverflowMenuShowPending()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public abstract>:<android.view.View.OnCreateContextMenuListener>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.TextureView:android.view.View>
<android.widget.ScrollView: void <init>(android.content.Context)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.SessionCallbackRecord.4: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.4:java.lang.Runnable>
<android.service.notification.ConditionProviderService: void onRequestConditions(int)>:<public abstract>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hsm.HwMediaPermWrapper: boolean confirmMediaPreparePermission()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider: void onSetVolumeTo(int)>:<public>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider:android.media.VolumeProvider>
<android.security.KeyPairGeneratorSpec: boolean isEncryptionRequired()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.ddm.DdmRegister: void registerHandlers()>:<public static>:<android.ddm.DdmRegister>
<android.media.AudioManager: void registerAudioFocusListener(android.media.AudioManager.OnAudioFocusChangeListener)>:<public>:<android.media.AudioManager>
<android.media.AudioSystem: int getDeviceConnectionState(int,java.lang.String)>:<public static native>:<android.media.AudioSystem>
<android.media.RemoteDisplay.1: void run()>:<public>:<android.media.RemoteDisplay.1:java.lang.Runnable>
<android.print.PrinterCapabilitiesInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.MediaPlayer: boolean availableMimeTypeForExternalSource(java.lang.String)>:<private static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.MediaRouter.UserRouteInfo: void setVolumeMax(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>:<protected>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.widget.Spinner.SpinnerPopup: void setHorizontalOffset(int)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.widget.RadioGroup: boolean access.300(android.widget.RadioGroup)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.ThreadedRenderer: boolean nCopyLayerInto(long,long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.MediaPlayer.TimeProvider: void <init>(android.media.MediaPlayer)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void <init>(android.widget.RemoteViews,long)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData>
<android.media.MediaScanner: java.lang.String access.2100(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.GLES20Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.InputChannel.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.InputChannel.1:android.os.Parcelable.Creator>
<android.view.MotionEvent: int nativeAxisFromString(java.lang.String)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.ChooseAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLLogWrapper: void glShadeModel(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.SurfaceView.4: void setSizeFromLayout()>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean access.100(huawei.android.app.HwCustEmergDataManagerImpl.FileBackup,java.lang.String,java.lang.String)>:<static>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.gesture.GestureOverlayView: android.graphics.Path access.700(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView: boolean isFixedSize()>:<public>:<android.view.SurfaceView:android.view.View>
<android.view.DisplayAdjustments: boolean equals(java.lang.Object)>:<public>:<android.view.DisplayAdjustments>
<android.media.tv.TvInputManager.HardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>:<public abstract>:<android.media.tv.TvInputManager.HardwareCallback>
<android.media.AudioManager: android.media.AudioManager.FocusEventHandlerDelegate access.200(android.media.AudioManager)>:<static>:<android.media.AudioManager>
<android.media.AudioService: int getCurrentAudioFocus()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean addStatesFromChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyEvent: boolean isNumLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioPortConfig: int channelMask()>:<public>:<android.media.AudioPortConfig>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvInputManager.Session: void requestUnblockContent(android.media.tv.TvContentRating)>:<>:<android.media.tv.TvInputManager.Session>
<android.service.voice.VoiceInteractionSession.MyCallbacks: void onBackPressed()>:<public>:<android.service.voice.VoiceInteractionSession.MyCallbacks:com.android.internal.os.HandlerCaller.Callback,android.inputmethodservice.SoftInputWindow.Callback>
<android.media.RemoteController: java.lang.String getRemoteControlClientPackageName()>:<public>:<android.media.RemoteController>
<android.view.ViewGroup: void dispatchDisplayHint(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaRecorder: android.media.MediaRecorder.OnInfoListener access.200(android.media.MediaRecorder)>:<static>:<android.media.MediaRecorder>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>:<public final>:<android.view.animation.LayoutAnimationController>
<android.media.AudioService: void access.2400(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ViewFlipper: boolean isAutoStart()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService.2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>:<public>:<android.media.AudioService.2:android.bluetooth.BluetoothProfile.ServiceListener>
<android.view.ViewRootImpl.W: int checkCallingPermission(java.lang.String)>:<private static>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.media.MediaHTTPConnection: boolean parseBoolean(java.lang.String)>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.preference.PreferenceManager: android.preference.PreferenceManager.OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()>:<>:<android.preference.PreferenceManager>
<android.media.AudioTrack: int native_set_pos_update_period(int)>:<private final native>:<android.media.AudioTrack>
<android.media.session.PlaybackState.CustomAction: android.os.Bundle getExtras()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.View: void removeTapCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyCharacterMap.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.KeyCharacterMap.1:android.os.Parcelable.Creator>
<android.media.tv.TvInputInfo.TvInputSettings: void putCustomLabels(android.content.Context,java.util.Map,int)>:<public static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.media.MediaCodec.MediaImage.MediaPlane: void <init>(android.media.MediaCodec.MediaImage,java.nio.ByteBuffer,int,int)>:<public>:<android.media.MediaCodec.MediaImage.MediaPlane:android.media.Image.Plane>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.view.textservice.SuggestionsInfo[],int[],int[])>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.ExifInterface: byte[] getThumbnail()>:<public>:<android.media.ExifInterface>
<android.database.CursorWindow: boolean setNumColumns(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.Window: android.view.WindowManager getWindowManager()>:<public>:<android.view.Window>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.IntKeyframes)>:<public>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.SearchView: android.widget.ImageView access.600(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.audiopolicy.AudioMixingRule: void <init>(java.util.ArrayList,android.media.audiopolicy.AudioMixingRule.1)>:<>:<android.media.audiopolicy.AudioMixingRule>
<android.media.tv.ITvInputManager.Stub.Proxy: boolean isRatingBlocked(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.GLES20Canvas: void access.000(long)>:<static>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: void <init>(android.preference.PreferenceGroupAdapter.1)>:<>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.print.PrintJobInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.Rating: void <clinit>()>:<static>:<android.media.Rating:android.os.Parcelable>
<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper.PointerInfo,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.projection.IMediaProjection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.projection.IMediaProjection.Stub:android.os.Binder,android.media.projection.IMediaProjection>
<android.widget.VideoView: void setVideoPath(java.lang.String)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaFormat: void setFloat(java.lang.String,float)>:<public final>:<android.media.MediaFormat>
<android.media.MediaDescription: java.lang.CharSequence getTitle()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: java.util.List access.000(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.widget.Editor: void onFocusChanged(boolean,int)>:<protected>:<android.widget.Editor>
<android.preference.EditTextPreference.SavedState.1: android.preference.EditTextPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.EditTextPreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.AudioService.SoundPoolCallback: void <init>(android.media.AudioService,android.media.AudioService.1)>:<>:<android.media.AudioService.SoundPoolCallback:android.media.SoundPool.OnLoadCompleteListener>
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void reset()>:<public>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.gesture.GestureStore: android.gesture.Learner getLearner()>:<>:<android.gesture.GestureStore>
<android.media.browse.MediaBrowser.MediaItem.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.browse.MediaBrowser.MediaItem.1:android.os.Parcelable.Creator>
<android.widget.ActivityChooserView.Callbacks: void <init>(android.widget.ActivityChooserView,android.widget.ActivityChooserView.1)>:<>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.animation.ValueAnimator: void <init>()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.security.IKeystoreService: int insert(java.lang.String,byte[],int,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.ViewTreeObserver.InternalInsetsInfo: void <init>()>:<public>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.AndroidTestCase: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.media.SubtitleTrack.CueList.1: java.util.Iterator iterator()>:<public>:<android.media.SubtitleTrack.CueList.1:java.lang.Iterable>
<android.filterpacks.performance.ThroughputFilter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.performance.ThroughputFilter:android.filterfw.core.Filter>
<android.media.MediaScannerConnection.ClientProxy: void scanNextPath()>:<>:<android.media.MediaScannerConnection.ClientProxy:android.media.MediaScannerConnection.MediaScannerConnectionClient>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.SurfaceView: android.view.SurfaceHolder.Callback[] getSurfaceCallbacks()>:<private>:<android.view.SurfaceView:android.view.View>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView: void showDropDownAfterLayout()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.widget.TimePicker.TimePickerDelegate: java.lang.Integer getCurrentHour()>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwMediaPermWrapper: void <init>()>:<public>:<android.hsm.HwMediaPermWrapper>
<android.widget.Editor.InsertionPointCursorController: android.widget.Editor.InsertionHandleView getHandleOuter()>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.view.ViewRootImpl: int getRootMeasureSpec(int,int)>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.ObjectAnimator: void setupEndValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioService.AudioHandler: void onPlaySoundEffect(int,int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.printservice.IPrintService.Stub.Proxy: void validatePrinters(java.util.List)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.media.JetPlayer: boolean closeJetFile()>:<public>:<android.media.JetPlayer>
<android.view.ViewGroup: android.view.View getDeepestFocusedChild()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewRootImpl.RunQueue.HandlerAction: int hashCode()>:<public>:<android.view.ViewRootImpl.RunQueue.HandlerAction>
<android.media.tv.TvInputInfo.TvInputSettings: boolean access.000(android.content.Context,java.lang.String,int)>:<static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.media.tv.TvView: float access.1500(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.TimePickerSpinnerDelegate: int computeMaxWidthOfNumbers(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLES20: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES20>
<android.media.ThumbnailUtils: android.graphics.Bitmap makeBitmap(int,int,android.net.Uri,android.content.ContentResolver,android.os.ParcelFileDescriptor,android.graphics.BitmapFactory.Options)>:<private static>:<android.media.ThumbnailUtils>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: long nativeReadFromParcel(long,android.os.Parcel)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.media.MediaPlayer: void start()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2700(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>:<protected>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.widget.Switch: int[] onCreateDrawableState(int)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.opengl.GLErrorWrapper: void glDepthRangex(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaFocusControl: void onRcDisplayClear()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.RemoteViews.MemoryUsageCounter: void <init>(android.widget.RemoteViews,android.widget.RemoteViews.1)>:<>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.view.View.TransformationInfo: android.graphics.Matrix access.1600(android.view.View.TransformationInfo)>:<static>:<android.view.View.TransformationInfo>
<android.view.TextureView: void updateLayerAndInvalidate()>:<private>:<android.view.TextureView:android.view.View>
<android.service.dreams.DreamService: void onDetachedFromWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.GridLayout: int adjust(int,int)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.DatePickerController: void setMinDate(long)>:<public abstract>:<android.widget.DatePickerController>
<android.widget.ProgressBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextView: void restartMarqueeIfNeeded()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createReEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale access.500(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.hsm.HwSystemManager: boolean allowOp(android.net.Uri,int)>:<public static>:<android.hsm.HwSystemManager>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder valueOf(java.lang.String)>:<public static>:<android.media.DecoderCapabilities.AudioDecoder:java.lang.Enum>
<android.preference.PreferenceManager: void registerOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)>:<public>:<android.preference.PreferenceManager>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.TvInputManager.SessionCallback access.1300(android.media.tv.TvInputService.HardwareSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.audiofx.Virtualizer: java.lang.Object access.000(android.media.audiofx.Virtualizer)>:<static>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.media.IAudioService: boolean shouldVibrate(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.600(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.media.AudioAttributes: void <clinit>()>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteConnection: void finalizePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.MenuInflater.MenuState: android.view.MenuItem addItem()>:<public>:<android.view.MenuInflater.MenuState>
<android.view.WindowAnimationFrameStats: void <init>(android.os.Parcel)>:<private>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: android.media.AudioFormat getCaptureAudioFormat()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.view.SubMenu: android.view.MenuItem getItem()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.session.ISessionCallback: void onSeekTo(long)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.media.ImageReader: void close()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.IVolumeController: void masterMuteChanged(int)>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.IRemoteControlClient.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteControlClient.Stub:android.os.Binder,android.media.IRemoteControlClient>
<android.view.ThreadedRenderer: int search(java.lang.String[],java.lang.String)>:<private static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View.AttachInfo.InvalidateInfo: void <init>()>:<>:<android.view.View.AttachInfo.InvalidateInfo>
<android.view.RenderNode: float getAlpha()>:<public>:<android.view.RenderNode>
<android.printservice.PrintServiceInfo: int describeContents()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.WindowInsets: void <init>(android.view.WindowInsets)>:<public>:<android.view.WindowInsets>
<android.media.IMediaRouterService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<huawei.android.app.HwCustEmergDataManager: boolean isEmergencyState()>:<public>:<huawei.android.app.HwCustEmergDataManager>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GraphicBuffer: android.view.GraphicBuffer create(int,int,int,int)>:<public static>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.preference.Preference: android.os.Bundle peekExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.service.notification.StatusBarNotification: void <init>(android.os.Parcel)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress: void <init>(android.widget.ListPopupWindow.ForwardingListener)>:<private>:<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress:java.lang.Runnable>
<android.view.accessibility.AccessibilityEvent.1: void <init>()>:<>:<android.view.accessibility.AccessibilityEvent.1:android.os.Parcelable.Creator>
<android.widget.Editor: boolean canSelectText()>:<private>:<android.widget.Editor>
<android.widget.Gallery: int access.400(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.SurfaceSession: void finalize()>:<protected>:<android.view.SurfaceSession>
<android.media.MediaFocusControl: boolean checkUpdateRemoteStateIfActive(int)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.RemoteDisplayState: void <clinit>()>:<static>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.gesture.GestureUtils: float[] computeCentroid(float[])>:<static>:<android.gesture.GestureUtils>
<android.media.session.MediaController: void access.300(android.media.session.MediaController,int,java.lang.Object,android.os.Bundle)>:<static>:<android.media.session.MediaController>
<android.view.animation.AnimationSet: java.util.List getAnimations()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.FastScroller: boolean transitionPreviewLayout(int)>:<private>:<android.widget.FastScroller>
<android.view.ViewRootImpl.HighContrastTextManager: void onHighTextContrastStateChanged(boolean)>:<public>:<android.view.ViewRootImpl.HighContrastTextManager:android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener>
<android.view.KeyEvent: boolean isMediaKey(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsListView.RecycleBin: android.widget.AbsListView.RecyclerListener access.4102(android.widget.AbsListView.RecycleBin,android.widget.AbsListView.RecyclerListener)>:<static>:<android.widget.AbsListView.RecycleBin>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.SoundPool: void setVolume(int,float)>:<public>:<android.media.SoundPool>
<android.widget.GridLayout.LayoutParams: void setGravity(int)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.VideoView: int access.1902(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.service.notification.ZenModeConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.service.notification.ZenModeConfig.1:android.os.Parcelable.Creator>
<android.media.IRemoteControlDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvView: void access.700(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.preference.Preference: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.animation.PathKeyframes.3: int getIntValue(float)>:<public>:<android.animation.PathKeyframes.3:android.animation.PathKeyframes.IntKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.accounts.AuthenticatorDescription: int hashCode()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.TwoStatePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.VideoView: int access.000(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.ScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SpellChecker: boolean isSessionActive()>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.RenderNodeAnimator: void resume()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.print.PrinterId.1: android.print.PrinterId createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.media.MediaDrm.KeyRequest: void <init>()>:<>:<android.media.MediaDrm.KeyRequest>
<android.media.MediaRouter.RouteCategory: void <init>(java.lang.CharSequence,int,boolean)>:<>:<android.media.MediaRouter.RouteCategory>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.audiofx.Equalizer: java.lang.Object access.000(android.media.audiofx.Equalizer)>:<static>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.ViewRootImpl: void addFirstDrawHandler(java.lang.Runnable)>:<public static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.TimePicker.TimePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.view.ViewDebug.ExportedProperty: boolean formatToHexString()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.view.animation.Animation: long getStartTime()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.MediaCodecList: int getCodecCount()>:<public static final>:<android.media.MediaCodecList>
<android.animation.PathKeyframes: void <init>(android.graphics.Path,float)>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: boolean glIsFramebufferOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glMultMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.View: int getMeasuredHeightAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetHost.Callbacks: void <init>(android.appwidget.AppWidgetHost)>:<>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.widget.TextView: int getCompoundPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ThreadedRenderer: void updateSurface(android.view.Surface)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.GLES20Canvas: int nSave(long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl: void destroyHardwareRenderer()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLLogWrapper: void glScalef(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.voice.VoiceInteractionSession: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.GridLayout: int getOrientation()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.StackView: void hideTapFeedback(android.view.View)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo getCollectionInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.trust.ITrustAgentService: void onTrustTimeout()>:<public abstract>:<android.service.trust.ITrustAgentService:android.os.IInterface>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.database.IContentObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.media.TtmlTrack: void <init>(android.media.TtmlRenderingWidget,android.media.MediaFormat)>:<>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.widget.Editor.SelectionModifierCursorController: void setMaxTouchOffset(int)>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.RelativeLayout.DependencyGraph: android.util.SparseArray access.500(android.widget.RelativeLayout.DependencyGraph)>:<static>:<android.widget.RelativeLayout.DependencyGraph>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.EditText: void setSelection(int,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu.OnDismissListener)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.ClosedCaptionWidget: void onDetachedFromWindow()>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.media.tv.ITvInputManager: void dispatchSurfaceChanged(android.os.IBinder,int,int,int,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.widget.Editor.InsertionHandleView: void updatePosition(float,float)>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.View: void setKeepScreenOn(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrinterDiscoverySession: void stopPrinterDiscovery()>:<public final>:<android.print.PrinterDiscoverySession>
<android.media.RemoteControlClient: long getCheckPeriodFromSpeed(float)>:<private static>:<android.media.RemoteControlClient>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>:<public>:<android.media.AudioTrack>
<android.widget.Switch: void setThumbResource(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.Gallery.1: void <init>(android.widget.Gallery)>:<>:<android.widget.Gallery.1:java.lang.Runnable>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioService: android.bluetooth.BluetoothA2dp access.3202(android.media.AudioService,android.bluetooth.BluetoothA2dp)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioService: boolean loadSoundEffects()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaPlayer.TimeProvider: void cancelNotifications(android.media.MediaTimeProvider.OnMediaTimeListener)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CompletionInfo: void <init>(android.os.Parcel,android.view.inputmethod.CompletionInfo.1)>:<>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.media.session.MediaController.Callback: void <init>()>:<public>:<android.media.session.MediaController.Callback>
<android.view.ViewRootImpl: boolean isTerminalInputEvent(android.view.InputEvent)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.Surface: int describeContents()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.print.PrinterCapabilitiesInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int)>:<public>:<android.media.AudioTrack>
<android.database.IBulkCursor: void close()>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.view.OrientationListener: void disable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>:<public>:<android.view.ViewConfiguration>
<android.media.MediaPlayer: android.media.MediaPlayer.OnBufferingUpdateListener access.1100(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View.7: void setValue(android.view.View,float)>:<public>:<android.view.View.7:android.util.FloatProperty>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: void onConnectFailed()>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.view.ViewRootImpl: boolean canResolveLayoutDirection()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getMovementGranularitySymbolicName(int)>:<private static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewDebug: java.lang.reflect.Method[] filterMethodsProperties(java.lang.reflect.Method[],java.lang.String[])>:<private static>:<android.view.ViewDebug>
<android.view.ViewDebug: java.lang.reflect.Field[] getExportedPropertyFields(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.widget.RadioGroup: android.widget.CompoundButton.OnCheckedChangeListener access.700(android.widget.RadioGroup)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView: int generateId()>:<private>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes: void copyFrom(android.print.PrintAttributes)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.hsm.HwMediaPermWrapper: void setOutputFile(android.media.MediaRecorder,java.lang.String,long,long)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES20>
<android.widget.Switch: java.lang.CharSequence getTextOn()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputMethodInfo.1: android.view.inputmethod.InputMethodInfo[] newArray(int)>:<public>:<android.view.inputmethod.InputMethodInfo.1:android.os.Parcelable.Creator>
<android.view.GhostView: void removeGhost(android.view.View)>:<public static>:<android.view.GhostView:android.view.View>
<android.view.IWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.opengl.GLES10: void glScalef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.media.audiofx.AudioEffect: int byteArrayToInt(byte[])>:<public static>:<android.media.audiofx.AudioEffect>
<android.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.IMediaHTTPService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaHTTPService.Stub:android.os.Binder,android.media.IMediaHTTPService>
<android.media.IAudioFocusDispatcher.Stub: void <init>()>:<public>:<android.media.IAudioFocusDispatcher.Stub:android.os.Binder,android.media.IAudioFocusDispatcher>
<android.media.tv.TvInputHardwareInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.preference.PreferenceInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>:<protected volatile>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.media.MediaFocusControl: boolean isComponentInStringArray(android.content.ComponentName,java.lang.String[])>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.database.sqlite.SQLiteConnectionPool: void wakeConnectionWaitersLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.InputEvent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.InputEvent.1:android.os.Parcelable.Creator>
<android.widget.GridLayout: void invalidateValues()>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.tv.TvContentRatingSystemInfo: void <init>(android.os.Parcel,android.media.tv.TvContentRatingSystemInfo.1)>:<>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.service.dreams.DreamService: boolean isScreenBright()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.SubtitleTrack: void scheduleTimedEvents()>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.media.MediaRouter.Static: android.media.MediaRouter.RouteInfo findGlobalRoute(java.lang.String)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.printservice.IPrintService.Stub.Proxy: void startPrinterStateTracking(android.print.PrinterId)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy: void <init>(android.widget.ShareActionProvider,android.widget.ShareActionProvider.1)>:<>:<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy:android.widget.ActivityChooserModel.OnChooseActivityListener>
<android.media.tv.ITvInputService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputService.Stub:android.os.Binder,android.media.tv.ITvInputService>
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setMatrix(android.graphics.Matrix)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.widget.TimePickerSpinnerDelegate: void onValueSelected(int,int,boolean)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.animation.PathInterpolator: void initPath(android.graphics.Path)>:<private>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.media.tv.TvInputManager: void <init>(android.media.tv.ITvInputManager,int)>:<public>:<android.media.tv.TvInputManager>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaFocusControl.NotificationListenerObserver: void <init>(android.media.MediaFocusControl)>:<>:<android.media.MediaFocusControl.NotificationListenerObserver:android.database.ContentObserver>
<android.view.IWindowManager.Stub.Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.projection.IMediaProjection.Stub.Proxy: boolean canProjectVideo()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.filterpacks.ui.SurfaceTargetFilter: void setupPorts()>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.view.accessibility.CaptioningManager: java.lang.String getRawLocale()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.database.MatrixCursor: long getLong(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.MediaCodec.EventHandler: void <init>(android.media.MediaCodec,android.media.MediaCodec,android.os.Looper)>:<public>:<android.media.MediaCodec.EventHandler:android.os.Handler>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View: int getDefaultSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: android.bluetooth.BluetoothA2dp access.3200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.TtmlTrack: android.media.TtmlCue getNextResult()>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.widget.Editor: boolean touchPositionIsInSelection()>:<private>:<android.widget.Editor>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setLeft(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListView: boolean collapseGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: boolean access.1100(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.GLES20Canvas: boolean clipRect(android.graphics.RectF)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.Editor: android.widget.Editor.SelectionModifierCursorController getSelectionControllerOuter()>:<protected>:<android.widget.Editor>
<android.media.MediaExtractor: void setDataSource(android.media.DataSource)>:<public final native>:<android.media.MediaExtractor>
<android.view.View.ListenerInfo: android.view.View.OnTouchListener access.402(android.view.View.ListenerInfo,android.view.View.OnTouchListener)>:<static>:<android.view.View.ListenerInfo>
<android.widget.AdapterViewAnimator: int getWindowSize()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ViewDebug: long getViewRootImplCount()>:<public static>:<android.view.ViewDebug>
<android.view.Window: void setCloseOnTouchOutsideIfNotSet(boolean)>:<public>:<android.view.Window>
<android.media.MediaCrypto: void native_init()>:<private static final native>:<android.media.MediaCrypto>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object[])>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLLogWrapper: void glMaterialx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.GenericInflater: java.lang.Object createItemFromTag(org.xmlpull.v1.XmlPullParser,java.lang.String,android.util.AttributeSet)>:<private final>:<android.preference.GenericInflater>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.view.Window>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>:<public abstract>:<android.view.Window>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarVolumizer: void onStopSample()>:<private>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.MediaPlayer: boolean isRestricted()>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.FastScroller.5: void setValue(java.lang.Object,int)>:<public volatile>:<android.widget.FastScroller.5:android.util.IntProperty>
<android.media.MediaCodecInfo: android.util.Range access.100()>:<static>:<android.media.MediaCodecInfo>
<android.media.AudioService: int getMode()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.print.IPrintSpoolerClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.view.InputFilter: void onInstalled()>:<public>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.media.tv.TvView: void setCaptionEnabled(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.preference.MultiSelectListPreference: java.util.Set getValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.GridView: int lookForSelectablePosition(int,boolean)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner.FileEntry: java.lang.String toString()>:<public>:<android.media.MediaScanner.FileEntry>
<android.view.RenderNode: boolean nSetCameraDistance(long,float)>:<private static native>:<android.view.RenderNode>
<android.view.IWindowSession: void remove(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.media.session.MediaSessionLegacyHelper: void access.000(android.app.PendingIntent,android.content.Context,android.content.Intent)>:<static>:<android.media.session.MediaSessionLegacyHelper>
<android.accounts.ChooseAccountTypeActivity: void <init>()>:<public>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.SubtitleTrack.RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.media.IRemoteControlClient.Stub: android.media.IRemoteControlClient asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteControlClient.Stub:android.os.Binder,android.media.IRemoteControlClient>
<android.print.PrinterCapabilitiesInfo: void readResolutions(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.GLES20Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewRootImpl.W: void dispatchAppVisibility(boolean)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.ActionMenuPresenter.PopupPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.view.ViewRootImpl.NativePreImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>:<public>:<android.view.ViewRootImpl.NativePreImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.widget.ZoomControls: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService: int getVibrateSetting(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.GridLayout.Spec: android.widget.GridLayout.Spec copyWriteSpan(android.widget.GridLayout.Interval)>:<final>:<android.widget.GridLayout.Spec>
<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModesLocked()>:<private>:<android.service.voice.AlwaysOnHotwordDetector>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: boolean isImportantForAccessibility()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.AdapterViewAnimator: void deferNotifyDataSetChanged()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.TextView.SavedState.1: void <init>()>:<>:<android.widget.TextView.SavedState.1:android.os.Parcelable.Creator>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>:<public>:<android.view.ViewConfiguration>
<android.view.SurfaceView.4: void powerCtroll()>:<private>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.widget.CheckedTextView: void internalSetPadding(int,int,int,int)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.RemoteViews.OnClickHandler: void <init>()>:<public>:<android.widget.RemoteViews.OnClickHandler>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.media.ExifInterface: boolean appendThumbnailNative(java.lang.String,java.lang.String)>:<private native>:<android.media.ExifInterface>
<android.media.MediaCodec: android.media.MediaCodec createEncoderByType(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.media.IMediaRouterClient.Stub.Proxy: void onStateChanged()>:<public>:<android.media.IMediaRouterClient.Stub.Proxy:android.media.IMediaRouterClient>
<android.view.HardwareCanvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.LayoutInflater.BlinkLayout: void access.200(android.view.LayoutInflater.BlinkLayout)>:<static>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: android.text.TextPaint getPaint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TabWidget: void removeAllViews()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.Gravity: boolean isHorizontal(int)>:<public static>:<android.view.Gravity>
<huawei.android.net.wifi.HwCustWifiManager: void <clinit>()>:<static>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.print.IPrintManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.media.MediaRouter.RouteInfo: boolean resolveStatusCode()>:<>:<android.media.MediaRouter.RouteInfo>
<android.print.PrinterDiscoverySession: void destroyNoCheck()>:<private>:<android.print.PrinterDiscoverySession>
<android.media.AudioService: int access.902(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.IRemoteControlClient: void enableRemoteControlDisplay(android.media.IRemoteControlDisplay,boolean)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.widget.HwSplineOverScrollerDummy: double getBallisticDistance(double,int,int,long,long)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.media.ImageReader: void releaseImage(android.media.Image)>:<private>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.service.dreams.DreamService: android.os.Handler access.700(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.EncoderCapabilities: java.util.List getVideoEncoders()>:<public static>:<android.media.EncoderCapabilities>
<android.media.WebVttRenderingWidget: int resolveCueAlignment(int,int)>:<private static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>:<public static>:<android.view.ViewConfiguration>
<android.media.MediaRouter.RouteGroup: void setIconDrawable(android.graphics.drawable.Drawable)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.100(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.preference.SwitchPreference: void setSwitchTextOff(int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession.CallbackStub: void onRate(android.media.Rating)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.media.AudioService: int getMasterVolume()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.Choreographer: void doCallbacks(int,long)>:<>:<android.view.Choreographer>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater.Factory)>:<public>:<android.preference.GenericInflater>
<android.view.accessibility.AccessibilityWindowInfo: void setFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.print.PrintAttributes.Margins: int getRightMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.view.MotionEvent: void finalize()>:<protected>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ViewAnimator: void removeViewAt(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>:<public abstract>:<android.view.MenuItem>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.Window: void setHwFlags(int,int)>:<public>:<android.view.Window>
<android.view.ViewRootImpl.W: void windowFocusChanged(boolean,boolean)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.view.Surface: boolean nativeIsValid(long)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.media.AudioService: void makeA2dpDeviceUnavailableLater(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioTrack: int getLatency()>:<public>:<android.media.AudioTrack>
<android.widget.TextView: void hideErrorIfUnchanged()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.ConditionProviderService: void onUnsubscribe(android.net.Uri)>:<public abstract>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onAvailabilityChanged(int)>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: void addHardwareTvInput(int,android.media.tv.TvInputInfo)>:<public>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.widget.TextView.Marquee: void resetScroll()>:<private>:<android.widget.TextView.Marquee>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.accounts.ChooseAccountActivity.ViewHolder: void <init>()>:<private>:<android.accounts.ChooseAccountActivity.ViewHolder>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>:<public>:<android.media.session.MediaSession>
<android.view.InputChannel: void <init>()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.opengl.GLES11: void <clinit>()>:<static>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidths()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.widget.DatePicker: void setValidationCallback(android.widget.DatePicker.ValidationCallback)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getTotalPaddingEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.MiniThumbFile: void <init>(android.net.Uri)>:<public>:<android.media.MiniThumbFile>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorDeactivated()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.filterpacks.ui.SurfaceTargetFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.service.notification.NotificationListenerService.Ranking: void populate(java.lang.String,int,boolean,boolean,int)>:<private>:<android.service.notification.NotificationListenerService.Ranking>
<android.view.Window: int getStatusBarColor()>:<public abstract>:<android.view.Window>
<android.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.preference.PreferenceFrameLayout: android.preference.PreferenceFrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.printservice.PrintJob: boolean complete()>:<public>:<android.printservice.PrintJob>
<android.media.WebVttRenderingWidget.1: void onFontScaleChanged(float)>:<public>:<android.media.WebVttRenderingWidget.1:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.media.MediaRouter.RouteInfo: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>:<public>:<android.accounts.AccountManager>
<android.media.session.MediaSession.QueueItem: void <clinit>()>:<static>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk invokeViewMethod(android.view.View,android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.NumberPicker.CustomEditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.NumberPicker.CustomEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.media.AudioService: android.media.MediaFocusControl access.9500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine.3: void <init>(android.service.wallpaper.WallpaperService.Engine)>:<>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.RemoteViews.BitmapCache: void <init>(android.os.Parcel)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.widget.SimpleMonthAdapter: void <init>(android.content.Context,android.widget.DatePickerController)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.print.PrinterDiscoverySession: void throwIfNotCalledOnMainThread()>:<private static>:<android.print.PrinterDiscoverySession>
<android.view.ThreadedRenderer: boolean initialize(android.view.Surface)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.view.View: void onFinishInflate()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.IntArrayEvaluator: void <init>(int[])>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewFlipper: void setFlipInterval(int)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.filterpacks.videosrc.SurfaceTextureSource.1: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.appwidget.AppWidgetHost.Callbacks: void providersChanged()>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.media.tv.TvInputService.ServiceHandler: void handleMessage(android.os.Message)>:<public final>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.service.voice.VoiceInteractionService: void onShutdownInternal()>:<private>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ThreadedRenderer: boolean copyLayerInto(android.view.HardwareLayer,android.graphics.Bitmap)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.View: void setNextFocusRightId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.PlaybackState: long access.1000(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.TextView: void setLinksClickable(boolean)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.DayPickerView: int getDiffMonths(java.util.Calendar,java.util.Calendar)>:<private>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.AudioService.VolumeStreamState: void mute(android.os.IBinder,boolean)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.media.MediaHTTPConnection: java.util.Map convertHeaderStringToMap(java.lang.String)>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.widget.DatePicker: java.util.Calendar getTempDate()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.FloatKeyframeSet: java.lang.Object clone()>:<public volatile>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub:android.os.Binder,android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.DecoderCapabilities: java.util.List getAudioDecoders()>:<public static>:<android.media.DecoderCapabilities>
<android.print.PrintAttributes: android.print.PrintAttributes asPortrait()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.HardwareCanvas: void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint)>:<abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void run()>:<public>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.service.notification.ZenModeConfig: boolean equals(java.lang.Object)>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.PopupWindow.1: void onScrollChanged()>:<public>:<android.widget.PopupWindow.1:android.view.ViewTreeObserver.OnScrollChangedListener>
<android.media.browse.MediaBrowser: android.media.browse.MediaBrowser.ConnectionCallback access.300(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.media.AsyncPlayer.Command: void <init>()>:<private>:<android.media.AsyncPlayer.Command>
<android.media.MediaFocusControl: void unregisterAudioFocusClient(java.lang.String)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.printservice.PrintJob: boolean block(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.view.RenderNode: boolean setLayerPaint(android.graphics.Paint)>:<public>:<android.view.RenderNode>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaPlayer.TimeProvider: void finalize()>:<protected>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.media.tv.TvInputService.Session.4: void run()>:<public>:<android.media.tv.TvInputService.Session.4:java.lang.Runnable>
<android.opengl.GLES10: void glCullFace(int)>:<public static native>:<android.opengl.GLES10>
<android.gesture.GestureOverlayView: void setCurrentColor(int)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo.1: void <init>()>:<>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.service.media.MediaBrowserService.2: void onResultSent(java.util.List)>:<>:<android.service.media.MediaBrowserService.2:android.service.media.MediaBrowserService.Result>
<android.view.LayoutInflater: void <init>(android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.media.MediaRouter.SimpleCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.View: void setFlags(int,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter: boolean isWipeDataRegional(android.content.Intent)>:<public>:<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter:com.android.internal.os.storage.IHwCustExternalStorageFormatter>
<android.media.AudioService: boolean access.7200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RemoteViews.BitmapCache: void assimilate(android.widget.RemoteViews.BitmapCache)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.media.ImageReader: int getMaxImages()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.GridLayout.Axis: boolean hasWeights()>:<private>:<android.widget.GridLayout.Axis>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter: void <clinit>()>:<static>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter>
<android.service.voice.VoiceInteractionSession.3: void <init>(android.service.voice.VoiceInteractionSession)>:<>:<android.service.voice.VoiceInteractionSession.3:android.view.ViewTreeObserver.OnComputeInternalInsetsListener>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int hashCode()>:<public>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.view.IWindowManager: void pauseKeyDispatching(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.inputmethod.CursorAnchorInfo.1: android.view.inputmethod.CursorAnchorInfo[] newArray(int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowManager.Stub.Proxy: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.hsm.HwSystemManager: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public static>:<android.hsm.HwSystemManager>
<android.view.GLES20Canvas: int nPrepare(long,boolean)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.printservice.PrintJob: boolean fail(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.view.MotionEvent: int nativeFindPointerIndex(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Spinner.DropDownAdapter: int getCount()>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.MediaRouter.UserRouteInfo: void setRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>:<public>:<android.view.VelocityTracker>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLLogWrapper: java.nio.ByteBuffer access.000(android.opengl.GLLogWrapper,int,java.nio.Buffer)>:<static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.service.dreams.DreamService: void setDebug(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.session.MediaSession.CallbackStub: void onPause()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.media.IRemoteControlDisplay.Stub: android.media.IRemoteControlDisplay asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteControlDisplay.Stub:android.os.Binder,android.media.IRemoteControlDisplay>
<android.widget.AbsListView.RecycleBin: void fillActiveViews(int,int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoAvailable()>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.effect.EffectContext: android.media.effect.EffectContext createWithCurrentGlContext()>:<public static>:<android.media.effect.EffectContext>
<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.audiofx.Equalizer: short getNumberOfBands()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.audiofx.PresetReverb: void setPreset(short)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.media.AudioService: void checkDtsLicense()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES20: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES20>
<android.security.SystemKeyStore: java.lang.String retrieveKeyHexString(java.lang.String)>:<public>:<android.security.SystemKeyStore>
<android.view.inputmethod.InputMethodManager: void startGettingWindowFocus(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.security.IKeyChainService.Stub.Proxy: android.content.pm.ParceledListSlice getSystemCaAliases()>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.media.IVolumeController: void setLayoutDirection(int)>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.print.PrintJobId: void <init>()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.filterpacks.videosrc.MediaSource: android.filterfw.core.MutableFrameFormat access.300(android.filterpacks.videosrc.MediaSource)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.widget.Switch: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.audiofx.Equalizer: short getBand(int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.tv.TvInputManager.TvInputCallbackRecord: android.media.tv.TvInputManager.TvInputCallback getCallback()>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.media.tv.TvInputService.HardwareSession.1: void <init>(android.media.tv.TvInputService.HardwareSession)>:<>:<android.media.tv.TvInputService.HardwareSession.1:android.media.tv.TvInputManager.SessionCallback>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioDevice: int convertInternalDeviceToDeviceType(int)>:<public static>:<android.media.AudioDevice>
<android.view.IWindowManager.Stub.Proxy: void resumeKeyDispatching(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.tv.TvInputManager.SessionCallbackRecord.5: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.5:java.lang.Runnable>
<android.widget.TabWidget: void focusCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>:<public static>:<android.view.InputChannel:android.os.Parcelable>
<android.preference.PreferenceFragment: android.widget.ListView access.100(android.preference.PreferenceFragment)>:<static>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler.1: void run()>:<public>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler.1:java.lang.Runnable>
<android.media.IAudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] createArcs()>:<private>:<android.widget.GridLayout.Axis>
<android.opengl.GLES10: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES10>
<android.view.InputQueue: void dispose()>:<public>:<android.view.InputQueue>
<android.media.IAudioService.Stub.Proxy: void adjustMasterVolume(int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.imageproc.AutoFixFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.accounts.IAccountAuthenticator: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.media.session.ISessionManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.tv.TvInputService.Session: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLLogWrapper: void glDepthRangex(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintJobInfo: void setPages(android.print.PageRange[])>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo build()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.media.tv.TvContract.Programs.Genres: void <init>()>:<private>:<android.media.tv.TvContract.Programs.Genres>
<android.widget.CheckedTextView: void drawableStateChanged()>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.Toast: void <clinit>()>:<static>:<android.widget.Toast>
<android.view.FocusFinder: void <init>(android.view.FocusFinder.1)>:<>:<android.view.FocusFinder>
<android.view.View: void enableNsdSave()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.view.DragEvent: void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean)>:<private>:<android.view.DragEvent:android.os.Parcelable>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioRecord: int native_read_in_direct_buffer(java.lang.Object,int)>:<private final native>:<android.media.AudioRecord>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.AccessibilityWindowInfo: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy:android.view.accessibility.IAccessibilityManagerClient>
<android.service.dreams.DreamService: void setDozeScreenBrightness(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.animation.Transformation: void <init>()>:<public>:<android.view.animation.Transformation>
<android.widget.StackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteSession: android.database.sqlite.SQLiteSession.Transaction obtainTransaction(int,android.database.sqlite.SQLiteTransactionListener)>:<private>:<android.database.sqlite.SQLiteSession>
<android.media.MediaExtractor: boolean hasCacheReachedEndOfStream()>:<public native>:<android.media.MediaExtractor>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand:java.lang.Runnable>
<android.filterpacks.imageproc.ColorTemperatureFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.media.AudioTrack: int getPositionNotificationPeriod()>:<public>:<android.media.AudioTrack>
<android.media.AudioGain: android.media.AudioGainConfig buildConfig(int,int,int[],int)>:<public>:<android.media.AudioGain>
<android.media.AudioTrack: int native_write_float(float[],int,int,int,boolean)>:<private final native>:<android.media.AudioTrack>
<android.view.View: void stopNsd()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.service.trust.TrustAgentService: java.lang.Object access.000(android.service.trust.TrustAgentService)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: boolean hasRtlSupport()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.FillLightFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.ImageReader: void finalize()>:<protected>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.audiopolicy.AudioPolicyConfig: void <init>(android.os.Parcel)>:<private>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.media.AudioFormat.Builder: android.media.AudioFormat build()>:<public>:<android.media.AudioFormat.Builder>
<android.view.PointerIcon: void throwIfIconIsNotLoaded()>:<private>:<android.view.PointerIcon:android.os.Parcelable>
<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.accounts.AccountManagerResponse.1: android.accounts.AccountManagerResponse createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.800(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.media.AudioSystem: int setParameters(java.lang.String)>:<public static native>:<android.media.AudioSystem>
<android.database.CursorWrapper: boolean requery()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)>:<private static final>:<android.database.DatabaseUtils>
<android.media.MediaScanner: java.lang.String access.2600(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.Tokenizer.DataTokenizer: void tokenize()>:<public>:<android.media.Tokenizer.DataTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>:<public static>:<android.media.RingtoneManager>
<android.widget.MediaController.MediaPlayerControl: void pause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>:<public volatile>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.view.ViewGroup.TouchTarget: android.view.ViewGroup.TouchTarget obtain(android.view.View,int)>:<public static>:<android.view.ViewGroup.TouchTarget>
<android.view.View.7: void <init>(java.lang.String)>:<>:<android.view.View.7:android.util.FloatProperty>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.service.voice.AlwaysOnHotwordDetector: int stopRecognitionLocked()>:<private>:<android.service.voice.AlwaysOnHotwordDetector>
<android.service.fingerprint.FingerprintManager: android.os.Handler access.100(android.service.fingerprint.FingerprintManager)>:<static>:<android.service.fingerprint.FingerprintManager>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void setIs24HourView(java.lang.Boolean)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.service.wallpaper.WallpaperService.Engine: void onApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.Toast: android.view.View getView()>:<public>:<android.widget.Toast>
<android.view.View: boolean isSaveEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RatingBar: float getStepSize()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: void setTop(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: void <init>(android.widget.ActionMenuView,android.widget.ActionMenuView.1)>:<>:<android.widget.ActionMenuView.ActionMenuPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>:<protected volatile>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.view.ViewParent: void requestLayout()>:<public abstract>:<android.view.ViewParent>
<android.widget.Editor.HandleView: void show()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.IWindowManager.Stub.Proxy: void setForcedDisplaySize(int,int,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setImeOptions(android.widget.NumberPicker,int,int)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.RadialTimePickerView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.MediaDescription: java.lang.String getMediaId()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.view.View: void onResolveDrawables(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>:<public>:<android.media.FaceDetector>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeIconResId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.print.IPrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public abstract>:<android.print.IPrinterDiscoveryObserver:android.os.IInterface>
<android.animation.ObjectAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.PlayerRecord.RccPlaybackState: void <init>(int,long,float)>:<public>:<android.media.PlayerRecord.RccPlaybackState>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getStatus()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.1: void run()>:<public>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.1:java.lang.Runnable>
<android.opengl.GLErrorWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.SubtitleTrack.CueList: java.lang.Iterable entriesBetween(long,long)>:<public>:<android.media.SubtitleTrack.CueList>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.MediaRouter.RouteGroup: int getRouteCount()>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.widget.TextView: void setError(java.lang.CharSequence)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.ToRGBFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.preference.SeekBarVolumizer: void onStartTrackingTouch(android.widget.SeekBar)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.view.LayoutInflater.FactoryMerger:android.view.LayoutInflater.Factory2>
<android.opengl.GLLogWrapper: void glTexParameterf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteCategory getCategory()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.Display getDisplay()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.ImageReader.SurfaceImage: java.nio.ByteBuffer access.1200(android.media.ImageReader.SurfaceImage,int,int)>:<static>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.widget.AdapterView: boolean isScrollableForAccessibility()>:<private>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setType(int)>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.view.ActionProvider: void <init>(android.content.Context)>:<public>:<android.view.ActionProvider>
<android.widget.GridLayout.6: void <init>()>:<>:<android.widget.GridLayout.6:android.widget.GridLayout.Alignment>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <init>(android.appwidget.AppWidgetHostView.1)>:<>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getHex(int)>:<private static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onContentBlocked(java.lang.String)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.TtmlTrack: java.util.List getActiveNodes(long,long)>:<private>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.security.KeyStore: boolean contains(java.lang.String)>:<public>:<android.security.KeyStore>
<android.media.session.PlaybackState.CustomAction: int describeContents()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void invalidateInheritedLayoutMode(int)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioManager: void stopBluetoothSco()>:<public>:<android.media.AudioManager>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBlockCountRange()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.widget.TextView: void invalidateRegion(int,int,boolean)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.textservice.SpellCheckerSession: void cancel()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.opengl.GLSurfaceView: int access.200(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.MultiSelectListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>:<static>:<android.security.Credentials>
<android.widget.TextView: android.text.Layout getHintLayout()>:<final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES10: void glDisableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.StackView: android.view.ViewGroup.LayoutParams createOrReuseLayoutParams(android.view.View)>:<volatile>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ListView: void correctTooHigh(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.database.CursorToBulkCursorAdaptor: void deactivate()>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.accounts.Account: int hashCode()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.media.AudioAttributes.Builder: void <init>()>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.TextView: void setLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.ddm.DdmHandleViewDebug.1: void run()>:<public>:<android.ddm.DdmHandleViewDebug.1:java.lang.Runnable>
<android.media.session.ISessionController.Stub.Proxy: android.content.pm.ParceledListSlice getQueue()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.IWindowManager: void updateRotation(boolean,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.ViewTreeObserver: void removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.RenderNodeAnimator: long nGetDuration(long)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.IWindowSession: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.Rating: java.lang.String toString()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.database.AbstractWindowedCursor: int getType(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.ViewGroup: void removePointersFromTouchTargets(int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: boolean hasTransientState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.RemoteControlClient: android.graphics.Bitmap access.202(android.media.RemoteControlClient,android.graphics.Bitmap)>:<static>:<android.media.RemoteControlClient>
<android.media.MediaScanner: boolean access.000(java.lang.String)>:<static>:<android.media.MediaScanner>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()>:<private>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.widget.SpellChecker: void <init>(android.widget.TextView)>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.preference.PreferenceActivity.HeaderAdapter.HeaderViewHolder: void <init>()>:<private>:<android.preference.PreferenceActivity.HeaderAdapter.HeaderViewHolder>
<android.view.View: int computeVerticalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.view.ScaleGestureDetector: void addTouchHistory(android.view.MotionEvent)>:<private>:<android.view.ScaleGestureDetector>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void setVolume(java.lang.String,int)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.view.ViewRootImpl: boolean isLayoutRequested()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewGroup: void debug(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.projection.MediaProjectionManager.CallbackDelegate: void onStart(android.media.projection.MediaProjectionInfo)>:<public>:<android.media.projection.MediaProjectionManager.CallbackDelegate:android.media.projection.IMediaProjectionWatcherCallback.Stub,android.os.Binder>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.audiofx.Virtualizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.security.IKeystoreService: int grant(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.MotionEvent: float getToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvInputManager.SessionCallback: void onVideoAvailable(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.media.MediaDrm.MediaDrmStateException: void <init>(int,java.lang.String)>:<public>:<android.media.MediaDrm.MediaDrmStateException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.JetPlayer: boolean native_clearQueue()>:<private final native>:<android.media.JetPlayer>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SubtitleData: byte[] getData()>:<public>:<android.media.SubtitleData>
<android.view.RenderNode: boolean setRight(int)>:<public>:<android.view.RenderNode>
<android.filterpacks.ui.SurfaceTargetFilter: void registerSurface()>:<private>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.widget.ProgressBar: void setProgressTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.GLES20Canvas: void <init>()>:<protected>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.DatabaseUtils.InsertHelper: void close()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.SpellChecker: void access.900(android.widget.SpellChecker,android.text.Editable,int,int)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.media.RemoteController: void updateController(android.media.session.MediaController)>:<private>:<android.media.RemoteController>
<android.printservice.IPrintService.Stub.Proxy: void onPrintJobQueued(android.print.PrintJobInfo)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.view.View.MatchIdPredicate: void <init>(android.view.View)>:<private>:<android.view.View.MatchIdPredicate:com.android.internal.util.Predicate>
<android.media.AudioService: void onSetWiredDeviceConnectionState(int,int,java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.MediaScanner: int matchPaths(java.lang.String,java.lang.String)>:<private>:<android.media.MediaScanner>
<android.media.browse.MediaBrowser: void connect()>:<public>:<android.media.browse.MediaBrowser>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: void endBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.MultiSelectListPreference.SavedState.1: void <init>()>:<>:<android.preference.MultiSelectListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteAbortException: void <init>()>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.service.voice.VoiceInteractionSession.MyCallbacks: void <init>(android.service.voice.VoiceInteractionSession)>:<>:<android.service.voice.VoiceInteractionSession.MyCallbacks:com.android.internal.os.HandlerCaller.Callback,android.inputmethodservice.SoftInputWindow.Callback>
<android.database.sqlite.SQLiteConnection: void nativeBindString(long,long,int,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.filterpacks.imageproc.GrainFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.media.IRemoteDisplayCallback.Stub.Proxy: void onStateChanged(android.media.RemoteDisplayState)>:<public>:<android.media.IRemoteDisplayCallback.Stub.Proxy:android.media.IRemoteDisplayCallback>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setImage(android.media.Image)>:<public>:<android.media.MediaCodec.BufferMap.CodecBuffer>
<android.view.ViewRootImpl: boolean access.2302(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.View: void setBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)>:<public>:<android.media.MediaRecorder>
<android.view.AccessibilityInteractionController: void performAccessibilityActionClientThread(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>:<public>:<android.view.AccessibilityInteractionController>
<android.opengl.EGLExt: void <clinit>()>:<static>:<android.opengl.EGLExt>
<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.InputEvent: long getEventTime()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator.Transport: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AbstractAccountAuthenticator.1)>:<>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.service.voice.IVoiceInteractionSession: void closeSystemDialogs()>:<public abstract>:<android.service.voice.IVoiceInteractionSession:android.os.IInterface>
<android.media.IAudioService: int getLastAudibleStreamVolume(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.MediaFile: boolean isWMVEnabled()>:<private static>:<android.media.MediaFile>
<android.widget.TabHost: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.media.MediaCodecList: android.media.MediaCodecInfo.CodecCapabilities getCodecCapabilities(int,java.lang.String)>:<static final native>:<android.media.MediaCodecList>
<android.widget.RelativeLayout: void measureChild(android.view.View,android.widget.RelativeLayout.LayoutParams,int,int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.animation.AnimationSet: void setRepeatMode(int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.accessibility.CaptioningManager: int getRawUserStyle()>:<public>:<android.view.accessibility.CaptioningManager>
<android.filterpacks.imageproc.BitmapSource: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.media.MediaScanner: void native_finalize()>:<private final native>:<android.media.MediaScanner>
<android.media.TimedText: void readFont(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.service.notification.IConditionProvider.Stub: void <init>()>:<public>:<android.service.notification.IConditionProvider.Stub:android.os.Binder,android.service.notification.IConditionProvider>
<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.gesture.GestureOverlayView: boolean access.602(android.gesture.GestureOverlayView,boolean)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.RenderNode: void getInverseMatrix(android.graphics.Matrix)>:<public>:<android.view.RenderNode>
<android.media.MediaRouter.UserRouteInfo: void setIconResource(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.GridLayout: void validateLayoutParams()>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.AudioManager: void unloadSoundEffects()>:<public>:<android.media.AudioManager>
<android.media.tv.TvContentRating: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>:<private>:<android.media.tv.TvContentRating>
<android.view.GLES20Canvas: void skew(float,float)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.Choreographer: void <init>(android.os.Looper)>:<private>:<android.view.Choreographer>
<android.media.AudioService: void ensureValidSteps(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.FaceDetector: void fft_destroy()>:<private native>:<android.media.FaceDetector>
<android.view.AccessibilityInteractionController: boolean access.300(android.view.AccessibilityInteractionController,android.view.View)>:<static>:<android.view.AccessibilityInteractionController>
<android.view.VelocityTracker: void nativeClear(long)>:<private static native>:<android.view.VelocityTracker>
<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy: void onStart(android.media.projection.MediaProjectionInfo)>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy:android.media.projection.IMediaProjectionWatcherCallback>
<android.database.AbstractWindowedCursor: void closeWindow()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.IWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: void rebuildOutline()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] topologicalSort(android.widget.GridLayout.Arc[])>:<private>:<android.widget.GridLayout.Axis>
<android.preference.SeekBarVolumizer: void postStartSample()>:<private>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.ddm.DdmHandleAppName: void <init>()>:<private>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.ViewGroup: void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.MatrixCursor: int access.000(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.AutoCompleteTextView.1: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView.OnDismissListener)>:<>:<android.widget.AutoCompleteTextView.1:android.widget.PopupWindow.OnDismissListener>
<android.view.PointerIcon: int getSystemIconStyleIndex(int)>:<private static>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.ViewRootImpl.1: void onDisplayRemoved(int)>:<public>:<android.view.ViewRootImpl.1:android.hardware.display.DisplayManager.DisplayListener>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putLong(java.lang.String,long)>:<public>:<android.media.MediaMetadata.Builder>
<android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>:<private static final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.filterpacks.imageproc.FlipFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.media.AudioFormat: int access.102(android.media.AudioFormat,int)>:<static>:<android.media.AudioFormat>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.session.ISessionController: void adjustVolume(int,int,java.lang.String)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.inputmethod.SparseRectFArray: void <init>(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder)>:<private>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.media.AudioService: boolean checkSafeMediaVolume(int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputDevice.MotionRange: boolean isFromSource(int)>:<public>:<android.view.InputDevice.MotionRange>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.opengl.GLLogWrapper: int getLightParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.HardwareCallback: void <init>()>:<public>:<android.media.tv.TvInputManager.HardwareCallback>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: boolean deliverSelfNotifications()>:<public>:<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver:android.database.ContentObserver>
<android.view.KeyEvent: boolean isTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceActivity: android.widget.ListAdapter access.300(android.preference.PreferenceActivity)>:<static>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>:<public>:<android.animation.LayoutTransition>
<android.preference.Preference: int getOrder()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.preference.Preference: void onParentChanged(android.preference.Preference,boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.AccessibilityInteractionController: void access.500(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.service.voice.VoiceInteractionService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.database.sqlite.SQLiteSession: boolean yieldTransaction(long,boolean,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.widget.TextClock: void access.000(android.widget.TextClock)>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.View: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IAudioService.Stub.Proxy: boolean isBluetoothScoOn()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.IAudioService.Stub.Proxy: void adjustStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.102(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,int)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputHardwareCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub:android.os.Binder,android.media.tv.ITvInputHardwareCallback>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.opengl.GLLogWrapper: void glDepthMask(boolean)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putObject(int,java.lang.Object)>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.inputmethod.InputMethodSubtype.1: android.view.inputmethod.InputMethodSubtype createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.InputMethodSubtype.1:android.os.Parcelable.Creator>
<android.widget.Switch: void setTextOn(java.lang.CharSequence)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>:<public final>:<android.view.Window>
<android.view.ActionProvider.SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)>:<public abstract>:<android.view.ActionProvider.SubUiVisibilityListener>
<android.media.tv.TvView: void resetSurfaceView()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void dispatchPointer(android.view.MotionEvent)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.view.View.UnsetPressedState: void run()>:<public>:<android.view.View.UnsetPressedState:java.lang.Runnable>
<android.view.ScaleGestureDetector: boolean isInProgress()>:<public>:<android.view.ScaleGestureDetector>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void drawSelectedDateVerticalBars(android.graphics.Canvas)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.preference.DialogPreference: void onActivityDestroy()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.service.wallpaper.WallpaperService: java.util.ArrayList access.200(android.service.wallpaper.WallpaperService)>:<static>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioFormat: void <init>(int,int,int)>:<private>:<android.media.AudioFormat>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.security.KeyStore: boolean verify(java.lang.String,byte[],byte[])>:<public>:<android.security.KeyStore>
<android.widget.TextView: android.view.ActionMode.Callback getCustomSelectionActionModeCallback()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>:<public>:<android.media.MediaMetadataRetriever>
<android.media.tv.TvInputManager: void addBlockedRating(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager>
<android.view.View: boolean requestFocus()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputChannel: void <clinit>()>:<static>:<android.view.InputChannel:android.os.Parcelable>
<android.widget.AbsListView.AdapterDataSetObserver: void onChanged()>:<public>:<android.widget.AbsListView.AdapterDataSetObserver:android.widget.AdapterView.AdapterDataSetObserver>
<android.media.session.ISessionCallback.Stub.Proxy: void onAdjustVolume(int)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.FocusRequester: boolean hasSamePackage(java.lang.String)>:<>:<android.media.FocusRequester>
<android.view.View: int getSuggestedMinimumHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.Settings getProperties()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.TextView: java.lang.CharSequence getError()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hsm.HwAudioPermWrapper: boolean isBlocked()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.VolumePreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.VolumePreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.session.PlaybackState: int access.300(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.IRingtonePlayer.Stub.Proxy: void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes)>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onBatchedInputEventPending()>:<public>:<android.view.ViewRootImpl.WindowInputEventReceiver:android.view.InputEventReceiver>
<android.view.ViewGroup: android.view.View getFocusedChild()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.TextureView: void access.000(android.view.TextureView)>:<static>:<android.view.TextureView:android.view.View>
<android.preference.TwoStatePreference: boolean getDisableDependentsState()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.media.SoundPool.SoundPoolStub: void setPriority(int,int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.appwidget.AppWidgetHost: void stopListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.media.AudioManager: void setMasterMute(boolean)>:<public>:<android.media.AudioManager>
<android.widget.FastScroller: void transitionToHidden()>:<private>:<android.widget.FastScroller>
<android.database.sqlite.SQLiteDatabase: void onCorruption()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.AccessibilityManager.1: void setState(int)>:<public>:<android.view.accessibility.AccessibilityManager.1:android.view.accessibility.IAccessibilityManagerClient.Stub,android.os.Binder>
<android.media.MediaRouter.RouteInfo: boolean isSelected()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.View: float getBottomFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputFilter: android.view.InputEventConsistencyVerifier access.100(android.view.InputFilter)>:<static>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.accounts.IAccountManager.Stub.Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.widget.TextView: int getAutoLinkMask()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.BitmapSource: void loadImage(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapSource:android.filterfw.core.Filter>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: void enforceSealed()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.security.SystemKeyStore: java.lang.String generateNewKeyHexString(int,java.lang.String,java.lang.String)>:<public>:<android.security.SystemKeyStore>
<android.view.View: void removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.view.ViewPropertyAnimator>
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController.Renderer)>:<public>:<android.media.SubtitleController>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>:<public static>:<android.database.DatabaseUtils>
<android.view.FocusFinder: android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>:<private>:<android.view.FocusFinder>
<android.opengl.GLES30: void <clinit>()>:<static>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewParent: int getTextAlignment()>:<public abstract>:<android.view.ViewParent>
<android.widget.GridLayout.Axis: void shareOutDelta()>:<private>:<android.widget.GridLayout.Axis>
<android.view.inputmethod.InputMethodManager.1: void setUsingInputMethod(boolean)>:<public>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.media.tv.ITvInputHardware.Stub.Proxy: void setStreamVolume(float)>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.media.HwCustAudioService: void setDtsStatus()>:<protected>:<android.media.HwCustAudioService>
<android.media.session.MediaSession.QueueItem: void <init>(android.media.MediaDescription,long)>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.widget.RemoteViewsAdapter.3: void run()>:<public>:<android.widget.RemoteViewsAdapter.3:java.lang.Runnable>
<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.DayPickerView.1: void run()>:<public>:<android.widget.DayPickerView.1:java.lang.Runnable>
<android.view.WindowCallbackWrapper: boolean onSearchRequested()>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources.Theme,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>:<public static>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.view.GLES20Canvas: void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLSurfaceView.EglHelper: javax.microedition.khronos.opengles.GL createGL()>:<>:<android.opengl.GLSurfaceView.EglHelper>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputQueue: void finishInputEvent(long,boolean)>:<private>:<android.view.InputQueue>
<android.view.Window: void setDefaultLogo(int)>:<public>:<android.view.Window>
<android.print.IWriteResultCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IWriteResultCallback.Stub:android.os.Binder,android.print.IWriteResultCallback>
<android.printservice.PrinterDiscoverySession: int getId()>:<>:<android.printservice.PrinterDiscoverySession>
<android.media.MediaRouter.Callback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Space:android.view.View>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.view.GraphicBuffer.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.GraphicBuffer.1:android.os.Parcelable.Creator>
<android.view.IWindowSession.Stub.Proxy: void performDeferredDestroy(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getTemporaryMetaData()>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.MediaCodecList: java.lang.String findDecoderForFormat(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecList>
<android.widget.CalendarView: int getDateTextAppearance()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.animation.LayoutTransition.4: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.4:android.animation.AnimatorListenerAdapter>
<android.security.KeyChain.1: void onServiceDisconnected(android.content.ComponentName)>:<public>:<android.security.KeyChain.1:android.content.ServiceConnection>
<android.media.Ringtone: void <clinit>()>:<static>:<android.media.Ringtone>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.TvInputManager.Session: java.lang.String access.602(android.media.tv.TvInputManager.Session,java.lang.String)>:<static>:<android.media.tv.TvInputManager.Session>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.StackView.StackFrame: void setSliderAnimator(android.animation.ObjectAnimator)>:<>:<android.widget.StackView.StackFrame:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.print.PrintJob: int hashCode()>:<public>:<android.print.PrintJob>
<android.media.CCParser.CCMemory: void erase()>:<>:<android.media.CCParser.CCMemory>
<android.media.browse.MediaBrowser: android.service.media.IMediaBrowserServiceCallbacks access.1100(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.media.UnstyledTextExtractor: void onStart(java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.view.IWindowManager: void setStrictModeVisualIndicatorPreference(java.lang.String)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.InputDevice: int getGeneration()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.database.Cursor: boolean moveToPosition(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.Utils: android.util.Range alignRange(android.util.Range,int)>:<static>:<android.media.Utils>
<android.media.WebVttRenderingWidget.SpanLayout: void update()>:<public>:<android.media.WebVttRenderingWidget.SpanLayout:com.android.internal.widget.SubtitleView>
<android.media.MediaRouter.Static: void setSelectedRoute(android.media.MediaRouter.RouteInfo,boolean)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>:<public static>:<android.gesture.GestureUtils>
<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.HwAbsListView: boolean inCheckBox(android.view.View,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.BrightnessFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.IWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.service.persistentdata.IPersistentDataBlockService.Stub: void <init>()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub:android.os.Binder,android.service.persistentdata.IPersistentDataBlockService>
<android.printservice.IPrintService.Stub.Proxy: void destroyPrinterDiscoverySession()>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.opengl.GLLogWrapper: void glLoadIdentity()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.dreams.DreamService: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.KeyEvent: boolean isMetaKey(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.WebVttParser: void <init>(android.media.WebVttCueListener)>:<>:<android.media.WebVttParser>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String,int)>:<public>:<android.media.session.MediaSession>
<android.media.MediaRouter.UserRouteInfo: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.view.inputmethod.SparseRectFArray: android.graphics.RectF get(int)>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void <init>(android.app.Activity,android.print.PrintDocumentAdapter)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.database.Cursor: float getFloat(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.IMediaHTTPService.Stub: void <init>()>:<public>:<android.media.IMediaHTTPService.Stub:android.os.Binder,android.media.IMediaHTTPService>
<android.opengl.GLES20: void glLineWidth(float)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.RenderNode: float getScaleY()>:<public>:<android.view.RenderNode>
<android.view.AccessibilityIterators.AbstractTextSegmentIterator: void initialize(java.lang.String)>:<public>:<android.view.AccessibilityIterators.AbstractTextSegmentIterator:android.view.AccessibilityIterators.TextSegmentIterator>
<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.print.IPrintDocumentAdapter: void finish()>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.view.View: float getHorizontalScrollFactor()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.view.inputmethod.InputMethodManager: void setInputChannelLocked(android.view.InputChannel)>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>:<private>:<android.view.WindowManagerGlobal>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)>:<public static>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnection>
<android.widget.Editor.TextModifyOperation: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.media.MediaPlayer: void invoke(android.os.Parcel,android.os.Parcel)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.filterpacks.videosrc.MediaSource: int access.502(android.filterpacks.videosrc.MediaSource,int)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.View: boolean isHorizontalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputChannel: void readFromParcel(android.os.Parcel)>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.view.WindowManagerPolicy.WindowState: boolean hideLw(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.media.WebVttParser.1: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.1:android.media.WebVttParser.Phase>
<android.media.AudioService: void setMasterMute(boolean,int,java.lang.String,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ExpandableListView: android.graphics.drawable.Drawable getIndicator(android.widget.ExpandableListConnector.PositionMetadata)>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.IWindowManager.Stub.Proxy: void executeAppTransition()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.MediaCodecInfo.CodecCapabilities: void <init>(android.media.MediaCodecInfo.CodecProfileLevel[],int[],boolean,int,java.util.Map,java.util.Map)>:<>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.PointerIcon: void <init>(int)>:<private>:<android.view.PointerIcon:android.os.Parcelable>
<android.media.MediaCodec.Callback: void onError(android.media.MediaCodec,android.media.MediaCodec.CodecException)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder type(int)>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.media.session.ISessionController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.animation.LayoutTransition: long access.700(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.tv.ITvInputManager.Stub.Proxy: void createOverlayView(android.os.IBinder,android.os.IBinder,android.graphics.Rect,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setDateTextAppearance(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.MediaDrm: void provideProvisionResponse(byte[])>:<public>:<android.media.MediaDrm>
<android.media.tv.TvView: android.view.Surface access.502(android.media.tv.TvView,android.view.Surface)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.IMediaHTTPConnection: int readAt(long,int)>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.widget.TextView.Marquee: int access.710(android.widget.TextView.Marquee)>:<static>:<android.widget.TextView.Marquee>
<android.media.RemoteController: void onDisplayEnable(boolean)>:<private>:<android.media.RemoteController>
<android.database.sqlite.SQLiteGlobal: int releaseMemory()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.view.RenderNodeAnimator: boolean isStarted()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void onEnrollResult(int,int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.session.ISessionController.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionController.Stub:android.os.Binder,android.media.session.ISessionController>
<android.service.dreams.Sandman: boolean isScreenSaverEnabled(android.content.Context)>:<private static>:<android.service.dreams.Sandman>
<android.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.TimePickerSpinnerDelegate: boolean access.700(android.widget.TimePickerSpinnerDelegate)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaPlayer.4: int addTrack()>:<private>:<android.media.MediaPlayer.4:java.lang.Runnable>
<android.preference.ListPreference: void setEntries(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.accounts.AccountManager.AmsTask: void access.500(android.accounts.AccountManager.AmsTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.ThreadedRenderer: void draw(android.view.View,android.view.View.AttachInfo,android.view.HardwareRenderer.HardwareDrawCallbacks)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.InputDevice: int getControllerNumber()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.ViewRootImpl: boolean leaveTouchMode()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.filterpacks.imageproc.SharpenFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.print.PrintJob: void cancel()>:<public>:<android.print.PrintJob>
<android.media.AudioRecord: int getAudioSource()>:<public>:<android.media.AudioRecord>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: int[] access.200(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder)>:<static>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.media.MediaFocusControl: android.os.PowerManager.WakeLock access.1900(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.WindowAnimationFrameStats.1: android.view.WindowAnimationFrameStats createFromParcel(android.os.Parcel)>:<public>:<android.view.WindowAnimationFrameStats.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityManager: void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.widget.FastScroller.5: void <init>(java.lang.String)>:<>:<android.widget.FastScroller.5:android.util.IntProperty>
<android.preference.MultiCheckPreference: void setEntryValues(java.lang.String[])>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.accounts.AccountManager.12: void doWork()>:<public>:<android.accounts.AccountManager.12:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<private static>:<android.view.animation.AnimationUtils>
<android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)>:<public static>:<android.media.MediaFile>
<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.hsm.MediaTransactWrapper: void recycleParcel(android.os.Parcel)>:<private static>:<android.hsm.MediaTransactWrapper>
<android.widget.ActivityChooserModel.HistoricalRecord: boolean equals(java.lang.Object)>:<public>:<android.widget.ActivityChooserModel.HistoricalRecord>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.KeyCharacterMap: void <init>(long)>:<private>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.tv.TvView: void dispatchSurfaceChanged(int,int,int)>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void inflateSearchView(android.content.Context,android.util.AttributeSet,android.content.res.TypedArray)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.ILayoutResultCallback,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.InputChannel: int describeContents()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.EditText: java.lang.CharSequence getText()>:<public volatile>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.opengl.GLErrorWrapper: void glAlphaFunc(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager.2: void onInputAdded(java.lang.String)>:<public>:<android.media.tv.TvInputManager.2:android.media.tv.ITvInputManagerCallback.Stub,android.os.Binder>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.AbstractCursor: int getPosition()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.filterpacks.videosrc.CameraSource: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.widget.TextClock: void chooseFormat()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.TimePickerClockDelegate.1: void <init>(android.widget.TimePickerClockDelegate)>:<>:<android.widget.TimePickerClockDelegate.1:android.widget.NumberPicker.OnValueChangeListener>
<android.view.ViewRootImpl.W: void dispatchSystemUiVisibilityChanged(int,int,int,int)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.widget.Spinner.SpinnerPopup: void dismiss()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.MediaCodec: void stop()>:<public final>:<android.media.MediaCodec>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.animation.PathKeyframes.SimpleKeyframes: void <init>(android.animation.PathKeyframes.1)>:<>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.media.browse.MediaBrowser: android.content.ComponentName getServiceComponent()>:<public>:<android.media.browse.MediaBrowser>
<android.filterpacks.imageproc.DrawOverlayFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DrawOverlayFilter:android.filterfw.core.Filter>
<android.widget.Editor: boolean isCursorInsideSuggestionSpanOuter()>:<protected>:<android.widget.Editor>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>:<public abstract>:<android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.Cursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.accessibility.AccessibilityNodeInfo: void addLegacyStandardActions(int)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.HwSplineOverScrollerDummy: int getCubicDuration(int)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.view.SurfaceControl: int nativeGetActiveConfig(android.os.IBinder)>:<private static native>:<android.view.SurfaceControl>
<android.view.ViewGroup.TouchTarget: void recycle()>:<public>:<android.view.ViewGroup.TouchTarget>
<android.filterpacks.imageproc.StraightenFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void access.900(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.IWindow.Stub.Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.preference.DialogPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.DialogPreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.RemoteControlClient.1: void onSeekTo(long)>:<public>:<android.media.RemoteControlClient.1:android.media.session.MediaSession.Callback>
<android.view.TextureView.1: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public>:<android.view.TextureView.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected abstract>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.widget.Editor.SelectionModifierCursorController: void updateMinAndMaxOffsets(android.view.MotionEvent)>:<private>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.view.Window: void setFormat(int)>:<public>:<android.view.Window>
<android.opengl.GLSurfaceView.GLThread: void onPause()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.widget.RemoteViews.3: android.widget.RemoteViews[] newArray(int)>:<public>:<android.widget.RemoteViews.3:android.os.Parcelable.Creator>
<android.accounts.AbstractAccountAuthenticator.Transport: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.widget.Editor.EasyEditPopupWindow: void createPopupWindow()>:<protected>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.AudioAttributes: int describeContents()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.filterpacks.videosrc.MediaSource: int access.200(android.filterpacks.videosrc.MediaSource)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.widget.SearchView: void setImeOptions(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.Choreographer.CallbackRecord: void run(long)>:<public>:<android.view.Choreographer.CallbackRecord>
<android.filterpacks.imageproc.ToRGBAFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.database.CursorWrapper: short getShort(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.MediaRecorder: void _setOutputFile(java.io.FileDescriptor,long,long)>:<public native>:<android.media.MediaRecorder>
<android.media.session.MediaSessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>:<public>:<android.media.session.MediaSessionManager>
<android.view.animation.Animation: void reset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.tv.TvView.TvInputCallback: void onVideoSizeChanged(java.lang.String,int,int)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>:<public>:<android.security.KeyStore>
<android.media.MediaMetadata: android.util.ArrayMap access.200()>:<static>:<android.media.MediaMetadata:android.os.Parcelable>
<android.security.Credentials: void <init>()>:<public>:<android.security.Credentials>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.media.AudioManager: int getRingerMode()>:<public>:<android.media.AudioManager>
<android.widget.TextView: void onMeasure(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRouter.RouteInfo: int getVolume()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.Editor.EasyEditPopupWindow: void onClick(android.view.View)>:<public>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.inputmethod.InputMethodSubtypeArray: int getCount()>:<public>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.view.DisplayInfo: java.lang.String toString()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.Tokenizer.DataTokenizer: boolean replaceEscape(java.lang.String,java.lang.String,int)>:<private>:<android.media.Tokenizer.DataTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.HardwareRenderer.HardwareDrawCallbacks: void onHardwarePostDraw(android.view.HardwareCanvas)>:<public abstract>:<android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.audiofx.AudioEffect: int setParameter(int,short)>:<public>:<android.media.audiofx.AudioEffect>
<android.database.ContentObserver.Transport: void <init>(android.database.ContentObserver)>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.widget.Editor.SelectionStartHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.service.notification.ZenModeConfig: boolean isValidHour(int)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.tv.TvContentRating: java.lang.String flattenToString()>:<public>:<android.media.tv.TvContentRating>
<android.widget.Editor.InsertionPointCursorController: void <init>(android.widget.Editor)>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.widget.RemoteViewsAdapter: java.util.HashMap access.1500()>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void init(int,java.util.List)>:<public>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.service.notification.ConditionProviderService.Provider: void onUnsubscribe(android.net.Uri)>:<public>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TextClock: java.lang.String getTimeZone()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.MediaCodecInfo.CodecProfileLevel: void <init>()>:<public>:<android.media.MediaCodecInfo.CodecProfileLevel>
<android.widget.Switch: int getThumbOffset()>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.service.fingerprint.FingerprintManager: android.service.fingerprint.FingerprintManagerReceiver access.000(android.service.fingerprint.FingerprintManager)>:<static>:<android.service.fingerprint.FingerprintManager>
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm.OnEventListener)>:<public>:<android.media.MediaDrm>
<android.printservice.IPrintService.Stub.Proxy: void setClient(android.printservice.IPrintServiceClient)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.view.WindowManagerPolicy.FakeWindow: void dismiss()>:<public abstract>:<android.view.WindowManagerPolicy.FakeWindow>
<android.animation.StateListAnimator: void setState(int[])>:<public>:<android.animation.StateListAnimator>
<android.media.audiofx.Equalizer.BaseParameterListener: void <init>(android.media.audiofx.Equalizer)>:<private>:<android.media.audiofx.Equalizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.session.ISessionController.Stub: void <init>()>:<public>:<android.media.session.ISessionController.Stub:android.os.Binder,android.media.session.ISessionController>
<android.widget.ListView: int getMaxScrollAmount()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: int getHorizontalScrollbarHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.IAccessibilityManagerClient.Stub: android.view.accessibility.IAccessibilityManagerClient asInterface(android.os.IBinder)>:<public static>:<android.view.accessibility.IAccessibilityManagerClient.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManagerClient>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaCrypto: void native_setup(byte[],byte[])>:<private final native>:<android.media.MediaCrypto>
<android.view.inputmethod.EditorInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.EditorInfo.1:android.os.Parcelable.Creator>
<android.widget.ProgressBar: void stopAnimation()>:<>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaCodec: void start()>:<public final>:<android.media.MediaCodec>
<android.view.DisplayInfo: int describeContents()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.View: void setImportantForAccessibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmHandleViewDebug: void connected()>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.Tokenizer: android.media.Tokenizer.TokenizerPhase access.500(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.database.AbstractCursor: boolean isClosed()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView access.900(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.Switch: void toggle()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES10: void glLightf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.Switch.1: void <init>(java.lang.String)>:<>:<android.widget.Switch.1:android.util.FloatProperty>
<android.view.DisplayInfo: int hashCode()>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.view.InputEvent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.InputEvent.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GraphicBuffer: int getFormat()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.Editor.HandleView: int getCursorOffset()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.session.MediaController.MessageHandler: android.media.session.MediaController.Callback access.100(android.media.session.MediaController.MessageHandler)>:<static>:<android.media.session.MediaController.MessageHandler:android.os.Handler>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.WindowInsets: int getWindowDecorInsetBottom()>:<public>:<android.view.WindowInsets>
<android.widget.Spinner.SpinnerPopup: void setVerticalOffset(int)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.ITvInputService: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.view.View.3: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.3:android.util.FloatProperty>
<android.media.MediaRouterClientState: int describeContents()>:<public>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.widget.Editor.SelectionActionModeCallback: void <init>(android.widget.Editor,android.widget.Editor.1)>:<>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.view.View.MatchLabelForPredicate: boolean apply(java.lang.Object)>:<public volatile>:<android.view.View.MatchLabelForPredicate:com.android.internal.util.Predicate>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.View: android.view.ViewRootImpl getViewRootImpl()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convert(java.lang.Object)>:<public>:<android.animation.BidirectionalTypeConverter.InvertedConverter:android.animation.BidirectionalTypeConverter,android.animation.TypeConverter>
<android.widget.FastScroller.5: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.widget.FastScroller.5:android.util.IntProperty>
<android.accounts.AccountAuthenticatorResponse.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.view.OrientationEventListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationEventListener>
<android.media.SubtitleController: boolean hasRendererFor(android.media.MediaFormat)>:<public>:<android.media.SubtitleController>
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.accounts.AccountManager.BaseFutureTask: void startTask()>:<protected>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.media.MediaCodec.MediaImage.MediaPlane: int getPixelStride()>:<public>:<android.media.MediaCodec.MediaImage.MediaPlane:android.media.Image.Plane>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowId: void <init>(android.os.IBinder)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.3100(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.filterpacks.imageproc.FixedRotationFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.FixedRotationFilter:android.filterfw.core.Filter>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>:<public abstract>:<android.opengl.GLSurfaceView.GLWrapper>
<android.database.sqlite.SQLiteConnection: java.lang.String trimSqlForDisplay(java.lang.String)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.SurfaceHolder.Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback2:android.view.SurfaceHolder.Callback>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.opengl.GLES20: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: java.lang.String toString()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.animation.Animation: void detach()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.projection.MediaProjectionManager.CallbackDelegate: android.media.projection.MediaProjectionManager.Callback access.000(android.media.projection.MediaProjectionManager.CallbackDelegate)>:<static>:<android.media.projection.MediaProjectionManager.CallbackDelegate:android.media.projection.IMediaProjectionWatcherCallback.Stub,android.os.Binder>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo: int hashCode()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.FocusFinderHelper: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>:<public>:<android.view.FocusFinderHelper>
<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask: int internalGetInitialAvailability()>:<private>:<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask:android.os.AsyncTask>
<android.media.session.ISessionControllerCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.ISessionControllerCallback.Stub:android.os.Binder,android.media.session.ISessionControllerCallback>
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaRouter.UserRouteInfo: void setDescription(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.media.effect.effects.IdentityEffect: void release()>:<public>:<android.media.effect.effects.IdentityEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.session.ISession: void sendEvent(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationStart(android.animation.Animator)>:<public>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.media.AudioService: void access.8600(android.media.AudioService,int,int,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.gesture.InstanceLearner: void <clinit>()>:<static>:<android.gesture.InstanceLearner:android.gesture.Learner>
<android.service.media.IMediaBrowserService.Stub.Proxy: void connect(java.lang.String,android.os.Bundle,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.media.MediaDrmException: void <init>(java.lang.String)>:<public>:<android.media.MediaDrmException:java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()>:<private>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.session.PlaybackState: int getRccStateFromState(int)>:<public static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.preference.PreferenceManager: void init(android.content.Context)>:<private>:<android.preference.PreferenceManager>
<android.media.AudioTrack: android.os.Looper access.000(android.media.AudioTrack)>:<static>:<android.media.AudioTrack>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int hashCode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.service.dreams.DreamService: void setDozeScreenState(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.preference.Preference: int getPersistedInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLLogWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl.4: void run()>:<public>:<android.view.ViewRootImpl.4:java.lang.Runnable>
<android.view.WindowManager.InvalidDisplayException: void <init>(java.lang.String)>:<public>:<android.view.WindowManager.InvalidDisplayException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaFocusControl: void setNewRcClientOnDisplays_syncRcsCurrc(int,android.app.PendingIntent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,boolean,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection>
<android.widget.CursorAdapter: long getItemId(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.media.CameraProfile: int native_get_num_image_encoding_quality_levels(int)>:<private static final native>:<android.media.CameraProfile>
<android.media.RemoteDisplay: void nativePause(long)>:<private native>:<android.media.RemoteDisplay>
<android.view.RenderNode: boolean nSetLayerPaint(long,long)>:<private static native>:<android.view.RenderNode>
<android.print.PrintManager: java.util.List getInstalledPrintServices()>:<public>:<android.print.PrintManager>
<android.view.FocusFinder.SequentialFocusComparator: void <init>(android.view.FocusFinder.1)>:<>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.print.ILayoutResultCallback: void onLayoutCanceled(int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: void shutdown()>:<public>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<android.view.ViewRootImpl.SyntheticKeyboardHandler: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.SyntheticKeyboardHandler>
<android.widget.ListView: android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISessionController: java.lang.CharSequence getQueueTitle()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.AudioHandle: java.lang.String toString()>:<public>:<android.media.AudioHandle>
<android.media.MediaPlayer: void setAudioSessionId(int)>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.printservice.PrintJob: boolean isCancelled()>:<public>:<android.printservice.PrintJob>
<android.view.inputmethod.ExtractedText.1: android.view.inputmethod.ExtractedText[] newArray(int)>:<public>:<android.view.inputmethod.ExtractedText.1:android.os.Parcelable.Creator>
<android.view.ContextThemeWrapper: int getThemeResId()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.ViewRootImpl.InputStage: void dump(java.lang.String,java.io.PrintWriter)>:<>:<android.view.ViewRootImpl.InputStage>
<android.filterpacks.imageproc.ContrastFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ContrastFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.widget.ExpandableListView: void setIndicatorBoundsRelative(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.database.sqlite.SQLiteDatabase: void finalize()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioService: android.os.Looper access.1500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.ContentObserver.Transport: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.media.AudioService: boolean isCameraSoundForced()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: void notifyRendererOfFramePending()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityWindowInfo: void setConnectionId(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.IWindowManager: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.MenuItem: boolean isVisible()>:<public abstract>:<android.view.MenuItem>
<android.service.notification.NotificationListenerService.RankingMap: void buildVisibilityOverridesLocked()>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.print.ILayoutResultCallback.Stub.Proxy: void onLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>:<public>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.AudioAttributes: int access.000(android.media.AudioAttributes)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.View: int getScrollX()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.RenderNode: boolean nSetRotation(long,float)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaInserter: void insert(android.net.Uri,android.content.ContentValues,boolean)>:<private>:<android.media.MediaInserter>
<android.media.JetPlayer: void <clinit>()>:<static>:<android.media.JetPlayer>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.ViewRootImpl: void updateConfiguration(android.content.res.Configuration,boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.service.fingerprint.FingerprintManagerReceiver: void onEnrollResult(int,int)>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.media.audiofx.Equalizer.BaseParameterListener: void <init>(android.media.audiofx.Equalizer,android.media.audiofx.Equalizer.1)>:<>:<android.media.audiofx.Equalizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.tv.TvInputHardwareInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.widget.ActionMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView.ItemView)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.SurfaceControl.PhysicalDisplayInfo: void copyFrom(android.view.SurfaceControl.PhysicalDisplayInfo)>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.security.IKeystoreService.Stub.Proxy: long getmtime(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: java.util.List getInstalledAccessibilityServiceList(int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.AudioService.ForceControlStreamClient: void release()>:<public>:<android.media.AudioService.ForceControlStreamClient:android.os.IBinder.DeathRecipient>
<android.view.RenderNode: void finalize()>:<protected>:<android.view.RenderNode>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.AudioService: int getSampleId(android.media.SoundPool,int,java.lang.String,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>:<private static>:<android.view.animation.AnimationUtils>
<android.view.View.1: void <init>(android.view.View,java.lang.String)>:<>:<android.view.View.1:android.view.View.OnClickListener>
<android.widget.DatePickerCalendarDelegate: void onDayOfMonthSelected(int,int,int)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.preference.Preference: void dispatchSaveInstanceState(android.os.Bundle)>:<>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewRootImpl.RunQueue: void executeActions(android.os.Handler)>:<>:<android.view.ViewRootImpl.RunQueue>
<android.view.TextureView: void nDestroyNativeWindow()>:<private native>:<android.view.TextureView:android.view.View>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void drawWeekSeparators(android.graphics.Canvas)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.filterpacks.videosrc.MediaSource.1: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>:<public>:<android.filterpacks.videosrc.MediaSource.1:android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.IWindowSession.Stub.Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.filterpacks.base.GLTextureTarget: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.GLTextureTarget:android.filterfw.core.Filter>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Nsd: boolean checkIfNsdSupportLauncher()>:<public static>:<android.view.Nsd>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.Toast: int getYOffset()>:<public>:<android.widget.Toast>
<android.media.MediaScanner: int access.700(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.widget.ActionMenuPresenter: boolean hideSubMenus()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected abstract>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.security.KeyPairGeneratorSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig.DowntimeInfo tryParseDowntimeConditionId(android.net.Uri)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGLConfig: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.widget.RadialTimePickerView: void drawAmPm(android.graphics.Canvas)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>:<private>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.DatePickerCalendarDelegate: void tryVibrate()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.Editor.HandleView: void updatePosition(int,int,boolean,boolean)>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.IWindowManager.Stub.Proxy: float[] getAnimationScales()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.service.dreams.DreamService: boolean access.300(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.wallpaper.WallpaperService.Engine: void updateSurface(boolean,boolean,boolean)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.IWindow.Stub: android.view.IWindow asInterface(android.os.IBinder)>:<public static>:<android.view.IWindow.Stub:android.os.Binder,android.view.IWindow>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.projection.MediaProjectionManager: void <init>(android.content.Context)>:<public>:<android.media.projection.MediaProjectionManager>
<android.database.sqlite.SQLiteConnection: long nativePrepareStatement(long,java.lang.String)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.tv.TvInputHardwareInfo: void <clinit>()>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.RemoteController: boolean seekTo(long)>:<public>:<android.media.RemoteController>
<android.media.AudioFormat: java.lang.String toString()>:<public>:<android.media.AudioFormat>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRectangleOnScreenRequested(int,int,int,int)>:<public abstract>:<android.view.WindowManagerInternal.MagnificationCallbacks>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.service.notification.IConditionProvider.Stub.Proxy: void onUnsubscribe(android.net.Uri)>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.preference.PreferenceActivity.Header: void readFromParcel(android.os.Parcel)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate()>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.media.MediaScanner.FileEntry: void <init>(long,java.lang.String,long,int)>:<>:<android.media.MediaScanner.FileEntry>
<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy:android.view.accessibility.IAccessibilityManagerClient>
<android.media.MediaPlayer: void _setVolume(float,float)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: java.lang.Object getAnimatedValue()>:<>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.print.IPrintManager.Stub.Proxy: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.media.IAudioService.Stub.Proxy: void playSoundEffect(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.printservice.IPrintService: void stopPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.widget.Editor: boolean hasSelectionControllerOuter()>:<protected>:<android.widget.Editor>
<android.view.IWindowManager: void overridePendingAppTransitionScaleUp(int,int,int,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.PlayerRecord: void dump(java.io.PrintWriter,boolean)>:<>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.database.CursorWindow: java.lang.String printStats()>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.service.fingerprint.FingerprintManager: void startListening(android.service.fingerprint.FingerprintManagerReceiver)>:<public>:<android.service.fingerprint.FingerprintManager>
<android.preference.GenericInflater: void rInflate(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>:<private>:<android.preference.GenericInflater>
<android.view.Window: void alwaysReadCloseOnTouchAttr()>:<public abstract>:<android.view.Window>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.appwidget.AppWidgetHost: void <clinit>()>:<static>:<android.appwidget.AppWidgetHost>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>:<public>:<android.preference.PreferenceManager>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.RemoteViews.ViewGroupAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.widget.TextView.CharWrapper: java.lang.String toString()>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.media.projection.MediaProjection: void stop()>:<public>:<android.media.projection.MediaProjection>
<android.service.fingerprint.IFingerprintService: void stopListening(android.os.IBinder,int)>:<public abstract>:<android.service.fingerprint.IFingerprintService:android.os.IInterface>
<android.media.MediaRouter.Callback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.media.tv.TvInputManager: boolean isSingleSessionActive()>:<public>:<android.media.tv.TvInputManager>
<android.media.AudioSystem: int releaseAudioPatch(android.media.AudioPatch)>:<public static native>:<android.media.AudioSystem>
<android.media.projection.IMediaProjectionManager: boolean hasProjectionPermission(int,java.lang.String)>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.Surface: void <init>()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.OrientationListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.media.tv.TvInputManager.3: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>:<public>:<android.media.tv.TvInputManager.3:android.media.tv.ITvInputHardwareCallback.Stub,android.os.Binder>
<android.print.IPrintManager.Stub.Proxy: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>:<public>:<android.view.Window>
<android.widget.SearchView: android.view.View.OnFocusChangeListener access.200(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.AudioService: android.media.SoundPool access.1700(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioManager: boolean isAudioFocusExclusive()>:<public>:<android.media.AudioManager>
<huawei.android.app.HwCustEmergDataManagerImpl: java.lang.String getEmergencyPkgName()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl:huawei.android.app.HwCustEmergDataManager>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.RemoteViewsAdapter: void updateTemporaryMetaData()>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.KeyCharacterMap: long nativeReadFromParcel(android.os.Parcel)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.Editor.ActionPopupWindow: android.widget.TextView getPasteTextView()>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.service.voice.VoiceInteractionSession: void doCreate(com.android.internal.app.IVoiceInteractionManagerService,android.os.IBinder,android.os.Bundle)>:<>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.WindowInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowInfo:android.os.Parcelable>
<android.media.AudioService: void adjustStreamVolume(int,int,int,java.lang.String,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ListView: boolean isDirectChildHeaderOrFooter(android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GraphicBuffer: int getUsage()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.ZoomButtonsController.1: void <init>(android.widget.ZoomButtonsController)>:<>:<android.widget.ZoomButtonsController.1:android.content.BroadcastReceiver>
<android.view.View: void onDetachedFromWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputHardwareInfo: int getAudioType()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.view.View: int getWindowAttachCount()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManager getServiceLocked()>:<private>:<android.view.accessibility.AccessibilityManager>
<android.accounts.AccountManager.6: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.UserHandle)>:<>:<android.accounts.AccountManager.6:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>:<public static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setCompoundDrawablePadding(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaSession.CallbackStub: void onPrevious()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: void taskStarted(android.content.Intent,int)>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.widget.Editor.SelectionActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>:<public>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.view.View: void stopNestedScroll()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy: void startKeyguardExitAnimation(long,long)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.InputFilter: void onUninstalled()>:<public>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.media.AudioManagerInternal: void setStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public abstract>:<android.media.AudioManagerInternal>
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.service.notification.ZenModeConfig: int describeContents()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.preference.PreferenceFrameLayout: void addView(android.view.View)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.EncoderCapabilities.AudioEncoderCap: void <init>(int,int,int,int,int,int,int)>:<private>:<android.media.EncoderCapabilities.AudioEncoderCap>
<android.view.ViewRootImpl.QueuedInputEvent: java.lang.String toString()>:<public>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.widget.AdapterView: void checkSelectionChanged()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.Editor: boolean reportExtractedText()>:<>:<android.widget.Editor>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OpenOverflowRunnable getPostedOpenRunnable()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.tv.ITvInputSessionCallback: void onChannelRetuned(android.net.Uri)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.database.DatabaseUtils: boolean queryIsEmpty(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.inputmethod.InputMethodManager.1: void <init>(android.view.inputmethod.InputMethodManager)>:<>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri,int)>:<private>:<android.database.ContentObserver>
<android.media.Rating: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.Rating:android.os.Parcelable>
<android.view.ViewGroup: boolean canAnimate()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ScrollView: void computeScroll()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaHTTPConnection: long getSize()>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.print.PrintJobInfo.Builder: void <init>(android.print.PrintJobInfo)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.ViewOverlay: void clear()>:<public>:<android.view.ViewOverlay>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Token.1: void <init>()>:<>:<android.media.session.MediaSession.Token.1:android.os.Parcelable.Creator>
<android.database.CursorWrapper: boolean moveToLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.ddm.DdmHandleExit: void disconnected()>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.AccountManager.9: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle)>:<>:<android.accounts.AccountManager.9:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.media.projection.MediaProjection.CallbackRecord.1: void run()>:<public>:<android.media.projection.MediaProjection.CallbackRecord.1:java.lang.Runnable>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: void scale(float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: void thawRotation()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.Display: java.lang.String typeToString(int)>:<public static>:<android.view.Display>
<android.view.ViewGroup.TouchTarget: void <clinit>()>:<static>:<android.view.ViewGroup.TouchTarget>
<android.media.Rating.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.Rating.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: void onAnimationEnd()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: boolean access.300(android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.view.IWindowSession: void setInTouchMode(boolean)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.HardwareLayer: boolean prepare(int,int,boolean)>:<public>:<android.view.HardwareLayer>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IWindowManager.Stub.Proxy: void setAnimationScales(float[])>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.IOnKeyguardExitResult.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IOnKeyguardExitResult.Stub.Proxy:android.view.IOnKeyguardExitResult>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.animation.PropertyValuesHolder: void nCallFloatMethod(java.lang.Object,long,float)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.accounts.GrantCredentialsPermissionActivity.1: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.GrantCredentialsPermissionActivity.1:android.accounts.AccountManagerCallback>
<android.media.session.ISession: android.media.session.ISessionController getController()>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.service.persistentdata.IPersistentDataBlockService: long getMaximumDataBlockSize()>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.JetPlayer: boolean native_closeJetFile()>:<private final native>:<android.media.JetPlayer>
<android.filterpacks.imageproc.ToPackedGrayFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.animation.ValueAnimator.AnimationHandler: void <init>(android.animation.ValueAnimator.1)>:<>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.IPrintManager: void validatePrinters(java.util.List,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.view.View: void setDrawingCacheQuality(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.animation.ValueAnimator: long access.000(android.animation.ValueAnimator)>:<static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.audiofx.AudioEffect: int getParameter(int[],byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.RelativeLayout: void measureChildHorizontal(android.view.View,android.widget.RelativeLayout.LayoutParams,int,int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.MediaMuxer: void nativeSetOrientationHint(long,int)>:<private static native>:<android.media.MediaMuxer>
<android.view.MenuInflater: java.lang.Object[] access.300(android.view.MenuInflater)>:<static>:<android.view.MenuInflater>
<android.print.PrintAttributes.Margins: void <init>(int,int,int,int)>:<public>:<android.print.PrintAttributes.Margins>
<android.animation.PathKeyframes: void invalidateCache()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.media.AudioService: int access.4400(android.media.AudioService,int,int,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.IAccountAuthenticatorResponse.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.view.IWindow.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.IAudioService.Stub.Proxy: void setMicrophoneMute(boolean,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.filterpacks.imageproc.PosterizeFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.PosterizeFilter:android.filterfw.core.Filter>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent createEvent(int)>:<public static>:<android.media.MediaSyncEvent>
<android.widget.Spinner.DropdownPopup: void setPromptText(java.lang.CharSequence)>:<public>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.view.AccessibilityInteractionController: void access.400(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.widget.SearchView: void onVoiceClicked()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.TextView.CharWrapper: void getChars(int,int,char[],int)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.media.SoundPool.SoundPoolStub: void release()>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.database.MatrixCursor: int getType(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.GraphicBuffer: boolean isDestroyed()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.media.session.MediaSession.CallbackStub: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.MediaMetadata.Builder: void <init>(android.media.MediaMetadata)>:<public>:<android.media.MediaMetadata.Builder>
<android.media.tv.ITvInputClient: void onSessionEvent(java.lang.String,android.os.Bundle,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.service.media.IMediaBrowserService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.media.IMediaBrowserService.Stub:android.os.Binder,android.service.media.IMediaBrowserService>
<android.media.ImageReader.SurfaceImage: void setImageValid(boolean)>:<private>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.media.AudioService: void makeA2dpDeviceUnavailableNow(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewGroup: void damageChild(android.view.View,android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ProgressBar: void scheduleAccessibilityEventSender()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.DayPickerView: void setUpListView()>:<protected>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.View: boolean isPressed()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addMediaSize(android.print.PrintAttributes.MediaSize,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.widget.ViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Transformation: void setAlpha(float)>:<public>:<android.view.animation.Transformation>
<android.service.voice.AlwaysOnHotwordDetector: int startRecognitionLocked(int)>:<private>:<android.service.voice.AlwaysOnHotwordDetector>
<android.widget.TimePicker.TimePickerDelegate: void onRestoreInstanceState(android.os.Parcelable)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.AudioFormat: int access.300(android.media.AudioFormat)>:<static>:<android.media.AudioFormat>
<android.view.InputEvent: void recycleIfNeededAfterDispatch()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.media.MediaCodec.CodecException: int getErrorCode()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>:<>:<android.view.FocusFinder>
<android.opengl.GLErrorWrapper: void glLightf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: android.media.SoundPool access.1702(android.media.AudioService,android.media.SoundPool)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowManagerPolicy: void beginLayoutLw(boolean,int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputService.Session: void setOverlayViewEnabled(boolean)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.VideoView: android.media.MediaPlayer.OnErrorListener access.1600(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.session.ISessionController.Stub.Proxy: void setVolumeTo(int,int,java.lang.String)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.AccessibilityInteractionController.PrivateHandler: java.lang.String getMessageName(android.os.Message)>:<public>:<android.view.AccessibilityInteractionController.PrivateHandler:android.os.Handler>
<android.media.tv.TvInputService.Session: android.graphics.Rect access.500(android.media.tv.TvInputService.Session)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.SoundPool.SoundPoolStub: void setVolume(int,float)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.ClosedCaptionWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterCapabilitiesInfo: java.util.List access.002(android.print.PrinterCapabilitiesInfo,java.util.List)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.widget.CalendarView: void setDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>:<public abstract>:<android.accounts.AccountManagerCallback>
<android.view.ViewRootImpl: boolean isInTouchMode()>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.WindowManagerPolicy: boolean isKeyguardSecure()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ListView: android.view.View fillDown(int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.animation.AnimatorSet.DependencyListener: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.media.browse.MediaBrowser: void subscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)>:<public>:<android.media.browse.MediaBrowser>
<android.hsm.HwSystemManager: boolean allowOp(android.content.Context,int,boolean)>:<public static>:<android.hsm.HwSystemManager>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: int writeCommand(java.lang.String,byte[])>:<private final>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.ViewGroup: void unFocus(android.view.View)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaPlayer: long access.500(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.session.PlaybackState.1: android.media.session.PlaybackState createFromParcel(android.os.Parcel)>:<public>:<android.media.session.PlaybackState.1:android.os.Parcelable.Creator>
<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>:<public native>:<android.media.MediaExtractor>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean awakenScrollBars()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setContentType(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.view.ViewGroup.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo build()>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.preference.MultiCheckPreference: boolean[] getValues()>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.tv.TvView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: void setMarginsRelative(int,int,int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.AccessibilityInteractionController.PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>:<public>:<android.view.AccessibilityInteractionController.PrivateHandler:android.os.Handler>
<android.view.RenderNode: boolean nSetElevation(long,float)>:<private static native>:<android.view.RenderNode>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void updateSpinners()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.1)>:<>:<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent:java.lang.Runnable>
<android.media.DecoderCapabilities: void <init>()>:<private>:<android.media.DecoderCapabilities>
<android.media.AudioMixPort: android.media.AudioPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>:<public volatile>:<android.media.AudioMixPort:android.media.AudioPort>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.RenderNodeAnimator: void callOnFinished(android.view.RenderNodeAnimator)>:<private static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities dup()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.tv.ITvInputService.Stub.Proxy: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener: void <init>(android.os.Handler)>:<public>:<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener:android.hardware.soundtrigger.IRecognitionStatusCallback.Stub>
<android.widget.StackView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.AutomaticGainControl: android.media.audiofx.AutomaticGainControl create(int)>:<public static>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<android.test.AndroidTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SearchView.3: void run()>:<public>:<android.widget.SearchView.3:java.lang.Runnable>
<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>:<private>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.media.MediaRouter.RouteCategory: void <init>(int,int,boolean)>:<>:<android.media.MediaRouter.RouteCategory>
<android.widget.ExpandableListConnector.MyDataSetObserver: void <init>(android.widget.ExpandableListConnector)>:<protected>:<android.widget.ExpandableListConnector.MyDataSetObserver:android.database.DataSetObserver>
<android.database.CursorWrapper: boolean isClosed()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLSurfaceView.BaseConfigChooser: void <init>(android.opengl.GLSurfaceView,int[])>:<public>:<android.opengl.GLSurfaceView.BaseConfigChooser:android.opengl.GLSurfaceView.EGLConfigChooser>
<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.ViewFlipper: void onDetachedFromWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.projection.MediaProjectionManager.CallbackDelegate.2: void run()>:<public>:<android.media.projection.MediaProjectionManager.CallbackDelegate.2:java.lang.Runnable>
<android.view.inputmethod.ExtractedText: void <init>()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: void setStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaCodecList: void initCodecList()>:<private static final>:<android.media.MediaCodecList>
<android.widget.HorizontalScrollView.SavedState.1: android.widget.HorizontalScrollView.SavedState[] newArray(int)>:<public>:<android.widget.HorizontalScrollView.SavedState.1:android.os.Parcelable.Creator>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.WindowManagerPolicy.WindowState: boolean isDisplayedLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.preference.PreferenceManager: android.content.Context getContext()>:<>:<android.preference.PreferenceManager>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setColorMode(int)>:<public>:<android.print.PrintAttributes.Builder>
<android.print.IPrintManager.Stub.Proxy: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.print.PrintAttributes.Resolution: int getVerticalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)>:<private>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.IMediaHTTPConnection.Stub: void <init>()>:<public>:<android.media.IMediaHTTPConnection.Stub:android.os.Binder,android.media.IMediaHTTPConnection>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.ViewGroup.ChildListForAccessibility: void <init>()>:<>:<android.view.ViewGroup.ChildListForAccessibility>
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.InputEventSender: boolean nativeSendKeyEvent(long,int,android.view.KeyEvent)>:<private static native>:<android.view.InputEventSender>
<android.media.TimedText: void readBlinkingText(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.media.AudioManager: int setAudioPortGain(android.media.AudioPort,android.media.AudioGainConfig)>:<public>:<android.media.AudioManager>
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioManager: void setVolumeController(android.media.IVolumeController)>:<public>:<android.media.AudioManager>
<android.view.View: boolean isRtlLocale()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.FloatKeyframeSet: java.lang.Class getType()>:<public>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.tv.TvInputManager.SessionCallbackRecord.2: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.2:java.lang.Runnable>
<android.media.AudioRoutesInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.AudioRoutesInfo.1:android.os.Parcelable.Creator>
<android.security.KeyStore: android.security.KeyStore getInstance()>:<public static>:<android.security.KeyStore>
<android.view.TextureView: void updateLayer()>:<private>:<android.view.TextureView:android.view.View>
<android.view.WindowManagerPolicy: android.view.animation.Animation createForceHideEnterAnimation(boolean,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.AudioService: android.media.HwCustAudioService getCust()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.GLES20Canvas: int onPreDraw(android.graphics.Rect)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.IWindowManager: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: android.view.ViewGroup.OnHierarchyChangeListener access.102(android.widget.TableLayout.PassThroughHierarchyChangeListener,android.view.ViewGroup.OnHierarchyChangeListener)>:<static>:<android.widget.TableLayout.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.WindowManagerPolicy: int getUserRotationMode()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.Editor.SuggestionsPopupWindow: int getVerticalLocalPosition(int)>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.view.Display: int getOwnerUid()>:<public>:<android.view.Display>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ActionMenuView: void setPresenter(android.widget.ActionMenuPresenter)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.SpellChecker: android.text.method.WordIterator access.500(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.widget.TabHost.LabelIndicatorStrategy: android.view.View createIndicatorView()>:<public>:<android.widget.TabHost.LabelIndicatorStrategy:android.widget.TabHost.IndicatorStrategy>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String toString()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.animation.AnimatorSet: long getStartDelay()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.IWindowManager.Stub.Proxy: void removeAppToken(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.print.PrintAttributes: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.filterpacks.imageproc.GrainFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.service.dreams.IDreamManager.Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)>:<public static>:<android.service.dreams.IDreamManager.Stub:android.os.Binder,android.service.dreams.IDreamManager>
<android.view.MagnificationSpec: android.view.MagnificationSpec obtain()>:<public static>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.view.View: android.view.View getRootView()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GLES20Canvas: void nDrawLines(long,float[],int,int,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.WindowManagerGlobal: android.view.View getRootView(java.lang.String)>:<public>:<android.view.WindowManagerGlobal>
<android.service.wallpaper.IWallpaperService.Stub: void <init>()>:<public>:<android.service.wallpaper.IWallpaperService.Stub:android.os.Binder,android.service.wallpaper.IWallpaperService>
<android.media.AudioRoutesInfo: void <clinit>()>:<static>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.media.AudioService: boolean isSpeakerphoneOn()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.INotificationListenerWrapper access.300(android.service.notification.NotificationListenerService)>:<static>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.CalendarView: void setMaxDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.notification.NotificationListenerService.RankingMap: int getRank(java.lang.String)>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>:<public>:<android.media.ExifInterface>
<android.animation.ValueAnimator: float getDurationScale()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.SearchView.4: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.4:android.view.View.OnFocusChangeListener>
<android.widget.StackView: int access.100(android.widget.StackView)>:<static>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void updateCalendarView()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean access.000(huawei.android.app.HwCustEmergDataManagerImpl.FileBackup)>:<static>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.IApplicationToken.Stub.Proxy: void windowsDrawn()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.view.View: boolean isAccessibilityFocused()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void rebootSafeMode(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()>:<public>:<android.view.Window>
<android.service.fingerprint.FingerprintManager: void sendError(int,int,int)>:<private>:<android.service.fingerprint.FingerprintManager>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.MediaRouter: void removeRouteStatic(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.media.IVolumeController: void displaySafeVolumeWarning(int)>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.widget.GridView: int computeVerticalScrollRange()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: int getMarginStart()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.CCParser.CCData: boolean access.000(android.media.CCParser.CCData)>:<static>:<android.media.CCParser.CCData>
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)>:<public static>:<android.view.PointerIcon:android.os.Parcelable>
<android.animation.TimeAnimator: void <init>()>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.Editor: android.widget.Editor.InsertionPointCursorController getInsertionController()>:<>:<android.widget.Editor>
<android.opengl.GLLogWrapper: void glTranslatex(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: int getLastAudibleMasterVolume()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setMixingRule(android.media.audiopolicy.AudioMixingRule)>:<public>:<android.media.audiopolicy.AudioMix.Builder>
<android.preference.SeekBarPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.test.InstrumentationTestSuite: void addTestSuite(java.lang.Class)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.view.View: void setScrollX(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.animation.AnimatorInflater.PathDataEvaluator: android.util.PathParser.PathDataNode[] evaluate(float,android.util.PathParser.PathDataNode[],android.util.PathParser.PathDataNode[])>:<public>:<android.animation.AnimatorInflater.PathDataEvaluator:android.animation.TypeEvaluator>
<android.view.View: int getTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: int access.500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setByteBuffer(java.nio.ByteBuffer)>:<public>:<android.media.MediaCodec.BufferMap.CodecBuffer>
<android.media.AudioService: void access.3700(android.media.AudioService,java.lang.String)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Toast: void cancel()>:<public>:<android.widget.Toast>
<android.widget.ScrollBarDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.ViewRootImpl: void checkSupportAPS()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.PathKeyframes.1: float getFloatValue(float)>:<public>:<android.animation.PathKeyframes.1:android.animation.PathKeyframes.FloatKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub: android.service.fingerprint.IFingerprintServiceReceiver asInterface(android.os.IBinder)>:<public static>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub:android.os.Binder,android.service.fingerprint.IFingerprintServiceReceiver>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: java.util.ArrayList access.002(android.view.ViewTreeObserver.CopyOnWriteArray.Access,java.util.ArrayList)>:<static>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.animation.ValueAnimator: boolean delayedAnimationFrame(long)>:<private>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLU: void <clinit>()>:<static>:<android.opengl.GLU>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setSampleRate(int)>:<public>:<android.media.AudioFormat.Builder>
<android.view.DragEvent: java.lang.Object getLocalState()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.TextView: boolean access.1100(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.RemoteControlClient: void access.1000(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.service.notification.IConditionProvider.Stub: android.service.notification.IConditionProvider asInterface(android.os.IBinder)>:<public static>:<android.service.notification.IConditionProvider.Stub:android.os.Binder,android.service.notification.IConditionProvider>
<android.widget.RelativeLayout: void setVerticalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.BitmapOverlayFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType[] values()>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void doWork()>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.widget.ActionMenuPresenter: boolean dismissPopupMenus()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.SubtitleTrack: void onData(android.media.SubtitleData)>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.ViewRootImpl.ConsumeBatchedInputRunnable: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.ConsumeBatchedInputRunnable:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glDepthFunc(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewStub:android.view.View>
<android.view.KeyEvent: boolean isSymPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.ITvInputService: void registerCallback(android.media.tv.ITvInputServiceCallback)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.animation.LayoutTransition: void setStartDelay(int,long)>:<public>:<android.animation.LayoutTransition>
<android.view.IAssetAtlas: long[] getMap()>:<public abstract>:<android.view.IAssetAtlas:android.os.IInterface>
<android.print.IPrintJobStateChangeListener.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewDebug: java.lang.reflect.Method[] getMethod(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.filterpacks.ui.SurfaceRenderFilter: void updateRenderMode()>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.opengl.GLLogWrapper: void glClearDepthx(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void access.2300(android.view.View,int)>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter: void removeRouteInt(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter>
<android.view.ViewParent: boolean isTextDirectionResolved()>:<public abstract>:<android.view.ViewParent>
<android.widget.DatePickerCalendarDelegate: void setEnabled(boolean)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.inputmethod.InputMethodInfo.1: void <init>()>:<>:<android.view.inputmethod.InputMethodInfo.1:android.os.Parcelable.Creator>
<android.view.MotionEvent: float nativeGetYPrecision(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.IntArrayEvaluator: int[] evaluate(float,int[],int[])>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.Editor: void showSuggestions()>:<>:<android.widget.Editor>
<android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>:<public static>:<android.view.ViewAnimationUtils>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>:<public>:<android.media.MediaRecorder>
<android.gesture.GestureUtils: void <init>()>:<private>:<android.gesture.GestureUtils>
<android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLES20: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioManager: void unregisterAudioPolicyAsync(android.media.audiopolicy.AudioPolicy)>:<public>:<android.media.AudioManager>
<android.widget.AdapterView: android.view.View getEmptyView()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputHardwareCallback.Stub.Proxy: void onReleased()>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub.Proxy:android.media.tv.ITvInputHardwareCallback>
<android.widget.Gallery: void onCancel()>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.KeyEvent: java.lang.String getCharacters()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrinterDiscoverySession.SessionHandler: void <init>(android.print.PrinterDiscoverySession,android.os.Looper)>:<public>:<android.print.PrinterDiscoverySession.SessionHandler:android.os.Handler>
<android.media.IMediaRouterService.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaRouterService.Stub:android.os.Binder,android.media.IMediaRouterService>
<android.view.inputmethod.InputMethodManager: void invokeFinishedInputEventCallback(android.view.inputmethod.InputMethodManager.PendingEvent,boolean)>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.VelocityTracker: void nativeDispose(long)>:<private static native>:<android.view.VelocityTracker>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.TwoLineListItem: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void handleMessage(android.os.Message)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler:android.os.Handler>
<android.filterpacks.imageproc.CropRectFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl: boolean isLayoutDirectionResolved()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewTreeObserver.CopyOnWriteArray: void end()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeystoreAlias()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int)>:<private>:<android.view.DisplayInfo:android.os.Parcelable>
<android.preference.Preference: void requireKey()>:<>:<android.preference.Preference:java.lang.Comparable>
<android.printservice.PrintJob: android.print.PrintJobId getId()>:<public>:<android.printservice.PrintJob>
<android.media.RemoteDisplay: android.media.RemoteDisplay listen(java.lang.String,android.media.RemoteDisplay.Listener,android.os.Handler)>:<public static>:<android.media.RemoteDisplay>
<android.view.SurfaceControl: void nativeRelease(long)>:<private static native>:<android.view.SurfaceControl>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.SoundPool.SoundPoolStub: int load(java.io.FileDescriptor,long,long,int)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.view.HardwareRenderer: void setEnabled(boolean)>:<>:<android.view.HardwareRenderer>
<android.filterpacks.imageproc.FisheyeFilter: void updateFrameSize(int,int)>:<private>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.security.KeyStore: byte[] sign(java.lang.String,byte[])>:<public>:<android.security.KeyStore>
<android.media.IAudioService: void setRingerMode(int,boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.animation.LayoutTransition: boolean access.1600(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.view.GLES20Canvas: boolean getClipBounds(android.graphics.Rect)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioManager: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.AudioManager>
<android.media.projection.MediaProjection.Callback: void <init>()>:<public>:<android.media.projection.MediaProjection.Callback>
<android.service.voice.VoiceInteractionService.MyHandler: void <init>(android.service.voice.VoiceInteractionService)>:<>:<android.service.voice.VoiceInteractionService.MyHandler:android.os.Handler>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.animation.LayoutTransition: long access.800(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.view.WindowManagerPolicy: void systemBooted()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.TextView: void beginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RemoteViewsAdapter: boolean handleMessage(android.os.Message)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.AsyncPlayer.Thread: void run()>:<public>:<android.media.AsyncPlayer.Thread:java.lang.Thread>
<android.media.AudioService: void access.7800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.FastScroller: void <clinit>()>:<static>:<android.widget.FastScroller>
<android.media.AudioTrack: int setVolume(float)>:<public>:<android.media.AudioTrack>
<android.media.tv.TvInputHardwareInfo: int getDeviceId()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.ChooseAccountActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.media.AudioService: boolean access.9202(android.media.AudioService,boolean)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.IWindowManager: void setInTouchMode(boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.MediaCodec: java.nio.ByteBuffer[] access.200(android.media.MediaCodec)>:<static>:<android.media.MediaCodec>
<android.widget.RadialTimePickerView: void onDraw(android.graphics.Canvas)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ThreadedRenderer: void updateEnabledState(android.view.Surface)>:<private>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.session.ISessionControllerCallback.Stub: android.media.session.ISessionControllerCallback asInterface(android.os.IBinder)>:<public static>:<android.media.session.ISessionControllerCallback.Stub:android.os.Binder,android.media.session.ISessionControllerCallback>
<android.widget.RemoteViews.OnClickHandler: boolean onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)>:<public>:<android.widget.RemoteViews.OnClickHandler>
<android.filterpacks.imageproc.FlipFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>:<public static>:<android.media.CamcorderProfile>
<android.accounts.IAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.MediaPlayer: void stayAwake(boolean)>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<androidhwext.R.style: void <init>()>:<public>:<androidhwext.R.style>
<android.widget.TextView: void trySelectAllAndShowEditor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.browse.MediaBrowser: android.media.session.MediaSession.Token access.802(android.media.browse.MediaBrowser,android.media.session.MediaSession.Token)>:<static>:<android.media.browse.MediaBrowser>
<android.view.inputmethod.SparseRectFArray.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.SparseRectFArray.1:android.os.Parcelable.Creator>
<android.widget.ScrollView: void requestLayout()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.media.MediaDescription: void <init>(android.os.Parcel)>:<private>:<android.media.MediaDescription:android.os.Parcelable>
<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter: void initHwCustExtFormatter(android.content.Context)>:<public>:<huawei.com.android.internal.os.storage.HwCustExternalStorageFormatter:com.android.internal.os.storage.IHwCustExternalStorageFormatter>
<android.opengl.GLErrorWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.MiniThumbFile: void deactivate()>:<public>:<android.media.MiniThumbFile>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)>:<public>:<android.media.session.MediaSessionManager>
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.MediaSession: boolean isActive()>:<public>:<android.media.session.MediaSession>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJob: boolean isStarted()>:<public>:<android.print.PrintJob>
<android.view.ViewDebug: java.lang.String[] getStyleAttributesDump(android.content.res.Resources,android.content.res.Resources.Theme)>:<private static>:<android.view.ViewDebug>
<android.view.animation.CycleInterpolator: void <init>(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.ViewGroup.MarginLayoutParams: void setMarginStart(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.FastScroller: boolean isPointInsideY(float)>:<private>:<android.widget.FastScroller>
<android.widget.FastScroller: void setThumbPos(float)>:<protected>:<android.widget.FastScroller>
<android.view.WindowManagerPolicy.WindowState: boolean hasDrawnLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.IMediaHTTPConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaHTTPConnection.Stub:android.os.Binder,android.media.IMediaHTTPConnection>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.String typeToString(int)>:<private static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.effect.effects.FisheyeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.FisheyeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.filterpacks.videosrc.MediaSource.3: void onCompletion(android.media.MediaPlayer)>:<public>:<android.filterpacks.videosrc.MediaSource.3:android.media.MediaPlayer.OnCompletionListener>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.media.MiniThumbFile: void <clinit>()>:<static>:<android.media.MiniThumbFile>
<android.media.MediaCodec.MediaImage: int getWidth()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.media.IAudioService.Stub.Proxy: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.service.voice.VoiceInteractionSession.1: com.android.internal.app.IVoiceInteractorRequest startConfirmation(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.media.AudioGain: int rampDurationMaxMs()>:<public>:<android.media.AudioGain>
<android.filterpacks.ui.SurfaceTargetFilter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.widget.Editor.HandleView: boolean isVisible()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.MediaHTTPConnection: java.lang.String getUri()>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.view.GLES20Canvas: void restoreToCount(int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.KeyCharacterMap.1: android.view.KeyCharacterMap createFromParcel(android.os.Parcel)>:<public>:<android.view.KeyCharacterMap.1:android.os.Parcelable.Creator>
<android.media.IAudioService.Stub.Proxy: boolean isStreamAffectedByRingerMode(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.View: void onMeasure(int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.preference.Preference: boolean persistInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: void removeLongPressCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference.SavedState.1: android.preference.ListPreference.SavedState[] newArray(int)>:<public>:<android.preference.ListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputClient.Stub.Proxy: void onContentBlocked(java.lang.String,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.opengl.GLErrorWrapper: boolean glIsFramebufferOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewDebug: void dump(android.view.View,boolean,boolean,java.io.OutputStream)>:<public static>:<android.view.ViewDebug>
<android.opengl.GLSurfaceView.EglHelper: java.lang.String formatEglError(java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.service.notification.NotificationRankingUpdate: void <init>(android.os.Parcel)>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.IContentObserver.Stub: void <init>()>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.widget.TimePickerSpinnerDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.AudioDevicePort: int type()>:<public>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.widget.TextView: void createEditorIfNeededOuter()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.Throwable)>:<public>:<android.filterpacks.videosink.MediaRecorderStopException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.preference.MultiCheckPreference: void <init>(android.content.Context)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction build()>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.projection.MediaProjection: java.util.Map access.100(android.media.projection.MediaProjection)>:<static>:<android.media.projection.MediaProjection>
<android.view.InputChannel: void nativeReadFromParcel(android.os.Parcel)>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.view.IRotationWatcher.Stub.Proxy: void onRotationChanged(int)>:<public>:<android.view.IRotationWatcher.Stub.Proxy:android.view.IRotationWatcher>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioService: void readAndSetLowRamDevice()>:<private static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.ImageReader: int getHeight()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.MediaRouterClientState.RouteInfo: void <init>(android.os.Parcel)>:<>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.media.MediaMuxer: void nativeSetLocation(long,int,int)>:<private static native>:<android.media.MediaMuxer>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>:<public>:<android.accounts.AccountManager>
<android.view.textservice.SpellCheckerInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.print.PrinterInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.view.MenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>:<public abstract>:<android.view.MenuItem>
<android.media.AudioRecord: int getAudioFormat()>:<public>:<android.media.AudioRecord>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>:<public>:<android.media.MediaMetadataRetriever>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MutableBackgroundColorSpan: int describeContents()>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.print.PrintAttributes.MediaSize: int getWidthMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.filterpacks.imageproc.BitmapOverlayFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl: void access.1300(android.view.ViewRootImpl,android.content.Context,int,int)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GraphicBuffer.1: android.view.GraphicBuffer createFromParcel(android.os.Parcel)>:<public>:<android.view.GraphicBuffer.1:android.os.Parcelable.Creator>
<android.widget.ActivityChooserModel.ActivityResolveInfo: java.lang.String toString()>:<public>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCodec: void validateInputByteBuffer(java.nio.ByteBuffer[],int)>:<private final>:<android.media.MediaCodec>
<android.media.AudioManager: void startBluetoothScoVirtualCall()>:<public>:<android.media.AudioManager>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>:<public abstract>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.animation.ValueAnimator: void setDurationScale(float)>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.inputmethod.InputMethodInfo.1: android.view.inputmethod.InputMethodInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.InputMethodInfo.1:android.os.Parcelable.Creator>
<android.widget.Editor: void hideControllers()>:<>:<android.widget.Editor>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putString(java.lang.String,java.lang.String)>:<public>:<android.media.MediaMetadata.Builder>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.MediaFocusControl.2: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.media.MediaFocusControl.2:android.content.BroadcastReceiver>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.DateTimeView: void <init>(android.content.Context)>:<public>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.animation.ValueAnimator.AnimationHandler: void run()>:<public>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.view.KeyEvent: void setSource(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.printservice.PrinterDiscoverySession: void onStartPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.IAudioService.Stub.Proxy: int getLastAudibleStreamVolume(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.JankSqlite: void <clinit>()>:<static>:<android.database.sqlite.JankSqlite>
<android.view.MotionEvent: int getPointerCount()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.SurfaceView.MyWindow: void windowFocusChanged(boolean,boolean)>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.preference.Preference: boolean isPersistent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: void cancelA2dpDeviceTimeout()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.DatePicker: android.widget.LinearLayout getSpinners()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.trust.TrustAgentService: void onCreate()>:<public>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteConnectionPool: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.tv.TvInputManager.TvInputCallbackRecord: void postInputRemoved(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.database.CursorWindow: void finalize()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.filterpacks.ui.SurfaceRenderFilter: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.media.AudioService: void reloadAudioSettings()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ActivityChooserView.Callbacks: void startActivity(android.content.Intent,android.content.pm.ResolveInfo)>:<private>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.view.RenderNodeAnimator: boolean processDelayed(long)>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.tv.ITvInputSession: void requestUnblockContent(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.view.ActionProvider.VisibilityListener: void onActionProviderVisibilityChanged(boolean)>:<public abstract>:<android.view.ActionProvider.VisibilityListener>
<android.widget.AutoCompleteTextView: void updateDropDownForFilter(int)>:<private>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.IAssetAtlas.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.ddm.DdmHandleNativeHeap: void disconnected()>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.View: void refreshDrawableState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.service.voice.VoiceInteractionService: void onCreate()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.KeyEvent: int getModifierMetaStateMask()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.VolumePreference.SavedState.1: android.preference.VolumePreference.SavedState[] newArray(int)>:<public>:<android.preference.VolumePreference.SavedState.1:android.os.Parcelable.Creator>
<android.service.voice.VoiceInteractionSession.Request: void sendCancelResult()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.view.Choreographer: void access.600(android.view.Choreographer,android.view.Choreographer.CallbackRecord)>:<static>:<android.view.Choreographer>
<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater.Factory2)>:<public>:<android.view.LayoutInflater>
<android.opengl.GLErrorWrapper: void glFlush()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.CheckedTextView: void setVisibility(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.database.BulkCursorToCursorAdaptor: void <init>()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.session.ISession: void setQueue(android.content.pm.ParceledListSlice)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.service.notification.INotificationListener: void onListenerHintsChanged(int)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.media.SubtitleTrack.Run: void storeByEndTimeMs(android.util.LongSparseArray)>:<public>:<android.media.SubtitleTrack.Run>
<android.view.IWindow.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindow.Stub:android.os.Binder,android.view.IWindow>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.GridLayout: int getRowCount()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.preference.SeekBarVolumizer: android.preference.SeekBarVolumizer.H access.600(android.preference.SeekBarVolumizer)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioManager: boolean shouldVibrate(int)>:<public>:<android.media.AudioManager>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.accounts.IAccountAuthenticator: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.view.TextureView: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.TextureView:android.view.View>
<android.hsm.HwSystemManager: java.util.ArrayList getAllowedApplyBatchOp(java.lang.String,java.util.ArrayList)>:<public static>:<android.hsm.HwSystemManager>
<android.widget.TabHost: android.widget.FrameLayout access.100(android.widget.TabHost)>:<static>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceScreen.SavedState.1: android.preference.PreferenceScreen.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.PreferenceScreen.SavedState.1:android.os.Parcelable.Creator>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.tv.TvContract: boolean isProgramUri(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.media.tv.TvInputManager.Hardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>:<public>:<android.media.tv.TvInputManager.Hardware>
<android.widget.AdapterView: void setSelectedPositionInt(int)>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.view.ThreadedRenderer: int getWidth()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.animation.Keyframe.IntKeyframe: java.lang.Object getValue()>:<public>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.service.notification.INotificationListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.notification.INotificationListener.Stub:android.os.Binder,android.service.notification.INotificationListener>
<android.view.IInputFilter.Stub: android.view.IInputFilter asInterface(android.os.IBinder)>:<public static>:<android.view.IInputFilter.Stub:android.os.Binder,android.view.IInputFilter>
<android.media.MediaCodecInfo.VideoCapabilities: void <init>()>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.widget.ShareActionProvider: android.view.View onCreateActionView()>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.view.Nsd: void readNsdSupportProperty()>:<public static>:<android.view.Nsd>
<android.widget.TimePickerSpinnerDelegate: void access.100(android.widget.TimePickerSpinnerDelegate)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.WindowInfo: java.lang.String toString()>:<public>:<android.view.WindowInfo:android.os.Parcelable>
<android.view.RenderNode: boolean isValid()>:<public>:<android.view.RenderNode>
<android.media.RemoteControlClient: java.lang.Object access.000(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.media.MediaPlayer.TrackInfo: void <clinit>()>:<static>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.media.MediaCodec: void native_finalize()>:<private final native>:<android.media.MediaCodec>
<android.service.notification.INotificationListener.Stub.Proxy: void onListenerConnected(android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.RingtoneManager: void setType(int)>:<public>:<android.media.RingtoneManager>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.filterpacks.imageproc.StraightenFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.widget.SearchView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ActionMode: void setCustomView(android.view.View)>:<public abstract>:<android.view.ActionMode>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.service.voice.VoiceInteractionSession: void doDestroy()>:<>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.ExifInterface: void <init>(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.opengl.GLErrorWrapper: void glPointParameterf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: android.hardware.hdmi.HdmiTvClient access.7100(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.printservice.PrintService: android.os.Handler access.000(android.printservice.PrintService)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.database.sqlite.SQLiteSession.Transaction: void <init>(android.database.sqlite.SQLiteSession.1)>:<>:<android.database.sqlite.SQLiteSession.Transaction>
<android.view.GLES20Canvas: void nDrawBitmap(long,long,byte[],long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.TtmlUtils: java.lang.String extractText(android.media.TtmlNode,long,long)>:<public static>:<android.media.TtmlUtils>
<android.service.textservice.SpellCheckerService.Session: void setInternalISpellCheckerSession(android.service.textservice.SpellCheckerService.InternalISpellCheckerSession)>:<public final>:<android.service.textservice.SpellCheckerService.Session>
<android.media.tv.ITvInputHardware.Stub.Proxy: void overrideAudioSink(int,java.lang.String,int,int,int)>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.ViewTreeObserver: void dispatchOnDraw()>:<public final>:<android.view.ViewTreeObserver>
<android.view.ViewGroup: boolean notifyChildOfDrag(android.view.View)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: void ready()>:<public>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<huawei.android.net.wifi.HwCustBaseWifiFactoryImpl: android.net.wifi.IHwCustWifiManager getHwCustWifiManager()>:<public>:<huawei.android.net.wifi.HwCustBaseWifiFactoryImpl:android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.InputEventSender: void <init>(android.view.InputChannel,android.os.Looper)>:<public>:<android.view.InputEventSender>
<android.view.ViewGroup.ChildListForAccessibility: void clear()>:<private>:<android.view.ViewGroup.ChildListForAccessibility>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.AdapterViewAnimator.SavedState: void <init>(android.os.Parcel,android.widget.AdapterViewAnimator.1)>:<>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.View: android.view.View.ListenerInfo getListenerInfo()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager.1: void setActive(boolean)>:<public>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.TypeConverter: java.lang.Class getTargetType()>:<>:<android.animation.TypeConverter>
<android.view.Window: long getTransitionBackgroundFadeDuration()>:<public>:<android.view.Window>
<android.animation.Animator: boolean isStarted()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.preference.PreferenceManager: java.util.List queryIntentActivities(android.content.Intent)>:<private>:<android.preference.PreferenceManager>
<android.media.AudioFormat: void <init>(int,android.media.AudioFormat.1)>:<>:<android.media.AudioFormat>
<android.gesture.GestureOverlayView: android.gesture.Gesture access.802(android.gesture.GestureOverlayView,android.gesture.Gesture)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: int getLocalFeatures()>:<protected final>:<android.view.Window>
<android.view.accessibility.IAccessibilityManager: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.accounts.AccountManager.4: android.accounts.Account bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.media.tv.TvInputManager.Session: boolean containsTrack(java.util.List,java.lang.String)>:<private>:<android.media.tv.TvInputManager.Session>
<android.media.MediaCodecInfo.EncoderCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.opengl.GLUtils: int native_texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<private static native>:<android.opengl.GLUtils>
<android.view.WindowCallbackWrapper: void <init>(android.view.Window.Callback)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.TabHost: android.view.View getCurrentTabView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.textservice.SpellCheckerSubtype: int hashCodeInternal(java.lang.String,java.lang.String)>:<private static>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.tv.ITvInputManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.TtmlRenderer: void <init>(android.content.Context)>:<public>:<android.media.TtmlRenderer:android.media.SubtitleController.Renderer>
<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet access.1800(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.KeyEvent: java.lang.String nativeKeyCodeToString(int)>:<private static native>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.security.IKeystoreService: int clear_uid(long)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.media.MediaMetadataEditor: void addEditableKey(int)>:<public>:<android.media.MediaMetadataEditor>
<android.media.tv.ITvInputSessionWrapper: void relayoutOverlayView(android.graphics.Rect)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.inputmethod.InputMethodInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.InputMethodInfo.1:android.os.Parcelable.Creator>
<android.security.IKeystoreService.Stub.Proxy: int insert(java.lang.String,byte[],int,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams getRelatedViewParams(int[],int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.accounts.AccountAuthenticatorActivity: void finish()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.CalendarView getCalendarView()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.opengl.GLLogWrapper: void glTexEnvx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void setSaveEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void _setAuxEffectSendLevel(float)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLES31: void _nativeClassInit()>:<private static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.Toolbar.2: void run()>:<public>:<android.widget.Toolbar.2:java.lang.Runnable>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IWindowManager: void prepareAppTransition(int,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.view.RenderNode: boolean nSetLayerType(long,int)>:<private static native>:<android.view.RenderNode>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsMetaDataAt(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.FaceDetector: int fft_detect(android.graphics.Bitmap)>:<private native>:<android.media.FaceDetector>
<android.media.AudioService.VolumeController: void <init>()>:<public>:<android.media.AudioService.VolumeController>
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)>:<>:<android.preference.PreferenceManager>
<android.widget.Editor.TextModifyOperation: void redo()>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.view.View: boolean hasNestedScrollingParent()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewDebug.3: void run(java.lang.Object[])>:<public volatile>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.security.IKeystoreService.Stub: android.os.IBinder asBinder()>:<public>:<android.security.IKeystoreService.Stub:android.os.Binder,android.security.IKeystoreService>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.ActionButtonSubmenu access.702(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.ActionButtonSubmenu)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.Editor: void createInputMethodStateIfNeeded()>:<>:<android.widget.Editor>
<android.view.View.BaseSavedState.1: void <init>()>:<>:<android.view.View.BaseSavedState.1:android.os.Parcelable.Creator>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.audiofx.Virtualizer: int getDeviceForModeForce(int)>:<private static>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.DisplayInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.DisplayInfo.1:android.os.Parcelable.Creator>
<android.widget.TabHost.1: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.widget.TabHost.1:android.view.View.OnKeyListener>
<android.printservice.IPrintServiceClient: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.media.CameraProfile: void <init>()>:<public>:<android.media.CameraProfile>
<android.preference.GenericInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>:<protected>:<android.preference.GenericInflater>
<android.view.ViewRootImpl.W: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.view.LayoutInflater: void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View)>:<private>:<android.view.LayoutInflater>
<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap.Config,int,boolean)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.media.MediaScanner: java.lang.String access.2500(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.RemoteControlClient: void setPlaybackState(int)>:<public>:<android.media.RemoteControlClient>
<android.widget.GridLayout.LayoutParams: int hashCode()>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteCancelled()>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback:android.print.PrintDocumentAdapter.WriteResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.security.IKeystoreService.Stub.Proxy: int duplicate(java.lang.String,int,java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.animation.PathKeyframes.SimpleKeyframes: void invalidateCache()>:<public>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.widget.TextView: int getLineHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype get(int)>:<public>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.database.CrossProcessCursor: boolean onMove(int,int)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: boolean isLayoutModeOptical(java.lang.Object)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Scroller: void forceFinished(boolean)>:<public final>:<android.widget.Scroller>
<android.media.effect.EffectFactory: android.media.effect.Effect instantiateEffect(java.lang.Class,java.lang.String)>:<private>:<android.media.effect.EffectFactory>
<android.widget.VideoView: void seekTo(int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.ExpandableListView: void <clinit>()>:<static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer.TimeProvider: void onPaused(boolean)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.MagnificationSpec: void initFromParcel(android.os.Parcel)>:<private>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.print.PrinterId: android.content.ComponentName getServiceName()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.filterpacks.imageproc.StraightenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.view.View: void setRevealClip(boolean,float,float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityCache: void clearSubTreeRecursiveLocked(android.util.LongSparseArray,long)>:<private>:<android.view.accessibility.AccessibilityCache>
<android.view.WindowInfo.1: void <init>()>:<>:<android.view.WindowInfo.1:android.os.Parcelable.Creator>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.database.MergeCursor.1: void <init>(android.database.MergeCursor)>:<>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.gesture.Prediction: java.lang.String toString()>:<public>:<android.gesture.Prediction>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.tv.ITvInputSessionWrapper: void setMain(boolean)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.View: void clearAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: boolean persistBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.tv.TvInputService.Session: void runOnMainThread(java.lang.Runnable)>:<private final>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.MediaFocusControl: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.session.ISessionController.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.ProgressBar: void setMax(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.MotionEvent: float nativeGetXOffset(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioManager.OnAudioPortUpdateListener: void onServiceDied()>:<public abstract>:<android.media.AudioManager.OnAudioPortUpdateListener>
<android.database.DefaultDatabaseErrorHandler: void <init>()>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.view.WindowContentFrameStats: void init(long,long[],long[],long[])>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.ViewTreeObserver: boolean hasComputeInternalInsetsListeners()>:<final>:<android.view.ViewTreeObserver>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>:<public static>:<android.gesture.GestureLibraries>
<android.view.IWindowManager.Stub.Proxy: void getBaseDisplaySize(int,android.graphics.Point)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.AudioRecord: int native_get_pos_update_period()>:<private final native>:<android.media.AudioRecord>
<android.view.MenuInflater.MenuState: void setItem(android.view.MenuItem)>:<private>:<android.view.MenuInflater.MenuState>
<android.ddm.DdmHandleProfiling: void register()>:<public static>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.View: void postInvalidateOnAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrintSpooler.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.view.View: float getTranslationZ()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.opengl.GLLogWrapper: void flush()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: int getFirstDayOfWeek()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceGroupAdapter: int getHighlightItemViewType()>:<private>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.database.AbstractWindowedCursor: void checkPosition()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.IWindowManager.Stub.Proxy: void removeRotationWatcher(android.view.IRotationWatcher)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.ViewRootImpl: android.view.ViewRootImpl.RunQueue getRunQueue()>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GLES20Canvas: void setViewport(int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ProgressBar: void setDrawableTint(int,android.content.res.ColorStateList,android.graphics.PorterDuff.Mode,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.database.CursorWindow: int getNumRows()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.GridLayout: void requestLayout()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.WindowInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.WindowInfo.1:android.os.Parcelable.Creator>
<android.view.RenderNode: boolean setTranslationX(float)>:<public>:<android.view.RenderNode>
<android.filterpacks.imageproc.ToRGBAFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl.W: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.database.CursorWindow: java.lang.String getString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.preference.GenericInflater: java.lang.String getDefaultPackage()>:<public>:<android.preference.GenericInflater>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: void removeFromArray(int,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLSurfaceView.LogWriter: void flushBuilder()>:<private>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.preference.Preference: void setEnabled(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.IAccountManagerResponse.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountManagerResponse.Stub.Proxy:android.accounts.IAccountManagerResponse>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBlocksPerSecondRange()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.inputmethod.InputBinding: void <clinit>()>:<static>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,int[][])>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.TextView: void checkForRelayout()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteDatabase.CustomFunction: void callback(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CustomFunction>
<android.view.RenderNode: float nGetRotationX(long)>:<private static native>:<android.view.RenderNode>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextClientThread(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.AccessibilityInteractionController>
<android.view.View: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.GridLayout.LayoutParams: void <init>()>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View: int computeHorizontalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.Keyframe.ObjectKeyframe: void setValue(java.lang.Object)>:<public>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.animation.PropertyValuesHolder: long access.500(java.lang.Class,java.lang.String)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.GestureDetector: void init(android.content.Context)>:<private>:<android.view.GestureDetector>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.CursorWrapper: int getColumnCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.accessibility.IAccessibilityManager: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.media.MediaHTTPConnection: void native_setup()>:<private final native>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.opengl.EGLLogWrapper: int eglGetError()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.widget.ListPopupWindow.PopupScrollListener: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow.1)>:<>:<android.widget.ListPopupWindow.PopupScrollListener:android.widget.AbsListView.OnScrollListener>
<android.media.MediaDrm.ProvisionRequest: void <init>()>:<>:<android.media.MediaDrm.ProvisionRequest>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.view.MotionEvent: void nativeSetFlags(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.ddm.DdmHandleHello: void connected()>:<public>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>:<public final>:<android.view.LayoutInflater>
<android.widget.ScrollView: void setOverScrollMode(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.DrawOverlayFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.DrawOverlayFilter:android.filterfw.core.Filter>
<android.view.View: boolean isRootNamespace()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getSelectedWeekBackgroundColor()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewGroup: void setClipToPadding(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.IAudioService: boolean isBluetoothA2dpOn()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.view.View: void setCameraDistance(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.security.IKeystoreService: int verify(java.lang.String,byte[],byte[])>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionPaused()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.media.MediaScanner: android.content.IContentProvider access.2700(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GraphicBuffer: void <init>(int,int,int,int,long)>:<private>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.media.AudioService.VolumeStreamState: void access.300(android.media.AudioService.VolumeStreamState,java.io.PrintWriter)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.Manifest.permission: void <init>()>:<public>:<android.Manifest.permission>
<android.view.IWindowManager: void clearForcedDisplayDensity(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addResolution(android.print.PrintAttributes.Resolution,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.textservice.SpellCheckerSession: void <clinit>()>:<static>:<android.view.textservice.SpellCheckerSession>
<android.widget.GridLayout: void onChildVisibilityChanged(android.view.View,int,int)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.RelativeLayout: void <init>(android.content.Context)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.RemoteViewsAdapter: boolean requestBindService()>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: boolean isDisconnected()>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.view.ViewGroup: void dispatchCancelPendingInputEvents()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.PrinterInfo: void <init>(android.os.Parcel)>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.accounts.AuthenticatorDescription: void <init>(android.os.Parcel)>:<private>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.database.AbstractWindowedCursor: long getLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.IWindow.Stub.Proxy: void moved(int,int)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.view.View: void getBoundsOnScreen(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.dreams.DreamService.DreamServiceWrapper.3: void run()>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper.3:java.lang.Runnable>
<android.opengl.GLLogWrapper: java.lang.String getIndexType(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouter.Static.Client: void <init>(android.media.MediaRouter.Static)>:<>:<android.media.MediaRouter.Static.Client:android.media.IMediaRouterClient.Stub,android.os.Binder>
<android.database.sqlite.SQLiteDatabase: boolean isInMemoryDatabase()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.service.dreams.IDreamManager.Stub: android.os.IBinder asBinder()>:<public>:<android.service.dreams.IDreamManager.Stub:android.os.Binder,android.service.dreams.IDreamManager>
<android.media.MediaRouter.VolumeCallback: void onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo,int)>:<public abstract>:<android.media.MediaRouter.VolumeCallback>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.TextureView: android.graphics.Canvas lockCanvas()>:<public>:<android.view.TextureView:android.view.View>
<android.media.SubtitleController: void <init>(android.content.Context,android.media.MediaTimeProvider,android.media.SubtitleController.Listener)>:<public>:<android.media.SubtitleController>
<android.view.ViewRootImpl: boolean access.1200(android.view.ViewRootImpl,java.lang.String)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.AdapterView: void setEmptyView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.AudioManager.1: void <init>(android.media.AudioManager)>:<>:<android.media.AudioManager.1:android.media.IAudioFocusDispatcher.Stub,android.os.Binder>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.media.tv.TvView: boolean access.1400(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.QueuedInputEvent: void <init>(android.view.ViewRootImpl.1)>:<>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.media.tv.ITvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.gesture.GesturePoint: android.gesture.GesturePoint deserialize(java.io.DataInputStream)>:<static>:<android.gesture.GesturePoint>
<android.media.RemoteController.RcDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.dreams.DreamService.DreamServiceWrapper: void <init>(android.service.dreams.DreamService)>:<private>:<android.service.dreams.DreamService.DreamServiceWrapper:android.service.dreams.IDreamService.Stub,android.os.Binder>
<android.hsm.HwAudioPermWrapper: boolean confirmPermissionWithResult()>:<public>:<android.hsm.HwAudioPermWrapper>
<android.media.AudioPortEventHandler: void <init>(android.media.AudioManager)>:<>:<android.media.AudioPortEventHandler>
<android.media.session.MediaSession.CallbackMessageHandler: void handleMessage(android.os.Message)>:<public>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.media.session.ISession.Stub.Proxy: void setQueue(android.content.pm.ParceledListSlice)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvContract: android.net.Uri buildChannelUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.filterpacks.videosrc.SurfaceTextureTarget: void disconnect(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.widget.GridView: int computeVerticalScrollExtent()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: android.widget.TabWidget access.1000(android.widget.TabHost)>:<static>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewParent: void bringChildToFront(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.media.AmrInputStream: void GsmAmrEncoderDelete(long)>:<private static native>:<android.media.AmrInputStream:java.io.InputStream>
<android.media.IMediaRouterClient.Stub: android.media.IMediaRouterClient asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaRouterClient.Stub:android.os.Binder,android.media.IMediaRouterClient>
<android.widget.MediaController: void onFinishInflate()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isPaddingResolved()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.1000(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.AudioService.ForceControlStreamClient: void <init>(android.media.AudioService,android.os.IBinder)>:<>:<android.media.AudioService.ForceControlStreamClient:android.os.IBinder.DeathRecipient>
<android.gesture.GestureUtils: float computeStraightness(float[])>:<static>:<android.gesture.GestureUtils>
<android.view.View: boolean isPaddingOffsetRequired()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceManager: int getNextRequestCode()>:<>:<android.preference.PreferenceManager>
<android.view.GLES20Canvas: void rotate(float)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.SoundPool.SoundPoolImpl: void resume(int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.tv.ITvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.TextTrackRegion: java.lang.String toString()>:<public>:<android.media.TextTrackRegion>
<android.service.notification.NotificationListenerService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.preference.PreferenceActivity: void switchToHeader(java.lang.String,android.os.Bundle)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.CamcorderProfile: boolean native_has_camcorder_profile(int,int)>:<private static final native>:<android.media.CamcorderProfile>
<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.SimpleMonthView.OnDayClickListener: void onDayClick(android.widget.SimpleMonthView,java.util.Calendar)>:<public abstract>:<android.widget.SimpleMonthView.OnDayClickListener>
<android.opengl.GLLogWrapper: boolean glIsEnabled(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISessionCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.widget.Editor: void showInsertionController()>:<protected>:<android.widget.Editor>
<android.animation.FloatArrayEvaluator: float[] evaluate(float,float[],float[])>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.widget.CalendarView: void setShownWeekCount(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.Metadata: java.util.Set keySet()>:<public>:<android.media.Metadata>
<android.service.notification.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.media.audiofx.AudioEffect: int native_setParameter(int,byte[],int,byte[])>:<private final native>:<android.media.audiofx.AudioEffect>
<android.media.Rating: boolean isThumbUp()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.media.IMediaRouterService: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.view.inputmethod.ExtractedText.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.ExtractedText.1:android.os.Parcelable.Creator>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofFloat(float[])>:<public static transient>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.widget.TabHost: void onAttachedToWindow()>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES10: void glLightModelf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteConnection: void setLocaleFromConfiguration()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.IRemoteControlClient.Stub.Proxy: void enableRemoteControlDisplay(android.media.IRemoteControlDisplay,boolean)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.opengl.GLLogWrapper: void glCurrentPaletteMatrixOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View.10: java.lang.Float get(android.view.View)>:<public>:<android.view.View.10:android.util.FloatProperty>
<android.view.View: boolean isFocusable()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder: long access.000(android.media.MediaRecorder)>:<static>:<android.media.MediaRecorder>
<android.view.InputEventConsistencyVerifier: void reset()>:<public>:<android.view.InputEventConsistencyVerifier>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.media.MediaScanner: void addSkipCustomDirectory(java.lang.String,int)>:<public native>:<android.media.MediaScanner>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>:<public>:<android.view.textservice.TextServicesManager>
<android.opengl.GLLogWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputService.Session: void layoutSurface(int,int,int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.service.voice.VoiceInteractionSession.Request: void sendCompleteVoiceResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.media.IRemoteControlDisplay.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioTrack: int write(byte[],int,int)>:<public>:<android.media.AudioTrack>
<android.media.TimedText: boolean parseParcel(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.media.AudioService: void queueMsgUnderWakeLock(android.os.Handler,int,int,int,java.lang.Object,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>:<public static final>:<android.database.DatabaseUtils>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.printservice.PrinterDiscoverySession: boolean isDestroyed()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.widget.Editor.ActionPopupWindow: void onClick(android.view.View)>:<public>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.AccessibilityInteractionController: void access.700(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.media.SoundPool.SoundPoolImpl: void setPriority(int,int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.printservice.IPrintServiceClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.widget.Switch: void setSplitTrack(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.PerformanceTestCase.Intermediates: void setInternalIterations(int)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.media.MediaPlayer.TrackInfo.1: android.media.MediaPlayer.TrackInfo[] newArray(int)>:<public>:<android.media.MediaPlayer.TrackInfo.1:android.os.Parcelable.Creator>
<android.database.AbstractCursor: boolean moveToPosition(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult()>:<public>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.service.wallpaper.WallpaperService.Engine.3: void moved(int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.database.AbstractCursor: boolean moveToLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.service.dreams.DreamService: boolean access.200(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLErrorWrapper: int glGetError()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.AbsListView.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.AbsListView.CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView.1)>:<>:<android.widget.AbsListView.CheckForKeyLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.media.AudioSystem: int setMasterVolume(float)>:<public static native>:<android.media.AudioSystem>
<android.media.MediaDrm: void release()>:<public final native>:<android.media.MediaDrm>
<android.media.MediaDrm: android.media.MediaDrm.CertificateRequest getCertificateRequest(int,java.lang.String)>:<public>:<android.media.MediaDrm>
<android.widget.VideoView: android.view.SurfaceHolder access.2002(android.widget.VideoView,android.view.SurfaceHolder)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.MediaController: java.lang.String stringForTime(int)>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: void nativeOffsetLocation(long,float,float)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.PopupWindow.PopupViewContainer: int[] onCreateDrawableState(int)>:<protected>:<android.widget.PopupWindow.PopupViewContainer:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.View: int computeHorizontalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void onTrustTimeout()>:<public>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.FastScroller: void layoutTrack()>:<private>:<android.widget.FastScroller>
<android.media.MediaCodec: void signalEndOfInputStream()>:<public final native>:<android.media.MediaCodec>
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaFocusControl: void filterVoiceInputKeyEvent(android.view.KeyEvent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.MediaScannerClient: void handleStringTag(java.lang.String,java.lang.String)>:<public abstract>:<android.media.MediaScannerClient>
<android.view.inputmethod.ExtractedText.1: android.view.inputmethod.ExtractedText createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.ExtractedText.1:android.os.Parcelable.Creator>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.database.CursorWrapper: int getInt(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.GridView: int getTopSelectionPixel(int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.media.RemoteController: android.media.RemoteController.EventHandler access.600(android.media.RemoteController)>:<static>:<android.media.RemoteController>
<android.view.ViewRootImpl: void adaptPowerSave(android.view.MotionEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.view.View)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.preference.SeekBarVolumizer.Receiver: void <init>(android.preference.SeekBarVolumizer,android.preference.SeekBarVolumizer.1)>:<>:<android.preference.SeekBarVolumizer.Receiver:android.content.BroadcastReceiver>
<android.animation.PathKeyframes.IntKeyframesBase: void <init>()>:<private>:<android.animation.PathKeyframes.IntKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.IntKeyframes>
<android.widget.DatePicker: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()>:<public>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.media.AudioDevicePort: android.media.AudioPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>:<public volatile>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.security.IKeystoreService.Stub.Proxy: int clear_uid(long)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ShareActionProvider: void <init>(android.content.Context)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.print.PrintJobId: java.lang.String flattenToString()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.media.AudioFormat: int channelCountFromInChannelMask(int)>:<public static>:<android.media.AudioFormat>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.WebVttRenderingWidget: float access.300(android.media.WebVttRenderingWidget)>:<static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.DeniedByServerException: void <init>(java.lang.String)>:<public>:<android.media.DeniedByServerException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteStatement: void execute()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.media.Utils: android.util.Range[] intersectSortedDistinctRanges(android.util.Range[],android.util.Range[])>:<public static>:<android.media.Utils>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.tv.ITvInputSessionWrapper: void <init>(android.content.Context,android.media.tv.TvInputService.Session,android.view.InputChannel)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.InputDevice: int getVendorId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.Switch: void setTrackResource(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.1000()>:<static>:<android.animation.LayoutTransition>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TextView: int getCompoundPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.IAccountAuthenticator: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.view.ViewDebug: void exportMethods(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.Class,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.media.MediaCodecInfo: android.util.Range access.000()>:<static>:<android.media.MediaCodecInfo>
<android.opengl.GLES20: void glEnable(int)>:<public static native>:<android.opengl.GLES20>
<android.media.IRingtonePlayer.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>:<public>:<android.view.ViewStub:android.view.View>
<android.filterpacks.base.GLTextureTarget: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.GLTextureTarget:android.filterfw.core.Filter>
<android.media.CCParser.CCMemory: void der()>:<>:<android.media.CCParser.CCMemory>
<android.widget.TextView: android.text.Layout getLayout()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvView: java.lang.String getSelectedTrack(int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.View: void setClipBounds(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: void setRingerModeInt(int,boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.printservice.PrinterDiscoverySession: void stopPrinterStateTracking(android.print.PrinterId)>:<>:<android.printservice.PrinterDiscoverySession>
<android.widget.TimePicker.TimePickerDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.opengl.GLLogWrapper: void glClear(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: void onNestedPreScroll(android.view.View,int,int,int[])>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.audiofx.AudioEffect: int native_setup(java.lang.Object,java.lang.String,java.lang.String,int,int,int[],java.lang.Object[])>:<private final native>:<android.media.audiofx.AudioEffect>
<android.media.ToneGenerator: void release()>:<public native>:<android.media.ToneGenerator>
<android.gesture.GestureUtils: void plot(float,float,float[],int)>:<private static>:<android.gesture.GestureUtils>
<android.service.wallpaper.WallpaperService: void onCreate()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.ITvInputManager.Stub.Proxy: void createSession(android.media.tv.ITvInputClient,java.lang.String,int,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.IWindowManager.Stub.Proxy: void getInitialDisplaySize(int,android.graphics.Point)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.WindowManagerPolicy: void setCurrentOrientationLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.MotionEvent: float getTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.ETC1Util: boolean isETC1Supported()>:<public static>:<android.opengl.ETC1Util>
<android.media.CameraProfile: int native_get_image_encoding_quality_level(int,int)>:<private static final native>:<android.media.CameraProfile>
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.ContentObservable: void registerObserver(java.lang.Object)>:<public volatile>:<android.database.ContentObservable:android.database.Observable>
<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.IWindowManager.Stub.Proxy: void removeWindowToken(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.WindowManagerPolicy: int getAboveUniverseLayer()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.notification.INotificationListener.Stub: android.service.notification.INotificationListener asInterface(android.os.IBinder)>:<public static>:<android.service.notification.INotificationListener.Stub:android.os.Binder,android.service.notification.INotificationListener>
<android.opengl.GLES30: void glVertexAttribIPointerBounds(int,int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.videoproc.BackDropperFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.widget.ListView.ArrowScrollFocusResult: void <init>(android.widget.ListView.1)>:<>:<android.widget.ListView.ArrowScrollFocusResult>
<android.view.DisplayEventReceiver: void <init>(android.os.Looper)>:<public>:<android.view.DisplayEventReceiver>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createUnEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.service.notification.NotificationRankingUpdate: void <init>(java.lang.String[],java.lang.String[],android.os.Bundle,int)>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.service.dreams.DreamService: void updateDoze()>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.filterpacks.videosrc.CameraSource: boolean access.000(android.filterpacks.videosrc.CameraSource)>:<static>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])>:<public abstract>:<android.view.ViewParent>
<android.view.ViewDebug.5: void <init>(android.view.ViewDebug.ViewOperation,long[],java.util.concurrent.CountDownLatch)>:<>:<android.view.ViewDebug.5:java.lang.Runnable>
<android.view.RenderNode: boolean nOffsetLeftAndRight(long,int)>:<private static native>:<android.view.RenderNode>
<android.media.tv.TvInputHardwareInfo: int access.102(android.media.tv.TvInputHardwareInfo,int)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.tv.TvInputService.Session: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.GLES20Canvas: int nCallDrawGLFunction(long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.WindowManagerPolicy: int getSystemDecorLayerLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller access.100(android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper)>:<static>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Gallery: void fillToGalleryRightRtl()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.AudioManager: void unregisterMediaButtonIntent(android.app.PendingIntent)>:<public>:<android.media.AudioManager>
<android.widget.StackView.StackSlider: float getDurationForNeutralPosition(float)>:<>:<android.widget.StackView.StackSlider>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>:<public>:<android.media.JetPlayer>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: java.lang.Integer getCaptureSession()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri,android.os.Bundle)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.Editor.EasyEditPopupWindow: void <init>(android.widget.Editor,android.widget.Editor.1)>:<>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.GridLayout: void onViewRemoved(android.view.View)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaMuxer: void setLocation(float,float)>:<public>:<android.media.MediaMuxer>
<android.preference.Preference: int compareTo(java.lang.Object)>:<public volatile>:<android.preference.Preference:java.lang.Comparable>
<android.database.DatabaseUtils: void <clinit>()>:<static>:<android.database.DatabaseUtils>
<android.opengl.GLES10: void glEnableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioService: void updateStreamVolumeAlias(boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: boolean access.1200(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PrintJobInfo.1: void <init>()>:<>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.widget.ScrollView: void addView(android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.MediaFocusControl: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.printservice.IPrintServiceClient.Stub: void <init>()>:<public>:<android.printservice.IPrintServiceClient.Stub:android.os.Binder,android.printservice.IPrintServiceClient>
<android.widget.TimePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.View: void setAccessibilityLiveRegion(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postContentAllowed()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.widget.Gallery.FlingRunnable: void startUsingVelocity(int)>:<public>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.view.RenderNode: long nCreate(java.lang.String)>:<private static native>:<android.view.RenderNode>
<android.widget.CalendarView.LegacyCalendarViewDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>:<private static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.KeyEvent: int getSource()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.AccountManager.2: void doWork()>:<public>:<android.accounts.AccountManager.2:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.View: void onRtlPropertiesChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ZoomButtonsController: void access.500(android.widget.ZoomButtonsController,int)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.GLES20Canvas: void setHighContrastText(boolean)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setUnfocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public abstract>:<android.opengl.GLSurfaceView.EGLConfigChooser>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.IWindowSession.Stub.Proxy: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.IAudioFocusDispatcher.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IAudioFocusDispatcher.Stub.Proxy:android.media.IAudioFocusDispatcher>
<android.view.View: boolean requestFocusFromTouch()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.database.sqlite.SQLiteConnectionPool: void setMaxConnectionPoolSizeLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.Surface: java.lang.String toString()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.View: void setEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.printservice.PrinterDiscoverySession: void onStopPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.opengl.GLErrorWrapper: void glGenTextures(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy: void setState(int)>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub.Proxy:android.view.accessibility.IAccessibilityManagerClient>
<android.widget.ExpandableListView: long getSelectedId()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.printservice.PrintServiceInfo: int hashCode()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.media.MediaRouterClientState.RouteInfo.1: void <init>()>:<>:<android.media.MediaRouterClientState.RouteInfo.1:android.os.Parcelable.Creator>
<android.view.RenderNode: boolean nSetAlpha(long,float)>:<private static native>:<android.view.RenderNode>
<android.widget.GridView: void setGravity(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.SimpleMonthAdapter: boolean hasStableIds()>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.media.tv.ITvInputSession: void setCaptionEnabled(boolean)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.accounts.Account: void <init>(android.os.Parcel)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setMonthDisplayed(java.util.Calendar)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.database.sqlite.SQLiteDebug: void nativeGetPagerStats(android.database.sqlite.SQLiteDebug.PagerStats)>:<private static native>:<android.database.sqlite.SQLiteDebug>
<android.view.WindowManagerPolicy.ScreenOnListener: void onScreenOn()>:<public abstract>:<android.view.WindowManagerPolicy.ScreenOnListener>
<android.media.AudioService: void sendMasterMuteUpdate(boolean,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.MenuItem: boolean isEnabled()>:<public abstract>:<android.view.MenuItem>
<android.view.FrameStats: long getFramePresentedTimeNano(int)>:<public final>:<android.view.FrameStats>
<android.media.session.ISessionController.Stub.Proxy: boolean sendMediaButton(android.view.KeyEvent)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.HardwareLayer: void setTransform(android.graphics.Matrix)>:<public>:<android.view.HardwareLayer>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManager.LayoutParams.1: android.view.WindowManager.LayoutParams createFromParcel(android.os.Parcel)>:<public>:<android.view.WindowManager.LayoutParams.1:android.os.Parcelable.Creator>
<android.widget.Editor.SelectionActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.accounts.IAccountManager.Stub.Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.MediaScanner.MyMediaScannerClient: android.media.MediaScanner.FileEntry beginFile(java.lang.String,java.lang.String,long,long,boolean,boolean)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnActionExpandListener>
<android.media.session.HwMediaSessionManagerDummy: void updateTargetInService(android.app.PendingIntent,android.content.Context)>:<public>:<android.media.session.HwMediaSessionManagerDummy:android.media.session.HwMediaSessionManager>
<android.widget.ScrollView: int getScrollRange()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService: void access.8700(android.media.AudioService,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.AbstractWindowedCursor: int getInt(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.MultiCheckPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.preference.GenericInflater: void <clinit>()>:<static>:<android.preference.GenericInflater>
<android.media.session.ISession: void setPlaybackToRemote(int,int)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.media.MediaRouter: boolean shouldShowWifiDisplay(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay)>:<private static>:<android.media.MediaRouter>
<android.view.MotionEvent: float getSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: int getMeasuredWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.CCParser.CCData: boolean isExtendedChar()>:<private>:<android.media.CCParser.CCData>
<android.gesture.Gesture.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.gesture.Gesture.1:android.os.Parcelable.Creator>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: void binderDied()>:<public>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.MediaMuxer: void nativeWriteSampleData(long,int,java.nio.ByteBuffer,int,int,long,int)>:<private static native>:<android.media.MediaMuxer>
<android.gesture.GestureStroke: void draw(android.graphics.Canvas,android.graphics.Paint)>:<>:<android.gesture.GestureStroke>
<android.media.tv.TvTrackInfo: void <clinit>()>:<static>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.Window: void setReenterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.service.notification.ConditionProviderService.Provider: void onSubscribe(android.net.Uri)>:<public>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.widget.TextView: void setScroller(android.widget.Scroller)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.ITvInputManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.ProgressBar: void applyProgressTints()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.view.InputFilter: void uninstall()>:<public final>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.media.audiofx.Visualizer: int setMeasurementMode(int)>:<public>:<android.media.audiofx.Visualizer>
<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.widget.ProgressBar: void applyPrimaryProgressTint()>:<private>:<android.widget.ProgressBar:android.view.View>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.view.View)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.View: float getTopFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: java.lang.String actionToString(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.WebVttParser.3: void <clinit>()>:<static>:<android.media.WebVttParser.3:android.media.WebVttParser.Phase>
<android.media.session.ISession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.accessibility.AccessibilityEvent: void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int)>:<private>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>:<public>:<android.view.SurfaceView:android.view.View>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus valueOf(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>:<public>:<android.view.InputEventReceiver>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.OnControlStatusChangeListener access.100(android.media.audiofx.AudioEffect)>:<static>:<android.media.audiofx.AudioEffect>
<android.view.ViewGroup: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb.Settings)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.RadialTimePickerView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.RemoteControlClient: android.os.Bundle access.102(android.media.RemoteControlClient,android.os.Bundle)>:<static>:<android.media.RemoteControlClient>
<android.preference.Preference: void setSummary(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.AudioManager: boolean isMicrophoneMute()>:<public>:<android.media.AudioManager>
<android.security.KeyPairGeneratorSpec: void checkCorrectParametersSpec(int,int,java.security.spec.AlgorithmParameterSpec)>:<private static>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1500(android.widget.CalendarView.LegacyCalendarViewDelegate,java.util.Calendar)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.MediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.SoundPool: int load(android.content.Context,int,int)>:<public>:<android.media.SoundPool>
<android.database.CursorWindow: java.lang.String getName()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.inputmethod.CursorAnchorInfo: boolean areSameFloatImpl(float,float)>:<private static>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.ImageReader.ListenerHandler: void handleMessage(android.os.Message)>:<public>:<android.media.ImageReader.ListenerHandler:android.os.Handler>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: boolean access.100(android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.media.audiofx.BassBoost.OnParameterChangeListener: void onParameterChange(android.media.audiofx.BassBoost,int,int,short)>:<public abstract>:<android.media.audiofx.BassBoost.OnParameterChangeListener>
<android.view.LayoutInflater.BlinkLayout.1: void <init>(android.view.LayoutInflater.BlinkLayout)>:<>:<android.view.LayoutInflater.BlinkLayout.1:android.os.Handler.Callback>
<android.view.WindowManagerInternal: boolean isKeyguardLocked()>:<public abstract>:<android.view.WindowManagerInternal>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setCurrentLocale(java.util.Locale)>:<protected>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleOrBehindKeyguardLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.SurfaceControl: boolean nativeGetContentFrameStats(long,android.view.WindowContentFrameStats)>:<private static native>:<android.view.SurfaceControl>
<android.media.tv.TvView: int access.202(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.Switch.1: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.widget.Switch.1:android.util.FloatProperty>
<android.preference.DialogPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.DialogPreference.SavedState.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService: void setRemoteStreamVolume(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean isSameDate(java.util.Calendar,java.util.Calendar)>:<private static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.Switch: void setShowText(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.view.ActionMode: void finish()>:<public abstract>:<android.view.ActionMode>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.ddm.DdmHandleHeap: void <clinit>()>:<static>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.print.IPrintSpoolerClient: void onAllPrintJobsHandled()>:<public abstract>:<android.print.IPrintSpoolerClient:android.os.IInterface>
<android.view.HardwareLayer: void <init>(android.view.HardwareRenderer,long)>:<private>:<android.view.HardwareLayer>
<android.media.IAudioService: void setVibrateSetting(int,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.print.PrinterInfo: void copyFrom(android.print.PrinterInfo)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.tv.ITvInputClient.Stub.Proxy: void onVideoUnavailable(int,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.media.SubtitleData: void <init>(android.os.Parcel)>:<public>:<android.media.SubtitleData>
<android.view.RenderNodeAnimator: void nSetStartValue(long,float)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.session.ISessionCallback: void onSetVolumeTo(int)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.media.MediaFocusControl.DisplayInfoForServer: android.content.ComponentName access.400(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.media.tv.TvInputInfo.TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>:<public static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.view.View: android.graphics.drawable.Drawable getBackground()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.SaturateFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.view.Window: void setSharedElementEnterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.widget.AdapterViewAnimator: android.view.ViewGroup.LayoutParams createOrReuseLayoutParams(android.view.View)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.WindowManagerGlobal.1: void <init>()>:<>:<android.view.WindowManagerGlobal.1:android.view.IWindowSessionCallback.Stub,android.os.Binder>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.printservice.PrintService.1: void createPrinterDiscoverySession()>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.AudioService.VolumeStreamState: boolean setIndex(int,int)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.media.IMediaRouterService.Stub.Proxy: void unregisterClient(android.media.IMediaRouterClient)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.accounts.AccountAndUser: boolean equals(java.lang.Object)>:<public>:<android.accounts.AccountAndUser>
<android.widget.ProgressBar: void doRefreshProgress(int,float,boolean,boolean,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.widget.StackView: void handlePointerUp(android.view.MotionEvent)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: void setProgressValueOnly(int)>:<>:<android.widget.ProgressBar:android.view.View>
<android.widget.VideoView: android.content.Context access.1700(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.animation.PathKeyframes: android.animation.Keyframes.IntKeyframes createYIntKeyframes()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.filterpacks.imageproc.StraightenFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.preference.MultiCheckPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.MultiCheckPreference.SavedState.1:android.os.Parcelable.Creator>
<android.service.dreams.IDreamManager: void startDozing(android.os.IBinder,int,int)>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.widget.RadialTimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.GLES20Canvas: boolean clipRect(android.graphics.Rect)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.session.MediaSessionManager.SessionsChangedWrapper.1.1: void run()>:<public>:<android.media.session.MediaSessionManager.SessionsChangedWrapper.1.1:java.lang.Runnable>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.View: int getWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Display: void getRealSize(android.graphics.Point)>:<public>:<android.view.Display>
<android.view.ViewGroup: void dispatchAttachedToWindow(android.view.View.AttachInfo,int)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>:<public>:<android.media.SubtitleController>
<android.widget.Editor.TextModifyOperation: void <init>(android.os.Parcel,java.lang.ClassLoader)>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setMaxStreams(int)>:<public>:<android.media.SoundPool.Builder>
<android.preference.SwitchPreference: void setSwitchTextOff(java.lang.CharSequence)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.View: boolean onCheckIsTextEditor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(int,android.os.UserHandle)>:<public>:<android.appwidget.AppWidgetManager>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.widget.SearchView.6: void onClick(android.view.View)>:<public>:<android.widget.SearchView.6:android.view.View.OnClickListener>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.animation.Animator.AnimatorListener getListener()>:<>:<android.view.ViewPropertyAnimator>
<android.filterpacks.imageproc.SaturateFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.media.MediaDrm.CertificateRequest: byte[] getData()>:<public>:<android.media.MediaDrm.CertificateRequest>
<android.accounts.AccountManager.14: void run()>:<public>:<android.accounts.AccountManager.14:java.lang.Runnable>
<android.filterpacks.imageproc.SharpenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.media.HwCustAudioServiceImpl: void setDtsStatus()>:<protected>:<android.media.HwCustAudioServiceImpl:android.media.HwCustAudioService>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.ActionButtonSubmenu getActionButtonPopup()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.appwidget.AppWidgetHost: void startListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.media.session.PlaybackState: int getState()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.MediaCodecInfo.VideoCapabilities: int getHeightAlignment()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.widget.SearchView: void onActionViewCollapsed()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: int computeHorizontalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void setAnimatedValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.RatingBar: void updateSecondaryProgress(int)>:<private>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLSurfaceView: void finalize()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView.Marquee.1: void <init>(android.widget.TextView.Marquee)>:<>:<android.widget.TextView.Marquee.1:android.view.Choreographer.FrameCallback>
<android.printservice.IPrintService.Stub: void <init>()>:<public>:<android.printservice.IPrintService.Stub:android.os.Binder,android.printservice.IPrintService>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<huawei.cust.HwCustUtils: void <clinit>()>:<static>:<huawei.cust.HwCustUtils>
<android.view.ViewPropertyAnimator: void access.800(android.view.ViewPropertyAnimator,int,float)>:<static>:<android.view.ViewPropertyAnimator>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.preference.PreferenceGroupAdapter: void setHighlightedDrawable(android.graphics.drawable.Drawable)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.RemoteViewsAdapter: void access.700(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>:<public static>:<android.gesture.GestureUtils>
<android.opengl.GLES11Ext: void glWeightPointerOESBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES11Ext>
<android.view.MenuItem: int getGroupId()>:<public abstract>:<android.view.MenuItem>
<android.hsm.HwSystemManager: boolean allowOp(int)>:<public static>:<android.hsm.HwSystemManager>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.filterpacks.imageproc.ToRGBAFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.media.AudioManager: int listAudioPorts(java.util.ArrayList)>:<public>:<android.media.AudioManager>
<android.widget.ActivityChooserModel.DefaultSorter: void <init>(android.widget.ActivityChooserModel)>:<private>:<android.widget.ActivityChooserModel.DefaultSorter:android.widget.ActivityChooserModel.ActivitySorter>
<android.media.MediaFocusControl.AudioFocusDeathHandler: android.os.IBinder getBinder()>:<public>:<android.media.MediaFocusControl.AudioFocusDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.AudioManager: int listAudioDevicePorts(java.util.ArrayList)>:<public>:<android.media.AudioManager>
<android.view.ScaleGestureDetector: float getPreviousSpan()>:<public>:<android.view.ScaleGestureDetector>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>:<public>:<android.view.GestureDetector>
<android.opengl.Matrix: void setIdentityM(float[],int)>:<public static>:<android.opengl.Matrix>
<android.database.sqlite.SQLiteSession: void endTransactionUnchecked(android.os.CancellationSignal,boolean)>:<private>:<android.database.sqlite.SQLiteSession>
<android.view.animation.PathInterpolator: void initCubic(float,float,float,float)>:<private>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteSession: boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.media.tv.TvView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder.DeathRecipient)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.opengl.GLSurfaceView: void requestRender()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.SurfaceView: void setVisibility(int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.widget.GridLayout.Axis: void setCount(int)>:<public>:<android.widget.GridLayout.Axis>
<android.widget.TextView: void setInputTypeSingleLine(boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.FlipFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>:<private static>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.MediaMetadata.1: void <init>()>:<>:<android.media.MediaMetadata.1:android.os.Parcelable.Creator>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>:<static>:<android.media.Utils>
<android.view.IWindowSession.Stub.Proxy: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.MiniThumbFile: android.media.MiniThumbFile instance(android.net.Uri)>:<public static>:<android.media.MiniThumbFile>
<android.media.IRemoteVolumeController: void updateRemoteController(android.media.session.ISessionController)>:<public abstract>:<android.media.IRemoteVolumeController:android.os.IInterface>
<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentInfo: void setDataSize(long)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.accounts.AuthenticatorException: void <init>()>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.media.IAudioService: void setStreamVolume(int,int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.Gallery.FlingRunnable: void startCommon()>:<private>:<android.widget.Gallery.FlingRunnable:java.lang.Runnable>
<android.view.accessibility.AccessibilityEvent: void setAction(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLLogWrapper: void unbindArrays()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.session.MediaSession.Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.opengl.GLLogWrapper: void glViewport(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.animation.ValueAnimator: void pause()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.tv.TvInputManager.Session: int sendInputEventOnMainLooperLocked(android.media.tv.TvInputManager.Session.PendingEvent)>:<private>:<android.media.tv.TvInputManager.Session>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.PlayerRecord: android.app.PendingIntent getMediaButtonIntent()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.media.AudioService: void access.6200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvView: void reset()>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer.TrackInfo: void <init>(int,android.media.MediaFormat)>:<>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.view.ViewDebug: void outputDisplayList(android.view.View,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.view.View: void onDetachedFromWindowInternal()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>:<public static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: void setAutoCheckpointInterval()>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.tv.TvInputManager.SessionCallbackRecord.7: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.7:java.lang.Runnable>
<android.view.SurfaceControl: boolean getAnimationFrameStats(android.view.WindowAnimationFrameStats)>:<public static>:<android.view.SurfaceControl>
<android.view.Window: void setFeatureDrawableResource(int,int)>:<public abstract>:<android.view.Window>
<android.widget.ListView: android.widget.ListView.ArrowScrollFocusResult arrowScrollFocused(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.CursorWrapper: boolean isNull(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.EncoderCapabilities: int native_get_file_format(int)>:<private static final native>:<android.media.EncoderCapabilities>
<android.media.MediaRouter: void addUserRoute(android.media.MediaRouter.UserRouteInfo)>:<public>:<android.media.MediaRouter>
<android.widget.TextView: android.view.AccessibilityIterators.TextSegmentIterator getIteratorForGranularity(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStopped(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>:<public static native>:<android.opengl.GLES10Ext>
<android.media.audiofx.LoudnessEnhancer.BaseParameterListener: void <init>(android.media.audiofx.LoudnessEnhancer)>:<private>:<android.media.audiofx.LoudnessEnhancer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.service.notification.Condition: void <clinit>()>:<static>:<android.service.notification.Condition:android.os.Parcelable>
<android.media.tv.ITvInputSession: void tune(android.net.Uri,android.os.Bundle)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.media.tv.TvInputService.1: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.preference.PreferenceManager: android.content.SharedPreferences.Editor getEditor()>:<>:<android.preference.PreferenceManager>
<android.media.AudioManager: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>:<public>:<android.media.AudioManager>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.widget.Editor: boolean isSelectedAll()>:<protected>:<android.widget.Editor>
<android.widget.ScrollBarDrawable: void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean)>:<protected>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.MediaRouter.SimpleCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.DialogPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.service.dreams.DreamService: void onWakeUp()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.filterpacks.imageproc.DocumentaryFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>:<public>:<android.media.MediaCodec>
<android.view.GLES20Canvas: void nSetupPaintFilter(long,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListPopupWindow.3: void <init>(android.widget.ListPopupWindow)>:<>:<android.widget.ListPopupWindow.3:android.widget.AdapterView.OnItemSelectedListener>
<android.widget.AbsListView.InputConnectionWrapper: boolean endBatchEdit()>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldTerminateEGLWhenPausing()>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void removeView(android.view.View)>:<public>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.filterpacks.videosrc.MediaSource: void pauseVideo(boolean)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.inputmethod.InputMethodInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.InputMethodInfo.1:android.os.Parcelable.Creator>
<android.view.ScaleGestureDetector: float getCurrentSpan()>:<public>:<android.view.ScaleGestureDetector>
<android.widget.ListView: void setSelectionAfterHeaderView()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference.SavedState.1: android.preference.DialogPreference.SavedState[] newArray(int)>:<public>:<android.preference.DialogPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.View.14: void <init>(java.lang.String)>:<>:<android.view.View.14:android.util.FloatProperty>
<android.animation.KeyframeSet: void <init>(android.animation.Keyframe[])>:<public transient>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.media.AudioRecord: int getRecordingState()>:<public>:<android.media.AudioRecord>
<android.filterpacks.imageproc.ResizeFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ResizeFilter:android.filterfw.core.Filter>
<android.media.AudioService: boolean access.6700(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper: void <init>(android.service.wallpaper.WallpaperService,android.service.wallpaper.WallpaperService)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper:android.service.wallpaper.IWallpaperService.Stub,android.os.Binder>
<android.view.ViewGroup: void removeViewAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioTrack>
<android.media.MediaExtractor: void unselectTrack(int)>:<public native>:<android.media.MediaExtractor>
<android.view.MenuInflater.MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>:<private>:<android.view.MenuInflater.MenuState>
<android.view.ViewGroup.MarginLayoutParams: void doResolveMargins()>:<private>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.PreferenceManager>
<android.opengl.GLException: int getError()>:<>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glDeleteProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.RelativeLayout: android.view.View getRelatedView(int[],int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.RadioGroup: void setCheckedStateForView(int,boolean)>:<private>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.MenuInflater: void registerMenu(android.view.SubMenu,android.util.AttributeSet)>:<private>:<android.view.MenuInflater>
<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.animation.Animator: void removeAllListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.media.SoundPool: void release()>:<public final>:<android.media.SoundPool>
<android.media.AudioPortEventHandler.1: void <init>(android.media.AudioPortEventHandler,android.os.Looper)>:<>:<android.media.AudioPortEventHandler.1:android.os.Handler>
<android.view.ViewDebug.RecyclerTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.media.tv.TvInputService.Session: boolean access.302(android.media.tv.TvInputService.Session,boolean)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.ComponentName,int)>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.print.PrinterInfo: void <init>(android.print.PrinterInfo.1)>:<>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.tv.TvContract: boolean isChannelUriForPassthroughInput(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand: void run()>:<public>:<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand:java.lang.Runnable>
<android.media.effect.effects.BackDropperEffect: android.media.effect.EffectUpdateListener access.000(android.media.effect.effects.BackDropperEffect)>:<static>:<android.media.effect.effects.BackDropperEffect:android.media.effect.FilterGraphEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.session.MediaSession.Callback: void onPause()>:<public>:<android.media.session.MediaSession.Callback>
<android.database.DatabaseUtils: int findRowIdColumnIndex(java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.view.RenderNodeAnimator: void <init>(int,float)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.WindowManagerImpl: android.view.WindowManagerImpl createPresentationWindowManager(android.view.Display)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.view.View: boolean performHapticFeedback(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FastScroller.5: void setValue(android.view.View,int)>:<public>:<android.widget.FastScroller.5:android.util.IntProperty>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.MediaFocusControl: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.print.IPrintManager.Stub.Proxy: java.util.List getPrintJobInfos(int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener: void onLearningDone(android.filterpacks.videoproc.BackDropperFilter)>:<public abstract>:<android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener>
<android.view.accessibility.AccessibilityManager: boolean removeHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.view.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.IWindowFocusObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindowFocusObserver.Stub:android.os.Binder,android.view.IWindowFocusObserver>
<android.media.MediaMuxer: void release()>:<public>:<android.media.MediaMuxer>
<android.opengl.GLSurfaceView: void checkRenderThreadState()>:<private>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.CursorWindow: boolean nativePutNull(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.MediaCodec: void releaseOutputBuffer(int,long)>:<public final>:<android.media.MediaCodec>
<android.view.inputmethod.CursorAnchorInfo: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.database.DatabaseUtils: int getKeyLen(byte[])>:<private static>:<android.database.DatabaseUtils>
<android.view.ViewConfiguration: float getScrollFriction()>:<public static>:<android.view.ViewConfiguration>
<android.view.SurfaceView.4: android.graphics.Rect getSurfaceFrame()>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)>:<public final>:<android.media.MediaExtractor>
<android.media.MediaFocusControl: void access.1400(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setSoundEffectsEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl: void setDragFocus(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService.VolumeStreamState: int access.6000(android.media.AudioService.VolumeStreamState)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.widget.Editor.HandleView: int getPreferredHeight()>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.IRemoteDisplayProvider.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.view.ViewRootImpl: void scheduleTraversals()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService.VolumeController: boolean isSameBinder(android.media.IVolumeController)>:<public>:<android.media.AudioService.VolumeController>
<android.service.voice.VoiceInteractionSession: void onCompleteVoice(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.IRemoteDisplayProvider: void setCallback(android.media.IRemoteDisplayCallback)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.filterpacks.base.FrameFetch: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.FrameFetch:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteSession: boolean hasTransaction()>:<public>:<android.database.sqlite.SQLiteSession>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onChanged()>:<public>:<android.widget.ListPopupWindow.PopupDataSetObserver:android.database.DataSetObserver>
<android.widget.HorizontalScrollView.SavedState.1: android.widget.HorizontalScrollView.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.widget.HorizontalScrollView.SavedState.1:android.os.Parcelable.Creator>
<android.view.View.9: java.lang.Float get(android.view.View)>:<public>:<android.view.View.9:android.util.FloatProperty>
<android.service.notification.IConditionListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.notification.IConditionListener.Stub.Proxy:android.service.notification.IConditionListener>
<android.view.MenuInflater.MenuState: void readGroup(android.util.AttributeSet)>:<public>:<android.view.MenuInflater.MenuState>
<android.view.textservice.SuggestionsInfo.1: android.view.textservice.SuggestionsInfo[] newArray(int)>:<public>:<android.view.textservice.SuggestionsInfo.1:android.os.Parcelable.Creator>
<android.widget.TabWidget: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()>:<public>:<android.media.RemoteControlClient>
<android.widget.GridView: void smoothScrollToPosition(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: boolean isNoMediaFile(java.lang.String)>:<private static>:<android.media.MediaScanner>
<android.media.session.MediaSession: void postToCallback(int,java.lang.Object,android.os.Bundle)>:<private>:<android.media.session.MediaSession>
<android.widget.Editor: boolean access.2100(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.widget.MediaController.1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public>:<android.widget.MediaController.1:android.view.View.OnLayoutChangeListener>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void runOrPost(android.view.View,int)>:<public>:<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent:java.lang.Runnable>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: void onPrintJobStateChanged(android.print.PrintJobId)>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.media.WebVttParser.2: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.2:android.media.WebVttParser.Phase>
<android.widget.TimePickerSpinnerDelegate: void updateDisplay(boolean)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.accounts.AccountManager.1: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String)>:<>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.gesture.Gesture: java.lang.Object clone()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.ViewRootImpl: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.opengl.GLSurfaceView: void onResume()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.tv.ITvInputSessionWrapper: void tune(android.net.Uri,android.os.Bundle)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.media.session.MediaSessionManager: boolean isGlobalPriorityActive()>:<public>:<android.media.session.MediaSessionManager>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.IOnKeyguardExitResult.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IOnKeyguardExitResult.Stub:android.os.Binder,android.view.IOnKeyguardExitResult>
<android.database.sqlite.SQLiteConnection.OperationLog: void failOperation(int,java.lang.Exception)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.media.audiofx.Visualizer: int native_getFft(byte[])>:<private final native>:<android.media.audiofx.Visualizer>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.filterpacks.imageproc.ResizeFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>:<protected>:<android.filterpacks.imageproc.ResizeFilter:android.filterfw.core.Filter>
<android.widget.PopupMenu.1: boolean onForwardingStopped()>:<protected>:<android.widget.PopupMenu.1:android.widget.ListPopupWindow.ForwardingListener>
<android.view.MotionEvent: float nativeGetXPrecision(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.ListenerInfo: android.view.View.OnDragListener access.702(android.view.View.ListenerInfo,android.view.View.OnDragListener)>:<static>:<android.view.View.ListenerInfo>
<android.widget.ListView: boolean arrowScroll(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.notification.ConditionProviderService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.textservice.SpellCheckerSubtype: int describeContents()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glMultiTexCoord4x(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.RemoteControlClient.1: void onSetRating(android.media.Rating)>:<public>:<android.media.RemoteControlClient.1:android.media.session.MediaSession.Callback>
<android.view.ScaleGestureDetector: android.view.MotionEvent access.002(android.view.ScaleGestureDetector,android.view.MotionEvent)>:<static>:<android.view.ScaleGestureDetector>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.800(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.widget.ProgressBar: void refreshProgress(int,float,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaPlayer: void attachAuxEffect(int)>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsRemoteViewAt(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.tv.TvInputManager.Session: java.util.List access.400(android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvInputManager.Session>
<android.media.tv.TvInputService.HardwareSession: android.os.Handler access.1002(android.media.tv.TvInputService.HardwareSession,android.os.Handler)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.tv.TvStreamConfig: int access.102(android.media.tv.TvStreamConfig,int)>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.media.RemoteController.TopTransportSessionListener: void <init>(android.media.RemoteController)>:<private>:<android.media.RemoteController.TopTransportSessionListener:android.media.session.MediaSessionManager.OnActiveSessionsChangedListener>
<android.media.tv.TvTrackInfo: void <init>(int,java.lang.String,java.lang.String,int,int,int,int,float,android.os.Bundle,android.media.tv.TvTrackInfo.1)>:<>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: void keyguardGoingAway(boolean,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewDebug.RecyclerTraceType: void <init>(java.lang.String,int)>:<private>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.widget.VideoView: boolean isInPlaybackStateOuter()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.InputQueue.ActiveInputEvent: void recycle()>:<public>:<android.view.InputQueue.ActiveInputEvent>
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.TextView: int computeVerticalScrollExtent()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ShareActionProvider: android.widget.ShareActionProvider.OnShareTargetSelectedListener access.400(android.widget.ShareActionProvider)>:<static>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.service.media.MediaBrowserService.ServiceBinder: void addSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.security.IKeyChainService.Stub.Proxy: boolean hasGrant(int,java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.View: void invalidate(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>:<public>:<android.widget.TableLayout.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setInternalCapturePreset(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.preference.DialogPreference: int getDialogLayoutResource()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.animation.KeyframeSet: android.animation.KeyframeSet clone()>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.opengl.GLSurfaceView.EglHelper: void start()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.view.RenderNode: boolean setClipToOutline(boolean)>:<public>:<android.view.RenderNode>
<android.print.PrinterInfo: void <init>(android.print.PrinterInfo)>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.session.ISession.Stub.Proxy: void setPlaybackToRemote(int,int)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.animation.AnimatorSet.DependencyListener: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.security.AndroidKeyStore: void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.tv.TvInputHardwareInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.tv.TvInputHardwareInfo.1:android.os.Parcelable.Creator>
<android.view.RenderNode: boolean nSetProjectionReceiver(long,boolean)>:<private static native>:<android.view.RenderNode>
<android.view.View.8: void <init>(java.lang.String)>:<>:<android.view.View.8:android.util.FloatProperty>
<android.opengl.GLLogWrapper: void bindArrays()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.security.AndroidKeyStore: void engineLoad(java.io.InputStream,char[])>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void <clinit>()>:<static>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.hsm.HsmTransactExt: void <init>()>:<public>:<android.hsm.HsmTransactExt>
<android.media.tv.TvInputManager.Session: java.util.List getTracks(int)>:<public>:<android.media.tv.TvInputManager.Session>
<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)>:<public>:<android.view.Display>
<android.print.PrintManager.PrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>:<public abstract>:<android.print.PrintManager.PrintJobStateChangeListener>
<android.view.inputmethod.InputMethodManager.1: void onBindMethod(com.android.internal.view.InputBindResult)>:<public>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.SoundPool: void <init>(int,android.media.AudioAttributes)>:<private>:<android.media.SoundPool>
<android.service.notification.ConditionProviderService: void <init>()>:<public>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean readBytes(byte[],int)>:<private>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: int access.2100(android.media.AudioService.VolumeStreamState.VolumeDeathHandler)>:<static>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<android.widget.RadialTimePickerView: void onMeasure(int,int)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.dreams.IDreamManager: android.content.ComponentName getDefaultDreamComponent()>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.view.ViewPropertyAnimatorRT: boolean canHandleAnimator(android.view.ViewPropertyAnimator)>:<private>:<android.view.ViewPropertyAnimatorRT>
<android.media.MediaPlayer: void _reset()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.Gallery: int calculateTop(android.view.View,boolean)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.media.session.ISessionController.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.session.ISessionController.Stub:android.os.Binder,android.media.session.ISessionController>
<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.gesture.GestureStore: void setOrientationStyle(int)>:<public>:<android.gesture.GestureStore>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,int,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection>
<android.media.session.PlaybackState.CustomAction: void <clinit>()>:<static>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.media.TtmlParser: void parse(java.lang.String,long)>:<public>:<android.media.TtmlParser>
<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.ClosedCaptionWidget: android.view.accessibility.CaptioningManager.CaptionStyle access.000(android.media.ClosedCaptionWidget)>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.view.View: void invalidate(boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputServiceCallback.Stub: android.media.tv.ITvInputServiceCallback asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputServiceCallback.Stub:android.os.Binder,android.media.tv.ITvInputServiceCallback>
<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaCodecInfo: android.util.Range access.300()>:<static>:<android.media.MediaCodecInfo>
<android.view.animation.PathInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.media.session.MediaSession.QueueItem.1: void <init>()>:<>:<android.media.session.MediaSession.QueueItem.1:android.os.Parcelable.Creator>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>:<public final>:<android.view.LayoutInflater>
<android.view.ViewRootImpl: void doConsumeBatchedInput(long)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.RelativeLayout: void <clinit>()>:<static>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetManager: void bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.os.IBinder)>:<public>:<android.appwidget.AppWidgetManager>
<android.print.IPrintSpooler.Stub: void <init>()>:<public>:<android.print.IPrintSpooler.Stub:android.os.Binder,android.print.IPrintSpooler>
<android.widget.Editor.SelectionActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.opengl.GLES10: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator.1: void run()>:<public>:<android.accounts.AbstractAccountAuthenticator.1:java.lang.Runnable>
<android.media.AudioService: boolean registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void onSetRating(android.media.Rating)>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.accounts.Account.1: android.accounts.Account createFromParcel(android.os.Parcel)>:<public>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.GraphicBuffer.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.GraphicBuffer.1:android.os.Parcelable.Creator>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig build()>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.view.PointerIcon.1: android.view.PointerIcon createFromParcel(android.os.Parcel)>:<public>:<android.view.PointerIcon.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationListenerService: void requestListenerHints(int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.view.ViewGroup: void access.500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.KeyEvent: boolean isSystem()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.animation.Animation: boolean getDetachWallpaper()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(long)>:<public static native>:<android.opengl.EGL14>
<android.view.ViewRootImpl.SystemUiVisibilityInfo: void <init>()>:<>:<android.view.ViewRootImpl.SystemUiVisibilityInfo>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void <init>(android.app.PendingIntent,android.content.Context)>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.media.AudioTrack: void loge(java.lang.String)>:<private static>:<android.media.AudioTrack>
<android.media.AudioService: int[] access.4300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.inputmethod.CorrectionInfo: void <init>(android.os.Parcel)>:<private>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.media.MediaDrm.MediaDrmStateException: int getErrorCode()>:<public>:<android.media.MediaDrm.MediaDrmStateException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.filterpacks.performance.Throughput: int getPeriodFrameCount()>:<public>:<android.filterpacks.performance.Throughput>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder access.800(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.ViewGroup: void startLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.SurfaceControl: void nativeSetDisplaySize(android.os.IBinder,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.database.BulkCursorDescriptor.1: android.database.BulkCursorDescriptor[] newArray(int)>:<public>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.netdetect.HwCustNetDetectServiceImpl: boolean isNetworkAvailable()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.View: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteDisplayState.RemoteDisplayInfo: int describeContents()>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder addRule(android.media.AudioAttributes,int)>:<public>:<android.media.audiopolicy.AudioMixingRule.Builder>
<android.database.sqlite.SQLiteDatabase: void beginTransaction(android.database.sqlite.SQLiteTransactionListener,boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvInputInfo: boolean isHidden(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.tv.TvInputService: boolean isPassthroughInput(java.lang.String)>:<private>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaScanner: boolean isDrmEnabled()>:<private>:<android.media.MediaScanner>
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.View.AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.database.Cursor: boolean moveToLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.inputmethod.InputMethodInfo: boolean isDefault(android.content.Context)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSkipIme()>:<public>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.media.MediaRecorder.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaRecorder.EventHandler:android.os.Handler>
<android.database.sqlite.SQLiteConnection: void nativeResetStatementAndClearBindings(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.WindowManagerPolicy: void swipFromTop()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.wallpaper.WallpaperService.Engine: void doDesiredSizeChanged(int,int)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.VolumeProvider: void onAdjustVolume(int)>:<public>:<android.media.VolumeProvider>
<android.view.ScaleGestureDetector: float getFocusX()>:<public>:<android.view.ScaleGestureDetector>
<android.view.ViewGroup: boolean getClipToPadding()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService.StreamOverride: void updateDefaultStreamOverrideDelay(boolean)>:<private static>:<android.media.AudioService.StreamOverride:android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.media.session.MediaController.Callback: void onSessionDestroyed()>:<public>:<android.media.session.MediaController.Callback>
<android.media.tv.ITvInputManager: boolean isParentalControlsEnabled(int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.security.AndroidKeyStore: void engineSetEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.gesture.GestureUtils: float minimumCosineDistance(float[],float[],int)>:<static>:<android.gesture.GestureUtils>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRE(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.GLES20Canvas: boolean nClipRect(long,float,float,float,float,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioService.StreamVolumeCommand: void <init>(android.media.AudioService,int,int,int,int)>:<>:<android.media.AudioService.StreamVolumeCommand>
<android.media.AudioService: void access.2300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.session.MediaSession: android.media.session.PlaybackState access.200(android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession>
<android.view.AccessibilityIterators.TextSegmentIterator: int[] preceding(int)>:<public abstract>:<android.view.AccessibilityIterators.TextSegmentIterator>
<android.database.sqlite.SQLiteConnection: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.filterpacks.videosrc.SurfaceTextureSource: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.database.BulkCursorNative: android.os.IBinder asBinder()>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.service.trust.ITrustAgentServiceCallback: void grantTrust(java.lang.CharSequence,long,boolean)>:<public abstract>:<android.service.trust.ITrustAgentServiceCallback:android.os.IInterface>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.pm.ResolveInfo,boolean,java.lang.String,java.util.List,int,boolean)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.Exception access.400(android.accounts.AccountManager,int,java.lang.String)>:<static>:<android.accounts.AccountManager>
<android.service.trust.TrustAgentService.TrustAgentServiceWrapper: void setCallback(android.service.trust.ITrustAgentServiceCallback)>:<public>:<android.service.trust.TrustAgentService.TrustAgentServiceWrapper:android.service.trust.ITrustAgentService.Stub,android.os.Binder>
<android.filterpacks.imageproc.AutoFixFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.opengl.GLES11: void <init>()>:<public>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.tv.TvView.MySessionCallback: void onContentBlocked(android.media.tv.TvInputManager.Session,android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.tv.TvTrackInfo: int getVideoHeight()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.database.CursorWindow: boolean nativePutBlob(long,byte[],int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.ViewRootImpl.RunQueue.HandlerAction: void <init>()>:<private>:<android.view.ViewRootImpl.RunQueue.HandlerAction>
<android.view.View: void addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.NotificationListenerService: java.lang.String access.100(android.service.notification.NotificationListenerService)>:<static>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.TabWidget: int getTabCount()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.tv.TvView: void setCallback(android.media.tv.TvView.TvInputCallback)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.GridLayout.Axis: void setParentConstraints(int,int)>:<private>:<android.widget.GridLayout.Axis>
<android.media.Ringtone: boolean isPlaying()>:<public>:<android.media.Ringtone>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Object getValue(float)>:<public>:<android.animation.PathKeyframes.FloatKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.FloatKeyframes>
<android.media.AudioManager: java.lang.String getIdForAudioFocusListener(android.media.AudioManager.OnAudioFocusChangeListener)>:<private>:<android.media.AudioManager>
<android.database.CursorJoiner: java.util.Iterator iterator()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.service.media.IMediaBrowserService.Stub.Proxy: void disconnect(android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.widget.DatePicker: boolean getSpinnersShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TimePickerClockDelegate.2: void onValueChange(android.widget.NumberPicker,int,int)>:<public>:<android.widget.TimePickerClockDelegate.2:android.widget.NumberPicker.OnValueChangeListener>
<android.widget.TextView: int getFadeTop(boolean)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodecList: java.lang.String getCodecName(int)>:<static final native>:<android.media.MediaCodecList>
<android.view.HardwareRenderer: void invalidateRoot()>:<abstract>:<android.view.HardwareRenderer>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.animation.BounceInterpolator: float bounce(float)>:<private static>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.SimpleMonthAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.service.notification.INotificationListener: void onInterruptionFilterChanged(int)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.preference.SeekBarVolumizer: void onSaveInstanceState(android.preference.VolumePreference.VolumeStore)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IRemoteControlDisplay: void setPlaybackState(int,int,long,long,float)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.DatabaseErrorHandler>
<android.opengl.GLLogWrapper: void glPointParameterx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.IAccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.IMediaScannerService.Stub: android.media.IMediaScannerService asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaScannerService.Stub:android.os.Binder,android.media.IMediaScannerService>
<android.media.IAudioService: void setStreamMute(int,boolean,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ThreadedRenderer: int getHeight()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.service.trust.TrustAgentService.1: void handleMessage(android.os.Message)>:<public>:<android.service.trust.TrustAgentService.1:android.os.Handler>
<android.service.media.IMediaBrowserService: void connect(java.lang.String,android.os.Bundle,android.service.media.IMediaBrowserServiceCallbacks)>:<public abstract>:<android.service.media.IMediaBrowserService:android.os.IInterface>
<android.database.Observable: void unregisterObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.widget.ScrollView: boolean scrollAndFocus(int,int,int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterpacks.videosink.MediaEncoderFilter.OnRecordingDoneListener: void onRecordingDone()>:<public abstract>:<android.filterpacks.videosink.MediaEncoderFilter.OnRecordingDoneListener>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getRecognitionService()>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.appwidget.AppWidgetProvider: void <init>()>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.media.MediaRouter.RouteGroup: void removeRoute(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.opengl.GLErrorWrapper: void glFogf(int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.Editor.HandleView: void onMeasure(int,int)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.Rating.1: android.media.Rating createFromParcel(android.os.Parcel)>:<public>:<android.media.Rating.1:android.os.Parcelable.Creator>
<android.widget.RadialTimePickerView: void <clinit>()>:<static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.IWindowManager.Stub.Proxy: boolean hasNavigationBar()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.inputmethod.CompletionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.media.tv.TvInputManager.TvInputCallback: void <init>()>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.media.MediaRouter.RouteGroup: void setIconResource(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.tv.TvTrackInfo: java.lang.String getId()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>:<public static native>:<android.opengl.ETC1>
<android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.IVoiceInteractionService access.700(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.animation.LayoutTransition: long access.300(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.opengl.GLLogWrapper: void glMultMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaDrm: byte[] openSession()>:<public native>:<android.media.MediaDrm>
<android.media.AudioManager: android.media.AudioManager.OnAudioFocusChangeListener access.100(android.media.AudioManager,java.lang.String)>:<static>:<android.media.AudioManager>
<android.view.IOnKeyguardExitResult.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IOnKeyguardExitResult.Stub.Proxy:android.view.IOnKeyguardExitResult>
<android.media.CCParser.CCMemory: android.text.SpannableStringBuilder[] getStyledText(android.view.accessibility.CaptioningManager.CaptionStyle)>:<>:<android.media.CCParser.CCMemory>
<android.media.RemoteDisplay: void finalize()>:<protected>:<android.media.RemoteDisplay>
<android.preference.MultiCheckPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.Space: void <init>(android.content.Context)>:<public>:<android.widget.Space:android.view.View>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>:<public static final>:<android.database.DatabaseUtils>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.IAudioService: void startBluetoothSco(android.os.IBinder,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.HwAbsListView: boolean findCheckbleView(android.view.View,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void dispatchPointer(android.view.MotionEvent)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioService: boolean access.9700(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.security.IKeyChainService.Stub.Proxy: java.lang.String requestPrivateKey(java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.preference.PreferenceInflater: android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup)>:<protected>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.widget.TabWidget: void addView(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.animation.AnimatorSet: void setStartDelay(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.session.ISessionCallback: void onFastForward()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.media.MediaDrm: android.media.MediaDrm.ProvisionRequest getProvisionRequest()>:<public>:<android.media.MediaDrm>
<android.view.View: boolean dispatchNestedPreFling(float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.DecelerateInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.FloatKeyframes)>:<public>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.opengl.EGL14: boolean eglReleaseThread()>:<public static native>:<android.opengl.EGL14>
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES10: void glPopMatrix()>:<public static native>:<android.opengl.GLES10>
<android.widget.ScrollBarDrawable: void draw(android.graphics.Canvas)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.animation.AnimationSet: void restrictDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.Editor.SelectionActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.widget.TextView: void setWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterViewAnimator: void showNext()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.filterpacks.imageproc.AutoFixFilter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.service.persistentdata.PersistentDataBlockManager: long getMaximumDataBlockSize()>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.view.ThreadedRenderer: int nSyncAndDrawFrame(long,long,long,float)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES30: boolean glIsQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.KeyCharacterMap: void addDeadKey(int,int,int)>:<private static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setPlaybackState(int,int,long,long,float)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.view.ViewDebug.3: java.lang.Void[] pre()>:<public>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.view.InputEventSender: void dispose()>:<public>:<android.view.InputEventSender>
<android.media.TimedText.Font: void <init>(int,java.lang.String)>:<public>:<android.media.TimedText.Font>
<android.view.ViewRootImpl: boolean access.2602(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.accounts.ChooseTypeAndAccountActivity: void populateUIAccountList(java.lang.String[])>:<private final>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.database.sqlite.SQLiteDirectCursorDriver: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.view.View: void assignParent(android.view.ViewParent)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputEventSender: void dispose(boolean)>:<private>:<android.view.InputEventSender>
<android.widget.ProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.KeyEvent.1: void <init>()>:<>:<android.view.KeyEvent.1:android.os.Parcelable.Creator>
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.MotionEvent: android.view.MotionEvent split(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.animation.ValueAnimator: boolean canReverse()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.tv.TvStreamConfig: int access.402(android.media.tv.TvStreamConfig,int)>:<static>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.os.Parcel,android.media.browse.MediaBrowser.1)>:<>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.security.AndroidKeyStore: java.util.Collection toCertificates(byte[])>:<private static>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.AudioTrack: void native_finalize()>:<private final native>:<android.media.AudioTrack>
<android.filterpacks.videosrc.MediaSource: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.media.AsyncPlayer: void acquireWakeLock()>:<private>:<android.media.AsyncPlayer>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule build()>:<public>:<android.media.audiopolicy.AudioMixingRule.Builder>
<android.media.MediaCodecInfo: void <init>(java.lang.String,boolean,android.media.MediaCodecInfo.CodecCapabilities[])>:<>:<android.media.MediaCodecInfo>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView.GLThread: void run()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.printservice.PrintService: void throwIfNotCalledOnMainThread()>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureLibrary: void <init>()>:<protected>:<android.gesture.GestureLibrary>
<android.media.session.ISessionController.Stub.Proxy: java.lang.CharSequence getQueueTitle()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.RelativeLayout.DependencyGraph.Node: void release()>:<>:<android.widget.RelativeLayout.DependencyGraph.Node>
<android.view.IWindowManager: void setAppGroupId(android.os.IBinder,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.VelocityTracker: long nativeInitialize(java.lang.String)>:<private static native>:<android.view.VelocityTracker>
<android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)>:<public abstract>:<android.view.ViewParent>
<android.media.CCParser.CCMemory: void moveCursorByCol(int)>:<private>:<android.media.CCParser.CCMemory>
<android.database.sqlite.SqliteWrapper: boolean isLowMemory(android.database.sqlite.SQLiteException)>:<private static>:<android.database.sqlite.SqliteWrapper>
<android.view.InputDevice: boolean hasButtonUnderPad()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.gesture.GestureOverlayView: void setOrientation(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.WebVttParser.1: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.1:android.media.WebVttParser.Phase>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.ScrollView: void scrollToChild(android.view.View)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GLES20Canvas: void nRotate(long,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.fingerprint.FingerprintManager.1: void <init>(android.service.fingerprint.FingerprintManager)>:<>:<android.service.fingerprint.FingerprintManager.1:android.os.Handler>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.AccessibilityInteractionController: void access.600(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.service.voice.VoiceInteractionSession: void onDestroy()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.TextView: int getPaintFlags()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor: void showInsertionController(int)>:<protected>:<android.widget.Editor>
<android.view.AccessibilityIterators: void <init>()>:<public>:<android.view.AccessibilityIterators>
<android.media.MediaPlayer: int getCurrentPosition()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.audiofx.LoudnessEnhancer: void <init>(int)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void <init>(android.view.AccessibilityInteractionController)>:<private>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1: void onCancel()>:<public>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1:android.os.CancellationSignal.OnCancelListener>
<android.widget.RadialTimePickerView: int snapOnly30s(int,int)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLES30: void glUniform1ui(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ViewFlipper: boolean access.002(android.widget.ViewFlipper,boolean)>:<static>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Menu: int size()>:<public abstract>:<android.view.Menu>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.os.Looper)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler:android.os.Handler>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.ViewDebug: java.util.HashMap getFieldsMap()>:<private static>:<android.view.ViewDebug>
<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout.Metrics,android.text.BoringLayout.Metrics,int,boolean)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback:android.os.IInterface>
<android.media.SubtitleTrack: void <init>(android.media.MediaFormat)>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.media.JetPlayer: void access.200(java.lang.String)>:<static>:<android.media.JetPlayer>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent,boolean)>:<public>:<android.preference.GenericInflater>
<android.view.IAssetAtlas: boolean isCompatible(int)>:<public abstract>:<android.view.IAssetAtlas:android.os.IInterface>
<android.opengl.GLLogWrapper: void glClipPlanef(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SoundPool.SoundPoolStub: void setLoop(int,int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.tv.TvInputService: int getRegisteredCallbackCount()>:<public final>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>:<public static>:<android.view.textservice.TextServicesManager>
<android.service.fingerprint.IFingerprintService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub:android.os.Binder,android.service.fingerprint.IFingerprintService>
<android.widget.ListView: boolean arrowScrollImpl(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.MergeCursor: short getShort(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.MotionEvent: float getHistoricalPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnection:android.os.IInterface>
<android.media.session.MediaSessionManager: java.util.List getActiveSessionsForUser(android.content.ComponentName,int)>:<public>:<android.media.session.MediaSessionManager>
<android.accounts.AccountManagerResponse.1: android.accounts.AccountManagerResponse[] newArray(int)>:<public>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.view.inputmethod.SparseRectFArray: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(java.lang.Object)>:<public volatile>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.view.InputDevice.MotionRange: float getRange()>:<public>:<android.view.InputDevice.MotionRange>
<android.preference.Preference: java.lang.CharSequence getSummary()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaCodec: int dequeueInputBuffer(long)>:<public final>:<android.media.MediaCodec>
<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>:<public>:<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy:android.widget.ActivityChooserModel.OnChooseActivityListener>
<android.widget.Editor: void suspendBlink()>:<private>:<android.widget.Editor>
<android.service.wallpaper.WallpaperService.Engine: void <init>(android.service.wallpaper.WallpaperService)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.ViewRootImpl.AsyncInputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>:<protected>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.animation.PointFEvaluator: android.graphics.PointF evaluate(float,android.graphics.PointF,android.graphics.PointF)>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.widget.ZoomButtonsController: int access.400()>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLWallpaperService: void <init>()>:<>:<android.opengl.GLWallpaperService>
<android.media.JetPlayer: boolean clearQueue()>:<public>:<android.media.JetPlayer>
<android.widget.StackView: void measureChildren()>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ObjectAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.opengl.GLLogWrapper: void glStencilOp(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TabHost: int getTabWidgetLocation()>:<private>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.RingtonePreference: int getRingtoneType()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.AudioService.2: void onServiceDisconnected(int)>:<public>:<android.media.AudioService.2:android.bluetooth.BluetoothProfile.ServiceListener>
<android.view.ViewDebug.FlagToString: int equals()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.media.AudioAttributes: void <init>(android.media.AudioAttributes.1)>:<>:<android.media.AudioAttributes:android.os.Parcelable>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.animation.AnimatorSet: void cancel()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.preference.MultiSelectListPreference.1: void <init>(android.preference.MultiSelectListPreference)>:<>:<android.preference.MultiSelectListPreference.1:android.content.DialogInterface.OnMultiChoiceClickListener>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>:<public>:<android.media.AudioManager>
<android.widget.DatePickerCalendarDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: void <init>(int,float,float,float)>:<private>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.ViewRootImpl.ViewPreImeInputStage: int processKeyEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.ViewPreImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo makeRegular()>:<public>:<android.media.MediaCodecInfo>
<android.view.Surface: boolean isConsumerRunningBehind()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void destroy()>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.widget.TextView: int getMaxHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.CaptioningManager.2: void <init>(android.view.accessibility.CaptioningManager)>:<>:<android.view.accessibility.CaptioningManager.2:java.lang.Runnable>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.SetRemoteViewsAdapterList:android.widget.RemoteViews.Action>
<android.widget.GridLayout: int getDefaultMargin(android.view.View,android.widget.GridLayout.LayoutParams,boolean,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.AdapterViewAnimator: void checkForAndHandleDataChanged()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.printservice.IPrintService: void setClient(android.printservice.IPrintServiceClient)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.animation.KeyframeSet: java.lang.Object getValue(float)>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.widget.BaseExpandableListAdapter: void <init>()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.print.IPrintSpoolerCallbacks: void onCancelPrintJobResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)>:<public>:<android.view.textservice.TextServicesManager>
<android.view.ViewDebug: long profileViewOperation(android.view.View,android.view.ViewDebug.ViewOperation)>:<private static>:<android.view.ViewDebug>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.preference.PreferenceGroupAdapter.1: void run()>:<public>:<android.preference.PreferenceGroupAdapter.1:java.lang.Runnable>
<android.view.InputChannel: java.lang.String toString()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.view.Window: android.transition.Transition getReturnTransition()>:<public>:<android.view.Window>
<android.media.AudioTrack: void logd(java.lang.String)>:<private static>:<android.media.AudioTrack>
<android.accounts.IAccountManager: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.security.IKeyChainService: java.lang.String requestPrivateKey(java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.Animation.2: void run()>:<public>:<android.view.animation.Animation.2:java.lang.Runnable>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.MultiAutoCompleteTextView: void performValidation()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.print.PrintJobInfo: android.os.Bundle access.300(android.print.PrintJobInfo)>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.IWindowSession.Stub.Proxy: void finishDrawing(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.accounts.IAccountAuthenticatorResponse.Stub: void <init>()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.accounts.AccountAuthenticatorActivity: void <init>()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.SurfaceView: void <init>(android.content.Context)>:<public>:<android.view.SurfaceView:android.view.View>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setMinDate(long)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.tv.TvTrackInfo.1: android.media.tv.TvTrackInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvTrackInfo.1:android.os.Parcelable.Creator>
<android.widget.TextView: void fixFocusableAndClickableSettings()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.FastScroller: void cancelPendingDrag()>:<private>:<android.widget.FastScroller>
<android.media.ThumbnailUtils: int computeInitialSampleSize(android.graphics.BitmapFactory.Options,int,int)>:<private static>:<android.media.ThumbnailUtils>
<android.animation.AnimatorSet: long getDuration()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.IAudioFocusDispatcher.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IAudioFocusDispatcher.Stub.Proxy:android.media.IAudioFocusDispatcher>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean hasStableIds()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.900(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.service.notification.NotificationListenerService.Ranking: void <init>()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.media.MediaRouter.Static: void rebindAsUser(int)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.media.MediaFocusControl: void access.300(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.View: boolean isOpaque()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.ISessionController: java.lang.String getPackageName()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaCodecInfo.AudioCapabilities: int[] getSupportedSampleRates()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.session.PlaybackState: long getLastPositionUpdateTime()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.view.InputEvent: boolean isFromSource(int)>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.widget.Gallery: void <init>(android.content.Context)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.preference.TwoStatePreference: void setChecked(boolean)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.Filter: android.os.Handler access.402(android.widget.Filter,android.os.Handler)>:<static>:<android.widget.Filter>
<android.media.RemoteDisplay: void dispose(boolean)>:<private>:<android.media.RemoteDisplay>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.accounts.AuthenticatorDescription.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.media.IRemoteVolumeObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteVolumeObserver.Stub.Proxy:android.media.IRemoteVolumeObserver>
<android.media.session.ISessionControllerCallback: void onExtrasChanged(android.os.Bundle)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>:<public abstract>:<android.view.Window>
<android.media.session.ISession: void setFlags(int)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.view.View: void setTranslationZ(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.MenuItem>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.accounts.AccountManager: android.os.Handler access.600(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.widget.TimePickerSpinnerDelegate: void access.300(android.widget.TimePickerSpinnerDelegate,int)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.ContextThemeWrapper: void initializeTheme()>:<private>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.IWindowManager: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.audiopolicy.AudioPolicy.Builder: void <init>()>:<public>:<android.media.audiopolicy.AudioPolicy.Builder>
<android.media.PlayerRecord: int getRccId()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.RemoteController: java.lang.Object access.200()>:<static>:<android.media.RemoteController>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.projection.IMediaProjectionManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.projection.IMediaProjectionManager.Stub:android.os.Binder,android.media.projection.IMediaProjectionManager>
<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setNextFocusLeftId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.EditorInfo.1: android.view.inputmethod.EditorInfo[] newArray(int)>:<public>:<android.view.inputmethod.EditorInfo.1:android.os.Parcelable.Creator>
<android.media.WebVttParser: void access.500(android.media.WebVttParser,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<static>:<android.media.WebVttParser>
<android.widget.ActionMenuPresenter: void setReserveOverflow(boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.ViewGroup: void recreateChildDisplayList(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.PrinterInfo: void <init>()>:<private>:<android.print.PrinterInfo:android.os.Parcelable>
<android.filterpacks.videosrc.MediaSource: boolean access.100(android.filterpacks.videosrc.MediaSource)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.ViewGroup: void addView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowId.FocusObserver.1: void focusLost(android.os.IBinder)>:<public>:<android.view.WindowId.FocusObserver.1:android.view.IWindowFocusObserver.Stub,android.os.Binder>
<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.FastScroller>
<android.view.GLES20Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrintDocumentInfo: long getDataSize()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback)>:<public>:<android.media.session.MediaSession>
<android.preference.ListPreference: java.lang.String getValue()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>:<public>:<android.view.ActionProvider>
<android.opengl.GLLogWrapper: void glPointSizex(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputManager: void removeBlockedRating(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager>
<android.widget.Spinner.DropdownPopup: void show(int,int)>:<public>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.printservice.PrinterDiscoverySession: java.util.List getTrackedPrinters()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.widget.DateTimeView: void unregisterReceivers()>:<private>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.view.MenuInflater: java.lang.Class[] access.200()>:<static>:<android.view.MenuInflater>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.view.IWindowId: boolean isFocused()>:<public abstract>:<android.view.IWindowId:android.os.IInterface>
<android.test.AndroidTestCase: void tearDown()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.view.ViewGroup: void resolveLayoutParams()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>:<public>:<android.view.Choreographer>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewStub: int getLayoutResource()>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.Editor.CorrectionHighlighter: void access.200(android.widget.Editor.CorrectionHighlighter,boolean)>:<static>:<android.widget.Editor.CorrectionHighlighter>
<android.widget.GridView: boolean arrowScroll(int)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.MultiSelectListPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.MultiSelectListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.accounts.ChooseAccountActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.ClosedCaptionWidget.CCLineBox: void <init>(android.content.Context)>:<>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.media.RemoteControlClient.MetadataEditor: java.lang.Object clone()>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.Utils: long lcm(int,int)>:<private static>:<android.media.Utils>
<android.widget.Editor.ActionPopupWindow: boolean isShowing()>:<public volatile>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.MediaHTTPConnection: android.os.IBinder connect(java.lang.String,java.lang.String)>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.media.MediaRouter.VolumeCallback: void onVolumeSetRequest(android.media.MediaRouter.RouteInfo,int)>:<public abstract>:<android.media.MediaRouter.VolumeCallback>
<android.opengl.GLErrorWrapper: void glActiveTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void setMaxHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Surface.CompatibleCanvas: void <init>(android.view.Surface)>:<private>:<android.view.Surface.CompatibleCanvas:android.graphics.Canvas>
<android.widget.HwSplineOverScrollerDummy: void <init>()>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>:<public>:<android.widget.TableLayout.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.CCParser: void <clinit>()>:<static>:<android.media.CCParser>
<android.view.SurfaceView: void handleGetNewSurface()>:<>:<android.view.SurfaceView:android.view.View>
<android.service.fingerprint.FingerprintManagerReceiver: void <init>()>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.accounts.IAccountManager: boolean addSharedAccountAsUser(android.accounts.Account,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.MediaCodecList: java.lang.String[] getSupportedTypes(int)>:<static final native>:<android.media.MediaCodecList>
<android.media.MediaRouter.RouteInfo: android.view.Display getPresentationDisplay()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.ViewRootImpl.RunQueue: void <init>()>:<>:<android.view.ViewRootImpl.RunQueue>
<android.widget.RadialTimePickerView: int getAmOrPm()>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.animation.AnimationSet: void setStartOffset(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.Editor: boolean access.2700(android.widget.Editor,float,float)>:<static>:<android.widget.Editor>
<android.widget.Editor: void hideErrorIfNeed()>:<protected>:<android.widget.Editor>
<android.view.ViewRootImpl: void access.1400(android.view.ViewRootImpl,android.view.MotionEvent)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void interrupt(int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.media.IAudioService.Stub.Proxy: android.media.IRingtonePlayer getRingtonePlayer()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.ContentObservable: void dispatchChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.PathKeyframes.2: void <init>(android.animation.PathKeyframes)>:<>:<android.animation.PathKeyframes.2:android.animation.PathKeyframes.FloatKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowAttached()>:<public abstract>:<android.view.ViewTreeObserver.OnWindowAttachListener>
<android.filterpacks.videosrc.MediaSource: boolean access.702(android.filterpacks.videosrc.MediaSource,boolean)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.MotionEvent: int getActionIndex()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.Window: boolean isOutOfBounds(android.content.Context,android.view.MotionEvent)>:<private>:<android.view.Window>
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>:<public>:<android.media.MiniThumbFile>
<android.media.tv.TvInputManager.1: void onLayoutSurface(int,int,int,int,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.view.KeyEvent: boolean isGamepadButton(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.Choreographer.FrameHandler: void handleMessage(android.os.Message)>:<public>:<android.view.Choreographer.FrameHandler:android.os.Handler>
<android.media.MediaDescription: java.lang.String toString()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.media.MediaRouter.UserRouteInfo: void setStatus(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.media.IAudioService.Stub: android.media.IAudioService asInterface(android.os.IBinder)>:<public static>:<android.media.IAudioService.Stub:android.os.Binder,android.media.IAudioService>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.SearchView: void clearFocus()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: int nativeGetFlags(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.media.TtmlParser: android.media.TtmlNode parseNode(android.media.TtmlNode)>:<private>:<android.media.TtmlParser>
<android.media.session.ISessionController.Stub.Proxy: void stop()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.RadialTimePickerView: void setCurrentItemShowing(int,boolean)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.RenderNode: boolean nSetOutlineNone(long)>:<private static native>:<android.view.RenderNode>
<android.preference.PreferenceActivity.Header: void <init>(android.os.Parcel)>:<>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.media.projection.IMediaProjectionWatcherCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionWatcherCallback>
<android.widget.Gallery: boolean access.602(android.widget.Gallery,boolean)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.TvInputManager.Session access.700(android.media.tv.TvInputService.HardwareSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.MediaRecorder: void setAudioEncoder(int)>:<public native>:<android.media.MediaRecorder>
<android.database.CursorWindow: boolean isNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.Gallery: void setUnselectedAlpha(float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setComposingText(int,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.filterpacks.text.StringLogger: void <init>(java.lang.String)>:<public>:<android.filterpacks.text.StringLogger:android.filterfw.core.Filter>
<android.media.MediaRouter.Static: void updateAudioRoutes(android.media.AudioRoutesInfo)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>:<public static final>:<android.database.DatabaseUtils>
<android.media.DecoderCapabilities: int native_get_num_video_decoders()>:<private static final native>:<android.media.DecoderCapabilities>
<android.view.IWindowSession: void performDeferredDestroy(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.filterpacks.imageproc.BlackWhiteFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.media.MediaRouter.RouteGroup: void updateVolume()>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.IWindowManager: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewStub: void setLayoutResource(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.media.AudioService.SoundPoolListenerThread: void run()>:<public>:<android.media.AudioService.SoundPoolListenerThread:java.lang.Thread>
<android.media.session.ISessionController: void next()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.IWindowManager.Stub.Proxy: int getBaseDisplayDensity(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void onPrintJobStateChanged(android.print.PrintJobId)>:<public>:<android.print.PrintManager.PrintJobStateChangeListenerWrapper:android.print.IPrintJobStateChangeListener.Stub,android.os.Binder>
<android.widget.Scroller: int getStartY()>:<public final>:<android.widget.Scroller>
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)>:<public static final>:<android.media.MediaFormat>
<android.print.PrintAttributes.Margins: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Margins>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityWindowInfo.1: android.view.accessibility.AccessibilityWindowInfo[] newArray(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputManager.Stub.Proxy: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.View: android.view.HardwareRenderer getHardwareRenderer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>:<public abstract>:<android.view.MenuItem>
<android.media.MediaRouterClientState.RouteInfo: int describeContents()>:<public>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.SubtitleController: void selectDefaultTrack()>:<public>:<android.media.SubtitleController>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvView: java.lang.Object access.1000()>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void updateQrcodeButton(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.CCParser.CCData: int getTabOffset()>:<>:<android.media.CCParser.CCData>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void adjNsd(java.lang.String)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.CheckForTap: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.CheckForTap:java.lang.Runnable>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.media.AudioService: boolean isStreamAffectedByMute(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLUtils: void nativeClassInit()>:<private static native>:<android.opengl.GLUtils>
<android.print.PrinterCapabilitiesInfo: int access.402(android.print.PrinterCapabilitiesInfo,int)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.ThumbnailUtils: int computeSampleSize(android.graphics.BitmapFactory.Options,int,int)>:<private static>:<android.media.ThumbnailUtils>
<android.view.ThreadedRenderer: void nBuildLayer(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.accessibility.AccessibilityManager: void access.000(android.view.accessibility.AccessibilityManager)>:<static>:<android.view.accessibility.AccessibilityManager>
<android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.service.media.IMediaBrowserService: void disconnect(android.service.media.IMediaBrowserServiceCallbacks)>:<public abstract>:<android.service.media.IMediaBrowserService:android.os.IInterface>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>:<public>:<android.preference.PreferenceManager>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean deliverSelfNotifications()>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForCursorWindow(long,long,long,int,int,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.print.PrinterCapabilitiesInfo.Builder: void <init>(android.print.PrinterId)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.view.Choreographer.FrameDisplayEventReceiver: void onVsync(long,int,int)>:<public>:<android.view.Choreographer.FrameDisplayEventReceiver:android.view.DisplayEventReceiver,java.lang.Runnable>
<android.media.session.ISessionController: boolean isTransportControlEnabled()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.ViewGroup.2: void run()>:<public>:<android.view.ViewGroup.2:java.lang.Runnable>
<android.view.ViewRootImpl: void checkThread()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getCount()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.database.sqlite.SQLiteQueryBuilder: void <clinit>()>:<static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.IAudioService: void setMode(int,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.tv.TvInputService.1: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.service.notification.StatusBarNotification: java.lang.String getTag()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.WindowManagerPolicy: void adjustConfigurationLw(android.content.res.Configuration,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.Editor: boolean isOffsetVisible(int)>:<protected>:<android.widget.Editor>
<android.media.AudioService: boolean shouldVibrate(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.GLES20Canvas: void nRestore(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.VolumeProvider.Callback: void onVolumeChanged(android.media.VolumeProvider)>:<public abstract>:<android.media.VolumeProvider.Callback>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioPortConfig: android.media.AudioPort port()>:<public>:<android.media.AudioPortConfig>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void removeDelayedAnimation(android.view.RenderNodeAnimator)>:<public>:<android.view.RenderNodeAnimator.DelayedAnimationHelper:java.lang.Runnable>
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.view.ViewGroup: void removeAllViews()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)>:<public static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES20: void glDisable(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Switch: void <clinit>()>:<static>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.dreams.DreamService: void access.900(android.service.dreams.DreamService,boolean)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.Utils: int parseIntSafely(java.lang.Object,int)>:<static>:<android.media.Utils>
<android.widget.TextView: android.text.Layout.Alignment getLayoutAlignment()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaFocusControl: void access.1100(android.media.MediaFocusControl)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.projection.MediaProjection.CallbackRecord: android.media.projection.MediaProjection.Callback access.200(android.media.projection.MediaProjection.CallbackRecord)>:<static>:<android.media.projection.MediaProjection.CallbackRecord>
<android.filterpacks.base.RetargetFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.base.RetargetFilter:android.filterfw.core.Filter>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.TypeConverter: java.lang.Object convert(java.lang.Object)>:<public abstract>:<android.animation.TypeConverter>
<android.view.MotionEvent: float getTouchMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.media.session.MediaController: void addCallbackLocked(android.media.session.MediaController.Callback,android.os.Handler)>:<private>:<android.media.session.MediaController>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.ddm.DdmHandleViewDebug: android.view.View getRootView(java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.ThreadedRenderer: void nDeleteProxy(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.effect.effects.IdentityEffect: void setParameter(java.lang.String,java.lang.Object)>:<public>:<android.media.effect.effects.IdentityEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.MediaDrm: android.media.MediaDrm.OnEventListener access.100(android.media.MediaDrm)>:<static>:<android.media.MediaDrm>
<android.print.IPrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.view.inputmethod.SparseRectFArray: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.media.tv.TvInputService.Session: void notifySessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.CursorWindow: void nativeWriteToParcel(long,android.os.Parcel)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: int getTop()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase.1: android.database.sqlite.SQLiteSession initialValue()>:<protected>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.media.AudioService: void setMasterVolume(int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>:<public static>:<android.view.PointerIcon:android.os.Parcelable>
<android.accounts.IAccountManager.Stub.Proxy: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.print.PrintAttributes.Resolution: java.lang.String getId()>:<public>:<android.print.PrintAttributes.Resolution>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.media.IVolumeController.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IVolumeController.Stub:android.os.Binder,android.media.IVolumeController>
<android.opengl.EGLLogWrapper: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.print.PrintJobInfo: void <clinit>()>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.TextView.CharWrapper: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: android.view.View focusSearch(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec.BufferInfo: void <init>()>:<public>:<android.media.MediaCodec.BufferInfo>
<android.print.PrintJobInfo: void setCreationTime(long)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.textservice.SpellCheckerSubtype.1: android.view.textservice.SpellCheckerSubtype[] newArray(int)>:<public>:<android.view.textservice.SpellCheckerSubtype.1:android.os.Parcelable.Creator>
<android.media.MediaExtractor: boolean getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo)>:<public native>:<android.media.MediaExtractor>
<android.view.MenuInflater.MenuState: boolean hasAddedItem()>:<public>:<android.view.MenuInflater.MenuState>
<android.database.IContentObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.database.IContentObserver.Stub.Proxy:android.database.IContentObserver>
<android.database.sqlite.SQLiteGlobal: void <init>()>:<private>:<android.database.sqlite.SQLiteGlobal>
<android.widget.StackView.StackSlider: float getDurationForNeutralPosition()>:<>:<android.widget.StackView.StackSlider>
<android.media.Tokenizer.TagTokenizer: android.media.Tokenizer.TokenizerPhase start()>:<public>:<android.media.Tokenizer.TagTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.opengl.GLLogWrapper: void glFrontFace(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager: boolean clearWindowContentFrameStats(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.InstrumentationTestCase: void sendKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.media.PlayerRecord: void <clinit>()>:<static>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.view.View: int getAccessibilityLiveRegion()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteController: boolean setArtworkConfiguration(boolean,int,int)>:<public>:<android.media.RemoteController>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean access.2200(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.AudioService: void enforceSelfOrSystemUI(java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryEffects()>:<public static>:<android.media.audiofx.AudioEffect>
<android.media.tv.TvView: void resetInternal()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.ViewOperation: java.lang.Object[] pre()>:<public abstract>:<android.view.ViewDebug.ViewOperation>
<android.view.MotionEvent: int nativeGetToolType(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>:<public>:<android.view.View.DragShadowBuilder>
<android.media.ImageReader.SurfaceImage: void access.000(android.media.ImageReader.SurfaceImage)>:<static>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.View: boolean startNestedScroll(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrinterInfo: void <clinit>()>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.view.ThreadedRenderer: void nStopDrawing(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.IWindowManager.Stub.Proxy: void reenableKeyguard(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: float getTextSize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(short[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.FocusFinderHelper: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>:<public>:<android.view.FocusFinderHelper>
<android.widget.HwAbsListView: void onMultiSelectUp()>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.gesture.Learner: java.util.ArrayList classify(int,int,float[])>:<abstract>:<android.gesture.Learner>
<android.media.MediaMetadata: boolean containsKey(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.print.PrintAttributes: void <init>()>:<>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.AudioPortEventHandler: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.AudioPortEventHandler>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.media.IAudioService.Stub.Proxy: void setMasterVolume(int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.print.PageRange: int hashCode()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.appwidget.AppWidgetHost: void viewDataChanged(int,int)>:<>:<android.appwidget.AppWidgetHost>
<android.print.PrintDocumentInfo: java.lang.String toString()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.Display: int getLayerStack()>:<public>:<android.view.Display>
<android.view.View: void setHapticFeedbackEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.gesture.GestureLibraries.ResourceGestureLibrary: void <init>(android.content.Context,int)>:<public>:<android.gesture.GestureLibraries.ResourceGestureLibrary:android.gesture.GestureLibrary>
<android.view.accessibility.AccessibilityRecord: void setConnectionId(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.MediaMuxer: int addTrack(android.media.MediaFormat)>:<public>:<android.media.MediaMuxer>
<android.view.ViewRootImpl.TrackballAxis: float collect(float,long,java.lang.String)>:<>:<android.view.ViewRootImpl.TrackballAxis>
<android.media.MediaPlayer: android.os.Parcel newRequest()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.IOnKeyguardExitResult.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IOnKeyguardExitResult.Stub:android.os.Binder,android.view.IOnKeyguardExitResult>
<android.view.accessibility.AccessibilityEvent.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.accessibility.AccessibilityEvent.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteConnectionPool: boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.widget.AdapterView: boolean canAnimate()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void dispatchSetPressed(boolean)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View: void buildLayer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor: void ensureEndedBatchEditOuter()>:<protected>:<android.widget.Editor>
<android.view.KeyEvent.1: android.view.KeyEvent createFromParcel(android.os.Parcel)>:<public>:<android.view.KeyEvent.1:android.os.Parcelable.Creator>
<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.ViewGroup: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.AnimatorSet.1: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.1:android.animation.AnimatorListenerAdapter>
<android.widget.AdapterViewAnimator.1.1: void <init>(android.widget.AdapterViewAnimator.1)>:<>:<android.widget.AdapterViewAnimator.1.1:java.lang.Runnable>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioTrack: boolean isRestricted()>:<private>:<android.media.AudioTrack>
<android.media.audiofx.EnvironmentalReverb.BaseParameterListener: void <init>(android.media.audiofx.EnvironmentalReverb,android.media.audiofx.EnvironmentalReverb.1)>:<>:<android.media.audiofx.EnvironmentalReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.widget.TextView.Marquee: boolean isStopped()>:<>:<android.widget.TextView.Marquee>
<android.media.tv.TvView.TvInputCallback: void onChannelRetuned(java.lang.String,android.net.Uri)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.View.ListenerInfo: android.view.View.OnGenericMotionListener access.500(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.ClosedCaptionWidget: void onAttachedToWindow()>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.widget.TextView: int getMaxEms()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputManager.SessionCallbackRecord.8: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.8:java.lang.Runnable>
<android.view.IWindowManager.Stub.Proxy: void setEventDispatching(boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.View: void setDisabledSystemUiVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLES10: void glNormalPointerBounds(int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.media.tv.TvInputManager.Hardware: void setStreamVolume(float)>:<public>:<android.media.tv.TvInputManager.Hardware>
<android.view.inputmethod.InputMethodManager: void showSoftInputUnchecked(int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES20: void glUniform2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: void setTainted(boolean)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: void disconnectSocket()>:<private final>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.ThreadedRenderer: void dumpGfxInfo(java.io.PrintWriter,java.io.FileDescriptor)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.AudioService: android.media.AudioService.ForceControlStreamClient access.800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ThreadedRenderer: void fence()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.MediaRouter: void systemVolumeChanged(int)>:<static>:<android.media.MediaRouter>
<android.media.ImageReader: android.media.Image acquireNextImage()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.ViewRootImpl: boolean isGameProcess(java.lang.String)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.SessionCallback: void onSessionReleased(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.view.IWindow.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.filterpacks.videosrc.MediaSource: boolean access.102(android.filterpacks.videosrc.MediaSource,boolean)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.view.OrientationEventListener: boolean canDetectOrientation()>:<public>:<android.view.OrientationEventListener>
<android.service.dreams.IDreamManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.preference.GenericInflater: void <init>(android.content.Context)>:<protected>:<android.preference.GenericInflater>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.media.MediaPlayer: void prepareAsync()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.SurfaceControl: android.view.SurfaceControl.PhysicalDisplayInfo[] getDisplayConfigs(android.os.IBinder)>:<public static>:<android.view.SurfaceControl>
<android.view.RenderNode: boolean hasShadow()>:<public>:<android.view.RenderNode>
<android.filterpacks.videosrc.SurfaceTextureSource: void setupPorts()>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.view.ViewDebug.3: void <init>(android.view.View)>:<>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.widget.ImageButton: boolean onSetAlpha(int)>:<protected>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap getGroupBounds()>:<public>:<android.widget.GridLayout.Axis>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalFocusChangeListener>
<android.database.CursorWindow: boolean allocRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: void setNextFocusDownId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IMediaScannerListener.Stub: android.media.IMediaScannerListener asInterface(android.os.IBinder)>:<public static>:<android.media.IMediaScannerListener.Stub:android.os.Binder,android.media.IMediaScannerListener>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: int readReply(byte[])>:<private>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.inputmethod.InputMethodSession: void viewClicked(boolean)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.security.IKeystoreService: int ungrant(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void <init>(android.media.session.MediaSessionLegacyHelper.SessionHolder)>:<private>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrinterInfo.1: android.print.PrinterInfo[] newArray(int)>:<public>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glMultMatrixf(float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioTrack: void pause()>:<public>:<android.media.AudioTrack>
<android.media.AudioService.VolumeStreamState: int getIndex(int)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.view.View: void transformRect(android.graphics.Rect)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaScanner: android.media.MediaInserter access.1500(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.DragEvent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.DragEvent.1:android.os.Parcelable.Creator>
<android.widget.Toast.TN: void <init>()>:<>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.preference.PreferenceFragment.2: void run()>:<public>:<android.preference.PreferenceFragment.2:java.lang.Runnable>
<android.media.MediaFocusControl.DisplayInfoForServer: int access.802(android.media.MediaFocusControl.DisplayInfoForServer,int)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.database.CursorWindow: void recordClosingOfWindow(long)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.print.IPrintSpoolerCallbacks.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.view.View: void resolveLayoutParams()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glLightx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.AudioManager: boolean querySoundEffectsEnabled(int)>:<private>:<android.media.AudioManager>
<android.widget.Editor.HandleView: void addPositionToTouchUpFilterOuter(int)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.view.SurfaceView: boolean access.000(android.view.SurfaceView)>:<static>:<android.view.SurfaceView:android.view.View>
<android.widget.RemoteViews.MemoryUsageCounter: int getMemoryUsage()>:<public>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.media.WebVttRenderingWidget.CueLayout: void setOrder(int)>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.SeekBarPreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.Surface: void nativeUnlockCanvasAndPost(long,android.graphics.Canvas)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.media.AudioMixPort: android.media.AudioMixPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>:<public>:<android.media.AudioMixPort:android.media.AudioPort>
<android.media.TtmlParser: void loadParser(java.lang.String)>:<private>:<android.media.TtmlParser>
<android.view.View.UnsetPressedState: void <init>(android.view.View)>:<private>:<android.view.View.UnsetPressedState:java.lang.Runnable>
<android.view.WindowContentFrameStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onRequestContinued()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.database.MergeCursor: float getFloat(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.preference.SeekBarVolumizer.H: void handleMessage(android.os.Message)>:<public>:<android.preference.SeekBarVolumizer.H:android.os.Handler>
<android.opengl.GLException: java.lang.String getErrorString(int)>:<private static>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.session.MediaController.CallbackStub: void onMetadataChanged(android.media.MediaMetadata)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.gesture.GestureOverlayView: boolean access.100(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setHighlightColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy: boolean rotationHasCompatibleMetricsLw(int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.preference.PreferenceCategory: boolean isEnabled()>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.database.sqlite.SQLiteConnection: void throwIfStatementForbidden(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.TextView: int getBottomVerticalOffset(boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.AnimatorListenerAdapter: void <init>()>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.Window.Callback: void onActionModeFinished(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.view.ThreadedRenderer: void trimMemory(int)>:<static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.ddm.DdmHandleViewDebug.1: void <init>(android.ddm.DdmHandleViewDebug,android.view.View,android.view.View)>:<>:<android.ddm.DdmHandleViewDebug.1:java.lang.Runnable>
<android.view.ViewPropertyAnimator: void animateProperty(int,float)>:<private>:<android.view.ViewPropertyAnimator>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.Window: android.view.Window getContainer()>:<public final>:<android.view.Window>
<android.view.GLES20Canvas: void insertInorderBarrier()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaHTTPConnection: java.lang.String getMIMEType()>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.widget.Editor: void setSelectionActionMode(boolean)>:<protected>:<android.widget.Editor>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.media.MediaCodec: android.media.MediaCodec.Callback access.002(android.media.MediaCodec,android.media.MediaCodec.Callback)>:<static>:<android.media.MediaCodec>
<android.view.View.ListenerInfo: android.view.View.OnSystemUiVisibilityChangeListener access.1200(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()>:<public>:<android.media.RemoteControlClient>
<android.preference.PreferenceFragment.2: void <init>(android.preference.PreferenceFragment)>:<>:<android.preference.PreferenceFragment.2:java.lang.Runnable>
<android.view.View.ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access.202(android.view.View.ListenerInfo,java.util.concurrent.CopyOnWriteArrayList)>:<static>:<android.view.View.ListenerInfo>
<android.view.KeyEvent: boolean hasNoModifiers()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.TtmlRenderingWidget: void onAttachedToWindow()>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.WindowInsets: int getWindowDecorInsetTop()>:<public>:<android.view.WindowInsets>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean access.1400(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.printservice.IPrintService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.ListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.IWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.widget.TextView: int getOffsetForPosition(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.preference.PreferenceInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>:<public>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.security.IKeystoreService.Stub.Proxy: int del_key(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.gesture.GestureStore: void load(java.io.InputStream)>:<public>:<android.gesture.GestureStore>
<android.media.MediaFocusControl: void setNewRcClient_syncRcsCurrc(int,android.app.PendingIntent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewRootImpl: android.view.Choreographer.FrameCallback access.100(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService: int[] access.3800()>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.animation.Keyframe: float getFraction()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.media.session.ISessionController.Stub.Proxy: void seekTo(long)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.EdgeEffect: void onAbsorb(int)>:<public>:<android.widget.EdgeEffect>
<android.animation.TypeConverter: void <init>(java.lang.Class,java.lang.Class)>:<public>:<android.animation.TypeConverter>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.GestureDetector: void cancel()>:<private>:<android.view.GestureDetector>
<android.service.media.MediaBrowserService.2: void onResultSent(java.lang.Object)>:<volatile>:<android.service.media.MediaBrowserService.2:android.service.media.MediaBrowserService.Result>
<android.view.inputmethod.CursorAnchorInfo.Builder: float access.900(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.SurfaceControl: void setLayer(int)>:<public>:<android.view.SurfaceControl>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void removeAccessibilityInteractionConnection(android.view.IWindow)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager)>:<public>:<android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper:com.android.internal.view.IInputConnectionWrapper>
<android.widget.RemoteViews.ReflectionAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.media.IMediaHTTPConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.filterpacks.imageproc.ColorTemperatureFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.widget.AdapterView: void rememberSyncState()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaDrm.Certificate: void <init>()>:<>:<android.media.MediaDrm.Certificate>
<android.widget.Editor.HandleView: int getHorizontalOffset()>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.database.sqlite.SQLiteDatabase: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.GridLayout: boolean fits(int[],int,int,int)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>:<private static>:<android.media.RingtoneManager>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void <init>(android.widget.RadioGroup,android.widget.RadioGroup.1)>:<>:<android.widget.RadioGroup.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaFocusControl: void updateRemoteControlDisplay_syncPrs(int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.GLES20Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.filterpacks.videosrc.MediaSource.4: void <init>(android.filterpacks.videosrc.MediaSource)>:<>:<android.filterpacks.videosrc.MediaSource.4:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.media.tv.TvInputManager.TvInputCallbackRecord: void postInputAdded(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.media.IMediaRouterService.Stub.Proxy: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.session.MediaSession.Token.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.session.MediaSession.Token.1:android.os.Parcelable.Creator>
<android.view.View: boolean isProjectionReceiver()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.GLES20Canvas: boolean nClipRect(long,int,int,int,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.RemoteControlClient: int access.800(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.media.ImageReader: void nativeReleaseImage(android.media.Image)>:<private synchronized native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.Gallery: int access.1000(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.view.View.CheckForLongPress: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.CheckForLongPress:java.lang.Runnable>
<android.media.MediaCodec.MediaImage: void access.800(android.media.MediaCodec.MediaImage)>:<static>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.view.GLES20Canvas: boolean nClipRegion(long,long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.MediaCodec: android.media.Image getInputImage(int)>:<public>:<android.media.MediaCodec>
<android.widget.FastScroller.1: void run()>:<public>:<android.widget.FastScroller.1:java.lang.Runnable>
<android.widget.MediaController.3: void handleMessage(android.os.Message)>:<public>:<android.widget.MediaController.3:android.os.Handler>
<android.service.voice.VoiceInteractionSession.2: void destroy()>:<public>:<android.service.voice.VoiceInteractionSession.2:android.service.voice.IVoiceInteractionSession.Stub,android.os.Binder>
<android.media.ImageReader: void nativeInit(java.lang.Object,int,int,int,int)>:<private synchronized native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.media.session.MediaSession.Token: android.media.session.ISessionController getBinder()>:<>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.view.animation.LinearInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.media.AudioManager: boolean isFMActive()>:<public>:<android.media.AudioManager>
<android.media.MediaCodecInfo.VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Double)>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.media.MediaScanner.MyMediaScannerClient: void <init>(android.media.MediaScanner)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.widget.TextView: int getMaxLines()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IApplicationToken.Stub: android.view.IApplicationToken asInterface(android.os.IBinder)>:<public static>:<android.view.IApplicationToken.Stub:android.os.Binder,android.view.IApplicationToken>
<android.view.animation.Transformation: void setClipRect(android.graphics.Rect)>:<public>:<android.view.animation.Transformation>
<android.view.MotionEvent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.MotionEvent.1:android.os.Parcelable.Creator>
<android.view.MotionEvent: float getOrientation()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SearchView: android.widget.ImageView access.400(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.MediaScanner.MyMediaScannerClient: void setMimeType(java.lang.String)>:<public>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.view.View: void damageShadowReceiver()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.Animation: boolean hasEnded()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.audiofx.EnvironmentalReverb: short getDensity()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.ListView: android.view.View makeAndAddView(int,int,boolean,int,boolean)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IAudioRoutesObserver.Stub.Proxy: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>:<public>:<android.media.IAudioRoutesObserver.Stub.Proxy:android.media.IAudioRoutesObserver>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.ImageReader: void <init>(int,int,int,int)>:<protected>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.DragEvent.1: void <init>()>:<>:<android.view.DragEvent.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputService.Stub.Proxy: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.preference.PreferenceGroupAdapter: boolean areAllItemsEnabled()>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.Editor.SelectionModifierCursorController: void initHandles()>:<private>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.ddm.DdmHandleThread: void <clinit>()>:<static>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.Choreographer: boolean isRunningOnLooperThreadLocked()>:<private>:<android.view.Choreographer>
<android.media.session.MediaController.PlaybackInfo: int getMaxVolume()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.view.RenderNode: boolean nHasOverlappingRendering(long)>:<private static native>:<android.view.RenderNode>
<android.opengl.GLLogWrapper: void glBindBuffer(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarVolumizer: void <init>(android.content.Context,int,android.net.Uri,android.preference.SeekBarVolumizer.Callback)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.GraphicBuffer.1: android.view.GraphicBuffer[] newArray(int)>:<public>:<android.view.GraphicBuffer.1:android.os.Parcelable.Creator>
<android.print.IPrintManager: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.service.trust.ITrustAgentServiceCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub:android.os.Binder,android.service.trust.ITrustAgentServiceCallback>
<android.media.MediaScanner.PlaylistEntry: void <init>()>:<private>:<android.media.MediaScanner.PlaylistEntry>
<android.widget.TextView: void updateAfterEdit()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.ITvInputSessionCallback: void onContentBlocked(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.view.animation.PathInterpolator: void parseInterpolatorFromTypeArray(android.content.res.TypedArray)>:<private>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.media.session.HwMediaSessionManagerDummy: android.media.session.HwMediaSessionManager getDefault()>:<public static>:<android.media.session.HwMediaSessionManagerDummy:android.media.session.HwMediaSessionManager>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.print.IPrintSpooler.Stub.Proxy: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postVideoUnavailable(int)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.widget.Editor: android.graphics.drawable.Drawable access.2300(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.view.Window: void dispatchOnWindowDismissed()>:<public final>:<android.view.Window>
<android.preference.TwoStatePreference: void setSummaryOn(int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.MediaController.2: void <init>(android.widget.MediaController)>:<>:<android.widget.MediaController.2:android.view.View.OnTouchListener>
<android.media.MediaRouter: android.media.MediaRouter.UserRouteInfo createUserRoute(android.media.MediaRouter.RouteCategory)>:<public>:<android.media.MediaRouter>
<android.widget.TabHost.LabelIndicatorStrategy: void <init>(android.widget.TabHost,java.lang.CharSequence)>:<private>:<android.widget.TabHost.LabelIndicatorStrategy:android.widget.TabHost.IndicatorStrategy>
<android.view.ThreadedRenderer: void pushLayerUpdate(android.view.HardwareLayer)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.VideoView.1: void <init>(android.widget.VideoView)>:<>:<android.widget.VideoView.1:android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String)>:<public>:<android.appwidget.AppWidgetManager>
<android.opengl.GLES10: void glLogicOp(int)>:<public static native>:<android.opengl.GLES10>
<android.netdetect.INetDetectService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.netdetect.INetDetectService.Stub.Proxy:android.netdetect.INetDetectService>
<android.media.MediaRouter: void selectRoute(int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter>
<android.media.browse.MediaBrowser: android.util.ArrayMap access.1000(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.media.MediaExtractor: java.util.Map getPsshInfo()>:<public>:<android.media.MediaExtractor>
<android.widget.ProgressBar: void startAnimation()>:<>:<android.widget.ProgressBar:android.view.View>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.media.tv.TvInputHardwareInfo,java.lang.String,android.net.Uri)>:<public static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.AudioService: void access.9400(android.media.AudioService,android.content.Context)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES10: void glColorPointerBounds(int,int,int,java.nio.Buffer,int)>:<private static native>:<android.opengl.GLES10>
<android.media.effect.effects.FlipEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.FlipEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.SurfaceView.MyWindow: void dispatchAppVisibility(boolean)>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onStop()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.media.IMediaScannerService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaScannerService.Stub.Proxy:android.media.IMediaScannerService>
<android.security.KeyChainException: void <init>()>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.MediaFocusControl.DisplayInfoForServer: int access.800(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.widget.RadialTimePickerView: void startMinutesToHoursAnimation()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.service.voice.AlwaysOnHotwordDetector: void dump(java.lang.String,java.io.PrintWriter)>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.view.inputmethod.InputMethodManager: boolean checkFocusNoStartInput(boolean,boolean)>:<private>:<android.view.inputmethod.InputMethodManager>
<android.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>:<public static native>:<android.opengl.ETC1>
<android.appwidget.AppWidgetHost: void clearViews()>:<protected>:<android.appwidget.AppWidgetHost>
<android.widget.AdapterView: void checkFocus()>:<>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void setOffsetNotificationsEnabled(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.media.MediaRouter.Callback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.view.MotionEvent: void recycle()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: void onInputUpdated(java.lang.String)>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.media.RemoteControlClient.OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>:<public abstract>:<android.media.RemoteControlClient.OnMetadataUpdateListener>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.EditTextPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.CaptioningManager: void notifyUserStyleChanged()>:<private>:<android.view.accessibility.CaptioningManager>
<android.service.notification.NotificationListenerService: void setOnNotificationPostedTrim(int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.FastScroller.4: java.lang.Integer get(android.view.View)>:<public>:<android.widget.FastScroller.4:android.util.IntProperty>
<android.media.audiofx.AudioEffect: int native_setEnabled(boolean)>:<private final native>:<android.media.audiofx.AudioEffect>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaRouterClientState.RouteInfo: void <init>(android.media.MediaRouterClientState.RouteInfo)>:<public>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.media.Rating: void <init>(int,float,android.media.Rating.1)>:<>:<android.media.Rating:android.os.Parcelable>
<android.opengl.GLSurfaceView.DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.animation.ScaleAnimation: float resolveScale(float,int,int,int,int)>:<>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.media.browse.MediaBrowser: java.lang.String access.702(android.media.browse.MediaBrowser,java.lang.String)>:<static>:<android.media.browse.MediaBrowser>
<android.media.MediaPlayer: void _start()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.service.notification.NotificationListenerService.RankingMap.1: android.service.notification.NotificationListenerService.RankingMap[] newArray(int)>:<public>:<android.service.notification.NotificationListenerService.RankingMap.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputSession.Stub: android.media.tv.ITvInputSession asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputSession.Stub:android.os.Binder,android.media.tv.ITvInputSession>
<android.media.tv.ITvInputClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.animation.PropertyValuesHolder.PointFToFloatArray: float[] convert(android.graphics.PointF)>:<public>:<android.animation.PropertyValuesHolder.PointFToFloatArray:android.animation.TypeConverter>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.Virtualizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.widget.RatingBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.PlayerRecord.RccPlaybackState: java.lang.String posToString()>:<private>:<android.media.PlayerRecord.RccPlaybackState>
<android.view.View: int getNextFocusUpId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setZ(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.DayPickerView: void <clinit>()>:<static>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.widget.DatePickerCalendarDelegate: boolean getSpinnersShown()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.gesture.Gesture: void setID(long)>:<>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.MediaFile: void <clinit>()>:<static>:<android.media.MediaFile>
<android.filterpacks.videosrc.CameraSource: void createFormats()>:<private>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.media.SubtitleData: int getTrackIndex()>:<public>:<android.media.SubtitleData>
<android.database.sqlite.SqliteWrapper: void <init>()>:<private>:<android.database.sqlite.SqliteWrapper>
<android.view.ViewPropertyAnimator: long getDuration()>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.Spinner.DropdownPopup: java.lang.CharSequence getHintText()>:<public>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.service.wallpaper.IWallpaperEngine.Stub: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub:android.os.Binder,android.service.wallpaper.IWallpaperEngine>
<android.service.notification.ConditionProviderService: void notifyCondition(android.service.notification.Condition)>:<public final>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.InputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>:<public final>:<android.view.InputEventReceiver>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextClock: void onDetachedFromWindow()>:<protected>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.GridView: android.view.View makeAndAddView(int,int,boolean,int,boolean,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: long getItemId(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.IWindowSession.Stub.Proxy: void remove(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterId,java.lang.String,int)>:<public>:<android.print.PrinterInfo.Builder>
<android.service.media.IMediaBrowserServiceCallbacks: void onLoadChildren(java.lang.String,android.content.pm.ParceledListSlice)>:<public abstract>:<android.service.media.IMediaBrowserServiceCallbacks:android.os.IInterface>
<android.printservice.IPrintServiceClient: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.view.InputEventReceiver: void dispose(boolean)>:<private>:<android.view.InputEventReceiver>
<android.view.ViewRootImpl.NativePreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.NativePreImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.widget.ExpandableListView: void setSelectedGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glEnable(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.wallpaper.WallpaperService.Engine.WallpaperInputEventReceiver: void <init>(android.service.wallpaper.WallpaperService.Engine,android.view.InputChannel,android.os.Looper)>:<public>:<android.service.wallpaper.WallpaperService.Engine.WallpaperInputEventReceiver:android.view.InputEventReceiver>
<android.widget.Toast: int getDuration()>:<public>:<android.widget.Toast>
<android.view.ViewStub: void <init>(android.content.Context,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.media.SoundPool.SoundPoolImpl: void stop(int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>:<public>:<android.media.MediaMetadataEditor>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.gesture.GestureUtils: void closeStream(java.io.Closeable)>:<static>:<android.gesture.GestureUtils>
<android.widget.TextView: void invalidateCursor(int,int,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.InstrumentationTestCase.2: void run()>:<public>:<android.test.InstrumentationTestCase.2:java.lang.Runnable>
<android.view.IWindowFocusObserver.Stub.Proxy: void focusGained(android.os.IBinder)>:<public>:<android.view.IWindowFocusObserver.Stub.Proxy:android.view.IWindowFocusObserver>
<android.animation.Animator: void resume()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.net.Uri,int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.media.audiofx.Virtualizer.BaseParameterListener: void <init>(android.media.audiofx.Virtualizer)>:<private>:<android.media.audiofx.Virtualizer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.DisplayEventReceiver: void scheduleVsync()>:<public>:<android.view.DisplayEventReceiver>
<android.view.FrameStats: long getStartTimeNano()>:<public final>:<android.view.FrameStats>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.view.IWindowManager.Stub.Proxy: int getInitialDisplayDensity(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.IAudioRoutesObserver.Stub: void <init>()>:<public>:<android.media.IAudioRoutesObserver.Stub:android.os.Binder,android.media.IAudioRoutesObserver>
<android.media.AudioService: void onSetStreamVolume(int,int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.opengl.GLES20: boolean glIsProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.GLES20Canvas: void nDrawRects(long,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaFormat: int getInteger(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.widget.SearchView: void dismissSuggestions()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>:<>:<android.view.FocusFinder>
<android.media.tv.TvView: int access.1902(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.session.MediaSessionManager: void setRemoteVolumeController(android.media.IRemoteVolumeController)>:<public>:<android.media.session.MediaSessionManager>
<android.media.browse.MediaBrowser.MediaServiceConnection: void <init>(android.media.browse.MediaBrowser,android.media.browse.MediaBrowser.1)>:<>:<android.media.browse.MediaBrowser.MediaServiceConnection:android.content.ServiceConnection>
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: void onDestroy()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.view.Choreographer: android.view.Choreographer.CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object)>:<private>:<android.view.Choreographer>
<android.opengl.GLLogWrapper: void glLogicOp(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TextView.Marquee: float getScroll()>:<>:<android.widget.TextView.Marquee>
<android.media.tv.TvInputService.Session: void notifyTrackSelected(int,java.lang.String)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.AbsListView.RecycleBin: void markChildrenDirty()>:<public>:<android.widget.AbsListView.RecycleBin>
<android.media.MediaRouter.UserRouteInfo: void configureSessionVolume()>:<private>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.media.MediaScanner: void native_setup()>:<private final native>:<android.media.MediaScanner>
<android.media.IAudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.filterpacks.imageproc.ColorTemperatureFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.OrientationListener.OrientationEventListenerInternal: void <init>(android.view.OrientationListener,android.content.Context,int)>:<>:<android.view.OrientationListener.OrientationEventListenerInternal:android.view.OrientationEventListener>
<android.filterpacks.imageproc.ImageSlicer: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ImageSlicer:android.filterfw.core.Filter>
<android.media.AudioTrack: void native_flush()>:<private final native>:<android.media.AudioTrack>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.SurfaceHolder: boolean isCreating()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.MotionEvent: float getHistoricalSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioTrack: int getState()>:<public>:<android.media.AudioTrack>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.widget.ScrollView: void doScrollY(int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.ISession: void setRatingType(int)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.database.sqlite.SQLiteConnection.Operation: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.Operation>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.dreams.IDreamManager.Stub.Proxy: android.content.ComponentName getDefaultDreamComponent()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.service.wallpaper.WallpaperService.Engine: void detach()>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.tv.TvView: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.ListView: void setSelectionInt(int)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaFocusControl: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SuggestionsAdapter.ChildViewCache: void <init>(android.view.View)>:<public>:<android.widget.SuggestionsAdapter.ChildViewCache>
<android.widget.AbsSpinner.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.AbsSpinner.SavedState.1:android.os.Parcelable.Creator>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoFrameRate(float)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.view.textservice.TextInfo: int getStringLengthOrZero(java.lang.String)>:<private static>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.OnParameterChangeListener access.100(android.media.audiofx.BassBoost)>:<static>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.netdetect.INetDetectService.Stub: android.netdetect.INetDetectService asInterface(android.os.IBinder)>:<public static>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.service.notification.NotificationListenerService: android.content.Context access.200(android.service.notification.NotificationListenerService)>:<static>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.IWindowSession.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindowSession.Stub:android.os.Binder,android.view.IWindowSession>
<android.widget.ViewAnimator: int getDisplayedChild()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.dreams.DreamService: void access.800(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setInternalLegacyStreamType(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorAdapter.ViewBinder>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.service.notification.NotificationListenerService.RankingMap: void <init>(android.service.notification.NotificationRankingUpdate)>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.media.IAudioService: int getCurrentAudioFocus()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.opengl.GLES10: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.KeyEvent.1: android.view.KeyEvent[] newArray(int)>:<public>:<android.view.KeyEvent.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.preference.SwitchPreference: void setSwitchTextOn(int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.MediaMetadataEditor: void clear()>:<public>:<android.media.MediaMetadataEditor>
<android.view.MotionEvent: int nativeGetButtonState(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.IWindowFocusObserver.Stub: void <init>()>:<public>:<android.view.IWindowFocusObserver.Stub:android.os.Binder,android.view.IWindowFocusObserver>
<android.gesture.GestureStroke: void clearPath()>:<public>:<android.gesture.GestureStroke>
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>:<public>:<android.media.AudioManager>
<android.widget.StackView.StackSlider: float getDurationForOffscreenPosition(float)>:<>:<android.widget.StackView.StackSlider>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>:<private>:<android.view.AccessibilityInteractionController>
<android.print.PageRange: void <init>(android.os.Parcel,android.print.PageRange.1)>:<>:<android.print.PageRange:android.os.Parcelable>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>:<public abstract>:<android.widget.WrapperListAdapter:android.widget.ListAdapter>
<android.animation.FloatKeyframeSet: float getFloatValue(float)>:<public>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.print.IPrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.print.PrinterCapabilitiesInfo: void writeDefaults(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.print.PrinterInfo.1: void <init>()>:<>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.EditText: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.view.ViewRootImpl.RunQueue.HandlerAction: boolean equals(java.lang.Object)>:<public>:<android.view.ViewRootImpl.RunQueue.HandlerAction>
<android.media.SubtitleController: android.media.SubtitleTrack[] getTracks()>:<public>:<android.media.SubtitleController>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector>
<android.animation.IntEvaluator: void <init>()>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>:<private>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.tv.TvInputInfo.TvInputSettings: void ensureValidField(java.lang.String)>:<private static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.gesture.GestureStroke: void makePath()>:<private>:<android.gesture.GestureStroke>
<android.view.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.AudioSystem: boolean isStreamActive(int,int)>:<public static native>:<android.media.AudioSystem>
<android.view.RenderNode: boolean nSetClipBounds(long,int,int,int,int)>:<private static native>:<android.view.RenderNode>
<android.view.View: void initializeFadingEdgeInternal(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>:<static>:<android.view.FocusFinder>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.view.inputmethod.CursorAnchorInfo.Builder,android.view.inputmethod.CursorAnchorInfo.1)>:<>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder access.400(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.animation.PropertyValuesHolder: long nGetFloatMethod(java.lang.Class,java.lang.String)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public>:<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver:android.print.IPrinterDiscoveryObserver.Stub,android.os.Binder>
<android.widget.TextView: void nullLayoutsOuter()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodec.BufferMap: void remove(int)>:<public>:<android.media.MediaCodec.BufferMap>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent)>:<public>:<android.preference.GenericInflater>
<android.view.DisplayEventReceiver: void dispose()>:<public>:<android.view.DisplayEventReceiver>
<android.media.SubtitleController: void show()>:<public>:<android.media.SubtitleController>
<android.database.sqlite.SQLiteConnection.Operation: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnection.Operation>
<android.media.MediaDrm: void releaseSecureStops(byte[])>:<public native>:<android.media.MediaDrm>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setRouteFlags(int)>:<public>:<android.media.audiopolicy.AudioMix.Builder>
<android.view.WindowManagerPolicy: void keepScreenOnStoppedLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.WebVttParser: void access.000(android.media.WebVttParser,java.lang.String,java.lang.String)>:<static>:<android.media.WebVttParser>
<android.view.IWindowSession.Stub.Proxy: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.view.inputmethod.ComposingText: void <init>()>:<>:<android.view.inputmethod.ComposingText:android.text.NoCopySpan>
<android.view.View: void findNamedViews(java.util.Map)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.MediaController: void initFloatingWindow()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureUtils: float computeTotalLength(float[])>:<static>:<android.gesture.GestureUtils>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.tv.ITvInputSession.Stub.Proxy: void relayoutOverlayView(android.graphics.Rect)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.view.GLES20Canvas: int nSaveLayer(long,float,float,float,float,long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ProgressBar: java.util.ArrayList access.100(android.widget.ProgressBar)>:<static>:<android.widget.ProgressBar:android.view.View>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long)>:<public static final>:<android.media.tv.TvContract>
<android.widget.MediaController: void <init>(android.content.Context)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: void <init>(android.content.Context)>:<public>:<android.media.MediaScanner>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Menu: void close()>:<public abstract>:<android.view.Menu>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getInputType()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>:<public volatile>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.media.AudioService: android.media.AudioService.ForceControlStreamClient access.802(android.media.AudioService,android.media.AudioService.ForceControlStreamClient)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.GLES20Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.view.IWindow.Stub.Proxy: void doneAnimating()>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.media.MediaDrm: android.media.MediaDrm.Certificate provideCertificateResponse(byte[])>:<public>:<android.media.MediaDrm>
<android.widget.StackView.StackSlider: float getYProgress()>:<public>:<android.widget.StackView.StackSlider>
<android.media.audiofx.AudioEffect: void checkState(java.lang.String)>:<public>:<android.media.audiofx.AudioEffect>
<android.service.wallpaper.WallpaperService.Engine: void dispatchPointer(android.view.MotionEvent)>:<private>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.MediaFocusControl: void enableRemoteControlDisplayForClient_syncRcStack(android.media.IRemoteControlDisplay,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.View.DragShadowBuilder: void <init>(android.view.View)>:<public>:<android.view.View.DragShadowBuilder>
<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.DisplayEventReceiver: void onVsync(long,int,int)>:<public>:<android.view.DisplayEventReceiver>
<android.widget.AdapterViewAnimator: void cancelHandleClick()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.SoundPool: boolean unload(int)>:<public final>:<android.media.SoundPool>
<android.service.dreams.DreamService.DreamServiceWrapper.1: void run()>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper.1:java.lang.Runnable>
<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.MediaRouter.Callback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.view.accessibility.AccessibilityRecord: boolean isPassword()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.MediaRouter.Static.1: void <init>(android.media.MediaRouter.Static)>:<>:<android.media.MediaRouter.Static.1:android.media.IAudioRoutesObserver.Stub,android.os.Binder>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnErrorListener>
<android.media.MediaRouter.RouteGroup: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.MediaScanner: void deleteFile(java.io.File)>:<private>:<android.media.MediaScanner>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.session.PlaybackState.CustomAction: int getIcon()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.View: void setRotationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.VoiceInteractionSession.1: com.android.internal.app.IVoiceInteractorRequest startCommand(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.String,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.view.GraphicBuffer: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.ViewRootImpl: void access.300(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame createBitmapFrame(android.filterfw.core.FilterContext)>:<private>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.preference.Preference: void setOrder(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.widget.GridView: android.view.View fillUp(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.FocusRequester: java.lang.String focusGainToString()>:<private>:<android.media.FocusRequester>
<android.accounts.IAccountManager.Stub.Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.opengl.GLES31Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES31Ext>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLLogWrapper: void glLightxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.Instance: void <clinit>()>:<static>:<android.gesture.Instance>
<android.media.AudioService: void sendDeviceConnectionIntent(int,int,java.lang.String)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TabHost.ViewIdContentStrategy: void <init>(android.widget.TabHost,int,android.widget.TabHost.1)>:<>:<android.widget.TabHost.ViewIdContentStrategy:android.widget.TabHost.ContentStrategy>
<android.print.PrintManager.1: void <init>(android.print.PrintManager,android.os.Looper,android.os.Handler.Callback,boolean)>:<>:<android.print.PrintManager.1:android.os.Handler>
<android.widget.RemoteViews.BitmapCache: int getBitmapId(android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.view.textservice.SpellCheckerSubtype: boolean containsExtraValueKey(java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.preference.DialogPreference: void <init>(android.content.Context)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.AudioHandle: boolean equals(java.lang.Object)>:<public>:<android.media.AudioHandle>
<android.widget.RemoteViewsAdapter: void processException(java.lang.String,java.lang.Exception)>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.ThumbnailUtils: android.graphics.Bitmap createImageThumbnail(java.lang.String,int)>:<public static>:<android.media.ThumbnailUtils>
<android.media.audiofx.Equalizer: void <init>(int,int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.animation.ValueAnimator.AnimationHandler: void doAnimationFrame(long)>:<private>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView: void fireOnGesturePerformed()>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService.VolumeController: void setVisible(boolean)>:<public>:<android.media.AudioService.VolumeController>
<android.view.RenderNode: float getElevation()>:<public>:<android.view.RenderNode>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>:<public transient>:<android.widget.ActivityChooserModel.PersistHistoryAsyncTask:android.os.AsyncTask>
<android.widget.VideoView: int access.1002(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.TextureView: android.graphics.Bitmap getBitmap()>:<public>:<android.view.TextureView:android.view.View>
<android.widget.DayPickerView: void <init>(android.content.Context,android.widget.DatePickerController)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.AccessibilityInteractionController: void perfromAccessibilityActionUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession: void dispatchPlay()>:<private>:<android.media.session.MediaSession>
<android.widget.ActivityChooserModel.HistoricalRecord: int hashCode()>:<public>:<android.widget.ActivityChooserModel.HistoricalRecord>
<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionFailed()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationUpdate(android.animation.ValueAnimator)>:<public>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.View: boolean rootViewRequestFocus()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.StackView: void updateChildTransforms()>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.EGL14: android.opengl.EGLSurface _eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<private static native>:<android.opengl.EGL14>
<android.media.AudioManager: void setStreamSolo(int,boolean)>:<public>:<android.media.AudioManager>
<android.service.media.MediaBrowserService.ServiceBinder: void <init>(android.service.media.MediaBrowserService,android.service.media.MediaBrowserService.1)>:<>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.widget.TabWidget: android.widget.TabWidget.OnTabSelectionChanged access.100(android.widget.TabWidget)>:<static>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.accounts.IAccountManager: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.animation.LayoutTransition: java.util.HashMap access.100(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.view.ViewGroup: void onDetachedFromWindow()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.VolumePreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.view.WindowManager.LayoutParams.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.WindowManager.LayoutParams.1:android.os.Parcelable.Creator>
<android.media.browse.MediaBrowser.MediaServiceConnection: void <init>(android.media.browse.MediaBrowser)>:<private>:<android.media.browse.MediaBrowser.MediaServiceConnection:android.content.ServiceConnection>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.HoverTarget: void <clinit>()>:<static>:<android.view.ViewGroup.HoverTarget>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: long getFrameDelay()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.tv.TvInputManager.SessionCallback: void onTracksChanged(android.media.tv.TvInputManager.Session,java.util.List)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.view.IApplicationToken: boolean keyDispatchingTimedOut(java.lang.String)>:<public abstract>:<android.view.IApplicationToken:android.os.IInterface>
<android.widget.GridLayout: int computeLayoutParamsHashCode()>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.session.ISession.Stub.Proxy: android.media.session.ISessionController getController()>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.print.PrintDocumentInfo: void <clinit>()>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.Window: android.transition.Scene getContentScene()>:<public>:<android.view.Window>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.Window: void setFlags(int,int)>:<public>:<android.view.Window>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.ISessionManager: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.view.ViewPropertyAnimator.3: void <init>(android.view.ViewPropertyAnimator,int)>:<>:<android.view.ViewPropertyAnimator.3:java.lang.Runnable>
<android.media.AudioRoutesInfo: void <init>()>:<public>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.media.tv.TvInputService.Session.4: void <init>(android.media.tv.TvInputService.Session,java.util.List)>:<>:<android.media.tv.TvInputService.Session.4:java.lang.Runnable>
<android.media.AudioService: int getStreamVolume(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioManager: void requestAudioFocusForCall(int,int)>:<public>:<android.media.AudioManager>
<android.view.WindowManagerPolicy: void systemReady()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.service.notification.ZenModeConfig: void <init>()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.media.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.FocusFinder.SequentialFocusComparator: void <init>()>:<private>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.database.BulkCursorProxy: android.os.IBinder asBinder()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.media.tv.ITvInputSessionCallback: void onContentAllowed()>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.view.accessibility.AccessibilityWindowInfo: void initFromParcel(android.os.Parcel)>:<private>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.KeyEvent: boolean isLongPress()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.service.voice.IVoiceInteractionService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.voice.IVoiceInteractionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionService>
<android.widget.FastScroller: android.widget.TextView createPreviewTextView(android.content.Context)>:<private>:<android.widget.FastScroller>
<android.filterpacks.numeric.SinWaveFilter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.numeric.SinWaveFilter:android.filterfw.core.Filter>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.session.ISessionController.Stub.Proxy: void skipToQueueItem(long)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.ImageButton: void <init>(android.content.Context)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.printservice.PrintService.1: void startPrinterStateTracking(android.print.PrinterId)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.AudioService.AudioSystemThread: void run()>:<public>:<android.media.AudioService.AudioSystemThread:java.lang.Thread>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.WebVttRenderingWidget: void onDetachedFromWindow()>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.Switch: void <init>(android.content.Context)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View: int getFadeHeight(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.CameraProfile: void native_init()>:<private static final native>:<android.media.CameraProfile>
<android.view.ViewGroup.ChildListForAccessibility: void sort(java.util.ArrayList)>:<private>:<android.view.ViewGroup.ChildListForAccessibility>
<android.filterpacks.base.ObjectSource: void setupPorts()>:<public>:<android.filterpacks.base.ObjectSource:android.filterfw.core.Filter>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void <init>(android.widget.TableLayout,android.widget.TableLayout.1)>:<>:<android.widget.TableLayout.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaPlayer: int native_setRetransmitEndpoint(java.lang.String,int)>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: android.os.IBinder getApplicationWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ActivityChooserView.Callbacks: void <init>(android.widget.ActivityChooserView)>:<private>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.view.InputEventReceiver.Factory: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>:<public abstract>:<android.view.InputEventReceiver.Factory>
<android.security.AndroidKeyPairGenerator: void <init>()>:<public>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.media.MediaMetadata: int describeContents()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.MotionEvent: void setEdgeFlags(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaRouter.RouteGroup: void memberStatusChanged(android.media.MediaRouter.RouteInfo,java.lang.CharSequence)>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.security.AndroidKeyStore: java.security.Key engineGetKey(java.lang.String,char[])>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.filterpacks.videosrc.CameraSource: void setupPorts()>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.WindowContentFrameStats: void <init>(android.os.Parcel,android.view.WindowContentFrameStats.1)>:<>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe clone()>:<public volatile>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.media.JetPlayer: boolean native_setMuteFlag(int,boolean,boolean)>:<private final native>:<android.media.JetPlayer>
<android.widget.TextView: int computeHorizontalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.Matrix: void <init>()>:<public>:<android.opengl.Matrix>
<android.animation.Keyframe.FloatKeyframe: void <init>(float)>:<>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.IMediaScannerListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaScannerListener.Stub:android.os.Binder,android.media.IMediaScannerListener>
<android.filterpacks.ui.SurfaceRenderFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.service.wallpaper.IWallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine)>:<public abstract>:<android.service.wallpaper.IWallpaperConnection:android.os.IInterface>
<android.widget.StackView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.LayoutTransition: void setDuration(int,long)>:<public>:<android.animation.LayoutTransition>
<android.view.ViewDebug: long getViewInstanceCount()>:<public static>:<android.view.ViewDebug>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.Cursor: boolean moveToFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.accounts.AccountManager.AmsTask.1: java.lang.Object call()>:<public volatile>:<android.accounts.AccountManager.AmsTask.1:java.util.concurrent.Callable>
<android.media.FocusRequester: void handleFocusGain(int)>:<>:<android.media.FocusRequester>
<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.IVolumeController.Stub.Proxy: void masterMuteChanged(int)>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.view.InputDevice: void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String)>:<private>:<android.view.InputDevice:android.os.Parcelable>
<android.media.TextTrackRegion: void <init>()>:<>:<android.media.TextTrackRegion>
<android.media.MediaCodecInfo.VideoCapabilities: void applyAlignment(int,int)>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getCameraLensCoverState()>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.widget.VideoView: int getVideoWidth()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.print.PrintAttributes.MediaSize: boolean isPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.ActionMode: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<android.service.dreams.DreamService: void onDreamingStarted()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.tv.TvInputService: boolean access.1200(android.media.tv.TvInputService,java.lang.String)>:<static>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.WindowManagerPolicy: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.RelativeLayout.DependencyGraph.Node: void <clinit>()>:<static>:<android.widget.RelativeLayout.DependencyGraph.Node>
<android.opengl.GLES10: void glLineWidthx(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.TextView: void unregisterForPreDraw()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiopolicy.AudioPolicyConfig.1: void <init>()>:<>:<android.media.audiopolicy.AudioPolicyConfig.1:android.os.Parcelable.Creator>
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.Editor.Blink: void <init>(android.widget.Editor)>:<private>:<android.widget.Editor.Blink:android.os.Handler,java.lang.Runnable>
<android.media.tv.TvStreamConfig.1: android.media.tv.TvStreamConfig createFromParcel(android.os.Parcel)>:<public>:<android.media.tv.TvStreamConfig.1:android.os.Parcelable.Creator>
<android.media.IRemoteDisplayProvider: void setVolume(java.lang.String,int)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.media.SoundPool.SoundPoolDelegate: int load(java.io.FileDescriptor,long,long,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.service.notification.INotificationListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.preference.PreferenceActivity: android.widget.ListAdapter access.200(android.preference.PreferenceActivity)>:<static>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.session.MediaSession.Callback: void onFastForward()>:<public>:<android.media.session.MediaSession.Callback>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata build()>:<public>:<android.media.MediaMetadata.Builder>
<android.view.ViewRootImpl.ConsumeBatchedInputRunnable: void run()>:<public>:<android.view.ViewRootImpl.ConsumeBatchedInputRunnable:java.lang.Runnable>
<android.accounts.AbstractAccountAuthenticator.2: void run()>:<public>:<android.accounts.AbstractAccountAuthenticator.2:java.lang.Runnable>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.accounts.AbstractAccountAuthenticator.Transport: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.view.View: void dispatchAttachedToWindow(android.view.View.AttachInfo,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.GLES20Canvas: void nTranslate(long,float,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(int,int,int,int)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.media.SubtitleTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>:<public abstract>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.FastScroller: void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect)>:<private>:<android.widget.FastScroller>
<android.preference.SeekBarPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.widget.Editor: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>:<private>:<android.widget.Editor>
<android.widget.DateTimeView: void onDetachedFromWindow()>:<protected>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.MagnificationSpec.1: android.view.MagnificationSpec createFromParcel(android.os.Parcel)>:<public>:<android.view.MagnificationSpec.1:android.os.Parcelable.Creator>
<android.filterpacks.imageproc.ImageEncoder: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ImageEncoder:android.filterfw.core.Filter>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>:<public transient>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.IAudioService: android.media.IRingtonePlayer getRingtonePlayer()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.filterpacks.imageproc.TintFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.accounts.NetworkErrorException: void <init>()>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.session.MediaController.PlaybackInfo: int getVolumeControl()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.view.View.9: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.9:android.util.FloatProperty>
<android.database.sqlite.SQLiteDatabase: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.animation.Animation: void setStartOffset(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.RadialTimePickerView.OnValueSelectedListener: void onValueSelected(int,int,boolean)>:<public abstract>:<android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.TextClock: void <clinit>()>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.animation.PropertyValuesHolder: java.lang.String toString()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.view.SurfaceView.4: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.media.MediaRouter.SimpleCallback: void <init>()>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.media.CCParser.CCData: java.lang.String getBasicChars()>:<private>:<android.media.CCParser.CCData>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,boolean[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void setLocation(float,float)>:<public>:<android.media.MediaRecorder>
<android.view.GLES20Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaRouter.SimpleCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.ddm.DdmHandleAppName: void register()>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.DisplayEventReceiver: long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue)>:<private static native>:<android.view.DisplayEventReceiver>
<android.view.ViewRootImpl.InputStage: void deliver(android.view.ViewRootImpl.QueuedInputEvent)>:<public final>:<android.view.ViewRootImpl.InputStage>
<android.widget.SearchView: void onInActionMode()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewRootImpl: android.media.AudioManager getAudioManager()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: int getWidgetLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.printservice.IPrintService.Stub: android.printservice.IPrintService asInterface(android.os.IBinder)>:<public static>:<android.printservice.IPrintService.Stub:android.os.Binder,android.printservice.IPrintService>
<android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutCancelled()>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.AudioService: int access.3400(android.media.AudioService,int,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.session.MediaSession.Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaSession.Callback>
<android.widget.RelativeLayout.DependencyGraph.Node: void <init>()>:<>:<android.widget.RelativeLayout.DependencyGraph.Node>
<android.view.InputFilter: void sendInputEvent(android.view.InputEvent,int)>:<public>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.print.pdf.PrintedPdfDocument: android.graphics.Rect getPageContentRect()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.media.MediaScanner: void prescan(java.lang.String,boolean)>:<private>:<android.media.MediaScanner>
<android.widget.CursorAdapter: void onContentChanged()>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.service.voice.VoiceInteractionSessionService: android.service.voice.VoiceInteractionSession onNewSession(android.os.Bundle)>:<public abstract>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaPlayer.TrackInfo: int getTrackType()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction: java.lang.String getAction()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.widget.RemoteViews.MemoryUsageCounter: void addBitmapMemory(android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews.MemoryUsageCounter>
<android.animation.LayoutTransition.1: boolean onPreDraw()>:<public>:<android.animation.LayoutTransition.1:android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.ISessionController.Stub.Proxy: long getFlags()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.SpellChecker: void onSelectionChanged()>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void checkError()>:<private>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.textservice.TextServicesManager: void <init>()>:<private>:<android.view.textservice.TextServicesManager>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean onAllowLockCanvas()>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)>:<public>:<android.media.effect.Effect>
<android.view.IInputFilter.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.view.Surface: long nativeReadFromParcel(long,android.os.Parcel)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.media.AudioService.VolumeStreamState: boolean isMuted_syncVSS()>:<private>:<android.media.AudioService.VolumeStreamState>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.effect.EffectFactory: android.media.effect.Effect createEffect(java.lang.String)>:<public>:<android.media.effect.EffectFactory>
<android.media.MediaCodecInfo.AudioCapabilities: void applyLimits(int,android.util.Range)>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.CCParser: boolean handleMidRowCode(android.media.CCParser.CCData)>:<private>:<android.media.CCParser>
<android.widget.CalendarView: void <clinit>()>:<static>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glFogx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: boolean hasShadow()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: int size()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<android.media.session.MediaSession.Callback: void onSkipToNext()>:<public>:<android.media.session.MediaSession.Callback>
<android.view.View: void resetResolvedDrawables()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputClient: void onLayoutSurface(int,int,int,int,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.ddm.DdmHandleAppName: void <clinit>()>:<static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: boolean glIsTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.CCParser.StyleCode: android.media.CCParser.StyleCode fromByte(byte)>:<static>:<android.media.CCParser.StyleCode>
<android.media.TtmlUtils: void <clinit>()>:<static>:<android.media.TtmlUtils>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>:<public>:<android.media.AudioTrack>
<android.widget.TextView: float getShadowDx()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: android.text.InputFilter[] getFilters()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: java.util.HashMap access.1300(android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache)>:<static>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.Choreographer.CallbackRecord: void <init>(android.view.Choreographer.1)>:<>:<android.view.Choreographer.CallbackRecord>
<android.media.effect.effects.GrainEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.GrainEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.gesture.Instance: void normalize()>:<private>:<android.gesture.Instance>
<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)>:<public>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.AudioService.SettingsObserver: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.SettingsObserver:android.database.ContentObserver>
<android.animation.PropertyValuesHolder: void access.1200(java.lang.Object,long,int[])>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.service.notification.INotificationListener.Stub: void <init>()>:<public>:<android.service.notification.INotificationListener.Stub:android.os.Binder,android.service.notification.INotificationListener>
<android.media.AudioRecord: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int)>:<public>:<android.media.AudioRecord>
<android.R.integer: void <init>()>:<public>:<android.R.integer>
<android.preference.ListPreference: int access.002(android.preference.ListPreference,int)>:<static>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.GridView: void pinToBottom(int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: float getTextScaleX()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.WindowManagerInternal: void setMagnificationSpec(android.view.MagnificationSpec)>:<public abstract>:<android.view.WindowManagerInternal>
<android.widget.ListPopupWindow.PopupTouchInterceptor: void <init>(android.widget.ListPopupWindow)>:<private>:<android.widget.ListPopupWindow.PopupTouchInterceptor:android.view.View.OnTouchListener>
<android.widget.FastScroller.2: void <init>(android.widget.FastScroller)>:<>:<android.widget.FastScroller.2:android.animation.AnimatorListenerAdapter>
<android.view.GLES20Canvas: void nDrawBitmap(long,long,byte[],float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.RemoteDisplayState: boolean isValid()>:<public>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.animation.PathKeyframes.FloatKeyframesBase: void <init>(android.animation.PathKeyframes.1)>:<>:<android.animation.PathKeyframes.FloatKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.FloatKeyframes>
<android.media.MediaRecorder: int getAudioSourceMax()>:<public static final>:<android.media.MediaRecorder>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.IVolumeController.Stub.Proxy: void displaySafeVolumeWarning(int)>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.view.textservice.SpellCheckerInfo: void <clinit>()>:<static>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.view.Window: void setTitleColor(int)>:<public abstract>:<android.view.Window>
<android.view.IWindowManager.Stub.Proxy: void setAppVisibility(android.os.IBinder,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.SoundPool.SoundPoolImpl: void autoResume()>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.widget.TextView: int getMinEms()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()>:<private>:<android.media.RingtoneManager>
<android.widget.ZoomButtonsController: void setVisible(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.textservice.SpellCheckerSubtype.1: void <init>()>:<>:<android.view.textservice.SpellCheckerSubtype.1:android.os.Parcelable.Creator>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ListView: android.view.View addViewBelow(android.view.View,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.GridView: boolean determineColumns(int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.SubtitleTrack: boolean addCue(android.media.SubtitleTrack.Cue)>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.TextureView: void destroySurface()>:<private>:<android.view.TextureView:android.view.View>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ThreadedRenderer: void nSetOpaque(long,boolean)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.ThreadedRenderer.AtlasInitializer: void <init>()>:<private>:<android.view.ThreadedRenderer.AtlasInitializer>
<android.media.AudioService: void onSystemReady()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: boolean access.900(android.view.ViewRootImpl,android.view.KeyEvent)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ActionMenuView: void onMeasureExactFormat(int,int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.PlayerRecord: android.content.ComponentName getMediaButtonReceiver()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.filterpacks.imageproc.VignetteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.service.dreams.DreamService: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.GLES20RecordingCanvas: void <init>()>:<private>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.InputEventConsistencyVerifier: void finishEvent()>:<private>:<android.view.InputEventConsistencyVerifier>
<android.media.ToneGenerator: boolean startTone(int,int)>:<public native>:<android.media.ToneGenerator>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String)>:<public static final>:<android.media.tv.TvContract>
<android.opengl.EGLLogWrapper: java.lang.String toString(int,java.lang.Object[],int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.View: void resolvePadding()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Token: int hashCode()>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.animation.LayoutTransition: void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View)>:<private>:<android.animation.LayoutTransition>
<android.media.effect.EffectContext: void saveGLState()>:<final>:<android.media.effect.EffectContext>
<android.database.MatrixCursor.RowBuilder: void <init>(android.database.MatrixCursor,int)>:<>:<android.database.MatrixCursor.RowBuilder>
<android.view.ViewGroup.LayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.media.MediaRecorder: int getMaxAmplitude()>:<public native>:<android.media.MediaRecorder>
<android.media.session.ISessionController.Stub.Proxy: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain(android.view.accessibility.AccessibilityRecord)>:<public static>:<android.view.accessibility.AccessibilityRecord>
<android.view.WindowManagerPolicy: void adjustWindowParamsLw(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.widget.TimePickerSpinnerDelegate: void tryStartingKbMode(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.EGLContext: void <init>(long)>:<private>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.media.session.PlaybackState: float access.600(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.database.Cursor: void deactivate()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.animation.AnimationSet: java.lang.Object clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.ViewRootImpl: void dispatchMoved(int,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.MotionEvent: int getPointerId(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.RenderNode: boolean isPivotExplicitlySet()>:<public>:<android.view.RenderNode>
<android.widget.Toolbar.SavedState.1: void <init>()>:<>:<android.widget.Toolbar.SavedState.1:android.os.Parcelable.Creator>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.textservice.TextInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.textservice.TextInfo.1:android.os.Parcelable.Creator>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri,int)>:<public>:<android.database.ContentObserver>
<android.view.ViewGroup: void dispatchCollectViewAttributes(android.view.View.AttachInfo,int)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioManager: void setParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.media.session.ISessionController.Stub.Proxy: android.app.PendingIntent getLaunchPendingIntent()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.media.RingtoneManager: void <init>(android.app.Activity)>:<public>:<android.media.RingtoneManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: java.util.Calendar getSelectedDay()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.widget.ActionMenuPresenter: boolean hideOverflowMenu()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.DisplayEventReceiver: void onHotplug(long,int,boolean)>:<public>:<android.view.DisplayEventReceiver>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.802(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2300(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.MediaController: void show(int)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: int getMonthOfFirstWeekDay()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.media.AudioService: java.lang.String streamToString(int)>:<public static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.AbsSavedState.2: void <init>()>:<>:<android.view.AbsSavedState.2:android.os.Parcelable.Creator>
<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLObjectHandle: void <init>(long)>:<protected>:<android.opengl.EGLObjectHandle>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentCaches()>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.filterpacks.videoproc.BackDropperFilter: void updateBgScaling(android.filterfw.core.Frame,android.filterfw.core.Frame,boolean)>:<private>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet)>:<protected>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet,boolean)>:<>:<android.view.LayoutInflater>
<android.media.projection.MediaProjection.MediaProjectionCallback: void onStop()>:<public>:<android.media.projection.MediaProjection.MediaProjectionCallback:android.media.projection.IMediaProjectionCallback.Stub,android.os.Binder>
<android.widget.ListPopupWindow.PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.ListPopupWindow.PopupTouchInterceptor:android.view.View.OnTouchListener>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.media.RemoteController: void access.1200(android.media.RemoteController,int,android.media.RemoteController.PlaybackInfo)>:<static>:<android.media.RemoteController>
<android.view.inputmethod.InputMethodManager.ImeInputEventSender: void <init>(android.view.inputmethod.InputMethodManager,android.view.InputChannel,android.os.Looper)>:<public>:<android.view.inputmethod.InputMethodManager.ImeInputEventSender:android.view.InputEventSender>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.service.trust.TrustAgentService.1: void <init>(android.service.trust.TrustAgentService)>:<>:<android.service.trust.TrustAgentService.1:android.os.Handler>
<android.widget.TimePickerSpinnerDelegate: void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLSurfaceView.EglHelper: void logEglErrorAsWarning(java.lang.String,java.lang.String,int)>:<public static>:<android.opengl.GLSurfaceView.EglHelper>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<huawei.cust.HwCustUtils: java.lang.String getArgsType(java.lang.String,java.lang.Object[])>:<static transient>:<huawei.cust.HwCustUtils>
<android.widget.SearchView: void onActionViewExpanded()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceTextInfoParams: void <init>(android.view.textservice.TextInfo,java.util.ArrayList)>:<public>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceTextInfoParams>
<android.view.IRotationWatcher.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IRotationWatcher.Stub.Proxy:android.view.IRotationWatcher>
<android.database.DatabaseUtils.InsertHelper: long execute()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.View: void handleFocusGainInternal(int,android.graphics.Rect)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: void notifyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GhostView: void setMatrix(android.graphics.Matrix)>:<public>:<android.view.GhostView:android.view.View>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.AndroidTestCase: android.content.Context getTestContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: void release()>:<public>:<android.media.MediaScanner>
<android.view.TextureView.1: void <init>(android.view.TextureView)>:<>:<android.view.TextureView.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.filterpacks.imageproc.AutoFixFilter: void prepare(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.opengl.EGLLogWrapper: boolean eglReleaseThread()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.AudioSystem: int setMasterMute(boolean)>:<public static native>:<android.media.AudioSystem>
<android.media.session.MediaSessionManager: void <init>(android.content.Context)>:<public>:<android.media.session.MediaSessionManager>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.RenderNode: float nGetRotationY(long)>:<private static native>:<android.view.RenderNode>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSessionLegacyHelper.SessionHolder getHolder(android.app.PendingIntent,boolean)>:<private>:<android.media.session.MediaSessionLegacyHelper>
<android.media.AudioAttributes: java.util.Set getTags()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.security.AndroidKeyStore: boolean engineIsCertificateEntry(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.ThreadedRenderer: void updateViewTreeDisplayList(android.view.View)>:<private>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.ListPopupWindow.PopupScrollListener: void <init>(android.widget.ListPopupWindow)>:<private>:<android.widget.ListPopupWindow.PopupScrollListener:android.widget.AbsListView.OnScrollListener>
<android.media.MediaScanner: android.media.MediaScanner.FileEntry makeEntryFor(java.lang.String)>:<>:<android.media.MediaScanner>
<android.media.projection.MediaProjectionInfo: java.lang.String toString()>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.preference.EditTextPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.EditTextPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.ViewRootImpl: void onStopNestedScroll(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.IWindowId.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindowId.Stub:android.os.Binder,android.view.IWindowId>
<android.accounts.GrantCredentialsPermissionActivity: void finish()>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.print.PrinterId: void <init>(android.content.ComponentName,java.lang.String)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.MediaSize>
<android.media.AudioGain: int defaultValue()>:<public>:<android.media.AudioGain>
<android.view.textservice.SpellCheckerInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.textservice.SpellCheckerInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glDrawTexiOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.widget.TextView.Marquee: android.view.Choreographer access.600(android.widget.TextView.Marquee)>:<static>:<android.widget.TextView.Marquee>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PageRange: java.lang.String toString()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.preference.PreferenceManager: void dispatchActivityStop()>:<>:<android.preference.PreferenceManager>
<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.media.RemoteController.EventHandler: void <init>(android.media.RemoteController,android.media.RemoteController,android.os.Looper)>:<public>:<android.media.RemoteController.EventHandler:android.os.Handler>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.DisplayEventReceiver: void dispose(boolean)>:<private>:<android.view.DisplayEventReceiver>
<android.view.KeyCharacterMap: char nativeGetDisplayLabel(long,int)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.preference.Preference: long getId()>:<>:<android.preference.Preference:java.lang.Comparable>
<android.media.CCParser.StyleCode: void <clinit>()>:<static>:<android.media.CCParser.StyleCode>
<android.opengl.EGLLogWrapper: java.lang.String getHex(int)>:<private static>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.MediaScanner: void setLocale(java.lang.String)>:<public native>:<android.media.MediaScanner>
<android.media.AudioService: void clearAllScoClients(int,boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.SubtitleController: void access.300(android.media.SubtitleController)>:<static>:<android.media.SubtitleController>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer.Settings)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.ViewGroup: android.graphics.PointF getLocalPoint()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate: long getDate()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.AccessibilityInteractionController: void access.800(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.ITvInputSessionCallback access.900(android.media.tv.TvInputService.HardwareSession)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.media.AudioTrack: void setState(int)>:<protected>:<android.media.AudioTrack>
<android.view.inputmethod.InputMethodManager.1: void onUnbindMethod(int)>:<public>:<android.view.inputmethod.InputMethodManager.1:com.android.internal.view.IInputMethodClient.Stub>
<android.widget.TimePickerSpinnerDelegate: void setTypedTimes(java.util.ArrayList)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.preference.EditTextPreference: void setText(java.lang.String)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.ExifInterface: double getAltitude(double)>:<public>:<android.media.ExifInterface>
<android.animation.Keyframe.FloatKeyframe: void <init>(float,float)>:<>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.media.AudioService: void setSwsStatus()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowInsets: boolean hasStableInsets()>:<public>:<android.view.WindowInsets>
<android.view.KeyEvent: android.view.KeyEvent copy()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.ChooseAccountActivity: void getAuthDescriptions()>:<private>:<android.accounts.ChooseAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.ListView: int nextSelectedPositionForDirection(android.view.View,int,int)>:<private final>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.IWindowSessionCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindowSessionCallback.Stub.Proxy:android.view.IWindowSessionCallback>
<android.view.RenderNode: boolean offsetLeftAndRight(int)>:<public>:<android.view.RenderNode>
<android.widget.Switch: int getSwitchMinWidth()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.gesture.GestureLibrary: android.gesture.Learner getLearner()>:<public>:<android.gesture.GestureLibrary>
<android.view.GestureDetector: android.view.MotionEvent access.000(android.view.GestureDetector)>:<static>:<android.view.GestureDetector>
<android.widget.TimePickerSpinnerDelegate: boolean inKbMode()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionSuspended()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.preference.PreferenceGroup: void onAttachedToActivity()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.test.InstrumentationTestCase.1: void run()>:<public>:<android.test.InstrumentationTestCase.1:java.lang.Runnable>
<android.media.AudioService: void unloadSoundEffects()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.preference.PreferenceScreen: void onClick()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.View.ListenerInfo: android.view.View.OnGenericMotionListener access.502(android.view.View.ListenerInfo,android.view.View.OnGenericMotionListener)>:<static>:<android.view.View.ListenerInfo>
<android.database.AbstractCursor: void onChange(boolean)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.gesture.GestureUtils: float[] translate(float[],float,float)>:<static>:<android.gesture.GestureUtils>
<android.service.voice.VoiceInteractionSession: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.MotionEvent.PointerProperties: void <init>(android.view.MotionEvent.PointerProperties)>:<public>:<android.view.MotionEvent.PointerProperties>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: void <init>()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<android.media.WebVttRenderingWidget.RegionLayout: void put(android.media.TextTrackCue)>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvContract.Channels: void <clinit>()>:<static>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.StackView: void showPrevious()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager.AmsTask: void done()>:<protected>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaRecorder: void finalize()>:<protected>:<android.media.MediaRecorder>
<android.media.AudioService.VolumeStreamState: android.media.AudioService.VolumeStreamState.VolumeDeathHandler getDeathHandler_syncVSS(android.os.IBinder,boolean)>:<private>:<android.media.AudioService.VolumeStreamState>
<android.widget.ListView: boolean isViewAncestorOf(android.view.View,android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.VideoView: void access.2100(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaRouter.Static: void publishClientSelectedRoute(boolean)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>:<public>:<android.view.GestureDetector>
<android.security.IKeystoreService.Stub.Proxy: int lock()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.audiopolicy.AudioPolicyConfig: java.lang.String toString()>:<public>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioAttributes: int hashCode()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.view.RenderNodeAnimator: void applyInterpolator()>:<private>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>:<public>:<android.media.session.MediaController>
<android.accounts.IAccountAuthenticator: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.media.SubtitleTrack: void clearActiveCues()>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.print.PrintAttributes.MediaSize: java.lang.String getId()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.TextView: void setFreezesText(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.Gesture.1: void <init>()>:<>:<android.gesture.Gesture.1:android.os.Parcelable.Creator>
<android.media.TtmlTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>:<public volatile>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.opengl.GLES30: void glResumeTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.BulkCursorDescriptor.1: android.database.BulkCursorDescriptor createFromParcel(android.os.Parcel)>:<public>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.media.MediaRecorder: void setOrientationHint(int)>:<public>:<android.media.MediaRecorder>
<android.view.WindowManagerPolicy: int getNonDecorDisplayWidth(int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>:<public static>:<android.view.WindowManagerGlobal>
<android.media.Metadata: long getLong(int)>:<public>:<android.media.Metadata>
<android.media.session.MediaSession: void dispatchSeekTo(long)>:<private>:<android.media.session.MediaSession>
<android.media.AudioAttributes: int access.200(android.media.AudioAttributes)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.filterpacks.videoproc.BackDropperFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.media.MediaRouter.RouteInfo.1.1: void <init>(android.media.MediaRouter.RouteInfo.1,int,int)>:<>:<android.media.MediaRouter.RouteInfo.1.1:java.lang.Runnable>
<android.view.RenderNode: boolean setClipBounds(android.graphics.Rect)>:<public>:<android.view.RenderNode>
<android.media.Tokenizer.OnTokenListener: void onEnd(java.lang.String)>:<public abstract>:<android.media.Tokenizer.OnTokenListener>
<android.media.AudioGain: int minValue()>:<public>:<android.media.AudioGain>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.database.CursorWindow.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.view.ViewOutlineProvider.3: void getOutline(android.view.View,android.graphics.Outline)>:<public>:<android.view.ViewOutlineProvider.3:android.view.ViewOutlineProvider>
<android.view.inputmethod.SparseRectFArray: void <init>(android.os.Parcel)>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.widget.TextView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewDebug: void dumpViewProperties(android.content.Context,java.lang.Object,java.io.BufferedWriter)>:<private static>:<android.view.ViewDebug>
<android.view.inputmethod.ExtractedTextRequest: void <init>()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.opengl.GLSurfaceView.GLThread: boolean access.1102(android.opengl.GLSurfaceView.GLThread,boolean)>:<static>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addView(android.view.View)>:<public>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.security.AndroidKeyPairGenerator: java.security.KeyPair generateKeyPair()>:<public>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.view.ViewRootImpl: boolean scrollToRectOrFocus(android.graphics.Rect,boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.IWindowId.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.filterpacks.imageproc.ToGrayFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ToGrayFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.widget.AdapterView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.preference.RingtonePreference: void setShowSilent(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.audiofx.Visualizer: int getFft(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.media.MediaExtractor: java.util.Map getFileFormatNative()>:<private native>:<android.media.MediaExtractor>
<android.media.MediaRouter.RouteGroup: void routeUpdated()>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setSpinnersShown(boolean)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.session.ISessionManager: java.util.List getSessions(android.content.ComponentName,int)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.media.MediaDrm.ProvisionRequest: java.lang.String getDefaultUrl()>:<public>:<android.media.MediaDrm.ProvisionRequest>
<android.view.inputmethod.ExtractedTextRequest.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.ExtractedTextRequest.1:android.os.Parcelable.Creator>
<android.widget.ViewFlipper: void onAttachedToWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerOpenListener>
<android.accounts.ChooseAccountTypeActivity.ViewHolder: void <init>()>:<private>:<android.accounts.ChooseAccountTypeActivity.ViewHolder>
<android.widget.ActivityChooserView.1: void onInvalidated()>:<public>:<android.widget.ActivityChooserView.1:android.database.DataSetObserver>
<android.opengl.EGLLogWrapper: void returns(int)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.accessibility.AccessibilityEvent.1: android.view.accessibility.AccessibilityEvent[] newArray(int)>:<public>:<android.view.accessibility.AccessibilityEvent.1:android.os.Parcelable.Creator>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onSeek(long)>:<public abstract>:<android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.PopupMenu: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.audiofx.Visualizer: int native_getWaveForm(byte[])>:<private final native>:<android.media.audiofx.Visualizer>
<android.media.MediaFocusControl.1: void onCallStateChanged(int,java.lang.String)>:<public>:<android.media.MediaFocusControl.1:android.telephony.PhoneStateListener>
<android.view.animation.Animation: void initialize(int,int,int,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.projection.IMediaProjection: boolean canProjectVideo()>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.service.voice.IVoiceInteractionSession: void destroy()>:<public abstract>:<android.service.voice.IVoiceInteractionSession:android.os.IInterface>
<android.view.RenderNodeAnimator: long getDuration()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.widget.Editor: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>:<private>:<android.widget.Editor>
<android.filterpacks.imageproc.AutoFixFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: void <init>(android.content.Context,int,java.util.ArrayList)>:<public>:<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.widget.TextView.Marquee: boolean shouldDrawLeftFade()>:<>:<android.widget.TextView.Marquee>
<android.print.PrintJobInfo: java.lang.String toString()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.IAudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.tv.TvInputManager.3: void <init>(android.media.tv.TvInputManager,android.media.tv.TvInputManager.HardwareCallback)>:<>:<android.media.tv.TvInputManager.3:android.media.tv.ITvInputHardwareCallback.Stub,android.os.Binder>
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.media.MediaPlayer.TimeProvider: void access.1800(android.media.MediaPlayer.TimeProvider,boolean)>:<static>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.preference.PreferenceActivity: void onDestroy()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.ViewRootImpl: void profileRendering(boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AmrInputStream: void close()>:<public>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.View: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap.Config,int,boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.AnimatorSet: void setTarget(java.lang.Object)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.accounts.IAccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.opengl.GLSurfaceView.GLThread: boolean readyToDraw()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.media.MediaScanner.MyMediaScannerClient: android.content.ContentValues toValues()>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.view.IWindowId.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindowId.Stub:android.os.Binder,android.view.IWindowId>
<android.accounts.AccountManager.15: void <init>(android.accounts.AccountManager,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<>:<android.accounts.AccountManager.15:java.lang.Runnable>
<android.media.session.ISessionController: java.lang.String getTag()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.inputmethod.InputMethodManager: void checkFocus()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.TextView: void <init>(android.content.Context)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewDebug: void dumpViewProperties(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.media.MediaFocusControl.DisplayInfoForServer: int access.702(android.media.MediaFocusControl.DisplayInfoForServer,int)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.animation.AnimatorSet: java.util.ArrayList access.000(android.animation.AnimatorSet)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.Display: int getWidth()>:<public>:<android.view.Display>
<android.media.Utils: void <init>()>:<>:<android.media.Utils>
<android.animation.ValueAnimator: void cancel()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.LoudnessEnhancer,int,int)>:<public abstract>:<android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener>
<android.view.DisplayInfo.1: android.view.DisplayInfo[] newArray(int)>:<public>:<android.view.DisplayInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: android.view.View findViewTraversal(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowManagerPolicy.PointerEventListener: void onPointerEvent(android.view.MotionEvent)>:<public abstract>:<android.view.WindowManagerPolicy.PointerEventListener>
<android.widget.Switch: void jumpDrawablesToCurrentState()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.filterpacks.base.GLTextureSource: void setupPorts()>:<public>:<android.filterpacks.base.GLTextureSource:android.filterfw.core.Filter>
<android.media.IMediaRouterService.Stub.Proxy: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.media.AudioTrack.NativeEventHandlerDelegate: android.os.Handler getHandler()>:<>:<android.media.AudioTrack.NativeEventHandlerDelegate>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.media.AudioService: boolean isStreamMutedByRingerMode(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.EdgeEffect: void finish()>:<public>:<android.widget.EdgeEffect>
<android.media.IAudioService: void unloadSoundEffects()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: void <init>()>:<>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.view.RenderNode: boolean setTop(int)>:<public>:<android.view.RenderNode>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>:<public>:<android.media.MediaMetadataRetriever>
<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor>
<android.animation.LayoutTransition: void startChangingAnimations()>:<public>:<android.animation.LayoutTransition>
<android.view.RenderNodeAnimator: void pause()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.RenderNode: void getMatrix(android.graphics.Matrix)>:<public>:<android.view.RenderNode>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.filterpacks.videosrc.MediaSource: boolean access.602(android.filterpacks.videosrc.MediaSource,boolean)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.print.PrinterInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getPreviousName(android.accounts.Account)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.database.AbstractCursor: void close()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AdapterView: void onDetachedFromWindow()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.ExifInterface: void commitChangesNative(java.lang.String)>:<private native>:<android.media.ExifInterface>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setTransportControlInfo(int,int,int)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.view.IWindowManager: void setAppWillBeHidden(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.WindowInfo: int describeContents()>:<public>:<android.view.WindowInfo:android.os.Parcelable>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.view.InputQueue: long nativeSendKeyEvent(long,android.view.KeyEvent,boolean)>:<private static native>:<android.view.InputQueue>
<android.widget.GridLayout.Assoc: void put(java.lang.Object,java.lang.Object)>:<public>:<android.widget.GridLayout.Assoc:java.util.ArrayList,java.util.AbstractList,java.util.AbstractCollection>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.AudioService: void setMicrophoneMute(boolean,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.security.IKeystoreService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.GridView: void onMeasure(int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.Session.PendingEvent: void recycle()>:<public>:<android.media.tv.TvInputManager.Session.PendingEvent:java.lang.Runnable>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.accounts.ChooseTypeAndAccountActivity.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.accounts.ChooseTypeAndAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.view.DragEvent: int describeContents()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.media.session.MediaSessionManager.SessionsChangedWrapper: android.media.session.IActiveSessionsListener.Stub access.000(android.media.session.MediaSessionManager.SessionsChangedWrapper)>:<static>:<android.media.session.MediaSessionManager.SessionsChangedWrapper>
<android.widget.TextView: void setHint(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: java.util.Calendar access.2000(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ThreadedRenderer: void <init>(android.content.Context,boolean)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaController.Callback: void onQueueTitleChanged(java.lang.CharSequence)>:<public>:<android.media.session.MediaController.Callback>
<android.widget.ActivityChooserModel.DataModelPackageMonitor: void <init>(android.widget.ActivityChooserModel)>:<private>:<android.widget.ActivityChooserModel.DataModelPackageMonitor:com.android.internal.content.PackageMonitor>
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.inputmethod.CursorAnchorInfo.Builder: float access.600(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void <init>(android.widget.CalendarView,android.content.Context)>:<>:<android.widget.CalendarView.AbstractCalendarViewDelegate:android.widget.CalendarView.CalendarViewDelegate>
<android.view.View: boolean canResolveTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Surface: void setNativeObjectLocked(long)>:<private>:<android.view.Surface:android.os.Parcelable>
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.opengl.GLErrorWrapper: void glClearDepthx(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.PlaybackState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.session.PlaybackState.1:android.os.Parcelable.Creator>
<android.security.IKeystoreService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.filterpacks.imageproc.VignetteFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.widget.DayPickerView: void init()>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.Surface: long nativeLockCanvas(long,android.graphics.Canvas,android.graphics.Rect)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.TabWidget: void initTabWidget()>:<private>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.tv.TvContentRatingSystemInfo: android.net.Uri getXmlUri()>:<public final>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.database.ContentObserver: void <init>(android.os.Handler)>:<public>:<android.database.ContentObserver>
<android.media.MediaRouter.RouteGroup: void memberNameChanged(android.media.MediaRouter.RouteInfo,java.lang.CharSequence)>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.RemoteControlClient: void registerWithSession(android.media.session.MediaSessionLegacyHelper)>:<public>:<android.media.RemoteControlClient>
<android.service.notification.ConditionProviderService: boolean isBound()>:<private>:<android.service.notification.ConditionProviderService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback:android.print.PrintDocumentAdapter.LayoutResultCallback,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback>
<android.view.Display: float getRefreshRate()>:<public>:<android.view.Display>
<android.view.MenuInflater: void <init>(android.content.Context,java.lang.Object)>:<public>:<android.view.MenuInflater>
<android.media.session.PlaybackState: void <clinit>()>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.service.dreams.DreamService: int applyFlags(int,int,int)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.notification.IConditionListener: void onConditionsReceived(android.service.notification.Condition[])>:<public abstract>:<android.service.notification.IConditionListener:android.os.IInterface>
<android.widget.AdapterViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaDrm: android.media.MediaDrm.KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>:<public native>:<android.media.MediaDrm>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.textservice.SpellCheckerSession.InternalListener: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>:<public>:<android.view.textservice.SpellCheckerSession.InternalListener:com.android.internal.textservice.ITextServicesSessionListener.Stub>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrintAttributes: void clear()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.accounts.AccountManager.5: void doWork()>:<public>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void access.1100(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.media.tv.ITvInputManager.Stub.Proxy: void dispatchSurfaceChanged(android.os.IBinder,int,int,int,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.opengl.GLSurfaceView: void init()>:<private>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.MenuInflater.MenuState: void readItem(android.util.AttributeSet)>:<public>:<android.view.MenuInflater.MenuState>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceActivity: boolean onIsMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.IRemoteControlClient.Stub.Proxy: void seekTo(int,long)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.widget.StackView: int access.200(android.widget.StackView)>:<static>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListView: void resolveChildIndicator()>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController.Anchor)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.MenuInflater: java.lang.Object findRealOwner(java.lang.Object)>:<private>:<android.view.MenuInflater>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult()>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.print.PrinterDiscoverySession: void <init>(android.print.IPrintManager,android.content.Context,int)>:<>:<android.print.PrinterDiscoverySession>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLErrorWrapper: void glTexGenf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor.ActionPopupWindow: void show()>:<public>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.service.trust.TrustAgentService: boolean onSetTrustAgentFeaturesEnabled(android.os.Bundle)>:<public>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent,android.os.Looper)>:<public>:<android.media.RemoteControlClient>
<android.widget.TextView: void setAutoLinkMask(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RadialTimePickerView: void drawSelector(android.graphics.Canvas,int)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.MediaCodec.BufferMap: void <init>(android.media.MediaCodec.1)>:<>:<android.media.MediaCodec.BufferMap>
<android.widget.TextView: void access.200(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.RenderNodeAnimator: void nSetInterpolator(long,long)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.OrientationListener.OrientationEventListenerInternal: void <init>(android.view.OrientationListener,android.content.Context)>:<>:<android.view.OrientationListener.OrientationEventListenerInternal:android.view.OrientationEventListener>
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>:<public static>:<android.database.sqlite.SQLiteGlobal>
<android.widget.Editor: void selectAllAndShowEditor()>:<protected>:<android.widget.Editor>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getMaxDate()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.View: int getHorizontalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.HwAbsListView: boolean hasSpringAnimatorMask()>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>:<private>:<android.view.PointerIcon:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.inputmethod.BaseInputConnection: void ensureDefaultComposingSpans()>:<private>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.effect.effects.PosterizeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.PosterizeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder 'with'(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.trust.TrustAgentService: void access.200(android.service.trust.TrustAgentService,java.lang.String)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioPortEventHandler: void registerListener(android.media.AudioManager.OnAudioPortUpdateListener)>:<>:<android.media.AudioPortEventHandler>
<android.view.ActionMode: void setTitle(int)>:<public abstract>:<android.view.ActionMode>
<android.media.session.ISessionManager.Stub.Proxy: boolean isGlobalPriorityActive()>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.view.IWindowSession.Stub.Proxy: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.ListView: void measureScrapChild(android.view.View,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>:<public abstract>:<android.view.Menu>
<android.media.tv.ITvInputManagerCallback.Stub.Proxy: void onInputAdded(java.lang.String)>:<public>:<android.media.tv.ITvInputManagerCallback.Stub.Proxy:android.media.tv.ITvInputManagerCallback>
<android.widget.Editor: void endBatchEdit()>:<public>:<android.widget.Editor>
<android.view.inputmethod.CorrectionInfo.1: android.view.inputmethod.CorrectionInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.CorrectionInfo.1:android.os.Parcelable.Creator>
<android.media.tv.TvView: int access.2202(android.media.tv.TvView,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.preference.Preference: int compareTo(android.preference.Preference)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: android.view.View getDecorView()>:<public abstract>:<android.view.Window>
<android.view.ViewStub: void setInflatedId(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.media.AudioService.AudioServiceBroadcastReceiver: void <init>(android.media.AudioService,android.media.AudioService.1)>:<>:<android.media.AudioService.AudioServiceBroadcastReceiver:android.content.BroadcastReceiver>
<android.media.Tokenizer: int access.112(android.media.Tokenizer,int)>:<static>:<android.media.Tokenizer>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postChannelRetuned(android.net.Uri)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.view.InputChannel.1: void <init>()>:<>:<android.view.InputChannel.1:android.os.Parcelable.Creator>
<android.view.View: android.graphics.Matrix getInverseMatrix()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IAssetAtlas.Stub.Proxy: android.view.GraphicBuffer getBuffer()>:<public>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void onRemoved(int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.700(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.print.PrintManager: void addPrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>:<public>:<android.print.PrintManager>
<android.view.View.4: void setValue(android.view.View,float)>:<public>:<android.view.View.4:android.util.FloatProperty>
<android.animation.PropertyValuesHolder: void access.200(java.lang.Object,long,int)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.WindowManagerPolicy: boolean canMagnifyWindow(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.View.2: boolean apply(android.view.View)>:<public>:<android.view.View.2:com.android.internal.util.Predicate>
<android.media.tv.TvInputManager.Session.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>:<public abstract>:<android.media.tv.TvInputManager.Session.FinishedInputEventCallback>
<android.service.wallpaper.IWallpaperConnection.Stub: void <init>()>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub:android.os.Binder,android.service.wallpaper.IWallpaperConnection>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioAttributes: int access.202(android.media.AudioAttributes,int)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.ViewGroup: void setClipChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService.SoundPoolCallback: int status()>:<public>:<android.media.AudioService.SoundPoolCallback:android.media.SoundPool.OnLoadCompleteListener>
<android.view.IWindowManager: float[] getAnimationScales()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.AudioAttributes: java.lang.String usageToString()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.MediaPlayer.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaPlayer.EventHandler:android.os.Handler>
<android.view.Choreographer.2: void <init>()>:<>:<android.view.Choreographer.2>
<android.widget.SearchView: boolean isSubmitButtonEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.MenuInflater: void registerMenu(android.view.MenuItem,android.util.AttributeSet)>:<private>:<android.view.MenuInflater>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getSummary(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.database.sqlite.SQLiteConnection: void nativeBindBlob(long,long,int,byte[])>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.TextureView: void <init>(android.content.Context)>:<public>:<android.view.TextureView:android.view.View>
<android.printservice.IPrintServiceClient.Stub.Proxy: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.accounts.AccountManager.AmsTask.Response: void <init>(android.accounts.AccountManager.AmsTask,android.accounts.AccountManager.1)>:<>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.print.PageRange: void <init>(int,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.widget.GridView: void correctTooHigh(int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnection.OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.preference.SeekBarVolumizer: android.widget.SeekBar access.200(android.preference.SeekBarVolumizer)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.animation.Animator: boolean canReverse()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.VideoView: boolean canPause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.AmrInputStream: void GsmAmrEncoderCleanup(long)>:<private static native>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.WindowId.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.WindowId.1:android.os.Parcelable.Creator>
<android.media.session.MediaController: void setVolumeTo(int,int)>:<public>:<android.media.session.MediaController>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.media.tv.TvTrackInfo.Builder: void <init>(int,java.lang.String)>:<public>:<android.media.tv.TvTrackInfo.Builder>
<android.opengl.GLLogWrapper: void glEnableClientState(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.ScrollView: boolean isOffScreen(android.view.View)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy: void setLastInputMethodWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void setMinHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewFlipper: void setAutoStart(boolean)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.ViewParent getParentForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridLayout: void measureChildrenWithMargins(int,int,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: android.os.Parcelable access.100(android.widget.AdapterView)>:<static>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView.1: boolean onLoadClass(java.lang.Class)>:<public>:<android.appwidget.AppWidgetHostView.1:android.view.LayoutInflater.Filter>
<android.preference.SeekBarVolumizer.H: void <init>(android.preference.SeekBarVolumizer,android.preference.SeekBarVolumizer.1)>:<>:<android.preference.SeekBarVolumizer.H:android.os.Handler>
<android.security.IKeystoreService.Stub: android.security.IKeystoreService asInterface(android.os.IBinder)>:<public static>:<android.security.IKeystoreService.Stub:android.os.Binder,android.security.IKeystoreService>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.Cursor: java.lang.String getColumnName(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.IWindowManager.Stub: android.view.IWindowManager asInterface(android.os.IBinder)>:<public static>:<android.view.IWindowManager.Stub:android.os.Binder,android.view.IWindowManager>
<android.database.DatabaseUtils: void <init>()>:<public>:<android.database.DatabaseUtils>
<android.opengl.GLSurfaceView.GLThreadManager: void threadExiting(android.opengl.GLSurfaceView.GLThread)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.view.View: int getAccessibilityWindowId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>:<public abstract>:<android.view.ViewParent>
<android.opengl.GLLogWrapper: void glDrawTexxOES(int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioRecord>
<android.view.AbsLayoutParams: void addHwFlags(int)>:<public>:<android.view.AbsLayoutParams>
<android.widget.ScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession.1: void onVolumeChanged(android.media.VolumeProvider)>:<public>:<android.media.session.MediaSession.1:android.media.VolumeProvider.Callback>
<android.view.GLES20Canvas: int nSaveLayerAlpha(long,float,float,float,float,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewPropertyAnimator: void setValue(int,float)>:<private>:<android.view.ViewPropertyAnimator>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconUri(android.net.Uri)>:<public>:<android.media.MediaDescription.Builder>
<android.widget.StackView: void transformViewForTransition(int,int,android.view.View,boolean)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.voice.IVoiceInteractionService: void shutdown()>:<public abstract>:<android.service.voice.IVoiceInteractionService:android.os.IInterface>
<android.media.AudioService: void broadcastVibrateSetting(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.GridLayout.LayoutParams: void init(android.content.Context,android.util.AttributeSet)>:<private>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.Editor: void onWindowFocusChanged(boolean)>:<>:<android.widget.Editor>
<android.opengl.GLLogWrapper: void glClearDepthf(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.CalendarView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session: void setSessionCallback(android.media.tv.ITvInputSessionCallback)>:<private>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.HardwareRenderer: boolean copyLayerInto(android.view.HardwareLayer,android.graphics.Bitmap)>:<abstract>:<android.view.HardwareRenderer>
<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLErrorWrapper: void glMultMatrixx(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISession.Stub: android.media.session.ISession asInterface(android.os.IBinder)>:<public static>:<android.media.session.ISession.Stub:android.os.Binder,android.media.session.ISession>
<android.media.AudioPortEventHandler: void native_setup(java.lang.Object)>:<private native>:<android.media.AudioPortEventHandler>
<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.LayoutTransition: java.util.HashMap access.000(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.widget.DatePickerController: int getMaxDay()>:<public abstract>:<android.widget.DatePickerController>
<android.view.View: int getFadeTop(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.SurfaceControl: void setDisplaySize(android.os.IBinder,int,int)>:<public static>:<android.view.SurfaceControl>
<android.print.PrinterCapabilitiesInfo: int describeContents()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.widget.TabHost.LabelIndicatorStrategy: void <init>(android.widget.TabHost,java.lang.CharSequence,android.widget.TabHost.1)>:<>:<android.widget.TabHost.LabelIndicatorStrategy:android.widget.TabHost.IndicatorStrategy>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.print.PrinterCapabilitiesInfo: void <init>(android.os.Parcel,android.print.PrinterCapabilitiesInfo.1)>:<>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.view.View: void addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean hasWindowFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setDescription(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.view.ThreadedRenderer: void setOpaque(boolean)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.Choreographer: long getRealFrameTime()>:<public>:<android.view.Choreographer>
<android.media.CameraProfile: int[] getImageEncodingQualityLevels(int)>:<private static>:<android.media.CameraProfile>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>:<public>:<android.view.LayoutInflater>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putLong(int,long)>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.media.MediaPlayer.TimeProvider.EventHandler: void <init>(android.media.MediaPlayer.TimeProvider,android.os.Looper)>:<public>:<android.media.MediaPlayer.TimeProvider.EventHandler:android.os.Handler>
<android.media.CCParser.DisplayListener: android.view.accessibility.CaptioningManager.CaptionStyle getCaptionStyle()>:<public abstract>:<android.media.CCParser.DisplayListener>
<android.view.KeyCharacterMap: int get(int,int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.MediaCodec: void native_setup(java.lang.String,boolean,boolean)>:<private final native>:<android.media.MediaCodec>
<android.view.Display: void updateDisplayInfoLocked()>:<private>:<android.view.Display>
<android.media.tv.TvTrackInfo.1: void <init>()>:<>:<android.media.tv.TvTrackInfo.1:android.os.Parcelable.Creator>
<android.widget.TextView: boolean getHorizontallyScrolling()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.MediaPlayer: void stop()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.accounts.AccountManager.6: void doWork()>:<public>:<android.accounts.AccountManager.6:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean isReadOnly()>:<public>:<android.gesture.GestureLibraries.ResourceGestureLibrary:android.gesture.GestureLibrary>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewDebug.ExportedProperty: java.lang.String category()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.ddm.DdmHandleHeap: void disconnected()>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.audiofx.LoudnessEnhancer.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.LoudnessEnhancer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.widget.ListView: void resetList()>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IAudioService: void setBluetoothA2dpOn(boolean)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.filterpacks.base.GLTextureTarget: void setupPorts()>:<public>:<android.filterpacks.base.GLTextureTarget:android.filterfw.core.Filter>
<android.view.ViewManager: void removeView(android.view.View)>:<public abstract>:<android.view.ViewManager>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void <init>(android.widget.RemoteViewsAdapter)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.filterpacks.imageproc.SepiaFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.view.MotionEvent: void nativeSetDownTimeNanos(long,long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.IBulkCursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.view.HardwareLayer: void nSetLayerPaint(long,long)>:<private static native>:<android.view.HardwareLayer>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.view.accessibility.AccessibilityManager: void access.100(android.view.accessibility.AccessibilityManager)>:<static>:<android.view.accessibility.AccessibilityManager>
<android.filterpacks.ui.SurfaceRenderFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void <init>(android.opengl.GLSurfaceView.1)>:<>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>:<public>:<android.animation.StateListAnimator>
<android.media.tv.TvInputInfo.TvInputSettings: boolean isHidden(android.content.Context,java.lang.String,int)>:<private static>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewRootImpl: void performMeasure(int,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.filterpacks.imageproc.SimpleImageFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.view.KeyCharacterMap.FallbackAction: void <clinit>()>:<static>:<android.view.KeyCharacterMap.FallbackAction>
<android.animation.TimeAnimator: void initAnimation()>:<>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public>:<android.view.MenuInflater.InflatedOnMenuItemClickListener:android.view.MenuItem.OnMenuItemClickListener>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.TextTrackCue: boolean equals(java.lang.Object)>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.media.tv.TvStreamConfig: void <init>(android.media.tv.TvStreamConfig.1)>:<>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.imageproc.SepiaFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.widget.Editor: boolean canCopy()>:<protected>:<android.widget.Editor>
<android.security.IKeystoreService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.security.IKeystoreService.Stub:android.os.Binder,android.security.IKeystoreService>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.security.IKeystoreService.Stub.Proxy: int password(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.widget.AutoCompleteTextView.MyWatcher: void <init>(android.widget.AutoCompleteTextView)>:<private>:<android.widget.AutoCompleteTextView.MyWatcher:android.text.TextWatcher>
<android.view.GestureDetector.GestureHandler: void <init>(android.view.GestureDetector,android.os.Handler)>:<>:<android.view.GestureDetector.GestureHandler:android.os.Handler>
<android.widget.ActivityChooserView.Callbacks: void notifyOnDismissListener()>:<private>:<android.widget.ActivityChooserView.Callbacks:android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener,android.widget.PopupWindow.OnDismissListener>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.database.CursorWindow: int nativeGetType(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.FaceDetector: void <clinit>()>:<static>:<android.media.FaceDetector>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>:<public>:<android.widget.Scroller>
<android.service.persistentdata.IPersistentDataBlockService: int write(byte[])>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: void onConnect(java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.media.SoundPool.SoundPoolStub: void setVolume(int,float,float)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.view.ViewParent: boolean canResolveLayoutDirection()>:<public abstract>:<android.view.ViewParent>
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.ISessionController: void skipToQueueItem(long)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.TextView: int getSelectionStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Window: boolean isDestroyed()>:<public final>:<android.view.Window>
<android.widget.HwAbsListView: void onMultiSelectMove(android.view.MotionEvent,int)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.media.MediaFocusControl: void unregisterMediaButtonIntentAsync(android.app.PendingIntent)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.MediaRouter: boolean isRouteAvailable(int,int)>:<public>:<android.media.MediaRouter>
<android.widget.RelativeLayout: void sortChildren()>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleMPRQ(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>:<public static native>:<android.opengl.GLES20>
<android.animation.Animator: void removeListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri,long,long)>:<public static final>:<android.media.tv.TvContract>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.media.AudioService: void access.7700(android.media.AudioService,android.bluetooth.BluetoothDevice,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.KeyEvent: android.view.KeyEvent obtain()>:<private static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.MergeCursor: int getType(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.filterpacks.base.OutputStreamTarget: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.OutputStreamTarget:android.filterfw.core.Filter>
<android.view.DisplayAdjustments: void <init>(android.view.DisplayAdjustments)>:<public>:<android.view.DisplayAdjustments>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.view.AccessibilityInteractionController: void findFocusClientThread(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.AccessibilityInteractionController>
<android.widget.StackView: void onLayout()>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.IWindowManager.Stub.Proxy: void setAnimationScale(int,float)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.accounts.IAccountAuthenticatorResponse.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub:android.os.Binder,android.accounts.IAccountAuthenticatorResponse>
<android.media.MediaCodec.MediaImage: long getTimestamp()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup.HoverTarget: void recycle()>:<public>:<android.view.ViewGroup.HoverTarget>
<android.widget.AbsSpinner.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.AbsSpinner.SavedState.1:android.os.Parcelable.Creator>
<android.media.audiofx.AudioEffect.OnParameterChangeListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public abstract>:<android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.tv.ITvInputService: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.view.ViewRootImpl: void synthesizeInputEvent(android.view.InputEvent)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.session.ISessionCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session: void setStreamVolume(float)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.TimedText: boolean isValidKey(int)>:<private>:<android.media.TimedText>
<android.widget.TextView.ChangeWatcher: void afterTextChanged(android.text.Editable)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.media.audiofx.AudioEffect: boolean native_hasControl()>:<private final native>:<android.media.audiofx.AudioEffect>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TextView: void computeScroll()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.RemoteController.MediaControllerCallback: void <init>(android.media.RemoteController)>:<private>:<android.media.RemoteController.MediaControllerCallback:android.media.session.MediaController.Callback>
<android.view.KeyEvent: android.view.KeyEvent obtain(android.view.KeyEvent)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.IWindow.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindow.Stub:android.os.Binder,android.view.IWindow>
<android.opengl.GLUtils: void <init>()>:<private>:<android.opengl.GLUtils>
<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>:<public>:<android.view.HardwareLayer>
<android.media.IRemoteVolumeController.Stub.Proxy: void remoteVolumeChanged(android.media.session.ISessionController,int)>:<public>:<android.media.IRemoteVolumeController.Stub.Proxy:android.media.IRemoteVolumeController>
<android.view.View: float getScaleY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaScanner: void processPlayList(android.media.MediaScanner.FileEntry,android.database.Cursor)>:<private>:<android.media.MediaScanner>
<android.media.audiofx.Virtualizer: void setStrength(short)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.Nsd: boolean canDrawBySf(android.view.View)>:<public static>:<android.view.Nsd>
<android.accounts.IAccountManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.security.IKeyChainService: android.content.pm.ParceledListSlice getUserCaAliases()>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ListView: void relayoutMeasuredItem(android.view.View)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void setLabelFor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountManager: boolean removeSharedAccountAsUser(android.accounts.Account,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.View: void setX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.KeyStoreParameter: void <init>(int)>:<private>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.widget.TextView: java.lang.CharSequence getText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.GridView: int getRequestedColumnWidth()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RatingBar: void onStartTrackingTouch()>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.widget.ActionMenuPresenter: int getOpenSubMenuId()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.NotProvisionedException: void <init>(java.lang.String)>:<public>:<android.media.NotProvisionedException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowManager.LayoutParams.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.WindowManager.LayoutParams.1:android.os.Parcelable.Creator>
<android.view.GLES20Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.DatePicker: int getYear()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindowManager.Stub.Proxy: void setStrictModeVisualIndicatorPreference(java.lang.String)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.FloatBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.SoundPool.SoundPoolStub: int load(java.lang.String,int)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnInfoListener>
<android.media.FaceDetector: void finalize()>:<protected>:<android.media.FaceDetector>
<android.media.tv.TvInputService.Session.7: void <init>(android.media.tv.TvInputService.Session,int)>:<>:<android.media.tv.TvInputService.Session.7:java.lang.Runnable>
<android.view.ViewParent: boolean isTextAlignmentResolved()>:<public abstract>:<android.view.ViewParent>
<android.view.InputEventConsistencyVerifier: android.view.InputEventConsistencyVerifier.KeyState findKeyState(int,int,int,boolean)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.media.MediaPlayer: void setVideoScalingMode(int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.IWindowSession: void reportDropResult(android.view.IWindow,boolean)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void onServiceDisconnected()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.database.sqlite.SQLiteConnection.OperationLog: boolean endOperationDeferLog(int)>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.StackView: void applyTransformForChildAtIndex(android.view.View,int)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(long,int)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.opengl.GLSurfaceView.DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public>:<android.opengl.GLSurfaceView.DefaultContextFactory:android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.animation.RotateAnimation: void <init>(float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.opengl.GLES20: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.session.MediaSession.CallbackMessageHandler: android.media.session.MediaSession.Callback access.000(android.media.session.MediaSession.CallbackMessageHandler)>:<static>:<android.media.session.MediaSession.CallbackMessageHandler:android.os.Handler>
<android.view.inputmethod.InputBinding: java.lang.String toString()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.service.voice.IVoiceInteractionSessionService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub:android.os.Binder,android.service.voice.IVoiceInteractionSessionService>
<android.media.SubtitleController.Renderer: boolean supports(android.media.MediaFormat)>:<public abstract>:<android.media.SubtitleController.Renderer>
<android.security.KeyStore: boolean lock()>:<public>:<android.security.KeyStore>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1: void <init>(android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection,android.widget.RemoteViewsAdapter)>:<>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1:java.lang.Runnable>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.AccessibilityIterators.WordTextSegmentIterator: android.view.AccessibilityIterators.WordTextSegmentIterator getInstance(java.util.Locale)>:<public static>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.widget.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.ViewTreeObserver: void dispatchOnScrollChanged()>:<final>:<android.view.ViewTreeObserver>
<android.media.browse.MediaBrowser.ServiceCallbacks: void onLoadChildren(java.lang.String,android.content.pm.ParceledListSlice)>:<public>:<android.media.browse.MediaBrowser.ServiceCallbacks:android.service.media.IMediaBrowserServiceCallbacks.Stub,android.os.Binder>
<android.view.inputmethod.CompletionInfo: void <init>(android.os.Parcel)>:<private>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewPropertyAnimator: void start()>:<public>:<android.view.ViewPropertyAnimator>
<android.preference.RingtonePreference: boolean getShowSilent()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.Surface.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.Surface.1:android.os.Parcelable.Creator>
<android.media.MediaScanner: java.lang.String access.400(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void playSoundEffect(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.SurfaceView: void init()>:<private>:<android.view.SurfaceView:android.view.View>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnMenuItemClickListener>
<android.view.View: int getDrawingCacheQuality()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnection>
<android.widget.VideoView: void pause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.TextView: boolean onTextContextMenuItem(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<huawei.cust.HwCustUtils: java.lang.Object createObj(java.lang.String,java.lang.ClassLoader,java.lang.Object[])>:<public static transient>:<huawei.cust.HwCustUtils>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.dreams.DreamService: void detach()>:<private final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>:<public final native>:<android.media.MediaCrypto>
<android.opengl.GLSurfaceView.GLThread: void guardedRun()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.media.MediaPlayer.TrackInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.MediaPlayer.TrackInfo.1:android.os.Parcelable.Creator>
<android.view.ViewDebug.8: void <init>(java.util.concurrent.atomic.AtomicReference,java.lang.reflect.Method,android.view.View,java.lang.Object[],java.util.concurrent.atomic.AtomicReference,java.util.concurrent.CountDownLatch)>:<>:<android.view.ViewDebug.8:java.lang.Runnable>
<android.media.tv.ITvInputSessionWrapper.TvInputEventReceiver: void onInputEvent(android.view.InputEvent)>:<public>:<android.media.tv.ITvInputSessionWrapper.TvInputEventReceiver:android.view.InputEventReceiver>
<android.widget.Scroller: boolean computeScrollOffset()>:<public>:<android.widget.Scroller>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <clinit>()>:<static>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.session.ISessionCallback: void onSkipToTrack(long)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.service.fingerprint.FingerprintManager: boolean enrolledAndEnabled()>:<public>:<android.service.fingerprint.FingerprintManager>
<android.database.CursorWrapper: byte[] getBlob(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.TextView: void setSingleLine(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewDebug: void requestLayout(android.view.View,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setInsertionMarkerLocation(float,float,float,float,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void setStep(boolean)>:<private>:<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand:java.lang.Runnable>
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.widget.Scroller: void setFinalY(int)>:<public>:<android.widget.Scroller>
<android.media.AudioService: void onSetDTSState(int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.ITvInputManagerCallback.Stub: void <init>()>:<public>:<android.media.tv.ITvInputManagerCallback.Stub:android.os.Binder,android.media.tv.ITvInputManagerCallback>
<android.opengl.GLErrorWrapper: void glDepthFunc(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.session.IActiveSessionsListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.IActiveSessionsListener.Stub.Proxy:android.media.session.IActiveSessionsListener>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>:<public>:<android.media.AudioTrack>
<android.widget.GridLayout.Axis: int[] getTrailingMargins()>:<public>:<android.widget.GridLayout.Axis>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getColumnCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.preference.PreferenceActivity.Header: void <init>()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoUnavailable(int)>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.GLES20Canvas: void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.animation.PathKeyframes: void <clinit>()>:<static>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.print.PrinterId.1: android.print.PrinterId[] newArray(int)>:<public>:<android.print.PrinterId.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager.Future2Task.1: void run()>:<public>:<android.accounts.AccountManager.Future2Task.1:java.lang.Runnable>
<android.view.ViewRootImpl: void invalidateWorld(android.view.View)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.Ringtone: android.net.Uri getUri()>:<public>:<android.media.Ringtone>
<android.media.AudioPortConfig: android.media.AudioGainConfig gain()>:<public>:<android.media.AudioPortConfig>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)>:<public>:<android.media.AudioTrack>
<android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>:<static>:<android.gesture.Instance>
<android.media.MediaCodecInfo.VideoCapabilities: android.media.MediaCodecInfo.VideoCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public static>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.service.trust.ITrustAgentServiceCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub:android.os.Binder,android.service.trust.ITrustAgentServiceCallback>
<android.view.View.ListenerInfo: android.view.View.OnSystemUiVisibilityChangeListener access.1202(android.view.View.ListenerInfo,android.view.View.OnSystemUiVisibilityChangeListener)>:<static>:<android.view.View.ListenerInfo>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.Rating: android.media.Rating newPercentageRating(float)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.print.PrintJob: android.print.PrintJobId getId()>:<public>:<android.print.PrintJob>
<android.widget.RemoteViews.SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>:<public>:<android.widget.RemoteViews.SetOnClickPendingIntent:android.widget.RemoteViews.Action>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleSTKL(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.tv.ITvInputClient.Stub: android.media.tv.ITvInputClient asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputClient.Stub:android.os.Binder,android.media.tv.ITvInputClient>
<android.media.tv.TvContract.Channels: void <init>()>:<private>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.widget.Gallery: boolean movePrevious()>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.ddm.DdmHandleHeap: void connected()>:<public>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaMuxer: void nativeRelease(long)>:<private static native>:<android.media.MediaMuxer>
<android.animation.AnimatorSet: java.util.ArrayList access.500(android.animation.AnimatorSet)>:<static>:<android.animation.AnimatorSet:android.animation.Animator>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.IRemoteControlDisplay: void setTransportControlInfo(int,int,int)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.media.session.ISessionCallback.Stub.Proxy: void onSetVolumeTo(int)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.security.KeyStore: boolean clearUid(int)>:<public>:<android.security.KeyStore>
<android.widget.TextView: void setCursorDrawableRes(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.DreamService.DreamServiceWrapper: void detach()>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper:android.service.dreams.IDreamService.Stub,android.os.Binder>
<android.widget.GridLayout: int getAlignmentMode()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.printservice.IPrintServiceClient.Stub.Proxy: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>:<public>:<android.view.textservice.TextServicesManager>
<android.view.animation.AnimationSet: boolean hasAlpha()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioRoutesInfo: void <init>(android.os.Parcel)>:<>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.service.voice.IVoiceInteractionSession: void taskStarted(android.content.Intent,int)>:<public abstract>:<android.service.voice.IVoiceInteractionSession:android.os.IInterface>
<android.media.RemoteController.OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController.MetadataEditor)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.media.UnstyledTextExtractor: void init()>:<private>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.media.tv.TvInputService.Session.8: void run()>:<public>:<android.media.tv.TvInputService.Session.8:java.lang.Runnable>
<android.media.tv.TvInputManager.Session: void setSurface(android.view.Surface)>:<public>:<android.media.tv.TvInputManager.Session>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService.Session access.000(android.media.tv.ITvInputSessionWrapper)>:<static>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.accounts.AbstractAccountAuthenticator.Transport: void <init>(android.accounts.AbstractAccountAuthenticator)>:<private>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.media.MediaPlayer: void selectOrDeselectTrack(int,boolean)>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.AudioService: int[][] access.5400(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES20: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES20>
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.projection.MediaProjection.Callback: void onStop()>:<public>:<android.media.projection.MediaProjection.Callback>
<android.media.ImageReader.SurfaceImage: int getHeight()>:<public>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.service.notification.NotificationListenerService.RankingMap: void buildRanksLocked()>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.netdetect.INetDetectService.Stub: void <init>()>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.preference.PreferenceActivity.Header.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.PreferenceActivity.Header.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteDatabase: void open()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.media.IMediaRouterService.Stub: void <init>()>:<public>:<android.media.IMediaRouterService.Stub:android.os.Binder,android.media.IMediaRouterService>
<android.view.DragEvent: boolean getResult()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.AudioFormat: boolean isEncodingLinearPcm(int)>:<public static>:<android.media.AudioFormat>
<android.view.GLES20Canvas: void nDrawPath(long,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.SubtitleTrack.1: void <init>(android.media.SubtitleTrack,android.media.SubtitleTrack,long)>:<>:<android.media.SubtitleTrack.1:java.lang.Runnable>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>:<public>:<android.media.MediaRecorder>
<android.widget.CheckedTextView: void setBasePadding(boolean)>:<private>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.animation.ObjectAnimator: void setProperty(android.util.Property)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.PreferenceActivity: void startPreferenceFragment(android.app.Fragment,boolean)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.filterpacks.text.StringSource: void setupPorts()>:<public>:<android.filterpacks.text.StringSource:android.filterfw.core.Filter>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean isCreated()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>:<>:<android.view.FocusFinder>
<android.view.ViewGroup: void bindLayoutAnimation(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaExtractor: void seekTo(long,int)>:<public native>:<android.media.MediaExtractor>
<android.widget.TextView: void assumeLayout()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.IPrintDocumentAdapterObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.media.session.ISessionController: void unregisterCallbackListener(android.media.session.ISessionControllerCallback)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.Editor: long getLastTouchOffsets()>:<private>:<android.widget.Editor>
<android.media.ToneGenerator: void <init>(int,int)>:<public>:<android.media.ToneGenerator>
<android.view.MagnificationSpec: java.lang.String toString()>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.print.PrintJob: boolean isCompleted()>:<public>:<android.print.PrintJob>
<android.widget.ViewAnimator: void removeView(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Editor.PositionListener: void addSubscriber(android.widget.Editor.TextViewPositionListener,boolean)>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.Tokenizer.TagTokenizer: void <init>(android.media.Tokenizer)>:<>:<android.media.Tokenizer.TagTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.media.tv.TvView.MySessionCallback: void onChannelRetuned(android.media.tv.TvInputManager.Session,android.net.Uri)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void layout(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.4: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.4:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.opengl.GLUtils: int native_texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<private static native>:<android.opengl.GLUtils>
<android.view.inputmethod.EditorInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.EditorInfo.1:android.os.Parcelable.Creator>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent.PointerCoords[],int,float,float,int,int,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.RemoteController.PlaybackInfo: void <init>(int,long,long,float)>:<>:<android.media.RemoteController.PlaybackInfo>
<android.print.IPrintSpooler.Stub.Proxy: void setClient(android.print.IPrintSpoolerClient)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.media.Rating.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.Rating.1:android.os.Parcelable.Creator>
<android.animation.PathKeyframes: java.lang.Class getType()>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void <init>(android.widget.RemoteViewsService.RemoteViewsFactory,boolean)>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.View: void setOpticalInsets(android.graphics.Insets)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine.3: void dispatchWallpaperOffsets(float,float,float,float,boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.view.RenderNode: float nGetPivotX(long)>:<private static native>:<android.view.RenderNode>
<android.filterpacks.videosrc.MediaSource: void createFormats()>:<private>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public abstract>:<android.view.ViewParent>
<android.media.MediaFocusControl: void dumpRCStack(java.io.PrintWriter)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.AudioService: void broadcastMasterMuteStatus(boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaRouter.Callback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.print.IPrintManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.print.PrintManager.PrintDocumentAdapterDelegate: java.lang.Object access.000(android.print.PrintManager.PrintDocumentAdapterDelegate)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.service.dreams.DreamService: void onPanelClosed(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.InputEventSender: boolean sendInputEvent(int,android.view.InputEvent)>:<public final>:<android.view.InputEventSender>
<android.view.ThreadedRenderer: void nCancelLayerUpdate(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.RelativeLayout: int getChildMeasureSpec(int,int,int,int,int,int,int,int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.session.MediaController.TransportControls: void play()>:<public>:<android.media.session.MediaController.TransportControls>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(short[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.InputQueue: void dispose(boolean)>:<public>:<android.view.InputQueue>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.widget.Spinner.DropdownPopup: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.KeyEvent: int getUnicodeChar(int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteClosable: void close()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.media.AudioService: void setOrientationForAudioSystem()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.PathKeyframes: void <init>(android.graphics.Path)>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.media.session.MediaController.Callback: void onQueueChanged(java.util.List)>:<public>:<android.media.session.MediaController.Callback>
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.BulkCursorDescriptor:android.os.Parcelable>
<android.view.PointerIcon: void validateHotSpot(android.graphics.Bitmap,float,float)>:<private static>:<android.view.PointerIcon:android.os.Parcelable>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void updateInputState()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.SurfaceControl: void destroyDisplay(android.os.IBinder)>:<public static>:<android.view.SurfaceControl>
<android.widget.AnalogClock.1: void <init>(android.widget.AnalogClock)>:<>:<android.widget.AnalogClock.1:android.content.BroadcastReceiver>
<android.database.sqlite.SQLiteConnection: void close()>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.TextClock: void access.300(android.widget.TextClock,java.lang.String)>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.Editor: void hideInsertionPointCursorController()>:<private>:<android.widget.Editor>
<android.media.AudioManager: boolean isSilentMode()>:<public>:<android.media.AudioManager>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.TtmlUtils: void <init>()>:<private>:<android.media.TtmlUtils>
<android.view.KeyCharacterMap.UnavailableException: void <init>(java.lang.String)>:<public>:<android.view.KeyCharacterMap.UnavailableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowManagerPolicy: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void run()>:<public>:<android.view.RenderNodeAnimator.DelayedAnimationHelper:java.lang.Runnable>
<android.view.OrientationEventListener.SensorEventListenerImpl: void <init>(android.view.OrientationEventListener)>:<>:<android.view.OrientationEventListener.SensorEventListenerImpl:android.hardware.SensorEventListener>
<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.media.MediaFocusControl: void access.1200(android.media.MediaFocusControl,int,android.media.IRemoteVolumeObserver)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.media.DataSource: int readAt(long,byte[],int)>:<public abstract>:<android.media.DataSource:java.io.Closeable>
<android.opengl.GLLogWrapper: void glTexParameteri(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.IOnKeyguardExitResult: void onKeyguardExitResult(boolean)>:<public abstract>:<android.view.IOnKeyguardExitResult:android.os.IInterface>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.view.IRotationWatcher.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IRotationWatcher.Stub:android.os.Binder,android.view.IRotationWatcher>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.WindowManagerPolicy: boolean isDefaultOrientationForced()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.TextView: int getHighlightColor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioManager: int updateAudioPortCache(java.util.ArrayList,java.util.ArrayList)>:<>:<android.media.AudioManager>
<android.view.HardwareRenderer: int getHeight()>:<abstract>:<android.view.HardwareRenderer>
<android.media.AudioManager: boolean isStreamMute(int)>:<public>:<android.media.AudioManager>
<android.media.MediaFocusControl: void unregisterMediaButtonEventReceiverForCalls()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.accessibility.AccessibilityWindowInfo: void setParentId(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.preference.MultiSelectListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.DatePickerController: int getMinYear()>:<public abstract>:<android.widget.DatePickerController>
<android.preference.Preference: void setTitle(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine.3: void dispatchAppVisibility(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.filterpacks.ui.SurfaceTargetFilter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.animation.LayoutTransition.4: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.4:android.animation.AnimatorListenerAdapter>
<android.widget.Scroller: int getFinalX()>:<public final>:<android.widget.Scroller>
<android.view.WindowManagerPolicy: void setCurrentUserLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ScrollView: void endDrag()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void start(boolean)>:<private>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLES10: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.preference.PreferenceScreen.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.PreferenceScreen.SavedState.1:android.os.Parcelable.Creator>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaId(java.lang.String)>:<public>:<android.media.MediaDescription.Builder>
<android.media.IVolumeController: void dismiss()>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.widget.GridLayout: void onDebugDraw(android.graphics.Canvas)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void onWindowSystemUiVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ValueAnimator: long getDuration()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.service.notification.IConditionProvider.Stub.Proxy: void onConnected()>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.print.PageRange: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.widget.GridLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.Transformation: void toShortString(java.lang.StringBuilder)>:<public>:<android.view.animation.Transformation>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.widget.ScrollView: void smoothScrollBy(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputDevice.MotionRange: int access.100(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.media.session.MediaController.CallbackStub: void onVolumeInfoChanged(android.media.session.ParcelableVolumeInfo)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.media.effect.effects.RedEyeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.RedEyeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.service.dreams.DreamService: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.IWindowManager: void setFocusedApp(android.os.IBinder,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.AbsSpinner.SavedState.1: android.widget.AbsSpinner.SavedState[] newArray(int)>:<public>:<android.widget.AbsSpinner.SavedState.1:android.os.Parcelable.Creator>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.effect.Effect: void release()>:<public abstract>:<android.media.effect.Effect>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBindVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.view.animation.Animation.Description: android.view.animation.Animation.Description parseValue(android.util.TypedValue)>:<static>:<android.view.animation.Animation.Description>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void cancel(android.view.MotionEvent)>:<public>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.print.PrintAttributes: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.IMediaRouterClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaRouterClient.Stub:android.os.Binder,android.media.IMediaRouterClient>
<android.accounts.AccountManager.7: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.os.Bundle)>:<>:<android.accounts.AccountManager.7:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.service.textservice.SpellCheckerService.SpellCheckerServiceBinder: void <init>(android.service.textservice.SpellCheckerService)>:<public>:<android.service.textservice.SpellCheckerService.SpellCheckerServiceBinder:com.android.internal.textservice.ISpellCheckerService.Stub>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void computeOpaqueFlags()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void dispatchStartTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.printservice.PrintJob: void <init>(android.print.PrintJobInfo,android.printservice.IPrintServiceClient)>:<>:<android.printservice.PrintJob>
<android.view.Window: boolean requestFeature(int)>:<public>:<android.view.Window>
<android.media.IAudioFocusDispatcher.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IAudioFocusDispatcher.Stub.Proxy:android.media.IAudioFocusDispatcher>
<android.animation.LayoutTransition: long access.400(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.CCParser: android.media.CCParser.CCMemory getMemory()>:<private>:<android.media.CCParser>
<android.widget.GridView: void adjustForTopFadingEdge(android.view.View,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSessionLegacyHelper: void removeMediaButtonListener(android.app.PendingIntent)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.view.GLES20Canvas: boolean isAvailable()>:<static>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback)>:<public>:<android.media.MediaRouter>
<android.widget.AutoCompleteTextView: void showDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: void performValidation()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES10Ext: void <clinit>()>:<static>:<android.opengl.GLES10Ext>
<android.view.accessibility.AccessibilityRecord: void setWindowId(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.IRemoteDisplayProvider.Stub.Proxy: void disconnect(java.lang.String)>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.Image: void close()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.view.GLES20Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,int,float)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.service.trust.TrustAgentService: android.service.trust.ITrustAgentServiceCallback access.100(android.service.trust.TrustAgentService)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Switch: void drawableHotspotChanged(float,float)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.AbsListView.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.GridLayout.Axis: void computeArcs()>:<private>:<android.widget.GridLayout.Axis>
<android.view.SurfaceControl: void hide()>:<public>:<android.view.SurfaceControl>
<android.print.pdf.PrintedPdfDocument: android.graphics.pdf.PdfDocument.Page startPage(int)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String,long)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.widget.RemoteViews.TextViewDrawableAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.TextViewDrawableAction:android.widget.RemoteViews.Action>
<android.widget.DayPickerView: void onScroll(android.widget.AbsListView,int,int,int)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.AbstractCursor: boolean isFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.gesture.InstanceLearner: void <init>()>:<>:<android.gesture.InstanceLearner:android.gesture.Learner>
<android.view.GLES20Canvas: void nDrawColor(long,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.printservice.PrintDocument: android.os.ParcelFileDescriptor getData()>:<public>:<android.printservice.PrintDocument>
<android.widget.TextView.Marquee: byte access.400(android.widget.TextView.Marquee)>:<static>:<android.widget.TextView.Marquee>
<android.view.RenderNode: long getNativeDisplayList()>:<>:<android.view.RenderNode>
<android.media.MediaMetadata.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.MediaMetadata.1:android.os.Parcelable.Creator>
<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentMinute()>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.FocusRequester: boolean hasSameBinder(android.os.IBinder)>:<>:<android.media.FocusRequester>
<android.view.RenderNodeAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.View: void setPressed(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService.AudioHandler: void cleanupPlayer(android.media.MediaPlayer)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub.Proxy:android.media.projection.IMediaProjectionWatcherCallback>
<android.media.session.MediaSessionLegacyHelper: void sendVolumeKeyEvent(android.view.KeyEvent,boolean)>:<public>:<android.media.session.MediaSessionLegacyHelper>
<android.hsm.HwCameraPermWrapper: boolean confirmPermissionWithResult()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxyLocked(android.database.IContentObserver)>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.media.ImageReader: android.view.Surface getSurface()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.GridLayout.6: int getAlignmentValue(android.view.View,int,int)>:<public>:<android.widget.GridLayout.6:android.widget.GridLayout.Alignment>
<android.widget.AdapterView: long getSelectedItemId()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaDrm: android.media.MediaDrm.CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)>:<public>:<android.media.MediaDrm>
<android.widget.AdapterViewAnimator: void addChild(android.view.View)>:<private>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ViewPropertyAnimator: java.util.HashMap access.600(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.widget.DatePickerController: void unregisterOnDateChangedListener(android.widget.OnDateChangedListener)>:<public abstract>:<android.widget.DatePickerController>
<android.filterpacks.videosrc.MediaSource: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.media.AudioAttributes: int access.502(android.media.AudioAttributes,int)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.GLES20Canvas.CanvasFinalizer: void finalize()>:<protected>:<android.view.GLES20Canvas.CanvasFinalizer>
<android.opengl.GLSurfaceView.EglHelper: int swap()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.media.RemoteController: void access.900(android.media.RemoteController,android.media.MediaMetadata)>:<static>:<android.media.RemoteController>
<android.media.Tokenizer.OnTokenListener: void onStart(java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.media.Tokenizer.OnTokenListener>
<android.view.GLES20Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator.1)>:<>:<android.view.ViewPropertyAnimator.AnimatorEventListener:android.animation.Animator.AnimatorListener,android.animation.ValueAnimator.AnimatorUpdateListener>
<android.widget.Editor.HandleView: void positionAtCursorOffset(int,boolean)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.MediaCodec.CryptoException: int getErrorCode()>:<public>:<android.media.MediaCodec.CryptoException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLErrorWrapper: void glDrawTexiOES(int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputSession.Stub.Proxy: void requestUnblockContent(java.lang.String)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.widget.DayPickerView: int access.100(android.widget.DayPickerView)>:<static>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.MediaRecorder.OutputFormat: void <init>(android.media.MediaRecorder)>:<private>:<android.media.MediaRecorder.OutputFormat>
<android.animation.FloatArrayEvaluator: void <init>()>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.filterpacks.imageproc.ImageCombineFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.media.IAudioService.Stub.Proxy: int getLastAudibleMasterVolume()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaCodecInfo.VideoCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.media.IAudioService.Stub.Proxy: void forceVolumeControlStream(int,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.ScrollView: int clamp(int,int,int)>:<private static>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.CCParser.CCData: boolean isBasicChar()>:<private>:<android.media.CCParser.CCData>
<android.media.Tokenizer.TagTokenizer: void yield_tag()>:<private>:<android.media.Tokenizer.TagTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.StackView: void pacedScroll(boolean)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaCodec: void native_init()>:<private static final native>:<android.media.MediaCodec>
<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)>:<>:<android.widget.Editor>
<android.view.Nsd: boolean canSave(android.view.View)>:<public static>:<android.view.Nsd>
<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.ParcelableVolumeInfo:android.os.Parcelable>
<android.view.GLES20Canvas: boolean nClipPath(long,long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.PrintJobInfo: android.print.PageRange[] access.202(android.print.PrintJobInfo,android.print.PageRange[])>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.RemoteController.OnClientUpdateListener: void onClientChange(boolean)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.view.ViewRootImpl.AsyncInputStage: void dump(java.lang.String,java.io.PrintWriter)>:<>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.widget.CalendarView.LegacyCalendarViewDelegate: long getMaxDate()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] indexMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.opengl.GLES20: void glUniform1i(int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glBindBuffer(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarVolumizer.Receiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.preference.SeekBarVolumizer.Receiver:android.content.BroadcastReceiver>
<android.view.GLES20Canvas: void setupFinalizer()>:<private>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.Editor: void showError()>:<private>:<android.widget.Editor>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewDebug: void setLayoutParameter(android.view.View,java.lang.String,int)>:<public static>:<android.view.ViewDebug>
<android.printservice.PrintService.ServiceHandler: void <init>(android.printservice.PrintService,android.os.Looper)>:<public>:<android.printservice.PrintService.ServiceHandler:android.os.Handler>
<android.view.KeyEvent: boolean isCapsLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.view.SurfaceView.MyWindow: void dispatchGetNewSurface()>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.widget.SearchView: boolean onItemSelected(int)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.audiofx.Visualizer.NativeEventHandler: void handleServerDiedMessage(android.os.Message)>:<private>:<android.media.audiofx.Visualizer.NativeEventHandler:android.os.Handler>
<android.view.LayoutInflater.FactoryMerger: void <init>(android.view.LayoutInflater.Factory,android.view.LayoutInflater.Factory2,android.view.LayoutInflater.Factory,android.view.LayoutInflater.Factory2)>:<>:<android.view.LayoutInflater.FactoryMerger:android.view.LayoutInflater.Factory2>
<android.widget.TextView: boolean getFreezesText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CalendarView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.MediaController: android.widget.MediaController.MediaPlayerControl access.700(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.HardwareSession: void <init>(android.content.Context)>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)>:<public>:<android.animation.LayoutTransition>
<android.service.fingerprint.FingerprintManagerReceiver: void onRemoved(int)>:<public>:<android.service.fingerprint.FingerprintManagerReceiver>
<android.media.SoundPool.SoundPoolStub: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.view.ViewRootImpl.TrackballAxis: void reset(int)>:<>:<android.view.ViewRootImpl.TrackballAxis>
<android.widget.RadialTimePickerView: void drawCircleBackground(android.graphics.Canvas)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.MediaPlayer.TimeProvider: void onSeekComplete(android.media.MediaPlayer)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.animation.AnimatorSet.DependencyListener: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.media.AudioManager: boolean isValidRingerMode(int)>:<public static>:<android.media.AudioManager>
<android.view.inputmethod.InputBinding.1: void <init>()>:<>:<android.view.inputmethod.InputBinding.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glPointParameterx(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.GridLayout.Spec: android.widget.GridLayout.Spec copyWriteAlignment(android.widget.GridLayout.Alignment)>:<final>:<android.widget.GridLayout.Spec>
<android.filterpacks.videosrc.SurfaceTextureSource.1: void <init>(android.filterpacks.videosrc.SurfaceTextureSource)>:<>:<android.filterpacks.videosrc.SurfaceTextureSource.1:android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.media.RemoteDisplayState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.RemoteDisplayState.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationRankingUpdate.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.service.notification.NotificationRankingUpdate.1:android.os.Parcelable.Creator>
<android.print.PrintJob: boolean isBlocked()>:<public>:<android.print.PrintJob>
<android.service.notification.ZenModeConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glMultMatrixx(int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>:<public abstract>:<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.view.Choreographer: android.view.Choreographer.CallbackRecord access.500(android.view.Choreographer,long,java.lang.Object,java.lang.Object)>:<static>:<android.view.Choreographer>
<android.test.InstrumentationTestCase.1: void <init>(android.test.InstrumentationTestCase,java.lang.Runnable,java.lang.Throwable[])>:<>:<android.test.InstrumentationTestCase.1:java.lang.Runnable>
<android.service.voice.VoiceInteractionSessionService: void onCreate()>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.filterpacks.videosrc.MediaSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.opengl.GLES10: void glHint(int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.inputmethod.BaseInputConnection: void reportFinish()>:<protected>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.InputChannel: void nativeTransferTo(android.view.InputChannel)>:<private native>:<android.view.InputChannel:android.os.Parcelable>
<android.media.projection.IMediaProjection: boolean canProjectSecureVideo()>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.view.ViewRootImpl: void handleAppVisibility(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.DragEvent: java.lang.String toString()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.database.sqlite.SQLiteCustomFunction: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>:<public>:<android.database.sqlite.SQLiteCustomFunction>
<android.accounts.ChooseAccountActivity.1: void <init>(android.accounts.ChooseAccountActivity)>:<>:<android.accounts.ChooseAccountActivity.1:android.widget.AdapterView.OnItemClickListener>
<android.view.View: int getOverScrollMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.accessibility.AccessibilityNodeInfo.1:android.os.Parcelable.Creator>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>:<public static>:<android.media.CameraProfile>
<android.media.session.ISession: void setActive(boolean)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.view.GLES20RecordingCanvas: long finishRecording()>:<>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.PrintJobInfo: long getCreationTime()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.Choreographer: android.view.Choreographer.FrameHandler access.300(android.view.Choreographer)>:<static>:<android.view.Choreographer>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void onChange(boolean,android.net.Uri)>:<public>:<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy:android.database.ContentObserver>
<android.opengl.GLErrorWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.animation.AccelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.IRotationWatcher.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IRotationWatcher.Stub.Proxy:android.view.IRotationWatcher>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.AudioService: int rescaleIndex(int,int,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Scroller.ViscousFluidInterpolator: void <clinit>()>:<static>:<android.widget.Scroller.ViscousFluidInterpolator:android.view.animation.Interpolator>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: void nCallIntMethod(java.lang.Object,long,int)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.service.notification.NotificationListenerService.RankingMap.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.service.notification.NotificationListenerService.RankingMap.1:android.os.Parcelable.Creator>
<android.view.View: int getBaseline()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.media.MediaRecorder: void release()>:<public native>:<android.media.MediaRecorder>
<android.media.tv.ITvInputHardwareCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub.Proxy:android.media.tv.ITvInputHardwareCallback>
<android.widget.ActivityChooserModel.DataModelPackageMonitor: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel.1)>:<>:<android.widget.ActivityChooserModel.DataModelPackageMonitor:com.android.internal.content.PackageMonitor>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.projection.IMediaProjection.Stub.Proxy: void stop()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.media.AudioTrack: int getPlayState()>:<public>:<android.media.AudioTrack>
<android.service.dreams.DreamService: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.ClosedCaptionWidget.CCLayout: void onMeasure(int,int)>:<protected>:<android.media.ClosedCaptionWidget.CCLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.security.IKeystoreService: int is_hardware_backed(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.preference.PreferenceManager: void setNoCommit(boolean)>:<private>:<android.preference.PreferenceManager>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.widget.RemoteViewsAdapter: boolean isEmpty()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.View: void buildDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioDevice: int getDeviceType()>:<public>:<android.media.AudioDevice>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ActivityChooserModel.ActivityResolveInfo: void <init>(android.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>:<public>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.opengl.GLES20: void glUniform1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.filterpacks.imageproc.SepiaFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.printservice.PrintJob: int getAdvancedIntOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.media.tv.TvInputService.Session: void onSetMain(boolean)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLErrorWrapper: void glColorMask(boolean,boolean,boolean,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLSurfaceView.GLThreadManager: void checkGLDriver(javax.microedition.khronos.opengles.GL10)>:<public>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.print.PrintAttributes: int hashCode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.View.5: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.5:android.util.FloatProperty>
<android.widget.AdapterView: void performAccessibilityActionsOnSelected()>:<private>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.VideoView: void onAttachedToWindow()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.print.PrinterInfo.Builder: boolean isValidStatus(int)>:<private>:<android.print.PrinterInfo.Builder>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager.PendingEvent obtainPendingEventLocked(android.view.InputEvent,java.lang.Object,java.lang.String,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback,android.os.Handler)>:<private>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewDebug.3: void run(java.lang.Void[])>:<public transient>:<android.view.ViewDebug.3:android.view.ViewDebug.ViewOperation>
<android.widget.ZoomControls: void fade(int,float,float)>:<private>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.accounts.OperationCanceledException: void <init>()>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoWidth(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.media.MutableBackgroundColorSpan: void setBackgroundColor(int)>:<public>:<android.media.MutableBackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.media.tv.TvStreamConfig.1: android.media.tv.TvStreamConfig[] newArray(int)>:<public>:<android.media.tv.TvStreamConfig.1:android.os.Parcelable.Creator>
<android.service.wallpaper.WallpaperSettingsActivity: void <init>()>:<public>:<android.service.wallpaper.WallpaperSettingsActivity:android.preference.PreferenceActivity,android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.AbsListView.3: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView.PerformClick)>:<>:<android.widget.AbsListView.3:java.lang.Runnable>
<android.accounts.IAccountManager: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.widget.TextView: void removeMisspelledSpans(android.text.Spannable)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewRootImpl: void dispatchDetachedFromWindow()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaCodecInfo.EncoderCapabilities: int parseBitrateMode(java.lang.String)>:<private static>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.media.TimedText: boolean containsKey(int)>:<private>:<android.media.TimedText>
<android.media.AudioService: boolean access.5000(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.hsm.HwSystemManager: void setOutputFile(android.media.MediaRecorder,long,long)>:<public static>:<android.hsm.HwSystemManager>
<android.widget.AppSecurityPermissions.MyPermissionGroupInfo: android.graphics.drawable.Drawable loadGroupIcon(android.content.pm.PackageManager)>:<public>:<android.widget.AppSecurityPermissions.MyPermissionGroupInfo:android.content.pm.PermissionGroupInfo,android.content.pm.PackageItemInfo>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.animation.Animation: void ensureInterpolator()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.AudioTrack: int native_set_position(int)>:<private final native>:<android.media.AudioTrack>
<android.view.ViewRootImpl: void dispatchResized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService: void access.7900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewPropertyAnimator: boolean hasActions()>:<>:<android.view.ViewPropertyAnimator>
<android.view.ThreadedRenderer.AtlasInitializer: void validateMap(android.content.Context,long[])>:<private static>:<android.view.ThreadedRenderer.AtlasInitializer>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.Window: void invalidatePanelMenu(int)>:<public abstract>:<android.view.Window>
<android.preference.SeekBarVolumizer: android.content.Context access.700(android.preference.SeekBarVolumizer)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.ContentObserver: void dispatchChange(boolean)>:<public final>:<android.database.ContentObserver>
<android.view.ViewDebug: void captureViewLayer(android.view.View,java.io.DataOutputStream,boolean)>:<private static>:<android.view.ViewDebug>
<android.media.session.IActiveSessionsListener.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.IActiveSessionsListener.Stub.Proxy:android.media.session.IActiveSessionsListener>
<android.gesture.GestureLibrary: int getSequenceType()>:<public>:<android.gesture.GestureLibrary>
<android.widget.ScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>:<private static>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaController.CallbackStub: void onEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.tv.ITvInputManager: boolean isSingleSessionActive(int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.GLES20Canvas: void scale(float,float)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.tv.TvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig)>:<public>:<android.media.tv.TvInputManager>
<android.media.session.ISessionController.Stub: android.media.session.ISessionController asInterface(android.os.IBinder)>:<public static>:<android.media.session.ISessionController.Stub:android.os.Binder,android.media.session.ISessionController>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>:<public>:<android.animation.LayoutTransition>
<android.media.MediaRecorder: void setMaxFileSize(long)>:<public native>:<android.media.MediaRecorder>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleNHGT(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.preference.SeekBarVolumizer: android.widget.SeekBar getSeekBar()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String[])>:<public static transient>:<android.media.tv.TvContract.Programs.Genres>
<android.media.MediaPlayer.3: void <init>(android.media.MediaPlayer)>:<>:<android.media.MediaPlayer.3:android.media.SubtitleController.Anchor>
<android.media.Metadata: void <clinit>()>:<static>:<android.media.Metadata>
<android.media.AudioService: android.media.AudioService.VolumeController access.10000(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.IntKeyframeSet: java.lang.Object clone()>:<public volatile>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.media.tv.TvInputManager.SessionCallback: void onVideoUnavailable(android.media.tv.TvInputManager.Session,int)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.print.PrinterInfo: java.lang.String toString()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.print.IWriteResultCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.netdetect.HwCustNetDetectServiceImpl: java.lang.String access.702(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.view.View: float getRotation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputDevice.MotionRange: float getMin()>:<public>:<android.view.InputDevice.MotionRange>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleSPSS(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.SearchView: android.widget.SearchView.SearchAutoComplete access.1200(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewRootImpl: void bringChildToFront(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void handleMessage(android.os.Message)>:<public>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.media.tv.ITvInputSessionCallback.Stub: void <init>()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub:android.os.Binder,android.media.tv.ITvInputSessionCallback>
<android.widget.ProgressBar: int getProgress()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.ClosedCaptionWidget.CCLayout: void update(android.text.SpannableStringBuilder[])>:<>:<android.media.ClosedCaptionWidget.CCLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: void closeAllPanels()>:<public abstract>:<android.view.Window>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.media.MediaRouter.CallbackInfo: void <init>(android.media.MediaRouter.Callback,int,int,android.media.MediaRouter)>:<public>:<android.media.MediaRouter.CallbackInfo>
<android.view.WindowContentFrameStats: java.lang.String toString()>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: int access.002(android.view.inputmethod.InputMethodManager,int)>:<static>:<android.view.inputmethod.InputMethodManager>
<android.widget.ListView: void correctTooLow(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewRootImpl: android.view.Surface access.500(android.view.ViewRootImpl)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl: boolean requestLayoutDuringLayout(android.view.View)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.security.KeyChain: android.content.Intent createInstallIntent()>:<public static>:<android.security.KeyChain>
<huawei.android.app.HwCustEmergDataManager: void <init>()>:<public>:<huawei.android.app.HwCustEmergDataManager>
<android.media.MediaFocusControl: void onRcDisplayInitInfo(android.media.IRemoteControlDisplay,int,int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.WindowContentFrameStats: void <clinit>()>:<static>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.media.tv.ITvInputSession.Stub.Proxy: void setSurface(android.view.Surface)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.service.notification.IStatusBarNotificationHolder.Stub: void <init>()>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub:android.os.Binder,android.service.notification.IStatusBarNotificationHolder>
<android.print.PageRange: int getStart()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentHour()>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.MotionEvent: float getHistoricalX(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.MotionEvent: void setSource(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.Editor.EasyEditPopupWindow: void initContentView()>:<protected>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.security.KeyStore: boolean reset()>:<public>:<android.security.KeyStore>
<android.media.MiniThumbFile: java.lang.String randomAccessFilePath(int)>:<private>:<android.media.MiniThumbFile>
<android.widget.Editor.SelectionModifierCursorController: void show()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.database.CursorWindow: boolean nativePutLong(long,long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.VelocityTracker: void recycle()>:<public>:<android.view.VelocityTracker>
<android.service.media.MediaBrowserService.ServiceBinder: void disconnect(android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.ddm.DdmHandleViewDebug: void <init>()>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.animation.Keyframe.IntKeyframe: void setValue(java.lang.Object)>:<public>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.preference.PreferenceScreen.HwDialog: void show()>:<public>:<android.preference.PreferenceScreen.HwDialog:android.app.Dialog>
<android.media.MediaRouter.VolumeChangeReceiver: void <init>()>:<>:<android.media.MediaRouter.VolumeChangeReceiver:android.content.BroadcastReceiver>
<android.media.tv.TvContentRatingSystemInfo: android.media.tv.TvContentRatingSystemInfo createTvContentRatingSystemInfo(int,android.content.pm.ApplicationInfo)>:<public static final>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.view.SurfaceView.1: void <init>(android.view.SurfaceView)>:<>:<android.view.SurfaceView.1:android.os.Handler>
<android.widget.Scroller: double getSplineDeceleration(float)>:<private>:<android.widget.Scroller>
<android.print.PrintDocumentInfo: int getContentType()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.MediaMetadata: void <init>(android.os.Bundle)>:<private>:<android.media.MediaMetadata:android.os.Parcelable>
<android.widget.Filter: java.lang.Object access.300(android.widget.Filter)>:<static>:<android.widget.Filter>
<android.view.View: int getPaddingTop()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1800(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2600(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.ImageReader: int access.800(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.filterpacks.imageproc.BitmapOverlayFilter: void tearDown(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.BitmapOverlayFilter:android.filterfw.core.Filter>
<android.media.MediaScanner: android.drm.DrmManagerClient access.2900(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.widget.SpellChecker: android.text.style.SpellCheckSpan[] access.700(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.SurfaceControl: void setAlpha(float)>:<public>:<android.view.SurfaceControl>
<android.media.AsyncPlayer.Command: void <init>(android.media.AsyncPlayer.1)>:<>:<android.media.AsyncPlayer.Command>
<android.media.session.ParcelableVolumeInfo: void <clinit>()>:<static>:<android.media.session.ParcelableVolumeInfo:android.os.Parcelable>
<android.view.ViewGroup: void handleFocusGainInternal(int,android.graphics.Rect)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.filterpacks.videosrc.MediaSource.3: void <init>(android.filterpacks.videosrc.MediaSource)>:<>:<android.filterpacks.videosrc.MediaSource.3:android.media.MediaPlayer.OnCompletionListener>
<android.view.ViewParent: int getLayoutDirection()>:<public abstract>:<android.view.ViewParent>
<android.accounts.IAccountManager.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManager.Stub:android.os.Binder,android.accounts.IAccountManager>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>:<>:<android.media.MediaRouter.RouteInfo>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: void addHdmiTvInput(int,android.media.tv.TvInputInfo)>:<public>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.900(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.View.BaseSavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.View.BaseSavedState.1:android.os.Parcelable.Creator>
<android.animation.AnimatorSet.1: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.1:android.animation.AnimatorListenerAdapter>
<android.view.RenderNode: boolean setBottom(int)>:<public>:<android.view.RenderNode>
<android.view.WindowContentFrameStats: int describeContents()>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.media.MediaFocusControl: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.test.AndroidTestCase: void setTestContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.MotionEvent: void <init>()>:<private>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>:<public>:<android.media.AudioRecord>
<android.media.AudioTrack: int getNativeFrameCount()>:<protected>:<android.media.AudioTrack>
<android.view.FocusFinder: void <clinit>()>:<static>:<android.view.FocusFinder>
<android.view.animation.Transformation: boolean hasClipRect()>:<public>:<android.view.animation.Transformation>
<android.database.sqlite.SQLiteConnection: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.tv.TvInputManager.TvInputCallbackRecord.2: void run()>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord.2:java.lang.Runnable>
<android.media.WebVttParser.4: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.4:android.media.WebVttParser.Phase>
<android.widget.DatePickerController: int getFirstDayOfWeek()>:<public abstract>:<android.widget.DatePickerController>
<android.filterpacks.videosrc.CameraSource: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection: void applyBlockGuardPolicy(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.AbsListView.PositionScroller.2: void run()>:<public>:<android.widget.AbsListView.PositionScroller.2:java.lang.Runnable>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>:<public>:<android.animation.LayoutTransition>
<android.view.accessibility.AccessibilityNodeInfo.1: android.view.accessibility.AccessibilityNodeInfo[] newArray(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.1:android.os.Parcelable.Creator>
<android.view.Window: boolean getAllowEnterTransitionOverlap()>:<public>:<android.view.Window>
<android.media.session.ISessionCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.tv.TvInputInfo: boolean isConnectedToHdmiSwitch()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.Window: void setSharedElementReturnTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.media.tv.TvInputInfo.1: void <init>()>:<>:<android.media.tv.TvInputInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.media.IMediaRouterService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.AudioService: void createStreamStates()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy.WindowManagerFuncs)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.accounts.Account: void <clinit>()>:<static>:<android.accounts.Account:android.os.Parcelable>
<android.media.audiopolicy.AudioMixingRule.AttributeMatchCriterion: void <init>(android.media.AudioAttributes,int)>:<>:<android.media.audiopolicy.AudioMixingRule.AttributeMatchCriterion>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioFormat: int getChannelMask()>:<public>:<android.media.AudioFormat>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder[] values()>:<public static>:<android.media.DecoderCapabilities.AudioDecoder:java.lang.Enum>
<android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper:android.service.wallpaper.IWallpaperService.Stub,android.os.Binder>
<android.security.IKeystoreService: int unlock(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.widget.ProgressBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.FastScroller: float getPosFromMotionEvent(float)>:<private>:<android.widget.FastScroller>
<android.widget.AdapterView: long getItemIdAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void pause()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoInternal()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridView: int getHorizontalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils.InsertHelper: long insertInternal(android.content.ContentValues,boolean)>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.view.ViewRootImpl.AsyncInputStage: void dequeue(android.view.ViewRootImpl.QueuedInputEvent,android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.widget.ScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AsyncPlayer: void startSound(android.media.AsyncPlayer.Command)>:<private>:<android.media.AsyncPlayer>
<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.widget.AbsListView.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.service.notification.NotificationListenerService.Ranking: int getVisibilityOverride()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.widget.SearchView: void access.300(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.EdgeEffect: void setColor(int)>:<public>:<android.widget.EdgeEffect>
<android.view.SoundEffectConstants: void <init>()>:<private>:<android.view.SoundEffectConstants>
<android.media.MediaCodecInfo.VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>:<private>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.TextTrackCue: java.lang.StringBuilder appendLinesToBuilder(java.lang.StringBuilder)>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.os.Parcel)>:<private>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.accounts.AccountManager.14: void <init>(android.accounts.AccountManager,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<>:<android.accounts.AccountManager.14:java.lang.Runnable>
<android.view.ThreadedRenderer: void notifyFramePending()>:<public>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaActionSound: void release()>:<public>:<android.media.MediaActionSound>
<android.database.sqlite.SQLiteConnection: void nativeClose(long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.preference.PreferenceActivity: void <init>()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.printservice.IPrintServiceClient.Stub.Proxy: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.media.tv.TvInputService.HardwareSession.1: void onSessionCreated(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputService.HardwareSession.1:android.media.tv.TvInputManager.SessionCallback>
<android.widget.TextView: boolean getIncludeFontPadding()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.TextureView: void applyTransformMatrix()>:<private>:<android.view.TextureView:android.view.View>
<android.media.MediaCodec: java.nio.ByteBuffer getBuffer(boolean,int)>:<private final native>:<android.media.MediaCodec>
<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.widget.TextView.Marquee: byte access.402(android.widget.TextView.Marquee,byte)>:<static>:<android.widget.TextView.Marquee>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.media.MediaRouterClientState: void <init>(android.os.Parcel)>:<>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.widget.Editor: boolean hasInsertionController()>:<>:<android.widget.Editor>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void access.900(android.widget.CalendarView.LegacyCalendarViewDelegate,android.widget.AbsListView,int,int,int)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.Spinner.2: void <init>(android.widget.Spinner)>:<>:<android.widget.Spinner.2:android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.GLES20Canvas: float[] getPointStorage()>:<private>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.ListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.media.MediaBrowserService.Result: void <init>(android.service.media.MediaBrowserService,java.lang.Object)>:<>:<android.service.media.MediaBrowserService.Result>
<android.media.MediaCodec: java.nio.ByteBuffer[] getBuffers(boolean)>:<private final native>:<android.media.MediaCodec>
<android.widget.Switch.1: void setValue(android.widget.Switch,float)>:<public>:<android.widget.Switch.1:android.util.FloatProperty>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.IWindowManager.Stub.Proxy: int getAppOrientation(android.view.IApplicationToken)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ValueAnimator: void updateScaledDuration()>:<private>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.RemoteControlClient: void setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)>:<public>:<android.media.RemoteControlClient>
<android.database.CursorWrapper: java.lang.String getString(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.ScaleGestureDetector.1: void <init>(android.view.ScaleGestureDetector)>:<>:<android.view.ScaleGestureDetector.1:android.view.GestureDetector.SimpleOnGestureListener>
<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask: void <init>(android.netdetect.HwCustNetDetectServiceImpl,java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.CancelWebDetectTimerTask:java.util.TimerTask>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<public static>:<android.opengl.EGL14>
<android.media.session.PlaybackState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.session.PlaybackState.1:android.os.Parcelable.Creator>
<android.view.ViewGroupOverlay: void remove(android.view.View)>:<public>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.animation.LayoutTransition: void runDisappearingTransition(android.view.ViewGroup,android.view.View)>:<private>:<android.animation.LayoutTransition>
<android.media.tv.ITvInputClient: void onChannelRetuned(android.net.Uri,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.opengl.GLLogWrapper: void doElement(java.lang.StringBuilder,int,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GhostView: void setVisibility(int)>:<public>:<android.view.GhostView:android.view.View>
<android.media.SubtitleTrack.Run: void <init>(android.media.SubtitleTrack.1)>:<>:<android.media.SubtitleTrack.Run>
<android.media.audiofx.AudioEffect: java.lang.Object[] native_query_pre_processing(int)>:<private static native>:<android.media.audiofx.AudioEffect>
<android.widget.ListView: boolean showingBottomFadingEdge()>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.VolumePreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.VolumePreference.SavedState.1:android.os.Parcelable.Creator>
<android.widget.SearchView: boolean isLandscapeMode(android.content.Context)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaDrm: void removeKeys(byte[])>:<public native>:<android.media.MediaDrm>
<android.opengl.EGLLogWrapper: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewGroup: boolean getClipChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.EGLDisplay: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.media.audiofx.Virtualizer: boolean getSpeakerAngles(int,int,int[])>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()>:<>:<android.preference.PreferenceManager>
<android.view.KeyEvent: android.view.KeyEvent createFromParcelBody(android.os.Parcel)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.gesture.GestureLibraries: void <init>()>:<private>:<android.gesture.GestureLibraries>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLLogWrapper: void returns(java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>:<private>:<android.view.AccessibilityInteractionController>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.RemoteController: void onNewMediaMetadata(android.media.MediaMetadata)>:<private>:<android.media.RemoteController>
<android.media.WebVttRenderingWidget: android.view.accessibility.CaptioningManager.CaptionStyle access.100(android.media.WebVttRenderingWidget)>:<static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.RelativeLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.preference.Preference: void setSelectable(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.security.IKeyChainService: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.media.MediaInserter: void flushAll()>:<public>:<android.media.MediaInserter>
<android.view.WindowInsets: void <init>(android.graphics.Rect)>:<public>:<android.view.WindowInsets>
<android.preference.SeekBarVolumizer: void onStopTrackingTouch(android.widget.SeekBar)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.tv.ITvInputClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.accounts.ChooseTypeAndAccountActivity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.widget.ZoomButtonsController: void refreshPositioningVariables()>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.service.voice.VoiceInteractionSessionService: void doNewSession(android.os.IBinder,android.os.Bundle)>:<>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController.1)>:<>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.widget.VideoView: int access.1000(android.widget.VideoView)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.IOnKeyguardExitResult.Stub: void <init>()>:<public>:<android.view.IOnKeyguardExitResult.Stub:android.os.Binder,android.view.IOnKeyguardExitResult>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.session.MediaSession: android.media.session.MediaController getController()>:<public>:<android.media.session.MediaSession>
<android.database.MatrixCursor: java.lang.String[] access.200(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.TabWidget: void setDividerDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.FastScroller: boolean isPointInsideX(float)>:<private>:<android.widget.FastScroller>
<android.opengl.EGLLogWrapper: void <init>(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.inputmethod.ExtractedText.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.ExtractedText.1:android.os.Parcelable.Creator>
<android.widget.Editor.HandleView: float getIdealVerticalOffset()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.widget.RelativeLayout.DependencyGraph: void clear()>:<>:<android.widget.RelativeLayout.DependencyGraph>
<android.view.inputmethod.InputMethodManager.PendingEvent: void recycle()>:<public>:<android.view.inputmethod.InputMethodManager.PendingEvent:java.lang.Runnable>
<android.view.FocusFinder.1: void <init>()>:<>:<android.view.FocusFinder.1:java.lang.ThreadLocal>
<android.view.textservice.TextInfo.1: void <init>()>:<>:<android.view.textservice.TextInfo.1:android.os.Parcelable.Creator>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.session.MediaSession.CallbackStub: void onPlay()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postSessionCreated(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextChange(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<android.media.audiofx.Visualizer: int getMeasurementMode()>:<public>:<android.media.audiofx.Visualizer>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.widget.TabWidget: android.view.View getSelectedTabView()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLLogWrapper: java.lang.String getHintMode(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.graphics.Typeface getTypeface()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.opengl.GLLogWrapper: void glNormal3x(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>:<>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaExtractor: boolean advance()>:<public native>:<android.media.MediaExtractor>
<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] getArcs()>:<public>:<android.widget.GridLayout.Axis>
<android.view.IInputFilterHost: void sendInputEvent(android.view.InputEvent,int)>:<public abstract>:<android.view.IInputFilterHost:android.os.IInterface>
<android.media.session.ParcelableVolumeInfo: void <init>(android.os.Parcel)>:<public>:<android.media.session.ParcelableVolumeInfo:android.os.Parcelable>
<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.TextView: void onAttachedToWindow()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor.HandleView: int getHotspotY()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.IWindow: void dispatchGetNewSurface()>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.media.MediaRouter.UserRouteInfo: void setName(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.GLES20Canvas: int getWidth()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getAspectRatioRange(boolean)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.accounts.AccountManager.BaseFutureTask: java.lang.Object bundleToResult(android.os.Bundle)>:<public abstract>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.widget.TextView: void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray.1:android.os.Parcelable.Creator>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>:<public>:<android.media.JetPlayer>
<android.view.VelocityTracker.Estimator: float estimateX(float)>:<public>:<android.view.VelocityTracker.Estimator>
<android.service.notification.StatusBarNotification: java.lang.Object clone()>:<public volatile>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.SearchView: android.widget.ImageView access.800(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.database.sqlite.SQLiteConnectionPool: java.lang.Object access.000(android.database.sqlite.SQLiteConnectionPool)>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(android.os.Parcel)>:<>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.LayoutInflater.BlinkLayout: boolean access.100(android.view.LayoutInflater.BlinkLayout)>:<static>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.media.MediaRouterClientState.RouteInfo: java.lang.String toString()>:<public>:<android.media.MediaRouterClientState.RouteInfo:android.os.Parcelable>
<android.view.GLES20Canvas: int nPrepareDirty(long,int,int,int,int,boolean)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.PlayerRecord: void resetPlaybackInfo()>:<public>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.view.View: int getMeasuredHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.MediaController: boolean access.602(android.widget.MediaController,boolean)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: void onTouchModeChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.ISessionControllerCallback: void onVolumeInfoChanged(android.media.session.ParcelableVolumeInfo)>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.NumberPicker.Formatter: java.lang.String format(int)>:<public abstract>:<android.widget.NumberPicker.Formatter>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean save()>:<public>:<android.gesture.GestureLibraries.ResourceGestureLibrary:android.gesture.GestureLibrary>
<android.view.GestureDetector.GestureHandler: void handleMessage(android.os.Message)>:<public>:<android.view.GestureDetector.GestureHandler:android.os.Handler>
<android.widget.ExpandableListView: int getFlatPositionForConnector(int)>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaFocusControl: void access.1300(android.media.MediaFocusControl,android.media.IRemoteControlDisplay,int,int)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.ActionMenuPresenter: android.view.View access.500(android.widget.ActionMenuPresenter)>:<static>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.animation.AnimatorSet.1: void <init>(android.animation.AnimatorSet,java.util.ArrayList)>:<>:<android.animation.AnimatorSet.1:android.animation.AnimatorListenerAdapter>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>:<public native>:<android.media.MediaDrm>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRates()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void queueRequestedPositionToLoad(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.projection.MediaProjectionInfo: void <init>(android.os.Parcel)>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.media.RemoteControlClient: void <clinit>()>:<static>:<android.media.RemoteControlClient>
<android.gesture.GestureUtils: float computeStraightness(float[],float)>:<static>:<android.gesture.GestureUtils>
<android.view.animation.AccelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.session.MediaSession.Callback: void onSeekTo(long)>:<public>:<android.media.session.MediaSession.Callback>
<android.view.View: void setNextFocusForwardId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmRegister: void <init>()>:<private>:<android.ddm.DdmRegister>
<android.widget.ListPopupWindow.1: android.widget.ListPopupWindow getPopup()>:<public>:<android.widget.ListPopupWindow.1:android.widget.ListPopupWindow.ForwardingListener>
<android.widget.GridView: int getColumnWidth()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.CCParser: void swapMemory()>:<private>:<android.media.CCParser>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.CCParser.PAC: int getRow()>:<>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.database.CursorJoiner: boolean hasNext()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.WebVttRenderingWidget: void setSize(int,int)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.view.MotionEvent: int nativeGetHistorySize(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewRootImpl.InputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.opengl.GLES20: void glBlendEquation(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.netdetect.HwCustNetDetectServiceImpl.1: void onFailure(int)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl.1:android.net.wifi.HwCustActionListener>
<android.service.dreams.DreamService: void wakeUp()>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaRouter: void dispatchRouteVolumeChanged(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.widget.Editor: void updateCursorsPositions()>:<>:<android.widget.Editor>
<android.widget.SpellChecker: int[] access.800(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.accessibility.AccessibilityInteractionClient: android.os.Message getSameProcessMessageAndClear()>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.IApplicationToken.Stub.Proxy: long getKeyDispatchingTimeout()>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.view.View: boolean pointInView(float,float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.LinearInterpolator: void <init>()>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.AudioService: android.os.Looper access.1502(android.media.AudioService,android.os.Looper)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Editor.HandleView: boolean isShowing()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.IPrintDocumentAdapter: void start()>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.animation.LayoutTransition: long getStartDelay(int)>:<public>:<android.animation.LayoutTransition>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.media.AmrInputStream: long GsmAmrEncoderNew()>:<private static native>:<android.media.AmrInputStream:java.io.InputStream>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController access.100(android.view.ViewGroup)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.DatePickerCalendarDelegate: int getYear()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.preference.PreferenceManager.OnPreferenceTreeClickListener: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public abstract>:<android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.filterpacks.videoproc.BackDropperFilter: void <clinit>()>:<static>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>:<private static>:<android.view.WindowManagerGlobal>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.media.MediaDescription,int)>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.view.View.OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.media.AudioRecord: int getChannelConfiguration()>:<public>:<android.media.AudioRecord>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.preference.SeekBarPreference.SavedState.1: void <init>()>:<>:<android.preference.SeekBarPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.animation.AnimationSet: android.view.animation.Animation clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Editor.TextViewPositionListener: void updatePosition(int,int,boolean,boolean)>:<public abstract>:<android.widget.Editor.TextViewPositionListener>
<android.media.session.ISessionController.Stub.Proxy: void play()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.database.CursorWindow: boolean isLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<huawei.android.app.HwCustEmergDataManagerImpl: boolean isEmergencyMountState()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl:huawei.android.app.HwCustEmergDataManager>
<android.view.MotionEvent.1: android.view.MotionEvent createFromParcel(android.os.Parcel)>:<public>:<android.view.MotionEvent.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceManager: void registerOnActivityDestroyListener(android.preference.PreferenceManager.OnActivityDestroyListener)>:<>:<android.preference.PreferenceManager>
<android.view.GLES20Canvas: void nGetMatrix(long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.tv.TvView: int access.200(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.VideoView: int getBufferPercentage()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.tv.TvTrackInfo: int getType()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.media.IRemoteDisplayProvider.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteDisplayProvider.Stub.Proxy:android.media.IRemoteDisplayProvider>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.filterpacks.text.StringLogger: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.text.StringLogger:android.filterfw.core.Filter>
<android.preference.PreferenceFragment: void bindPreferences()>:<private>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.TextureView: void nUnlockCanvasAndPost(long,android.graphics.Canvas)>:<private static native>:<android.view.TextureView:android.view.View>
<android.widget.Editor.InsertionHandleView: int getCurrentCursorOffset()>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.MediaRouter: void addRouteStatic(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.media.tv.TvView: android.media.tv.TvView.TvInputCallback access.1600(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.View: void resetPressedState()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.PropertyValuesHolder: void access.1000(java.lang.Object,long,int,int)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.Window: void setWindowAnimations(int)>:<public>:<android.view.Window>
<android.widget.AbsListView.InputConnectionWrapper: boolean performContextMenuAction(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.widget.TextView: void setTextScaleX(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.printservice.PrintService: int access.100(android.printservice.PrintService)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewDebug: void exportUnrolledFlags(java.io.BufferedWriter,android.view.ViewDebug.FlagToString[],int,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.view.WindowManagerImpl: android.view.WindowManagerImpl createLocalWindowManager(android.view.Window)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.media.AudioRecord: void audioBuffSizeCheck(int)>:<private>:<android.media.AudioRecord>
<android.animation.PropertyValuesHolder: long nGetMultipleFloatMethod(java.lang.Class,java.lang.String,int)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.ClosedCaptionWidget: void setSize(int,int)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.filterpacks.videoproc.BackDropperFilter: int pyramidLevel(int)>:<private>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.media.browse.MediaBrowser.1: void run()>:<public>:<android.media.browse.MediaBrowser.1:java.lang.Runnable>
<android.database.sqlite.SQLiteDatabase: void collectDbStats(java.util.ArrayList)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.Spinner.SpinnerPopup: void show(int,int)>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.printservice.PrintServiceInfo: void <init>(android.content.pm.ResolveInfo,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.LayoutTransition.3: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public>:<android.animation.LayoutTransition.3:android.view.View.OnLayoutChangeListener>
<android.view.Choreographer: void dump(java.lang.String,java.io.PrintWriter)>:<>:<android.view.Choreographer>
<android.view.View: void setAccessibilitySelection(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.ILayoutResultCallback.Stub: android.print.ILayoutResultCallback asInterface(android.os.IBinder)>:<public static>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.view.ViewGroup: void <init>(android.content.Context)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobStateResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.session.MediaSession.Token: int describeContents()>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.media.MediaPlayer: void _setDataSource(java.io.FileDescriptor,long,long)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.RemoteViewsListAdapter: int getViewTypeCount()>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.widget.AdapterView: int getFirstVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.print.PrinterDiscoverySession: void access.100(android.print.PrinterDiscoverySession,java.util.List)>:<static>:<android.print.PrinterDiscoverySession>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.InputEventConsistencyVerifier.KeyState: void recycle()>:<public>:<android.view.InputEventConsistencyVerifier.KeyState>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>:<public>:<android.media.AsyncPlayer>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.media.tv.TvInputService.Session: void setMain(boolean)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.database.sqlite.SQLiteConnection.OperationLog: java.lang.String describeCurrentOperation()>:<public>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.NumberPicker.PressedStateHelper: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.PressedStateHelper:java.lang.Runnable>
<android.view.IWindowManager: boolean isKeyguardSecure()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.IRingtonePlayer.Stub: void <init>()>:<public>:<android.media.IRingtonePlayer.Stub:android.os.Binder,android.media.IRingtonePlayer>
<android.widget.TextView.ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.media.tv.TvInputManager.SessionCallbackRecord.9: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,android.media.tv.TvContentRating)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.9:java.lang.Runnable>
<android.media.MediaRouter.RouteInfo: boolean isDefault()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.MediaPlayer: void setAudioStreamType(int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>:<public static>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.view.TextureView: void setOpaque(boolean)>:<public>:<android.view.TextureView:android.view.View>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.MediaScannerClient: void setMimeType(java.lang.String)>:<public abstract>:<android.media.MediaScannerClient>
<android.media.audiofx.Visualizer: int getScalingMode()>:<public>:<android.media.audiofx.Visualizer>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.content.Context,int,boolean)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.widget.TextView: void setSingleLine()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodecInfo: void <clinit>()>:<static>:<android.media.MediaCodecInfo>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaScannerConnection.ClientProxy: void onScanCompleted(java.lang.String,android.net.Uri)>:<public>:<android.media.MediaScannerConnection.ClientProxy:android.media.MediaScannerConnection.MediaScannerConnectionClient>
<android.view.accessibility.AccessibilityRecord: void <init>()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: boolean isStartBoundary(int)>:<private>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.tv.ITvInputClient: void onVideoUnavailable(int,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.widget.DatePickerCalendarDelegate: int getMaxMonth()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.security.SystemKeyStore: java.io.File getKeyFile(java.lang.String)>:<private>:<android.security.SystemKeyStore>
<android.database.sqlite.SQLiteDatabase: void dump(android.util.Printer,boolean)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioService.VolumeStreamState: int access.4600(android.media.AudioService.VolumeStreamState)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.view.accessibility.AccessibilityEvent: void clear()>:<protected>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.filterpacks.ui.SurfaceRenderFilter: void setupPorts()>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.animation.LayoutTransition: java.util.LinkedHashMap access.1800(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.view.View: int combineMeasuredStates(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void onServiceConnected(android.os.IBinder)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.view.ThreadedRenderer: long nCreateTextureLayer(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.hardware.hdmi.HdmiDeviceInfo,java.lang.String,java.lang.String,android.net.Uri)>:<public static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.RemoteController.RcDisplay: void setTransportControlInfo(int,int,int)>:<public>:<android.media.RemoteController.RcDisplay:android.media.IRemoteControlDisplay.Stub,android.os.Binder>
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.session.MediaSession: void dispatchStop()>:<private>:<android.media.session.MediaSession>
<android.media.CCParser.PAC: void <init>(int,int,int,int)>:<>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.RadialTimePickerView: void setCurrentMinute(int)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ViewGroup: void resolveDrawables()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.audiofx.AudioEffect.NativeEventHandler: void <init>(android.media.audiofx.AudioEffect,android.media.audiofx.AudioEffect,android.os.Looper)>:<public>:<android.media.audiofx.AudioEffect.NativeEventHandler:android.os.Handler>
<android.animation.ValueAnimator: void <clinit>()>:<static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.service.media.MediaBrowserService.ServiceBinder: void connect(java.lang.String,android.os.Bundle,android.service.media.IMediaBrowserServiceCallbacks)>:<public>:<android.service.media.MediaBrowserService.ServiceBinder:android.service.media.IMediaBrowserService.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: void glRotatex(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy: android.view.WindowManagerPolicy.WindowState getWinShowWhenLockedLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.MediaMetadataEditor: void apply()>:<public abstract>:<android.media.MediaMetadataEditor>
<android.view.WindowManagerPolicy: boolean inKeyguardRestrictedKeyInputMode()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.View: boolean onSetAlpha(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent.PointerProperties)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView: void onAttachedToWindow()>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.DecoderCapabilities.VideoDecoder: void <clinit>()>:<static>:<android.media.DecoderCapabilities.VideoDecoder:java.lang.Enum>
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelMask(int)>:<public>:<android.media.AudioFormat.Builder>
<android.widget.StackView.StackSlider: void setYProgress(float)>:<public>:<android.widget.StackView.StackSlider>
<android.media.MediaRouter.RouteInfo: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.MediaFocusControl: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.IRemoteControlClient.Stub.Proxy: void informationRequestForDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.widget.RemoteViews.SetPendingIntentTemplate.1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.RemoteViews.SetPendingIntentTemplate.1:android.widget.AdapterView.OnItemClickListener>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void cancel(android.view.MotionEvent)>:<public>:<android.view.ViewRootImpl.SyntheticTrackballHandler>
<android.view.Menu: void setQwertyMode(boolean)>:<public abstract>:<android.view.Menu>
<android.print.PrinterCapabilitiesInfo: java.util.List access.202(android.print.PrinterCapabilitiesInfo,java.util.List)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteConnection: boolean isPreparedStatementInCache(java.lang.String)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.ViewParent: void onStopNestedScroll(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.view.Nsd: void <clinit>()>:<static>:<android.view.Nsd>
<android.preference.MultiCheckPreference: void setValue(int,boolean)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLErrorWrapper: void glPushMatrix()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: void recomputePadding()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GLES20Canvas: void nDestroyRenderer(long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.service.dreams.IDreamManager.Stub.Proxy: void testDream(android.content.ComponentName)>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.widget.RadioGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews.ViewGroupAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.media.ImageReader.ListenerHandler: void <init>(android.media.ImageReader,android.os.Looper)>:<public>:<android.media.ImageReader.ListenerHandler:android.os.Handler>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.sqlite.SQLiteSession: void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.TimedText: void readHyperText(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,int[])>:<public transient>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.view.Choreographer: void doScheduleCallback(int)>:<>:<android.view.Choreographer>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getDefaultRoute()>:<public>:<android.media.MediaRouter>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>:<public abstract>:<android.preference.PreferenceManager.OnActivityResultListener>
<android.security.IKeyChainService.Stub.Proxy: void installCaCertificate(byte[])>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.database.ContentObserver.NotificationRunnable: void run()>:<public>:<android.database.ContentObserver.NotificationRunnable:java.lang.Runnable>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void <init>()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.media.SubtitleTrack.CueList.EntryIterator: boolean hasNext()>:<public>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar getMaxDate()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface,int,int)>:<public static>:<android.view.SurfaceControl>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.widget.Gallery: void setUpChild(android.view.View,int,int,boolean)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.tv.TvInputInfo: void <init>(android.os.Parcel)>:<private>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.DecoderCapabilities: void <clinit>()>:<static>:<android.media.DecoderCapabilities>
<android.view.accessibility.AccessibilityInteractionClient: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.media.IRemoteControlDisplay.Stub.Proxy: void setMetadata(int,android.os.Bundle)>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.print.IPrintManager.Stub.Proxy: void cancelPrintJob(android.print.PrintJobId,int,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>:<public abstract>:<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener>
<android.view.View: void setY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvView: void access.400(android.media.tv.TvView,int,int,int)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.filterpacks.imageproc.RedEyeFilter: void updateProgramParams()>:<private>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>:<public abstract>:<android.view.LayoutInflater>
<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.service.wallpaper.IWallpaperEngine.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub:android.os.Binder,android.service.wallpaper.IWallpaperEngine>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>:<public static>:<android.view.LayoutInflater>
<android.print.IPrintManager.Stub: void <init>()>:<public>:<android.print.IPrintManager.Stub:android.os.Binder,android.print.IPrintManager>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: void setSealed(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.View: boolean isInLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.WebVttRenderingWidget.RegionLayout: void prepForPrune()>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: void setFragment(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Display: java.lang.String getName()>:<public>:<android.view.Display>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioService.SetModeDeathHandler: android.os.IBinder getBinder()>:<public>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.opengl.GLES10: void glTranslatef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvTrackInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.tv.TvTrackInfo.1:android.os.Parcelable.Creator>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView,android.widget.StackView.StackSlider)>:<public>:<android.widget.StackView.StackSlider>
<android.media.MediaScanner: boolean access.2402(android.media.MediaScanner,boolean)>:<static>:<android.media.MediaScanner>
<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.InputMethodSubtype: void <init>(android.os.Parcel)>:<>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.AudioService: void doSetMasterVolume(float,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.HardwareLayer: void nSetTransform(long,long)>:<private static native>:<android.view.HardwareLayer>
<android.widget.AutoCompleteTextView: void buildImeCompletions()>:<private>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Surface: android.graphics.Matrix access.100(android.view.Surface)>:<static>:<android.view.Surface:android.os.Parcelable>
<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.voice.IVoiceInteractionSessionService.Stub.Proxy:android.service.voice.IVoiceInteractionSessionService>
<android.view.View: android.os.IBinder getWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.BaseFutureTask.Response: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.widget.DayPickerView: void setMonthDisplayed(java.util.Calendar)>:<protected>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.media.PlayerRecord: void setMediaFocusControl(android.media.MediaFocusControl)>:<protected static>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.MediaFocusControl: int checkRcdRegistrationAuthorization(android.content.ComponentName)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.print.PrintJobInfo.Builder: void setAttributes(android.print.PrintAttributes)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioRecord: int read(byte[],int,int)>:<public>:<android.media.AudioRecord>
<android.media.projection.IMediaProjection.Stub.Proxy: void registerCallback(android.media.projection.IMediaProjectionCallback)>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.security.KeyStore: boolean isEmpty()>:<public>:<android.security.KeyStore>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.print.PrintAttributes: void <clinit>()>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.View.7: java.lang.Float get(android.view.View)>:<public>:<android.view.View.7:android.util.FloatProperty>
<android.print.PrinterInfo: void <init>(android.os.Parcel,android.print.PrinterInfo.1)>:<>:<android.print.PrinterInfo:android.os.Parcelable>
<android.view.WindowManagerPolicy.WindowState: android.graphics.RectF getShownFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.widget.DatePickerCalendarDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.ScrollView: boolean canScroll()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.EdgeEffect: void <init>(android.content.Context)>:<public>:<android.widget.EdgeEffect>
<android.opengl.GLErrorWrapper: void glFrustumf(float,float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ZoomButtonsController: boolean access.000(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.ViewRootImpl: void initAPS(android.content.Context,int,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.IPrintDocumentAdapter.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub:android.os.Binder,android.print.IPrintDocumentAdapter>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.InputDevice: void <clinit>()>:<static>:<android.view.InputDevice:android.os.Parcelable>
<android.preference.PreferenceFragment: boolean hasListView()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.AudioService.3: void <init>(android.media.AudioService,android.media.IVolumeController)>:<>:<android.media.AudioService.3:android.os.IBinder.DeathRecipient>
<android.opengl.GLLogWrapper: void glBindRenderbufferOES(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.JetPlayer: boolean native_triggerClip(int)>:<private final native>:<android.media.JetPlayer>
<android.widget.VideoView.5: boolean onError(android.media.MediaPlayer,int,int)>:<public>:<android.widget.VideoView.5:android.media.MediaPlayer.OnErrorListener>
<android.media.IMediaRouterService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.media.MediaCodec: void release()>:<public final>:<android.media.MediaCodec>
<android.view.View: int getTopPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor.SelectionModifierCursorController: void onDetached()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.widget.TimePickerSpinnerDelegate: void updateHeaderMinute(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.tv.ITvInputManager: void relayoutOverlayView(android.os.IBinder,android.graphics.Rect,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.service.dreams.IDreamService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.dreams.IDreamService.Stub:android.os.Binder,android.service.dreams.IDreamService>
<android.media.AudioService: android.content.ContentResolver access.2700(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ThreadedRenderer: void stopDrawing()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress: void <init>(android.widget.ListPopupWindow.ForwardingListener,android.widget.ListPopupWindow.1)>:<>:<android.widget.ListPopupWindow.ForwardingListener.TriggerLongPress:java.lang.Runnable>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.LayoutAnimationController>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.dreams.IDreamService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.view.ThreadedRenderer: void nNotifyFramePending(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.browse.MediaBrowser.MediaItem: int describeContents()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.service.trust.ITrustAgentService: void setTrustAgentFeaturesEnabled(android.os.Bundle,android.os.IBinder)>:<public abstract>:<android.service.trust.ITrustAgentService:android.os.IInterface>
<android.view.Nsd: android.view.ViewGroup getCaseVGInLauncherIdle(android.view.View)>:<private static>:<android.view.Nsd>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Spinner.DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.MediaRouter.RouteInfo.1: void dispatchRemoteVolumeUpdate(int,int)>:<public>:<android.media.MediaRouter.RouteInfo.1:android.media.IRemoteVolumeObserver.Stub,android.os.Binder>
<android.widget.AutoCompleteTextView.DropDownItemClickListener: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView.1)>:<>:<android.widget.AutoCompleteTextView.DropDownItemClickListener:android.widget.AdapterView.OnItemClickListener>
<android.view.IApplicationToken.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IApplicationToken.Stub:android.os.Binder,android.view.IApplicationToken>
<android.view.OrientationListener: void onSensorChanged(int,float[])>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.media.tv.TvView: android.media.tv.TvView.MySessionCallback access.800(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition(int)>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.media.ImageReader.SurfaceImage: boolean access.1100(android.media.ImageReader.SurfaceImage)>:<static>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.media.AudioTrack: int native_get_position()>:<private final native>:<android.media.AudioTrack>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.IRingtonePlayer: void stopAsync()>:<public abstract>:<android.media.IRingtonePlayer:android.os.IInterface>
<android.widget.ListPopupWindow.2: void run()>:<public>:<android.widget.ListPopupWindow.2:java.lang.Runnable>
<android.media.IAudioService: void unregisterAudioFocusClient(java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.AudioService.VolumeController: void setLayoutDirection(int)>:<public>:<android.media.AudioService.VolumeController>
<android.widget.RemoteViewsAdapter: int getConvertViewTypeId(android.view.View)>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>:<public abstract>:<android.view.View.OnLongClickListener>
<android.view.WindowManagerPolicy.WindowState: boolean isAnimatingLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.service.wallpaper.WallpaperService.Engine.2: void setFixedSize(int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.NumberPicker access.500(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.Editor: boolean isInSelectionActionMode()>:<protected>:<android.widget.Editor>
<android.opengl.GLSurfaceView.LogWriter: void flush()>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.media.Rating: int getRatingStyle()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.view.ViewRootImpl: void requestFitSystemWindows()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager: java.util.List access.1600(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.media.MediaDrm: void restoreKeys(byte[],byte[])>:<public native>:<android.media.MediaDrm>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<androidhwext.R.styleable: void <init>()>:<public>:<androidhwext.R.styleable>
<android.media.RemoteDisplay: void resume()>:<public>:<android.media.RemoteDisplay>
<android.view.Display: boolean isValid()>:<public>:<android.view.Display>
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDirectCursorDriver:android.database.sqlite.SQLiteCursorDriver>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.session.PlaybackState.CustomAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>:<public static>:<android.view.ViewConfiguration>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.media.tv.TvInputManager.Session.PendingEvent: void run()>:<public>:<android.media.tv.TvInputManager.Session.PendingEvent:java.lang.Runnable>
<android.media.tv.TvInputManager.1: void onSessionReleased(int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.media.AudioRecord: void audioParamCheck(int,int,int)>:<private>:<android.media.AudioRecord>
<android.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.View: void postInvalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.browse.MediaBrowser.ServiceCallbacks: void <init>(android.media.browse.MediaBrowser)>:<public>:<android.media.browse.MediaBrowser.ServiceCallbacks:android.service.media.IMediaBrowserServiceCallbacks.Stub,android.os.Binder>
<android.media.IAudioService.Stub.Proxy: void setStreamMute(int,boolean,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.sqlite.SQLiteCursor: void deactivate()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>()>:<public>:<android.filterpacks.videosink.MediaRecorderStopException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.filterpacks.videosrc.SurfaceTextureTarget: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.media.audiofx.Visualizer: void <clinit>()>:<static>:<android.media.audiofx.Visualizer>
<android.preference.PreferenceGroupAdapter: android.preference.PreferenceGroupAdapter.PreferenceLayout createPreferenceLayout(android.preference.Preference,android.preference.PreferenceGroupAdapter.PreferenceLayout)>:<private>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.inputmethod.SparseRectFArray: java.lang.String toString()>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager.PrintDocumentAdapterDelegate: android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback access.202(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.widget.ActionMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: void setWeekDayTextAppearance(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.ListPreference: int getValueIndex()>:<private>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.GridLayout: android.widget.GridLayout.Alignment getAlignment(int,boolean)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputManager.SessionCallbackRecord.1: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,android.media.tv.TvInputManager.Session)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.1:java.lang.Runnable>
<android.view.IWindowSession.Stub.Proxy: boolean getInTouchMode()>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onLocaleChanged(java.util.Locale)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.dreams.DreamService: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.security.IKeystoreService: byte[] get(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.MediaPlayer: int getVideoHeight()>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.TextView: int getAccessibilitySelectionStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.printservice.PrintService: void onConnected()>:<protected>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.WebVttRenderingWidget: void setVisible(boolean)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.Window: void destroy()>:<public final>:<android.view.Window>
<android.media.SubtitleTrack: void updateView(java.util.Vector)>:<public abstract>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.media.SoundPool: void setLoop(int,int)>:<public final>:<android.media.SoundPool>
<android.database.sqlite.SQLiteConnectionPool.1: void onCancel()>:<public>:<android.database.sqlite.SQLiteConnectionPool.1:android.os.CancellationSignal.OnCancelListener>
<android.animation.StateListAnimator.1: void <init>(android.animation.StateListAnimator)>:<>:<android.animation.StateListAnimator.1:android.animation.AnimatorListenerAdapter>
<android.widget.CursorAdapter.ChangeObserver: void onChange(boolean)>:<public>:<android.widget.CursorAdapter.ChangeObserver:android.database.ContentObserver>
<android.widget.TextView: boolean hasSelection()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<androidhwext.R.string: void <init>()>:<public>:<androidhwext.R.string>
<android.view.View.10: void setValue(android.view.View,float)>:<public>:<android.view.View.10:android.util.FloatProperty>
<android.media.WebVttRenderingWidget: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.tv.TvInputManager.1: void onVideoUnavailable(int,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.view.View: float getPivotY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManagerPolicy: int adjustSystemUiVisibilityLw(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.accounts.AbstractAccountAuthenticator: void access.000(android.accounts.AbstractAccountAuthenticator)>:<static>:<android.accounts.AbstractAccountAuthenticator>
<android.print.PrintManager: void removePrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>:<public>:<android.print.PrintManager>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy: void onProcessed(int)>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub.Proxy:android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.audiopolicy.AudioMix.Builder: void <init>(android.media.audiopolicy.AudioMixingRule)>:<public>:<android.media.audiopolicy.AudioMix.Builder>
<android.media.session.MediaController.PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.print.IPrintManager.Stub.Proxy: void stopPrinterStateTracking(android.print.PrinterId,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.ViewParent: int getTextDirection()>:<public abstract>:<android.view.ViewParent>
<android.database.Cursor: boolean isAfterLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.View: void setPadding(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: int getAccessibilitySelectionEnd()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountManager: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: void openInner()>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ViewRootImpl.ViewRootHandler: void handleMessage(android.os.Message)>:<public>:<android.view.ViewRootImpl.ViewRootHandler:android.os.Handler>
<android.accounts.AccountManager.BaseFutureTask.Response: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo,int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.ViewGroup: void cancelTouchTarget(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.print.IPrintSpoolerClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.tv.ITvInputSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.service.media.IMediaBrowserService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.media.IMediaBrowserService.Stub.Proxy:android.service.media.IMediaBrowserService>
<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object access.100(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.media.AsyncPlayer: void releaseWakeLock()>:<private>:<android.media.AsyncPlayer>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: boolean onMediaButtonEvent(android.content.Intent)>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.view.ViewGroup.ViewLocationHolder: void clear()>:<private>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.widget.ProgressBar: float getScale(float)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.media.AbsAudioSystem: void <init>()>:<public>:<android.media.AbsAudioSystem>
<android.R.array: void <init>()>:<public>:<android.R.array>
<android.view.WindowManagerPolicy: boolean allowAppAnimationsLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.animation.Transformation: void clear()>:<public>:<android.view.animation.Transformation>
<android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>:<public static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.AudioService.3: void binderDied()>:<public>:<android.media.AudioService.3:android.os.IBinder.DeathRecipient>
<android.service.wallpaper.IWallpaperService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.wallpaper.IWallpaperService.Stub:android.os.Binder,android.service.wallpaper.IWallpaperService>
<android.view.View: void setNestedScrollingEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteDisplay: void notifyDisplayDisconnected()>:<private>:<android.media.RemoteDisplay>
<android.widget.TwoLineListItem: void onFinishInflate()>:<protected>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioPort: int[] formats()>:<public>:<android.media.AudioPort>
<android.widget.DatePickerCalendarDelegate: android.widget.CalendarView getCalendarView()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>:<public>:<android.media.AudioManager>
<android.view.VelocityTracker.Estimator: float getYCoeff(int)>:<public>:<android.view.VelocityTracker.Estimator>
<android.accounts.ChooseTypeAndAccountActivity: int access.002(android.accounts.ChooseTypeAndAccountActivity,int)>:<static>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: void <init>(boolean,boolean,android.media.AudioFormat,int,byte[])>:<private>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.view.KeyEvent: boolean isPrintingKey()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Editor.SuggestionsPopupWindow: boolean isShowingUp()>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.EdgeEffect: void onRelease()>:<public>:<android.widget.EdgeEffect>
<android.media.AudioService: void onSetA2dpSinkConnectionState(android.bluetooth.BluetoothDevice,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.SearchView: void access.2100(android.widget.SearchView,boolean)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.tv.TvContentRating: int hashCode()>:<public>:<android.media.tv.TvContentRating>
<android.view.DisplayInfo: void <init>(android.os.Parcel,android.view.DisplayInfo.1)>:<>:<android.view.DisplayInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setFirstDayOfWeek(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.security.AndroidKeyStore: void engineDeleteEntry(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.gesture.InstanceLearner.1: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.gesture.InstanceLearner.1:java.util.Comparator>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.effect.effects.IdentityEffect: void apply(int,int,int,int)>:<public>:<android.media.effect.effects.IdentityEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.print.PrintAttributes.Resolution: android.print.PrintAttributes.Resolution createFromParcel(android.os.Parcel)>:<static>:<android.print.PrintAttributes.Resolution>
<android.media.IVolumeController.Stub.Proxy: void setLayoutDirection(int)>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.media.projection.IMediaProjectionManager: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.view.WindowId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.print.PrinterDiscoverySession.OnPrintersChangeListener: void onPrintersChanged()>:<public abstract>:<android.print.PrinterDiscoverySession.OnPrintersChangeListener>
<android.media.tv.TvTrackInfo.1: android.media.tv.TvTrackInfo[] newArray(int)>:<public>:<android.media.tv.TvTrackInfo.1:android.os.Parcelable.Creator>
<android.media.MediaRouter.Static: boolean isBluetoothA2dpOn()>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.media.MediaCodecInfo.AudioCapabilities: void limitSampleRates(android.util.Range[])>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.view.animation.Animation: void finalize()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.GhostView: void copySize(android.view.View,android.view.View)>:<private static>:<android.view.GhostView:android.view.View>
<android.media.effect.effects.BrightnessEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.BrightnessEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.IAudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.Editor.EasyEditPopupWindow: void access.900(android.widget.Editor.EasyEditPopupWindow,android.widget.Editor.EasyEditDeleteListener)>:<static>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.view.InputEvent: android.view.InputDevice getDevice()>:<public final>:<android.view.InputEvent:android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.MediaDrm.MediaDrmStateException: java.lang.String getDiagnosticInfo()>:<public>:<android.media.MediaDrm.MediaDrmStateException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowAnimationFrameStats: void <clinit>()>:<static>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate: void setFirstDayOfWeek(int)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: void transform(android.graphics.Matrix)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.PlayerRecord.RccPlaybackState: java.lang.String stateToString()>:<private>:<android.media.PlayerRecord.RccPlaybackState>
<android.view.SurfaceControl: void nativeDestroyDisplay(android.os.IBinder)>:<private static native>:<android.view.SurfaceControl>
<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SearchView: void adjustQueryTextView(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.AbsListView.RecycleBin: void setCacheColorHint(int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.media.audiofx.LoudnessEnhancer.BaseParameterListener: void <init>(android.media.audiofx.LoudnessEnhancer,android.media.audiofx.LoudnessEnhancer.1)>:<>:<android.media.audiofx.LoudnessEnhancer.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.MediaRouter.RouteInfo: boolean isEnabled()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.widget.ListView: void setItemsCanFocus(boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.widget.Toast: void <init>(android.content.Context)>:<public>:<android.widget.Toast>
<android.database.Cursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.AbsListView.RecycleBin: void addScrapView(android.view.View,int)>:<>:<android.widget.AbsListView.RecycleBin>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.view.View: void setFilterTouchesWhenObscured(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleTHST(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleThread:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.service.textservice.SpellCheckerService.Session: java.lang.String getLocale()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>:<public>:<android.media.effect.SizeChangeEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.accounts.AccountManager: void postToHandler(android.os.Handler,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<private>:<android.accounts.AccountManager>
<android.media.tv.ITvInputServiceCallback: void addHardwareTvInput(int,android.media.tv.TvInputInfo)>:<public abstract>:<android.media.tv.ITvInputServiceCallback:android.os.IInterface>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean init()>:<private final>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getRowCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.view.IWindowManager.Stub.Proxy: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.accounts.IAccountManager.Stub.Proxy: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.service.notification.IConditionListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.notification.IConditionListener.Stub:android.os.Binder,android.service.notification.IConditionListener>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.TtmlParser: void parseTtml()>:<private>:<android.media.TtmlParser>
<android.media.PlayerRecord: void unlinkToRcClientDeath()>:<public>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.ViewGroup: void onSetLayoutParams(android.view.View,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.AbstractCursor: void setExtras(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Gallery: boolean dispatchLongPress(android.view.View,int,long)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.test.AndroidTestCase: void testAndroidTestCaseSetupProperly()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.gesture.GestureOverlayView: int getGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioHandle: int id()>:<>:<android.media.AudioHandle>
<android.view.InputDevice: boolean supportsSource(int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.MediaRecorder: void native_reset()>:<private native>:<android.media.MediaRecorder>
<android.view.ViewRootImpl: void unscheduleTraversals()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>:<public>:<android.view.textservice.TextServicesManager>
<android.widget.Editor.SuggestionsPopupWindow: boolean access.1200(android.widget.Editor.SuggestionsPopupWindow)>:<static>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.security.KeyChain.KeyChainConnection: void close()>:<public>:<android.security.KeyChain.KeyChainConnection:java.io.Closeable>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.VideoView.5: void <init>(android.widget.VideoView)>:<>:<android.widget.VideoView.5:android.media.MediaPlayer.OnErrorListener>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewGroup: void removeViewsInternal(int,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.effect.EffectUpdateListener: void onEffectUpdated(android.media.effect.Effect,java.lang.Object)>:<public abstract>:<android.media.effect.EffectUpdateListener>
<android.view.ViewGroup: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.Window: void setVolumeControlStream(int)>:<public abstract>:<android.view.Window>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.widget.RemoteViewsAdapter: void access.100(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void unbind(android.content.Context,int,android.content.Intent)>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.view.Window: void takeKeyEvents(boolean)>:<public abstract>:<android.view.Window>
<android.print.PrinterCapabilitiesInfo: void readDefaults(android.os.Parcel)>:<private>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.media.VolumeProvider: int getCurrentVolume()>:<public final>:<android.media.VolumeProvider>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.AudioTrack: int native_write_short(short[],int,int,int)>:<private final native>:<android.media.AudioTrack>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setMaxDate(long)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ImageButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.media.audiofx.PresetReverb.Settings: void <init>()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.widget.Toast.TN: void handleHide()>:<public>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.media.WebVttParser.6: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.6:android.media.WebVttParser.Phase>
<android.view.HardwareRenderer: boolean loadSystemProperties()>:<abstract>:<android.view.HardwareRenderer>
<android.widget.CheckedTextView: void setCheckMarkTintList(android.content.res.ColorStateList)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.AbsListView.CheckForLongPress: void <init>(android.widget.AbsListView)>:<private>:<android.widget.AbsListView.CheckForLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.widget.Editor.InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>:<protected>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.widget.TextView: void onResolveDrawables(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.view.ViewRootImpl: void getGfxInfo(android.view.View,int[])>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.filterpacks.imageproc.TintFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.widget.Scroller: void startScroll(int,int,int,int)>:<public>:<android.widget.Scroller>
<android.widget.ActionMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.printservice.PrintService: android.printservice.IPrintServiceClient access.300(android.printservice.PrintService)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.Cursor: boolean move(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.GridLayout.Axis: void setOrderPreserved(boolean)>:<public>:<android.widget.GridLayout.Axis>
<android.widget.AdapterView: void access.200(android.widget.AdapterView)>:<static>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>:<>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: int getStreamMaxVolume(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.widget.TabWidget: void setStripEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.GridLayout.Axis: void computeMargins(boolean)>:<private>:<android.widget.GridLayout.Axis>
<android.view.GLES20Canvas: void drawPaint(android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.print.PrintDocumentInfo: java.lang.String access.102(android.print.PrintDocumentInfo,java.lang.String)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.AudioSystem: void setErrorCallback(android.media.AudioSystem.ErrorCallback)>:<public static>:<android.media.AudioSystem>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glGetPointerv(int,java.nio.Buffer[])>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<huawei.android.app.HwCustEmergDataManagerImpl: void <init>()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl:huawei.android.app.HwCustEmergDataManager>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioService: void ensureValidRingerMode(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: void internalSetPadding(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvContentRatingSystemInfo.1: android.media.tv.TvContentRatingSystemInfo[] newArray(int)>:<public>:<android.media.tv.TvContentRatingSystemInfo.1:android.os.Parcelable.Creator>
<android.view.View: int getBottomPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.tv.ITvInputManagerCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputManagerCallback.Stub:android.os.Binder,android.media.tv.ITvInputManagerCallback>
<android.widget.ViewFlipper.2: void handleMessage(android.os.Message)>:<public>:<android.widget.ViewFlipper.2:android.os.Handler>
<android.widget.TextView: void invalidateCursorPath()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.KeyEvent: java.lang.String toString()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISessionController: void playFromMediaId(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.projection.IMediaProjection.Stub.Proxy: boolean canProjectSecureVideo()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.opengl.GLES20: void glValidateProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: int getUnicodeChar()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glClearStencil(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.performance.ThroughputFilter: void setupPorts()>:<public>:<android.filterpacks.performance.ThroughputFilter:android.filterfw.core.Filter>
<android.media.AudioService.RmtSbmxFullVolDeathHandler: boolean isHandlerFor(android.os.IBinder)>:<>:<android.media.AudioService.RmtSbmxFullVolDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.accessibility.IAccessibilityManager: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.filterpacks.imageproc.VignetteFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.animation.AnimationSet: void restoreChildrenStartOffset()>:<>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.textservice.SpellCheckerSubtype.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.textservice.SpellCheckerSubtype.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputManager.Stub.Proxy: boolean isSingleSessionActive(int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.print.PrintDocumentInfo: java.lang.String contentTyepToString(int)>:<private>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.widget.NumberPicker.OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>:<public abstract>:<android.widget.NumberPicker.OnValueChangeListener>
<android.print.PrintJobInfo: java.lang.String getTag()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.accounts.AccountManager.5: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account)>:<>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.RenderNode: boolean setPivotX(float)>:<public>:<android.view.RenderNode>
<android.preference.PreferenceActivity: void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.MediaRouter: void clearUserRoutes()>:<public>:<android.media.MediaRouter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator.AnimatorListener)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TextView: boolean isInputMethodTarget()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.media.MediaCodecInfo.AudioCapabilities: int getMaxInputChannelCount()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.TimedText: void readKaraoke(android.os.Parcel)>:<private>:<android.media.TimedText>
<android.view.Choreographer: void scheduleVsyncLocked()>:<private>:<android.view.Choreographer>
<android.animation.PathKeyframes.SimpleKeyframes: android.animation.Keyframes clone()>:<public>:<android.animation.PathKeyframes.SimpleKeyframes:android.animation.Keyframes>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.tv.TvView: int access.1300(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.MiniThumbFile: void removeOldFile()>:<private>:<android.media.MiniThumbFile>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsets()>:<public>:<android.view.WindowInsets>
<android.gesture.GestureOverlayView: boolean processEvent(android.view.MotionEvent)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(java.lang.Object)>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaScanner.MyMediaScannerClient: int getFileTypeFromDrm(java.lang.String)>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.view.IWindowManager: void resumeKeyDispatching(android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.database.AbstractWindowedCursor: void onDeactivateOrClose()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.View.12: void <init>(java.lang.String)>:<>:<android.view.View.12:android.util.FloatProperty>
<android.widget.DatePicker: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void initialize(java.lang.String)>:<public>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.media.AudioService: void broadcastRingerMode(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiofx.AudioEffect: int setParameter(int[],short[])>:<public>:<android.media.audiofx.AudioEffect>
<android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>:<private static>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.view.Choreographer: long subtractFrameDelay(long)>:<public static>:<android.view.Choreographer>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: float[] access.300(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder)>:<static>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getFirstDayOfWeek()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLErrorWrapper: void glPopMatrix()>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputInfo: java.lang.String generateInputIdForComponentName(android.content.ComponentName)>:<private static final>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.MotionEvent: int nativeGetPointerId(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.IWindowManager: void setForcedDisplayDensity(int,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.animation.ClipRectAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.ClipRectAnimation:android.view.animation.Animation>
<android.accounts.ChooseAccountActivity.AccountInfo: void <init>(java.lang.String,android.graphics.drawable.Drawable)>:<>:<android.accounts.ChooseAccountActivity.AccountInfo>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: void setMaxLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewRootImpl: void dispatchInvalidateRectOnAnimation(android.view.View.AttachInfo.InvalidateInfo)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GhostView: void <init>(android.view.View)>:<private>:<android.view.GhostView:android.view.View>
<android.widget.SpellChecker: int nextSpellCheckSpanIndex()>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.service.notification.NotificationRankingUpdate: int describeContents()>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.view.ViewGroup.MarginLayoutParams: int getLayoutDirection()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setEncoding(int)>:<public>:<android.media.AudioFormat.Builder>
<android.preference.PreferenceManager: void addPreferencesScreen(android.content.DialogInterface)>:<>:<android.preference.PreferenceManager>
<android.print.IPrintJobStateChangeListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintJobStateChangeListener.Stub.Proxy:android.print.IPrintJobStateChangeListener>
<android.opengl.GLES20: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView.ChangeWatcher: void <init>(android.widget.TextView)>:<private>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.media.AudioService: int access.5500()>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLUtils: void <clinit>()>:<static>:<android.opengl.GLUtils>
<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder,android.view.inputmethod.InputMethodSubtype.1)>:<>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.filterpacks.imageproc.BlackWhiteFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection.PreparedStatement: void <init>()>:<private>:<android.database.sqlite.SQLiteConnection.PreparedStatement>
<android.security.Credentials: void install(android.content.Context)>:<public>:<android.security.Credentials>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.accounts.AccountManager.6: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.6:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.media.session.MediaController.CallbackStub: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.media.tv.ITvInputSession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hsm.HwSystemManager.HsmDefImpl: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.widget.PopupMenu: android.view.Menu getMenu()>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.tv.TvInputManager.Session.InputEventHandler: void <init>(android.media.tv.TvInputManager.Session,android.os.Looper)>:<>:<android.media.tv.TvInputManager.Session.InputEventHandler:android.os.Handler>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.IRingtonePlayer.Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)>:<public static>:<android.media.IRingtonePlayer.Stub:android.os.Binder,android.media.IRingtonePlayer>
<android.service.dreams.IDreamService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.dreams.IDreamService.Stub:android.os.Binder,android.service.dreams.IDreamService>
<android.widget.AbsSpinner.SavedState: void <init>(android.os.Parcel)>:<>:<android.widget.AbsSpinner.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.CalendarView: boolean isEnabled()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.Cursor: boolean moveToPrevious()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.Utils.1: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.media.Utils.1:java.util.Comparator>
<android.widget.RelativeLayout: void requestLayout()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void dumpFlag(java.util.HashMap,java.lang.String,int)>:<private static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputClient.Stub.Proxy: void onTrackSelected(int,java.lang.String,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.ToneGenerator: boolean startTone(int)>:<public>:<android.media.ToneGenerator>
<android.view.IOnKeyguardExitResult.Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)>:<public static>:<android.view.IOnKeyguardExitResult.Stub:android.os.Binder,android.view.IOnKeyguardExitResult>
<android.widget.Gallery: int computeHorizontalScrollRange()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.session.MediaSessionManager.SessionsChangedWrapper.1: void onActiveSessionsChanged(java.util.List)>:<public>:<android.media.session.MediaSessionManager.SessionsChangedWrapper.1:android.media.session.IActiveSessionsListener.Stub,android.os.Binder>
<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter: void <init>(android.database.sqlite.SQLiteConnectionPool.1)>:<>:<android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter>
<android.accounts.AccountManager: void access.200(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.animation.PathKeyframes: java.lang.Object getValue(float)>:<public>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.SimpleImageFilter:android.filterfw.core.Filter>
<android.netdetect.INetDetectService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.netdetect.INetDetectService.Stub:android.os.Binder,android.netdetect.INetDetectService>
<android.view.animation.Transformation: int getTransformationType()>:<public>:<android.view.animation.Transformation>
<android.filterpacks.videosink.MediaEncoderFilter: void stopRecording(android.filterfw.core.FilterContext)>:<private>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: int access.100(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder)>:<static>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.media.RemoteController: boolean setSynchronizationMode(int)>:<public>:<android.media.RemoteController>
<android.media.MediaRouter: void updateRoute(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.printservice.PrintService.1: void <init>(android.printservice.PrintService)>:<>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.media.effect.Effect: void setParameter(java.lang.String,java.lang.Object)>:<public abstract>:<android.media.effect.Effect>
<android.preference.Preference: boolean shouldCommit()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.WindowManagerPolicy.WindowState: boolean isDefaultDisplay()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.effect.effects.CrossProcessEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.CrossProcessEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.SubtitleTrack.Cue: void <init>()>:<public>:<android.media.SubtitleTrack.Cue>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getDayOfMonth()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLSurfaceView: int access.700(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.IWindowManager: void freezeRotation(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.ViewAnimationUtils: void <init>()>:<private>:<android.view.ViewAnimationUtils>
<android.preference.PreferenceInflater: void <init>(android.preference.GenericInflater,android.preference.PreferenceManager,android.content.Context)>:<>:<android.preference.PreferenceInflater:android.preference.GenericInflater>
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)>:<public static>:<android.media.MediaFile>
<android.opengl.GLLogWrapper: void glClipPlanex(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void _prepare()>:<private native>:<android.media.MediaRecorder>
<android.accounts.ChooseTypeAndAccountActivity: void overrideDescriptionIfSupplied(java.lang.String)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.media.session.ISessionController: void sendCustomAction(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.view.View.8: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.8:android.util.FloatProperty>
<android.view.ViewDebug.6: void <init>(android.graphics.Bitmap[],android.view.View,boolean,java.util.concurrent.CountDownLatch)>:<>:<android.view.ViewDebug.6:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputServiceCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputServiceCallback.Stub:android.os.Binder,android.media.tv.ITvInputServiceCallback>
<android.view.ViewGroup.2: void <init>(android.view.ViewGroup)>:<>:<android.view.ViewGroup.2:java.lang.Runnable>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.ListView: void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.audiofx.BassBoost: void <init>(int,int)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.widget.SpellChecker: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setName(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.service.voice.VoiceInteractionSession.2: void taskStarted(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession.2:android.service.voice.IVoiceInteractionSession.Stub,android.os.Binder>
<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>:<public abstract>:<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener>
<android.security.IKeyChainService: boolean installKeyPair(byte[],byte[],java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.filterpacks.videosrc.SurfaceTextureSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.media.IAudioService: int getRingerMode()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.Choreographer.CallbackQueue: boolean hasDueCallbacksLocked(long)>:<public>:<android.view.Choreographer.CallbackQueue>
<android.widget.GridLayout.LayoutParams: void <clinit>()>:<static>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.tv.ITvInputSession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.view.ViewConfiguration: int getHoverTapSlop()>:<public static>:<android.view.ViewConfiguration>
<android.media.audiofx.Visualizer.NativeEventHandler: void handleCaptureMessage(android.os.Message)>:<private>:<android.media.audiofx.Visualizer.NativeEventHandler:android.os.Handler>
<android.widget.Editor.SuggestionsPopupWindow: java.util.HashMap access.1800(android.widget.Editor.SuggestionsPopupWindow)>:<static>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.ViewGroup: void findNamedViews(java.util.Map)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.ISessionController.Stub.Proxy: java.lang.String getPackageName()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void finishKeys(long)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.RenderNode: boolean setRevealClip(boolean,float,float,float)>:<public>:<android.view.RenderNode>
<android.animation.PropertyValuesHolder: void nCallMultipleIntMethod(java.lang.Object,long,int[])>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView.IntHolder,int,int,android.widget.RadialTimePickerView.InvalidateUpdateListener)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.TextView: void stopMarquee()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AuthenticatorDescription.1: android.accounts.AuthenticatorDescription createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.audiofx.Visualizer: int getCaptureSize()>:<public>:<android.media.audiofx.Visualizer>
<android.media.AudioManager: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>:<public>:<android.media.AudioManager>
<android.media.MediaDescription: int describeContents()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.print.IPrintJobStateChangeListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintJobStateChangeListener.Stub:android.os.Binder,android.print.IPrintJobStateChangeListener>
<android.view.GraphicBuffer: void <init>(int,int,int,int,long,android.view.GraphicBuffer.1)>:<>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.KeyEvent: void startTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.appwidget.AppWidgetProviderInfo.1: void <init>()>:<>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: android.view.AccessibilityIterators.CharacterTextSegmentIterator getInstance(java.util.Locale)>:<public static>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.view.inputmethod.InputMethodSubtypeArray: void <init>(android.os.Parcel)>:<public>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.database.CursorWindow: void <init>(java.lang.String)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.AudioService: android.media.AudioService.SoundPoolListenerThread access.5200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrintJobInfo: boolean hasAdvancedOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>:<>:<android.media.audiopolicy.AudioMix>
<android.security.IKeystoreService: int del_key(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.widget.Switch: void draw(android.graphics.Canvas)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrinterInfo.1: android.print.PrinterInfo createFromParcel(android.os.Parcel)>:<public>:<android.print.PrinterInfo.1:android.os.Parcelable.Creator>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.Spec,android.widget.GridLayout.Spec)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.session.MediaSession.QueueItem: java.lang.String toString()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.Choreographer: java.lang.Object access.400()>:<static>:<android.view.Choreographer>
<android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>:<public static>:<android.security.KeyChain>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.widget.TabHost: int access.900(android.widget.TabHost)>:<static>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaRouter.Static.Client: void onStateChanged()>:<public>:<android.media.MediaRouter.Static.Client:android.media.IMediaRouterClient.Stub,android.os.Binder>
<android.media.tv.TvInputManager.SessionCallbackRecord: void <init>(android.media.tv.TvInputManager.SessionCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.opengl.GLErrorWrapper: void glColor4ub(byte,byte,byte,byte)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TimePicker.TimePickerDelegate: void setValidationCallback(android.widget.TimePicker.ValidationCallback)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.view.View: void releaseNSD()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.FisheyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteConnection: long nativeExecuteForLong(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.tv.TvContract: void <init>()>:<private>:<android.media.tv.TvContract>
<android.media.projection.IMediaProjectionCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionCallback>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void run()>:<public>:<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand:java.lang.Runnable>
<android.view.ViewDebug.ExportedProperty: java.lang.String prefix()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.media.SubtitleTrack: void hide()>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputManager.TvInputCallbackRecord.1: void run()>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord.1:java.lang.Runnable>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.WebVttCueListener: void onCueParsed(android.media.TextTrackCue)>:<public abstract>:<android.media.WebVttCueListener>
<android.view.ViewConfiguration: void <init>(android.content.Context)>:<private>:<android.view.ViewConfiguration>
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>:<public static>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.widget.StackView.StackFrame: boolean cancelSliderAnimator()>:<>:<android.widget.StackView.StackFrame:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.base.FrameStore: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.FrameStore:android.filterfw.core.Filter>
<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setTag(java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: void <clinit>()>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.gesture.GestureStore: void readFormatV1(java.io.DataInputStream)>:<private>:<android.gesture.GestureStore>
<android.widget.Editor.HandleView: boolean offsetHasBeenChanged()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.MediaSessionLegacyHelper: boolean access.100()>:<static>:<android.media.session.MediaSessionLegacyHelper>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.View: boolean isVerticalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IAudioRoutesObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IAudioRoutesObserver.Stub.Proxy:android.media.IAudioRoutesObserver>
<android.media.MediaRecorder: void sendStateChangedIntent(int)>:<private>:<android.media.MediaRecorder>
<android.view.View: int getSolidColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.accounts.IAccountManager.Stub.Proxy: android.accounts.Account[] getAccounts(java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.AudioService.AudioHandler.1: void <init>(android.media.AudioService.AudioHandler)>:<>:<android.media.AudioService.AudioHandler.1:android.media.MediaPlayer.OnCompletionListener>
<android.media.tv.TvInputManager: void unregisterCallback(android.media.tv.TvInputManager.TvInputCallback)>:<public>:<android.media.tv.TvInputManager>
<android.view.View: boolean post(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Editor.InsertionHandleView: void show()>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.tv.TvInputService.Session: void notifyTracksChanged(java.util.List)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.media.IRemoteControlClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.media.session.MediaSession: void dispatchMediaButton(android.content.Intent)>:<private>:<android.media.session.MediaSession>
<android.widget.Toolbar.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.Toolbar.SavedState.1:android.os.Parcelable.Creator>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void setSelectedDay(java.util.Calendar)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.widget.TabWidget: void measureHorizontal(int,int)>:<>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.ImageReader: int getImageFormat()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.animation.ObjectAnimator: void start()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.animation.LayoutTransition: boolean hasListeners()>:<private>:<android.animation.LayoutTransition>
<android.view.Nsd: void sendCmdReadyScrollFlag(int)>:<public static>:<android.view.Nsd>
<android.security.IKeystoreService.Stub.Proxy: int sync_uid(int,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.View: void setLayerPaint(android.graphics.Paint)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFormat: java.lang.String toString()>:<public>:<android.media.MediaFormat>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.WindowManagerPolicy: int getConfigDisplayWidth(int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.print.PrinterDiscoverySession: android.os.Handler access.200(android.print.PrinterDiscoverySession)>:<static>:<android.print.PrinterDiscoverySession>
<android.filterpacks.base.FrameFetch: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.FrameFetch:android.filterfw.core.Filter>
<android.media.MediaDrm: void access.300(android.media.MediaDrm,byte[],java.lang.String)>:<static>:<android.media.MediaDrm>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.preference.PreferenceManager: void <init>(android.app.Activity,int)>:<public>:<android.preference.PreferenceManager>
<android.widget.Editor.SelectionModifierCursorController: int getMinTouchOffset()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.media.WebVttParser.5: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.5:android.media.WebVttParser.Phase>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.RecycleBin: void removeDetachedView(android.view.View,boolean)>:<private>:<android.widget.AbsListView.RecycleBin>
<android.widget.Editor.EasyEditPopupWindow: void <init>(android.widget.Editor)>:<private>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo build()>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.widget.MediaController: java.lang.String access.1100(android.widget.MediaController,int)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Editor.InputMethodState: void <init>()>:<>:<android.widget.Editor.InputMethodState>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.animation.PathKeyframes.3: void <init>(android.animation.PathKeyframes)>:<>:<android.animation.PathKeyframes.3:android.animation.PathKeyframes.IntKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.media.AudioSystem: void errorCallbackFromNative(int)>:<private static>:<android.media.AudioSystem>
<android.view.Window: boolean isFloating()>:<public abstract>:<android.view.Window>
<android.widget.RemoteViewsListAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.PlaybackState: void <init>(int,long,long,float,long,long,java.util.List,long,java.lang.CharSequence,android.media.session.PlaybackState.1)>:<>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.SoundPool.SoundPoolDelegate: void setLoop(int,int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.ThreadedRenderer: void onLayerDestroyed(android.view.HardwareLayer)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.ListPopupWindow.DropDownListView.1: void setValue(android.graphics.drawable.Drawable,int)>:<public>:<android.widget.ListPopupWindow.DropDownListView.1:android.util.IntProperty>
<android.accounts.GrantCredentialsPermissionActivity: java.lang.String getAccountLabel(android.accounts.Account)>:<private>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.gesture.Gesture: void serialize(java.io.DataOutputStream)>:<>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.ViewGroup: boolean resolveTextDirection()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.SparseRectFArray: void <clinit>()>:<static>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.media.AudioService.VolumeStreamState: java.util.concurrent.ConcurrentHashMap access.1000(android.media.AudioService.VolumeStreamState)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.view.inputmethod.CorrectionInfo: void <init>(android.os.Parcel,android.view.inputmethod.CorrectionInfo.1)>:<>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.media.ClosedCaptionRenderer: boolean supports(android.media.MediaFormat)>:<public>:<android.media.ClosedCaptionRenderer:android.media.SubtitleController.Renderer>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.media.session.PlaybackState: long getActionsFromRccControlFlags(int)>:<public static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.HwAbsListView: boolean performItemClickInner(android.view.View,int,long)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.RadialTimePickerView: int getCurrentItemShowing()>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.InputChannel: void finalize()>:<protected>:<android.view.InputChannel:android.os.Parcelable>
<android.media.tv.TvInputService.HardwareSession.1: void onVideoAvailable(android.media.tv.TvInputManager.Session)>:<public>:<android.media.tv.TvInputService.HardwareSession.1:android.media.tv.TvInputManager.SessionCallback>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,java.util.ArrayList)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.MediaRouter.RouteInfo: void select()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.ViewOverlay.OverlayViewGroup: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.preference.SeekBarDialogPreference: void createActionButtons()>:<public>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioManager.FocusEventHandlerDelegate.1: void handleMessage(android.os.Message)>:<public>:<android.media.AudioManager.FocusEventHandlerDelegate.1:android.os.Handler>
<android.service.wallpaper.IWallpaperConnection.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub:android.os.Binder,android.service.wallpaper.IWallpaperConnection>
<android.media.MediaMetadata: android.media.MediaDescription getDescription()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.SubtitleController: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>:<private>:<android.media.SubtitleController>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.preference.PreferenceActivity.2: void onClick(android.view.View)>:<public>:<android.preference.PreferenceActivity.2:android.view.View.OnClickListener>
<android.widget.Editor.HandleView: void hideActionPopupWindow()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.Tokenizer: void tokenize(java.lang.String)>:<>:<android.media.Tokenizer>
<android.appwidget.AppWidgetProviderInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.projection.MediaProjection.CallbackRecord: void onStop()>:<public>:<android.media.projection.MediaProjection.CallbackRecord>
<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.tv.ITvInputHardware.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureNoConnection()>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager:android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.netdetect.HwCustNetDetectServiceImpl: boolean disconnectAndDisableAP(java.lang.String,java.lang.String)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.opengl.GLLogWrapper: void glStencilFunc(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService.AudioPolicyProxy: void binderDied()>:<public>:<android.media.AudioService.AudioPolicyProxy:android.os.IBinder.DeathRecipient>
<android.widget.ActionMenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.MediaRouter: void dispatchRouteChanged(android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.widget.GridLayout: int clip(android.widget.GridLayout.Interval,boolean,int)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: void setParentalControlsEnabled(boolean,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.RemoteViewsAdapter.6: void <init>(android.widget.RemoteViewsAdapter)>:<>:<android.widget.RemoteViewsAdapter.6:java.lang.Runnable>
<android.view.ViewGroup: void onAnimationStart()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyEvent: boolean isModifierKey(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.CursorWindow: int getStartPosition()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.VideoView: void draw(android.graphics.Canvas)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.TextView: void ignoreTextChange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.IAudioService: int getMasterMaxVolume()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>:<public>:<android.media.SoundPool>
<android.service.dreams.Sandman: boolean shouldStartDockApp(android.content.Context,android.content.Intent)>:<public static>:<android.service.dreams.Sandman>
<android.media.IAudioService.Stub: void <init>()>:<public>:<android.media.IAudioService.Stub:android.os.Binder,android.media.IAudioService>
<android.opengl.GLSurfaceView.LogWriter: void close()>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.view.InputEventReceiver: void onInputEvent(android.view.InputEvent)>:<public>:<android.view.InputEventReceiver>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.print.IPrintManager: void stopPrinterStateTracking(android.print.PrinterId,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.media.AudioTimestamp: void <init>()>:<public>:<android.media.AudioTimestamp>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Choreographer.CallbackQueue: void addCallbackLocked(long,java.lang.Object,java.lang.Object)>:<public>:<android.view.Choreographer.CallbackQueue>
<android.media.SoundPool.SoundPoolStub: int load(android.content.res.AssetFileDescriptor,int)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: void setManagingTrust(boolean)>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.service.restrictions.RestrictionsReceiver: void <init>()>:<public>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.database.CursorWrapper: void deactivate()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.accounts.GrantCredentialsPermissionActivity.1.1: void run()>:<public>:<android.accounts.GrantCredentialsPermissionActivity.1.1:java.lang.Runnable>
<android.service.wallpaper.IWallpaperService: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect)>:<public abstract>:<android.service.wallpaper.IWallpaperService:android.os.IInterface>
<android.media.WebVttRenderingWidget.CueLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void initViewAnimator()>:<private>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.preference.PreferenceManager: void removePreferencesScreen(android.content.DialogInterface)>:<>:<android.preference.PreferenceManager>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities createFromProfileLevel(java.lang.String,int,int)>:<public static>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.widget.Editor: void prepareCursorControllers()>:<>:<android.widget.Editor>
<android.view.KeyEvent.DispatcherState: void reset()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.preference.PreferenceActivity.3: void onClick(android.view.View)>:<public>:<android.preference.PreferenceActivity.3:android.view.View.OnClickListener>
<android.accounts.AccountManager.8: void doWork()>:<public>:<android.accounts.AccountManager.8:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.view.animation.AlphaAnimation: void <init>(float,float)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.animation.Animator: void reverse()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.animation.Animator.AnimatorPauseListener: void onAnimationResume(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorPauseListener>
<android.view.inputmethod.CompletionInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.CompletionInfo.1:android.os.Parcelable.Creator>
<android.database.MatrixCursor: int getInt(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.inputmethod.InputMethodManager: void flushPendingEventsLocked()>:<private>:<android.view.inputmethod.InputMethodManager>
<android.widget.VideoView: void release(boolean)>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.RemoteController: int access.500(android.media.RemoteController)>:<static>:<android.media.RemoteController>
<android.widget.ListView.FocusSelector: void <init>(android.widget.ListView,android.widget.ListView.1)>:<>:<android.widget.ListView.FocusSelector:java.lang.Runnable>
<android.preference.SeekBarVolumizer: int access.500(android.preference.SeekBarVolumizer)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.animation.PathInterpolator: void initQuad(float,float)>:<private>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.media.AudioTrack: void native_setVolume(float,float)>:<private final native>:<android.media.AudioTrack>
<android.media.tv.ITvInputHardware: boolean dispatchKeyEventToHdmi(android.view.KeyEvent)>:<public abstract>:<android.media.tv.ITvInputHardware:android.os.IInterface>
<android.database.CursorToBulkCursorAdaptor: void unregisterObserverProxyLocked()>:<private>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.widget.Scroller.ViscousFluidInterpolator: float getInterpolation(float)>:<public>:<android.widget.Scroller.ViscousFluidInterpolator:android.view.animation.Interpolator>
<android.view.View.AttachInfo.InvalidateInfo: android.view.View.AttachInfo.InvalidateInfo obtain()>:<public static>:<android.view.View.AttachInfo.InvalidateInfo>
<android.media.MediaRouter.RouteInfo.1: void <init>(android.media.MediaRouter.RouteInfo)>:<>:<android.media.MediaRouter.RouteInfo.1:android.media.IRemoteVolumeObserver.Stub,android.os.Binder>
<android.database.sqlite.JankSqlite: boolean addInsert(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.service.notification.INotificationListener.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.opengl.EGLLogWrapper: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.RemoteControlClient.EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>:<public>:<android.media.RemoteControlClient.EventHandler:android.os.Handler>
<android.media.tv.TvContentRating: java.lang.String getMainRating()>:<public>:<android.media.tv.TvContentRating>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)>:<public static>:<android.database.DatabaseUtils>
<android.database.sqlite.SQLiteSession: void <clinit>()>:<static>:<android.database.sqlite.SQLiteSession>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.preference.MultiSelectListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.MediaPlayer.TimeProvider: void onNewPlayer()>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.media.MediaFocusControl: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>:<private static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.MediaDrm: byte[] signRSA(byte[],java.lang.String,byte[],byte[])>:<public>:<android.media.MediaDrm>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1: void <init>(android.print.PrintFileDocumentAdapter.WriteFileAsyncTask,android.print.PrintFileDocumentAdapter)>:<>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask.1:android.os.CancellationSignal.OnCancelListener>
<android.media.AudioService.ScoClient: void binderDied()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.TextViewDrawableColorFilterAction:android.widget.RemoteViews.Action>
<android.animation.ValueAnimator: long getStartDelay()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.GridLayout: void onMeasure(int,int)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.Tokenizer.OnTokenListener: void onData(java.lang.String)>:<public abstract>:<android.media.Tokenizer.OnTokenListener>
<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>:<public>:<android.view.ViewConfiguration>
<android.service.notification.ZenModeConfig: android.net.Uri toDowntimeConditionId(android.service.notification.ZenModeConfig.DowntimeInfo)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.effect.effects.SharpenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.SharpenEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.IWindowManager.Stub.Proxy: boolean isRotationFrozen()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.accessibility.AccessibilityManager: void setStateLocked(int)>:<private>:<android.view.accessibility.AccessibilityManager>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.view.animation.Transformation: java.lang.String toShortString()>:<public>:<android.view.animation.Transformation>
<android.media.AudioService.SetModeDeathHandler: int getPid()>:<public>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.opengl.GLLogWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.EditTextPreference: boolean needInputMethod()>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioManager: boolean isBluetoothScoOn()>:<public>:<android.media.AudioManager>
<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private>:<android.media.WebVttParser>
<android.security.KeyStore: boolean delKey(java.lang.String)>:<public>:<android.security.KeyStore>
<android.widget.ListPopupWindow.DropDownListView.1: void <init>(java.lang.String)>:<>:<android.widget.ListPopupWindow.DropDownListView.1:android.util.IntProperty>
<android.view.textservice.SentenceSuggestionsInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.textservice.SentenceSuggestionsInfo.1:android.os.Parcelable.Creator>
<android.widget.HwSplineOverScrollerDummy: void resetLastDistanceValue(double,double)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.view.IWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.widget.ScrollView: int computeVerticalScrollRange()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.LayoutTransition: java.util.LinkedHashMap access.1900(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.widget.AutoCompleteTextView: void doAfterTextChanged()>:<>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.security.IKeyChainAliasCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.security.IKeyChainAliasCallback.Stub:android.os.Binder,android.security.IKeyChainAliasCallback>
<android.animation.Keyframes: java.lang.Class getType()>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.SoundPool.SoundPoolImpl: void setRate(int,float)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmHandleViewDebug: void <clinit>()>:<static>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getViewTypeCount()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.view.View: int getRight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.inputmethod.CompletionInfo.1: android.view.inputmethod.CompletionInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.CompletionInfo.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationListenerService: boolean isBound()>:<private>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.service.fingerprint.IFingerprintServiceReceiver.Stub: void <init>()>:<public>:<android.service.fingerprint.IFingerprintServiceReceiver.Stub:android.os.Binder,android.service.fingerprint.IFingerprintServiceReceiver>
<android.media.AudioService.VolumeStreamState: int getStreamType()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.media.IAudioService.Stub.Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.MediaScannerConnection.1: void <init>(android.media.MediaScannerConnection)>:<>:<android.media.MediaScannerConnection.1:android.media.IMediaScannerListener.Stub,android.os.Binder>
<android.view.ThreadedRenderer: boolean loadSystemProperties()>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.preference.PreferenceFragment: android.widget.ListView getListView()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.IInputFilter.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.view.Window.Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.print.PrintAttributes: java.lang.String colorModeToString(int)>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.hsm.MediaTransactWrapper: java.util.Set playingMusicUidSet()>:<public static>:<android.hsm.MediaTransactWrapper>
<android.opengl.GLErrorWrapper: void glBufferData(int,int,java.nio.Buffer,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCodec: android.media.Image getOutputImage(int)>:<public>:<android.media.MediaCodec>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.JetPlayer.NativeEventHandler: void <init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)>:<public>:<android.media.JetPlayer.NativeEventHandler:android.os.Handler>
<android.view.View: void getFocusedRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus: void <clinit>()>:<static>:<android.database.sqlite.SQLiteConnectionPool.AcquiredConnectionStatus:java.lang.Enum>
<android.view.View: boolean showContextMenu(float,float,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: int access.1202(android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask,int)>:<static>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.view.SubMenu: void clearHeader()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.MediaFocusControl.DisplayInfoForServer: boolean access.500(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.view.animation.Animation: int getRepeatCount()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.print.PageRange.1: void <init>()>:<>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.media.AudioService.VolumeStreamState: void applyDeviceVolume_syncVSS(int)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.widget.AbsListView.SavedState: void <init>(android.os.Parcelable)>:<>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.media.MediaCodecInfo: boolean isEncoder()>:<public final>:<android.media.MediaCodecInfo>
<android.view.ViewRootImpl.ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.widget.ProgressBar: void setSecondaryProgress(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.accounts.AccountManager: void access.1400(android.accounts.AccountManager,android.os.Handler,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>:<static>:<android.accounts.AccountManager>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.media.IMediaHTTPConnection.Stub.Proxy: java.lang.String getUri()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.view.inputmethod.InputMethodManager: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback,android.os.Handler)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.PreferenceScreen.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.MediaDrm: byte[] access.500(android.media.MediaDrm,byte[],byte[],byte[],byte[])>:<static>:<android.media.MediaDrm>
<android.view.Display: int getRotation()>:<public>:<android.view.Display>
<android.view.ViewRootImpl: android.view.View access.3100(android.view.ViewRootImpl,android.view.View,android.view.View)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.Scroller: int getDuration()>:<public final>:<android.widget.Scroller>
<android.widget.TextClock: void onAttachedToWindow()>:<protected>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.filterpacks.videosrc.SurfaceTextureSource: android.os.ConditionVariable access.100(android.filterpacks.videosrc.SurfaceTextureSource)>:<static>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.view.ViewDebug: boolean arrayContains(java.lang.String[],java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.view.View: void dispatchCollectViewAttributes(android.view.View.AttachInfo,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.DayPickerView.ScrollStateRunnable: void <init>(android.widget.DayPickerView,android.view.View)>:<>:<android.widget.DayPickerView.ScrollStateRunnable:java.lang.Runnable>
<android.widget.AutoCompleteTextView: void dismissDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.accessibility.AccessibilityRecord: void clear()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.media.tv.ITvInputManager: void removeOverlayView(android.os.IBinder,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.print.IPrintManager.Stub.Proxy: void startPrinterStateTracking(android.print.PrinterId,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.WindowManager.LayoutParams.1: void <init>()>:<>:<android.view.WindowManager.LayoutParams.1:android.os.Parcelable.Creator>
<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setUpHeader()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.View.AttachInfo.InvalidateInfo: void recycle()>:<public>:<android.view.View.AttachInfo.InvalidateInfo>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.RenderNode: boolean setElevation(float)>:<public>:<android.view.RenderNode>
<android.filterpacks.imageproc.RotateFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.media.tv.ITvInputHardwareCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub.Proxy:android.media.tv.ITvInputHardwareCallback>
<android.preference.PreferenceActivity: java.util.ArrayList access.100(android.preference.PreferenceActivity)>:<static>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.Image.Plane: java.nio.ByteBuffer getBuffer()>:<public abstract>:<android.media.Image.Plane>
<android.media.SoundPool.SoundPoolDelegate: boolean unload(int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.media.IRingtonePlayer.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRingtonePlayer.Stub:android.os.Binder,android.media.IRingtonePlayer>
<android.service.dreams.Sandman: void startDreamByUserRequest(android.content.Context)>:<public static>:<android.service.dreams.Sandman>
<android.service.dreams.DreamService: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setPageCount(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.widget.TextView: void onSelectionChanged(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PageRange: int getSize()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.security.AndroidKeyStore: java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.SubtitleTrack.CueList.EntryIterator: void <init>(android.media.SubtitleTrack.CueList,java.util.SortedMap)>:<public>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>:<public>:<android.view.animation.Transformation>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setKeepScreenOn(boolean)>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy: void <init>(android.widget.ShareActionProvider)>:<private>:<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy:android.widget.ActivityChooserModel.OnChooseActivityListener>
<android.media.ClosedCaptionWidget.CCLineBox: void onDraw(android.graphics.Canvas)>:<protected>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.widget.GridLayout: void access.200(java.lang.String)>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.WindowId: android.view.IWindowId getTarget()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.view.ViewRootImpl: void dispatchInvalidateOnAnimation(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.AnimatorListenerAdapter: void onAnimationResume(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.view.RenderNodeAnimator: void nSetAllowRunningAsync(long,boolean)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.WindowManagerGlobal.2: void <init>(android.view.WindowManagerGlobal)>:<>:<android.view.WindowManagerGlobal.2:java.lang.Runnable>
<android.ddm.DdmHandleAppName: void sendAPNM(java.lang.String,int)>:<private static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.Editor: void onDrop(android.view.DragEvent)>:<>:<android.widget.Editor>
<android.preference.SeekBarVolumizer: android.media.AudioManager access.400(android.preference.SeekBarVolumizer)>:<static>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.preference.Preference: boolean canRecycleLayout()>:<>:<android.preference.Preference:java.lang.Comparable>
<android.widget.Editor: void ignoreTextChange()>:<protected>:<android.widget.Editor>
<android.media.AudioService: void access.8000(android.media.AudioService,boolean)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.TextureView: void onDetachedFromWindowInternal()>:<protected>:<android.view.TextureView:android.view.View>
<android.animation.LayoutTransition: java.util.ArrayList access.1700(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.MediaRouter.Static.Client.1: void <init>(android.media.MediaRouter.Static.Client)>:<>:<android.media.MediaRouter.Static.Client.1:java.lang.Runnable>
<android.media.AudioRecord: void logd(java.lang.String)>:<private static>:<android.media.AudioRecord>
<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.preference.PreferenceFragment: void ensureList()>:<private>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.media.SubtitleController: android.media.SubtitleTrack addTrack(android.media.MediaFormat)>:<public>:<android.media.SubtitleController>
<android.animation.ValueAnimator: void setFrameDelay(long)>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaFocusControl: void onReevaluateRemote()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.printservice.PrintJob: int hashCode()>:<public>:<android.printservice.PrintJob>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean save()>:<public>:<android.gesture.GestureLibraries.FileGestureLibrary:android.gesture.GestureLibrary>
<android.media.tv.ITvInputManager.Stub.Proxy: java.util.List getTvInputList(int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.OrientationEventListener: int access.102(android.view.OrientationEventListener,int)>:<static>:<android.view.OrientationEventListener>
<android.media.session.MediaSession.CallbackStub: void onStop()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>:<public final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.WindowManagerPolicy: void screenTurnedOff()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.textservice.TextInfo: int describeContents()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.view.View: boolean access.2500(android.view.View)>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo getKeyphraseEnrollmentInfo()>:<protected final>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaFocusControl.DisplayInfoForServer: android.media.IRemoteControlDisplay access.600(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.media.MediaPlayer: int _getAudioStreamType()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.filterpacks.base.RetargetFilter: void setupPorts()>:<public>:<android.filterpacks.base.RetargetFilter:android.filterfw.core.Filter>
<android.filterpacks.videosrc.SurfaceTextureTarget: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.media.MediaFocusControl: int getCurrentAudioFocus()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.RenderNode: float getTranslationY()>:<public>:<android.view.RenderNode>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.media.MediaFocusControl.DisplayInfoForServer: void <init>(android.media.MediaFocusControl,android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.media.WebVttParser: void access.400(android.media.WebVttParser,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<static>:<android.media.WebVttParser>
<android.media.audiofx.LoudnessEnhancer: java.lang.Object access.000(android.media.audiofx.LoudnessEnhancer)>:<static>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.widget.TextView: int viewportToContentHorizontalOffset()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ExpandableListView: int getPackedPositionType(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.RingtoneManager: void <init>(android.content.Context)>:<public>:<android.media.RingtoneManager>
<android.view.ViewRootImpl.EarlyPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.EarlyPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.gesture.GestureOverlayView: void touchUp(android.view.MotionEvent,boolean)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStroke: android.graphics.Path getPath()>:<public>:<android.gesture.GestureStroke>
<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<>:<android.view.inputmethod.InputMethodManager>
<android.widget.VideoView.6: void onBufferingUpdate(android.media.MediaPlayer,int)>:<public>:<android.widget.VideoView.6:android.media.MediaPlayer.OnBufferingUpdateListener>
<android.filterpacks.imageproc.TintFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.media.AudioService: void resetBluetoothSco()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RemoteViews.TextViewSizeAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.TextViewSizeAction:android.widget.RemoteViews.Action>
<android.view.WindowManagerPolicy: void updateNavigationBar(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.media.IMediaBrowserServiceCallbacks: void onConnectFailed()>:<public abstract>:<android.service.media.IMediaBrowserServiceCallbacks:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glViewport(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.IAudioService.Stub.Proxy: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.HardwareLayer: long nGetLayer(long)>:<private static native>:<android.view.HardwareLayer>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: boolean startFling(long,float,float)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.WindowManagerPolicy: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>:<protected>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.media.CCParser.DisplayListener: void onDisplayChanged(android.text.SpannableStringBuilder[])>:<public abstract>:<android.media.CCParser.DisplayListener>
<android.media.session.MediaController.CallbackStub: void onExtrasChanged(android.os.Bundle)>:<public>:<android.media.session.MediaController.CallbackStub:android.media.session.ISessionControllerCallback.Stub,android.os.Binder>
<android.view.GLES20Canvas: void nDrawRoundRect(long,float,float,float,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.sqlite.SQLiteConnection: void nativeRegisterCustomFunction(long,android.database.sqlite.SQLiteCustomFunction)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.view.View: void setElevation(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.view.SurfaceControl: void finalize()>:<protected>:<android.view.SurfaceControl>
<android.view.ThreadedRenderer: void nDestroy(long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference.SavedState.1: android.preference.MultiSelectListPreference.SavedState[] newArray(int)>:<public>:<android.preference.MultiSelectListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.FocusFinderHelper: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>:<public>:<android.view.FocusFinderHelper>
<android.view.ViewDebug: android.view.View findView(android.view.View,java.lang.String)>:<public static>:<android.view.ViewDebug>
<android.view.ViewGroup: void dispatchScreenStateChanged(int)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.fingerprint.IFingerprintServiceReceiver: void onAcquired(int)>:<public abstract>:<android.service.fingerprint.IFingerprintServiceReceiver:android.os.IInterface>
<android.media.Utils: android.util.Range intRangeFor(double)>:<static>:<android.media.Utils>
<android.media.IMediaScannerListener.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaScannerListener.Stub:android.os.Binder,android.media.IMediaScannerListener>
<android.media.session.ISession.Stub.Proxy: void setQueueTitle(java.lang.CharSequence)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.HardwareRenderer: void setName(java.lang.String)>:<abstract>:<android.view.HardwareRenderer>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()>:<public final>:<android.media.MediaCodec>
<android.database.Cursor: boolean moveToNext()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.accounts.ChooseAccountActivity.ViewHolder: void <init>(android.accounts.ChooseAccountActivity.1)>:<>:<android.accounts.ChooseAccountActivity.ViewHolder>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider: void <init>(android.media.MediaRouter.UserRouteInfo,int,int,int)>:<public>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider:android.media.VolumeProvider>
<android.database.sqlite.SQLiteSession: void <init>(android.database.sqlite.SQLiteConnectionPool)>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.session.PlaybackState: int getStateFromRccState(int)>:<public static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>:<public>:<android.media.AudioManager>
<android.media.session.PlaybackState: java.lang.CharSequence access.900(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.filterpacks.imageproc.BlackWhiteFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.BlackWhiteFilter:android.filterfw.core.Filter>
<android.widget.Editor: void hideSpanControllers()>:<private>:<android.widget.Editor>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.ScrollBarDrawable: int getSize(boolean)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.widget.SearchView.5: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public>:<android.widget.SearchView.5:android.view.View.OnLayoutChangeListener>
<android.media.IRemoteDisplayCallback.Stub: void <init>()>:<public>:<android.media.IRemoteDisplayCallback.Stub:android.os.Binder,android.media.IRemoteDisplayCallback>
<android.print.IWriteResultCallback: void onWriteCanceled(int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.View: int getLabelFor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean load()>:<public>:<android.gesture.GestureLibraries.ResourceGestureLibrary:android.gesture.GestureLibrary>
<android.media.AudioService: void ensureValidStreamType(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvParamName(float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.TtmlRenderer: boolean supports(android.media.MediaFormat)>:<public>:<android.media.TtmlRenderer:android.media.SubtitleController.Renderer>
<android.view.MotionEvent: int getFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.session.ISessionManager.Stub: android.media.session.ISessionManager asInterface(android.os.IBinder)>:<public static>:<android.media.session.ISessionManager.Stub:android.os.Binder,android.media.session.ISessionManager>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedHelper(boolean,long)>:<private>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.filterpacks.text.ToUpperCase: void setupPorts()>:<public>:<android.filterpacks.text.ToUpperCase:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.AccessibilityInteractionController: android.view.ViewRootImpl access.200(android.view.AccessibilityInteractionController)>:<static>:<android.view.AccessibilityInteractionController>
<android.service.notification.NotificationRankingUpdate: android.os.Bundle getVisibilityOverrides()>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.animation.IntKeyframeSet: java.lang.Class getType()>:<public>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.view.View: android.view.View.ScrollabilityCache getScrollCache()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.TextView: void setRawTextSize(float)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.animation.GridLayoutAnimationController: int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController.AnimationParameters)>:<private>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.preference.Preference: long getPersistedLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.inputmethod.InputMethodManager: int getInputMethodWindowVisibleHeight()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.accounts.AccountManager.13: void doWork()>:<public>:<android.accounts.AccountManager.13:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.print.PrintFileDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.print.PrinterDiscoverySession: void setOnPrintersChangeListener(android.print.PrinterDiscoverySession.OnPrintersChangeListener)>:<public final>:<android.print.PrinterDiscoverySession>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.gesture.Learner: void <init>()>:<>:<android.gesture.Learner>
<android.widget.HwAbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.database.sqlite.SQLiteConnection: void nativeBindDouble(long,long,int,double)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.session.ISession.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.media.IAudioService.Stub.Proxy: void setRemoteStreamVolume(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.GLLogWrapper: void glLightModelf(int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor.SuggestionsPopupWindow: int access.1600(android.widget.Editor.SuggestionsPopupWindow)>:<static>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.View: boolean setOpticalFrame(int,int,int,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.GenericInflater.Parent: void addItemFromInflater(java.lang.Object)>:<public abstract>:<android.preference.GenericInflater.Parent>
<android.view.KeyCharacterMap.KeyData: void <init>()>:<public>:<android.view.KeyCharacterMap.KeyData>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.service.textservice.SpellCheckerService: void <clinit>()>:<static>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.Keyframe: void setValueWasSetOnStart(boolean)>:<>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.AdapterViewAnimator: void measureChildren()>:<private>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.AudioManager: int getRouting(int)>:<public>:<android.media.AudioManager>
<android.media.CCParser.CCData: java.lang.String getDisplayText()>:<>:<android.media.CCParser.CCData>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getVisibleFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.print.PrintJobInfo.Builder: android.print.PrintJobInfo build()>:<public>:<android.print.PrintJobInfo.Builder>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.MediaCodec: void invalidateByteBuffer(java.nio.ByteBuffer[],int)>:<private final>:<android.media.MediaCodec>
<android.opengl.GLErrorWrapper: void glStencilOp(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.JetPlayer: boolean native_playJet()>:<private final native>:<android.media.JetPlayer>
<android.security.KeyStore: byte[] getPubkey(java.lang.String)>:<public>:<android.security.KeyStore>
<android.opengl.GLErrorWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IRingtonePlayer: void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes)>:<public abstract>:<android.media.IRingtonePlayer:android.os.IInterface>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.security.KeyStore: int getLastError()>:<public>:<android.security.KeyStore>
<android.widget.TimePicker.TimePickerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.media.tv.ITvInputManager.Stub.Proxy: void setSurface(android.os.IBinder,android.view.Surface,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.tv.TvInputHardwareInfo: int access.300(android.media.tv.TvInputHardwareInfo)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaPlayer: void onSubtitleTrackSelected(android.media.SubtitleTrack)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.accounts.IAccountManager.Stub.Proxy: boolean addSharedAccountAsUser(android.accounts.Account,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.tv.TvContract: android.net.Uri buildProgramUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.database.StaleDataException: void <init>()>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.MagnificationSpec: int describeContents()>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.SubtitleTrack.RenderingWidget: void onAttachedToWindow()>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.TvInputService.Session: void onSetStreamVolume(float)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.HwSplineOverScrollerDummy: double adjustDistance(double)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>:<public abstract>:<android.widget.AbsListView.RecyclerListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2900(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glMatrixMode(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.projection.MediaProjectionManager.CallbackDelegate: void <init>(android.media.projection.MediaProjectionManager.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjectionManager.CallbackDelegate:android.media.projection.IMediaProjectionWatcherCallback.Stub,android.os.Binder>
<android.media.audiofx.Visualizer: void <init>(int)>:<public>:<android.media.audiofx.Visualizer>
<android.widget.DayPickerView: int getPositionFromDay(java.util.Calendar)>:<private>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.MenuItem: boolean hasSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.widget.AutoCompleteTextView: int getListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.widget.Editor.Blink: void uncancel()>:<>:<android.widget.Editor.Blink:android.os.Handler,java.lang.Runnable>
<android.widget.Editor.InsertionHandleView: void onDetached()>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.View.ListenerInfo: android.view.View.OnTouchListener access.400(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.widget.ListView: boolean shouldAdjustHeightForDivider(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void transformMatrixToLocal(android.graphics.Matrix)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>:<public>:<android.view.WindowInsets>
<android.gesture.GestureOverlayView: void access.900(android.gesture.GestureOverlayView,int)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.SeekBarVolumizer: void revertVolume()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.animation.ValueAnimator: void initAnimation()>:<>:<android.animation.ValueAnimator:android.animation.Animator>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.AudioService.ScoClient: void clearCount(boolean)>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void onScrollStateChanged(android.widget.AbsListView,int)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.SimpleExpandableListAdapter: void bindView(android.view.View,java.util.Map,java.lang.String[],int[])>:<private>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ThreadedRenderer: void nRegisterAnimatingRenderNode(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction.Builder setExtras(android.os.Bundle)>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>:<public>:<android.media.MediaRecorder>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewRootImpl: void unscheduleConsumeBatchedInput()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaPlayer: void setVolume(float,float)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.ActionMenuView: android.widget.ActionMenuPresenter getPresenter()>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.print.PrintJobInfo: java.lang.String getLabel()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.ViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel.1)>:<>:<android.widget.ActivityChooserModel.PersistHistoryAsyncTask:android.os.AsyncTask>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void clearAccessibilityFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>:<private static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.widget.ViewAnimator: void showPrevious()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioPortEventHandler.1: void handleMessage(android.os.Message)>:<public>:<android.media.AudioPortEventHandler.1:android.os.Handler>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void finishTracking(long)>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.View: boolean inLiveRegion()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Visualizer.MeasurementPeakRms: void <init>()>:<public>:<android.media.audiofx.Visualizer.MeasurementPeakRms>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.accounts.AccountManager.BaseFutureTask: void postRunnableToHandler(java.lang.Runnable)>:<protected>:<android.accounts.AccountManager.BaseFutureTask:java.util.concurrent.FutureTask>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.print.IPrintSpooler.Stub.Proxy: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.media.AudioService: void setBluetoothA2dpOn(boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RadialTimePickerView: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.media.AudioPortEventHandler: void <clinit>()>:<static>:<android.media.AudioPortEventHandler>
<android.media.AudioService: int access.5900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.ViewFlipper: void startFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnection: void onCancel()>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.service.media.MediaBrowserService: void onCreate()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Menu: boolean hasVisibleItems()>:<public abstract>:<android.view.Menu>
<android.media.tv.ITvInputHardwareCallback.Stub: void <init>()>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub:android.os.Binder,android.media.tv.ITvInputHardwareCallback>
<android.widget.StackView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: int getNestedScrollAxes()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.ImageReader.SurfaceImage: void access.200(android.media.ImageReader.SurfaceImage)>:<static>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.ViewRootImpl.InputStage: boolean shouldDropInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaFocusControl: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: boolean isEmpty()>:<public>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.widget.ListView: boolean canAnimate()>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.9: void run()>:<public>:<android.view.ViewDebug.9:java.lang.Runnable>
<android.widget.SearchView: java.lang.CharSequence getQueryHint()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.PopupMenu: com.android.internal.view.menu.MenuPopupHelper access.000(android.widget.PopupMenu)>:<static>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.Editor.TextModifyOperation.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.widget.SimpleMonthAdapter: void setSelectedDay(java.util.Calendar)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.animation.Animator.AnimatorListener: void onAnimationEnd(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.animation.LayoutTransition.5: void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup)>:<>:<android.animation.LayoutTransition.5:android.animation.AnimatorListenerAdapter>
<android.service.wallpaper.WallpaperService.WallpaperCommand: void <init>()>:<>:<android.service.wallpaper.WallpaperService.WallpaperCommand>
<android.service.dreams.DreamManagerInternal: void startDream(boolean)>:<public abstract>:<android.service.dreams.DreamManagerInternal>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>:<public>:<android.media.session.MediaController>
<android.media.tv.ITvInputManager.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputManager.Stub:android.os.Binder,android.media.tv.ITvInputManager>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.AppSecurityPermissions.PermissionItemView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.security.KeyStore: boolean password(java.lang.String)>:<public>:<android.security.KeyStore>
<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider.VisibilityListener)>:<public>:<android.view.ActionProvider>
<android.media.audiofx.Visualizer: int setServerDiedListener(android.media.audiofx.Visualizer.OnServerDiedListener)>:<public>:<android.media.audiofx.Visualizer>
<android.media.SubtitleController.Anchor: void setSubtitleWidget(android.media.SubtitleTrack.RenderingWidget)>:<public abstract>:<android.media.SubtitleController.Anchor>
<android.media.MediaRouterClientState.RouteInfo.1: android.media.MediaRouterClientState.RouteInfo[] newArray(int)>:<public>:<android.media.MediaRouterClientState.RouteInfo.1:android.os.Parcelable.Creator>
<android.widget.ScrollView: void flingWithNestedDispatch(int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.accounts.AccountManagerResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: int normalizeMetaState(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.ChooseAccountTypeActivity: void buildTypeToAuthDescriptionMap()>:<private>:<android.accounts.ChooseAccountTypeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.DrawRectFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.view.View: boolean needRtlPropertiesResolution()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.VelocityTracker.Estimator: float estimate(float,float[])>:<private>:<android.view.VelocityTracker.Estimator>
<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>:<public>:<android.media.session.MediaSession>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.AudioService: void showToast(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewGroup: void layout(int,int,int,int)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController.AnimationParameters)>:<private>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.view.ThreadedRenderer: long nCreateRootRenderNode()>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.view.View: void checkForLongClick(int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintJobInfo: int describeContents()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.DisplayEventReceiver: void dispatchVsync(long,int,int)>:<private>:<android.view.DisplayEventReceiver>
<android.widget.Toast: void setDuration(int)>:<public>:<android.widget.Toast>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.3000(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.HardwareLayer: boolean nPrepare(long,int,int,boolean)>:<private static native>:<android.view.HardwareLayer>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.view.ViewGroup.LayoutParams: void resolveLayoutDirection(int)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.database.MatrixCursor: int getCount()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.print.IPrintDocumentAdapterObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintDocumentAdapterObserver.Stub.Proxy:android.print.IPrintDocumentAdapterObserver>
<android.print.pdf.PrintedPdfDocument: int getPageHeight()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.view.InputDevice.MotionRange: float getFuzz()>:<public>:<android.view.InputDevice.MotionRange>
<android.view.ViewGroup.1: void <init>(android.view.ViewGroup)>:<>:<android.view.ViewGroup.1:java.lang.Runnable>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioRecord>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.media.MediaHTTPConnection: int readAt(long,byte[],int)>:<private>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer.FrameCallback)>:<public>:<android.view.Choreographer>
<android.service.voice.VoiceInteractionSession.1: com.android.internal.app.IVoiceInteractorRequest startAbortVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.view.IWindowSession: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.SurfaceView.4: void <init>(android.view.SurfaceView)>:<>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.service.notification.StatusBarNotification: int getUid()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.media.projection.IMediaProjection.Stub.Proxy: void unregisterCallback(android.media.projection.IMediaProjectionCallback)>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.media.audiofx.Virtualizer: boolean canVirtualize(int,int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.ViewGroup: void addView(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.GLES20Canvas: void setProperty(java.lang.String,java.lang.String)>:<public static>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.gesture.GestureOverlayView: void access.400(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.GridLayout.Axis: void include(java.util.List,android.widget.GridLayout.Interval,android.widget.GridLayout.MutableInt)>:<private>:<android.widget.GridLayout.Axis>
<android.view.ViewGroup: java.util.ArrayList buildOrderedChildList()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.SubtitleController: void access.100(android.media.SubtitleController)>:<static>:<android.media.SubtitleController>
<android.media.AudioService: int getLastAudibleStreamVolume(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrintAttributes: android.print.PrintAttributes.Resolution getResolution()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String toString(int,short[],int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.SurfaceControl: android.os.IBinder createDisplay(java.lang.String,boolean)>:<public static>:<android.view.SurfaceControl>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)>:<public>:<android.media.projection.MediaProjectionManager>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void <init>(android.service.notification.NotificationListenerService,android.service.notification.NotificationListenerService.1)>:<>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.view.ViewTreeObserver.InternalInsetsInfo: void setTouchableInsets(int)>:<public>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.view.inputmethod.CompletionInfo: int describeContents()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityWindowInfo: void access.000(android.view.accessibility.AccessibilityWindowInfo,android.os.Parcel)>:<static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.View: java.lang.Object getTag()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.CropFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.CropFilter:android.filterfw.core.Filter>
<android.media.SubtitleTrack.CueList.EntryIterator: java.lang.Object next()>:<public volatile>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.media.tv.ITvInputManager: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.printservice.PrintService: android.print.PrinterId generatePrinterId(java.lang.String)>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaController: android.media.session.ISessionController getSessionBinder()>:<>:<android.media.session.MediaController>
<android.view.Display: void getRectSize(android.graphics.Rect)>:<public>:<android.view.Display>
<android.media.tv.TvInputService: java.lang.String onHardwareRemoved(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.IAudioService: void disableSafeMediaVolume()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.ViewGroup: void removeAllViewsInLayout()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: boolean isConnected()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.media.audiofx.PresetReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.PresetReverb,int,int,short)>:<public abstract>:<android.media.audiofx.PresetReverb.OnParameterChangeListener>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<android.printservice.IPrintServiceClient.Stub.Proxy: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.widget.RemoteViewsAdapter: void enqueueDeferredUnbindServiceMessage()>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.FocusRequester: int focusLossForGainRequest(int)>:<private>:<android.media.FocusRequester>
<android.opengl.EGLLogWrapper: void returns(boolean)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.database.sqlite.JankSqlite: boolean getProp()>:<public static>:<android.database.sqlite.JankSqlite>
<android.widget.Editor: android.widget.Editor.PositionListener getPositionListener()>:<private>:<android.widget.Editor>
<android.media.tv.ITvInputSession: void selectTrack(int,java.lang.String)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.opengl.GLLogWrapper: void checkError()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,java.lang.String,java.util.List)>:<public static>:<android.hsm.HwSystemManager>
<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder.Callback access.300(android.widget.ActionMenuView)>:<static>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.database.IContentObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.database.IContentObserver.Stub:android.os.Binder,android.database.IContentObserver>
<android.media.projection.IMediaProjectionManager: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onInputEvent(android.view.InputEvent)>:<public>:<android.view.ViewRootImpl.WindowInputEventReceiver:android.view.InputEventReceiver>
<android.view.View: void onAnimationEnd()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.imageproc.ToRGBAFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ToRGBAFilter:android.filterfw.core.Filter>
<android.media.MediaPlayer: android.media.MediaPlayer.OnSeekCompleteListener access.1200(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.tv.TvInputInfo.TvInputSettings: void <init>()>:<private>:<android.media.tv.TvInputInfo.TvInputSettings>
<android.view.View.PerformClick: void run()>:<public>:<android.view.View.PerformClick:java.lang.Runnable>
<android.service.notification.ZenModeConfig: java.lang.String toString()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.print.PrintDocumentInfo.1: android.print.PrintDocumentInfo[] newArray(int)>:<public>:<android.print.PrintDocumentInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.media.browse.MediaBrowser.MediaItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.view.IWindowManager.Stub.Proxy: boolean isKeyguardSecure()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.ViewGroup: void initViewGroup()>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarPreference.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.SeekBarPreference.SavedState.1:android.os.Parcelable.Creator>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.browse.MediaBrowser.MediaItem.1: android.media.browse.MediaBrowser.MediaItem[] newArray(int)>:<public>:<android.media.browse.MediaBrowser.MediaItem.1:android.os.Parcelable.Creator>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.TextureView:android.view.View>
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.projection.IMediaProjectionWatcherCallback: void onStop(android.media.projection.MediaProjectionInfo)>:<public abstract>:<android.media.projection.IMediaProjectionWatcherCallback:android.os.IInterface>
<android.media.IRingtonePlayer.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRingtonePlayer.Stub:android.os.Binder,android.media.IRingtonePlayer>
<android.view.IWindowId.Stub.Proxy: boolean isFocused()>:<public>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.media.tv.TvInputManager.Session: void setStreamVolume(float)>:<public>:<android.media.tv.TvInputManager.Session>
<android.print.PrintAttributes: void <init>(android.os.Parcel,android.print.PrintAttributes.1)>:<>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.tv.TvInputManager.Session: void dispatchSurfaceChanged(int,int,int)>:<public>:<android.media.tv.TvInputManager.Session>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: void onPostExecute(java.lang.Object)>:<protected volatile>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.widget.Editor.InsertionPointCursorController: android.widget.Editor.InsertionHandleView getHandle()>:<private>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.widget.DatePicker: void <init>(android.content.Context)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo findWifiDisplayRoute(android.hardware.display.WifiDisplay)>:<private static>:<android.media.MediaRouter>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.TwoStatePreference: void onClick()>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources.Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>:<private static>:<android.animation.AnimatorInflater>
<android.view.View.SendViewStateChangedAccessibilityEvent: void <init>(android.view.View)>:<private>:<android.view.View.SendViewStateChangedAccessibilityEvent:java.lang.Runnable>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification clone()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.view.inputmethod.CursorAnchorInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.CursorAnchorInfo.1:android.os.Parcelable.Creator>
<android.widget.TimePickerClockDelegate.4: void <init>(android.widget.TimePickerClockDelegate)>:<>:<android.widget.TimePickerClockDelegate.4:android.widget.NumberPicker.OnValueChangeListener>
<android.print.PrintAttributes.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.printservice.IPrintService.Stub.Proxy: void createPrinterDiscoverySession()>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.RankingMap access.500(android.service.notification.NotificationListenerService)>:<static>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.SoundPool.SoundPoolImpl: java.lang.Object access.100(android.media.SoundPool.SoundPoolImpl)>:<static>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.widget.VideoView: int access.102(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES10: void glFogf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.print.IPrintSpoolerClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.filterpacks.imageproc.ImageCombineFilter: void updateProgramWithTarget(int,android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: void stopActiveProjection()>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.MediaCodec.BufferMap.CodecBuffer: void <init>()>:<private>:<android.media.MediaCodec.BufferMap.CodecBuffer>
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.animation.Animator: void removePauseListener(android.animation.Animator.AnimatorPauseListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.ThreadedRenderer: void nDetachSurfaceTexture(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Gallery: void setSelectedPositionInt(int)>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>:<public static>:<android.media.ThumbnailUtils>
<android.view.Display: boolean isPublicPresentation()>:<public>:<android.view.Display>
<android.media.CCParser.CCData: android.media.CCParser.CCData[] fromByteArray(byte[])>:<static>:<android.media.CCParser.CCData>
<android.view.Surface.1: android.view.Surface[] newArray(int)>:<public>:<android.view.Surface.1:android.os.Parcelable.Creator>
<android.media.MediaPlayer: void access.900(android.media.MediaPlayer,boolean)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.TextView: void spanChange(android.text.Spanned,java.lang.Object,int,int,int,int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.textservice.SpellCheckerService.Session: void onCancel()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>:<public>:<android.view.WindowInsets>
<android.view.ScaleGestureDetector: float getFocusY()>:<public>:<android.view.ScaleGestureDetector>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.filterpacks.base.CallbackFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.CallbackFilter:android.filterfw.core.Filter>
<android.view.KeyCharacterMap: void nativeDispose(long)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.View: boolean canAcceptDrag()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: void sendBroadcastToAll(android.content.Intent)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.animation.Animation.2: void <init>(android.view.animation.Animation)>:<>:<android.view.animation.Animation.2:java.lang.Runnable>
<android.media.MediaDrm: void native_setup(java.lang.Object,byte[])>:<private final native>:<android.media.MediaDrm>
<android.animation.Keyframes: java.lang.Object getValue(float)>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)>:<public>:<android.view.TextureView:android.view.View>
<android.widget.Editor: boolean hasSelectionController()>:<>:<android.widget.Editor>
<android.view.KeyEvent: int getMaxKeyCode()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.pm.ResolveInfo,boolean,java.lang.String,java.util.List,int,boolean,boolean)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.VideoView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.tv.TvInputManager.Session: java.lang.String access.702(android.media.tv.TvInputManager.Session,java.lang.String)>:<static>:<android.media.tv.TvInputManager.Session>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.AudioTrack: float getMinVolume()>:<public static>:<android.media.AudioTrack>
<android.view.accessibility.AccessibilityEvent.1: android.view.accessibility.AccessibilityEvent createFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityEvent.1:android.os.Parcelable.Creator>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext.DebugProcKHR glGetDebugMessageCallbackKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.media.MediaFocusControl.1: void <init>(android.media.MediaFocusControl)>:<>:<android.media.MediaFocusControl.1:android.telephony.PhoneStateListener>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getParseError()>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.view.View: void dispatchSetPressed(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioTrack: boolean isMultichannelConfigSupported(int)>:<private static>:<android.media.AudioTrack>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void access.500(android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: int getScanCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.SurfaceControl: void nativeScreenshot(android.os.IBinder,android.view.Surface,android.graphics.Rect,int,int,int,int,boolean,boolean)>:<private static native>:<android.view.SurfaceControl>
<android.view.View: void setLayoutDirection(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: void glNormal3f(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.filterpacks.imageproc.StraightenFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.service.dreams.DreamService.1: void run()>:<public>:<android.service.dreams.DreamService.1:java.lang.Runnable>
<android.view.View: void invalidateParentIfNeededAndWasQuickRejected()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.Static.Client.1: void run()>:<public>:<android.media.MediaRouter.Static.Client.1:java.lang.Runnable>
<android.filterpacks.imageproc.CrossProcessFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.CrossProcessFilter:android.filterfw.core.Filter>
<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession>
<android.media.MediaDescription.Builder: android.media.MediaDescription build()>:<public>:<android.media.MediaDescription.Builder>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getDisplayFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.Spinner.DropDownAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>:<public>:<android.media.AudioManager>
<android.view.WindowInfo.1: android.view.WindowInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.WindowInfo.1:android.os.Parcelable.Creator>
<android.gesture.GestureOverlayView: float access.1002(android.gesture.GestureOverlayView,float)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.opengl.GLErrorWrapper: void glNormal3f(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: void addWindowToken(android.os.IBinder,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.ValueAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.IInputFilter.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IInputFilter.Stub:android.os.Binder,android.view.IInputFilter>
<android.animation.AnimatorSet: void setupEndValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityDestroyed(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.service.notification.Condition: void <init>(android.os.Parcel,android.service.notification.Condition.1)>:<>:<android.service.notification.Condition:android.os.Parcelable>
<android.view.IWindow.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>:<public>:<android.media.MediaRecorder>
<android.view.View.SendViewScrolledAccessibilityEvent: void <init>(android.view.View)>:<private>:<android.view.View.SendViewScrolledAccessibilityEvent:java.lang.Runnable>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.session.MediaSession.CallbackStub: void onNext()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)>:<public>:<android.widget.CursorFilter:android.widget.Filter>
<android.animation.PropertyValuesHolder: void access.800(java.lang.Object,long,float[])>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewRootImpl.WindowInputEventReceiver: boolean shouldQueueInputEvent(android.view.InputEvent)>:<public>:<android.view.ViewRootImpl.WindowInputEventReceiver:android.view.InputEventReceiver>
<android.view.Gravity: int getAbsoluteGravity(int,int)>:<public static>:<android.view.Gravity>
<android.media.EncoderCapabilities: int native_get_num_audio_encoders()>:<private static final native>:<android.media.EncoderCapabilities>
<android.media.MediaCodec: void flush()>:<public final>:<android.media.MediaCodec>
<android.media.MediaRouter.WifiDisplayStatusChangedReceiver: void <init>()>:<>:<android.media.MediaRouter.WifiDisplayStatusChangedReceiver:android.content.BroadcastReceiver>
<android.view.animation.ClipRectAnimation: void <init>(android.graphics.Rect,android.graphics.Rect)>:<public>:<android.view.animation.ClipRectAnimation:android.view.animation.Animation>
<android.widget.TimePickerSpinnerDelegate: void updateRadialPicker(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.TextView: void setTextSize(int,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SearchView: void onCloseClicked()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.FocusRequester: int getGainRequest()>:<>:<android.media.FocusRequester>
<android.filterpacks.imageproc.AutoFixFilter: void <clinit>()>:<static>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] following(int)>:<public>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.media.MediaCodec.Callback: void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec.BufferInfo)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.TimePickerSpinnerDelegate: int[] getEnteredTime(boolean[])>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.ViewOverlay.OverlayViewGroup: void clear()>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: void setBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.AudioManagerInternal: void <init>()>:<public>:<android.media.AudioManagerInternal>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputEventConsistencyVerifier: void problem(java.lang.String)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.Toast: void setGravity(int,int,int)>:<public>:<android.widget.Toast>
<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.service.dreams.IDreamService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.view.View.7: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.7:android.util.FloatProperty>
<android.media.AudioService: java.lang.Object access.1600(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.PointerIcon: float getHotSpotX()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.ViewRootImpl: void enableHardwareAcceleration(android.view.WindowManager.LayoutParams)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>:<public abstract>:<android.view.MenuItem>
<android.media.IVolumeController: void volumeChanged(int,int)>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.media.MediaDescription.1: android.media.MediaDescription[] newArray(int)>:<public>:<android.media.MediaDescription.1:android.os.Parcelable.Creator>
<android.media.AudioService: boolean checkAudioSettingsPermission(java.lang.String)>:<>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins access.300(android.print.PrinterCapabilitiesInfo)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>:<public static>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType[] values()>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.media.ExifInterface: byte[] getThumbnailNative(java.lang.String)>:<private native>:<android.media.ExifInterface>
<android.view.VelocityTracker: float getXVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.media.CCParser.CCData: int getCtrlCode()>:<>:<android.media.CCParser.CCData>
<android.service.restrictions.RestrictionsReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.media.MediaPlayer.TrackInfo: java.lang.String getLanguage()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityResumed(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.print.PrintJobInfo: boolean isCancelling()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.TextViewDrawableAction:android.widget.RemoteViews.Action>
<android.media.MediaRecorder: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.MediaRecorder>
<android.security.KeyChain.1: void <init>(java.util.concurrent.BlockingQueue)>:<>:<android.security.KeyChain.1:android.content.ServiceConnection>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.gesture.Gesture: android.gesture.Gesture deserialize(java.io.DataInputStream)>:<static>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.IWindowSession: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.animation.LayoutTransition: void runChangeTransition(android.view.ViewGroup,android.view.View,int)>:<private>:<android.animation.LayoutTransition>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.6: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.6:android.util.FloatProperty>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.pm.ServiceInfo)>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.media.audiofx.Visualizer: void native_release()>:<private final native>:<android.media.audiofx.Visualizer>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.view.inputmethod.CompletionInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.CompletionInfo.1:android.os.Parcelable.Creator>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void enroll(android.os.IBinder,long,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.view.AbsLayoutParams: void <init>()>:<public>:<android.view.AbsLayoutParams>
<android.view.KeyCharacterMap.FallbackAction: void recycle()>:<public>:<android.view.KeyCharacterMap.FallbackAction>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.SearchView: void updateSubmitButton(boolean)>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLES10: int glGetError()>:<public static native>:<android.opengl.GLES10>
<android.view.inputmethod.InputMethodManager: void scheduleCheckFocusLocked(android.view.View)>:<static>:<android.view.inputmethod.InputMethodManager>
<android.database.sqlite.SQLiteConnection: void setSyncMode(java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.VolumePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.ViewRootImpl: long access.2802(android.view.ViewRootImpl,long)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.tv.TvInputManager.TvInputCallbackRecord: void postInputUpdated(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.widget.MediaController: boolean access.600(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.AnimatorSet: boolean isRunning()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.IAudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void remove(android.os.IBinder,int,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.animation.LayoutTransition.3: void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup)>:<>:<android.animation.LayoutTransition.3:android.view.View.OnLayoutChangeListener>
<android.media.AudioFormat: int access.000(android.media.AudioFormat)>:<static>:<android.media.AudioFormat>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.AudioTrack: int setPlaybackRate(int)>:<public>:<android.media.AudioTrack>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.media.IRemoteControlClient.Stub: void <init>()>:<public>:<android.media.IRemoteControlClient.Stub:android.os.Binder,android.media.IRemoteControlClient>
<android.media.SoundPool: void setPriority(int,int)>:<public final>:<android.media.SoundPool>
<android.media.tv.ITvInputSession: void dispatchSurfaceChanged(int,int,int)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.media.AudioService: boolean isHdmiSystemAudioSupported()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,float[][])>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.DatePicker: android.widget.DatePicker.DatePickerDelegate createCalendarUIDelegate(android.content.Context,android.util.AttributeSet,int,int)>:<private>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IRemoteDisplayCallback: void onStateChanged(android.media.RemoteDisplayState)>:<public abstract>:<android.media.IRemoteDisplayCallback:android.os.IInterface>
<android.opengl.EGLDisplay: void <init>(long)>:<private>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <clinit>()>:<static>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.media.MediaRouterClientState: android.media.MediaRouterClientState.RouteInfo getRoute(java.lang.String)>:<public>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets(boolean,boolean,boolean,boolean)>:<public>:<android.view.WindowInsets>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.AudioTrack: int native_setup(java.lang.Object,java.lang.Object,int,int,int,int,int,int[])>:<private final native>:<android.media.AudioTrack>
<android.service.voice.VoiceInteractionSession: void onConfirm(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>:<public abstract>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.media.AudioManager: boolean registerRemoteController(android.media.RemoteController)>:<public>:<android.media.AudioManager>
<android.view.ThreadedRenderer: void setup(int,int,android.graphics.Rect)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.tv.TvView.1: void <init>(android.media.tv.TvView)>:<>:<android.media.tv.TvView.1:android.view.SurfaceHolder.Callback>
<android.widget.AbsListView.RecycleBin: void clearAccessibilityFromScrap(android.view.View)>:<private>:<android.widget.AbsListView.RecycleBin>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.widget.TextView: void setInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.EncoderCapabilities: java.util.List getAudioEncoders()>:<public static>:<android.media.EncoderCapabilities>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.widget.StackView.StackSlider: void setView(android.view.View)>:<>:<android.widget.StackView.StackSlider>
<android.view.GLES20Canvas: void concat(android.graphics.Matrix)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.tv.TvInputInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.tv.TvInputInfo.1:android.os.Parcelable.Creator>
<android.service.notification.ConditionProviderService.Provider: void <init>(android.service.notification.ConditionProviderService,android.service.notification.ConditionProviderService.1)>:<>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.media.MediaFocusControl: boolean isPlaystateActive(int)>:<protected static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.Switch: boolean hitThumb(float,float)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.InputEventConsistencyVerifier: void ensureMetaStateIsNormalized(int)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.view.ViewRootImpl.W: void dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.media.IAudioService.Stub.Proxy: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.tv.ITvInputServiceCallback: void removeTvInput(java.lang.String)>:<public abstract>:<android.media.tv.ITvInputServiceCallback:android.os.IInterface>
<android.widget.Editor.InsertionHandleView: void updateSelection(int)>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.MediaRouter.Static: void updateDiscoveryRequest()>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.Window: void closePanel(int)>:<public abstract>:<android.view.Window>
<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>:<public>:<android.accounts.AccountManager>
<android.media.IAudioService.Stub.Proxy: void playSoundEffectVolume(int,float)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.animation.Animator: void <init>()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.preference.MultiCheckPreference: java.lang.String[] getEntryValues()>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.voice.AlwaysOnHotwordDetector: int access.200(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: void glFrontFace(int)>:<public static native>:<android.opengl.GLES10>
<android.media.session.MediaSession.QueueItem.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.session.MediaSession.QueueItem.1:android.os.Parcelable.Creator>
<android.media.RemoteDisplay.2: void <init>(android.media.RemoteDisplay)>:<>:<android.media.RemoteDisplay.2:java.lang.Runnable>
<android.widget.FastScroller: void updateLayout()>:<public>:<android.widget.FastScroller>
<android.view.View.MeasureSpec: int getMode(int)>:<public static>:<android.view.View.MeasureSpec>
<android.media.MediaCodecList: void <clinit>()>:<static>:<android.media.MediaCodecList>
<android.print.PrintJobInfo: void <init>(android.os.Parcel,android.print.PrintJobInfo.1)>:<>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.ViewConfiguration: int getTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.print.IPrintSpooler.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrintAttributes.MediaSize: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.RadioGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.WebVttRenderingWidget.1: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>:<public>:<android.media.WebVttRenderingWidget.1:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.ViewGroup.3: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public>:<android.view.ViewGroup.3:android.animation.LayoutTransition.TransitionListener>
<android.view.InputDevice.MotionRange: void <init>(int,int,float,float,float,float,float)>:<private>:<android.view.InputDevice.MotionRange>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HwAbsListView: void initSpringBackEffect()>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.GridLayout.Axis: void recordOriginalMeasurement(int)>:<private>:<android.widget.GridLayout.Axis>
<android.accounts.AccountManagerResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountManagerResponse:android.os.Parcelable>
<android.view.View.13: void setValue(android.view.View,float)>:<public>:<android.view.View.13:android.util.FloatProperty>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification cloneLight()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.ddm.DdmHandleNativeHeap: byte[] getLeakInfo()>:<private native>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.IAudioService.Stub.Proxy: void setMode(int,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.NegativeFilter:android.filterfw.core.Filter>
<android.media.tv.ITvInputSession.Stub.Proxy: void dispatchSurfaceChanged(int,int,int)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.preference.DialogPreference: void setDialogTitle(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.service.dreams.DreamService.DreamServiceWrapper.3: void <init>(android.service.dreams.DreamService.DreamServiceWrapper)>:<>:<android.service.dreams.DreamService.DreamServiceWrapper.3:java.lang.Runnable>
<android.view.Window: void setTransitionBackgroundFadeDuration(long)>:<public>:<android.view.Window>
<android.media.MediaCrypto: void release()>:<public final native>:<android.media.MediaCrypto>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.IAccountAuthenticator.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.view.RenderNode: float getPivotY()>:<public>:<android.view.RenderNode>
<android.view.ViewDebug.FlagToString: java.lang.String name()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewDebug: void initCustomizedList(android.content.Context)>:<private static>:<android.view.ViewDebug>
<android.view.View: void bringToFront()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.view.KeyEvent: int metaStateFilterDirectionalModifiers(int,int,int,int,int)>:<private static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected volatile>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectAsyncTask:android.os.AsyncTask>
<android.widget.TimePickerSpinnerDelegate: int deleteLastTypedKey()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.session.MediaController.TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.preference.Preference: void setKey(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.preference.ListPreference.SavedState.1: void <init>()>:<>:<android.preference.ListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.IAudioService: int getMasterVolume()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteCancelled()>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: void onResult(android.os.Bundle)>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.view.View: void makeOptionalFitsSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.printservice.PrintJob: boolean isCompleted()>:<public>:<android.printservice.PrintJob>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.accounts.IAccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.tv.TvInputService.Session: void access.1100(android.media.tv.TvInputService.Session,android.media.tv.ITvInputSessionCallback)>:<static>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ScaleGestureDetector: float getPreviousSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: void <init>(android.media.session.MediaSessionLegacyHelper.SessionHolder,android.media.session.MediaSessionLegacyHelper.1)>:<>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaMetadata: void <init>(android.os.Parcel,android.media.MediaMetadata.1)>:<>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.animation.BounceInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.ViewFlipper: void access.200(android.widget.ViewFlipper,boolean)>:<static>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.IRingtonePlayer.Stub.Proxy: void stopAsync()>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.widget.VideoView: int getCurrentPosition()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.Tokenizer: int access.100(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.animation.LayoutTransition: void enableTransitionType(int)>:<public>:<android.animation.LayoutTransition>
<android.widget.Scroller: double getSplineFlingDistance(float)>:<private>:<android.widget.Scroller>
<android.widget.Spinner.DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.print.IPrintManager: void startPrinterStateTracking(android.print.PrinterId,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.view.View: float getRotationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: int sign(int)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.ISessionCallback.Stub.Proxy: void onPause()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.view.View: android.os.Handler getHandler()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.IConditionProvider: void onConnected()>:<public abstract>:<android.service.notification.IConditionProvider:android.os.IInterface>
<android.widget.TextView: java.util.Locale getTextServicesLocale()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.IPrintManager: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.opengl.EGLLogWrapper: void checkError()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void initilaizePaints()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.view.WindowAnimationFrameStats.1: android.view.WindowAnimationFrameStats[] newArray(int)>:<public>:<android.view.WindowAnimationFrameStats.1:android.os.Parcelable.Creator>
<android.service.wallpaper.IWallpaperEngine: void setDisplayPadding(android.graphics.Rect)>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.service.notification.IConditionProvider.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.Nsd: void startNsd(int)>:<static>:<android.view.Nsd>
<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaRouter.UserRouteInfo: void updatePlaybackInfoOnRcc()>:<private>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(android.content.Context,int)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.preference.Preference: void setWidgetLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.VideoView: android.os.Looper getSubtitleLooper()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.ViewTreeObserver.CopyOnWriteArray.Access: java.util.ArrayList access.000(android.view.ViewTreeObserver.CopyOnWriteArray.Access)>:<static>:<android.view.ViewTreeObserver.CopyOnWriteArray.Access>
<huawei.android.net.wifi.HwCustBaseWifiFactoryImpl: void <init>()>:<public>:<huawei.android.net.wifi.HwCustBaseWifiFactoryImpl:android.net.wifi.HwCustBaseWifiFactory.Factory>
<android.animation.LayoutTransition: void <init>()>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.IAccountManager.Stub.Proxy: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.WebVttParser.Phase: void parse(java.lang.String)>:<public abstract>:<android.media.WebVttParser.Phase>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.Display: int getType()>:<public>:<android.view.Display>
<android.view.SurfaceControl: boolean nativeClearContentFrameStats(long)>:<private static native>:<android.view.SurfaceControl>
<android.test.InstrumentationTestCase: void <init>()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.Choreographer.2: java.lang.String toString()>:<public>:<android.view.Choreographer.2>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.TextView: float getLineSpacingMultiplier()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.AutoFixFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.AutoFixFilter:android.filterfw.core.Filter>
<android.database.Cursor: double getDouble(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.MediaRecorder: void <clinit>()>:<static>:<android.media.MediaRecorder>
<android.widget.RemoteViews.BitmapReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap)>:<>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.widget.HwAbsListView: boolean inCheckableViewOnMove(android.view.View,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>:<public static>:<android.security.KeyChain>
<android.view.View: void hackTurnOffWindowResizeAnim(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder: void setVideoFrameRate(int)>:<public native>:<android.media.MediaRecorder>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Size getBlockSize()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.FastScroller: android.widget.ImageView getTrackImage()>:<protected>:<android.widget.FastScroller>
<android.view.KeyCharacterMap.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.KeyCharacterMap.1:android.os.Parcelable.Creator>
<android.view.WindowManagerPolicy.WindowState: boolean isAlive()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.view.DisplayInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.MediaCodecInfo.AudioCapabilities: boolean supportsFormat(android.media.MediaFormat)>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.media.Metadata: boolean has(int)>:<public>:<android.media.Metadata>
<android.view.inputmethod.CorrectionInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.CorrectionInfo.1:android.os.Parcelable.Creator>
<android.view.FocusFinder.1: android.view.FocusFinder initialValue()>:<protected>:<android.view.FocusFinder.1:java.lang.ThreadLocal>
<android.widget.RemoteViews.ReflectionAction: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.ReflectionAction:android.widget.RemoteViews.Action>
<android.view.ViewTreeObserver.OnComputeInternalInsetsListener: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>:<public abstract>:<android.view.ViewTreeObserver.OnComputeInternalInsetsListener>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>:<public native>:<android.media.MediaMetadataRetriever>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.VideoView: void suspend()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.AbsListView.FlingRunnable.1: void run()>:<public>:<android.widget.AbsListView.FlingRunnable.1:java.lang.Runnable>
<android.media.RemoteControlClient: int access.600(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.widget.ListView: long[] getCheckItemIds()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.MediaController: void installPrevNextListeners()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.dreams.Sandman: boolean isScreenSaverActivatedOnDock(android.content.Context)>:<private static>:<android.service.dreams.Sandman>
<android.view.accessibility.AccessibilityEvent: void recycle()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.print.IWriteResultCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: void registerDependent(android.preference.Preference)>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.AccountAuthenticatorResponse.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.service.trust.ITrustAgentService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.print.PrinterDiscoverySession: void handlePrintersRemoved(java.util.List)>:<private>:<android.print.PrinterDiscoverySession>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>:<private>:<android.view.FocusFinder>
<android.widget.CalendarView: int getWeekNumberColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridView: void layoutChildren()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.CheckForKeyLongPress: void run()>:<public>:<android.widget.AbsListView.CheckForKeyLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.media.MediaFocusControl.NotificationListenerObserver: void onChange(boolean,android.net.Uri)>:<public>:<android.media.MediaFocusControl.NotificationListenerObserver:android.database.ContentObserver>
<android.media.audiopolicy.AudioMix.Builder: void <init>()>:<>:<android.media.audiopolicy.AudioMix.Builder>
<android.media.AudioService.SoundPoolCallback: void setSamples(int[])>:<public>:<android.media.AudioService.SoundPoolCallback:android.media.SoundPool.OnLoadCompleteListener>
<android.print.IPrintDocumentAdapterObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.view.OrientationListener: void enable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.view.InputEvent: void setTainted(boolean)>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.media.WebVttRenderingWidget.CueLayout: boolean isActive()>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.IAccessibilityManager: java.util.List getInstalledAccessibilityServiceList(int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.ParcelableVolumeInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.session.ParcelableVolumeInfo.1:android.os.Parcelable.Creator>
<android.view.ViewRootImpl: void setDrawDuringWindowsAnimating(boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.voice.VoiceInteractionService: void onShutdown()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String[] validFeatures()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>:<public>:<android.view.FocusFinder>
<android.widget.Filter: android.os.Handler access.200(android.widget.Filter)>:<static>:<android.widget.Filter>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext.DebugProcKHR)>:<public static native>:<android.opengl.GLES31Ext>
<android.service.wallpaper.WallpaperService.Engine: void doOffsetsChanged(boolean)>:<>:<android.service.wallpaper.WallpaperService.Engine>
<android.database.CursorWindow: long nativeGetLong(long,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>:<public>:<android.media.MediaCodec>
<android.view.GhostView: int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList)>:<private static>:<android.view.GhostView:android.view.View>
<android.widget.DateTimeView: long access.000(android.widget.DateTimeView)>:<static>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.Account.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.Account.1:android.os.Parcelable.Creator>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.preference.Preference: void tryCommit(android.content.SharedPreferences.Editor)>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.AccountManager: void access.300(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>:<static>:<android.accounts.AccountManager>
<android.service.notification.NotificationListenerService.Ranking: int getRank()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.media.audiopolicy.AudioPolicyConfig: void <init>(android.os.Parcel,android.media.audiopolicy.AudioPolicyConfig.1)>:<>:<android.media.audiopolicy.AudioPolicyConfig:android.os.Parcelable>
<android.media.SoundPool: void resume(int)>:<public final>:<android.media.SoundPool>
<android.media.tv.ITvInputManager.Stub.Proxy: void selectTrack(android.os.IBinder,int,java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.AudioService: boolean isHwSafeMediaVolumeEnabled()>:<protected>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.GLES20Canvas: void nDrawBitmap(long,int[],int,int,float,float,int,int,boolean,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)>:<public>:<android.media.AudioManager>
<android.media.TextTrackCue: java.lang.StringBuilder appendStringsToBuilder(java.lang.StringBuilder)>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.media.projection.IMediaProjectionWatcherCallback: void onStart(android.media.projection.MediaProjectionInfo)>:<public abstract>:<android.media.projection.IMediaProjectionWatcherCallback:android.os.IInterface>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean isCreating()>:<public>:<android.view.ViewRootImpl.TakenSurfaceHolder:com.android.internal.view.BaseSurfaceHolder>
<androidhwext.R.plurals: void <init>()>:<public>:<androidhwext.R.plurals>
<android.preference.VolumePreference.VolumeStore: void <init>()>:<public>:<android.preference.VolumePreference.VolumeStore>
<android.widget.MediaController: boolean access.100(android.widget.MediaController)>:<static>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SpellChecker: android.widget.SpellChecker.SpellParser[] access.100(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.media.AudioTrack: int native_get_pos_update_period()>:<private final native>:<android.media.AudioTrack>
<android.view.Window: void clearFlags(int)>:<public>:<android.view.Window>
<android.media.IVolumeController.Stub.Proxy: void dismiss()>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.media.SubtitleController: void reset()>:<public>:<android.media.SubtitleController>
<android.media.SubtitleTrack: void takeTime(long)>:<private>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder.IntPropertyValuesHolder clone()>:<public>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.view.IInputFilterHost.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IInputFilterHost.Stub:android.os.Binder,android.view.IInputFilterHost>
<android.media.tv.TvInputManager.SessionCallbackRecord.4: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,java.util.List)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.4:java.lang.Runnable>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteStatement: long executeInsert()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isRegular()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>:<public static>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.media.MediaScanner: boolean access.1900(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.projection.MediaProjectionInfo: boolean equals(java.lang.Object)>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.media.session.PlaybackState: java.util.List access.800(android.media.session.PlaybackState)>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.animation.ValueAnimator: android.animation.ValueAnimator.AnimationHandler getOrCreateAnimationHandler()>:<private static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.SoundPool.SoundPoolStub: boolean unload(int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.service.voice.IVoiceInteractionSession.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.voice.IVoiceInteractionSession.Stub.Proxy:android.service.voice.IVoiceInteractionSession>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<private>:<android.media.RingtoneManager>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)>:<public>:<android.preference.GenericInflater>
<android.widget.ListView: void handleNewSelectionChange(android.view.View,int,int,boolean)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLU: void <init>()>:<public>:<android.opengl.GLU>
<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)>:<public>:<android.view.animation.Transformation>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusDisappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView.InvalidateUpdateListener,float,float)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.animation.FloatKeyframeSet: android.animation.Keyframes clone()>:<public volatile>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.animation.AnimatorSet: void end()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.animation.Animation: boolean getFillAfter()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.TimePickerSpinnerDelegate: int getBaseline()>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void addChildUnchecked(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.ListPreference: void setValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfos(java.util.List,int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.MotionEvent: int getMetaState()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glBlendFunc(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glLoadMatrixf(float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>:<public volatile>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.media.tv.ITvInputSessionWrapper: void setVolume(float)>:<public final>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.View: int[] onCreateDrawableState(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Visualizer: int native_getCaptureSize()>:<private final native>:<android.media.audiofx.Visualizer>
<android.media.session.MediaSession: void dispatchCustomAction(java.lang.String,android.os.Bundle)>:<private>:<android.media.session.MediaSession>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getYear()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews.OnClickHandler)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void access.300(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGL14: boolean eglBindAPI(int)>:<public static native>:<android.opengl.EGL14>
<android.preference.PreferenceGroupAdapter: int getViewTypeCount()>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.TimePicker.TimePickerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.view.ViewGroup.ChildListForAccessibility: void recycle()>:<public>:<android.view.ViewGroup.ChildListForAccessibility>
<android.service.dreams.DreamService: boolean isDozing()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.GridLayout: void <init>(android.content.Context)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.animation.StateListAnimator: java.util.ArrayList getTuples()>:<public>:<android.animation.StateListAnimator>
<android.media.MediaFocusControl: boolean rcDisplayIsPluggedIn_syncRcStack(android.media.IRemoteControlDisplay)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.print.IPrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.media.tv.TvInputManager.SessionCallbackRecord: void postTracksChanged(java.util.List)>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.media.session.MediaSessionManager.SessionsChangedWrapper: android.os.Handler access.100(android.media.session.MediaSessionManager.SessionsChangedWrapper)>:<static>:<android.media.session.MediaSessionManager.SessionsChangedWrapper>
<android.view.ViewTreeObserver: boolean hasOnPreDrawListeners()>:<final>:<android.view.ViewTreeObserver>
<android.accounts.AuthenticatorDescription.1: void <init>()>:<>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.print.PrinterId: void <init>(android.os.Parcel,android.print.PrinterId.1)>:<>:<android.print.PrinterId:android.os.Parcelable>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateViewProperty(boolean,boolean)>:<>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.database.CursorWindow: boolean isBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.TextView: void onEndBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>:<public static>:<android.media.CameraProfile>
<android.widget.TextView: int getDesiredHeight()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.VideoView: int access.202(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioService.VolumeStreamState: boolean access.100(android.media.AudioService.VolumeStreamState)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.view.KeyEvent: int getAction()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.view.View: boolean isTouchableInOtherThread()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.1: void <init>(android.media.session.MediaSession)>:<>:<android.media.session.MediaSession.1:android.media.VolumeProvider.Callback>
<android.database.sqlite.SQLiteConnection.OperationLog: void logOperationLocked(int,java.lang.String)>:<private>:<android.database.sqlite.SQLiteConnection.OperationLog>
<android.widget.MediaController: void updateFloatingWindowLayout()>:<private>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.ChildListForAccessibility: android.view.View getChildAt(int)>:<public>:<android.view.ViewGroup.ChildListForAccessibility>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: boolean isAfterLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.printservice.PrintService.1: void requestCancelPrintJob(android.print.PrintJobInfo)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager.11: void doWork()>:<public>:<android.accounts.AccountManager.11:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.filterpacks.base.FrameBranch: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.FrameBranch:android.filterfw.core.Filter>
<android.view.GLES20RecordingCanvas: void recycle()>:<>:<android.view.GLES20RecordingCanvas:android.view.GLES20Canvas,android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.os.Parcel)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.CursorAdapter: boolean hasStableIds()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.view.IApplicationToken: void windowsVisible()>:<public abstract>:<android.view.IApplicationToken:android.os.IInterface>
<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.preference.PreferenceFragment: void <init>()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.WindowManagerPolicy: void setSafeMode(boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.opengl.GLLogWrapper: void glLightxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View.9: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.9:android.util.FloatProperty>
<android.accounts.AuthenticatorDescription.1: android.accounts.AuthenticatorDescription[] newArray(int)>:<public>:<android.accounts.AuthenticatorDescription.1:android.os.Parcelable.Creator>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.IWindowSession.Stub.Proxy: void dragRecipientExited(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.animation.ValueAnimator: java.lang.String toString()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.tv.ITvInputService: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackType(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.view.RenderNode: boolean nSetStaticMatrix(long,long)>:<private static native>:<android.view.RenderNode>
<android.view.ViewRootImpl: void access.200(android.view.View)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<private>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.MediaCodec: void invalidateByteBuffers(java.nio.ByteBuffer[])>:<private final>:<android.media.MediaCodec>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: boolean isBeforeFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.view.SurfaceView: boolean access.100(android.view.SurfaceView)>:<static>:<android.view.SurfaceView:android.view.View>
<android.print.PrintJobInfo: void setPrinterId(android.print.PrinterId)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.media.MediaFocusControl: boolean access.1602(android.media.MediaFocusControl,boolean)>:<static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.ViewDebug: void writeValue(java.io.BufferedWriter,java.lang.Object)>:<private static>:<android.view.ViewDebug>
<android.print.PrintManager: void cancelPrintJob(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.view.WindowManagerGlobal: void addView(android.view.View,android.view.ViewGroup.LayoutParams,android.view.Display,android.view.Window)>:<public>:<android.view.WindowManagerGlobal>
<android.view.ViewGroup: void resetSubtreeAccessibilityStateChanged()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<androidhwext.R.drawable: void <init>()>:<public>:<androidhwext.R.drawable>
<android.media.MediaHTTPConnection: void disconnect()>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.view.View: int generateViewId()>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaHTTPService: void <init>()>:<public>:<android.media.MediaHTTPService:android.media.IMediaHTTPService.Stub,android.os.Binder>
<android.media.AudioPort: android.media.AudioGain gain(int)>:<>:<android.media.AudioPort>
<android.media.AudioManager: void setRingerMode(int)>:<public>:<android.media.AudioManager>
<android.view.MotionEvent: float getY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.FaceDetector: int fft_initialize(int,int,int)>:<private native>:<android.media.FaceDetector>
<android.view.ViewRootImpl: int getImpliedSystemUiVisibility(android.view.WindowManager.LayoutParams)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl: android.view.View getCommonPredecessor(android.view.View,android.view.View)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getRouteAtStatic(int)>:<static>:<android.media.MediaRouter>
<android.view.View: void offsetLeftAndRight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.RenderNode: boolean nSetBottom(long,int)>:<private static native>:<android.view.RenderNode>
<android.accounts.IAccountAuthenticator: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountAuthenticator:android.os.IInterface>
<android.view.IWindowSessionCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindowSessionCallback.Stub:android.os.Binder,android.view.IWindowSessionCallback>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.ExifInterface: void loadAttributes()>:<private>:<android.media.ExifInterface>
<android.view.Nsd: boolean isNeedAppDraw()>:<static>:<android.view.Nsd>
<android.service.notification.INotificationListener: void onListenerConnected(android.service.notification.NotificationRankingUpdate)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.widget.ListView: void clearRecycledState(java.util.ArrayList)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ListView: android.view.View findViewTraversal(int)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: java.util.HashMap access.1300(android.accounts.AccountManager)>:<static>:<android.accounts.AccountManager>
<android.opengl.GLLogWrapper: void glRotatef(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.MediaPlayer: void throwsException(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.filterpacks.videosrc.SurfaceTextureSource: boolean access.000()>:<static>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.view.View: float getElevation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFocusControl: void notifyTopOfAudioFocusStack()>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.IWindowManager.Stub.Proxy: void setAppOrientation(android.view.IApplicationToken,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void init(int,int,int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.media.browse.MediaBrowser: void unsubscribe(java.lang.String)>:<public>:<android.media.browse.MediaBrowser>
<android.widget.SearchView: void access.700(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.Surface.CompatibleCanvas: void <init>(android.view.Surface,android.view.Surface.1)>:<>:<android.view.Surface.CompatibleCanvas:android.graphics.Canvas>
<android.preference.PreferenceGroupAdapter: void flattenPreferenceGroup(java.util.List,android.preference.PreferenceGroup)>:<private>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.IWindowManager: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.KeyEvent: long getEventTimeNano()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.IRemoteDisplayCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteDisplayCallback.Stub:android.os.Binder,android.media.IRemoteDisplayCallback>
<android.view.HardwareRenderer: boolean isAvailable()>:<public static>:<android.view.HardwareRenderer>
<android.widget.DatePicker: android.widget.NumberPicker getYearSpinner()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.RemoteController: void onClientChange(int,boolean)>:<private>:<android.media.RemoteController>
<android.view.IWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ProgressBar: void drawableStateChanged()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.IAudioRoutesObserver.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IAudioRoutesObserver.Stub.Proxy:android.media.IAudioRoutesObserver>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaRouter.RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isEncoder()>:<private>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: android.media.MediaPlayer.OnErrorListener access.1400(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.WebVttCueListener: void onRegionParsed(android.media.TextTrackRegion)>:<public abstract>:<android.media.WebVttCueListener>
<android.media.MediaCodec: void releaseOutputBuffer(int,boolean,boolean,long)>:<private final native>:<android.media.MediaCodec>
<android.database.CursorWindow: int describeContents()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.MergeCursor.1: void onChanged()>:<public>:<android.database.MergeCursor.1:android.database.DataSetObserver>
<android.widget.ZoomButtonsController: void setTouchTargetView(android.view.View)>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.DatePicker: void setMinDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaExtractor: void setDataSource(java.lang.String)>:<public final>:<android.media.MediaExtractor>
<android.view.ViewRootImpl.ViewPostImeInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.ViewPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.accounts.IAccountManager.Stub.Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.MediaScanner: void processPlsPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>:<private>:<android.media.MediaScanner>
<android.media.SoundPool.SoundPoolStub: void resume(int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AsyncPlayer: void access.500(android.media.AsyncPlayer)>:<static>:<android.media.AsyncPlayer>
<android.print.PrinterInfo: android.print.PrinterId getId()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.ShareActionProvider: android.content.Context access.100(android.widget.ShareActionProvider)>:<static>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.service.voice.VoiceInteractionSessionService: void <init>()>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaPlayer: int getSelectedTrack(int)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.opengl.GLErrorWrapper: void glFogfv(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView.SavedState.1: android.widget.TextView.SavedState[] newArray(int)>:<public>:<android.widget.TextView.SavedState.1:android.os.Parcelable.Creator>
<android.view.WindowManagerPolicy.WindowManagerFuncs: java.lang.Object getWindowManagerLock()>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.media.PlayerRecord: android.media.IRemoteControlClient getRcc()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.media.MediaRouter.Static: void requestUpdateVolume(android.media.MediaRouter.RouteInfo,int)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.SyntheticTrackballHandler>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.PreferenceScreen.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.media.MediaRouter: void selectRouteStatic(int,android.media.MediaRouter.RouteInfo,boolean)>:<static>:<android.media.MediaRouter>
<android.view.KeyEvent: boolean isCtrlPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder.MultiFloatValuesHolder:android.animation.PropertyValuesHolder>
<android.view.ViewGroup: void setTransitionGroup(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowManagerPolicy: void showGlobalActions()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.ViewDebug: void captureLayers(android.view.View,java.io.DataOutputStream)>:<public static>:<android.view.ViewDebug>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void <init>()>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.media.session.MediaSession: void notifyRemoteVolumeChanged(android.media.VolumeProvider)>:<public>:<android.media.session.MediaSession>
<android.media.MediaFocusControl: void discardAudioFocusOwner()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.RtlSpacingHelper: void setRelative(int,int)>:<public>:<android.widget.RtlSpacingHelper>
<android.media.AudioService: int setModeInt(int,android.os.IBinder,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaRouter.SimpleCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.media.MediaFocusControl.MediaEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaFocusControl.MediaEventHandler:android.os.Handler>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray build()>:<public>:<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.Editor.HandleView: void updatePosition(float,float)>:<public abstract>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.media.FaceDetector.Face: void <init>(android.media.FaceDetector,android.media.FaceDetector.1)>:<>:<android.media.FaceDetector.Face>
<android.view.ThreadedRenderer.AtlasInitializer: void <clinit>()>:<static>:<android.view.ThreadedRenderer.AtlasInitializer>
<android.widget.Editor: float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean)>:<private>:<android.widget.Editor>
<android.media.tv.TvView.TvInputCallback: void onContentAllowed(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.media.MediaExtractor: void finalize()>:<protected>:<android.media.MediaExtractor>
<android.view.IWindow.Stub.Proxy: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.view.IWindow.Stub.Proxy:android.view.IWindow>
<android.print.PrintJobInfo: void setState(int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.MediaRouterClientState.RouteInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.MediaRouterClientState.RouteInfo.1:android.os.Parcelable.Creator>
<android.service.notification.Condition: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glClearDepthf(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.session.MediaController: android.media.session.MediaController.MessageHandler getHandlerForCallbackLocked(android.media.session.MediaController.Callback)>:<private>:<android.media.session.MediaController>
<android.view.PointerIcon: int getStyle()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>:<public abstract>:<android.widget.CompoundButton.OnCheckedChangeListener>
<android.view.textservice.TextInfo: void <clinit>()>:<static>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: int getCursorCapsMode(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.opengl.GLLogWrapper: void glMultiTexCoord4f(int,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>:<public>:<android.preference.PreferenceManager>
<android.media.MediaHTTPConnection: void <init>()>:<public>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.widget.Editor.SelectionModifierCursorController: void onTouchModeChanged(boolean)>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.widget.Editor: android.graphics.drawable.Drawable access.2500(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.media.tv.ITvInputHardware: void setStreamVolume(float)>:<public abstract>:<android.media.tv.ITvInputHardware:android.os.IInterface>
<android.database.CursorWrapper: boolean moveToFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.print.PrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.media.AudioService: boolean isPlatformVoice()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.IInputFilter.Stub.Proxy: void uninstall()>:<public>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.accounts.AccountAndUser: int hashCode()>:<public>:<android.accounts.AccountAndUser>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.service.fingerprint.FingerprintManager.1: void handleMessage(android.os.Message)>:<public>:<android.service.fingerprint.FingerprintManager.1:android.os.Handler>
<android.media.session.MediaController.Callback: void onExtrasChanged(android.os.Bundle)>:<public>:<android.media.session.MediaController.Callback>
<android.filterpacks.imageproc.SaturateFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.widget.TabHost: void initTabHost()>:<private>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>:<final>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.widget.DatePickerController: int getMinMonth()>:<public abstract>:<android.widget.DatePickerController>
<android.media.effect.effects.TintEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.TintEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IMediaHTTPConnection.Stub.Proxy: java.lang.String getMIMEType()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.preference.ListPreference: java.lang.CharSequence getSummary()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.filterpacks.videoproc.BackDropperFilter: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.InputEvent: boolean isTainted()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.media.TtmlTrack: void addTimeEvents(android.media.TtmlNode)>:<private>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.view.View: int getRawLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent.PointerCoords: void <init>(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.view.Choreographer.1: void <init>()>:<>:<android.view.Choreographer.1:java.lang.ThreadLocal>
<android.view.inputmethod.ExtractedTextRequest.1: void <init>()>:<>:<android.view.inputmethod.ExtractedTextRequest.1:android.os.Parcelable.Creator>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.View.MatchLabelForPredicate: boolean apply(android.view.View)>:<public>:<android.view.View.MatchLabelForPredicate:com.android.internal.util.Predicate>
<android.opengl.GLES20: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES20>
<android.view.TextureView: void buildLayer()>:<public>:<android.view.TextureView:android.view.View>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void executeMessage(android.os.Message)>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.widget.HwAbsListView: boolean inCheckableViewOnDown(android.view.View,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.session.ParcelableVolumeInfo.1: android.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.session.ParcelableVolumeInfo.1:android.os.Parcelable.Creator>
<android.print.PrintJobId.1: android.print.PrintJobId[] newArray(int)>:<public>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.accounts.AccountManager.16: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.accounts.AccountManager.16:android.content.BroadcastReceiver>
<android.view.View: boolean isFocusableInTouchMode()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Spinner.SpinnerPopup: java.lang.CharSequence getHintText()>:<public abstract>:<android.widget.Spinner.SpinnerPopup>
<android.media.SRTTrack: void updateView(java.util.Vector)>:<public>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.View: boolean traverseAtGranularity(int,boolean,boolean)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityEvent.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.accessibility.AccessibilityEvent.1:android.os.Parcelable.Creator>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setCurrentLocale(java.util.Locale)>:<public>:<android.widget.TimePicker.AbstractTimePickerDelegate:android.widget.TimePicker.TimePickerDelegate>
<android.hsm.HwSystemManager: void <clinit>()>:<static>:<android.hsm.HwSystemManager>
<android.widget.Editor: void onLocaleChanged()>:<>:<android.widget.Editor>
<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.AudioService.AudioServiceInternal: void setStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public>:<android.media.AudioService.AudioServiceInternal:android.media.AudioManagerInternal>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.Window: void setIcon(int)>:<public>:<android.view.Window>
<android.view.IInputFilterHost.Stub: void <init>()>:<public>:<android.view.IInputFilterHost.Stub:android.os.Binder,android.view.IInputFilterHost>
<android.media.VolumeProvider: int getVolumeControl()>:<public final>:<android.media.VolumeProvider>
<android.view.View: void sendViewTextTraversedAtGranularityEvent(int,int,int,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.AnticipateInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.ThreadedRenderer: void destroyResources(android.view.View)>:<private static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.view.SurfaceControl: boolean getContentFrameStats(android.view.WindowContentFrameStats)>:<public>:<android.view.SurfaceControl>
<android.view.inputmethod.CursorAnchorInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceActivity.4: void onClick(android.view.View)>:<public>:<android.preference.PreferenceActivity.4:android.view.View.OnClickListener>
<android.media.RingtoneManager: void stopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.test.PerformanceTestCase: int startPerformance(android.test.PerformanceTestCase.Intermediates)>:<public abstract>:<android.test.PerformanceTestCase>
<android.animation.ValueAnimator: boolean access.200(android.animation.ValueAnimator,long)>:<static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLES20: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.session.ISessionController: void rewind()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.media.AudioTrack: int native_reload_static()>:<private final native>:<android.media.AudioTrack>
<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.widget.SearchView: void access.900(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLLogWrapper: java.lang.String getClearBufferMask(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarVolumizer: void stopSample()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.MediaRecorder: void setVideoEncoder(int)>:<public native>:<android.media.MediaRecorder>
<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>:<public>:<android.database.CursorWindowAllocationException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.service.trust.TrustAgentService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<huawei.android.app.HwCustEmergDataManager: huawei.android.app.HwCustEmergDataManager getDefault()>:<public static>:<huawei.android.app.HwCustEmergDataManager>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.View: java.lang.String debugIndent(int)>:<protected static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<androidhwext.R.interpolator: void <init>()>:<public>:<androidhwext.R.interpolator>
<android.media.tv.TvInputManager.SessionCallback: void onLayoutSurface(android.media.tv.TvInputManager.Session,int,int,int,int)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.view.HardwareRenderer: void pushLayerUpdate(android.view.HardwareLayer)>:<abstract>:<android.view.HardwareRenderer>
<android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent.PointerProperties[],android.view.MotionEvent.PointerCoords[])>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.SeekBarPreference: void syncProgress(android.widget.SeekBar)>:<>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.media.AudioService.VolumeController: void postMasterMuteChanged(int)>:<public>:<android.media.AudioService.VolumeController>
<android.database.AbstractCursor: boolean isNull(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.database.CursorToBulkCursorAdaptor: void onMove(int)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.widget.TextView: android.content.Context access.1400(android.widget.TextView)>:<static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View: void initializeScrollbarsInternal(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputService.Stub.Proxy: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>:<public>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.media.session.MediaSession.Callback: void onCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.widget.DatePickerCalendarDelegate: void unregisterOnDateChangedListener(android.widget.OnDateChangedListener)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.WebVttParser.3: void <init>(android.media.WebVttParser)>:<>:<android.media.WebVttParser.3:android.media.WebVttParser.Phase>
<android.media.Tokenizer: android.media.Tokenizer.TokenizerPhase access.202(android.media.Tokenizer,android.media.Tokenizer.TokenizerPhase)>:<static>:<android.media.Tokenizer>
<android.view.animation.DecelerateInterpolator: void <init>()>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.TextView: boolean canSelectAll()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.IMediaRouterService.Stub.Proxy: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.gesture.GestureStore: boolean hasChanged()>:<public>:<android.gesture.GestureStore>
<android.media.MediaRouter.RouteGroup: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.WindowContentFrameStats.1: android.view.WindowContentFrameStats[] newArray(int)>:<public>:<android.view.WindowContentFrameStats.1:android.os.Parcelable.Creator>
<android.view.View: int getPaddingRight()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewDebug: boolean isRequestedView(android.view.View,java.lang.String,int)>:<private static>:<android.view.ViewDebug>
<android.view.MotionEvent.PointerProperties: void <init>()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.NotificationListenerService: void unregisterAsSystemService()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.SparseRectFArray: int hashCode()>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: boolean hasProjectionPermission(int,java.lang.String)>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.view.InputFilter: android.view.InputEventConsistencyVerifier access.200(android.view.InputFilter)>:<static>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.media.session.MediaSession: void dispatchNext()>:<private>:<android.media.session.MediaSession>
<android.widget.DatePicker: void setFirstDayOfWeek(int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvContract.WatchedPrograms: void <clinit>()>:<static>:<android.media.tv.TvContract.WatchedPrograms:android.media.tv.TvContract.BaseTvColumns>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioSampleRate(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.WindowManager.LayoutParams: void <init>()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.preference.PreferenceCategory: boolean shouldDisableDependents()>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.view.GLES20Canvas: void nSetMatrix(long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setExtra(android.os.Bundle)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.media.MediaDescription.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.MediaDescription.1:android.os.Parcelable.Creator>
<android.view.ViewDebug: void invalidate(android.view.View,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.media.tv.TvView: void access.1200(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.VolumeProvider: int getMaxVolume()>:<public final>:<android.media.VolumeProvider>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.preference.GenericInflater: void <init>(android.preference.GenericInflater,android.content.Context)>:<protected>:<android.preference.GenericInflater>
<android.opengl.GLLogWrapper: void glLightModelxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRecorder: void prepare()>:<public>:<android.media.MediaRecorder>
<android.view.ViewDebug: void exportUnrolledArray(android.content.Context,java.io.BufferedWriter,android.view.ViewDebug.ExportedProperty,int[],java.lang.String,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.widget.TextView.SavedState.1: android.widget.TextView.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.widget.TextView.SavedState.1:android.os.Parcelable.Creator>
<android.media.AudioService: boolean access.4900(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.tv.ITvInputHardware.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.accessibility.AccessibilityNodeInfo: boolean isDismissable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.tv.TvView.2: void <init>(android.media.tv.TvView)>:<>:<android.media.tv.TvView.2:android.media.tv.TvInputManager.Session.FinishedInputEventCallback>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.IWindowSession.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.print.PrintAttributes: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>:<private>:<android.view.accessibility.AccessibilityCache>
<android.preference.PreferenceManager: void unregisterOnActivityResultListener(android.preference.PreferenceManager.OnActivityResultListener)>:<>:<android.preference.PreferenceManager>
<android.database.sqlite.SQLiteConnection: void finalize()>:<protected>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.animation.AnticipateInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.AudioService: android.bluetooth.BluetoothDevice access.2800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputEventConsistencyVerifier: void onInputEvent(android.view.InputEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.widget.DayPickerView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>:<public>:<android.media.JetPlayer>
<android.gesture.InstanceLearner.1: int compare(android.gesture.Prediction,android.gesture.Prediction)>:<public>:<android.gesture.InstanceLearner.1:java.util.Comparator>
<android.view.accessibility.CaptioningManager: void access.200(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager:android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: android.view.ViewGroup.OnHierarchyChangeListener access.202(android.widget.RadioGroup.PassThroughHierarchyChangeListener,android.view.ViewGroup.OnHierarchyChangeListener)>:<static>:<android.widget.RadioGroup.PassThroughHierarchyChangeListener:android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean bringPointIntoView(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.wallpaper.IWallpaperEngine: void destroy()>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.widget.SimpleMonthAdapter: void onDayClick(android.widget.SimpleMonthView,java.util.Calendar)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.voice.IVoiceInteractionService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.voice.IVoiceInteractionService.Stub.Proxy:android.service.voice.IVoiceInteractionService>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] preceding(int)>:<public>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.media.session.MediaController.PlaybackInfo: void <init>(int,android.media.AudioAttributes,int,int,int)>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>:<static>:<android.media.Utils>
<android.security.AndroidKeyPairGenerator: byte[][] getArgsForKeyType(int,java.security.spec.AlgorithmParameterSpec)>:<private static>:<android.security.AndroidKeyPairGenerator:java.security.KeyPairGeneratorSpi>
<android.opengl.GLLogWrapper: void glGetFixedv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.InputDevice.MotionRange: void <init>(int,int,float,float,float,float,float,android.view.InputDevice.1)>:<>:<android.view.InputDevice.MotionRange>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: void clear()>:<private>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.view.SurfaceSession: void nativeKill(long)>:<private static native>:<android.view.SurfaceSession>
<android.widget.TextView.ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.widget.SpellChecker: void closeSession()>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.ViewRootImpl: boolean performLayout(android.view.WindowManager.LayoutParams,int,int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.preference.Preference: void setLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.media.RemoteController: void stopListeningToSessions()>:<>:<android.media.RemoteController>
<android.widget.TextView.ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.media.IAudioService.Stub.Proxy: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.AudioService: void checkScoAudioState()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ThreadedRenderer: void access.000(long,android.view.GraphicBuffer,long[])>:<static>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.opengl.GLException: void <init>(int,java.lang.String)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.IAudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: byte[] getTriggerAudio()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.animation.Keyframe.FloatKeyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.view.Surface: void allocateBuffers()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.media.MediaRouter.RouteInfo: int getPlaybackStream()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.print.PrintAttributes.Builder: void <init>()>:<public>:<android.print.PrintAttributes.Builder>
<android.service.notification.INotificationListener: void onNotificationRankingUpdate(android.service.notification.NotificationRankingUpdate)>:<public abstract>:<android.service.notification.INotificationListener:android.os.IInterface>
<android.widget.Editor.HandleView: void startTouchUpFilter(int)>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.KeyEvent: boolean isTainted()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaRecorder: void reset()>:<public>:<android.media.MediaRecorder>
<android.view.GraphicBuffer: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: boolean setRealStatusCode(int)>:<>:<android.media.MediaRouter.RouteInfo>
<android.media.AudioService: void setRemoteStreamVolume(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: float getRightFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowManagerPolicy.WindowState: android.view.WindowManager.LayoutParams getAttrs()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.widget.GridLayout.Spec: void <init>(boolean,android.widget.GridLayout.Interval,android.widget.GridLayout.Alignment,float)>:<private>:<android.widget.GridLayout.Spec>
<android.animation.PropertyValuesHolder.PointFToIntArray: void <init>()>:<public>:<android.animation.PropertyValuesHolder.PointFToIntArray:android.animation.TypeConverter>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.View: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View.TintInfo: void <init>(android.view.View.1)>:<>:<android.view.View.TintInfo>
<android.media.tv.TvTrackInfo: void <init>(android.os.Parcel,android.media.tv.TvTrackInfo.1)>:<>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.media.IAudioService: void adjustMasterVolume(int,int,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.security.KeyPairGeneratorSpec: android.content.Context getContext()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.view.View: void setPressed(boolean,float,float)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: int getNextFocusForwardId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.RemoteControlClient: android.os.Bundle access.100(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.media.MediaExtractor: void native_init()>:<private static final native>:<android.media.MediaExtractor>
<android.opengl.GLSurfaceView.ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>:<private>:<android.opengl.GLSurfaceView.ComponentSizeChooser:android.opengl.GLSurfaceView.BaseConfigChooser>
<android.view.WindowManagerGlobal: boolean shouldDestroyEglContext(int)>:<public static>:<android.view.WindowManagerGlobal>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk profileView(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.GLES20Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.IRemoteDisplayProvider.Stub: android.media.IRemoteDisplayProvider asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteDisplayProvider.Stub:android.os.Binder,android.media.IRemoteDisplayProvider>
<android.service.voice.VoiceInteractionSession.1: void <init>(android.service.voice.VoiceInteractionSession)>:<>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.view.animation.AnimationSet: void reset()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.DatePickerCalendarDelegate: void setCalendarViewShown(boolean)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>:<public>:<android.media.session.MediaController>
<android.animation.LayoutTransition: void disableTransitionType(int)>:<public>:<android.animation.LayoutTransition>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>:<public static native>:<android.opengl.EGL14>
<android.widget.TextView: boolean compressText(float)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.AudioEffect: int getParameter(int,short[])>:<public>:<android.media.audiofx.AudioEffect>
<android.media.tv.ITvInputHardware.Stub: void <init>()>:<public>:<android.media.tv.ITvInputHardware.Stub:android.os.Binder,android.media.tv.ITvInputHardware>
<android.media.MediaCodecList: android.media.MediaCodecInfo getNewCodecInfoAt(int)>:<private static>:<android.media.MediaCodecList>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void _nativeClassInit()>:<private static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.widget.ListPopupWindow.PopupDataSetObserver: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow.1)>:<>:<android.widget.ListPopupWindow.PopupDataSetObserver:android.database.DataSetObserver>
<android.printservice.PrinterDiscoverySession: void <init>()>:<public>:<android.printservice.PrinterDiscoverySession>
<android.widget.AdapterViewAnimator.SavedState: java.lang.String toString()>:<public>:<android.widget.AdapterViewAnimator.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.media.AudioService: void checkAllFixedVolumeDevices(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.filterpacks.videosrc.CameraSource: int[] findClosestSize(int,int,android.hardware.Camera.Parameters)>:<private>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.projection.IMediaProjectionCallback.Stub.Proxy: void onStop()>:<public>:<android.media.projection.IMediaProjectionCallback.Stub.Proxy:android.media.projection.IMediaProjectionCallback>
<android.view.WindowInsets: android.view.WindowInsets replaceWindowDecorInsets(int,int,int,int)>:<public>:<android.view.WindowInsets>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Window>
<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession.Request removeRequest(android.os.IBinder)>:<>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asLandscape()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.database.CursorWrapper: boolean moveToNext()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.DragEvent: float getX()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.printservice.PrintService: void onRequestCancelPrintJob(android.printservice.PrintJob)>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaCodecInfo.EncoderCapabilities: android.media.MediaCodecInfo.EncoderCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public static>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.widget.AdapterViewAnimator: void refreshChildren()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glDrawTexsOES(short,short,short,short,short)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.audiofx.AudioEffect: int native_getParameter(int,byte[],int,byte[])>:<private final native>:<android.media.audiofx.AudioEffect>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection.PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.MediaFocusControl.DisplayInfoForServer: boolean access.2000(android.media.MediaFocusControl.DisplayInfoForServer)>:<static>:<android.media.MediaFocusControl.DisplayInfoForServer:android.os.IBinder.DeathRecipient>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.MotionEvent: float getPressure()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected abstract>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.print.PrintDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.view.ViewTreeObserver: boolean isAlive()>:<public>:<android.view.ViewTreeObserver>
<android.media.Utils: android.util.Range longRangeFor(double)>:<static>:<android.media.Utils>
<android.widget.RemoteViews.SetOnClickPendingIntent: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.SetOnClickPendingIntent:android.widget.RemoteViews.Action>
<android.media.audiofx.Visualizer: int native_getScalingMode()>:<private final native>:<android.media.audiofx.Visualizer>
<android.view.SurfaceControl: boolean setActiveConfig(android.os.IBinder,int)>:<public static>:<android.view.SurfaceControl>
<android.media.MediaCodec.MediaImage: void setCropRect(android.graphics.Rect)>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.widget.SearchView: void onMeasure(int,int)>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.hsm.MediaTransactWrapper: void musicPlaying(int,int)>:<public static>:<android.hsm.MediaTransactWrapper>
<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>:<protected>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.LayoutTransition: boolean isRunning()>:<public>:<android.animation.LayoutTransition>
<android.view.View: void setBackgroundResource(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: int getShadowColor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean load()>:<public>:<android.gesture.GestureLibraries.FileGestureLibrary:android.gesture.GestureLibrary>
<android.widget.GridLayout.Axis: void logError(java.lang.String,android.widget.GridLayout.Arc[],boolean[])>:<private>:<android.widget.GridLayout.Axis>
<android.view.AccessibilityInteractionController: void focusSearchUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.animation.AnimatorSet: void pause()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk listWindows()>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.media.AudioService: boolean isInCall()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.CheckedTextView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>:<public>:<android.gesture.GestureStroke>
<android.media.ClosedCaptionWidget: android.view.accessibility.CaptioningManager.CaptionStyle access.002(android.media.ClosedCaptionWidget,android.view.accessibility.CaptioningManager.CaptionStyle)>:<static>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.media.tv.ITvInputHardware.Stub.Proxy: boolean dispatchKeyEventToHdmi(android.view.KeyEvent)>:<public>:<android.media.tv.ITvInputHardware.Stub.Proxy:android.media.tv.ITvInputHardware>
<android.view.IWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.security.IKeyChainService: boolean containsCaAlias(java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.media.MediaRouter.Static: void updateGlobalRoute(android.media.MediaRouter.RouteInfo,android.media.MediaRouterClientState.RouteInfo)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>:<public>:<android.view.WindowInsets>
<android.widget.Editor: void access.2400(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.animation.LayoutTransition: boolean isChangingLayout()>:<public>:<android.animation.LayoutTransition>
<android.view.ViewOverlay.OverlayViewGroup: void onLayout(boolean,int,int,int,int)>:<protected>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<huawei.android.net.wifi.HwCustWifiManager: int putListener(java.lang.Object)>:<private static>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.accounts.AbstractAccountAuthenticator.1: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>:<>:<android.accounts.AbstractAccountAuthenticator.1:java.lang.Runnable>
<android.widget.GridLayout.LayoutParams: void <init>(int,int,int,int,int,int,android.widget.GridLayout.Spec,android.widget.GridLayout.Spec)>:<private>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.filterpacks.imageproc.CropFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>:<protected>:<android.filterpacks.imageproc.CropFilter:android.filterfw.core.Filter>
<android.media.SoundPool.Builder: android.media.SoundPool build()>:<public>:<android.media.SoundPool.Builder>
<android.view.accessibility.AccessibilityNodeInfo.1: void <init>()>:<>:<android.view.accessibility.AccessibilityNodeInfo.1:android.os.Parcelable.Creator>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController.1)>:<>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.view.IInputFilter: void install(android.view.IInputFilterHost)>:<public abstract>:<android.view.IInputFilter:android.os.IInterface>
<android.view.View: boolean includeForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.security.IKeystoreService.Stub.Proxy: int import_key(java.lang.String,byte[],int,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.widget.SearchView: int getMaxWidth()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.view.inputmethod.ExtractedTextRequest: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.printservice.PrintDocument: void <init>(android.print.PrintJobId,android.printservice.IPrintServiceClient,android.print.PrintDocumentInfo)>:<>:<android.printservice.PrintDocument>
<android.widget.Editor.ActionPopupWindow: void createPopupWindow()>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.MediaCodec: void native_reset()>:<private final native>:<android.media.MediaCodec>
<android.media.AudioManager: int getVibrateSetting(int)>:<public>:<android.media.AudioManager>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextUiThread(android.os.Message)>:<private>:<android.view.AccessibilityInteractionController>
<android.opengl.GLSurfaceView.GLThreadManager: void checkGLESVersion()>:<private>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)>:<public final>:<android.media.MediaCodec>
<android.view.ViewGroup: void requestTransitionStart(android.animation.LayoutTransition)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewDebug.HierarchyHandler: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>:<public abstract>:<android.view.ViewDebug.HierarchyHandler>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.media.session.ISessionManager: void setRemoteVolumeController(android.media.IRemoteVolumeController)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>:<public abstract>:<android.view.ViewParent>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onLowMemory()>:<public>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.media.AudioDevicePort: void <init>(android.media.AudioHandle,int[],int[],int[],android.media.AudioGain[],int,java.lang.String)>:<>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.view.WindowId: boolean isFocused()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.preference.PreferenceActivity.3: void <init>(android.preference.PreferenceActivity)>:<>:<android.preference.PreferenceActivity.3:android.view.View.OnClickListener>
<android.widget.GridView: int getVerticalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.GLES20Canvas: void onPostDraw()>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.PlayerRecord.RcClientDeathHandler: void <init>(android.media.PlayerRecord,android.os.IBinder,android.app.PendingIntent)>:<>:<android.media.PlayerRecord.RcClientDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.ActionProvider: boolean hasSubMenu()>:<public>:<android.view.ActionProvider>
<android.media.tv.ITvInputServiceCallback.Stub: void <init>()>:<public>:<android.media.tv.ITvInputServiceCallback.Stub:android.os.Binder,android.media.tv.ITvInputServiceCallback>
<android.view.Choreographer.FrameDisplayEventReceiver: void run()>:<public>:<android.view.Choreographer.FrameDisplayEventReceiver:android.view.DisplayEventReceiver,java.lang.Runnable>
<android.database.sqlite.SQLiteConnection.Operation: void describe(java.lang.StringBuilder,boolean)>:<public>:<android.database.sqlite.SQLiteConnection.Operation>
<android.animation.Animator: void start()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter.CalendarGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter.CalendarGestureListener:android.view.GestureDetector.SimpleOnGestureListener>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>:<public>:<android.accounts.AccountManager>
<android.view.ViewDebug.HierarchyTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.wallpaper.IWallpaperEngine: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>:<public abstract>:<android.service.wallpaper.IWallpaperEngine:android.os.IInterface>
<android.media.CamcorderProfile: void <clinit>()>:<static>:<android.media.CamcorderProfile>
<android.service.notification.Condition: int hashCode()>:<public>:<android.service.notification.Condition:android.os.Parcelable>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.hsm.HwCameraPermWrapper: void <init>()>:<public>:<android.hsm.HwCameraPermWrapper>
<android.filterpacks.imageproc.GrainFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindowManager: boolean isKeyguardLocked()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.InputQueue.Callback: void onInputQueueDestroyed(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.IAccessibilityManager: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.projection.IMediaProjectionManager: void stopActiveProjection()>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.database.sqlite.SQLiteSession: void throwIfNoTransaction()>:<private>:<android.database.sqlite.SQLiteSession>
<android.database.sqlite.SQLiteConnectionPool: void finalize()>:<protected>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.Window: void setStatusBarColor(int)>:<public abstract>:<android.view.Window>
<android.media.AudioService: void setStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RemoteViews.TextViewSizeAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews.TextViewSizeAction:android.widget.RemoteViews.Action>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void onAccessibilityStateChanged(boolean)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager:android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.animation.Animator: android.animation.Animator setDuration(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.printservice.PrintServiceInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.printservice.PrintServiceInfo.1:android.os.Parcelable.Creator>
<android.view.IWindowSession: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.media.IAudioService: boolean loadSoundEffects()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceChange(android.preference.Preference)>:<public abstract>:<android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.SurfaceView.4: void setFormat(int)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>:<static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.accounts.IAccountAuthenticator.Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>:<public static>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.view.RenderNodeAnimator: int mapViewPropertyToRenderProperty(int)>:<public static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.view.IWindowFocusObserver: void focusGained(android.os.IBinder)>:<public abstract>:<android.view.IWindowFocusObserver:android.os.IInterface>
<android.preference.PreferenceScreen.SavedState.1: android.preference.PreferenceScreen.SavedState[] newArray(int)>:<public>:<android.preference.PreferenceScreen.SavedState.1:android.os.Parcelable.Creator>
<android.view.ViewPropertyAnimator.3: void run()>:<public>:<android.view.ViewPropertyAnimator.3:java.lang.Runnable>
<android.view.InputDevice: boolean isVirtual()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.MediaMetadata: int size()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onSkipToTrack(long)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.ISessionController)>:<public>:<android.media.session.MediaController>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener,android.os.Looper)>:<public>:<android.media.RemoteController>
<android.view.WindowManagerPolicy: int prepareAddWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.animation.LayoutTransition: void layoutChange(android.view.ViewGroup)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.RenderNodeAnimator: long nCreateRevealAnimator(int,int,float,float)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<huawei.cust.HwCustUtils: java.lang.Object createObj(java.lang.Class,java.lang.Object[])>:<public static transient>:<huawei.cust.HwCustUtils>
<android.widget.DatePicker: long getMaxDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range getBitrateRange()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.service.dreams.IDreamService: void attach(android.os.IBinder,boolean)>:<public abstract>:<android.service.dreams.IDreamService:android.os.IInterface>
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.Utils: long divUp(long,long)>:<private static>:<android.media.Utils>
<android.media.MediaRouter: void updateWifiDisplayRoute(android.media.MediaRouter.RouteInfo,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus,boolean)>:<private static>:<android.media.MediaRouter>
<android.database.sqlite.SQLiteConnectionPool: void access.100(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<static>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.database.sqlite.SQLiteConnection.Operation: java.lang.String getStatus()>:<private>:<android.database.sqlite.SQLiteConnection.Operation>
<android.view.Nsd: void resetSaveNSD(int)>:<public static>:<android.view.Nsd>
<android.view.View: void addTouchables(java.util.ArrayList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TimePickerSpinnerDelegate: void setCurrentHour(java.lang.Integer)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.gesture.GestureOverlayView: void touchDown(android.view.MotionEvent)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView.4: android.graphics.Canvas internalLockCanvas(android.graphics.Rect)>:<private final>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.media.SubtitleTrack.RenderingWidget: void draw(android.graphics.Canvas)>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.filterpacks.base.FrameSource: void setupPorts()>:<public>:<android.filterpacks.base.FrameSource:android.filterfw.core.Filter>
<android.service.dreams.IDreamManager.Stub.Proxy: void finishSelf(android.os.IBinder,boolean)>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.view.SurfaceControl: void nativeSetDisplayLayerStack(android.os.IBinder,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.tv.ITvInputManager: void releaseSession(android.os.IBinder,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.media.RemoteDisplay: void notifyDisplayConnected(android.view.Surface,int,int,int,int)>:<private>:<android.media.RemoteDisplay>
<android.media.WebVttParser: int parseIntPercentage(java.lang.String)>:<public static>:<android.media.WebVttParser>
<android.media.session.MediaSession.Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.media.AudioService: int access.8500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: float getX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void performDraw()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.RenderNode: void nGetTransformMatrix(long,long)>:<private static native>:<android.view.RenderNode>
<android.media.WebVttRenderingWidget.CueLayout: void update()>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.service.fingerprint.FingerprintManager: void <init>(android.content.Context,android.service.fingerprint.IFingerprintService)>:<public>:<android.service.fingerprint.FingerprintManager>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewOutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>:<public abstract>:<android.view.ViewOutlineProvider>
<android.security.IKeyChainService.Stub.Proxy: boolean containsCaAlias(java.lang.String)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.view.ViewRootImpl.SyntheticInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.SyntheticInputStage:android.view.ViewRootImpl.InputStage>
<android.media.AudioTrack: int getChannelConfiguration()>:<public>:<android.media.AudioTrack>
<android.media.AudioService.1: void onError(int)>:<public>:<android.media.AudioService.1:android.media.AudioSystem.ErrorCallback>
<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>:<public abstract>:<android.media.MediaTimeProvider>
<android.view.inputmethod.InputMethodManager: boolean startInputInner(android.os.IBinder,int,int,int)>:<>:<android.view.inputmethod.InputMethodManager>
<android.widget.HwAbsListView: boolean searchCheckableView(android.view.ViewGroup,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.Metadata: int getInt(int)>:<public>:<android.media.Metadata>
<android.widget.ListView: int measureHeightOfChildren(int,int,int,int,int)>:<final>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window: void setDefaultWindowFormat(int)>:<protected>:<android.view.Window>
<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>:<public abstract>:<android.print.IPrintSpooler:android.os.IInterface>
<android.media.Utils.2: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.media.Utils.2:java.util.Comparator>
<android.media.AudioPortEventHandler: void finalize()>:<protected>:<android.media.AudioPortEventHandler>
<android.widget.VideoView: void setSTCallback(android.widget.VideoView.STCallback)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.ViewRootImpl: void playSoundEffect(int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioSystem: int getOutputLatency(int)>:<public static native>:<android.media.AudioSystem>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TimePickerSpinnerDelegate: void access.900(android.widget.TimePickerSpinnerDelegate)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.print.IPrintDocumentAdapterObserver.Stub: void <init>()>:<public>:<android.print.IPrintDocumentAdapterObserver.Stub:android.os.Binder,android.print.IPrintDocumentAdapterObserver>
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyCharacterMap: void <init>(android.os.Parcel)>:<private>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.ScaleGestureDetector: void clearTouchHistory()>:<private>:<android.view.ScaleGestureDetector>
<android.media.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.IPrintSpoolerCallbacks.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>:<public static>:<android.view.InputEventConsistencyVerifier>
<android.view.RenderNode: boolean nSetLeftTopRightBottom(long,int,int,int,int)>:<private static native>:<android.view.RenderNode>
<android.media.tv.TvStreamConfig.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.tv.TvStreamConfig.1:android.os.Parcelable.Creator>
<android.view.RenderNodeAnimator: void setTarget(android.view.View)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.JetPlayer: boolean triggerClip(int)>:<public>:<android.media.JetPlayer>
<android.printservice.PrintService: int access.102(android.printservice.PrintService,int)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.filterpacks.base.InputStreamSource: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.InputStreamSource:android.filterfw.core.Filter>
<android.print.PrinterDiscoverySession: void validatePrinters(java.util.List)>:<public final>:<android.print.PrinterDiscoverySession>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.service.notification.Condition.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.service.notification.Condition.1:android.os.Parcelable.Creator>
<android.widget.TextView: int getTopPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.browse.MediaBrowser.MediaItem: android.media.MediaDescription getDescription()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,int,android.os.Handler)>:<public>:<android.media.session.MediaSessionManager>
<android.media.audiofx.Equalizer: int getCenterFreq(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.filterpacks.imageproc.FlipFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.FlipFilter:android.filterfw.core.Filter>
<android.media.browse.MediaBrowser: void access.1800(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>:<static>:<android.media.browse.MediaBrowser>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.opengl.GLErrorWrapper: void glPixelStorei(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.PreferenceManager: void setOnPreferenceTreeClickListener(android.preference.PreferenceManager.OnPreferenceTreeClickListener)>:<>:<android.preference.PreferenceManager>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>:<public>:<android.view.Display>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.audiofx.Visualizer: int native_setPeriodicCapture(int,boolean,boolean)>:<private final native>:<android.media.audiofx.Visualizer>
<android.widget.Editor: void onScreenStateChanged(int)>:<>:<android.widget.Editor>
<android.filterpacks.imageproc.GrainFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.view.View: boolean isLayoutRequested()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.media.ExifInterface: long[] getThumbnailRange()>:<public>:<android.media.ExifInterface>
<android.media.AudioTrack: void audioParamCheck(int,int,int,int)>:<private>:<android.media.AudioTrack>
<android.hsm.HwSystemManager.HsmInterface: android.location.Location getFakeLocation(java.lang.String)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLErrorWrapper: boolean glIsRenderbufferOES(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onSetPrintJobTagResult(boolean,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addViewRect(android.view.View.AttachInfo.InvalidateInfo)>:<public>:<android.view.ViewRootImpl.InvalidateOnAnimationRunnable:java.lang.Runnable>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.animation.AnimatorSet: android.animation.AnimatorSet.Builder play(android.animation.Animator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.inputmethod.InputMethodManager: void finishedInputEvent(int,boolean,boolean)>:<>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.Editor.TextModifyOperation.1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public volatile>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.view.ViewGroup: void makeOptionalFitsSystemWindows()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.voice.VoiceInteractionSession.Request: void sendConfirmResult(boolean,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.filterpacks.imageproc.DuotoneFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.filterpacks.imageproc.SaturateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.SaturateFilter:android.filterfw.core.Filter>
<android.media.audiofx.BassBoost.BaseParameterListener: void <init>(android.media.audiofx.BassBoost,android.media.audiofx.BassBoost.1)>:<>:<android.media.audiofx.BassBoost.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<android.media.IRemoteVolumeObserver.Stub: android.media.IRemoteVolumeObserver asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteVolumeObserver.Stub:android.os.Binder,android.media.IRemoteVolumeObserver>
<android.view.textservice.SentenceSuggestionsInfo: void <clinit>()>:<static>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.MediaFocusControl: boolean isValidMediaKeyEvent(android.view.KeyEvent)>:<private static>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.animation.Animator.AnimatorListener: void onAnimationRepeat(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.widget.RemoteViews.ReflectionActionWithoutParams: int mergeBehavior()>:<public>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.animation.StateListAnimator.Tuple: void <init>(int[],android.animation.Animator,android.animation.StateListAnimator.1)>:<>:<android.animation.StateListAnimator.Tuple>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams getLayoutParams(android.view.View)>:<final>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvView.3: void <init>(android.media.tv.TvView,android.content.Context,android.util.AttributeSet,int)>:<>:<android.media.tv.TvView.3:android.view.SurfaceView,android.view.View>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.view.accessibility.IAccessibilityInteractionConnection.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnection>
<android.media.tv.TvInputManager: android.media.tv.ITvInputManager access.1000(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.widget.TextView: int viewportToContentHorizontalOffsetOuter()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.WindowManagerPolicy: int getNonDecorDisplayHeight(int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.preference.PreferenceActivity: void onStop()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.ViewGroup: boolean resolveLayoutDirection()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.effect.FilterGraphEffect: void release()>:<public>:<android.media.effect.FilterGraphEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.opengl.GLErrorWrapper: void glScalex(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.IAssetAtlas.Stub.Proxy: boolean isCompatible(int)>:<public>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.filterpacks.imageproc.DrawRectFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.media.session.MediaSession: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.session.MediaSession>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.filterpacks.imageproc.FisheyeFilter: void updateProgramParams()>:<private>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.view.IWindowManager: float getAnimationScale(int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.MediaPlayer: void setRetransmitEndpoint(java.net.InetSocketAddress)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.SearchView: boolean isSubmitAreaEnabled()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.ViewRootImpl.1: int toViewScreenState(int)>:<private>:<android.view.ViewRootImpl.1:android.hardware.display.DisplayManager.DisplayListener>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,int,android.content.ComponentName,android.os.Bundle)>:<private>:<android.appwidget.AppWidgetManager>
<android.gesture.GestureUtils: void <clinit>()>:<static>:<android.gesture.GestureUtils>
<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.media.WebVttParser: long parseTimestampMs(java.lang.String)>:<public static>:<android.media.WebVttParser>
<android.view.IWindowSession: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.animation.LayoutTransition.6: void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup)>:<>:<android.animation.LayoutTransition.6:android.animation.AnimatorListenerAdapter>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AutoCompleteTextView.1: void onDismiss()>:<public>:<android.widget.AutoCompleteTextView.1:android.widget.PopupWindow.OnDismissListener>
<android.media.MediaRouter.Static: void updateClientState()>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.print.PrintAttributes: android.print.PrintAttributes asLandscape()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.session.ISessionController: long getFlags()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.preference.VolumePreference: void onDialogClosed(boolean)>:<protected>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.widget.AbsListView.RecycleBin: android.widget.AbsListView.RecyclerListener access.4100(android.widget.AbsListView.RecycleBin)>:<static>:<android.widget.AbsListView.RecycleBin>
<android.hsm.HwSystemManager.HsmDefImpl: boolean shouldInterceptAudience(java.lang.String[])>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.view.View: int getVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setSelected(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextClock: void registerReceiver()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.RemoteControlClient: void onPositionDriftCheck()>:<private>:<android.media.RemoteControlClient>
<android.view.MotionEvent: int nativeGetDeviceId(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void setTextLocale(java.util.Locale)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.accessibility.AccessibilityWindowInfo: void setId(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.NumberPicker.2: void <init>(android.widget.NumberPicker)>:<>:<android.widget.NumberPicker.2:android.view.View.OnLongClickListener>
<android.media.IAudioService: void playSoundEffectVolume(int,float)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.accounts.AccountManager.BaseFutureTask.1: void <init>(android.accounts.AccountManager)>:<>:<android.accounts.AccountManager.BaseFutureTask.1:java.util.concurrent.Callable>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>:<public>:<android.view.LayoutInflater>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: void processDirectory(java.lang.String,android.media.MediaScannerClient)>:<private native>:<android.media.MediaScanner>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>:<public abstract>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputService.Session: void selectTrack(int,java.lang.String)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.Choreographer: void recycleCallbackLocked(android.view.Choreographer.CallbackRecord)>:<private>:<android.view.Choreographer>
<android.view.WindowManagerInternal: void waitForAllWindowsDrawn(java.lang.Runnable,long)>:<public abstract>:<android.view.WindowManagerInternal>
<android.view.GLES20Canvas: void nDrawCircle(long,float,float,float,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.filterpacks.videosink.MediaEncoderFilter: boolean skipFrameAndModifyTimestamp(long)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.widget.TextView: void resetErrorChangedFlag()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.animation.AnimatorSet.AnimatorSetListener: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet)>:<>:<android.animation.AnimatorSet.AnimatorSetListener:android.animation.Animator.AnimatorListener>
<android.widget.RemoteViews.SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<public>:<android.widget.RemoteViews.SetOnClickFillInIntent:android.widget.RemoteViews.Action>
<android.print.IPrintSpoolerClient.Stub: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerClient.Stub:android.os.Binder,android.print.IPrintSpoolerClient>
<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)>:<public>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.preference.SeekBarPreference: void <init>(android.content.Context)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.inputmethod.CursorAnchorInfo.Builder: void <init>()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.widget.DateTimeView: void update()>:<>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.media.projection.MediaProjectionInfo: android.os.UserHandle getUserHandle()>:<public>:<android.media.projection.MediaProjectionInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>:<public>:<android.media.JetPlayer>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceManager>
<android.view.ViewGroup: void finishAnimatingView(android.view.View,android.view.animation.Animation)>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioRecord: void stop()>:<public>:<android.media.AudioRecord>
<android.view.Gravity: void <init>()>:<public>:<android.view.Gravity>
<android.widget.Spinner.DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: android.os.Bundle getBundle()>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.view.textservice.SuggestionsInfo: int getSequence()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.widget.DatePickerController: void onDayOfMonthSelected(int,int,int)>:<public abstract>:<android.widget.DatePickerController>
<android.view.Window: void setContainer(android.view.Window)>:<public>:<android.view.Window>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.ListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.animation.PathKeyframes.1: void <init>(android.animation.PathKeyframes)>:<>:<android.animation.PathKeyframes.1:android.animation.PathKeyframes.FloatKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>:<final>:<android.view.ViewTreeObserver>
<android.preference.PreferenceFrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.accessibility.CaptioningManager: void <init>(android.content.Context)>:<public>:<android.view.accessibility.CaptioningManager>
<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES10: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES10>
<android.filterpacks.videosrc.CameraSource: void setCameraParameters(android.hardware.Camera.Parameters)>:<public>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.media.tv.TvContract.Programs.Genres: java.lang.String[] decode(java.lang.String)>:<public static>:<android.media.tv.TvContract.Programs.Genres>
<android.view.View: void setLayerType(int,android.graphics.Paint)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.PlaybackState: int getRccFlagForAction(long)>:<private static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.RadialTimePickerView: void setCurrentHour(int)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLES20: void glDeleteShader(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.VideoView.1: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>:<public>:<android.widget.VideoView.1:android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: void onLoadChildren(java.lang.String,android.content.pm.ParceledListSlice)>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>:<public abstract>:<android.media.session.IActiveSessionsListener:android.os.IInterface>
<android.opengl.GLLogWrapper: void glTexGenx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: void onSetA2dpSourceConnectionState(android.bluetooth.BluetoothDevice,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.notification.NotificationListenerService: void applyUpdate(android.service.notification.NotificationRankingUpdate)>:<private>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.voice.VoiceInteractionSession.2: void taskFinished(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession.2:android.service.voice.IVoiceInteractionSession.Stub,android.os.Binder>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.animation.IntKeyframeSet: void invalidateCache()>:<public>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.widget.StackView: void onSecondaryPointerUp(android.view.MotionEvent)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>:<public static transient>:<android.media.tv.TvContentRating>
<android.media.tv.TvInputHardwareInfo.Builder: void <init>()>:<public>:<android.media.tv.TvInputHardwareInfo.Builder>
<android.widget.AbsListView.RecycleBin: void <init>(android.widget.AbsListView)>:<>:<android.widget.AbsListView.RecycleBin>
<android.view.ViewDebug.4: void <init>(android.view.View)>:<>:<android.view.ViewDebug.4:android.view.ViewDebug.ViewOperation>
<android.view.Surface: long nativeCreateFromSurfaceControl(long)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.hsm.HwSystemManager: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public static>:<android.hsm.HwSystemManager>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Void)>:<protected>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public abstract>:<android.view.Window.Callback>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.GestureDetector: android.view.GestureDetector.OnGestureListener access.100(android.view.GestureDetector)>:<static>:<android.view.GestureDetector>
<android.filterpacks.imageproc.CrossProcessFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.CrossProcessFilter:android.filterfw.core.Filter>
<android.view.OrientationEventListener: void disable()>:<public>:<android.view.OrientationEventListener>
<android.appwidget.AppWidgetProviderInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.service.fingerprint.FingerprintManager.2: void onError(int)>:<public>:<android.service.fingerprint.FingerprintManager.2:android.service.fingerprint.IFingerprintServiceReceiver.Stub,android.os.Binder>
<android.view.View: int getWindowSystemUiVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.SimpleCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.media.MediaRouter.RouteCategory: boolean isGroupable()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.media.session.ISession: void setQueueTitle(java.lang.CharSequence)>:<public abstract>:<android.media.session.ISession:android.os.IInterface>
<android.filterpacks.videosrc.SurfaceTextureTarget: void updateRenderMode()>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.print.PrinterCapabilitiesInfo: java.lang.String toString()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.filterpacks.imageproc.RedEyeFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.view.ViewGroup: void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyEvent: void recycleIfNeededAfterDispatch()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View.OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.media.AudioService.StreamOverride: void onTouchExplorationStateChanged(boolean)>:<public>:<android.media.AudioService.StreamOverride:android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.service.notification.IConditionListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.notification.IConditionListener.Stub.Proxy:android.service.notification.IConditionListener>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>:<public final>:<android.view.ViewTreeObserver>
<android.media.ClosedCaptionRenderer: void <init>(android.content.Context)>:<public>:<android.media.ClosedCaptionRenderer:android.media.SubtitleController.Renderer>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.Editor.TextModifyOperation.1: android.widget.Editor.TextModifyOperation createFromParcel(android.os.Parcel)>:<public>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.InputChannel: android.view.InputChannel dup()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.printservice.PrinterDiscoverySession: void stopPrinterDiscovery()>:<>:<android.printservice.PrinterDiscoverySession>
<android.database.CursorWrapper: long getLong(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView)>:<public>:<android.widget.StackView.StackSlider>
<android.widget.ActivityChooserModel.DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)>:<public>:<android.widget.ActivityChooserModel.DefaultSorter:android.widget.ActivityChooserModel.ActivitySorter>
<android.view.View: void setFadingEdgeLength(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.IAccountAuthenticator.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountAuthenticator.Stub:android.os.Binder,android.accounts.IAccountAuthenticator>
<android.database.CursorJoiner: void <clinit>()>:<static>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.view.RenderNode: void nEndAllAnimators(long)>:<private static native>:<android.view.RenderNode>
<android.database.sqlite.SQLiteSession: void beginTransactionUnchecked(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>:<private>:<android.database.sqlite.SQLiteSession>
<android.widget.GridLayout: void onSetLayoutParams(android.view.View,android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.HwAbsListView: boolean getItemCheckedState(boolean)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.IKeystoreService: int reset_uid(int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase.1: void <init>(android.database.sqlite.SQLiteDatabase)>:<>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.media.session.MediaSession.CallbackStub: void onRewind()>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<android.view.textservice.SpellCheckerSubtype: java.util.List sort(android.content.Context,int,android.view.textservice.SpellCheckerInfo,java.util.List)>:<public static>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.InputEvent.1: android.view.InputEvent[] newArray(int)>:<public>:<android.view.InputEvent.1:android.os.Parcelable.Creator>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onNotificationPosted(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.media.MediaCodec: void setParameters(android.os.Bundle)>:<public final>:<android.media.MediaCodec>
<android.media.MediaDrm: byte[] access.600(android.media.MediaDrm,byte[],byte[],byte[])>:<static>:<android.media.MediaDrm>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.Editor: void downgradeEasyCorrectionSpans()>:<private>:<android.widget.Editor>
<android.media.ResampleInputStream: void <init>(java.io.InputStream,int,int)>:<public>:<android.media.ResampleInputStream:java.io.InputStream>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.media.tv.ITvInputManager.Stub.Proxy: void releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.database.sqlite.SQLiteConnection: boolean isCacheable(int)>:<private static>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.GridLayout.1: void <init>()>:<>:<android.widget.GridLayout.1:android.util.Printer>
<android.widget.SearchView: void access.1100(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.view.ViewRootImpl: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.AbstractCursor: void checkPosition()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.IRemoteDisplayProvider.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteDisplayProvider.Stub:android.os.Binder,android.media.IRemoteDisplayProvider>
<android.media.tv.TvView: void createSessionOverlayView()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView.EglHelper: void destroySurfaceImp()>:<private>:<android.opengl.GLSurfaceView.EglHelper>
<android.media.effect.effects.DocumentaryEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.DocumentaryEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.view.ViewPropertyAnimator.PropertyBundle: boolean cancel(int)>:<>:<android.view.ViewPropertyAnimator.PropertyBundle>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.AudioService.AudioSystemThread: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.AudioSystemThread:java.lang.Thread>
<android.animation.LayoutTransition.TransitionListener: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.view.View: void clearAccessibilityFocusNoCallbacks()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaScanner: void processWplPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>:<private>:<android.media.MediaScanner>
<android.filterpacks.videoproc.BackDropperFilter: void setupPorts()>:<public>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.media.tv.TvContentRatingSystemInfo: int describeContents()>:<public>:<android.media.tv.TvContentRatingSystemInfo:android.os.Parcelable>
<android.widget.TextView: void convertFromViewportToContentCoordinates(android.graphics.Rect)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GestureDetector: android.view.GestureDetector.OnDoubleTapListener access.300(android.view.GestureDetector)>:<static>:<android.view.GestureDetector>
<android.media.RemoteDisplay.3: void <init>(android.media.RemoteDisplay,int)>:<>:<android.media.RemoteDisplay.3:java.lang.Runnable>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void invalidateCursor()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.AudioSystem: int newAudioSessionId()>:<public static native>:<android.media.AudioSystem>
<android.service.dreams.IDreamManager: boolean isDreaming()>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.view.View: void requestApplyInsets()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ValueAnimator.AnimationHandler: void scheduleAnimation()>:<private>:<android.animation.ValueAnimator.AnimationHandler:java.lang.Runnable>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.view.SurfaceControl: void nativeSetFlags(long,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.AudioRecord: int getChannelMaskFromLegacyConfig(int,boolean)>:<private static>:<android.media.AudioRecord>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: boolean copy(java.lang.String,java.lang.String)>:<private final>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.opengl.GLDebugHelper: void <init>()>:<public>:<android.opengl.GLDebugHelper>
<android.media.EncoderCapabilities: void <clinit>()>:<static>:<android.media.EncoderCapabilities>
<android.view.ThreadedRenderer: void nPushLayerUpdate(long,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>:<public abstract>:<android.view.ViewParent>
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()>:<public>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.media.EncoderCapabilities: int native_get_num_video_encoders()>:<private static final native>:<android.media.EncoderCapabilities>
<android.view.ViewConfiguration: int getJumpTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.database.sqlite.SQLiteGlobal: void <clinit>()>:<static>:<android.database.sqlite.SQLiteGlobal>
<android.media.AudioService.2: void <init>(android.media.AudioService)>:<>:<android.media.AudioService.2:android.bluetooth.BluetoothProfile.ServiceListener>
<android.database.CursorWindow: void nativeCopyStringToBuffer(long,int,int,android.database.CharArrayBuffer)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.MediaScannerConnection: android.media.MediaScannerConnection.MediaScannerConnectionClient access.000(android.media.MediaScannerConnection)>:<static>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.view.ViewRootImpl: void dispatchDoneAnimating()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewTreeObserver.InternalInsetsInfo: boolean isEmpty()>:<>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.media.WebVttRenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.media.WebVttTrack: void onData(byte[],boolean,long)>:<public>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.service.dreams.DreamService: void access.600(android.service.dreams.DreamService,android.os.IBinder,boolean)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.filterpacks.ui.SurfaceRenderFilter: void open(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteSession: void recycleTransaction(android.database.sqlite.SQLiteSession.Transaction)>:<private>:<android.database.sqlite.SQLiteSession>
<android.media.audiofx.Equalizer: short getCurrentPreset()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.TextView: boolean canCut()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.text.StringLogger: void setupPorts()>:<public>:<android.filterpacks.text.StringLogger:android.filterfw.core.Filter>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.opengl.GLES31Ext.DebugProcKHR: void onMessage(int,int,int,int,java.lang.String)>:<public abstract>:<android.opengl.GLES31Ext.DebugProcKHR>
<android.media.CCParser.CCMemory: int clamp(int,int,int)>:<private static>:<android.media.CCParser.CCMemory>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.View: void setRotation(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: float getScaledTextSize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.CharArrayBuffer: void <init>(int)>:<public>:<android.database.CharArrayBuffer>
<android.media.MediaCodec: void native_flush()>:<private final native>:<android.media.MediaCodec>
<android.view.WindowManagerInternal.WindowsForAccessibilityCallback: void onWindowsForAccessibilityChanged(java.util.List)>:<public abstract>:<android.view.WindowManagerInternal.WindowsForAccessibilityCallback>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.view.RenderNodeAnimator: void onFinished()>:<protected>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.WebVttRenderingWidget: void access.200(android.media.WebVttRenderingWidget,android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.widget.AutoCompleteTextView: boolean isInputMethodNotNeeded()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.AudioTrack: float clampGainOrLevel(float)>:<private static>:<android.media.AudioTrack>
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.media.SubtitleController.2: void <init>(android.media.SubtitleController)>:<>:<android.media.SubtitleController.2:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.2500(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.SubtitleTrack: void onSeek(long)>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.preference.PreferenceActivity: void invalidateHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.preference.PreferenceFragment: void onBindPreferences()>:<protected>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.widget.ScrollView: void initScrollView()>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLLogWrapper: void glFogfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor: long getCharRange(int)>:<private>:<android.widget.Editor>
<android.view.ViewRootImpl.1: void onDisplayAdded(int)>:<public>:<android.view.ViewRootImpl.1:android.hardware.display.DisplayManager.DisplayListener>
<android.appwidget.AppWidgetProviderInfo: java.lang.String loadLabel(android.content.pm.PackageManager)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.media.MediaCodecInfo: android.util.Range access.400()>:<static>:<android.media.MediaCodecInfo>
<android.opengl.GLLogWrapper: void glFinish()>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.View.MeasureSpec: java.lang.String toString(int)>:<public static>:<android.view.View.MeasureSpec>
<android.widget.AbsListView.CheckForKeyLongPress: void <init>(android.widget.AbsListView)>:<private>:<android.widget.AbsListView.CheckForKeyLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.view.IWindowManager: boolean isRotationFrozen()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteController: void <clinit>()>:<static>:<android.media.RemoteController>
<android.widget.SimpleMonthAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleMonthAdapter:android.widget.BaseAdapter,android.widget.SimpleMonthView.OnDayClickListener>
<android.preference.MultiCheckPreference: boolean getValue(int)>:<public>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.tv.TvView.TvInputCallback: void <init>()>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.view.IWindowManager: void keyguardGoingAway(boolean,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.print.PrintJobInfo: java.lang.String getAdvancedStringOption(java.lang.String)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.tv.TvView: void setSessionSurface(android.view.Surface)>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.SurfaceView.MyWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>:<public>:<android.view.SurfaceView.MyWindow:com.android.internal.view.BaseIWindow>
<android.widget.SearchView: void postUpdateFocusedState()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.security.IKeyChainService.Stub.Proxy: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.view.RenderNode: boolean nSetClipToOutline(long,boolean)>:<private static native>:<android.view.RenderNode>
<android.media.tv.ITvInputSession.Stub.Proxy: void setMain(boolean)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header access.400(android.preference.PreferenceActivity)>:<static>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.service.notification.NotificationRankingUpdate: int getFirstAmbientIndex()>:<public>:<android.service.notification.NotificationRankingUpdate:android.os.Parcelable>
<android.media.IAudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView.OnDismissListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.printservice.IPrintServiceClient: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public abstract>:<android.printservice.IPrintServiceClient:android.os.IInterface>
<android.service.voice.VoiceInteractionService.1: void shutdown()>:<public>:<android.service.voice.VoiceInteractionService.1:android.service.voice.IVoiceInteractionService.Stub,android.os.Binder>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.media.IAudioService.Stub.Proxy: int getCurrentAudioFocus()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.animation.AnimatorSet: boolean canReverse()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.LayoutInflater.Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory2:android.view.LayoutInflater.Factory>
<android.media.WebVttRenderingWidget.1: void <init>(android.media.WebVttRenderingWidget)>:<>:<android.media.WebVttRenderingWidget.1:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.media.MediaMuxer: void setOrientationHint(int)>:<public>:<android.media.MediaMuxer>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.MagnificationSpec.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.MagnificationSpec.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioManager: void setStreamMute(int,boolean)>:<public>:<android.media.AudioManager>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] following(int)>:<public>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.AudioService: void access.3500(android.media.AudioService,android.os.Handler,int,int,int,java.lang.Object,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.ResampleInputStream: int read()>:<public>:<android.media.ResampleInputStream:java.io.InputStream>
<android.accounts.AccountManager.Future2Task.1: void <init>(android.accounts.AccountManager.Future2Task)>:<>:<android.accounts.AccountManager.Future2Task.1:java.lang.Runnable>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.102(android.media.WebVttParser,android.media.WebVttParser.Phase)>:<static>:<android.media.WebVttParser>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.DisplayInfo: boolean hasAccess(int)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.test.InstrumentationTestSuite: void <init>(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewGroup.1: void run()>:<public>:<android.view.ViewGroup.1:java.lang.Runnable>
<android.widget.TextClock: void init()>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.inputmethod.CorrectionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.Editor.HandleView: void hide()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.print.IPrintManager: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.media.RemoteDisplayState: void <init>(android.os.Parcel)>:<>:<android.media.RemoteDisplayState:android.os.Parcelable>
<android.media.session.HwMediaSessionManagerDummy: void <init>()>:<public>:<android.media.session.HwMediaSessionManagerDummy:android.media.session.HwMediaSessionManager>
<android.view.View: boolean canScrollHorizontally(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hsm.HwSystemManager: android.hsm.HwSystemManager.HsmInterface getImplObject()>:<private static>:<android.hsm.HwSystemManager>
<android.view.DisplayInfo: java.lang.String flagsToString(int)>:<private static>:<android.view.DisplayInfo:android.os.Parcelable>
<android.preference.TwoStatePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.IAudioService.Stub.Proxy: int getRingerMode()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewRootImpl.1: void onDisplayChanged(int)>:<public>:<android.view.ViewRootImpl.1:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void setWillNotCacheDrawing(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.ddm.DdmHandleHello: void <clinit>()>:<static>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.security.SystemKeyStore: byte[] generateNewKey(int,java.lang.String,java.lang.String)>:<public>:<android.security.SystemKeyStore>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String getMimeType()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.RadialTimePickerView: void initData()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void cancelFling()>:<private>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.media.SubtitleController: void <clinit>()>:<static>:<android.media.SubtitleController>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.GhostView: boolean isGhostWrapper(android.view.View)>:<private static>:<android.view.GhostView:android.view.View>
<android.media.ThumbnailUtils: void <init>()>:<public>:<android.media.ThumbnailUtils>
<android.widget.TextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputService.Session.1: void <init>(android.media.tv.TvInputService.Session,boolean)>:<>:<android.media.tv.TvInputService.Session.1:java.lang.Runnable>
<android.widget.VideoView: void onMeasure(int,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.AudioManager: void reloadAudioSettings()>:<public>:<android.media.AudioManager>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setErrorMessage(java.lang.CharSequence)>:<public>:<android.media.session.PlaybackState.Builder>
<android.service.notification.ZenModeConfig.1: android.service.notification.ZenModeConfig[] newArray(int)>:<public>:<android.service.notification.ZenModeConfig.1:android.os.Parcelable.Creator>
<android.media.IRemoteControlDisplay: void setArtwork(int,android.graphics.Bitmap)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.media.IAudioService: void playSoundEffect(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.widget.Editor.HandleView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.preference.MultiSelectListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.MultiSelectListPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.View: android.content.Context getContext()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLLogWrapper: void returns(java.lang.String)>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.session.ISession.Stub.Proxy: void destroy()>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>:<public>:<android.media.projection.MediaProjectionManager>
<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.MediaPlayer.TimeProvider: void close()>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.media.MediaPlayer.TrackInfo: void <init>(android.os.Parcel)>:<>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.widget.RemoteViewsAdapter.3: void <init>(android.widget.RemoteViewsAdapter)>:<>:<android.widget.RemoteViewsAdapter.3:java.lang.Runnable>
<android.media.MediaPlayer: void selectOrDeselectInbandTrack(int,boolean)>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.security.AndroidKeyStore: boolean engineContainsAlias(java.lang.String)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.imageproc.LomoishFilter: void initParameters()>:<private>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>:<public abstract>:<android.view.Menu>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.media.IMediaHTTPConnection.Stub.Proxy: long getSize()>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.widget.EdgeEffect: void <clinit>()>:<static>:<android.widget.EdgeEffect>
<android.view.InputEvent: int getSource()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb.BaseParameterListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>:<public>:<android.media.audiofx.EnvironmentalReverb.BaseParameterListener:android.media.audiofx.AudioEffect.OnParameterChangeListener>
<android.media.MediaScanner: void access.1000(android.media.MediaScanner,java.lang.String,java.lang.String,android.media.MediaScannerClient)>:<static>:<android.media.MediaScanner>
<android.media.ImageReader.SurfaceImage: void createSurfacePlanes()>:<private>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.preference.PreferenceGroup: void addItemFromInflater(java.lang.Object)>:<public volatile>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.database.sqlite.SQLiteSession: void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo)>:<public>:<android.database.sqlite.SQLiteSession>
<android.service.voice.VoiceInteractionSession.Request: void sendCommandResult(boolean,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>:<public native>:<android.media.MediaRecorder>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getActionSymbolicName(int)>:<private static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void <init>(android.accounts.AccountManager,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerCallback>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.WebVttRenderingWidget: void onAttachedToWindow()>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View,boolean)>:<private>:<android.animation.LayoutTransition>
<android.media.SubtitleTrack: void onStop()>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.ListPopupWindow.PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>:<public>:<android.widget.ListPopupWindow.PopupScrollListener:android.widget.AbsListView.OnScrollListener>
<android.media.CCParser: void updateDisplay()>:<private>:<android.media.CCParser>
<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener: void onDetected(android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent)>:<public>:<android.service.voice.AlwaysOnHotwordDetector.SoundTriggerListener:android.hardware.soundtrigger.IRecognitionStatusCallback.Stub>
<android.media.IRemoteDisplayCallback.Stub: android.media.IRemoteDisplayCallback asInterface(android.os.IBinder)>:<public static>:<android.media.IRemoteDisplayCallback.Stub:android.os.Binder,android.media.IRemoteDisplayCallback>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4f(int,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.Scroller: int getStartX()>:<public final>:<android.widget.Scroller>
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.test.InstrumentationTestCase.2: void <init>(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean,java.lang.Throwable[])>:<>:<android.test.InstrumentationTestCase.2:java.lang.Runnable>
<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.tv.TvView: void selectTrack(int,java.lang.String)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.DecoderCapabilities: void native_init()>:<private static final native>:<android.media.DecoderCapabilities>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.VideoView: android.media.MediaPlayer getMediaPlayer()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: boolean access.802(android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection,boolean)>:<static>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.ViewStub: void initialize(android.content.Context)>:<private>:<android.view.ViewStub:android.view.View>
<android.view.ViewDebug: java.lang.String capturedViewExportFields(java.lang.Object,java.lang.Class,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionCallback.Stub:android.os.Binder,android.media.session.ISessionCallback>
<android.view.IWindowManager.Stub.Proxy: void freezeRotation(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.opengl.EGLLogWrapper: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.widget.RadioGroup: void <init>(android.content.Context)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.TimedText: java.lang.Object getObject(int)>:<private>:<android.media.TimedText>
<android.view.View.AttachInfo.Callbacks: void playSoundEffect(int)>:<public abstract>:<android.view.View.AttachInfo.Callbacks>
<android.security.KeyChainException: void <init>(java.lang.String)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>:<public>:<android.database.ContentObserver>
<android.media.session.ISessionController.Stub.Proxy: void next()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.view.GLES20Canvas: long nFinishRecording(long)>:<protected static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: boolean hasListenersForAccessibility()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.gesture.GestureOverlayView: long access.300(android.gesture.GestureOverlayView)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.media.tv.TvInputManager.SessionCallbackRecord.10: void run()>:<public>:<android.media.tv.TvInputManager.SessionCallbackRecord.10:java.lang.Runnable>
<android.view.Choreographer: void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long)>:<private>:<android.view.Choreographer>
<android.widget.GridView: void setColumnWidth(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void onHoverChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: float getCameraDistance()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void onScrollChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PageRange.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.print.PageRange.1:android.os.Parcelable.Creator>
<android.view.ViewDebug.7: java.lang.Object call()>:<public>:<android.view.ViewDebug.7:java.util.concurrent.Callable>
<android.view.HardwareRenderer: void setRequested(boolean)>:<>:<android.view.HardwareRenderer>
<android.widget.Spinner.DropdownPopup: android.widget.ListAdapter access.300(android.widget.Spinner.DropdownPopup)>:<static>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.view.IAssetAtlas.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IAssetAtlas.Stub.Proxy:android.view.IAssetAtlas>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1300(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.WindowManagerGlobal.2: void run()>:<public>:<android.view.WindowManagerGlobal.2:java.lang.Runnable>
<android.view.InputEventReceiver: long nativeInit(java.lang.ref.WeakReference,android.view.InputChannel,android.os.MessageQueue)>:<private static native>:<android.view.InputEventReceiver>
<android.print.PrintDocumentInfo: int access.302(android.print.PrintDocumentInfo,int)>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: boolean isEndBoundary(int)>:<private>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.MediaPlayer.TimeProvider: void notifyAt(long,android.media.MediaTimeProvider.OnMediaTimeListener)>:<public>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.MediaSession.CallbackStub: void onCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.filterpacks.imageproc.ToPackedGrayFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.widget.TextView: void setLineSpacing(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback)>:<public final>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.TabWidget.OnTabSelectionChanged: void onTabSelectionChanged(int,boolean)>:<public abstract>:<android.widget.TabWidget.OnTabSelectionChanged>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] following(int)>:<public>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.CCParser.CCMemory: void cr()>:<>:<android.media.CCParser.CCMemory>
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>:<public static>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputManager.SessionCallback: void onContentBlocked(android.media.tv.TvInputManager.Session,android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.VolumePreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public>:<android.preference.VolumePreference:android.preference.SeekBarDialogPreference,android.preference.DialogPreference,android.preference.Preference,android.preference.PreferenceManager.OnActivityStopListener,android.view.View.OnKeyListener,android.preference.SeekBarVolumizer.Callback>
<android.widget.SearchView: int getInputType()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()>:<public>:<android.animation.FloatKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.FloatKeyframes>
<android.media.MediaCodecInfo.EncoderCapabilities: void setDefaultFormat(android.media.MediaFormat)>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.view.MagnificationSpec.1: android.view.MagnificationSpec[] newArray(int)>:<public>:<android.view.MagnificationSpec.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Space: int getDefaultSize2(int,int)>:<private static>:<android.widget.Space:android.view.View>
<android.print.PrintAttributes.Margins: int getTopMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.filterpacks.imageproc.DrawOverlayFilter: void prepare(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DrawOverlayFilter:android.filterfw.core.Filter>
<android.widget.GridLayout: void setOrientation(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.media.tv.TvView: void onDetachedFromWindow()>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.media.TimedText: java.lang.String getText()>:<public>:<android.media.TimedText>
<android.widget.HwAbsListView: boolean getCheckedStateForMultiSelect(boolean)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.media.tv.TvInputManager.Session: void recyclePendingEventLocked(android.media.tv.TvInputManager.Session.PendingEvent)>:<private>:<android.media.tv.TvInputManager.Session>
<android.print.IPrintManager.Stub.Proxy: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>:<public>:<android.print.IPrintManager.Stub.Proxy:android.print.IPrintManager>
<android.view.RenderNode: boolean setProjectionReceiver(boolean)>:<public>:<android.view.RenderNode>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void shutdown(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.media.session.ISessionController.Stub.Proxy: void registerCallbackListener(android.media.session.ISessionControllerCallback)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(android.preference.PreferenceGroupAdapter.PreferenceLayout)>:<public>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.print.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)>:<public final>:<android.print.PrinterDiscoverySession>
<android.media.AudioManager: void setRingerMode(int,boolean)>:<public>:<android.media.AudioManager>
<android.filterpacks.videosrc.MediaSource.2: void <init>(android.filterpacks.videosrc.MediaSource)>:<>:<android.filterpacks.videosrc.MediaSource.2:android.media.MediaPlayer.OnPreparedListener>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: android.os.IBinder getWindowToken(int)>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.Surface: long nativeCreateFromSurfaceTexture(android.graphics.SurfaceTexture)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.media.AudioTrack: int attachAuxEffect(int)>:<public>:<android.media.AudioTrack>
<android.widget.Editor.CorrectionHighlighter: void stopAnimation()>:<private>:<android.widget.Editor.CorrectionHighlighter>
<android.view.animation.AccelerateInterpolator: long createNativeInterpolator()>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.MotionEvent: int nativeGetAction(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void invalidateAllWeekViews()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.opengl.GLErrorWrapper: void glClientActiveTexture(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: void onGetPrintJobInfosResult(java.util.List,int)>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.view.animation.RotateAnimation: void initializePivotPoint()>:<private>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.view.InputEventSender: long nativeInit(java.lang.ref.WeakReference,android.view.InputChannel,android.os.MessageQueue)>:<private static native>:<android.view.InputEventSender>
<android.view.FrameStats: long getEndTimeNano()>:<public final>:<android.view.FrameStats>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.preference.MultiCheckPreference.1: void <init>(android.preference.MultiCheckPreference)>:<>:<android.preference.MultiCheckPreference.1:android.content.DialogInterface.OnMultiChoiceClickListener>
<android.media.AudioService: void onCheckMusicActive()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.session.PlaybackState: float getPlaybackSpeed()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.print.PageRange: boolean equals(java.lang.Object)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.widget.GridLayout: int getMeasurement(android.view.View,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.opengl.EGLObjectHandle: void <init>(int)>:<protected>:<android.opengl.EGLObjectHandle>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.media.FaceDetector: void nativeClassInit()>:<private static native>:<android.media.FaceDetector>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean supportsFormat(android.media.MediaFormat)>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.widget.Gallery: void setGravity(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.ddm.DdmHandleNativeHeap: void <clinit>()>:<static>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.View: void resetResolvedLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.preference.MultiCheckPreference: boolean[] access.000(android.preference.MultiCheckPreference)>:<static>:<android.preference.MultiCheckPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View: void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable,android.graphics.Region)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Rating: void <init>(int,float)>:<private>:<android.media.Rating:android.os.Parcelable>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onSkipToNext()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.media.MediaRouter.RouteInfo: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.View: void <init>(android.content.Context)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AdapterViewAnimator: android.widget.AdapterViewAnimator.ViewAndMetaData getMetaDataForChild(android.view.View)>:<private>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.InputEvent: android.view.InputEvent copy()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.view.MotionEvent: java.lang.String actionToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31: void glBindProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TextView: boolean isPasswordInputType(int)>:<private static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>:<public>:<android.media.AudioRecord>
<android.animation.ObjectAnimator: java.lang.String toString()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.service.trust.ITrustAgentService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.trust.ITrustAgentService.Stub:android.os.Binder,android.service.trust.ITrustAgentService>
<android.widget.DatePicker: boolean isEnabled()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.projection.MediaProjectionManager.Callback: void onStop(android.media.projection.MediaProjectionInfo)>:<public abstract>:<android.media.projection.MediaProjectionManager.Callback>
<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>:<public>:<android.view.Choreographer>
<android.widget.AutoCompleteTextView.MyWatcher: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView.1)>:<>:<android.widget.AutoCompleteTextView.MyWatcher:android.text.TextWatcher>
<android.preference.MultiSelectListPreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.MultiSelectListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.RenderNodeAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.SearchView: boolean access.1500(android.widget.SearchView,android.view.View,int,android.view.KeyEvent)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Editor: void sendUpdateSelection()>:<private>:<android.widget.Editor>
<android.filterpacks.base.FrameBranch: void setupPorts()>:<public>:<android.filterpacks.base.FrameBranch:android.filterfw.core.Filter>
<android.media.SoundPool.SoundPoolDelegate: void stop(int)>:<public abstract>:<android.media.SoundPool.SoundPoolDelegate>
<android.view.Window: void setReturnTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.view.ViewConfiguration: int getScaledTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.media.audiofx.LoudnessEnhancer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.LoudnessEnhancer.Settings>
<android.opengl.GLErrorWrapper: void glBlendEquation(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.dreams.DreamService: boolean isWindowless()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.printservice.PrintJob: boolean isQueued()>:<public>:<android.printservice.PrintJob>
<android.media.MediaCodecList: void <init>()>:<private>:<android.media.MediaCodecList>
<android.widget.CheckedTextView: void drawableHotspotChanged(float,float)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.TextureView: void destroyHardwareResources()>:<protected>:<android.view.TextureView:android.view.View>
<android.database.MatrixCursor: double getDouble(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.IAudioService.Stub.Proxy: void adjustSuggestedStreamVolume(int,int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.AudioManager: int getMode()>:<public>:<android.media.AudioManager>
<android.widget.AbsListView.RecycleBin: void reclaimScrapViews(java.util.List)>:<>:<android.widget.AbsListView.RecycleBin>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.WindowManagerGlobal: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.WindowManagerGlobal>
<android.widget.VideoView: int access.002(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.media.AudioTrack: void play()>:<public>:<android.media.AudioTrack>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig.DowntimeInfo toDowntimeInfo()>:<public>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.printservice.PrintService: void onDisconnected()>:<protected>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.Editor.HandleView: void filterOnTouchUp()>:<private>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void <init>(android.service.wallpaper.WallpaperService,android.service.wallpaper.WallpaperService,android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect)>:<>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.service.notification.IStatusBarNotificationHolder.Stub: android.os.IBinder asBinder()>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub:android.os.Binder,android.service.notification.IStatusBarNotificationHolder>
<android.service.notification.StatusBarNotification: void <clinit>()>:<static>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.session.ISessionCallback.Stub.Proxy: void onMediaButton(android.content.Intent,int,android.os.ResultReceiver)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.MediaScanner.MyMediaScannerClient: void testGenreNameConverter()>:<private>:<android.media.MediaScanner.MyMediaScannerClient:android.media.MediaScannerClient>
<android.media.RemoteController: void onNewPlaybackInfo(int,android.media.RemoteController.PlaybackInfo)>:<private>:<android.media.RemoteController>
<android.view.ActionMode: android.view.Menu getMenu()>:<public abstract>:<android.view.ActionMode>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.filterpacks.videosink.MediaEncoderFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.view.IInputFilterHost.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IInputFilterHost.Stub:android.os.Binder,android.view.IInputFilterHost>
<android.preference.PreferenceActivity.1: void handleMessage(android.os.Message)>:<public>:<android.preference.PreferenceActivity.1:android.os.Handler>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.IWindowManager: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.AudioTrack: int setStereoVolume(float,float)>:<public>:<android.media.AudioTrack>
<android.media.AudioTrack: int getAudioSessionId()>:<public>:<android.media.AudioTrack>
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.widget.Editor.InsertionHandleView: void showWithActionPopup()>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.media.IAudioService.Stub.Proxy: void unregisterAudioPolicyAsync(android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.printservice.IPrintServiceClient.Stub: android.os.IBinder asBinder()>:<public>:<android.printservice.IPrintServiceClient.Stub:android.os.Binder,android.printservice.IPrintServiceClient>
<android.widget.RadialTimePickerView: void drawCenter(android.graphics.Canvas)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.MatchLabelForPredicate: void <init>(android.view.View)>:<private>:<android.view.View.MatchLabelForPredicate:com.android.internal.util.Predicate>
<android.media.MediaFocusControl: void dumpFocusStack(java.io.PrintWriter)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onDetected(android.service.voice.AlwaysOnHotwordDetector.EventPayload)>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.filterpacks.videosrc.SurfaceTextureSource: void createFormats()>:<private>:<android.filterpacks.videosrc.SurfaceTextureSource:android.filterfw.core.Filter>
<android.media.MediaExtractor: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>:<public final>:<android.media.MediaExtractor>
<android.view.RenderNodeAnimator: long getStartDelay()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.AudioSystem: boolean getMasterMute()>:<public static native>:<android.media.AudioSystem>
<android.widget.DatePickerCalendarDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.security.AndroidKeyStoreProvider: void <init>()>:<public>:<android.security.AndroidKeyStoreProvider:java.security.Provider,java.util.Properties,java.util.Hashtable,java.util.Dictionary>
<android.view.View.6: void <init>(java.lang.String)>:<>:<android.view.View.6:android.util.FloatProperty>
<android.media.tv.TvTrackInfo: float getVideoFrameRate()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getFocusedMonthDateColor()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>:<public static>:<android.accounts.AccountManager>
<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.media.AudioAttributes: int usageForLegacyStreamType(int)>:<public static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.widget.GridLayout.Assoc: void <init>(java.lang.Class,java.lang.Class)>:<private>:<android.widget.GridLayout.Assoc:java.util.ArrayList,java.util.AbstractList,java.util.AbstractCollection>
<android.opengl.GLLogWrapper: void glActiveTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.AudioService: android.content.Context access.400(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputDevice.MotionRange: float access.700(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.media.IRemoteDisplayCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteDisplayCallback.Stub.Proxy:android.media.IRemoteDisplayCallback>
<android.view.IWindowManager: boolean isViewServerRunning()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceFrameLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost.ViewIdContentStrategy: android.view.View getContentView()>:<public>:<android.widget.TabHost.ViewIdContentStrategy:android.widget.TabHost.ContentStrategy>
<android.view.IWindowSession: void dragRecipientEntered(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputEvent: void <init>()>:<>:<android.view.InputEvent:android.os.Parcelable>
<android.view.Display: boolean hasAccess(int)>:<public>:<android.view.Display>
<android.media.MediaFormat: void <init>()>:<public>:<android.media.MediaFormat>
<android.view.accessibility.AccessibilityWindowInfo: void clear()>:<private>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.GLES20Canvas: int nSaveLayer(long,long,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.RemoteViewsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>:<public static>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: boolean hasAlpha()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.PopupMenu: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.audiofx.PresetReverb: void <init>(int,int)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.media.audiofx.AudioEffect: void <clinit>()>:<static>:<android.media.audiofx.AudioEffect>
<android.media.session.ISessionManager.Stub.Proxy: void setRemoteVolumeController(android.media.IRemoteVolumeController)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.DatePicker: boolean getCalendarViewShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.service.notification.NotificationListenerService: void onInterruptionFilterChanged(int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.VelocityTracker: float nativeGetYVelocity(long,int)>:<private static native>:<android.view.VelocityTracker>
<android.media.MediaPlayer: android.media.MediaPlayer.OnInfoListener access.1500(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.netdetect.HwCustNetDetectServiceImpl: boolean isInternetConnected()>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.widget.Spinner.2: void onGlobalLayout()>:<public>:<android.widget.Spinner.2:android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ViewGroup: void addView(android.view.View,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityRecord: boolean isSealed()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>:<public>:<android.view.SurfaceControl>
<android.service.media.MediaBrowserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.CCParser.CCLineBuilder: int length()>:<>:<android.media.CCParser.CCLineBuilder>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.ZoomControls: void setZoomSpeed(long)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Visualizer: boolean native_getEnabled()>:<private final native>:<android.media.audiofx.Visualizer>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.MediaRecorder: void start()>:<public>:<android.media.MediaRecorder>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.EGLContextFactory access.400(android.opengl.GLSurfaceView)>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.browse.MediaBrowser: void <init>(android.content.Context,android.content.ComponentName,android.media.browse.MediaBrowser.ConnectionCallback,android.os.Bundle)>:<public>:<android.media.browse.MediaBrowser>
<android.view.FocusFinder.SequentialFocusComparator: void getRect(android.view.View,android.graphics.Rect)>:<private>:<android.view.FocusFinder.SequentialFocusComparator:java.util.Comparator>
<android.preference.ListPreference: void setValueIndex(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>:<public abstract>:<android.view.MenuItem>
<android.media.AsyncPlayer: void stop()>:<public>:<android.media.AsyncPlayer>
<android.media.AudioTrack: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>:<private static>:<android.media.AudioTrack>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.animation.ClipRectAnimation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.ClipRectAnimation:android.view.animation.Animation>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void registerPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>:<public>:<android.media.MediaCodec>
<android.widget.AdapterView: int getPositionForView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.View: void setTouchInOtherThread(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor: android.widget.Editor.ActionPopupWindow createActionPopupWindow()>:<protected>:<android.widget.Editor>
<android.view.ViewRootImpl.W: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.ListView: void adjustViewsUpOrDown()>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioDevicePortConfig: void <init>(android.media.AudioDevicePort,int,int,int,android.media.AudioGainConfig)>:<>:<android.media.AudioDevicePortConfig:android.media.AudioPortConfig>
<android.printservice.PrintService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.SurfaceControl: long nativeCreate(android.view.SurfaceSession,java.lang.String,int,int,int,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.MediaFocusControl.AudioFocusDeathHandler: void <init>(android.media.MediaFocusControl,android.os.IBinder)>:<>:<android.media.MediaFocusControl.AudioFocusDeathHandler:android.os.IBinder.DeathRecipient>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewGroup: void removeViews(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.printservice.PrintService.1: void stopPrinterStateTracking(android.print.PrinterId)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ViewGroup.MarginLayoutParams: int getMarginEnd()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.service.voice.VoiceInteractionService: void access.100(android.service.voice.VoiceInteractionService)>:<static>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.DatePickerCalendarDelegate: int getDaysInMonth(int,int)>:<public static>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService: boolean access.6300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowManagerPolicy: void setDisplayOverscan(android.view.Display,int,int,int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.AudioPatch: android.media.AudioPortConfig[] sources()>:<public>:<android.media.AudioPatch>
<android.widget.RemoteViews.BitmapCache: android.graphics.Bitmap getBitmapForId(int)>:<public>:<android.widget.RemoteViews.BitmapCache>
<android.media.tv.TvStreamConfig: int getGeneration()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.animation.Animator: void addListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.media.ImageReader: android.view.Surface nativeGetSurface()>:<private synchronized native>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLES10: void glPointSizex(int)>:<public static native>:<android.opengl.GLES10>
<android.view.MotionEvent: int nativeSetSource(long,int)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.netdetect.HwCustNetDetectServiceImpl: void <init>(android.content.Context)>:<public>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: long getMaximumDataBlockSize()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.widget.Toast.TN: void handleShow()>:<public>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.media.tv.TvInputService: boolean isNavigationKey(int)>:<public static>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.accounts.IAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.LayoutInflater.BlinkLayout: boolean access.000(android.view.LayoutInflater.BlinkLayout)>:<static>:<android.view.LayoutInflater.BlinkLayout:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.QueuedInputEvent: boolean flagToString(java.lang.String,int,boolean,java.lang.StringBuilder)>:<private>:<android.view.ViewRootImpl.QueuedInputEvent>
<android.view.HardwareLayer: void setSurfaceTexture(android.graphics.SurfaceTexture)>:<public>:<android.view.HardwareLayer>
<android.preference.SeekBarPreference.SavedState.1: android.preference.SeekBarPreference.SavedState[] newArray(int)>:<public>:<android.preference.SeekBarPreference.SavedState.1:android.os.Parcelable.Creator>
<android.animation.PointFEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.preference.PreferenceFragment: void access.000(android.preference.PreferenceFragment)>:<static>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.view.AccessibilityIterators.WordTextSegmentIterator: boolean isLetterOrDigit(int)>:<private>:<android.view.AccessibilityIterators.WordTextSegmentIterator:android.view.AccessibilityIterators.CharacterTextSegmentIterator,android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String,java.lang.String,int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>:<public static>:<android.opengl.GLUtils>
<android.view.View.10: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.10:android.util.FloatProperty>
<android.view.View: boolean hasStaticLayer()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputServiceCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputServiceCallback.Stub.Proxy:android.media.tv.ITvInputServiceCallback>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setCapturePreset(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.VideoView: void attachMediaController()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.View: android.graphics.Bitmap getDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.effect.effects.BackDropperEffect.1: void <init>(android.media.effect.effects.BackDropperEffect)>:<>:<android.media.effect.effects.BackDropperEffect.1:android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener>
<android.media.session.ISessionManager: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,int)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.media.IRemoteControlClient.Stub.Proxy: void setCurrentClientGenerationId(int)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.view.OrientationEventListener: void enable()>:<public>:<android.view.OrientationEventListener>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>:<public>:<android.widget.AdapterView.AdapterContextMenuInfo:android.view.ContextMenu.ContextMenuInfo>
<android.widget.TextView.CharWrapper: int length()>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.view.RenderNode: boolean setPivotY(float)>:<public>:<android.view.RenderNode>
<android.media.MediaCodecList: void <init>(int)>:<public>:<android.media.MediaCodecList>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.InputDevice: java.lang.String getName()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.ddm.DdmHandleViewDebug: void register()>:<public static>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.TtmlRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>:<public>:<android.media.TtmlRenderer:android.media.SubtitleController.Renderer>
<android.widget.ScrollView: void smoothScrollTo(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession access.200(android.printservice.PrintService)>:<static>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String,java.lang.String,boolean)>:<public static final>:<android.media.tv.TvContract>
<android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>:<static>:<android.media.Utils>
<android.service.trust.TrustAgentService: void revokeTrust()>:<public final>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.effect.EffectContext: void <init>()>:<private>:<android.media.effect.EffectContext>
<android.view.View: boolean dispatchGenericMotionEventInternal(android.view.MotionEvent)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper.PointerInfo: int getStride()>:<public>:<android.opengl.GLLogWrapper.PointerInfo>
<android.view.ActionProvider: boolean isVisible()>:<public>:<android.view.ActionProvider>
<android.widget.TextView: void setEnabled(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>:<public native>:<android.media.MediaDrm>
<android.preference.SeekBarVolumizer: boolean isSamplePlaying()>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnInfoListener>
<huawei.android.app.HwCustEmergDataManager: boolean isEmergencyMountState()>:<public>:<huawei.android.app.HwCustEmergDataManager>
<android.view.View: void drawBackground(android.graphics.Canvas)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.VoiceInteractionSession: void onCancel(android.service.voice.VoiceInteractionSession.Request)>:<public abstract>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.MediaHTTPConnection: void native_init()>:<private static final native>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.media.MediaScanner: boolean access.2200(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.animation.AnimatorSet.DependencyListener: void startIfReady(android.animation.Animator)>:<private>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.service.notification.ZenModeConfig: boolean isValidDowntimeConditionId(android.net.Uri)>:<public static>:<android.service.notification.ZenModeConfig:android.os.Parcelable>
<android.widget.VideoView: void initVideoView()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.session.ISessionController.Stub.Proxy: void playFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.GridView: void adjustForBottomFadingEdge(android.view.View,int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.SurfaceView:android.view.View>
<android.widget.GridLayout.Axis: void invalidateStructure()>:<public>:<android.widget.GridLayout.Axis>
<android.view.WindowManagerPolicy: int finishPostLayoutPolicyLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.ViewRootImpl: void disposeResizeBuffer()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.TextView.CharWrapper: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.printservice.PrinterDiscoverySession: void sendOutOfDiscoveryPeriodPrinterChanges()>:<private>:<android.printservice.PrinterDiscoverySession>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService: void setRingerMode(int,boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.ViewRootImpl.SyntheticInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.SyntheticInputStage:android.view.ViewRootImpl.InputStage>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.SubtitleTrack.CueList.EntryIterator: void nextKey()>:<private>:<android.media.SubtitleTrack.CueList.EntryIterator:java.util.Iterator>
<android.service.dreams.DreamService: boolean onSearchRequested()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.DisplayInfo: void <init>(android.os.Parcel)>:<private>:<android.view.DisplayInfo:android.os.Parcelable>
<android.opengl.GLErrorWrapper: void glLineWidthx(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService: int getMode()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.IWindowManager.Stub.Proxy: void pauseKeyDispatching(android.os.IBinder)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.filterpacks.imageproc.DuotoneFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.media.RemoteController.MediaControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>:<public>:<android.media.RemoteController.MediaControllerCallback:android.media.session.MediaController.Callback>
<android.media.RemoteDisplay: void notifyDisplayError(int)>:<private>:<android.media.RemoteDisplay>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.media.UnstyledTextExtractor: void onLineEnd()>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.view.IWindowManager.Stub: void <init>()>:<public>:<android.view.IWindowManager.Stub:android.os.Binder,android.view.IWindowManager>
<android.view.Choreographer: long getFrameTimeNanos()>:<public>:<android.view.Choreographer>
<android.view.View.ListenerInfo: android.view.View.OnHoverListener access.600(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.printservice.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.media.IRemoteControlClient.Stub.Proxy: void onInformationRequested(int,int)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.view.FocusFinder: android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int)>:<private static>:<android.view.FocusFinder>
<android.media.MediaPlayer.TimeProvider: void scheduleNotification(int,long)>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.Window: boolean getSharedElementsUseOverlay()>:<public>:<android.view.Window>
<android.view.Surface: void nativeAllocateBuffers(long)>:<private static native>:<android.view.Surface:android.os.Parcelable>
<android.media.MediaExtractor: int getSampleTrackIndex()>:<public native>:<android.media.MediaExtractor>
<android.view.SurfaceView.4: void addCallback(android.view.SurfaceHolder.Callback)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.widget.RemoteViews.ViewGroupAction: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.view.View: void setLongClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void <init>(android.view.ViewRootImpl)>:<private>:<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent:java.lang.Runnable>
<android.media.TtmlParser: void <init>(android.media.TtmlNodeListener)>:<public>:<android.media.TtmlParser>
<android.media.tv.ITvInputHardwareCallback.Stub.Proxy: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub.Proxy:android.media.tv.ITvInputHardwareCallback>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.OnParameterChangeListener access.100(android.media.audiofx.Virtualizer)>:<static>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.view.GLES20Canvas.CanvasFinalizer: void <init>(long)>:<public>:<android.view.GLES20Canvas.CanvasFinalizer>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.preference.Preference.BaseSavedState: void <clinit>()>:<static>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.accounts.IAccountManager: java.lang.String getPreviousName(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)>:<public static final>:<android.media.MediaFormat>
<android.view.IWindowManager.Stub.Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.accessibility.AccessibilityNodeProvider: void <init>()>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.media.tv.TvInputService.Session: void setCaptionEnabled(boolean)>:<>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ViewGroup: boolean access.300(android.view.ViewGroup)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService: java.lang.Object access.6600(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES30: void glDeleteSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.ILayoutResultCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.media.AudioAttributes.1: android.media.AudioAttributes[] newArray(int)>:<public>:<android.media.AudioAttributes.1:android.os.Parcelable.Creator>
<android.media.AudioPort: android.media.AudioPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>:<public>:<android.media.AudioPort>
<android.widget.Editor.HandleView: void dismiss()>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.IInputFilter.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IInputFilter.Stub.Proxy:android.view.IInputFilter>
<android.media.AudioManager: void setVibrateSetting(int,int)>:<public>:<android.media.AudioManager>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub:android.os.Binder,android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.view.WindowManagerPolicy: void finishLayoutLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBitrateRange()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.filterpacks.base.CallbackFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.base.CallbackFilter:android.filterfw.core.Filter>
<android.database.sqlite.SQLiteProgram: void clearBindings()>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.ActionMode: boolean isTitleOptional()>:<public>:<android.view.ActionMode>
<android.widget.AbsListView.InputConnectionWrapper: boolean requestCursorUpdates(int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.ViewDebug.FlagToString: int mask()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.opengl.ETC1Util: void <init>()>:<public>:<android.opengl.ETC1Util>
<android.media.MediaMetadataRetriever: void native_init()>:<private static native>:<android.media.MediaMetadataRetriever>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.view.WindowId: boolean equals(java.lang.Object)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.IMediaRouterService: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.widget.VideoView: void openVideo()>:<private>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.WebVttRenderingWidget.RegionLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CheckedTextView: void <clinit>()>:<static>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>:<>:<android.view.FocusFinder>
<android.media.MediaPlayer: void scanInternalSubtitleTracks()>:<private>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Editor: android.widget.Editor.PositionListener access.1100(android.widget.Editor)>:<static>:<android.widget.Editor>
<android.gesture.GestureOverlayView: int getOrientation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.dreams.IDreamManager.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.widget.VideoView: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)>:<public>:<android.media.MiniThumbFile>
<android.media.AudioTrack: void native_release()>:<private final native>:<android.media.AudioTrack>
<android.media.MediaCodec.Callback: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.widget.EditText: android.text.Editable getText()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.tv.ITvInputSession.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputSession.Stub:android.os.Binder,android.media.tv.ITvInputSession>
<android.media.session.MediaController.TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy: android.service.notification.StatusBarNotification get()>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub.Proxy:android.service.notification.IStatusBarNotificationHolder>
<android.widget.DatePickerController: void registerOnDateChangedListener(android.widget.OnDateChangedListener)>:<public abstract>:<android.widget.DatePickerController>
<android.media.IMediaRouterService.Stub.Proxy: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>:<public>:<android.media.IMediaRouterService.Stub.Proxy:android.media.IMediaRouterService>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.DisplayAdjustments: android.os.IBinder getActivityToken()>:<public>:<android.view.DisplayAdjustments>
<android.view.accessibility.IAccessibilityManagerClient.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManagerClient>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLErrorWrapper: void glGenTextures(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.preference.SeekBarVolumizer: void onProgressChanged(android.widget.SeekBar,int,boolean)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.database.BulkCursorToCursorAdaptor: boolean requery()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.GLES20Canvas: int saveLayerAlpha(float,float,float,float,int,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.database.sqlite.SQLiteConnection: java.lang.String nativeExecuteForString(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.Editor: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>:<>:<android.widget.Editor>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureConnection()>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager:android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.widget.Spinner.DropdownPopup.1: void <init>(android.widget.Spinner.DropdownPopup,android.widget.Spinner)>:<>:<android.widget.Spinner.DropdownPopup.1:android.widget.AdapterView.OnItemClickListener>
<android.filterpacks.imageproc.BrightnessFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.BrightnessFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.service.dreams.DreamService: void setContentView(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.SurfaceControl: void setTransparentRegionHint(android.graphics.Region)>:<public>:<android.view.SurfaceControl>
<android.media.tv.ITvInputSession: void setVolume(float)>:<public abstract>:<android.media.tv.ITvInputSession:android.os.IInterface>
<android.widget.AdapterViewAnimator: void onMeasure(int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.ViewRootImpl: void changeCanvasOpacity(boolean)>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.filterpacks.base.FrameStore: void setupPorts()>:<public>:<android.filterpacks.base.FrameStore:android.filterfw.core.Filter>
<android.gesture.GestureStore: void setSequenceType(int)>:<public>:<android.gesture.GestureStore>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.HardwareCanvas: void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>:<public abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.view.accessibility.AccessibilityWindowInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.preference.Preference.BaseSavedState.1: android.preference.Preference.BaseSavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.Preference.BaseSavedState.1:android.os.Parcelable.Creator>
<android.accounts.GrantCredentialsPermissionActivity.1: void <init>(android.accounts.GrantCredentialsPermissionActivity,android.widget.TextView)>:<>:<android.accounts.GrantCredentialsPermissionActivity.1:android.accounts.AccountManagerCallback>
<android.media.SoundPool.SoundPoolImpl: void _setVolume(int,float,float)>:<private final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.View: float getScaleX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public>:<android.media.SoundPool>
<android.media.session.PlaybackState: void <init>(int,long,long,float,long,long,java.util.List,long,java.lang.CharSequence)>:<private>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.database.Observable: void registerObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.view.ViewDebug: void capture(android.view.View,java.io.OutputStream,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.IApplicationToken.Stub.Proxy: boolean keyDispatchingTimedOut(java.lang.String)>:<public>:<android.view.IApplicationToken.Stub.Proxy:android.view.IApplicationToken>
<android.media.effect.effects.RotateEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.RotateEffect:android.media.effect.SizeChangeEffect,android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.browse.MediaBrowser.1: void <init>(android.media.browse.MediaBrowser,android.content.ServiceConnection)>:<>:<android.media.browse.MediaBrowser.1:java.lang.Runnable>
<android.printservice.PrintService: void <init>()>:<public>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.browse.MediaBrowser: android.media.browse.MediaBrowser.ServiceCallbacks getNewServiceCallbacks()>:<private>:<android.media.browse.MediaBrowser>
<android.media.SRTTrack: void <init>(android.os.Handler,android.media.MediaFormat)>:<>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.media.ImageReader.SurfaceImage.SurfacePlane: void clearBuffer()>:<private>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>:<public>:<android.animation.LayoutTransition>
<android.media.browse.MediaBrowser.3: void run()>:<public>:<android.media.browse.MediaBrowser.3:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glFogx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.Interpolator>
<android.widget.SpellChecker: void access.1000(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.media.MediaRouter: void dispatchRouteSelected(int,android.media.MediaRouter.RouteInfo)>:<static>:<android.media.MediaRouter>
<android.accounts.AbstractAccountAuthenticator: void checkBinderPermission()>:<private>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.TextView.Marquee: float getGhostOffset()>:<>:<android.widget.TextView.Marquee>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.RecycleBin: void clearScrap(java.util.ArrayList)>:<private>:<android.widget.AbsListView.RecycleBin>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback,android.os.Handler)>:<public>:<android.media.session.MediaSession>
<android.preference.Preference: boolean persistFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.database.ContentObservable: void <init>()>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.widget.TextView: int getCompoundPaddingStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewTreeObserver.CopyOnWriteArray: void add(java.lang.Object)>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.print.PrintAttributes.Resolution: void writeToParcel(android.os.Parcel)>:<>:<android.print.PrintAttributes.Resolution>
<android.widget.VideoView: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.opengl.GLES20: void glCompileShader(int)>:<public static native>:<android.opengl.GLES20>
<android.gesture.GestureOverlayView: void cancelGesture(android.view.MotionEvent)>:<private>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IMediaHTTPConnection.Stub.Proxy: android.os.IBinder connect(java.lang.String,java.lang.String)>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.view.IWindowSession: int add(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.ActionProvider: void setSubUiVisibilityListener(android.view.ActionProvider.SubUiVisibilityListener)>:<public>:<android.view.ActionProvider>
<android.opengl.EGLExt: void _nativeClassInit()>:<private static native>:<android.opengl.EGLExt>
<android.media.tv.TvInputService.Session: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.service.notification.IConditionProvider.Stub.Proxy: void onSubscribe(android.net.Uri)>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.preference.PreferenceGroupAdapter: int getCount()>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.ProgressBar: void onAttachedToWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.printservice.PrintService: void attachBaseContext(android.content.Context)>:<protected final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.RemoteDisplay.3: void run()>:<public>:<android.media.RemoteDisplay.3:java.lang.Runnable>
<android.print.PrintJobInfo: void <init>(android.print.PrintJobInfo)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.print.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>:<public final>:<android.print.PrinterDiscoverySession>
<android.media.ClosedCaptionWidget: void manageChangeListener()>:<private>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.media.tv.TvView.3: void updateWindow(boolean,boolean)>:<protected>:<android.media.tv.TvView.3:android.view.SurfaceView,android.view.View>
<android.widget.GridLayout.Axis: void init(int[])>:<private>:<android.widget.GridLayout.Axis>
<android.media.AsyncPlayer.Thread: void <init>(android.media.AsyncPlayer)>:<>:<android.media.AsyncPlayer.Thread:java.lang.Thread>
<android.opengl.GLLogWrapper: void glBlendEquation(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glPolygonOffsetx(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Switch: void animateThumbToCheckedState(boolean)>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.RenderNodeAnimator: long nCreateAnimator(int,float)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.security.KeyStore: boolean ungrant(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.database.sqlite.SQLiteConnection: void dumpUnsafe(android.util.Printer,boolean)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.media.tv.TvInputHardwareInfo: int getType()>:<public>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.SoundPool.SoundPoolImpl.EventHandler: void <init>(android.media.SoundPool.SoundPoolImpl,android.media.SoundPool,android.os.Looper)>:<public>:<android.media.SoundPool.SoundPoolImpl.EventHandler:android.os.Handler>
<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHardwareAdded(android.media.tv.TvInputHardwareInfo)>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: void setLayoutMode(int,boolean)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Rating.1: void <init>()>:<>:<android.media.Rating.1:android.os.Parcelable.Creator>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>:<public static>:<android.view.animation.AnimationUtils>
<android.view.ViewPropertyAnimatorRT: void cancelAll()>:<public>:<android.view.ViewPropertyAnimatorRT>
<android.view.GLES20Canvas: boolean nIsAvailable()>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>:<public>:<android.appwidget.AppWidgetHost>
<android.database.CursorWindow.1: void <init>()>:<>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.view.inputmethod.CursorAnchorInfo: int describeContents()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>:<public abstract>:<android.media.MediaPlayer.OnBufferingUpdateListener>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ShareActionProvider: java.lang.String access.200(android.widget.ShareActionProvider)>:<static>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.widget.TimePickerSpinnerDelegate: void setCurrentItemShowing(int,boolean,boolean)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.view.InputDevice: int describeContents()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.AudioService.MyDisplayStatusCallback: void <init>(android.media.AudioService)>:<private>:<android.media.AudioService.MyDisplayStatusCallback:android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback>
<android.view.View: boolean isClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setNavigationBarColor(int)>:<public abstract>:<android.view.Window>
<android.widget.SpellChecker: void spellCheck()>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.Metadata: int lastSytemId()>:<public static>:<android.media.Metadata>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.database.BulkCursorNative: void <init>()>:<public>:<android.database.BulkCursorNative:android.os.Binder,android.database.IBulkCursor>
<android.media.browse.MediaBrowser: void dump()>:<>:<android.media.browse.MediaBrowser>
<android.service.wallpaper.IWallpaperService.Stub: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperService.Stub:android.os.Binder,android.service.wallpaper.IWallpaperService>
<android.media.tv.TvInputManager.Hardware: android.media.tv.ITvInputHardware access.1800(android.media.tv.TvInputManager.Hardware)>:<static>:<android.media.tv.TvInputManager.Hardware>
<android.animation.FloatArrayEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.media.AudioService.VolumeStreamState: java.util.ArrayList access.2000(android.media.AudioService.VolumeStreamState)>:<static>:<android.media.AudioService.VolumeStreamState>
<android.media.IMediaScannerListener: void scanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.IMediaScannerListener:android.os.IInterface>
<android.widget.TextView: int getCompoundPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: boolean shouldDelayChildPressedState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextView: float getLetterSpacing()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewRootImpl.RunQueue: void removeCallbacks(java.lang.Runnable)>:<>:<android.view.ViewRootImpl.RunQueue>
<android.media.TtmlParser: boolean isSupportedTag(java.lang.String)>:<private static>:<android.media.TtmlParser>
<android.media.tv.ITvInputSession.Stub.Proxy: void selectTrack(int,java.lang.String)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.view.animation.AnticipateInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>:<>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.View: void setScrollContainer(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputHardwareCallback.Stub: android.media.tv.ITvInputHardwareCallback asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputHardwareCallback.Stub:android.os.Binder,android.media.tv.ITvInputHardwareCallback>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IMediaHTTPConnection: java.lang.String getUri()>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.widget.RadialTimePickerView: void showMinutes(boolean)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.GLES20Canvas: void nDrawCircle(long,long,long,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.RatingBar: void animateSetProgress(int)>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.view.inputmethod.CursorAnchorInfo.Builder)>:<private>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ThreadedRenderer: void invalidate(android.view.Surface)>:<>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.security.KeyStore: android.security.KeyStore.State state()>:<public>:<android.security.KeyStore>
<android.view.View: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.View.3: java.lang.Object get(java.lang.Object)>:<public volatile>:<android.view.View.3:android.util.FloatProperty>
<android.print.PrinterInfo: java.lang.String getName()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>:<private>:<android.service.persistentdata.PersistentDataBlockManager>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.AnimatorSetListener:android.animation.Animator.AnimatorListener>
<android.view.Choreographer: void doScheduleVsync()>:<>:<android.view.Choreographer>
<android.media.IMediaHTTPService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaHTTPService.Stub.Proxy:android.media.IMediaHTTPService>
<android.media.tv.TvView: boolean access.300(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.ddm.DdmHandleViewDebug: android.view.View getTargetView(android.view.View,java.nio.ByteBuffer)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.SpellChecker: void setLocale(java.util.Locale)>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.View: android.view.HardwareLayer getHardwareLayer()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.DisplayInfo.1: android.view.DisplayInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.DisplayInfo.1:android.os.Parcelable.Creator>
<android.media.session.ISessionCallback.Stub: android.media.session.ISessionCallback asInterface(android.os.IBinder)>:<public static>:<android.media.session.ISessionCallback.Stub:android.os.Binder,android.media.session.ISessionCallback>
<android.media.AudioManager: boolean isInputDevice(int)>:<public static>:<android.media.AudioManager>
<android.widget.Editor.ActionPopupWindow: int getPositionX()>:<public volatile>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.session.MediaSession: void access.600(android.media.session.MediaSession,java.lang.String,android.os.Bundle)>:<static>:<android.media.session.MediaSession>
<android.media.DecoderCapabilities: int native_get_num_audio_decoders()>:<private static final native>:<android.media.DecoderCapabilities>
<android.filterpacks.imageproc.ColorTemperatureFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.ColorTemperatureFilter:android.filterfw.core.Filter>
<android.media.audiofx.AudioEffect.NativeEventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.audiofx.AudioEffect.NativeEventHandler:android.os.Handler>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,float[][])>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.MediaFocusControl: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.accounts.AccountManager.10: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.UserHandle)>:<>:<android.accounts.AccountManager.10:android.accounts.AccountManager.AmsTask,java.util.concurrent.FutureTask>
<android.media.SoundPool.SoundPoolImpl: int _play(int,float,float,int,int,float)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.View.5: java.lang.Float get(android.view.View)>:<public>:<android.view.View.5:android.util.FloatProperty>
<android.view.View: boolean isAccessibilitySelectionExtendable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.JetPlayer: boolean native_loadJetFromFile(java.lang.String)>:<private final native>:<android.media.JetPlayer>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: boolean access.2502(android.view.ViewRootImpl,boolean)>:<static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceWordItem: void <init>(android.view.textservice.TextInfo,int,int)>:<public>:<android.service.textservice.SpellCheckerService.SentenceLevelAdapter.SentenceWordItem>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Gallery: int getChildHeight(android.view.View)>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.service.voice.VoiceInteractionSession: void onCommand(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.String,android.os.Bundle)>:<public abstract>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.View: void onFocusLost()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabHost.ViewIdContentStrategy: void tabClosed()>:<public>:<android.widget.TabHost.ViewIdContentStrategy:android.widget.TabHost.ContentStrategy>
<android.database.DatabaseUtils.InsertHelper: void buildSQL()>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent,android.view.InputEventReceiver)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: long getItemId(int)>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.filterpacks.imageproc.SharpenFilter: void updateFrameSize(int,int)>:<private>:<android.filterpacks.imageproc.SharpenFilter:android.filterfw.core.Filter>
<android.view.DisplayAdjustments: void <init>(android.content.res.CompatibilityInfo,android.os.IBinder)>:<public>:<android.view.DisplayAdjustments>
<android.widget.Gallery: int access.702(android.widget.Gallery,int)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.RenderNodeAnimator: android.view.RenderNodeAnimator setDuration(long)>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.service.wallpaper.WallpaperService.Engine: void access.000(android.service.wallpaper.WallpaperService.Engine,android.view.MotionEvent)>:<static>:<android.service.wallpaper.WallpaperService.Engine>
<android.security.Credentials: java.util.List convertFromPem(byte[])>:<public static>:<android.security.Credentials>
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.database.CursorWindow: int getType(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void <clinit>()>:<static>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaFile: boolean isPlayListFileType(int)>:<public static>:<android.media.MediaFile>
<android.view.KeyEvent: int getRepeatCount()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.appwidget.AppWidgetHost.UpdateHandler: void handleMessage(android.os.Message)>:<public>:<android.appwidget.AppWidgetHost.UpdateHandler:android.os.Handler>
<android.media.MediaRouter.RouteInfo: int getStatusCode()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.MediaCodec: void native_setCallback(android.media.MediaCodec.Callback)>:<private final native>:<android.media.MediaCodec>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onNotificationRankingUpdate(android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.AbsListView.CheckForLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView.1)>:<>:<android.widget.AbsListView.CheckForLongPress:android.widget.AbsListView.WindowRunnnable,java.lang.Runnable>
<android.media.tv.TvInputManager: java.util.List getHardwareList()>:<public>:<android.media.tv.TvInputManager>
<android.widget.RemoteViews.3: android.widget.RemoteViews createFromParcel(android.os.Parcel)>:<public>:<android.widget.RemoteViews.3:android.os.Parcelable.Creator>
<android.preference.PreferenceManager: void registerOnActivityResultListener(android.preference.PreferenceManager.OnActivityResultListener)>:<>:<android.preference.PreferenceManager>
<android.media.session.MediaSession.Callback: void onSetRating(android.media.Rating)>:<public>:<android.media.session.MediaSession.Callback>
<android.media.MediaFile: int getFormatCode(java.lang.String,java.lang.String)>:<public static>:<android.media.MediaFile>
<android.widget.RemoteViewsAdapter: boolean isDataReady()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.GridLayout: void setPrinter(android.util.Printer)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity.Header.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.PreferenceActivity.Header.1:android.os.Parcelable.Creator>
<android.accounts.AccountManagerFuture: boolean isDone()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.media.MediaRouter.RouteInfo: boolean matchesTypes(int)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.RemoteDisplay: android.media.RemoteDisplay.Listener access.000(android.media.RemoteDisplay)>:<static>:<android.media.RemoteDisplay>
<android.media.SubtitleTrack.Run: void <init>()>:<private>:<android.media.SubtitleTrack.Run>
<android.accounts.AccountManager.3: android.accounts.Account[] bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.3:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.animation.ObjectAnimator: void setupStartValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: int getId()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.preference.Preference.BaseSavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.Preference.BaseSavedState.1:android.os.Parcelable.Creator>
<android.view.ViewDebug: java.lang.String capturedViewExportMethods(java.lang.Object,java.lang.Class,java.lang.String)>:<private static>:<android.view.ViewDebug>
<android.widget.FastScroller: android.graphics.Rect getContainerRect()>:<protected>:<android.widget.FastScroller>
<android.media.projection.MediaProjectionInfo.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.media.projection.MediaProjectionInfo.1:android.os.Parcelable.Creator>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Space:android.view.View>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.widget.Gallery: void fillToGalleryLeftLtr()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void scheduleCallback()>:<private>:<android.view.RenderNodeAnimator.DelayedAnimationHelper:java.lang.Runnable>
<android.widget.Spinner.DropDownAdapter: boolean isEmpty()>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.SearchView: android.widget.ImageView access.1000(android.widget.SearchView)>:<static>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void access.100(android.print.PrintManager.PrintDocumentAdapterDelegate)>:<static>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioAttributes.1: android.media.AudioAttributes createFromParcel(android.os.Parcel)>:<public>:<android.media.AudioAttributes.1:android.os.Parcelable.Creator>
<android.accounts.ChooseAccountTypeActivity.AuthInfo: void <init>(android.accounts.AuthenticatorDescription,java.lang.String,android.graphics.drawable.Drawable)>:<>:<android.accounts.ChooseAccountTypeActivity.AuthInfo>
<android.database.AbstractWindowedCursor: boolean hasWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.ActivityChooserModel.DefaultSorter: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel.1)>:<>:<android.widget.ActivityChooserModel.DefaultSorter:android.widget.ActivityChooserModel.ActivitySorter>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.media.Tokenizer.TokenizerPhase: android.media.Tokenizer.TokenizerPhase start()>:<public abstract>:<android.media.Tokenizer.TokenizerPhase>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService: int getInCallDevice()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>:<public>:<android.widget.RtlSpacingHelper>
<android.media.effect.effects.LomoishEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>:<public>:<android.media.effect.effects.LomoishEffect:android.media.effect.SingleFilterEffect,android.media.effect.FilterEffect,android.media.effect.Effect>
<android.media.tv.TvInputHardwareInfo.1: void <init>()>:<>:<android.media.tv.TvInputHardwareInfo.1:android.os.Parcelable.Creator>
<android.widget.ProgressBar: void incrementProgressBy(int)>:<public final>:<android.widget.ProgressBar:android.view.View>
<android.preference.SeekBarPreference: void setProgress(int,boolean)>:<private>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean getShowSoftInputOnFocus()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCodec.CodecException: void <init>(int,int,java.lang.String)>:<>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.media.tv.ITvInputManager: void setCaptionEnabled(android.os.IBinder,boolean,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetNewHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.RenderNode: void end(android.view.HardwareCanvas)>:<public>:<android.view.RenderNode>
<android.filterpacks.imageproc.TintFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.TintFilter:android.filterfw.core.Filter>
<android.media.tv.TvView: int access.000(android.media.tv.TvView)>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.SurfaceView.3: boolean onPreDraw()>:<public>:<android.view.SurfaceView.3:android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.IVoiceInteractionSessionService: void newSession(android.os.IBinder,android.os.Bundle)>:<public abstract>:<android.service.voice.IVoiceInteractionSessionService:android.os.IInterface>
<android.media.FocusRequester: boolean hasSameClient(java.lang.String)>:<>:<android.media.FocusRequester>
<android.view.WindowInfo: void <clinit>()>:<static>:<android.view.WindowInfo:android.os.Parcelable>
<android.media.IRingtonePlayer.Stub.Proxy: void play(android.os.IBinder,android.net.Uri,android.media.AudioAttributes)>:<public>:<android.media.IRingtonePlayer.Stub.Proxy:android.media.IRingtonePlayer>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.dreams.DreamService: void stopDozing()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.SurfaceView: void setWindowType(int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.preference.GenericInflater.FactoryMerger: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.GenericInflater.FactoryMerger:android.preference.GenericInflater.Factory>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(android.graphics.Rect)>:<public>:<android.view.WindowInsets>
<android.media.IAudioService.Stub.Proxy: boolean isStreamMute(int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLSurfaceView: void onPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.ViewRootImpl: void finishInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.GridLayout.1: void println(java.lang.String)>:<public>:<android.widget.GridLayout.1:android.util.Printer>
<android.database.MergeCursor: void deactivate()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.ClosedCaptionWidget.CCLineBox: void setBackgroundSpans(int)>:<private>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.media.session.ISessionController.Stub.Proxy: void unregisterCallbackListener(android.media.session.ISessionControllerCallback)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.ToGrayFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.widget.SpellChecker: android.widget.TextView access.200(android.widget.SpellChecker)>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.accounts.IAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.TvInputManager.Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager.Session.FinishedInputEventCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager.Session>
<android.view.HardwareRenderer: void enableForegroundTrimming()>:<public static>:<android.view.HardwareRenderer>
<android.widget.SearchView: void setImeVisibility(boolean)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.TextView: void checkForResize()>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MenuInflater.MenuState: android.view.SubMenu addSubMenuItem()>:<public>:<android.view.MenuInflater.MenuState>
<android.database.DatabaseUtils.InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>:<private>:<android.database.DatabaseUtils.InsertHelper>
<android.view.KeyCharacterMap: int getKeyboardType()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.ListView: int getHeaderViewsCount()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: void initialize(java.lang.String)>:<private>:<android.media.MediaScanner>
<android.media.AudioSystem: int listAudioPatches(java.util.ArrayList,int[])>:<public static native>:<android.media.AudioSystem>
<android.media.MediaScanner: boolean access.300(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.AudioFormat: int getEncoding()>:<public>:<android.media.AudioFormat>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaRouter.UserRouteInfo: void setVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe clone()>:<public volatile>:<android.animation.Keyframe.IntKeyframe:android.animation.Keyframe>
<android.media.tv.TvInputManager.Session: void sendInputEventAndReportResultOnMainLooper(android.media.tv.TvInputManager.Session.PendingEvent)>:<private>:<android.media.tv.TvInputManager.Session>
<android.widget.VideoView: void onSTCallbackSetPlayer(android.media.MediaPlayer)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.AudioRecord: void native_release()>:<private final native>:<android.media.AudioRecord>
<android.widget.AppSecurityPermissions.PermissionItemView: void addRevokeUIIfNecessary(android.app.AlertDialog.Builder)>:<private>:<android.widget.AppSecurityPermissions.PermissionItemView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.browse.MediaBrowser: java.lang.String access.600(int)>:<static>:<android.media.browse.MediaBrowser>
<android.view.RenderNodeAnimator: android.view.RenderNodeAnimator.DelayedAnimationHelper getHelper()>:<private static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.audiopolicy.AudioPolicy: void <init>(android.media.audiopolicy.AudioPolicyConfig)>:<private>:<android.media.audiopolicy.AudioPolicy>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void destroyLocked()>:<private>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.media.AudioRecord: void startRecording()>:<public>:<android.media.AudioRecord>
<android.animation.PathKeyframes.FloatKeyframesBase: void <init>()>:<private>:<android.animation.PathKeyframes.FloatKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.FloatKeyframes>
<android.media.AudioService.StreamVolumeCommand: java.lang.String toString()>:<public>:<android.media.AudioService.StreamVolumeCommand>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.Window: void makeActive()>:<public final>:<android.view.Window>
<android.gesture.GestureOverlayView.FadeOutRunnable: void <init>(android.gesture.GestureOverlayView)>:<private>:<android.gesture.GestureOverlayView.FadeOutRunnable:java.lang.Runnable>
<android.view.FallbackEventHandler: void setView(android.view.View)>:<public abstract>:<android.view.FallbackEventHandler>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.media.session.ISessionCallback: void onCustomAction(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.IWindowId.Stub: void <init>()>:<public>:<android.view.IWindowId.Stub:android.os.Binder,android.view.IWindowId>
<android.media.MediaCodec: void reset()>:<public final>:<android.media.MediaCodec>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.media.tv.ITvInputSessionWrapper: void dispatchSurfaceChanged(int,int,int)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.service.wallpaper.WallpaperService.Engine.3: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine.3:com.android.internal.view.BaseIWindow>
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.session.ISessionControllerCallback.Stub: void <init>()>:<public>:<android.media.session.ISessionControllerCallback.Stub:android.os.Binder,android.media.session.ISessionControllerCallback>
<android.widget.Editor.InsertionPointCursorController: void onDetached()>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()>:<public static>:<android.view.PointerIcon:android.os.Parcelable>
<android.opengl.GLES11: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.view.ViewGroup: void setDescendantFocusability(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.Choreographer: void <clinit>()>:<static>:<android.view.Choreographer>
<android.service.media.MediaBrowserService: android.util.ArrayMap access.100(android.service.media.MediaBrowserService)>:<static>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.widget.DatePickerCalendarDelegate: int getFirstDayOfWeek()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.tv.TvInputManager.TvInputCallbackRecord: void <init>(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager.TvInputCallbackRecord>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glScalef(float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.Image: android.graphics.Rect getCropRect()>:<public>:<android.media.Image:java.lang.AutoCloseable>
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaMetadataEditor: int[] getEditableKeys()>:<public>:<android.media.MediaMetadataEditor>
<android.service.dreams.DreamService: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.inputmethod.InputMethodManager.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>:<public abstract>:<android.view.inputmethod.InputMethodManager.FinishedInputEventCallback>
<android.widget.AbsSpinner.SavedState: void <init>(android.os.Parcelable)>:<>:<android.widget.AbsSpinner.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.ViewTreeObserver.CopyOnWriteArray: android.view.ViewTreeObserver.CopyOnWriteArray.Access start()>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.service.notification.NotificationListenerService: void onListenerHintsChanged(int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaFormat: java.util.Map getMap()>:<>:<android.media.MediaFormat>
<android.service.dreams.DreamService.DreamServiceWrapper.1: void <init>(android.service.dreams.DreamService.DreamServiceWrapper,android.os.IBinder,boolean)>:<>:<android.service.dreams.DreamService.DreamServiceWrapper.1:java.lang.Runnable>
<android.gesture.GestureOverlayView: boolean access.1202(android.gesture.GestureOverlayView,boolean)>:<static>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.ZoomButtonsController: boolean onContainerKey(android.view.KeyEvent)>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.AutoCompleteTextView: void setListSelection(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.tv.TvStreamConfig: int getStreamId()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.WebVttRenderingWidget: void prune()>:<private>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.Editor.PositionListener: int getPositionX()>:<public>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvContract.Programs: void <clinit>()>:<static>:<android.media.tv.TvContract.Programs:android.media.tv.TvContract.BaseTvColumns>
<android.view.textservice.TextInfo: void <init>(java.lang.String,int,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.media.session.ISessionController.Stub.Proxy: void previous()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.media.TimedText: void <init>(android.os.Parcel)>:<public>:<android.media.TimedText>
<android.view.AccessibilityInteractionController: void access.900(android.view.AccessibilityInteractionController,android.os.Message)>:<static>:<android.view.AccessibilityInteractionController>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.Editor.TextModifyOperation: void swapText()>:<private>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>:<public abstract>:<android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.IWindowSession.Stub.Proxy: void setInTouchMode(boolean)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.view.accessibility.AccessibilityNodeInfo: void setSealed(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.HwAbsListView: boolean eatTouchUpForMultiSelect(android.view.MotionEvent)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.RemoteController.MetadataEditor: void access.1700(android.media.RemoteController.MetadataEditor,int)>:<static>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.widget.TabHost: void setCurrentTab(int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.tv.ITvInputManagerCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.media.tv.ITvInputManagerCallback.Stub:android.os.Binder,android.media.tv.ITvInputManagerCallback>
<android.media.RemoteDisplayState.1: android.media.RemoteDisplayState[] newArray(int)>:<public>:<android.media.RemoteDisplayState.1:android.os.Parcelable.Creator>
<android.print.IPrintSpoolerCallbacks.Stub: void <init>()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub:android.os.Binder,android.print.IPrintSpoolerCallbacks>
<android.media.session.MediaSessionLegacyHelper: void <init>(android.content.Context)>:<private>:<android.media.session.MediaSessionLegacyHelper>
<android.media.CCParser.CCLineBuilder: void setPACAt(int,android.media.CCParser.PAC)>:<>:<android.media.CCParser.CCLineBuilder>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.GestureDetector: boolean access.502(android.view.GestureDetector,boolean)>:<static>:<android.view.GestureDetector>
<android.security.IKeyChainService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.media.AudioFormat: int getBytesPerSample(int)>:<public static>:<android.media.AudioFormat>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.print.PrintFileDocumentAdapter: void <init>(android.content.Context,java.io.File,android.print.PrintDocumentInfo)>:<public>:<android.print.PrintFileDocumentAdapter:android.print.PrintDocumentAdapter>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.GhostView: boolean isOnTop(android.view.View,android.view.View)>:<private static>:<android.view.GhostView:android.view.View>
<android.filterpacks.imageproc.RotateFilter: void updateParameters()>:<private>:<android.filterpacks.imageproc.RotateFilter:android.filterfw.core.Filter>
<android.widget.AbsListView.PositionScroller.2: void <init>(android.widget.AbsListView.PositionScroller,int,int)>:<>:<android.widget.AbsListView.PositionScroller.2:java.lang.Runnable>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.media.MediaCodecInfo.EncoderCapabilities: void <clinit>()>:<static>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.media.AsyncPlayer: java.util.LinkedList access.100(android.media.AsyncPlayer)>:<static>:<android.media.AsyncPlayer>
<android.media.session.MediaController.TransportControls: void pause()>:<public>:<android.media.session.MediaController.TransportControls>
<android.view.KeyEvent: boolean isScrollLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioService: void access.10200(android.media.AudioService,int,int,int,java.lang.String,int)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.WindowManagerPolicy: boolean hasNavigationBar()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowId: void <clinit>()>:<static>:<android.view.WindowId:android.os.Parcelable>
<android.printservice.IPrintServiceClient.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.service.media.MediaBrowserService: void access.600(android.service.media.MediaBrowserService,java.lang.String,android.service.media.MediaBrowserService.ConnectionRecord)>:<static>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.EditorInfo: int describeContents()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.RadialTimePickerView.IntHolder: void setValue(int)>:<public>:<android.widget.RadialTimePickerView.IntHolder>
<android.media.tv.TvInputService.Session: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.TextView: int getTotalPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.dreams.DreamService: boolean getWindowFlagValue(int,boolean)>:<private>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.database.CursorJoiner: void remove()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.widget.StackView: void showTapFeedback(android.view.View)>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.InputEventConsistencyVerifier.KeyState: void <init>()>:<private>:<android.view.InputEventConsistencyVerifier.KeyState>
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.gesture.Gesture: long access.002(android.gesture.Gesture,long)>:<static>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.AudioTrack: void native_stop()>:<private final native>:<android.media.AudioTrack>
<android.widget.ListView: int getFooterViewsCount()>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void <clinit>()>:<static>:<android.opengl.GLES31Ext>
<android.widget.ViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: android.media.SubtitleController access.100(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.MediaPlayer: void seekTo(int)>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.PreferenceActivity: android.widget.Button getNextButton()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.tv.TvInputService.Session.9: void run()>:<public>:<android.media.tv.TvInputService.Session.9:java.lang.Runnable>
<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>:<public final>:<android.media.MediaCodec>
<android.opengl.GLUtils: int native_getType(android.graphics.Bitmap)>:<private static native>:<android.opengl.GLUtils>
<android.preference.DialogPreference: void onClick()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.MediaScanner: void clearSkipCustomDirectory()>:<public native>:<android.media.MediaScanner>
<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.widget.Editor: void prepareCursorControllersOuter()>:<protected>:<android.widget.Editor>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceHierarchyChange(android.preference.Preference)>:<public abstract>:<android.preference.Preference.OnPreferenceChangeInternalListener>
<android.media.tv.TvView.MySessionCallback: void onSessionEvent(android.media.tv.TvInputManager.Session,java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.audiofx.Visualizer: void native_finalize()>:<private final native>:<android.media.audiofx.Visualizer>
<android.widget.DatePickerCalendarDelegate: int getDayOfMonth()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.view.ViewGroup.ChildListForAccessibility: int getChildIndex(android.view.View)>:<public>:<android.view.ViewGroup.ChildListForAccessibility>
<android.widget.AbsListView.SavedState: void <clinit>()>:<static>:<android.widget.AbsListView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.filterpacks.imageproc.ToPackedGrayFilter: void checkOutputDimensions(int,int)>:<private>:<android.filterpacks.imageproc.ToPackedGrayFilter:android.filterfw.core.Filter>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: void <init>(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle,android.service.textservice.SpellCheckerService.Session)>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.widget.SearchView.3: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.3:java.lang.Runnable>
<android.view.View.PerformClick: void <init>(android.view.View)>:<private>:<android.view.View.PerformClick:java.lang.Runnable>
<android.widget.AppSecurityPermissions.MyPermissionInfo: void <init>(android.content.pm.PermissionInfo)>:<>:<android.widget.AppSecurityPermissions.MyPermissionInfo:android.content.pm.PermissionInfo,android.content.pm.PackageItemInfo>
<android.service.fingerprint.FingerprintManager: void enrollCancel()>:<public>:<android.service.fingerprint.FingerprintManager>
<android.view.ViewTreeObserver.OnDrawListener: void onDraw()>:<public abstract>:<android.view.ViewTreeObserver.OnDrawListener>
<android.opengl.GLLogWrapper: java.lang.String getPointerTypeName(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.hsm.HwSystemManager.HsmInterface: boolean shouldInterceptAudience(java.lang.String[])>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.media.IAudioService.Stub.Proxy: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: int access.200(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.service.wallpaper.WallpaperService.Engine.2: boolean onAllowLockCanvas()>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.media.AudioService.SetModeDeathHandler: void binderDied()>:<public>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>:<public>:<android.media.AudioManager>
<android.widget.Toast.TN: void show()>:<public>:<android.widget.Toast.TN:android.app.ITransientNotification.Stub>
<android.view.Nsd: void blockAdView(android.view.View)>:<private static>:<android.view.Nsd>
<android.service.voice.VoiceInteractionSession: void onTaskFinished(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.DayPickerView.ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>:<public>:<android.widget.DayPickerView.ScrollStateRunnable:java.lang.Runnable>
<android.view.inputmethod.CursorAnchorInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.TextView: int getSelectionEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.media.MediaBrowserService: void access.400(android.service.media.MediaBrowserService,java.lang.String,android.service.media.MediaBrowserService.ConnectionRecord)>:<static>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaMetadata: void <init>(android.os.Parcel)>:<private>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.Window: int getVolumeControlStream()>:<public abstract>:<android.view.Window>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.View: void captureTransitioningViews(java.util.List)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo: android.util.Range access.200()>:<static>:<android.media.MediaCodecInfo>
<android.view.View: void setSystemUiVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>:<public abstract>:<android.preference.PreferenceManager.OnActivityStopListener>
<android.widget.AbsListView.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.Editor.SuggestionsPopupWindow: void <init>(android.widget.Editor)>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.view.ViewGroup: void suppressLayout(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaScanner: void scanDirectories(java.lang.String[],java.lang.String)>:<public>:<android.media.MediaScanner>
<android.media.IMediaScannerListener.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaScannerListener.Stub.Proxy:android.media.IMediaScannerListener>
<android.media.tv.ITvInputManager.Stub.Proxy: void registerCallback(android.media.tv.ITvInputManagerCallback,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.accounts.IAccountManagerResponse.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>:<public abstract>:<android.view.ViewTreeObserver.OnScrollChangedListener>
<android.media.CCParser.CCMemory: android.media.CCParser.CCLineBuilder getLineBuffer(int)>:<private>:<android.media.CCParser.CCMemory>
<android.security.AndroidKeyStore: java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.View: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvView: void <init>(android.content.Context)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.preference.Preference: void setShouldDisableView(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.database.MergeCursor: boolean requery()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.TextView: void setMinLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean requestFocusNoSearch(int,android.graphics.Rect)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.Menu: android.view.MenuItem getItem(int)>:<public abstract>:<android.view.Menu>
<android.media.AudioService: java.util.ArrayList access.2200(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.security.IKeyChainService: boolean deleteCaCertificate(java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.widget.Filter: android.os.Handler access.400(android.widget.Filter)>:<static>:<android.widget.Filter>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>:<public static>:<android.media.AudioTrack>
<android.media.WebVttParser.3: void parse(java.lang.String)>:<public>:<android.media.WebVttParser.3:android.media.WebVttParser.Phase>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.GraphicBuffer: void destroy()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.opengl.GLLogWrapper: void formattedAppend(java.lang.StringBuilder,int,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.tv.ITvInputSessionCallback.Stub: android.media.tv.ITvInputSessionCallback asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputSessionCallback.Stub:android.os.Binder,android.media.tv.ITvInputSessionCallback>
<android.security.IKeyChainService: boolean reset()>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.widget.RatingBar: boolean isIndicator()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.session.MediaSession: void setExtras(android.os.Bundle)>:<public>:<android.media.session.MediaSession>
<android.view.GLES20Canvas: void drawColor(int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.IInputFilterHost.Stub.Proxy: void sendInputEvent(android.view.InputEvent,int)>:<public>:<android.view.IInputFilterHost.Stub.Proxy:android.view.IInputFilterHost>
<android.widget.Editor: boolean isPositionOnText(float,float)>:<private>:<android.widget.Editor>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.widget.SearchView: boolean isQueryRefinementEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.GhostView: void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int)>:<private static>:<android.view.GhostView:android.view.View>
<android.view.IWindowManager.Stub.Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.widget.TextView: void setPrimaryClip(android.content.ClipData)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.trust.TrustAgentService: java.lang.Runnable access.602(android.service.trust.TrustAgentService,java.lang.Runnable)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Editor.PositionListener: void updatePosition()>:<private>:<android.widget.Editor.PositionListener:android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.Image.Plane: void <init>()>:<protected>:<android.media.Image.Plane>
<android.media.MediaMetadataRetriever: void release()>:<public native>:<android.media.MediaMetadataRetriever>
<android.database.MatrixCursor: void ensureCapacity(int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.ViewGroup: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.tv.ITvInputManager.Stub: android.media.tv.ITvInputManager asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputManager.Stub:android.os.Binder,android.media.tv.ITvInputManager>
<android.media.session.MediaSessionLegacyHelper.MediaButtonListener: void onSkipToPrevious()>:<public>:<android.media.session.MediaSessionLegacyHelper.MediaButtonListener:android.media.session.MediaSession.Callback>
<android.widget.TextView: void append(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup: void dispatchDetachedFromWindow()>:<>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.CursorWindow.1: android.database.CursorWindow[] newArray(int)>:<public>:<android.database.CursorWindow.1:android.os.Parcelable.Creator>
<android.security.IKeystoreService: int password(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.media.ImageReader.SurfaceImage: android.media.ImageReader.SurfaceImage.SurfacePlane nativeCreatePlane(int,int)>:<private synchronized native>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.print.PrintJobId: void <clinit>()>:<static>:<android.print.PrintJobId:android.os.Parcelable>
<android.animation.IntKeyframeSet: int getIntValue(float)>:<public>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.media.tv.TvView.MySessionCallback: void onLayoutSurface(android.media.tv.TvInputManager.Session,int,int,int,int)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>:<public static>:<android.view.ViewDebug>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.media.AudioService: java.lang.Object access.6800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.database.BulkCursorDescriptor.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.accounts.AccountManager.1: java.lang.String bundleToResult(android.os.Bundle)>:<public>:<android.accounts.AccountManager.1:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.view.View.ListenerInfo: android.view.View.OnDragListener access.700(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.database.AbstractCursor: boolean move(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.SoundPool.SoundPoolStub: void autoResume()>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.view.FallbackEventHandler: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.FallbackEventHandler>
<android.media.MediaCodec.BufferMap: void clear()>:<public>:<android.media.MediaCodec.BufferMap>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.AudioPortConfig: java.lang.String toString()>:<public>:<android.media.AudioPortConfig>
<android.media.RemoteDisplayState.RemoteDisplayInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.RemoteDisplayState.RemoteDisplayInfo.1:android.os.Parcelable.Creator>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.Window: android.transition.TransitionManager getTransitionManager()>:<public>:<android.view.Window>
<android.database.CursorWrapper: boolean isFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.WindowInsets: void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>:<public>:<android.view.WindowInsets>
<android.view.IWindowFocusObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindowFocusObserver.Stub.Proxy:android.view.IWindowFocusObserver>
<android.opengl.GLES30: void glReadBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins access.302(android.print.PrinterCapabilitiesInfo,android.print.PrintAttributes.Margins)>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.database.CursorWindow: void onAllReferencesReleased()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod.SessionCallback>
<android.service.voice.VoiceInteractionSession: void finish()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.database.DataSetObserver: void onChanged()>:<public>:<android.database.DataSetObserver>
<android.accounts.IAccountManager.Stub.Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.projection.IMediaProjectionCallback: void onStop()>:<public abstract>:<android.media.projection.IMediaProjectionCallback:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glTexParameterf(int,int,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.KeyCharacterMap: char nativeGetCharacter(long,int,int)>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.animation.PropertyValuesHolder.PointFToFloatArray: java.lang.Object convert(java.lang.Object)>:<public volatile>:<android.animation.PropertyValuesHolder.PointFToFloatArray:android.animation.TypeConverter>
<android.view.Window.OnWindowDismissedCallback: void onWindowDismissed()>:<public abstract>:<android.view.Window.OnWindowDismissedCallback>
<android.view.Display: long getPresentationDeadlineNanos()>:<public>:<android.view.Display>
<android.view.inputmethod.InputMethodManager.2: void run()>:<public>:<android.view.inputmethod.InputMethodManager.2:java.lang.Runnable>
<android.media.ImageReader.SurfaceImage: void finalize()>:<protected final>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.widget.Editor: void invalidateTextDisplayList()>:<>:<android.widget.Editor>
<android.view.View.ListenerInfo: android.view.View.OnKeyListener access.302(android.view.View.ListenerInfo,android.view.View.OnKeyListener)>:<static>:<android.view.View.ListenerInfo>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView: void <init>(android.widget.CalendarView.LegacyCalendarViewDelegate,android.content.Context)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeekView:android.view.View>
<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.GhostView: int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int)>:<private static>:<android.view.GhostView:android.view.View>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>:<public abstract>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback:android.os.IInterface>
<android.view.GLES20Canvas: void nDrawText(long,java.lang.String,int,int,float,float,int,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.VideoView: boolean getCacheState()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.widget.CalendarView: void <init>(android.content.Context)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.browse.MediaBrowser: android.service.media.IMediaBrowserService access.1200(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback)>:<public>:<android.media.MediaCodec>
<android.printservice.PrinterDiscoverySession: void onStartPrinterDiscovery(java.util.List)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>:<public static>:<android.media.tv.TvContentRating>
<android.view.WindowManagerInternal: android.view.MagnificationSpec getCompatibleMagnificationSpecForWindow(android.os.IBinder)>:<public abstract>:<android.view.WindowManagerInternal>
<android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName(android.content.Context)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.ViewGroup: void onViewRemoved(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ActionMenuPresenter: void <init>(android.content.Context,int,int)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.Gallery: int access.1100(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.service.media.MediaBrowserService.ConnectionRecord: void <init>(android.service.media.MediaBrowserService)>:<private>:<android.service.media.MediaBrowserService.ConnectionRecord>
<android.widget.RemoteViewsAdapter: void <clinit>()>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>:<protected static>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.service.dreams.DreamService: void setScreenBright(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.AudioService.AudioServiceInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>:<public>:<android.media.AudioService.AudioServiceInternal:android.media.AudioManagerInternal>
<android.opengl.GLLogWrapper: void glTexEnvi(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.InputMethodManager: boolean access.100(android.view.inputmethod.InputMethodManager,boolean,boolean)>:<static>:<android.view.inputmethod.InputMethodManager>
<android.media.IMediaHTTPConnection.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IMediaHTTPConnection.Stub:android.os.Binder,android.media.IMediaHTTPConnection>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.preference.PreferenceScreen: void initHwTheme(android.content.Context,android.util.AttributeSet)>:<private>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.gesture.GestureStroke: void serialize(java.io.DataOutputStream)>:<>:<android.gesture.GestureStroke>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.AccessibilityIterators.TextSegmentIterator: int[] following(int)>:<public abstract>:<android.view.AccessibilityIterators.TextSegmentIterator>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.MultiCheckPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.view.MagnificationSpec: void access.000(android.view.MagnificationSpec,android.os.Parcel)>:<static>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Virtualizer: void <init>(int,int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.media.projection.IMediaProjectionWatcherCallback.Stub: void <init>()>:<public>:<android.media.projection.IMediaProjectionWatcherCallback.Stub:android.os.Binder,android.media.projection.IMediaProjectionWatcherCallback>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaMetadataRetriever>
<android.view.FallbackEventHandler: void preDispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.FallbackEventHandler>
<android.media.AudioService: void onBroadcastScoConnectionState(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.browse.MediaBrowser: boolean access.400(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String)>:<static>:<android.media.browse.MediaBrowser>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onAccuracyChanged(android.hardware.Sensor,int)>:<public>:<android.view.OrientationEventListener.SensorEventListenerImpl:android.hardware.SensorEventListener>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceFrameLayout.LayoutParams:android.widget.FrameLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View: android.view.View findFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.TextView: int getTotalPaddingStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glEnableClientState(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCodec: java.lang.Object access.100(android.media.MediaCodec)>:<static>:<android.media.MediaCodec>
<android.media.tv.TvView.MySessionCallback: void onTrackSelected(android.media.tv.TvInputManager.Session,int,java.lang.String)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.media.AudioManager: boolean isStreamAffectedByRingerMode(int)>:<public>:<android.media.AudioManager>
<android.view.GestureDetector: boolean isLongpressEnabled()>:<public>:<android.view.GestureDetector>
<android.print.PrintJobId.1: void <init>()>:<>:<android.print.PrintJobId.1:android.os.Parcelable.Creator>
<android.netdetect.HwCustNetDetectServiceImpl.3: void <clinit>()>:<static>:<android.netdetect.HwCustNetDetectServiceImpl.3>
<android.view.ActionMode.Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.media.Ringtone: void setStreamType(int)>:<public>:<android.media.Ringtone>
<android.preference.Preference: void setIcon(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticatorResponse.Stub.Proxy:android.accounts.IAccountAuthenticatorResponse>
<android.view.InputEventSender: void dispatchInputEventFinished(int,boolean)>:<private>:<android.view.InputEventSender>
<android.widget.AbsListView.RecycleBin: void setViewTypeCount(int)>:<public>:<android.widget.AbsListView.RecycleBin>
<android.view.View: boolean isEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void reset()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.database.sqlite.SQLiteDatabase: boolean isMainThread()>:<private static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.Gallery: int access.1200(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.GLES20Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: boolean showContextMenu()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.TimedText: android.graphics.Rect getBounds()>:<public>:<android.media.TimedText>
<android.preference.PreferenceManager: long getNextId()>:<>:<android.preference.PreferenceManager>
<android.media.tv.TvInputService: android.os.RemoteCallbackList access.100(android.media.tv.TvInputService)>:<static>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>:<public>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.animation.PathKeyframes.4: void <init>(android.animation.PathKeyframes)>:<>:<android.animation.PathKeyframes.4:android.animation.PathKeyframes.IntKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.media.SubtitleData: long getDurationUs()>:<public>:<android.media.SubtitleData>
<android.widget.TextView: boolean isInBatchEditMode()>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.Preference: java.lang.CharSequence getTitle()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewGroup: void scheduleLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.animation.PropertyValuesHolder: long nGetMultipleIntMethod(java.lang.Class,java.lang.String,int)>:<private static native>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.animation.AnimatorSet: void playSequentially(java.util.List)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.RenderNode: boolean nSetOutlineConvexPath(long,long,float)>:<private static native>:<android.view.RenderNode>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>:<public>:<android.media.AudioManager>
<android.view.GLES20Canvas: void drawPoint(float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.SearchView: void updateVoiceButton(boolean)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay.OverlayViewGroup:android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnectionPool: void reconfigureAllConnectionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaExtractor: int getTrackCount()>:<public final native>:<android.media.MediaExtractor>
<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent.PointerCoords[],int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>:<public abstract>:<android.accounts.OnAccountsUpdateListener>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View: float getFinalAlpha()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadialTimePickerView: void setAnimationRadiusMultiplierHours(float)>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.SurfaceControl: boolean nativeGetAnimationFrameStats(android.view.WindowAnimationFrameStats)>:<private static native>:<android.view.SurfaceControl>
<android.appwidget.AppWidgetHostView.1: void <init>()>:<>:<android.appwidget.AppWidgetHostView.1:android.view.LayoutInflater.Filter>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: void <init>(android.widget.ActivityChooserModel)>:<private>:<android.widget.ActivityChooserModel.PersistHistoryAsyncTask:android.os.AsyncTask>
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.VolumePreference.SavedState.1: void <init>()>:<>:<android.preference.VolumePreference.SavedState.1:android.os.Parcelable.Creator>
<android.widget.DatePickerCalendarDelegate: int getMinYear()>:<public>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.database.MatrixCursor: java.lang.Object[] access.100(android.database.MatrixCursor)>:<static>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.MediaScanner: java.util.HashMap access.200(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.view.WindowManagerPolicy: void setUserRotationMode(int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ListView: boolean recycleOnMeasure()>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.widget.RtlSpacingHelper: int getLeft()>:<public>:<android.widget.RtlSpacingHelper>
<android.widget.DatePickerController: void setFirstDayOfWeek(int)>:<public abstract>:<android.widget.DatePickerController>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.IRemoteVolumeObserver.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteVolumeObserver.Stub.Proxy:android.media.IRemoteVolumeObserver>
<android.widget.RelativeLayout.DependencyGraph.Node: android.widget.RelativeLayout.DependencyGraph.Node acquire(android.view.View)>:<static>:<android.widget.RelativeLayout.DependencyGraph.Node>
<android.widget.ExpandableListView: long getSelectedPosition()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.media.MediaBrowserService.2: void <init>(android.service.media.MediaBrowserService,java.lang.Object,java.lang.String,android.service.media.MediaBrowserService.ConnectionRecord)>:<>:<android.service.media.MediaBrowserService.2:android.service.media.MediaBrowserService.Result>
<android.media.AudioManager: boolean isHdmiSystemAudioSupported()>:<public>:<android.media.AudioManager>
<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>:<public>:<android.media.SubtitleController>
<android.widget.ActivityChooserModel.OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>:<public abstract>:<android.widget.ActivityChooserModel.OnChooseActivityListener>
<android.media.Ringtone: boolean playFallbackRingtone()>:<private>:<android.media.Ringtone>
<android.printservice.IPrintServiceClient.Stub.Proxy: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public>:<android.printservice.IPrintServiceClient.Stub.Proxy:android.printservice.IPrintServiceClient>
<android.media.MediaExtractor: void native_setup()>:<private final native>:<android.media.MediaExtractor>
<android.filterpacks.imageproc.RedEyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.RedEyeFilter:android.filterfw.core.Filter>
<android.widget.Editor: void resumeBlink()>:<private>:<android.widget.Editor>
<android.widget.GridLayout.Axis: int[] getLeadingMargins()>:<public>:<android.widget.GridLayout.Axis>
<android.view.ViewRootImpl: void clearChildFocus(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.SoundPool.SoundPoolImpl: void <clinit>()>:<static>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.database.sqlite.SQLiteDatabase.1: java.lang.Object initialValue()>:<protected volatile>:<android.database.sqlite.SQLiteDatabase.1:java.lang.ThreadLocal>
<android.security.IKeyChainService: boolean hasGrant(int,java.lang.String)>:<public abstract>:<android.security.IKeyChainService:android.os.IInterface>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo.VideoCapabilities: int getSmallerDimensionUpperLimit()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.media.session.ISession.Stub.Proxy: void setRatingType(int)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <clinit>()>:<static>:<android.database.sqlite.SQLiteDatabaseConfiguration>
<android.media.MediaPlayer: java.util.Vector access.200(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.IWindowManager: boolean isSafeModeEnabled()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.ListView: android.view.View fillSpecific(int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IAudioService.Stub.Proxy: void setStreamSolo(int,boolean,android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.database.sqlite.SQLiteProgram: void <clinit>()>:<static>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.preference.Preference: void dispatchRestoreInstanceState(android.os.Bundle)>:<>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaRecorder: void setAudioSource(int)>:<public native>:<android.media.MediaRecorder>
<android.security.IKeystoreService.Stub.Proxy: int del(java.lang.String,int)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.accessibility.CaptioningManager: android.os.Handler access.400(android.view.accessibility.CaptioningManager)>:<static>:<android.view.accessibility.CaptioningManager>
<android.media.AudioService: void setStreamVolume(int,int,int,java.lang.String,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.accounts.AccountManager.AmsTask.Response: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountManager.AmsTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.view.VelocityTracker: float getYVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.animation.AnimatorSet.DependencyListener: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet.Node,int)>:<public>:<android.animation.AnimatorSet.DependencyListener:android.animation.Animator.AnimatorListener>
<android.widget.SearchView: void adjustDropDownSizeAndPosition()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLSurface: void <init>(long)>:<private>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.media.session.MediaSession.QueueItem: int describeContents()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.filterpacks.ui.SurfaceRenderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceRenderFilter:android.filterfw.core.Filter,android.view.SurfaceHolder.Callback>
<android.view.animation.AnticipateOvershootInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.test.InstrumentationTestSuite: void <init>(java.lang.String,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.View: void onDisplayHint(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.SeekBarVolumizer.Receiver: void <init>(android.preference.SeekBarVolumizer)>:<private>:<android.preference.SeekBarVolumizer.Receiver:android.content.BroadcastReceiver>
<android.media.AudioTrack: void access.100(java.lang.String)>:<static>:<android.media.AudioTrack>
<android.view.PointerIcon: boolean isNullIcon()>:<public>:<android.view.PointerIcon:android.os.Parcelable>
<android.database.MergeCursor: boolean onMove(int,int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.browse.MediaBrowser.MediaItem.1: android.media.browse.MediaBrowser.MediaItem createFromParcel(android.os.Parcel)>:<public>:<android.media.browse.MediaBrowser.MediaItem.1:android.os.Parcelable.Creator>
<android.media.Metadata: boolean getBoolean(int)>:<public>:<android.media.Metadata>
<android.widget.SearchView.6: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.6:android.view.View.OnClickListener>
<android.media.WebVttParser: android.media.WebVttCueListener access.800(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.print.PrinterDiscoverySession: java.util.List getPrinters()>:<public final>:<android.print.PrinterDiscoverySession>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isAudio()>:<private>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.tv.TvContract: boolean isTvUri(android.net.Uri)>:<private static final>:<android.media.tv.TvContract>
<android.media.MediaExtractor: void release()>:<public final native>:<android.media.MediaExtractor>
<android.animation.Animator.AnimatorPauseListener: void onAnimationPause(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorPauseListener>
<android.view.GraphicBuffer: int describeContents()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.RadialTimePickerView: int snapPrefer30s(int)>:<private static>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.Editor: boolean selectCurrentWordOuter()>:<protected>:<android.widget.Editor>
<android.view.ViewRootImpl: boolean isSupportAPSEventAnalysis(int)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ListView: int lookForSelectablePositionAfter(int,int,boolean)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView.4: void removeCallback(android.view.SurfaceHolder.Callback)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.media.MediaCodec: void native_start()>:<private final native>:<android.media.MediaCodec>
<android.view.View: int getImportantForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RingtoneManager: android.database.Cursor getCursor()>:<public>:<android.media.RingtoneManager>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onAllPrintJobsHandled()>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.opengl.GLErrorWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView.ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView.1)>:<>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.view.ViewRootImpl: boolean drawSoftware(android.view.Surface,android.view.View.AttachInfo,int,int,boolean,android.graphics.Rect)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.RenderNodeAnimator: void nSetDuration(long,long)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.tv.TvContract.Programs.Genres: void <clinit>()>:<static>:<android.media.tv.TvContract.Programs.Genres>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.CCParser.StyleCode: java.lang.String toString()>:<public>:<android.media.CCParser.StyleCode>
<android.media.AudioService: boolean access.6500(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int)>:<public abstract>:<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener>
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.widget.TextView: void handleTextChanged(java.lang.CharSequence,int,int,int)>:<>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.RemoteController: void access.1600(android.media.RemoteController,boolean)>:<static>:<android.media.RemoteController>
<android.widget.Gallery: void onFinishedMovement()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.session.ISessionControllerCallback.Stub.Proxy: void onSessionDestroyed()>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.media.browse.MediaBrowser: android.content.ComponentName access.1300(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.preference.PreferenceManager: void unregisterOnActivityDestroyListener(android.preference.PreferenceManager.OnActivityDestroyListener)>:<>:<android.preference.PreferenceManager>
<android.preference.Preference: void onPrepareForRemoval()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.KeyCharacterMap.FallbackAction: void <init>()>:<private>:<android.view.KeyCharacterMap.FallbackAction>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.GridLayout: void procrusteanFill(int[],int,int,int)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.service.voice.VoiceInteractionSession: void initViews()>:<>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.view.IWindowManager.Stub.Proxy: void startFreezingScreen(int,int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.TimeAnimator: void start()>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.view.RenderNode: float nGetPivotY(long)>:<private static native>:<android.view.RenderNode>
<android.database.Cursor: boolean isBeforeFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.PopupMenu.1: void <init>(android.widget.PopupMenu,android.view.View)>:<>:<android.widget.PopupMenu.1:android.widget.ListPopupWindow.ForwardingListener>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Class getType()>:<public>:<android.animation.PathKeyframes.IntKeyframesBase:android.animation.PathKeyframes.SimpleKeyframes,android.animation.Keyframes.IntKeyframes>
<android.media.tv.TvInputService.1: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String)>:<public>:<android.media.tv.TvInputService.1:android.media.tv.ITvInputService.Stub,android.os.Binder>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.view.InputDevice.1: android.view.InputDevice createFromParcel(android.os.Parcel)>:<public>:<android.view.InputDevice.1:android.os.Parcelable.Creator>
<android.view.KeyEvent: void <init>(android.os.Parcel)>:<private>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.security.KeyChain: android.security.KeyChain.KeyChainConnection bind(android.content.Context)>:<public static>:<android.security.KeyChain>
<android.view.ViewPropertyAnimatorRT: void <init>(android.view.View)>:<>:<android.view.ViewPropertyAnimatorRT>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.security.SystemKeyStore: byte[] retrieveKey(java.lang.String)>:<public>:<android.security.SystemKeyStore>
<android.media.IMediaScannerListener.Stub: void <init>()>:<public>:<android.media.IMediaScannerListener.Stub:android.os.Binder,android.media.IMediaScannerListener>
<android.media.AudioService: boolean hasScheduledA2dpDockTimeout()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaRouter.RouteInfo: int getPlaybackType()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.DisplayAdjustments: void <clinit>()>:<static>:<android.view.DisplayAdjustments>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType[] values()>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.accounts.IAccountManager: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.accessibility.AccessibilityEvent: void <init>()>:<private>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.ScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.media.IAudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.GLES20Canvas: void drawPoints(float[],android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.IVolumeController.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IVolumeController.Stub.Proxy:android.media.IVolumeController>
<android.media.AudioService: void broadcastScoConnectionState(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.AudioFormat: int convertNativeChannelMaskToOutMask(int)>:<public static>:<android.media.AudioFormat>
<android.media.AudioRoutesInfo.1: android.media.AudioRoutesInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.AudioRoutesInfo.1:android.os.Parcelable.Creator>
<android.media.browse.MediaBrowser.4: void <init>(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserServiceCallbacks,android.content.pm.ParceledListSlice,java.lang.String)>:<>:<android.media.browse.MediaBrowser.4:java.lang.Runnable>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator.Transport:android.accounts.IAccountAuthenticator.Stub,android.os.Binder>
<android.print.ILayoutResultCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.print.ILayoutResultCallback.Stub:android.os.Binder,android.print.ILayoutResultCallback>
<android.media.audiofx.Visualizer: int getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)>:<public>:<android.media.audiofx.Visualizer>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.Utils.1: void <init>()>:<>:<android.media.Utils.1:java.util.Comparator>
<android.opengl.GLLogWrapper: void glPointSize(float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider.OnMediaTimeListener)>:<public abstract>:<android.media.MediaTimeProvider>
<android.widget.Editor: int getLastTapPosition()>:<private>:<android.widget.Editor>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.opengl.GLES30: boolean glIsSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: float getShadowDy()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.printservice.PrintServiceInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.printservice.PrintServiceInfo.1:android.os.Parcelable.Creator>
<android.media.RemoteController.TopTransportSessionListener: void <init>(android.media.RemoteController,android.media.RemoteController.1)>:<>:<android.media.RemoteController.TopTransportSessionListener:android.media.session.MediaSessionManager.OnActiveSessionsChangedListener>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.filterpacks.imageproc.CropRectFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.widget.Editor: boolean hasPasswordTransformationMethod()>:<private>:<android.widget.Editor>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void onPrintersRemoved(android.content.pm.ParceledListSlice)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.media.tv.ITvInputSessionWrapper: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer.Settings)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.ClosedCaptionWidget.CCLineBox: void drawEdgeOutline(android.graphics.Canvas)>:<private>:<android.media.ClosedCaptionWidget.CCLineBox:android.widget.TextView,android.view.View>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>:<>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.View: void setHasTransientState(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvInputService.HardwareSession: boolean onSetSurface(android.view.Surface)>:<public final>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.PreferenceFragment.1: void <init>(android.preference.PreferenceFragment)>:<>:<android.preference.PreferenceFragment.1:android.os.Handler>
<android.widget.ListView: boolean showingTopFadingEdge()>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.AccessibilityInteractionController: void <init>(android.view.ViewRootImpl)>:<public>:<android.view.AccessibilityInteractionController>
<android.view.IRotationWatcher.Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>:<public static>:<android.view.IRotationWatcher.Stub:android.os.Binder,android.view.IRotationWatcher>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.animation.StateListAnimator: void clearTarget()>:<private>:<android.animation.StateListAnimator>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.printservice.IPrintService.Stub.Proxy: void startPrinterDiscovery(java.util.List)>:<public>:<android.printservice.IPrintService.Stub.Proxy:android.printservice.IPrintService>
<android.view.ActionProvider: boolean overridesItemVisibility()>:<public>:<android.view.ActionProvider>
<android.media.SoundPool: void <init>(int,int,int)>:<public>:<android.media.SoundPool>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(long)>:<public>:<android.animation.AnimatorSet.Builder>
<android.media.AudioRecord: void access.200(java.lang.String)>:<static>:<android.media.AudioRecord>
<android.view.Window: android.content.Context getContext()>:<public final>:<android.view.Window>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: int describeContents()>:<public>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>:<protected>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.RadioGroup: void check(int)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.ITvInputManager.Stub.Proxy: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.media.tv.ITvInputSession.Stub.Proxy: void release()>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.widget.StackView: void updateClickFeedback()>:<>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void process(android.view.MotionEvent)>:<public>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.view.IAssetAtlas: android.view.GraphicBuffer getBuffer()>:<public abstract>:<android.view.IAssetAtlas:android.os.IInterface>
<android.print.ILayoutResultCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.ILayoutResultCallback.Stub.Proxy:android.print.ILayoutResultCallback>
<android.media.tv.ITvInputSessionWrapper: void removeOverlayView()>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.View: void clearFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewPropertyAnimator.PropertyBundle: void <init>(int,java.util.ArrayList)>:<>:<android.view.ViewPropertyAnimator.PropertyBundle>
<android.media.IRemoteDisplayCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteDisplayCallback.Stub:android.os.Binder,android.media.IRemoteDisplayCallback>
<android.widget.TextView.CharWrapper: char[] access.002(android.widget.TextView.CharWrapper,char[])>:<static>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.Ringtone: void destroyLocalPlayer()>:<private>:<android.media.Ringtone>
<android.filterpacks.videosrc.MediaSource: boolean access.802(android.filterpacks.videosrc.MediaSource,boolean)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.ITvInputManager: void requestUnblockContent(android.os.IBinder,java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.SetRemoteViewsAdapterList:android.widget.RemoteViews.Action>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.Editor.EasyEditPopupWindow: void setEasyEditSpan(android.text.style.EasyEditSpan)>:<public>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean queuePositionsToBePreloadedFromRequestedPosition(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.media.tv.TvInputHardwareInfo: int access.302(android.media.tv.TvInputHardwareInfo,int)>:<static>:<android.media.tv.TvInputHardwareInfo:android.os.Parcelable>
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>:<public>:<android.media.session.MediaSession>
<android.view.IWindowManager: void setNewConfiguration(android.content.res.Configuration)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.ListView: void measureAndAdjustDown(android.view.View,int,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.HardwareRenderer: void setupDiskCache(java.io.File)>:<public static>:<android.view.HardwareRenderer>
<android.media.MediaScannerConnection.1: void scanCompleted(java.lang.String,android.net.Uri)>:<public>:<android.media.MediaScannerConnection.1:android.media.IMediaScannerListener.Stub,android.os.Binder>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.widget.FastScroller.2: void onAnimationEnd(android.animation.Animator)>:<public>:<android.widget.FastScroller.2:android.animation.AnimatorListenerAdapter>
<android.filterpacks.imageproc.ImageCombineFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.widget.FastScroller: void onSectionsChanged()>:<public>:<android.widget.FastScroller>
<android.database.CursorWindow: boolean isString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.ScrollView: int getMaxScrollAmount()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStarted(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.AudioAttributes: int getAllFlags()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.printservice.IPrintService: void onPrintJobQueued(android.print.PrintJobInfo)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.security.KeyStore.State: void <init>(java.lang.String,int)>:<private>:<android.security.KeyStore.State:java.lang.Enum>
<android.media.session.MediaSession.Callback: void onPlay()>:<public>:<android.media.session.MediaSession.Callback>
<android.media.tv.TvInputService.ServiceHandler: void broadcastAddHdmiTvInput(int,android.media.tv.TvInputInfo)>:<private>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.TextureView.SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.Window: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.Window>
<android.widget.Scroller: float computeDeceleration(float)>:<private>:<android.widget.Scroller>
<android.media.PlayerRecord.RcClientDeathHandler: android.os.IBinder getBinder()>:<public>:<android.media.PlayerRecord.RcClientDeathHandler:android.os.IBinder.DeathRecipient>
<android.gesture.GestureLibrary: boolean save()>:<public abstract>:<android.gesture.GestureLibrary>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.gesture.Learner: java.util.ArrayList getInstances()>:<>:<android.gesture.Learner>
<android.database.AbstractWindowedCursor: boolean isNull(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.media.SoundPool.SoundPoolStub: int play(int,float,float,int,int,float)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.preference.SeekBarPreference.SavedState.1: android.preference.SeekBarPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.SeekBarPreference.SavedState.1:android.os.Parcelable.Creator>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ViewAnimator: void showOnly(int,boolean)>:<>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.BlendFilter:android.filterpacks.imageproc.ImageCombineFilter,android.filterfw.core.Filter>
<android.filterpacks.ui.SurfaceTargetFilter: void updateTargetRect()>:<private>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfosResult(java.util.List,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.view.IWindowManager: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,boolean[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.KeyframeSet: void invalidateCache()>:<public>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.media.MediaDrm: void setMacAlgorithmNative(android.media.MediaDrm,byte[],java.lang.String)>:<private static final native>:<android.media.MediaDrm>
<android.widget.SearchView: boolean isIconified()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.gesture.Learner: void removeInstances(java.lang.String)>:<>:<android.gesture.Learner>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.view.IWindowSessionCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.view.IWindowSessionCallback.Stub:android.os.Binder,android.view.IWindowSessionCallback>
<android.widget.SlidingDrawer.SlidingHandler: void <init>(android.widget.SlidingDrawer)>:<private>:<android.widget.SlidingDrawer.SlidingHandler:android.os.Handler>
<android.view.View.13: java.lang.Float get(android.view.View)>:<public>:<android.view.View.13:android.util.FloatProperty>
<android.widget.TextView.Marquee: void start(int)>:<>:<android.widget.TextView.Marquee>
<android.animation.LayoutTransition: long getStagger(int)>:<public>:<android.animation.LayoutTransition>
<android.hsm.HwSystemManager.HsmDefImpl: android.location.Location getFakeLocation(java.lang.String)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.service.wallpaper.IWallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>:<public abstract>:<android.service.wallpaper.IWallpaperConnection:android.os.IInterface>
<android.print.PrinterDiscoverySession: void notifyOnPrintersChanged()>:<private>:<android.print.PrinterDiscoverySession>
<android.widget.ZoomControls: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.LayoutInflater: void parseViewTag(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>:<private>:<android.view.LayoutInflater>
<android.widget.AbsSpinner.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.AbsSpinner.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.WindowCallbackWrapper: void onContentChanged()>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActiveQueueItemId(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.service.wallpaper.IWallpaperService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.wallpaper.IWallpaperService.Stub.Proxy:android.service.wallpaper.IWallpaperService>
<android.view.WindowManagerPolicy.WindowState: java.lang.String getOwningPackage()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GLES20Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.RenderNode: boolean setLeftTopRightBottom(int,int,int,int)>:<public>:<android.view.RenderNode>
<android.database.sqlite.SQLiteConnection: long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLLogWrapper: void glLightModelfv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCodec.MediaImage: int getHeight()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.view.KeyEvent: boolean isWakeKey()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.ImageReader: int access.1000(android.media.ImageReader)>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.view.ViewTreeObserver.CopyOnWriteArray: java.util.ArrayList getArray()>:<private>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.filterpacks.imageproc.NegativeFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.NegativeFilter:android.filterfw.core.Filter>
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>:<public>:<android.database.CursorToBulkCursorAdaptor:android.database.BulkCursorNative,android.os.Binder,android.os.IBinder.DeathRecipient>
<android.widget.TimePickerSpinnerDelegate: void access.000(android.widget.TimePickerSpinnerDelegate,int,boolean,boolean)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.SurfaceControl.PhysicalDisplayInfo: void <init>()>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.media.RemoteDisplayState.1: void <init>()>:<>:<android.media.RemoteDisplayState.1:android.os.Parcelable.Creator>
<android.database.AbstractCursor: void finalize()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.filterpacks.videosrc.MediaSource: void <clinit>()>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glPointParameterx(int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLLogWrapper: void glBufferData(int,int,java.nio.Buffer,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.textservice.TextInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.Switch: boolean getShowText()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback: boolean onMediaButtonEvent(android.content.Intent)>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder.SessionCallback:android.media.session.MediaSession.Callback>
<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.IAudioFocusDispatcher.Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)>:<public static>:<android.media.IAudioFocusDispatcher.Stub:android.os.Binder,android.media.IAudioFocusDispatcher>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.OnParameterChangeListener access.100(android.media.audiofx.PresetReverb)>:<static>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.widget.SearchView.OnCloseListener: boolean onClose()>:<public abstract>:<android.widget.SearchView.OnCloseListener>
<android.opengl.GLES10: void glStencilMask(int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLLogWrapper: void glClientActiveTexture(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.animation.IntKeyframeSet: android.animation.Keyframes clone()>:<public volatile>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.widget.GridLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaScanner: java.lang.String access.2300(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.MediaScanner: java.util.ArrayList access.600(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.media.ImageReader.SurfaceImage: void access.100(android.media.ImageReader.SurfaceImage,boolean)>:<static>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.media.CCParser: boolean handleDisplayableChars(android.media.CCParser.CCData)>:<private>:<android.media.CCParser>
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewPropertyAnimator: java.util.HashMap access.200(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.view.ViewGroup.ChildListForAccessibility: android.view.ViewGroup.ChildListForAccessibility obtain(android.view.ViewGroup,boolean)>:<public static>:<android.view.ViewGroup.ChildListForAccessibility>
<huawei.android.app.HwCustEmergDataManager: java.lang.String getEmergencyPkgName()>:<public>:<huawei.android.app.HwCustEmergDataManager>
<android.media.MediaHTTPConnection: android.os.IBinder native_getIMemory()>:<private final native>:<android.media.MediaHTTPConnection:android.media.IMediaHTTPConnection.Stub,android.os.Binder>
<android.media.AudioService: boolean access.4100(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.SoundPool.SoundPoolStub: void pause(int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ViewGroup: void dispatchGetDisplayList()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.TtmlRenderingWidget: void setActiveCues(java.util.Vector)>:<public>:<android.media.TtmlRenderingWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.view.ViewGroup: void addDisappearingView(android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioFormat.Builder: void <init>(android.media.AudioFormat)>:<public>:<android.media.AudioFormat.Builder>
<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>:<private>:<android.widget.Editor>
<android.media.session.ISessionController.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.media.tv.TvView: void setMain()>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.media.MediaDrm.CryptoSession: boolean verify(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.widget.TextView: void selectAllAndShowEditor()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.CallbackInfo>
<android.opengl.GLErrorWrapper: void glOrthox(int,int,int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.WindowAnimationFrameStats: void <init>(android.os.Parcel,android.view.WindowAnimationFrameStats.1)>:<>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewConfiguration: void <init>()>:<public>:<android.view.ViewConfiguration>
<android.service.dreams.IDreamManager.Stub.Proxy: void setDreamComponents(android.content.ComponentName[])>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.view.Choreographer: void postFrameCallback(android.view.Choreographer.FrameCallback)>:<public>:<android.view.Choreographer>
<android.widget.VideoView: int access.1202(android.widget.VideoView,int)>:<static>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.database.CursorJoiner: int compareStrings(java.lang.String[])>:<private static transient>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.media.WebVttParser: android.media.WebVttParser.Phase access.300(android.media.WebVttParser)>:<static>:<android.media.WebVttParser>
<android.view.WindowManagerPolicy: void dismissKeyguardLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.Window: android.view.View peekDecorView()>:<public abstract>:<android.view.Window>
<android.view.inputmethod.InputMethodSubtype.1: android.view.inputmethod.InputMethodSubtype[] newArray(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.1:android.os.Parcelable.Creator>
<android.opengl.EGLLogWrapper: boolean eglWaitNative(int,java.lang.Object)>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewConfiguration: int getLongPressTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.LayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.IWindowSession.Stub.Proxy: void wallpaperOffsetsComplete(android.os.IBinder)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.media.WebVttRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>:<public>:<android.media.WebVttRenderer:android.media.SubtitleController.Renderer>
<android.view.View: void debug()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteConnectionPool: void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool.ConnectionWaiter)>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.IAudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.tv.TvView.TvInputCallback: void onEvent(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.widget.DatePickerCalendarDelegate: void adjustDayInMonthIfNeeded(int,int)>:<private>:<android.widget.DatePickerCalendarDelegate:android.widget.DatePicker.AbstractDatePickerDelegate,android.view.View.OnClickListener,android.widget.DatePickerController>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioRecord>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.CursorWindow: void <init>(android.os.Parcel)>:<private>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.database.sqlite.SQLiteMisuseException: void <init>()>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaScanner: void scanCustomDirectories(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[])>:<public>:<android.media.MediaScanner>
<android.view.HardwareLayer: void nUpdateSurfaceTexture(long)>:<private static native>:<android.view.HardwareLayer>
<android.media.TtmlTrack: void onRootNodeParsed(android.media.TtmlNode)>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteSession>
<android.view.View: void resetRtlProperties()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.tv.TvInputService.Session: void notifyVideoAvailable()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.GridLayout: void setAlignmentMode(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.service.persistentdata.IPersistentDataBlockService: byte[] read()>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>:<>:<android.view.ViewOverlay>
<android.widget.DayPickerView: void setUpAdapter()>:<protected>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.filterpacks.imageproc.CropRectFilter: void updateSourceRect(int,int)>:<>:<android.filterpacks.imageproc.CropRectFilter:android.filterfw.core.Filter>
<android.database.AbstractCursor: int getInt(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.ViewFlipper: int access.400(android.widget.ViewFlipper)>:<static>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.view.PointerIcon: android.view.PointerIcon loadCustomIcon(android.content.res.Resources,int)>:<public static>:<android.view.PointerIcon:android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.AudioManager: int listAudioPatches(java.util.ArrayList)>:<public>:<android.media.AudioManager>
<android.widget.RatingBar: void onKeyChange()>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.AudioService: java.lang.String safeMediaVolumeStateToString(java.lang.Integer)>:<private static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.projection.MediaProjectionManager.CallbackDelegate.1: void <init>(android.media.projection.MediaProjectionManager.CallbackDelegate,android.media.projection.MediaProjectionInfo)>:<>:<android.media.projection.MediaProjectionManager.CallbackDelegate.1:java.lang.Runnable>
<android.view.View: void setVerticalScrollbarPosition(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IRemoteControlDisplay.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteControlDisplay.Stub:android.os.Binder,android.media.IRemoteControlDisplay>
<android.animation.PropertyValuesHolder.PointFToIntArray: int[] convert(android.graphics.PointF)>:<public>:<android.animation.PropertyValuesHolder.PointFToIntArray:android.animation.TypeConverter>
<android.widget.MediaController.MediaPlayerControl: void start()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.media.session.ISessionCallback.Stub.Proxy: void onStop()>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.inputmethod.ExtractedText: int describeContents()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.widget.DatePicker: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.IWindowSession.Stub.Proxy: void reportDropResult(android.view.IWindow,boolean)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.ViewFlipper: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isSelected()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ContextMenu: void clearHeader()>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>:<private>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.MediaCodec: void setVideoScalingMode(int)>:<public final native>:<android.media.MediaCodec>
<android.view.View.4: java.lang.Float get(android.view.View)>:<public>:<android.view.View.4:android.util.FloatProperty>
<android.widget.DatePickerCalendarDelegate.SavedState.1: android.widget.DatePickerCalendarDelegate.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.widget.DatePickerCalendarDelegate.SavedState.1:android.os.Parcelable.Creator>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getPixelStride()>:<public>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.GLES20Canvas: void drawLines(float[],int,int,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.AudioGainConfig: int[] values()>:<public>:<android.media.AudioGainConfig>
<android.media.audiofx.AudioEffect: boolean native_getEnabled()>:<private final native>:<android.media.audiofx.AudioEffect>
<android.view.OrientationListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.InflateException: void <init>(java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.view.animation.Animation: boolean willChangeBounds()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.RenderNode: boolean nSetClipBoundsEmpty(long)>:<private static native>:<android.view.RenderNode>
<android.media.MediaRouter.RouteInfo: android.view.Display choosePresentationDisplay()>:<private>:<android.media.MediaRouter.RouteInfo>
<android.media.AudioService.VolumeStreamState: void checkFixedVolumeDevices()>:<public>:<android.media.AudioService.VolumeStreamState>
<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.LomoishFilter:android.filterfw.core.Filter>
<android.service.media.MediaBrowserService.BrowserRoot: android.os.Bundle getExtras()>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.service.dreams.IDreamManager: void testDream(android.content.ComponentName)>:<public abstract>:<android.service.dreams.IDreamManager:android.os.IInterface>
<android.media.RemoteControlClient: void setPlaybackStateInt(int,long,float,boolean)>:<private>:<android.media.RemoteControlClient>
<android.media.SubtitleData: boolean parseParcel(android.os.Parcel)>:<private>:<android.media.SubtitleData>
<android.preference.PreferenceActivity: java.util.List getHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.opengl.GLES10: void glTranslatex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.Editor.SelectionStartHandleView: int getCurrentCursorOffset()>:<public>:<android.widget.Editor.SelectionStartHandleView:android.widget.Editor.HandleView,android.view.View>
<android.widget.TextView: android.widget.TextCopyFinishedListener getTextCopyFinishedListener()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputMethodManager: void setUpdateCursorAnchorInfoMode(int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.accounts.CantAddAccountActivity: void onCreate(android.os.Bundle)>:<public>:<android.accounts.CantAddAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.session.PlaybackState.CustomAction: void <init>(android.os.Parcel,android.media.session.PlaybackState.1)>:<>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.widget.ProgressBar: int getMax()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.sqlite.SQLiteCursor: void close()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void init()>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.GLES20Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.accessibility.CaptioningManager: void notifyFontScaleChanged()>:<private>:<android.view.accessibility.CaptioningManager>
<android.media.MediaRouterClientState.RouteInfo.1: android.media.MediaRouterClientState.RouteInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.MediaRouterClientState.RouteInfo.1:android.os.Parcelable.Creator>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: boolean toLocalMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo getCollectionItemInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.IWindowManager: float getCurrentAnimatorScale()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.GLES20Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewRootImpl.InputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>:<public>:<android.view.ViewRootImpl.InputStage>
<android.media.tv.TvInputManager.2: void onInputRemoved(java.lang.String)>:<public>:<android.media.tv.TvInputManager.2:android.media.tv.ITvInputManagerCallback.Stub,android.os.Binder>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.RemoteViewsListAdapter: int getCount()>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.database.Cursor: boolean isClosed()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.AudioMixPortConfig: android.media.AudioMixPort port()>:<public>:<android.media.AudioMixPortConfig:android.media.AudioPortConfig>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.InputQueue.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>:<public abstract>:<android.view.InputQueue.FinishedInputEventCallback>
<android.widget.Editor.EasyEditPopupWindow: int clipVertically(int)>:<protected>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.tv.ITvInputService: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String)>:<public abstract>:<android.media.tv.ITvInputService:android.os.IInterface>
<android.widget.Switch: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintAttributes.MediaSize: void <clinit>()>:<static>:<android.print.PrintAttributes.MediaSize>
<android.opengl.GLLogWrapper: void glFrustumf(float,float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.GridLayout: int getColumnCount()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ActionMode: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.ActionMode>
<huawei.android.common.HwCustFwkFactoryImpl: void <init>()>:<public>:<huawei.android.common.HwCustFwkFactoryImpl:android.common.HwCustFwkFactory.Factory>
<android.media.MediaExtractor: long getCachedDuration()>:<public native>:<android.media.MediaExtractor>
<android.preference.TwoStatePreference: boolean isChecked()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.ViewRootImpl: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.GridLayout: void drawLine(android.graphics.Canvas,int,int,int,int,android.graphics.Paint)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvStreamConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.tv.TvStreamConfig.1:android.os.Parcelable.Creator>
<android.view.Nsd: void stopNsd()>:<static>:<android.view.Nsd>
<android.opengl.GLSurfaceView.GLThread: void surfaceCreated()>:<public>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent.PointerCoords)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.GLES20Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioRoutesInfo: void <init>(android.media.AudioRoutesInfo)>:<public>:<android.media.AudioRoutesInfo:android.os.Parcelable>
<android.preference.PreferenceGroup: void removeAll()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.widget.Editor.HandleView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.appwidget.AppWidgetProviderInfo.1: android.appwidget.AppWidgetProviderInfo[] newArray(int)>:<public>:<android.appwidget.AppWidgetProviderInfo.1:android.os.Parcelable.Creator>
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.view.View: void onWindowVisibilityChanged(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.GenericInflater: android.content.Context getContext()>:<public>:<android.preference.GenericInflater>
<android.widget.Scroller: int timePassed()>:<public>:<android.widget.Scroller>
<android.preference.Preference: boolean persistStringSet(java.util.Set)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.printservice.IPrintService: void startPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float,long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.widget.VideoView: void resume()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.CCParser.PAC: int getCol()>:<>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.media.AudioService: void unloadHwThemeSoundEffects()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.MotionEvent: int getToolType(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.media.CCParser.CCLineBuilder: void setMidRowAt(int,android.media.CCParser.StyleCode)>:<>:<android.media.CCParser.CCLineBuilder>
<android.view.ViewGroup: void removeView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.trust.ITrustAgentService.Stub.Proxy: void setCallback(android.service.trust.ITrustAgentServiceCallback)>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.security.IKeystoreService: int generate(java.lang.String,int,int,int,int,byte[][])>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.media.projection.IMediaProjection: void stop()>:<public abstract>:<android.media.projection.IMediaProjection:android.os.IInterface>
<android.view.textservice.SpellCheckerInfo.1: android.view.textservice.SpellCheckerInfo[] newArray(int)>:<public>:<android.view.textservice.SpellCheckerInfo.1:android.os.Parcelable.Creator>
<android.view.GLES20Canvas: int nGetMaximumTextureWidth()>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewRootImpl.2: void run()>:<public>:<android.view.ViewRootImpl.2:java.lang.Runnable>
<android.print.IPrintSpooler.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.print.IPrintSpooler.Stub.Proxy:android.print.IPrintSpooler>
<android.widget.RadioGroup: void access.600(android.widget.RadioGroup,int)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHost: void bindService()>:<private static>:<android.appwidget.AppWidgetHost>
<android.media.AudioService: void sendDeviceConnectionIntentForImcs(int,int,java.lang.String)>:<protected>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.IWindowManager: void setAppVisibility(android.os.IBinder,boolean)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.2: void run()>:<public>:<android.media.MediaRouter.UserRouteInfo.SessionVolumeProvider.2:java.lang.Runnable>
<android.media.browse.MediaBrowser: android.media.browse.MediaBrowser.MediaServiceConnection access.100(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.widget.RemoteViewsAdapter: void access.1700(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.MotionEvent: float getHistoricalSize(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.media.tv.TvInputService.HardwareSession: android.media.tv.TvInputManager.Session access.702(android.media.tv.TvInputService.HardwareSession,android.media.tv.TvInputManager.Session)>:<static>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.animation.LayoutTransition.4: void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View.OnLayoutChangeListener)>:<>:<android.animation.LayoutTransition.4:android.animation.AnimatorListenerAdapter>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>:<public>:<android.preference.PreferenceManager>
<android.media.IAudioRoutesObserver.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IAudioRoutesObserver.Stub:android.os.Binder,android.media.IAudioRoutesObserver>
<android.media.tv.ITvInputManagerCallback.Stub: android.media.tv.ITvInputManagerCallback asInterface(android.os.IBinder)>:<public static>:<android.media.tv.ITvInputManagerCallback.Stub:android.os.Binder,android.media.tv.ITvInputManagerCallback>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Integer)>:<private>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.view.inputmethod.SparseRectFArray.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.inputmethod.SparseRectFArray.1:android.os.Parcelable.Creator>
<android.media.IRemoteControlClient: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.media.MiniThumbFile: java.nio.channels.FileChannel getFileChannel(long)>:<private>:<android.media.MiniThumbFile>
<android.media.audiofx.AudioEffect: void createNativeEventHandler()>:<private>:<android.media.audiofx.AudioEffect>
<android.widget.GridLayout: void consistencyCheck()>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.media.tv.ITvInputService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputService.Stub.Proxy:android.media.tv.ITvInputService>
<android.appwidget.AppWidgetHost.Callbacks: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHost.Callbacks:com.android.internal.appwidget.IAppWidgetHost.Stub>
<android.media.MediaExtractor: void <init>()>:<public>:<android.media.MediaExtractor>
<android.security.KeyStore: boolean grant(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.view.View: int getAccessibilityViewId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IPrinterDiscoveryObserver.Stub.Proxy: void onPrintersAdded(android.content.pm.ParceledListSlice)>:<public>:<android.print.IPrinterDiscoveryObserver.Stub.Proxy:android.print.IPrinterDiscoveryObserver>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>:<private>:<android.view.FocusFinder>
<android.media.session.ISessionCallback: void onPause()>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.service.wallpaper.WallpaperService.Engine: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: int getMeasuredState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glLightModelx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.Cursor: short getShort(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaMetadataRetriever: void finalize()>:<protected>:<android.media.MediaMetadataRetriever>
<android.widget.Spinner.DropDownAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.ImageReader.SurfaceImage.SurfacePlane: void <init>(android.media.ImageReader.SurfaceImage,int,int,int)>:<private>:<android.media.ImageReader.SurfaceImage.SurfacePlane:android.media.Image.Plane>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.accounts.IAccountManager: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.AudioTrack: int getChannelCount()>:<public>:<android.media.AudioTrack>
<android.view.TextureView: void onAttachedToWindow()>:<protected>:<android.view.TextureView:android.view.View>
<android.widget.Editor.TextModifyOperation: void <init>(android.content.UndoOwner)>:<public>:<android.widget.Editor.TextModifyOperation:android.content.UndoOperation>
<android.view.HardwareRenderer: void draw(android.view.View,android.view.View.AttachInfo,android.view.HardwareRenderer.HardwareDrawCallbacks)>:<abstract>:<android.view.HardwareRenderer>
<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.opengl.GLES20: void glAttachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvInputService.ServiceHandler: void broadcastRemoveTvInput(java.lang.String)>:<private>:<android.media.tv.TvInputService.ServiceHandler:android.os.Handler>
<android.database.CursorWindow: float getFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioRecord>
<android.media.MediaCodec.CryptoException: void <init>(int,java.lang.String)>:<public>:<android.media.MediaCodec.CryptoException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>:<public static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.View: void setOnDragListener(android.view.View.OnDragListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountAuthenticatorResponse.1: android.accounts.AccountAuthenticatorResponse createFromParcel(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse.1:android.os.Parcelable.Creator>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<huawei.android.app.HwCustEmergDataManagerImpl: boolean isEmergencyState()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl:huawei.android.app.HwCustEmergDataManager>
<android.widget.Editor: android.graphics.drawable.Drawable access.2302(android.widget.Editor,android.graphics.drawable.Drawable)>:<static>:<android.widget.Editor>
<android.widget.GridView: void setupChild(android.view.View,int,int,boolean,int,boolean,boolean,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemLongClickListener>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.SubtitleTrack.RenderingWidget.OnChangedListener: void onChanged(android.media.SubtitleTrack.RenderingWidget)>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget.OnChangedListener>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES10>
<android.preference.PreferenceFragment.1: void handleMessage(android.os.Message)>:<public>:<android.preference.PreferenceFragment.1:android.os.Handler>
<android.filterpacks.videosrc.SurfaceTextureTarget: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.view.HardwareLayer: void updateSurfaceTexture()>:<public>:<android.view.HardwareLayer>
<android.view.SurfaceControl: void setMatrix(float,float,float,float)>:<public>:<android.view.SurfaceControl>
<android.media.effect.SingleFilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>:<public transient>:<android.media.effect.SingleFilterEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.SpellChecker: void <clinit>()>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.view.inputmethod.CompletionInfo.1: void <init>()>:<>:<android.view.inputmethod.CompletionInfo.1:android.os.Parcelable.Creator>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int getWeekDayTextAppearance()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.service.notification.StatusBarNotification: boolean isClearable()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioService: void setSafeMediaVolumeEnabled(boolean)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.AudioHandle: int hashCode()>:<public>:<android.media.AudioHandle>
<android.print.PrinterInfo: java.lang.String access.402(android.print.PrinterInfo,java.lang.String)>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.TimePickerSpinnerDelegate: void generateLegalTimesTree()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder access.1000(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.AudioService.RmtSbmxFullVolDeathHandler: void <init>(android.media.AudioService,android.os.IBinder)>:<>:<android.media.AudioService.RmtSbmxFullVolDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.View: void unFocus(android.view.View)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setOnHoverListener(android.view.View.OnHoverListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioRecord: int getChannelCount()>:<public>:<android.media.AudioRecord>
<android.filterpacks.videosrc.CameraSource: boolean access.102(android.filterpacks.videosrc.CameraSource,boolean)>:<static>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioSystem: int setDeviceConnectionState(int,int,java.lang.String)>:<public static native>:<android.media.AudioSystem>
<android.view.WindowManagerPolicy: void showBootMessage(java.lang.CharSequence,boolean)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ProgressBar: float getAnimationPosition()>:<>:<android.widget.ProgressBar:android.view.View>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<public volatile>:<android.widget.ActivityChooserModel.PersistHistoryAsyncTask:android.os.AsyncTask>
<android.service.voice.VoiceInteractionSession: void startVoiceActivity(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.printservice.IPrintService: void stopPrinterDiscovery()>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.animation.StateListAnimator: void jumpToCurrentState()>:<public>:<android.animation.StateListAnimator>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor getDescriptor()>:<public>:<android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.filterpacks.base.FrameBranch: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.FrameBranch:android.filterfw.core.Filter>
<android.widget.TextView: void onStartTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.PropertyValuesHolder: long access.1300(java.lang.Class,java.lang.String,int)>:<static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.MediaRouter: int getRouteCount()>:<public>:<android.media.MediaRouter>
<android.media.RemoteDisplay.Listener: void onDisplayConnected(android.view.Surface,int,int,int,int)>:<public abstract>:<android.media.RemoteDisplay.Listener>
<android.view.ViewRootImpl.ViewPreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>:<protected>:<android.view.ViewRootImpl.ViewPreImeInputStage:android.view.ViewRootImpl.InputStage>
<android.media.session.ISessionController.Stub.Proxy: android.media.MediaMetadata getMetadata()>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.tv.ITvInputClient: void onContentBlocked(java.lang.String,int)>:<public abstract>:<android.media.tv.ITvInputClient:android.os.IInterface>
<android.view.textservice.SpellCheckerSubtype.1: android.view.textservice.SpellCheckerSubtype createFromParcel(android.os.Parcel)>:<public>:<android.view.textservice.SpellCheckerSubtype.1:android.os.Parcelable.Creator>
<android.media.tv.TvInputManager.1: void onChannelRetuned(android.net.Uri,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.view.ViewPropertyAnimator.1: void <init>(android.view.ViewPropertyAnimator)>:<>:<android.view.ViewPropertyAnimator.1:java.lang.Runnable>
<android.animation.Keyframe.ObjectKeyframe: java.lang.Object getValue()>:<public>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.media.AudioService: boolean isInCommunication()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HwAbsListView: void setIgnoreScrollMultiSelectStub()>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.GrantCredentialsPermissionActivity: void <init>()>:<public>:<android.accounts.GrantCredentialsPermissionActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnClickListener>
<android.view.WindowManagerPolicy: void beginPostLayoutPolicyLw(int,int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.service.dreams.DreamService.DreamServiceWrapper: void wakeUp()>:<public>:<android.service.dreams.DreamService.DreamServiceWrapper:android.service.dreams.IDreamService.Stub,android.os.Binder>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.AudioCapabilities getAudioCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.ViewRootImpl: void profile()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.MotionEvent: int nativeGetEdgeFlags(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ScrollView: boolean isFillViewport()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl.NativePostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>:<public>:<android.view.ViewRootImpl.NativePostImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.InputQueue.FinishedInputEventCallback>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES10: void <clinit>()>:<static>:<android.opengl.GLES10>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>:<public abstract>:<android.widget.Chronometer.OnChronometerTickListener>
<android.view.IWindowFocusObserver.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.view.IWindowFocusObserver.Stub.Proxy:android.view.IWindowFocusObserver>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.Static: void requestSetVolume(android.media.MediaRouter.RouteInfo,int)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.animation.Animator.AnimatorListener: void onAnimationCancel(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.print.IPrintDocumentAdapter: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>:<public abstract>:<android.print.IPrintDocumentAdapter:android.os.IInterface>
<android.widget.ActionMenuView: void onDetachedFromWindow()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.database.AbstractCursor: void onDeactivateOrClose()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Editor.SuggestionsPopupWindow: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.database.MergeCursor: boolean isNull(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>:<public>:<android.view.ViewRootImpl.AccessibilityInteractionConnection:android.view.accessibility.IAccessibilityInteractionConnection.Stub,android.os.Binder>
<android.database.AbstractCursor: boolean moveToNext()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.session.ISessionControllerCallback: void onSessionDestroyed()>:<public abstract>:<android.media.session.ISessionControllerCallback:android.os.IInterface>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.service.voice.IVoiceInteractionService: void soundModelsChanged()>:<public abstract>:<android.service.voice.IVoiceInteractionService:android.os.IInterface>
<android.view.View: float getTransitionAlpha()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaScanner: boolean matchEntries(long,java.lang.String)>:<private>:<android.media.MediaScanner>
<android.media.tv.TvInputManager.TvInputCallbackRecord.1: void <init>(android.media.tv.TvInputManager.TvInputCallbackRecord,java.lang.String,int)>:<>:<android.media.tv.TvInputManager.TvInputCallbackRecord.1:java.lang.Runnable>
<android.animation.LayoutTransition.4: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.4:android.animation.AnimatorListenerAdapter>
<android.media.AudioService: void setDtsStatus()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.opengl.GLErrorWrapper: void checkThread()>:<private>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioDevicePort: boolean equals(java.lang.Object)>:<public>:<android.media.AudioDevicePort:android.media.AudioPort>
<android.animation.Animator: void setStartDelay(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>:<public>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl:com.android.internal.textservice.ISpellCheckerSessionListener.Stub>
<android.widget.TextView: void setHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.IWindow: void dispatchAppVisibility(boolean)>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: void hideWindow()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.ExifInterface: boolean getLatLong(float[])>:<public>:<android.media.ExifInterface>
<android.view.ViewGroup: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.trust.TrustAgentService: boolean access.500(android.service.trust.TrustAgentService)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.JetPlayer: void postEventFromNative(java.lang.Object,int,int,int)>:<private static>:<android.media.JetPlayer>
<android.view.InputEvent: int getSequenceNumber()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.widget.TextView: void deleteText_internal(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hsm.HwMediaPermWrapper: android.view.Surface setPreviewDisplay(android.view.Surface)>:<public>:<android.hsm.HwMediaPermWrapper>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>:<public static native>:<android.opengl.EGLExt>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.KeyEvent: boolean isShiftPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaCodecInfo.AudioCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.view.ViewGroup: boolean resolveTextAlignment()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewTreeObserver: void addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.media.AudioFormat: int access.002(android.media.AudioFormat,int)>:<static>:<android.media.AudioFormat>
<android.view.GLES20Canvas: int nSaveLayerAlpha(long,int,int)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.RenderNode: float nGetScaleY(long)>:<private static native>:<android.view.RenderNode>
<android.service.media.IMediaBrowserService: void removeSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>:<public abstract>:<android.service.media.IMediaBrowserService:android.os.IInterface>
<android.opengl.GLErrorWrapper: void glPointSize(float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvInputInfo: void <clinit>()>:<static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>:<public>:<android.media.AudioManager>
<android.media.MediaDrm.CertificateRequest: void <init>(byte[],java.lang.String)>:<>:<android.media.MediaDrm.CertificateRequest>
<android.widget.ZoomButtonsController: void onPostConfigurationChanged()>:<private>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.widget.ListView: void setCacheColorHint(int)>:<public>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaDescription: android.net.Uri getIconUri()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.widget.TextClock: void chooseFormat(boolean)>:<private>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.RenderNode: boolean setHasOverlappingRendering(boolean)>:<public>:<android.view.RenderNode>
<android.database.DataSetObserver: void onInvalidated()>:<public>:<android.database.DataSetObserver>
<android.view.WindowManagerPolicy: int focusChangedLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)>:<private>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioService.ScoClient: int getCount()>:<public>:<android.media.AudioService.ScoClient:android.os.IBinder.DeathRecipient>
<android.view.accessibility.AccessibilityWindowInfo: int getType()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager.2: void <init>(android.view.inputmethod.InputMethodManager)>:<>:<android.view.inputmethod.InputMethodManager.2:java.lang.Runnable>
<android.view.TextureView: boolean isOpaque()>:<public>:<android.view.TextureView:android.view.View>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.media.browse.MediaBrowser: android.os.Bundle access.1700(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.widget.SpellChecker: java.lang.String access.300()>:<static>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.animation.Keyframe: android.animation.Keyframe clone()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.opengl.GLLogWrapper: void glGenBuffers(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View.13: void setValue(java.lang.Object,float)>:<public volatile>:<android.view.View.13:android.util.FloatProperty>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.security.IKeyChainService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.media.WebVttParser: android.media.TextTrackCue access.902(android.media.WebVttParser,android.media.TextTrackCue)>:<static>:<android.media.WebVttParser>
<android.media.MediaPlayer: android.media.MediaPlayer.OnVideoSizeChangedListener access.1300(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.MultiCheckPreference.SavedState.1: void <init>()>:<>:<android.preference.MultiCheckPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.widget.FastScroller.4: void setValue(java.lang.Object,int)>:<public volatile>:<android.widget.FastScroller.4:android.util.IntProperty>
<android.view.ViewDebug: java.lang.reflect.Method[] capturedViewGetPropertyMethods(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.hsm.HwSystemManager.HsmInterface: boolean allowOp(android.content.Context,int,boolean)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.widget.AdapterViewAnimator: int getBaseline()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.VelocityTracker: void nativeComputeCurrentVelocity(long,int,float)>:<private static native>:<android.view.VelocityTracker>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder before(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.widget.DayPickerView: java.lang.String getMonthAndYearString(java.util.Calendar)>:<private>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.View.ScrollabilityCache: void setFadeColor(int)>:<public>:<android.view.View.ScrollabilityCache:java.lang.Runnable>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadLabel(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.MenuItem: int getOrder()>:<public abstract>:<android.view.MenuItem>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: java.lang.String access.400(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>:<public>:<android.media.RemoteControlClient>
<android.view.InputChannel: void dispose()>:<public>:<android.view.InputChannel:android.os.Parcelable>
<android.media.AudioService: int getMaxStreamVolume(int)>:<protected static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.MotionEvent: float clamp(float,float,float)>:<private static final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.GraphicBuffer: int getHeight()>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaController.TransportControls: void <init>(android.media.session.MediaController)>:<private>:<android.media.session.MediaController.TransportControls>
<android.widget.Spinner.DropDownAdapter: void <init>(android.widget.SpinnerAdapter)>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.preference.EditTextPreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.EditTextPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.widget.ListView: android.view.View fillFromTop(int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.UserRouteInfo: void setName(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.security.KeyStore: boolean delete(java.lang.String)>:<public>:<android.security.KeyStore>
<android.media.IMediaHTTPConnection: android.os.IBinder connect(java.lang.String,java.lang.String)>:<public abstract>:<android.media.IMediaHTTPConnection:android.os.IInterface>
<android.opengl.GLES30: boolean glIsVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AdapterViewAnimator: void showPrevious()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.view.Window: void setFeatureInt(int,int)>:<public abstract>:<android.view.Window>
<android.media.SoundPool.SoundPoolImpl.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.SoundPool.SoundPoolImpl.EventHandler:android.os.Handler>
<android.service.notification.IConditionProvider.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.notification.IConditionProvider.Stub.Proxy:android.service.notification.IConditionProvider>
<android.print.PrintAttributes: int describeContents()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.CCParser.CCLineBuilder: char charAt(int)>:<>:<android.media.CCParser.CCLineBuilder>
<android.preference.Preference: float getPersistedFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.Gallery: void offsetChildrenLeftAndRight(int)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewStub: void draw(android.graphics.Canvas)>:<public>:<android.view.ViewStub:android.view.View>
<android.view.View: boolean hasFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.notification.NotificationListenerService.RankingMap: boolean isIntercepted(java.lang.String)>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.view.View: void onSizeChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES10: void glPointSize(float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<huawei.android.net.wifi.HwCustWifiManager: void initHwCustWifiManager()>:<public>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.media.ExifInterface: long getGpsDateTime()>:<public>:<android.media.ExifInterface>
<android.ddm.DdmHandleProfiling: void <clinit>()>:<static>:<android.ddm.DdmHandleProfiling:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.View: android.view.ViewParent getParent()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public abstract>:<android.view.ViewParent>
<android.media.projection.MediaProjectionInfo.1: android.media.projection.MediaProjectionInfo createFromParcel(android.os.Parcel)>:<public>:<android.media.projection.MediaProjectionInfo.1:android.os.Parcelable.Creator>
<android.view.View.ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access.200(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.view.KeyEvent: boolean isSystemKey(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.ValueAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.session.MediaController.Callback: void onAudioInfoChanged(android.media.session.MediaController.PlaybackInfo)>:<public>:<android.media.session.MediaController.Callback>
<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.Editor>
<android.service.voice.VoiceInteractionSession.2: void <init>(android.service.voice.VoiceInteractionSession)>:<>:<android.service.voice.VoiceInteractionSession.2:android.service.voice.IVoiceInteractionSession.Stub,android.os.Binder>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>:<public>:<android.widget.ActionMenuView.ActionMenuPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.Gallery: void fillToGalleryRightLtr()>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isImportantForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.HwAbsListView: boolean checkIsHwTheme(android.content.Context,android.util.AttributeSet)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.view.MotionEvent: boolean isTainted()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.SubtitleTrack: void finishedRun(long)>:<protected>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.GridLayout.4: int getAlignmentValue(android.view.View,int,int)>:<public>:<android.widget.GridLayout.4:android.widget.GridLayout.Alignment>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>:<public final>:<android.media.MediaCodec>
<android.widget.RemoteViews.ReflectionActionWithoutParams: java.lang.String getActionName()>:<public>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.widget.CheckedTextView: void setChecked(boolean)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.preference.PreferenceManager: void dispatchActivityDestroy()>:<>:<android.preference.PreferenceManager>
<android.widget.GridLayout.LayoutParams: boolean equals(java.lang.Object)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.service.notification.NotificationListenerService.Ranking: void access.700(android.service.notification.NotificationListenerService.Ranking,java.lang.String,int,boolean,boolean,int)>:<static>:<android.service.notification.NotificationListenerService.Ranking>
<android.media.tv.TvInputManager.Session: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvInputManager.Session>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String)>:<public>:<android.filterpacks.videosink.MediaRecorderStopException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.session.ISession.Stub.Proxy: void sendEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.hsm.HwSystemManager: boolean shouldInterceptAudience(java.lang.String[])>:<public static>:<android.hsm.HwSystemManager>
<android.widget.CalendarView.LegacyCalendarViewDelegate: android.widget.CalendarView.OnDateChangeListener access.600(android.widget.CalendarView.LegacyCalendarViewDelegate)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.filterpacks.imageproc.DrawRectFilter: void renderBox(android.filterfw.geometry.Quad)>:<private>:<android.filterpacks.imageproc.DrawRectFilter:android.filterfw.core.Filter>
<android.media.session.PlaybackState: void <init>(android.os.Parcel)>:<private>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaScanner: boolean access.2202(android.media.MediaScanner,boolean)>:<static>:<android.media.MediaScanner>
<android.opengl.Matrix: void <clinit>()>:<static>:<android.opengl.Matrix>
<android.media.tv.TvView: void setZOrderOnTop(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.TimePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void <init>()>:<private>:<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory:android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.view.MenuInflater.MenuState: android.view.ActionProvider access.000(android.view.MenuInflater.MenuState)>:<static>:<android.view.MenuInflater.MenuState>
<android.service.fingerprint.IFingerprintService: void enroll(android.os.IBinder,long,int)>:<public abstract>:<android.service.fingerprint.IFingerprintService:android.os.IInterface>
<android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.session.MediaController>
<android.view.SurfaceView: boolean isSupportAPS()>:<private>:<android.view.SurfaceView:android.view.View>
<android.media.audiofx.EnvironmentalReverb: java.lang.Object access.000(android.media.audiofx.EnvironmentalReverb)>:<static>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.GridLayout.Axis: boolean isOrderPreserved()>:<public>:<android.widget.GridLayout.Axis>
<android.media.CCParser.CCLineBuilder: void setCharAt(int,char)>:<>:<android.media.CCParser.CCLineBuilder>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.accounts.AccountManager.BaseFutureTask.Response: void <init>(android.accounts.AccountManager.BaseFutureTask)>:<protected>:<android.accounts.AccountManager.BaseFutureTask.Response:android.accounts.IAccountManagerResponse.Stub,android.os.Binder>
<android.media.IVolumeController: void masterVolumeChanged(int)>:<public abstract>:<android.media.IVolumeController:android.os.IInterface>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getSettingsActivity()>:<public>:<android.service.voice.VoiceInteractionServiceInfo>
<android.widget.Filter.FilterResults: void <init>()>:<public>:<android.widget.Filter.FilterResults>
<android.media.MediaPlayer: android.media.MediaPlayer.TrackInfo[] getTrackInfo()>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.Window: void setUiOptions(int)>:<public>:<android.view.Window>
<android.media.IRemoteDisplayProvider.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IRemoteDisplayProvider.Stub:android.os.Binder,android.media.IRemoteDisplayProvider>
<android.print.IPrintSpoolerClient.Stub.Proxy: void onPrintJobQueued(android.print.PrintJobInfo)>:<public>:<android.print.IPrintSpoolerClient.Stub.Proxy:android.print.IPrintSpoolerClient>
<android.view.View: int getScrollBarStyle()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService.VolumeStreamState: void dump(java.io.PrintWriter)>:<private>:<android.media.AudioService.VolumeStreamState>
<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.service.media.IMediaBrowserServiceCallbacks.Stub.Proxy:android.service.media.IMediaBrowserServiceCallbacks>
<android.media.PlayerRecord: void finalize()>:<protected>:<android.media.PlayerRecord:android.os.IBinder.DeathRecipient>
<android.widget.DatePicker: java.lang.String access.1500()>:<static>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteConnection: int nativeGetParameterCount(long,long)>:<private static native>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.audiofx.AudioEffect: boolean hasControl()>:<public>:<android.media.audiofx.AudioEffect>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: int getDataBlockSize()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)>:<public>:<android.view.InputEventConsistencyVerifier>
<android.media.TimedText.CharPos: void <init>(int,int)>:<public>:<android.media.TimedText.CharPos>
<android.media.tv.TvInputManager: java.util.Map access.1500(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.media.browse.MediaBrowser: android.media.browse.MediaBrowser.ServiceCallbacks access.1500(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.animation.ValueAnimator: int getRepeatCount()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiofx.AudioEffect: int getParameter(int[],short[])>:<public>:<android.media.audiofx.AudioEffect>
<android.animation.LayoutTransition: android.animation.TimeInterpolator access.500(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.MediaDescription.Builder: void <init>()>:<public>:<android.media.MediaDescription.Builder>
<android.view.View: void damageInParent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChanged()>:<public>:<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter:com.android.internal.widget.IRemoteViewsFactory.Stub>
<android.media.MediaScanner: android.net.Uri access.1600(android.media.MediaScanner)>:<static>:<android.media.MediaScanner>
<android.widget.TextView.ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.widget.TextView.ChangeWatcher:android.text.TextWatcher,android.text.SpanWatcher>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GestureDetector: void dispatchLongPress()>:<private>:<android.view.GestureDetector>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)>:<private>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: void <init>(android.content.Context,int,android.accounts.ChooseAccountActivity.AccountInfo[])>:<public>:<android.accounts.ChooseAccountActivity.AccountArrayAdapter:android.widget.ArrayAdapter,android.widget.BaseAdapter>
<android.service.notification.Condition: boolean isValidState(int)>:<private static>:<android.service.notification.Condition:android.os.Parcelable>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>:<public abstract>:<android.view.ViewParent>
<android.view.View: void sendAccessibilityEvent(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.ISessionController.Stub.Proxy: void playFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.ISessionController.Stub.Proxy:android.media.session.ISessionController>
<android.view.accessibility.IAccessibilityManager.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityManager.Stub.Proxy:android.view.accessibility.IAccessibilityManager>
<android.view.View: void onCloseSystemDialogs(java.lang.String)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glScalex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.audiofx.Virtualizer.Settings: void <init>()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.view.View: int resolveSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputQueue: android.view.InputQueue.ActiveInputEvent obtainActiveInputEvent(java.lang.Object,android.view.InputQueue.FinishedInputEventCallback)>:<private>:<android.view.InputQueue>
<android.widget.TabWidget: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.InputFilter: android.view.IInputFilterHost access.002(android.view.InputFilter,android.view.IInputFilterHost)>:<static>:<android.view.InputFilter:android.view.IInputFilter.Stub,android.os.Binder>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.ValueAnimator: boolean access.302(android.animation.ValueAnimator,boolean)>:<static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.accessibility.AccessibilityRecord: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.MediaController: android.view.View makeControllerView()>:<protected>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyStore: byte[] get(java.lang.String)>:<public>:<android.security.KeyStore>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.TimePicker.AbstractTimePickerDelegate: void onValidationChanged(boolean)>:<protected>:<android.widget.TimePicker.AbstractTimePickerDelegate:android.widget.TimePicker.TimePickerDelegate>
<android.widget.TextView: android.text.Layout getHintLayoutOuter()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter: void addRouteInt(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,int,java.lang.String)>:<>:<android.widget.RemoteViews.ReflectionActionWithoutParams:android.widget.RemoteViews.Action>
<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.projection.IMediaProjection.Stub.Proxy: boolean canProjectAudio()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.service.persistentdata.PersistentDataBlockManager: void <init>(android.service.persistentdata.IPersistentDataBlockService)>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.database.ContentObserver.Transport: void releaseContentObserver()>:<public>:<android.database.ContentObserver.Transport:android.database.IContentObserver.Stub,android.os.Binder>
<android.widget.ListView: void onFinishInflate()>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityCache: void add(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.view.accessibility.AccessibilityCache>
<android.widget.TimePickerSpinnerDelegate: void initialize(int,int,boolean,int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.SurfaceControl: java.lang.String toString()>:<public>:<android.view.SurfaceControl>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean apply(android.view.View)>:<public>:<android.view.AccessibilityInteractionController.AddNodeInfosForViewId:com.android.internal.util.Predicate>
<android.view.ViewRootImpl: android.view.View getView()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.security.IKeyChainService.Stub: void <init>()>:<public>:<android.security.IKeyChainService.Stub:android.os.Binder,android.security.IKeyChainService>
<android.database.sqlite.SQLiteCursor: void fillWindow(int)>:<private>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.TextView: int getImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RatingBar: void <init>(android.content.Context)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.ViewDebug.ViewOperation: void post(java.lang.Object[])>:<public abstract transient>:<android.view.ViewDebug.ViewOperation>
<android.media.session.MediaSessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>:<public>:<android.media.session.MediaSessionManager>
<android.media.session.ISessionManager: void removeSessionsListener(android.media.session.IActiveSessionsListener)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.view.Choreographer: long getLastFrameDoneTime()>:<public>:<android.view.Choreographer>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.SubtitleController.2: void onEnabledChanged(boolean)>:<public>:<android.media.SubtitleController.2:android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.inputmethod.InputMethodManager: void recyclePendingEventLocked(android.view.inputmethod.InputMethodManager.PendingEvent)>:<private>:<android.view.inputmethod.InputMethodManager>
<android.view.View.PerformClick: void <init>(android.view.View,android.view.View.1)>:<>:<android.view.View.PerformClick:java.lang.Runnable>
<android.opengl.GLLogWrapper: java.lang.String getCap(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.CCParser.CCMemory: void writeText(java.lang.String)>:<>:<android.media.CCParser.CCMemory>
<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter: void onDateTapped(java.util.Calendar)>:<private>:<android.widget.CalendarView.LegacyCalendarViewDelegate.WeeksAdapter:android.widget.BaseAdapter,android.view.View.OnTouchListener>
<android.view.FocusFinder: void <init>()>:<private>:<android.view.FocusFinder>
<android.media.IAudioService.Stub.Proxy: void stopBluetoothSco(android.os.IBinder)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.animation.Animation: boolean isFillEnabled()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View.OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public abstract>:<android.view.View.OnLayoutChangeListener>
<android.print.PrintJobInfo: java.lang.String stateToString(int)>:<public static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.ViewGroup: android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent)>:<private static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioService.AudioHandler: boolean onLoadSoundEffects()>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.media.audiofx.AudioEffect: int native_command(int,int,byte[],int,byte[])>:<private final native>:<android.media.audiofx.AudioEffect>
<android.view.DisplayEventReceiver: void nativeScheduleVsync(long)>:<private static native>:<android.view.DisplayEventReceiver>
<android.view.IInputFilter: void uninstall()>:<public abstract>:<android.view.IInputFilter:android.os.IInterface>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.videosrc.SurfaceTextureTarget: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.database.CursorWrapper: boolean isLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.print.IWriteResultCallback.Stub.Proxy: void onWriteFinished(android.print.PageRange[],int)>:<public>:<android.print.IWriteResultCallback.Stub.Proxy:android.print.IWriteResultCallback>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void addDelayedAnimation(android.view.RenderNodeAnimator)>:<public>:<android.view.RenderNodeAnimator.DelayedAnimationHelper:java.lang.Runnable>
<android.view.InputQueue: long getNativePtr()>:<public>:<android.view.InputQueue>
<android.view.RenderNode: boolean setScaleX(float)>:<public>:<android.view.RenderNode>
<android.preference.EditTextPreference: void <init>(android.content.Context)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioManager: boolean isVolumeFixed()>:<public>:<android.media.AudioManager>
<android.widget.Editor.SelectionModifierCursorController: int getMaxTouchOffset()>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>:<public>:<android.ddm.DdmHandleNativeHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.opengl.GLErrorWrapper: void glBlendFuncSeparate(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.print.PrintAttributes.Margins: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Margins>
<android.media.SubtitleTrack: void setRunDiscardTimeMs(long,long)>:<public>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.widget.ActionMenuPresenter: boolean showOverflowMenu()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.widget.GridLayout: void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.WindowManagerPolicy.WindowState: int getSystemUiVisibility()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>:<public>:<android.print.PrintJob>
<android.view.ViewRootImpl: boolean collectViewAttributes()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService: void enforceSafeMediaVolume()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.PlayerRecord.RccPlaybackState: java.lang.String toString()>:<public>:<android.media.PlayerRecord.RccPlaybackState>
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.View: void setFitsSystemWindows(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGL14: android.opengl.EGLSurface _eglCreateWindowSurfaceTexture(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<private static native>:<android.opengl.EGL14>
<android.view.View: android.graphics.Insets getOpticalInsets()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewRootImpl.W: void closeSystemDialogs(java.lang.String)>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.media.tv.TvInputManager.SessionCallbackRecord.5: void <init>(android.media.tv.TvInputManager.SessionCallbackRecord,int,java.lang.String)>:<>:<android.media.tv.TvInputManager.SessionCallbackRecord.5:java.lang.Runnable>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>:<public abstract>:<android.view.SurfaceHolder>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.ListView: int lookForSelectablePosition(int,boolean)>:<>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.security.KeyChain.KeyChainConnection: void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService)>:<private>:<android.security.KeyChain.KeyChainConnection:java.io.Closeable>
<android.view.animation.LayoutAnimationController: void setDelay(float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.view.View.ListenerInfo: android.view.View.OnKeyListener access.300(android.view.View.ListenerInfo)>:<static>:<android.view.View.ListenerInfo>
<android.opengl.GLSurfaceView.GLThread: void <init>(java.lang.ref.WeakReference)>:<>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.view.HardwareRenderer: void disable(boolean)>:<public static>:<android.view.HardwareRenderer>
<android.media.AudioService: void loadTouchSoundAssets()>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView access.200(android.widget.TimePickerSpinnerDelegate)>:<static>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.opengl.GLES20: void glClearStencil(int)>:<public static native>:<android.opengl.GLES20>
<android.filterpacks.imageproc.VignetteFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.VignetteFilter:android.filterfw.core.Filter>
<android.view.GLES20Canvas: void drawLines(float[],android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.GLES20Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.AdapterView: int getSelectedItemPosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.AlphaAnimation: boolean hasAlpha()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.view.animation.Animation.1: void run()>:<public>:<android.view.animation.Animation.1:java.lang.Runnable>
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>:<static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <clinit>()>:<static>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void scrollTo(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewDebug: java.lang.reflect.Method[] getExportedPropertyMethods(java.lang.Class)>:<private static>:<android.view.ViewDebug>
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.animation.PathKeyframes: java.lang.Object clone()>:<public volatile>:<android.animation.PathKeyframes:android.animation.Keyframes>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.DayPickerView.1: void <init>(android.widget.DayPickerView,int)>:<>:<android.widget.DayPickerView.1:java.lang.Runnable>
<android.widget.Editor: void <clinit>()>:<static>:<android.widget.Editor>
<android.database.sqlite.SQLiteDebug: void <init>()>:<private>:<android.database.sqlite.SQLiteDebug>
<android.widget.GridLayout: void onViewAdded(android.view.View)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.widget.ActionMenuPresenter: android.widget.ActionMenuPresenter.OverflowPopup getOverflowPopup()>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.view.InputFilter.H: void handleMessage(android.os.Message)>:<public>:<android.view.InputFilter.H:android.os.Handler>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.tv.TvView: java.lang.ref.WeakReference access.1100()>:<static>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.Nsd: void sendInterruptCmd(int)>:<public static>:<android.view.Nsd>
<android.service.dreams.IDreamService.Stub.Proxy: void wakeUp()>:<public>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaCodecInfo.AudioCapabilities: void createDiscreteSampleRates()>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.view.View: void setTextDirection(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.IAccessibilityManager: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>:<public abstract>:<android.view.accessibility.IAccessibilityManager:android.os.IInterface>
<android.filterpacks.videosink.MediaEncoderFilter: void startRecording(android.filterfw.core.FilterContext)>:<private>:<android.filterpacks.videosink.MediaEncoderFilter:android.filterfw.core.Filter>
<android.view.Nsd: android.view.ViewGroup getViewGroup(android.view.View)>:<private static>:<android.view.Nsd>
<android.view.ViewGroup: void removeViewInternal(int,android.view.View)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaRouter.RouteGroup: void updateName()>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.WebVttParser: void parse(java.lang.String)>:<public>:<android.media.WebVttParser>
<android.media.WebVttRenderingWidget: int access.400(int,int)>:<static>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo: void <init>(android.os.Parcel,android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.tv.ITvInputManager: java.util.List getHardwareList()>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.GLES20Canvas: void nScale(long,float,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MenuItem: boolean isChecked()>:<public abstract>:<android.view.MenuItem>
<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLSurfaceView.LogWriter: void write(char[],int,int)>:<public>:<android.opengl.GLSurfaceView.LogWriter:java.io.Writer>
<android.media.AudioService.VolumeStreamState: void setAllIndexes(android.media.AudioService.VolumeStreamState)>:<public>:<android.media.AudioService.VolumeStreamState>
<android.filterpacks.imageproc.ImageCombineFilter: void assertAllInputTargetsMatch()>:<private>:<android.filterpacks.imageproc.ImageCombineFilter:android.filterfw.core.Filter>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.LayoutAnimationController>
<android.ddm.DdmHandleExit: void connected()>:<public>:<android.ddm.DdmHandleExit:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.ProgressBar: void <init>(android.content.Context)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.AudioPortEventHandler: android.media.AudioManager access.100(android.media.AudioPortEventHandler)>:<static>:<android.media.AudioPortEventHandler>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe clone()>:<public volatile>:<android.animation.Keyframe.FloatKeyframe:android.animation.Keyframe>
<android.media.ImageReader.SurfaceImage: java.nio.ByteBuffer nativeImageGetBuffer(int,int)>:<private synchronized native>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.Choreographer.CallbackQueue: android.view.Choreographer.CallbackRecord extractDueCallbacksLocked(long)>:<public>:<android.view.Choreographer.CallbackQueue>
<android.view.Surface: void transferFrom(android.view.Surface)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.AudioService: void readDockAudioSettings(android.content.ContentResolver)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>:<>:<android.widget.Editor>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void unregisterPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.view.View: void forceLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewTreeObserver.InternalInsetsInfo: int hashCode()>:<public>:<android.view.ViewTreeObserver.InternalInsetsInfo>
<android.media.tv.TvInputManager.TvInputCallbackRecord.3: void <init>(android.media.tv.TvInputManager.TvInputCallbackRecord,java.lang.String)>:<>:<android.media.tv.TvInputManager.TvInputCallbackRecord.3:java.lang.Runnable>
<android.media.SubtitleTrack.RenderingWidget: void setSize(int,int)>:<public abstract>:<android.media.SubtitleTrack.RenderingWidget>
<android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.AudioFormat: int access.202(android.media.AudioFormat,int)>:<static>:<android.media.AudioFormat>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.LinearLayout access.1700(android.widget.DatePicker.DatePickerSpinnerDelegate)>:<static>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder.FloatPropertyValuesHolder clone()>:<public>:<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.view.ViewRootImpl: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.WindowManagerPolicy: void keepScreenOnStartedLw()>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.RenderNode: boolean nSetRevealClip(long,boolean,float,float,float)>:<private static native>:<android.view.RenderNode>
<android.view.RenderNode: void output()>:<public>:<android.view.RenderNode>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.textservice.SentenceSuggestionsInfo.1: void <init>()>:<>:<android.view.textservice.SentenceSuggestionsInfo.1:android.os.Parcelable.Creator>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.MotionEvent: float getToolMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: byte[] read()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.widget.Editor.SelectionActionModeCallback: void <init>(android.widget.Editor)>:<private>:<android.widget.Editor.SelectionActionModeCallback:android.view.ActionMode.Callback>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(int)>:<public>:<android.media.MediaRouter.CallbackInfo>
<android.media.browse.MediaBrowser: boolean isConnected()>:<public>:<android.media.browse.MediaBrowser>
<android.service.notification.NotificationListenerService.RankingMap.1: void <init>()>:<>:<android.service.notification.NotificationListenerService.RankingMap.1:android.os.Parcelable.Creator>
<android.print.PrintManager: void restartPrintJob(android.print.PrintJobId)>:<>:<android.print.PrintManager>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.printservice.PrinterDiscoverySession: void removePrinters(java.util.List)>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.widget.CalendarView.LegacyCalendarViewDelegate: boolean getShowWeekNumber()>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.Gallery: boolean access.600(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.ViewConfiguration: int getScrollBarSize()>:<public static>:<android.view.ViewConfiguration>
<android.media.projection.IMediaProjectionManager.Stub: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjectionManager.Stub:android.os.Binder,android.media.projection.IMediaProjectionManager>
<android.media.IMediaRouterService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaRouterService.Stub:android.os.Binder,android.media.IMediaRouterService>
<android.widget.RemoteViews.BitmapReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>:<>:<android.widget.RemoteViews.BitmapReflectionAction:android.widget.RemoteViews.Action>
<android.view.ViewDebug.IntToString: java.lang.String 'to'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.widget.ScrollBarDrawable: int getAlpha()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.CCParser.CCMemory: void bs()>:<>:<android.media.CCParser.CCMemory>
<android.widget.ActionMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: java.lang.String access.202(android.preference.PreferenceGroupAdapter.PreferenceLayout,java.lang.String)>:<static>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>:<public static>:<android.widget.Toast>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>:<public static final>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.inputmethod.SparseRectFArray: void <init>(android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder,android.view.inputmethod.SparseRectFArray.1)>:<>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.view.ActionMode: void invalidate()>:<public abstract>:<android.view.ActionMode>
<android.view.Window: void setEnterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.media.AudioService: void access.5700()>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.StackView.StackSlider: void setMode(int)>:<>:<android.widget.StackView.StackSlider>
<android.media.SubtitleTrack.CueList: void access.300(android.media.SubtitleTrack.CueList,android.media.SubtitleTrack.Cue,long)>:<static>:<android.media.SubtitleTrack.CueList>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1.1: void <init>(android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1)>:<>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.1.1:java.lang.Runnable>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void reevaluateStatusBarVisibility()>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.media.tv.TvInputManager.1: void onContentAllowed(int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.media.IMediaRouterService: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.media.AudioGainConfig: void <init>(int,android.media.AudioGain,int,int,int[],int)>:<>:<android.media.AudioGainConfig>
<android.widget.RadioGroup: void init()>:<private>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView.Marquee: long access.502(android.widget.TextView.Marquee,long)>:<static>:<android.widget.TextView.Marquee>
<android.accounts.ChooseTypeAndAccountActivity: java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.IWindowId.Stub.Proxy: void registerFocusObserver(android.view.IWindowFocusObserver)>:<public>:<android.view.IWindowId.Stub.Proxy:android.view.IWindowId>
<android.media.MediaMetadataEditor: long getLong(int,long)>:<public>:<android.media.MediaMetadataEditor>
<android.media.tv.TvView.MySessionCallback: void onVideoUnavailable(android.media.tv.TvInputManager.Session,int)>:<public>:<android.media.tv.TvView.MySessionCallback:android.media.tv.TvInputManager.SessionCallback>
<android.widget.Editor: int getAvailableDisplayListIndex(int[],int,int)>:<private>:<android.widget.Editor>
<android.widget.FastScroller: boolean access.102(android.widget.FastScroller,boolean)>:<static>:<android.widget.FastScroller>
<android.widget.Gallery: android.view.View makeAndAddView(int,int,int,boolean)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.animation.Animator: void pause()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.Switch.1: void setValue(java.lang.Object,float)>:<public volatile>:<android.widget.Switch.1:android.util.FloatProperty>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.media.IAudioService: boolean isStreamMute(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.media.SoundPool: void pause(int)>:<public final>:<android.media.SoundPool>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>:<public>:<android.view.MenuInflater>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.base.FrameBranch:android.filterfw.core.Filter>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>:<public>:<android.view.View.AccessibilityDelegate>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaRecorder: void setCaptureRate(double)>:<public>:<android.media.MediaRecorder>
<android.view.ViewRootImpl: boolean enterTouchMode()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.animation.LayoutTransition: long access.200(android.animation.LayoutTransition)>:<static>:<android.animation.LayoutTransition>
<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig getConfig()>:<public>:<android.media.audiopolicy.AudioPolicy>
<android.media.browse.MediaBrowser.MediaServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.media.browse.MediaBrowser.MediaServiceConnection:android.content.ServiceConnection>
<android.media.AudioService.VolumeController: void postMasterVolumeChanged(int)>:<public>:<android.media.AudioService.VolumeController>
<android.widget.VideoView: void setVideoScale(int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.media.TtmlUtils: long parseTimeExpression(java.lang.String,int,int,int)>:<public static>:<android.media.TtmlUtils>
<android.media.MediaCodec.BufferMap: void put(int,android.media.Image)>:<public>:<android.media.MediaCodec.BufferMap>
<android.opengl.GLErrorWrapper: void glPointSizex(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.HardwareCanvas: void onPostDraw()>:<public abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.media.MediaPlayer.TrackInfo: int describeContents()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Object)>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.opengl.GLLogWrapper: void glClearColor(float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService.Stub.Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.media.SubtitleController: void hide()>:<public>:<android.media.SubtitleController>
<android.widget.ActivityChooserModel.ActivityResolveInfo: boolean equals(java.lang.Object)>:<public>:<android.widget.ActivityChooserModel.ActivityResolveInfo:java.lang.Comparable>
<android.media.browse.MediaBrowser: android.service.media.IMediaBrowserService access.1202(android.media.browse.MediaBrowser,android.service.media.IMediaBrowserService)>:<static>:<android.media.browse.MediaBrowser>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>:<public>:<android.media.AudioManager>
<android.database.ContentObservable: void notifyChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.widget.ActionMenuView: android.widget.ActionMenuView.OnMenuItemClickListener access.200(android.widget.ActionMenuView)>:<static>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setDate(int,int,int)>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.animation.Animator: void setTarget(java.lang.Object)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.database.AbstractWindowedCursor: double getDouble(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.media.TextTrackCue: void onTime(long)>:<public>:<android.media.TextTrackCue:android.media.SubtitleTrack.Cue>
<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context)>:<public>:<android.media.ClosedCaptionWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget,android.media.CCParser.DisplayListener>
<android.database.BulkCursorProxy: void close()>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.database.CursorWindow: boolean nativePutDouble(long,double,int,int)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES11Ext: void _nativeClassInit()>:<private static native>:<android.opengl.GLES11Ext>
<android.view.FocusFinderHelper: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.FocusFinderHelper>
<android.view.View: boolean isLongClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.filterpacks.base.RetargetFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.RetargetFilter:android.filterfw.core.Filter>
<android.media.tv.ITvInputSession.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputSession.Stub:android.os.Binder,android.media.tv.ITvInputSession>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.tv.TvView: void relayoutSessionOverlayView()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.ViewRootImpl: void requestTransparentRegion(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.ViewRootImpl: java.util.ArrayList getValidLayoutRequesters(java.util.ArrayList,boolean)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.accounts.ChooseAccountTypeActivity.ViewHolder: void <init>(android.accounts.ChooseAccountTypeActivity.1)>:<>:<android.accounts.ChooseAccountTypeActivity.ViewHolder>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.session.ISessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>:<public abstract>:<android.media.session.ISessionManager:android.os.IInterface>
<android.view.View: void setRotationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.IPrintManager: java.util.List getEnabledPrintServices(int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.media.MediaRouter.RouteGroup: void <init>(android.media.MediaRouter.RouteCategory)>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.MediaRouterClientState: java.lang.String toString()>:<public>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.media.audiofx.Visualizer: int native_getMeasurementMode()>:<private final native>:<android.media.audiofx.Visualizer>
<android.media.SubtitleController: void checkAnchorLooper()>:<private>:<android.media.SubtitleController>
<android.view.ViewGroup: int indexOfChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.IWindowSession: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.gesture.GestureOverlayView: void cancelGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView.1: void handleMessage(android.os.Message)>:<public>:<android.view.SurfaceView.1:android.os.Handler>
<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.service.voice.VoiceInteractionSession: boolean[] onGetSupportedCommands(android.service.voice.VoiceInteractionSession.Caller,java.lang.String[])>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.media.session.ISessionController: int getRatingType()>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper: void reportShown()>:<public>:<android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper:android.service.wallpaper.IWallpaperEngine.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.preference.DialogPreference: void setDialogMessage(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.database.BulkCursorToCursorAdaptor: boolean onMove(int,int)>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.filterpacks.performance.Throughput: void <init>(int,int,int,int)>:<public>:<android.filterpacks.performance.Throughput>
<android.media.CCParser.CCData: boolean isSpecialChar()>:<private>:<android.media.CCParser.CCData>
<android.widget.DayPickerView: java.util.Calendar findAccessibilityFocus()>:<private>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.view.SurfaceSession: void nativeDestroy(long)>:<private static native>:<android.view.SurfaceSession>
<android.widget.TextClock: void <init>(android.content.Context)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.IAudioService.Stub.Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.View: void addFocusables(java.util.ArrayList,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IRemoteVolumeObserver.Stub: void <init>()>:<public>:<android.media.IRemoteVolumeObserver.Stub:android.os.Binder,android.media.IRemoteVolumeObserver>
<android.opengl.GLSurfaceView.EglHelper: void <init>(java.lang.ref.WeakReference)>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.view.WindowManagerInternal: void showGlobalActions()>:<public abstract>:<android.view.WindowManagerInternal>
<android.view.GLES20Canvas: void nDrawLayer(long,long,float,float)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.service.notification.NotificationRankingUpdate.1: void <init>()>:<>:<android.service.notification.NotificationRankingUpdate.1:android.os.Parcelable.Creator>
<android.media.tv.ITvInputSession.Stub.Proxy: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.ITvInputSession.Stub.Proxy:android.media.tv.ITvInputSession>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getTintTarget(int,boolean)>:<private>:<android.widget.ProgressBar:android.view.View>
<android.media.AudioService.VolumeController: java.lang.String toString()>:<public>:<android.media.AudioService.VolumeController>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void notifyDateChanged()>:<private>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.widget.Editor.ActionPopupWindow: void initContentView()>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.media.MediaFocusControl: void onRcDisplayUpdate(android.media.PlayerRecord,int)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.media.MediaRouter: int findCallbackInfo(android.media.MediaRouter.Callback)>:<private>:<android.media.MediaRouter>
<android.view.InputDevice: int getProductId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.ImageReader: void <clinit>()>:<static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void <clinit>()>:<static>:<android.appwidget.AppWidgetHostView.ParcelableSparseArray:android.util.SparseArray,android.os.Parcelable>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.view.textservice.TextInfo: int getSequence()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.media.MediaFocusControl: void <init>(android.os.Looper,android.content.Context,android.media.AudioService.VolumeController,android.media.AudioService)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.view.accessibility.AccessibilityManager.MyHandler: void handleMessage(android.os.Message)>:<public>:<android.view.accessibility.AccessibilityManager.MyHandler:android.os.Handler>
<android.print.PrinterInfo: java.lang.String getDescription()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.tv.ITvInputSessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.media.MediaDrm.CryptoSession: byte[] decrypt(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult()>:<public volatile>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.view.View: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.media.tv.ITvInputClient.Stub.Proxy: void onSessionCreated(java.lang.String,android.os.IBinder,android.view.InputChannel,int)>:<public>:<android.media.tv.ITvInputClient.Stub.Proxy:android.media.tv.ITvInputClient>
<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)>:<public>:<android.view.ViewTreeObserver>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.filterpacks.ui.SurfaceTargetFilter: void close(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.ui.SurfaceTargetFilter:android.filterfw.core.Filter>
<android.view.ViewRootImpl.5: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.5:java.lang.Runnable>
<android.media.tv.TvStreamConfig: int getMaxWidth()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy:android.service.persistentdata.IPersistentDataBlockService>
<android.opengl.GLES20: void glDetachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.gesture.GestureOverlayView: boolean isGesturing()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioService: void access.8800(android.media.AudioService,android.content.ContentResolver)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioSystem: boolean isMicrophoneMuted()>:<public static native>:<android.media.AudioSystem>
<android.media.Metadata: byte[] getByteArray(int)>:<public>:<android.media.Metadata>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.inputmethod.InputBinding.1: android.view.inputmethod.InputBinding createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.InputBinding.1:android.os.Parcelable.Creator>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: android.view.AccessibilityIterators.ParagraphTextSegmentIterator getInstance()>:<public static>:<android.view.AccessibilityIterators.ParagraphTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator>
<android.media.tv.TvInputManager.Session: void invokeFinishedInputEventCallback(android.media.tv.TvInputManager.Session.PendingEvent,boolean)>:<>:<android.media.tv.TvInputManager.Session>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.database.sqlite.SQLiteConnectionPool: void discardAcquiredConnectionsLocked()>:<private>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.Metadata: boolean checkMetadataId(int)>:<private>:<android.media.Metadata>
<android.widget.SearchView: void onQueryRefine(java.lang.CharSequence)>:<>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.animation.DecelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator,com.android.internal.view.animation.NativeInterpolatorFactory>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.DisplayInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.widget.DayPickerView: int getMostVisiblePosition()>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(java.lang.String)>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.media.MediaMuxer: void nativeStart(long)>:<private static native>:<android.media.MediaMuxer>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.OnEnableStatusChangeListener access.000(android.media.audiofx.AudioEffect)>:<static>:<android.media.audiofx.AudioEffect>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType,boolean,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RadialTimePickerView: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.view.ViewRootImpl: void performTraversals()>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>:<public>:<android.media.RingtoneManager>
<android.widget.Toolbar.1: boolean onMenuItemClick(android.view.MenuItem)>:<public>:<android.widget.Toolbar.1:android.widget.ActionMenuView.OnMenuItemClickListener>
<android.media.MediaScanner: android.net.Uri scanSingleFile(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.media.MediaScanner>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.CursorWrapper: double getDouble(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.View: boolean isLayoutDirectionResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setSelectedWeekBackgroundColor(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent,boolean)>:<public>:<android.preference.GenericInflater>
<android.service.persistentdata.PersistentDataBlockManager: void wipe()>:<public>:<android.service.persistentdata.PersistentDataBlockManager>
<android.view.View: void measure(int,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureSupported(java.lang.String)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.widget.AutoCompleteTextView: boolean isDropDownDismissedOnCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewRootImpl: void forceLayout(android.view.View)>:<private static>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.session.ISessionManager.Stub.Proxy: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>:<public>:<android.media.session.ISessionManager.Stub.Proxy:android.media.session.ISessionManager>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.IAccountManager: java.lang.String getPassword(android.accounts.Account)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.media.AudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.opengl.GLES10: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES10>
<android.widget.ExpandableListView: boolean isRtlCompatibilityMode()>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvView: void release()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<androidhwext.R.attr: void <init>()>:<public>:<androidhwext.R.attr>
<android.media.VolumeProvider.Callback: void <init>()>:<public>:<android.media.VolumeProvider.Callback>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorTreeAdapter.ViewBinder>
<android.media.MediaMetadataEditor: void removeEditableKeys()>:<public>:<android.media.MediaMetadataEditor>
<android.widget.AdapterView: void access.000(android.widget.AdapterView,android.os.Parcelable)>:<static>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.ValueAnimator: void access.100(android.animation.ValueAnimator,android.animation.ValueAnimator.AnimationHandler)>:<static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.RelativeLayout: void alignBaseline(android.view.View,android.widget.RelativeLayout.LayoutParams)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int native_set_playback_rate(int)>:<private final native>:<android.media.AudioTrack>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>:<public>:<android.media.RemoteControlClient>
<android.view.View: boolean canScrollVertically(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.view.RenderNode: boolean hasOverlappingRendering()>:<public>:<android.view.RenderNode>
<android.media.MediaMetadata.1: android.media.MediaMetadata createFromParcel(android.os.Parcel)>:<public>:<android.media.MediaMetadata.1:android.os.Parcelable.Creator>
<android.database.CursorWindow: byte[] getBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.SoundPool.SoundPoolImpl: void setLoop(int,int)>:<public final native>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.inputmethod.EditorInfo.1: android.view.inputmethod.EditorInfo createFromParcel(android.os.Parcel)>:<public>:<android.view.inputmethod.EditorInfo.1:android.os.Parcelable.Creator>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo build()>:<public>:<android.print.PrinterInfo.Builder>
<android.view.IWindowManager.Stub.Proxy: void clearForcedDisplayDensity(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.media.RingtoneManager: void setFilterColumnsList(int)>:<private>:<android.media.RingtoneManager>
<android.security.IKeyChainAliasCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.security.IKeyChainAliasCallback.Stub.Proxy:android.security.IKeyChainAliasCallback>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.filterpacks.imageproc.ToGrayFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.ToGrayFilter:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>:<public>:<android.view.SurfaceControl>
<android.media.MediaPlayer: void _stop()>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getIndeterminateTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache access.400(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.view.AbsSavedState: void <init>()>:<private>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.GraphicBuffer: boolean nUnlockCanvasAndPost(long,android.graphics.Canvas)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: boolean finishComposingText()>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.database.MergeCursor: int getCount()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.MediaFocusControl: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.animation.Animation: void fireAnimationEnd()>:<private>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.ViewRootImpl.InputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>:<protected>:<android.view.ViewRootImpl.InputStage>
<android.filterpacks.imageproc.FillLightFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.FillLightFilter:android.filterfw.core.Filter>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback)>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>:<private>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1: void run(android.accounts.AccountManagerFuture)>:<public>:<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.1:android.accounts.AccountManagerCallback>
<android.media.tv.ITvInputSessionCallback: void onVideoUnavailable(int)>:<public abstract>:<android.media.tv.ITvInputSessionCallback:android.os.IInterface>
<android.widget.VideoView: void onDetachedFromWindow()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.service.fingerprint.IFingerprintServiceReceiver: void onError(int)>:<public abstract>:<android.service.fingerprint.IFingerprintServiceReceiver:android.os.IInterface>
<android.view.inputmethod.InputMethodSubtypeArray: void <init>(java.util.List)>:<public>:<android.view.inputmethod.InputMethodSubtypeArray>
<android.view.textservice.SpellCheckerSubtype: int getNameResId()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.WindowManagerPolicy.WindowState: boolean isVoiceInteraction()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.media.IAudioService: void setMicrophoneMute(boolean,java.lang.String)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy: void setPerformAccessibilityActionResult(boolean,int)>:<public>:<android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub.Proxy:android.view.accessibility.IAccessibilityInteractionConnectionCallback>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void reevaluateStatusBarSize(boolean)>:<public abstract>:<android.view.WindowManagerPolicy.WindowManagerFuncs>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter access.700(android.widget.AutoCompleteTextView)>:<static>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.SepiaFilter:android.filterfw.core.Filter>
<android.accounts.IAccountManager.Stub.Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.media.MediaCodec: void validateOutputByteBuffer(java.nio.ByteBuffer[],int,android.media.MediaCodec.BufferInfo)>:<private final>:<android.media.MediaCodec>
<android.media.AudioTrack: int native_set_marker_pos(int)>:<private final native>:<android.media.AudioTrack>
<android.view.accessibility.AccessibilityNodeInfo: void clear()>:<private>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService access.800(android.service.voice.AlwaysOnHotwordDetector)>:<static>:<android.service.voice.AlwaysOnHotwordDetector>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.StackView: void showNext()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceGroup: boolean removePreferenceInt(android.preference.Preference)>:<private>:<android.preference.PreferenceGroup:android.preference.Preference,android.preference.GenericInflater.Parent>
<android.media.AudioService: boolean isMasterMute()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.RenderNode: void <init>(long)>:<private>:<android.view.RenderNode>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.print.IPrintManager: java.util.List getPrintJobInfos(int,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>:<private>:<android.view.LayoutInflater>
<android.media.browse.MediaBrowser: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.browse.MediaBrowser>
<android.widget.ActionMenuView: boolean getFormatItems()>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.service.dreams.DreamService: void onDestroy()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: void onClose()>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CursorFactory>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.MultiCheckPreference.SavedState: void <clinit>()>:<static>:<android.preference.MultiCheckPreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.service.media.MediaBrowserService.ServiceBinder.1: void <init>(android.service.media.MediaBrowserService.ServiceBinder,android.service.media.IMediaBrowserServiceCallbacks,java.lang.String,android.os.Bundle,int)>:<>:<android.service.media.MediaBrowserService.ServiceBinder.1:java.lang.Runnable>
<android.media.tv.TvContract: boolean isTwoSegmentUriStartingWith(android.net.Uri,java.lang.String)>:<private static final>:<android.media.tv.TvContract>
<android.media.session.MediaSessionLegacyHelper.SessionHolder: void <init>(android.media.session.MediaSessionLegacyHelper,android.media.session.MediaSession,android.app.PendingIntent)>:<public>:<android.media.session.MediaSessionLegacyHelper.SessionHolder>
<android.view.View: void setTranslationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioService: java.lang.Object access.3100(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaRouter: void dispatchRouteUngrouped(android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<static>:<android.media.MediaRouter>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: android.view.InputEvent copy()>:<public volatile>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.accounts.AbstractAccountAuthenticator: void handleException(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>:<private>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.NumberPicker.2: boolean onLongClick(android.view.View)>:<public>:<android.widget.NumberPicker.2:android.view.View.OnLongClickListener>
<android.widget.Editor.TextModifyOperation.1: void <init>()>:<>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>:<public>:<android.media.MediaCodec>
<android.opengl.GLErrorWrapper: void glGetPointerv(int,java.nio.Buffer[])>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.IApplicationToken: long getKeyDispatchingTimeout()>:<public abstract>:<android.view.IApplicationToken:android.os.IInterface>
<android.widget.TextView.Marquee: void stop()>:<>:<android.widget.TextView.Marquee>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.imageproc.DuotoneFilter: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession: void onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>:<public>:<android.service.textservice.SpellCheckerService.InternalISpellCheckerSession:com.android.internal.textservice.ISpellCheckerSession.Stub>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.preference.Preference: void <init>(android.content.Context)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.IAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.Display: boolean hasAccess(int,int,int)>:<public static>:<android.view.Display>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hsm.HwSystemManager.HsmInterface: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.media.IAudioService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.MotionEvent: float getYPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceGroupAdapter: long getItemId(int)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.ActionMenuView: void dismissPopupMenus()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.print.IPrintManager: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>:<public abstract>:<android.print.IPrintManager:android.os.IInterface>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setFocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler: void <init>(android.netdetect.HwCustNetDetectServiceImpl,android.netdetect.HwCustNetDetectServiceImpl.1)>:<>:<android.netdetect.HwCustNetDetectServiceImpl.WebDetectHandler:android.os.Handler>
<android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.ITvInputManager.Stub.Proxy: void releaseSession(android.os.IBinder,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.widget.DatePicker: long getMinDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Window: void setCallback(android.view.Window.Callback)>:<public>:<android.view.Window>
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.SeekBarVolumizer: void onRestoreInstanceState(android.preference.VolumePreference.VolumeStore)>:<public>:<android.preference.SeekBarVolumizer:android.widget.SeekBar.OnSeekBarChangeListener,android.os.Handler.Callback>
<android.view.InputDevice.MotionRange: float getResolution()>:<public>:<android.view.InputDevice.MotionRange>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String getMediaId()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.widget.AbsListView.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TabHost: void addHwTab(android.view.View)>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.PreferenceGroupAdapter: void addPreferenceClassName(android.preference.Preference)>:<private>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.database.sqlite.JankSqlite: long access.000()>:<static>:<android.database.sqlite.JankSqlite>
<android.view.PointerIcon.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.PointerIcon.1:android.os.Parcelable.Creator>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioManager: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>:<public>:<android.media.AudioManager>
<android.media.tv.TvInputManager: java.lang.Object access.1400(android.media.tv.TvInputManager)>:<static>:<android.media.tv.TvInputManager>
<android.widget.HwSplineOverScrollerDummy: double getCubicDistance(double,int,int,long,long)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.service.dreams.IDreamManager.Stub.Proxy: void startDozing(android.os.IBinder,int,int)>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.widget.Editor.ActionPopupWindow: void setReplaceTextView(android.widget.TextView)>:<protected>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>:<public>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.view.ViewPropertyAnimator.1: void run()>:<public>:<android.view.ViewPropertyAnimator.1:java.lang.Runnable>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.print.PrinterCapabilitiesInfo.1: android.print.PrinterCapabilitiesInfo[] newArray(int)>:<public>:<android.print.PrinterCapabilitiesInfo.1:android.os.Parcelable.Creator>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>:<public>:<android.media.JetPlayer>
<android.database.sqlite.SQLiteCursor: boolean requery()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.MotionEvent: int getSource()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.FastScroller: void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect)>:<protected>:<android.widget.FastScroller>
<android.animation.RevealAnimator: void onFinished()>:<protected>:<android.animation.RevealAnimator:android.view.RenderNodeAnimator,android.animation.Animator>
<android.media.AudioService.AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.media.AudioService.AudioServiceBroadcastReceiver:android.content.BroadcastReceiver>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.AccessibilityIterators.CharacterTextSegmentIterator:android.view.AccessibilityIterators.AbstractTextSegmentIterator,android.content.ComponentCallbacks>
<android.gesture.GestureUtils: float squaredEuclideanDistance(float[],float[])>:<static>:<android.gesture.GestureUtils>
<android.view.MotionEvent: float getHistoricalY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.GridLayout.Axis: void <init>(android.widget.GridLayout,boolean)>:<private>:<android.widget.GridLayout.Axis>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.view.MenuItem>
<android.media.IRemoteControlClient: void informationRequestForDisplay(android.media.IRemoteControlDisplay,int,int)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.View.MeasureSpec: int getSize(int)>:<public static>:<android.view.View.MeasureSpec>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputHardwareInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.tv.TvInputHardwareInfo.1:android.os.Parcelable.Creator>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>:<public static>:<android.database.sqlite.SqliteWrapper>
<android.database.ContentObserver: void onChange(boolean)>:<public>:<android.database.ContentObserver>
<android.widget.GridLayout.Axis: void layout(int)>:<public>:<android.widget.GridLayout.Axis>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.SoundPool.Builder>
<android.media.MediaRouterClientState: void <clinit>()>:<static>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.accounts.AccountManagerResponse.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.accounts.AccountManagerResponse.1:android.os.Parcelable.Creator>
<android.database.Cursor: int getCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onEnabledChanged(boolean)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.StackView: void beginGestureIfNeeded(float)>:<private>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioManager: android.media.AudioManager.OnAudioFocusChangeListener findFocusListener(java.lang.String)>:<private>:<android.media.AudioManager>
<android.view.ViewDebug.FlagToString: boolean outputIf()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.widget.Gallery: int getLimitedMotionScrollAmount(boolean,int)>:<>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.animation.ScaleAnimation: void initializePivotPoint()>:<private>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.view.IWindowSessionCallback.Stub: void <init>()>:<public>:<android.view.IWindowSessionCallback.Stub:android.os.Binder,android.view.IWindowSessionCallback>
<android.widget.FastScroller: int getWidth()>:<public>:<android.widget.FastScroller>
<android.view.ViewPropertyAnimator: void startAnimation()>:<private>:<android.view.ViewPropertyAnimator>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.service.trust.ITrustAgentService.Stub: android.service.trust.ITrustAgentService asInterface(android.os.IBinder)>:<public static>:<android.service.trust.ITrustAgentService.Stub:android.os.Binder,android.service.trust.ITrustAgentService>
<android.printservice.PrinterDiscoverySession: void onValidatePrinters(java.util.List)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.opengl.GLLogWrapper: boolean glIsRenderbufferOES(int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioRoutesObserver.Stub: android.media.IAudioRoutesObserver asInterface(android.os.IBinder)>:<public static>:<android.media.IAudioRoutesObserver.Stub:android.os.Binder,android.media.IAudioRoutesObserver>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,int[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl: void requestLayout()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.Display: int getFlags()>:<public>:<android.view.Display>
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.MediaController.1: void <init>(android.widget.MediaController)>:<>:<android.widget.MediaController.1:android.view.View.OnLayoutChangeListener>
<android.opengl.GLES20: void glCullFace(int)>:<public static native>:<android.opengl.GLES20>
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.AudioAttributes: int access.100(android.media.AudioAttributes)>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.MediaScanner: void pruneDeadThumbnailFiles()>:<private>:<android.media.MediaScanner>
<android.animation.RevealAnimator: void <init>(android.view.View,int,int,float,float)>:<public>:<android.animation.RevealAnimator:android.view.RenderNodeAnimator,android.animation.Animator>
<android.widget.GridView: void fillGap(boolean)>:<>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioRoutesInfo.1: void <init>()>:<>:<android.media.AudioRoutesInfo.1:android.os.Parcelable.Creator>
<android.media.MediaRouter.Static: void startMonitoringRoutes(android.content.Context)>:<>:<android.media.MediaRouter.Static:android.hardware.display.DisplayManager.DisplayListener>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.VideoView.7: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.widget.VideoView.7:android.view.SurfaceHolder.Callback>
<android.accounts.IAccountManager.Stub.Proxy: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.media.AudioGain: int rampDurationMinMs()>:<public>:<android.media.AudioGain>
<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>:<public static>:<android.view.WindowManagerGlobal>
<android.view.ViewRootImpl: void cancelInvalidate(android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.media.projection.IMediaProjectionManager.Stub.Proxy: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>:<public>:<android.media.projection.IMediaProjectionManager.Stub.Proxy:android.media.projection.IMediaProjectionManager>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioService.StreamOverride: void <init>()>:<private>:<android.media.AudioService.StreamOverride:android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.opengl.GLLogWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void setOverScrollMode(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: boolean isStripEnabled()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.IWindowSession.Stub.Proxy: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.Editor.SelectionModifierCursorController: void setMinTouchOffset(int)>:<public>:<android.widget.Editor.SelectionModifierCursorController:android.widget.Editor.CursorController>
<android.widget.ProgressBar: boolean access.302(android.widget.ProgressBar,boolean)>:<static>:<android.widget.ProgressBar:android.view.View>
<android.media.IRemoteDisplayCallback.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IRemoteDisplayCallback.Stub.Proxy:android.media.IRemoteDisplayCallback>
<android.preference.Preference: boolean persistLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.SpellChecker: android.text.style.SpellCheckSpan onGetSuggestionsInternal(android.view.textservice.SuggestionsInfo,int,int)>:<private>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.widget.GridView: void smoothScrollByOffset(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RatingBar: void onProgressRefresh(float,boolean)>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.VideoView: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.opengl.GLLogWrapper: void glTexParameterx(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.AbsListView.3: void run()>:<public>:<android.widget.AbsListView.3:java.lang.Runnable>
<android.database.sqlite.JankSqlite.DBOprMonitor: boolean addOpr(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite.DBOprMonitor>
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.service.voice.VoiceInteractionService: void access.000(android.service.voice.VoiceInteractionService)>:<static>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.ISession.Stub.Proxy: void setExtras(android.os.Bundle)>:<public>:<android.media.session.ISession.Stub.Proxy:android.media.session.ISession>
<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])>:<public>:<android.security.Credentials>
<android.media.effect.EffectFactory: java.lang.Class getEffectClassByName(java.lang.String)>:<private static>:<android.media.effect.EffectFactory>
<android.widget.AutoCompleteTextView: void ensureImeVisible(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.WindowId.FocusObserver: void onFocusLost(android.view.WindowId)>:<public abstract>:<android.view.WindowId.FocusObserver>
<android.widget.TextView: void startStopMarquee(boolean)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setTextAlignment(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl: boolean performHapticFeedback(int,boolean)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk dumpDisplayLists(android.view.View,android.view.View)>:<private>:<android.ddm.DdmHandleViewDebug:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()>:<>:<android.preference.Preference:java.lang.Comparable>
<android.view.OrientationEventListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationEventListener>
<android.media.tv.TvInputService.Session: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.animation.StateListAnimator: void setTarget(android.view.View)>:<public>:<android.animation.StateListAnimator>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.widget.RelativeLayout: void applyVerticalSizeRules(android.widget.RelativeLayout.LayoutParams,int)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getTotalPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES10: void glLineWidth(float)>:<public static native>:<android.opengl.GLES10>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.print.PrintJobId: int describeContents()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.view.ViewGroup.ViewLocationHolder: android.view.ViewGroup.ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>:<public static>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.view.Window: void setLocalFocus(boolean,boolean)>:<public>:<android.view.Window>
<android.widget.GridView: int getNumColumns()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioService: void setBluetoothA2dpOnInt(boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Filter: void setDelayer(android.widget.Filter.Delayer)>:<public>:<android.widget.Filter>
<android.media.AudioService: void playSoundEffect(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.security.IKeystoreService: byte[] get_pubkey(java.lang.String)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.service.voice.VoiceInteractionSession.Request.1: void cancel()>:<public>:<android.service.voice.VoiceInteractionSession.Request.1:com.android.internal.app.IVoiceInteractorRequest.Stub>
<android.media.UnstyledTextExtractor: void onData(java.lang.String)>:<public>:<android.media.UnstyledTextExtractor:android.media.Tokenizer.OnTokenListener>
<android.media.JetPlayer: boolean native_setup(java.lang.Object,int,int)>:<private final native>:<android.media.JetPlayer>
<android.widget.AppSecurityPermissions.MyPermissionGroupInfo: void <init>(android.content.pm.PermissionInfo)>:<>:<android.widget.AppSecurityPermissions.MyPermissionGroupInfo:android.content.pm.PermissionGroupInfo,android.content.pm.PackageItemInfo>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.filterpacks.imageproc.GrainFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.GrainFilter:android.filterfw.core.Filter>
<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRecorder.EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>:<public>:<android.media.MediaRecorder.EventHandler:android.os.Handler>
<android.widget.PopupMenu: void show()>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.IRemoteVolumeObserver: void dispatchRemoteVolumeUpdate(int,int)>:<public abstract>:<android.media.IRemoteVolumeObserver:android.os.IInterface>
<android.widget.SearchView: int getSuggestionRowLayout()>:<>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.preference.Preference: void unregisterDependency()>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.animation.ValueAnimator: void endAnimation(android.animation.ValueAnimator.AnimationHandler)>:<protected>:<android.animation.ValueAnimator:android.animation.Animator>
<android.animation.ValueAnimator: void setStartDelay(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewDebug: void stopRecyclerTracing()>:<public static>:<android.view.ViewDebug>
<android.widget.Spinner.DropDownAdapter: int getViewTypeCount()>:<public>:<android.widget.Spinner.DropDownAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.service.voice.VoiceInteractionSession.MyCallbacks: void executeMessage(android.os.Message)>:<public>:<android.service.voice.VoiceInteractionSession.MyCallbacks:com.android.internal.os.HandlerCaller.Callback,android.inputmethodservice.SoftInputWindow.Callback>
<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager.LayoutParams,android.view.View)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.view.GLES20Canvas: void nDrawTextOnPath(long,java.lang.String,int,int,long,float,float,int,long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.IVolumeController.Stub: android.media.IVolumeController asInterface(android.os.IBinder)>:<public static>:<android.media.IVolumeController.Stub:android.os.Binder,android.media.IVolumeController>
<android.media.RemoteDisplay.Listener: void onDisplayError(int)>:<public abstract>:<android.media.RemoteDisplay.Listener>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.WebVttRenderingWidget.CueLayout: android.media.TextTrackCue getCue()>:<public>:<android.media.WebVttRenderingWidget.CueLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.SubtitleTrack.CueList: void removeEvent(android.media.SubtitleTrack.Cue,long)>:<private>:<android.media.SubtitleTrack.CueList>
<android.test.AndroidTestCase: void setUp()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>:<private>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.animation.ObjectAnimator: java.lang.String getNameForTrace()>:<>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.WindowManagerPolicy: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.view.Display: android.view.DisplayAdjustments getDisplayAdjustments()>:<public>:<android.view.Display>
<android.service.textservice.SpellCheckerService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.LayoutTransition.5: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.LayoutTransition.5:android.animation.AnimatorListenerAdapter>
<android.security.IKeystoreService: int del(java.lang.String,int)>:<public abstract>:<android.security.IKeystoreService:android.os.IInterface>
<android.print.PrintAttributes.MediaSize: java.lang.String toString()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.media.MediaFocusControl: void sendSimulatedMediaButtonEvent(android.view.KeyEvent,boolean)>:<private>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.widget.Editor: void onDetachedFromWindow()>:<>:<android.widget.Editor>
<android.opengl.GLLogWrapper: java.lang.String getShadeModel(int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void postSendViewScrolledAccessibilityEventCallback()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: float getTouchMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrintJob: void <init>(android.print.PrintJobInfo,android.print.PrintManager)>:<>:<android.print.PrintJob>
<android.widget.AbsListView.RecycleBin: android.view.View retrieveFromScrap(java.util.ArrayList,int)>:<private>:<android.widget.AbsListView.RecycleBin>
<android.security.KeyStore.State: android.security.KeyStore.State valueOf(java.lang.String)>:<public static>:<android.security.KeyStore.State:java.lang.Enum>
<android.widget.TextView: int length()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setTranslationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>:<public>:<android.media.session.MediaSessionManager>
<android.view.View: boolean isInScrollingContainer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.JetPlayer: boolean native_setMuteFlags(int,boolean)>:<private final native>:<android.media.JetPlayer>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onUserContextChanged()>:<public abstract>:<android.view.WindowManagerInternal.MagnificationCallbacks>
<android.media.RemoteControlClient: android.graphics.Bitmap access.200(android.media.RemoteControlClient)>:<static>:<android.media.RemoteControlClient>
<android.view.View: void dispatchScreenStateChanged(int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputBinding: int describeContents()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.media.MediaFocusControl.AudioFocusDeathHandler: void binderDied()>:<public>:<android.media.MediaFocusControl.AudioFocusDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>:<public>:<android.view.VelocityTracker>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.notification.NotificationListenerService.RankingMap.1: android.service.notification.NotificationListenerService.RankingMap createFromParcel(android.os.Parcel)>:<public>:<android.service.notification.NotificationListenerService.RankingMap.1:android.os.Parcelable.Creator>
<android.database.sqlite.SQLiteException: void <init>()>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaCodecInfo.AudioCapabilities: void initWithPlatformLimits()>:<private>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.Editor.InsertionPointCursorController: void show()>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.view.ViewDebug: android.graphics.Bitmap performViewCapture(android.view.View,boolean)>:<private static>:<android.view.ViewDebug>
<android.view.View: boolean dispatchPointerEvent(android.view.MotionEvent)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvTrackInfo: int describeContents()>:<public>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteConnection: void recyclePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.view.ViewTreeObserver: void dispatchOnWindowAttachedChange(boolean)>:<final>:<android.view.ViewTreeObserver>
<android.database.sqlite.JankSqlite: boolean addQuery(long,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.JankSqlite>
<android.preference.RingtonePreference: void onClick()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDU(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHeap:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(android.view.View)>:<public>:<android.view.View.AccessibilityDelegate>
<android.media.MediaFocusControl: void postReevaluateRemote()>:<protected>:<android.media.MediaFocusControl:android.app.PendingIntent.OnFinished>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLErrorWrapper: void glSampleCoverage(float,boolean)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.ViewRootImpl: int getTextDirection()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.widget.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)>:<public>:<android.widget.ActionMenuPresenter:com.android.internal.view.menu.BaseMenuPresenter,android.view.ActionProvider.SubUiVisibilityListener>
<android.media.audiofx.AudioEffect: boolean isEffectTypeAvailable(java.util.UUID)>:<public static>:<android.media.audiofx.AudioEffect>
<android.view.View: void <init>()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputConnectionWrapper: boolean requestCursorUpdates(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.FastScroller: boolean getLayoutFromRight()>:<protected>:<android.widget.FastScroller>
<android.print.PrintJobInfo: int getCopies()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>:<private>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLErrorWrapper: void glColor4f(float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.service.voice.VoiceInteractionService: void onSoundModelsChangedInternal()>:<private>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaScanner: void cachePlaylistEntry(java.lang.String,java.lang.String)>:<private>:<android.media.MediaScanner>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder generation(int)>:<public>:<android.media.tv.TvStreamConfig.Builder>
<android.view.textservice.SpellCheckerSession.InternalListener: void <init>(android.view.textservice.SpellCheckerSession.SpellCheckerSessionListenerImpl)>:<public>:<android.view.textservice.SpellCheckerSession.InternalListener:com.android.internal.textservice.ITextServicesSessionListener.Stub>
<android.widget.ExpandableListView: boolean expandGroup(int,boolean)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix build()>:<public>:<android.media.audiopolicy.AudioMix.Builder>
<android.media.audiofx.EnvironmentalReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.widget.RemoteViews.SetOnClickPendingIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.SetOnClickPendingIntent:android.widget.RemoteViews.Action>
<android.database.AbstractCursor: boolean isLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.AudioService: void setBluetoothScoOn(boolean)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RadioGroup: int access.400(android.widget.RadioGroup)>:<static>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewDebug.1: void run()>:<public>:<android.view.ViewDebug.1:java.lang.Runnable>
<android.media.session.PlaybackState.CustomAction.1: void <init>()>:<>:<android.media.session.PlaybackState.CustomAction.1:android.os.Parcelable.Creator>
<android.widget.HwAbsListView: int getElasticInterpolation(int,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.media.RemoteController: android.media.RemoteController.RcDisplay getRcDisplay()>:<>:<android.media.RemoteController>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.base.InputStreamSource: void process(android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.InputStreamSource:android.filterfw.core.Filter>
<android.view.View: boolean hasOpaqueScrollbars()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<huawei.android.net.wifi.HwCustWifiManager: void <init>()>:<public>:<huawei.android.net.wifi.HwCustWifiManager:android.net.wifi.IHwCustWifiManager>
<android.media.AudioManager: int getStreamMaxVolume(int)>:<public>:<android.media.AudioManager>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.accessibility.IAccessibilityManagerClient.Stub: android.os.IBinder asBinder()>:<public>:<android.view.accessibility.IAccessibilityManagerClient.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManagerClient>
<android.widget.ProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.preference.PreferenceActivity.Header: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.printservice.PrintService.1: void setClient(android.printservice.IPrintServiceClient)>:<public>:<android.printservice.PrintService.1:android.printservice.IPrintService.Stub,android.os.Binder>
<android.opengl.GLLogWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.CalendarView.LegacyCalendarViewDelegate: int access.1102(android.widget.CalendarView.LegacyCalendarViewDelegate,int)>:<static>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)>:<public static final>:<android.media.MediaFormat>
<android.view.IWindowManager.Stub.Proxy: void enableScreenIfNeeded()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.View: void invalidateInternal(int,int,int,int,boolean,boolean)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: void recycle()>:<>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.view.MotionEvent: void <clinit>()>:<static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.ResampleInputStream: void fir21(byte[],int,byte[],int,int)>:<private static native>:<android.media.ResampleInputStream:java.io.InputStream>
<android.preference.SwitchPreference.Listener: void <init>(android.preference.SwitchPreference)>:<private>:<android.preference.SwitchPreference.Listener:android.widget.CompoundButton.OnCheckedChangeListener>
<android.view.ViewRootImpl.W: void dispatchGetNewSurface()>:<public>:<android.view.ViewRootImpl.W:android.view.IWindow.Stub,android.os.Binder>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.view.View: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.LayoutTransition.TransitionListener: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.view.ViewGroup.MarginLayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.ActionMenuView: void setPopupTheme(int)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.widget.TextView: void stopSelectionActionMode()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: int viewportToContentVerticalOffsetOuter()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.SRTTrack: long parseMs(java.lang.String)>:<private static>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.print.PrintManager.PrintDocumentAdapterDelegate: boolean isDestroyedLocked()>:<private>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.view.View: int getScrollBarFadeDuration()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()>:<final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.media.RemoteController: int[] getArtworkSize()>:<>:<android.media.RemoteController>
<android.media.MediaRouter.RouteInfo: int getSupportedTypes()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.media.tv.TvInputManager.SessionCallbackRecord: android.media.tv.TvInputManager.SessionCallback access.000(android.media.tv.TvInputManager.SessionCallbackRecord)>:<static>:<android.media.tv.TvInputManager.SessionCallbackRecord>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.SurfaceControl: void nativeOpenTransaction()>:<private static native>:<android.view.SurfaceControl>
<android.view.MotionEvent.PointerCoords: void <init>()>:<public>:<android.view.MotionEvent.PointerCoords>
<android.printservice.PrintServiceInfo: android.printservice.PrintServiceInfo create(android.content.pm.ResolveInfo,android.content.Context)>:<public static>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.widget.DatePickerController: int getMinDay()>:<public abstract>:<android.widget.DatePickerController>
<android.view.Nsd: void setCmdStopFlag(int)>:<public static>:<android.view.Nsd>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLErrorWrapper: void glDisable(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.IAudioService.Stub.Proxy: boolean loadSoundEffects()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewRootImpl: void setRefreshDirty(android.graphics.Rect)>:<private>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.IAudioService.Stub.Proxy: boolean isCameraSoundForced()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.preference.SwitchPreference.Listener: void <init>(android.preference.SwitchPreference,android.preference.SwitchPreference.1)>:<>:<android.preference.SwitchPreference.Listener:android.widget.CompoundButton.OnCheckedChangeListener>
<android.media.tv.ITvInputHardwareCallback.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.tv.ITvInputHardwareCallback.Stub:android.os.Binder,android.media.tv.ITvInputHardwareCallback>
<android.widget.ProgressBar: void onDetachedFromWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.media.AudioService: void dumpStreamStates(java.io.PrintWriter)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.Editor.HandleView: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.view.MotionEvent: float getRawY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void setHintTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.RenderNode: float getRotation()>:<public>:<android.view.RenderNode>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.view.RenderNodeAnimator: java.lang.Object clone()>:<public volatile>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.IMediaScannerService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IMediaScannerService.Stub:android.os.Binder,android.media.IMediaScannerService>
<android.media.MediaDescription: void <clinit>()>:<static>:<android.media.MediaDescription:android.os.Parcelable>
<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLSurfaceView.GLThread: void stopEglSurfaceLocked()>:<private>:<android.opengl.GLSurfaceView.GLThread:java.lang.Thread>
<android.printservice.PrintService: void onPrintJobQueued(android.printservice.PrintJob)>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.Ringtone>
<android.media.AudioTrack: int native_get_latency()>:<private final native>:<android.media.AudioTrack>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>:<public abstract>:<android.view.ViewParent>
<android.print.PrintJobInfo.1: android.print.PrintJobInfo[] newArray(int)>:<public>:<android.print.PrintJobInfo.1:android.os.Parcelable.Creator>
<android.preference.TwoStatePreference.SavedState.1: void <init>()>:<>:<android.preference.TwoStatePreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.accessibility.AccessibilityRecord: void recycle()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.SurfaceView: void <clinit>()>:<static>:<android.view.SurfaceView:android.view.View>
<android.widget.TimePickerSpinnerDelegate: void updateUI(int)>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.media.AudioService: int getHwSafeMediaVolumeIndex()>:<protected>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionService.1: void ready()>:<public>:<android.service.voice.VoiceInteractionService.1:android.service.voice.IVoiceInteractionService.Stub,android.os.Binder>
<android.view.ScaleGestureDetector: float getCurrentSpanX()>:<public>:<android.view.ScaleGestureDetector>
<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.dreams.Sandman: void <clinit>()>:<static>:<android.service.dreams.Sandman>
<android.media.session.ISessionCallback: void onRate(android.media.Rating)>:<public abstract>:<android.media.session.ISessionCallback:android.os.IInterface>
<android.view.View: int getMinimumHeight()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IWindowManager.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.view.IWindowManager.Stub:android.os.Binder,android.view.IWindowManager>
<android.media.MediaInserter: void insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.media.MediaInserter>
<android.view.ViewRootImpl: void doDie()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.AudioService: boolean isStreamMute(int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.widget.ListPopupWindow.3: void onNothingSelected(android.widget.AdapterView)>:<public>:<android.widget.ListPopupWindow.3:android.widget.AdapterView.OnItemSelectedListener>
<android.view.IWindowSessionCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.view.IWindowSessionCallback.Stub.Proxy:android.view.IWindowSessionCallback>
<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.AudioPort: android.media.AudioHandle handle()>:<>:<android.media.AudioPort>
<android.view.View.3: java.lang.Float get(android.view.View)>:<public>:<android.view.View.3:android.util.FloatProperty>
<android.opengl.GLException: void <init>(int)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceGroupAdapter: boolean isEnabled(int)>:<public>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.widget.ScrollBarDrawable: int getOpacity()>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.view.GLES20Canvas: void nSetProperty(java.lang.String,java.lang.String)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.print.PrintAttributes.1: android.print.PrintAttributes[] newArray(int)>:<public>:<android.print.PrintAttributes.1:android.os.Parcelable.Creator>
<android.view.View: void invalidateParentIfNeeded()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioManager: void playSoundEffect(int)>:<public>:<android.media.AudioManager>
<android.widget.RemoteViewsAdapter: int getCount()>:<public>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.WindowInfo: android.view.WindowInfo obtain()>:<public static>:<android.view.WindowInfo:android.os.Parcelable>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setCurrentLocale(java.util.Locale)>:<protected>:<android.widget.CalendarView.AbstractCalendarViewDelegate:android.widget.CalendarView.CalendarViewDelegate>
<android.view.View: java.lang.Object getTag(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowId.FocusObserver.H: void <init>(android.view.WindowId.FocusObserver)>:<>:<android.view.WindowId.FocusObserver.H:android.os.Handler>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.HardwareRenderer: android.view.HardwareLayer createTextureLayer()>:<abstract>:<android.view.HardwareRenderer>
<android.widget.Gallery: int access.900(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.media.CCParser.StyleCode: boolean isUnderline()>:<>:<android.media.CCParser.StyleCode>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.database.AbstractCursor: boolean moveToFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.appwidget.AppWidgetHost: void onProvidersChanged()>:<protected>:<android.appwidget.AppWidgetHost>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioService: void access.7300(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.view.InputEventSender: void onInputEventFinished(int,boolean)>:<public>:<android.view.InputEventSender>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()>:<private>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.ChooseTypeAndAccountActivity: void onAccountSelected(android.accounts.Account)>:<private>:<android.accounts.ChooseTypeAndAccountActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.accounts.AccountManagerCallback>
<android.media.AudioManager: boolean isMusicActive()>:<public>:<android.media.AudioManager>
<android.widget.Editor.SuggestionsPopupWindow: boolean updateSuggestions()>:<private>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.media.tv.TvInputManager.Session: void releaseInternal()>:<private>:<android.media.tv.TvInputManager.Session>
<android.media.AudioPortConfig: int format()>:<public>:<android.media.AudioPortConfig>
<android.view.ViewPropertyAnimator: long getStartDelay()>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.VideoView: boolean canSeekForward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.View: boolean isTextDirectionResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewRootImpl.EarlyPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>:<public>:<android.view.ViewRootImpl.EarlyPostImeInputStage:android.view.ViewRootImpl.InputStage>
<android.view.Choreographer.FrameHandler: void <init>(android.view.Choreographer,android.os.Looper)>:<public>:<android.view.Choreographer.FrameHandler:android.os.Handler>
<android.view.VelocityTracker: void clear()>:<public>:<android.view.VelocityTracker>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.media.Tokenizer.TagTokenizer: void tokenize()>:<public>:<android.media.Tokenizer.TagTokenizer:android.media.Tokenizer.TokenizerPhase>
<android.accounts.AccountManager.5: java.lang.Object bundleToResult(android.os.Bundle)>:<public volatile>:<android.accounts.AccountManager.5:android.accounts.AccountManager.Future2Task,android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask>
<android.ddm.DdmHandleAppName: java.lang.String getAppName()>:<public static>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.MediaCodec: void revalidateByteBuffer(java.nio.ByteBuffer[],int)>:<private final>:<android.media.MediaCodec>
<android.media.EncoderCapabilities: android.media.EncoderCapabilities.AudioEncoderCap native_get_audio_encoder_cap(int)>:<private static final native>:<android.media.EncoderCapabilities>
<android.widget.SearchView.4: void onFocusChange(android.view.View,boolean)>:<public>:<android.widget.SearchView.4:android.view.View.OnFocusChangeListener>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.media.AudioService: void setVibrateSetting(int,int)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData getMetaDataAt(int)>:<public>:<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setupSetter(java.lang.Class)>:<>:<android.animation.PropertyValuesHolder.IntPropertyValuesHolder:android.animation.PropertyValuesHolder>
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.filterpacks.videosrc.CameraSource: int[] findClosestFpsRange(int,android.hardware.Camera.Parameters)>:<private>:<android.filterpacks.videosrc.CameraSource:android.filterfw.core.Filter>
<android.opengl.GLErrorWrapper: void glDepthRangef(float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.filterpacks.imageproc.StraightenFilter: void <init>(java.lang.String)>:<public>:<android.filterpacks.imageproc.StraightenFilter:android.filterfw.core.Filter>
<android.media.RemoteController: void onNewPlaybackState(android.media.session.PlaybackState)>:<private>:<android.media.RemoteController>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header findBestMatchingHeader(android.preference.PreferenceActivity.Header,java.util.ArrayList)>:<>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.AudioRecord: void native_finalize()>:<private final native>:<android.media.AudioRecord>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioService.SetModeDeathHandler: void <init>(android.media.AudioService,android.os.IBinder,int)>:<>:<android.media.AudioService.SetModeDeathHandler:android.os.IBinder.DeathRecipient>
<android.media.MediaMetadata: java.lang.String getKeyFromMetadataEditorKey(int)>:<public static>:<android.media.MediaMetadata:android.os.Parcelable>
<android.service.notification.NotificationListenerService.Ranking: java.lang.String getKey()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.view.ViewGroup: int getDescendantFocusability()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.ITvInputManager.Stub.Proxy: void removeBlockedRating(java.lang.String,int)>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.view.View: void setBackgroundDisplayListProperties(android.view.RenderNode)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewDebug.7: void <init>(java.lang.reflect.Method,android.view.View)>:<>:<android.view.ViewDebug.7:java.util.concurrent.Callable>
<android.view.SurfaceControl: void nativeSetPosition(long,float,float)>:<private static native>:<android.view.SurfaceControl>
<android.view.View: void setHovered(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Tokenizer.TokenizerPhase: void tokenize()>:<public abstract>:<android.media.Tokenizer.TokenizerPhase>
<android.media.IRemoteControlDisplay: void setEnabled(boolean)>:<public abstract>:<android.media.IRemoteControlDisplay:android.os.IInterface>
<android.security.IKeyChainService.Stub: android.security.IKeyChainService asInterface(android.os.IBinder)>:<public static>:<android.security.IKeyChainService.Stub:android.os.Binder,android.security.IKeyChainService>
<android.media.AudioService.VolumeController: void setController(android.media.IVolumeController)>:<public>:<android.media.AudioService.VolumeController>
<android.widget.Switch: void setChecked(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.tv.TvContentRating: boolean equals(java.lang.Object)>:<public>:<android.media.tv.TvContentRating>
<android.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.filterpacks.imageproc.ToRGBFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.ToRGBFilter:android.filterfw.core.Filter>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convertBack(java.lang.Object)>:<public>:<android.animation.BidirectionalTypeConverter.InvertedConverter:android.animation.BidirectionalTypeConverter,android.animation.TypeConverter>
<android.view.KeyEvent: int getOrigKeyCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.DuotoneFilter:android.filterfw.core.Filter>
<android.media.MediaRouter: void updateWifiDisplayStatus(android.hardware.display.WifiDisplayStatus)>:<static>:<android.media.MediaRouter>
<android.media.IAudioService: void unregisterAudioPolicyAsync(android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>:<public static>:<android.animation.AnimatorInflater>
<android.widget.TextView: void setTextSize(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.View: void setRight(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.ResourceBusyException: void <init>(java.lang.String)>:<public>:<android.media.ResourceBusyException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.media.session.MediaSession.Token: boolean equals(java.lang.Object)>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ExpandableListView: boolean isHeaderOrFooterPosition(int)>:<private>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.IAudioService: int getStreamVolume(int)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.accounts.IAccountAuthenticator.Stub.Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.view.SurfaceControl: boolean nativeSetActiveConfig(android.os.IBinder,int)>:<private static native>:<android.view.SurfaceControl>
<android.media.tv.TvInputService.Session.6: void <init>(android.media.tv.TvInputService.Session)>:<>:<android.media.tv.TvInputService.Session.6:java.lang.Runnable>
<android.animation.PathKeyframes.4: int getIntValue(float)>:<public>:<android.animation.PathKeyframes.4:android.animation.PathKeyframes.IntKeyframesBase,android.animation.PathKeyframes.SimpleKeyframes>
<android.security.KeyStore.State: android.security.KeyStore.State[] values()>:<public static>:<android.security.KeyStore.State:java.lang.Enum>
<android.view.Window.Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<android.view.AbsLayoutParams: int getHwFlags()>:<public>:<android.view.AbsLayoutParams>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.InputEventConsistencyVerifier: boolean startEvent(android.view.InputEvent,int,java.lang.String)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getContentFrameLw()>:<public abstract>:<android.view.WindowManagerPolicy.WindowState>
<android.service.dreams.IDreamManager.Stub: void <init>()>:<public>:<android.service.dreams.IDreamManager.Stub:android.os.Binder,android.service.dreams.IDreamManager>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void process(android.view.MotionEvent)>:<public>:<android.view.ViewRootImpl.SyntheticTouchNavigationHandler:android.os.Handler>
<android.view.Display: int getState()>:<public>:<android.view.Display>
<android.widget.ViewAnimator: void removeAllViews()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.FastScroller: void updateAppearance()>:<private>:<android.widget.FastScroller>
<android.view.ViewTreeObserver.CopyOnWriteArray: void remove(java.lang.Object)>:<>:<android.view.ViewTreeObserver.CopyOnWriteArray>
<android.media.IRemoteControlClient: void onInformationRequested(int,int)>:<public abstract>:<android.media.IRemoteControlClient:android.os.IInterface>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewGroup: void endViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.IAudioRoutesObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.media.IAudioRoutesObserver.Stub:android.os.Binder,android.media.IAudioRoutesObserver>
<android.media.session.ISessionCallback.Stub.Proxy: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.ISessionCallback.Stub.Proxy:android.media.session.ISessionCallback>
<android.media.SoundPool.SoundPoolImpl: int load(java.lang.String,int)>:<public>:<android.media.SoundPool.SoundPoolImpl:android.media.SoundPool.SoundPoolDelegate>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: boolean access.700(android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder)>:<static>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.Editor.SuggestionsPopupWindow: void initContentView()>:<protected>:<android.widget.Editor.SuggestionsPopupWindow:android.widget.Editor.PinnedPopupWindow,android.widget.AdapterView.OnItemClickListener>
<android.widget.FastScroller: void setScrollBarStyle(int)>:<public>:<android.widget.FastScroller>
<android.database.CursorWrapper: boolean move(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.animation.AnimatorSet: void reverse()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.animation.Animator: void end()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.ViewDebug.2: java.lang.Void[] pre()>:<public>:<android.view.ViewDebug.2:android.view.ViewDebug.ViewOperation>
<android.service.voice.VoiceInteractionSession.1: com.android.internal.app.IVoiceInteractorRequest startCompleteVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.1:com.android.internal.app.IVoiceInteractor.Stub>
<android.view.HardwareCanvas: int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int)>:<public abstract>:<android.view.HardwareCanvas:android.graphics.Canvas>
<android.media.AudioService: void initHwThemeHandler()>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.print.PrintJobInfo: java.lang.String getPrinterName()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.Metadata: void checkType(int,int)>:<private>:<android.media.Metadata>
<android.media.audiofx.AudioEffect: short byteArrayToShort(byte[],int)>:<public static>:<android.media.audiofx.AudioEffect>
<android.printservice.PrintJob: boolean start()>:<public>:<android.printservice.PrintJob>
<android.widget.TextView: boolean hasOverlappingRendering()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.filterpacks.videosrc.SurfaceTextureTarget: void setupPorts()>:<public>:<android.filterpacks.videosrc.SurfaceTextureTarget:android.filterfw.core.Filter>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.CursorFilter.CursorFilterClient>
<android.widget.SearchView: void setInputType(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.InputEventConsistencyVerifier: void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent)>:<private>:<android.view.InputEventConsistencyVerifier>
<android.service.notification.NotificationListenerService.INotificationListenerWrapper: void onListenerHintsChanged(int)>:<public>:<android.service.notification.NotificationListenerService.INotificationListenerWrapper:android.service.notification.INotificationListener.Stub,android.os.Binder>
<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>:<public abstract>:<android.view.IWindowSessionCallback:android.os.IInterface>
<android.media.WebVttParser.5: void <clinit>()>:<static>:<android.media.WebVttParser.5:android.media.WebVttParser.Phase>
<android.widget.TextView: void setIncludeFontPadding(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.fingerprint.IFingerprintServiceReceiver: void onRemoved(int)>:<public abstract>:<android.service.fingerprint.IFingerprintServiceReceiver:android.os.IInterface>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasBackgroundColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Window.Callback: void onAttachedToWindow()>:<public abstract>:<android.view.Window.Callback>
<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay>
<android.view.ViewRootImpl.4: void <init>(android.view.ViewRootImpl)>:<>:<android.view.ViewRootImpl.4:java.lang.Runnable>
<android.filterpacks.imageproc.CrossProcessFilter: void initProgram(android.filterfw.core.FilterContext,int)>:<public>:<android.filterpacks.imageproc.CrossProcessFilter:android.filterfw.core.Filter>
<android.database.IBulkCursor: android.database.CursorWindow getWindow(int)>:<public abstract>:<android.database.IBulkCursor:android.os.IInterface>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.trust.TrustAgentService: java.lang.Runnable access.600(android.service.trust.TrustAgentService)>:<static>:<android.service.trust.TrustAgentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextClock: void access.100(android.widget.TextClock)>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TextView: void setSelected(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.RenderNodeAnimator: boolean access.000(android.view.RenderNodeAnimator,long)>:<static>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleHELO(org.apache.harmony.dalvik.ddmc.Chunk)>:<private>:<android.ddm.DdmHandleHello:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.InputDevice: int getKeyboardType()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.KeyEvent: int getMetaState()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.RemoteControlClient.MetadataEditor: void apply()>:<public>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.WindowInsets: int getStableInsetRight()>:<public>:<android.view.WindowInsets>
<android.view.InputDevice.MotionRange: float access.800(android.view.InputDevice.MotionRange)>:<static>:<android.view.InputDevice.MotionRange>
<android.security.IKeyChainAliasCallback.Stub: android.os.IBinder asBinder()>:<public>:<android.security.IKeyChainAliasCallback.Stub:android.os.Binder,android.security.IKeyChainAliasCallback>
<android.view.HardwareLayer: void nSetSurfaceTexture(long,android.graphics.SurfaceTexture,boolean)>:<private static native>:<android.view.HardwareLayer>
<android.media.MediaPlayer: void native_setup(java.lang.Object)>:<private final native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.IAudioService: void setStreamSolo(int,boolean,android.os.IBinder)>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<android.security.KeyStore: boolean delKey(java.lang.String,int)>:<public>:<android.security.KeyStore>
<android.view.ViewPropertyAnimatorRT: void <clinit>()>:<static>:<android.view.ViewPropertyAnimatorRT>
<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.widget.RelativeLayout: void queryCompatibilityModes(android.content.Context)>:<private>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.animation.Keyframe.ObjectKeyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe.ObjectKeyframe:android.animation.Keyframe>
<android.view.ViewRootImpl: boolean canResolveTextDirection()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.BulkCursorProxy: void onMove(int)>:<public>:<android.database.BulkCursorProxy:android.database.IBulkCursor>
<android.media.CCParser.PAC: boolean isIndentPAC()>:<>:<android.media.CCParser.PAC:android.media.CCParser.StyleCode>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession.Token)>:<public>:<android.media.session.MediaController>
<android.preference.VolumePreference.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.VolumePreference.SavedState:android.preference.Preference.BaseSavedState,android.view.AbsSavedState>
<android.database.MergeCursor: java.lang.String getString(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobTagResult(boolean,int)>:<public abstract>:<android.print.IPrintSpoolerCallbacks:android.os.IInterface>
<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float,float)>:<private>:<android.view.ViewPropertyAnimator>
<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList getTypedTimes()>:<private>:<android.widget.TimePickerSpinnerDelegate:android.widget.TimePicker.AbstractTimePickerDelegate,android.widget.RadialTimePickerView.OnValueSelectedListener>
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.widget.RadialTimePickerView: void calculateGridSizesHours()>:<private>:<android.widget.RadialTimePickerView:android.view.View,android.view.View.OnTouchListener>
<android.widget.ViewAnimator: void initViewAnimator(android.content.Context,android.util.AttributeSet)>:<private>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)>:<public final>:<android.print.PrinterDiscoverySession>
<android.filterpacks.base.ObjectSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>:<public>:<android.filterpacks.base.ObjectSource:android.filterfw.core.Filter>
<android.view.View: void setDisplayListProperties(android.view.RenderNode)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FastScroller: android.animation.Animator animateScaleX(android.view.View,float)>:<private static>:<android.widget.FastScroller>
<android.view.ThreadedRenderer: void nUpdateSurface(long,android.view.Surface)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.view.GraphicBuffer: long nReadGraphicBufferFromParcel(android.os.Parcel)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.WindowManagerGlobal: void <init>()>:<private>:<android.view.WindowManagerGlobal>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.GridLayoutAnimationController.AnimationParameters:android.view.animation.LayoutAnimationController.AnimationParameters>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(android.view.SurfaceControl.PhysicalDisplayInfo)>:<public>:<android.view.SurfaceControl.PhysicalDisplayInfo>
<android.media.ThumbnailUtils.SizedThumbnailBitmap: void <init>(android.media.ThumbnailUtils.1)>:<>:<android.media.ThumbnailUtils.SizedThumbnailBitmap>
<android.media.tv.ITvInputHardwareCallback: void onReleased()>:<public abstract>:<android.media.tv.ITvInputHardwareCallback:android.os.IInterface>
<android.media.tv.TvInputInfo: java.lang.String generateInputIdForHardware(android.content.ComponentName,android.media.tv.TvInputHardwareInfo)>:<private static final>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.tv.TvContentRatingSystemInfo.1: void <init>()>:<>:<android.media.tv.TvContentRatingSystemInfo.1:android.os.Parcelable.Creator>
<android.media.tv.TvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String)>:<public>:<android.media.tv.TvInputManager>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy: void grantTrust(java.lang.CharSequence,long,boolean)>:<public>:<android.service.trust.ITrustAgentServiceCallback.Stub.Proxy:android.service.trust.ITrustAgentServiceCallback>
<android.view.View: boolean getKeepScreenOn()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.IWriteResultCallback: void onWriteFailed(java.lang.CharSequence,int)>:<public abstract>:<android.print.IWriteResultCallback:android.os.IInterface>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.PreferenceGroupAdapter: void access.100(android.preference.PreferenceGroupAdapter)>:<static>:<android.preference.PreferenceGroupAdapter:android.widget.BaseAdapter,android.preference.Preference.OnPreferenceChangeInternalListener>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: android.os.IBinder access.4700(android.media.AudioService.VolumeStreamState.VolumeDeathHandler)>:<static>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<android.view.accessibility.CaptioningManager.1: void <init>(android.view.accessibility.CaptioningManager,android.os.Handler)>:<>:<android.view.accessibility.CaptioningManager.1:android.database.ContentObserver>
<android.widget.FastScroller: void remove()>:<public>:<android.widget.FastScroller>
<android.widget.TextView: boolean getLinksClickable()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.RemoteController.OnClientUpdateListener: void onClientTransportControlUpdate(int)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.media.projection.MediaProjectionManager.CallbackDelegate.2: void <init>(android.media.projection.MediaProjectionManager.CallbackDelegate,android.media.projection.MediaProjectionInfo)>:<>:<android.media.projection.MediaProjectionManager.CallbackDelegate.2:java.lang.Runnable>
<android.R.animator: void <init>()>:<public>:<android.R.animator>
<android.media.session.MediaSession.Token: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.media.AudioTrack: int getSampleRate()>:<public>:<android.media.AudioTrack>
<android.service.media.MediaBrowserService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.IInputFilter: void filterInputEvent(android.view.InputEvent,int)>:<public abstract>:<android.view.IInputFilter:android.os.IInterface>
<android.media.tv.TvInputManager.SessionCallback: void onSessionEvent(android.media.tv.TvInputManager.Session,java.lang.String,android.os.Bundle)>:<public>:<android.media.tv.TvInputManager.SessionCallback>
<android.opengl.GLSurfaceView.EglHelper: void destroySurface()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.service.wallpaper.IWallpaperService.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.wallpaper.IWallpaperService.Stub.Proxy:android.service.wallpaper.IWallpaperService>
<android.widget.HwAbsListView: void clickItemIfNeeded(int,int)>:<private>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.view.InputEventReceiver: boolean nativeConsumeBatchedInputEvents(long,long)>:<private static native>:<android.view.InputEventReceiver>
<android.security.AndroidKeyStore: void <init>()>:<public>:<android.security.AndroidKeyStore:java.security.KeyStoreSpi>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>:<public>:<android.view.animation.LayoutAnimationController>
<android.database.sqlite.SQLiteDatabase.2: boolean accept(java.io.File)>:<public>:<android.database.sqlite.SQLiteDatabase.2:java.io.FileFilter>
<android.view.View: boolean skipInvalidate()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.filterpacks.videosrc.MediaSource: boolean access.000(android.filterpacks.videosrc.MediaSource)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.animation.Keyframes: java.util.ArrayList getKeyframes()>:<public abstract>:<android.animation.Keyframes:java.lang.Cloneable>
<android.media.MediaPlayer.TimeProvider: void notifyTimedEvent(boolean)>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.preference.Preference: boolean hasKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.animation.AnimationSet: void init()>:<private>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.ViewOverlay: boolean isEmpty()>:<>:<android.view.ViewOverlay>
<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()>:<>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.audiofx.AudioEffect: int getParameter(byte[],byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.ddm.DdmHandleAppName: void disconnected()>:<public>:<android.ddm.DdmHandleAppName:org.apache.harmony.dalvik.ddmc.ChunkHandler>
<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>:<public>:<android.widget.SpellChecker:android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.media.AudioManager: void setStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.ILayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>:<public abstract>:<android.print.ILayoutResultCallback:android.os.IInterface>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.fingerprint.IFingerprintService: void enrollCancel(android.os.IBinder,int)>:<public abstract>:<android.service.fingerprint.IFingerprintService:android.os.IInterface>
<android.service.wallpaper.WallpaperService.Engine.WallpaperInputEventReceiver: void onInputEvent(android.view.InputEvent)>:<public>:<android.service.wallpaper.WallpaperService.Engine.WallpaperInputEventReceiver:android.view.InputEventReceiver>
<android.view.GLES20Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.View: void applyBackgroundTint()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFile: boolean isMimeTypeMedia(java.lang.String)>:<public static>:<android.media.MediaFile>
<android.media.session.HwMediaSessionManagerDummy: void <clinit>()>:<static>:<android.media.session.HwMediaSessionManagerDummy:android.media.session.HwMediaSessionManager>
<android.view.MenuItem: boolean expandActionView()>:<public abstract>:<android.view.MenuItem>
<android.view.RenderNodeAnimator: boolean isRunning()>:<public>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.media.tv.ITvInputManager.Stub.Proxy: java.util.List getHardwareList()>:<public>:<android.media.tv.ITvInputManager.Stub.Proxy:android.media.tv.ITvInputManager>
<android.accounts.AccountManager.AmsTask: void set(android.os.Bundle)>:<protected>:<android.accounts.AccountManager.AmsTask:java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void setDesiredSize(int,int)>:<public>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.view.IWindowManager.Stub.Proxy: void clearForcedDisplaySize(int)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.animation.Animator: android.animation.Animator clone()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup: void <init>()>:<public>:<huawei.android.app.HwCustEmergDataManagerImpl.FileBackup>
<android.opengl.GLErrorWrapper: void glTexEnvx(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View,boolean)>:<private>:<android.animation.LayoutTransition>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession: void access.700(android.media.session.MediaSession,java.lang.String,android.os.Bundle)>:<static>:<android.media.session.MediaSession>
<android.opengl.GLSurfaceView: void <clinit>()>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.DayPickerView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.DayPickerView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.AbsListView.OnScrollListener,android.widget.OnDateChangedListener>
<android.preference.Preference: java.lang.String getFragment()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.accounts.IAccountAuthenticator.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountAuthenticator.Stub.Proxy:android.accounts.IAccountAuthenticator>
<android.view.RenderNode: boolean nSetAnimationMatrix(long,long)>:<private static native>:<android.view.RenderNode>
<android.media.projection.IMediaProjection.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.hsm.HwSystemManager.HsmInterface: boolean canStartActivity(android.content.Context,android.content.Intent)>:<public abstract>:<android.hsm.HwSystemManager.HsmInterface>
<android.view.VelocityTracker: void <init>(java.lang.String)>:<private>:<android.view.VelocityTracker>
<android.media.MediaCodec.EventHandler: void handleMessage(android.os.Message)>:<public>:<android.media.MediaCodec.EventHandler:android.os.Handler>
<android.opengl.GLLogWrapper: void glLoadMatrixx(java.nio.IntBuffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.WindowManagerPolicy: void lockNow(android.os.Bundle)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.audiofx.AudioEffect: int getParameter(int,byte[])>:<public>:<android.media.audiofx.AudioEffect>
<android.view.WindowManagerInternal: android.os.IBinder getFocusedWindowToken()>:<public abstract>:<android.view.WindowManagerInternal>
<android.widget.Editor.TextModifyOperation.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.Editor.TextModifyOperation.1:android.os.Parcelable.ClassLoaderCreator>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>:<>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback,android.widget.Advanceable>
<android.media.MediaPlayer.TrackInfo: android.media.MediaFormat getFormat()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.service.media.MediaBrowserService: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioService.AudioHandler: void persistVolume(android.media.AudioService.VolumeStreamState,int)>:<private>:<android.media.AudioService.AudioHandler:android.os.Handler>
<android.accounts.IAccountManager: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.view.RenderNode: boolean nSetProjectBackwards(long,boolean)>:<private static native>:<android.view.RenderNode>
<android.widget.TimePickerSpinnerDelegate.3: void <init>(android.widget.TimePickerSpinnerDelegate)>:<>:<android.widget.TimePickerSpinnerDelegate.3:android.view.View.OnClickListener>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.MenuItem: boolean isActionViewExpanded()>:<public abstract>:<android.view.MenuItem>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRouter.RouteCategory: boolean isSystem()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.widget.HwAbsListView.LeveledView: java.lang.String toString()>:<public>:<android.widget.HwAbsListView.LeveledView>
<android.media.AudioService.MyDisplayStatusCallback: void <init>(android.media.AudioService,android.media.AudioService.1)>:<>:<android.media.AudioService.MyDisplayStatusCallback:android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float)>:<public>:<android.media.session.PlaybackState.Builder>
<android.media.AudioAttributes: void <init>()>:<private>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.AudioService: void ensureValidDirection(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.MediaRouterClientState: void <init>()>:<public>:<android.media.MediaRouterClientState:android.os.Parcelable>
<android.view.WindowAnimationFrameStats: int describeContents()>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.opengl.GLLogWrapper: void glBindTexture(int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.VelocityTracker: void <clinit>()>:<static>:<android.view.VelocityTracker>
<android.media.SoundPool.SoundPoolStub: void setRate(int,float)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.view.textservice.SpellCheckerSession: void access.100(android.view.textservice.SpellCheckerSession,android.view.textservice.SentenceSuggestionsInfo[])>:<static>:<android.view.textservice.SpellCheckerSession>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>:<public static>:<android.view.VelocityTracker>
<android.view.ViewGroup: void onViewAdded(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLLogWrapper: void glTexGeni(int,int,int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.print.PrintManager: android.print.PrintManager getGlobalPrintManagerForUser(int)>:<public>:<android.print.PrintManager>
<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void <init>()>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.widget.SearchView: void updateFocusedState()>:<private>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.SetRemoteViewsAdapterList:android.widget.RemoteViews.Action>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.EncoderCapabilities: void <init>()>:<private>:<android.media.EncoderCapabilities>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public transient>:<android.animation.PropertyValuesHolder.MultiIntValuesHolder:android.animation.PropertyValuesHolder>
<android.view.InputDevice: boolean isFullKeyboard()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.view.WindowCallbackWrapper:android.view.Window.Callback>
<android.media.ToneGenerator: void native_finalize()>:<private final native>:<android.media.ToneGenerator>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.DragEvent: int getAction()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glTranslatef(float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaDrm: void access.200(android.media.MediaDrm,byte[],java.lang.String)>:<static>:<android.media.MediaDrm>
<android.widget.DatePickerController: int getMaxYear()>:<public abstract>:<android.widget.DatePickerController>
<android.view.WindowManagerImpl: void removeView(android.view.View)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.view.Nsd.LauncherPara: void <clinit>()>:<static>:<android.view.Nsd.LauncherPara>
<android.media.AudioTrack: int reloadStaticData()>:<public>:<android.media.AudioTrack>
<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>:<private>:<android.view.LayoutInflater>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>:<public>:<android.widget.ActionMenuPresenter.PopupPresenterCallback:com.android.internal.view.menu.MenuPresenter.Callback>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState build()>:<public>:<android.media.session.PlaybackState.Builder>
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.Editor.SpanController.2: void <init>(android.widget.Editor.SpanController)>:<>:<android.widget.Editor.SpanController.2:android.widget.Editor.EasyEditDeleteListener>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.gesture.InstanceLearner: java.util.ArrayList classify(int,int,float[])>:<>:<android.gesture.InstanceLearner:android.gesture.Learner>
<android.widget.TabWidget: void <init>(android.content.Context)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.VideoView: boolean isPlaying()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl,android.media.SubtitleController.Anchor>
<android.view.IWindowManager.Stub.Proxy: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityPaused(android.app.Activity)>:<public>:<android.print.PrintManager.PrintDocumentAdapterDelegate:android.print.IPrintDocumentAdapter.Stub,android.os.Binder,android.app.Application.ActivityLifecycleCallbacks>
<android.view.MotionEvent: void nativeDispose(long)>:<private static native>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLSurfaceView.EglHelper: boolean createSurface()>:<public>:<android.opengl.GLSurfaceView.EglHelper>
<android.opengl.GLLogWrapper: void glTexEnvf(int,int,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TimePicker.TimePickerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.widget.Editor.EasyEditPopupWindow: int getTextOffset()>:<protected>:<android.widget.Editor.EasyEditPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,int[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.textservice.SpellCheckerSession: void <init>(android.view.textservice.SpellCheckerInfo,com.android.internal.textservice.ITextServicesManager,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,android.view.textservice.SpellCheckerSubtype)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>:<public final>:<android.view.FocusFinder>
<android.widget.Switch: float access.000(android.widget.Switch)>:<static>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFinished(android.print.PageRange[])>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.view.Choreographer: android.view.Choreographer getInstance()>:<public static>:<android.view.Choreographer>
<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AsyncPlayer.Command: java.lang.String toString()>:<public>:<android.media.AsyncPlayer.Command>
<android.media.session.MediaSessionManager.SessionsChangedWrapper: void <init>(android.media.session.MediaSessionManager,android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.os.Handler)>:<public>:<android.media.session.MediaSessionManager.SessionsChangedWrapper>
<android.media.IRemoteControlDisplay.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.IRemoteControlDisplay.Stub.Proxy:android.media.IRemoteControlDisplay>
<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>:<>:<android.view.inputmethod.InputMethodManager>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.media.tv.ITvInputSessionWrapper: void selectTrack(int,java.lang.String)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.View: void setFocusableInTouchMode(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.netdetect.HwCustNetDetectServiceImpl: boolean access.900(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.MediaDrm.CryptoSession: void <init>(android.media.MediaDrm,android.media.MediaDrm,byte[],java.lang.String,java.lang.String)>:<>:<android.media.MediaDrm.CryptoSession>
<android.gesture.GestureStore: int getSequenceType()>:<public>:<android.gesture.GestureStore>
<android.media.TimedText.Style: void <init>(int,int,int,boolean,boolean,boolean,int,int)>:<public>:<android.media.TimedText.Style>
<android.media.SRTTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>:<>:<android.media.SRTTrack:android.media.WebVttTrack,android.media.SubtitleTrack>
<android.widget.RemoteViews.SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>:<public>:<android.widget.RemoteViews.SetOnClickFillInIntent:android.widget.RemoteViews.Action>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.audiofx.LoudnessEnhancer.Settings: void <init>()>:<public>:<android.media.audiofx.LoudnessEnhancer.Settings>
<android.media.MediaPlayer: android.media.MediaPlayer.OnPreparedListener access.700(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected volatile>:<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask:android.os.AsyncTask>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>:<public static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setDate(long)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.view.GLES20Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.WindowId.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.view.WindowId.1:android.os.Parcelable.Creator>
<android.view.View: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ActionMenuPresenter.SavedState: void <clinit>()>:<static>:<android.widget.ActionMenuPresenter.SavedState:android.os.Parcelable>
<android.view.TextureView: void setLayerType(int,android.graphics.Paint)>:<public>:<android.view.TextureView:android.view.View>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>:<public abstract>:<android.view.Window.Callback>
<android.view.animation.Animation: void setFillAfter(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>:<private>:<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher>
<android.animation.StateListAnimator: android.animation.Animator access.002(android.animation.StateListAnimator,android.animation.Animator)>:<static>:<android.animation.StateListAnimator>
<android.media.IAudioService.Stub.Proxy: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.view.ViewRootImpl: void loadSystemProperties()>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.database.DataSetObserver: void <init>()>:<public>:<android.database.DataSetObserver>
<android.widget.TextClock: java.lang.CharSequence abc(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>:<private static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.View.MatchIdPredicate: boolean apply(android.view.View)>:<public>:<android.view.View.MatchIdPredicate:com.android.internal.util.Predicate>
<android.widget.RatingBar: void setStepSize(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)>:<public>:<android.media.MediaRecorder>
<android.widget.StackView.StackSlider: float rotationInterpolator(float)>:<private>:<android.widget.StackView.StackSlider>
<android.view.AccessibilityInteractionController.PrivateHandler: void handleMessage(android.os.Message)>:<public>:<android.view.AccessibilityInteractionController.PrivateHandler:android.os.Handler>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewPropertyAnimatorRT: void doStartAnimation(android.view.ViewPropertyAnimator)>:<private>:<android.view.ViewPropertyAnimatorRT>
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>:<protected>:<android.filterpacks.imageproc.Invert:android.filterpacks.imageproc.SimpleImageFilter,android.filterfw.core.Filter>
<android.media.RemoteDisplayState.1: android.media.RemoteDisplayState createFromParcel(android.os.Parcel)>:<public>:<android.media.RemoteDisplayState.1:android.os.Parcelable.Creator>
<android.opengl.GLSurfaceView.GLThreadManager: void <init>()>:<private>:<android.opengl.GLSurfaceView.GLThreadManager>
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.Window: android.transition.Transition getReenterTransition()>:<public>:<android.view.Window>
<android.widget.Scroller: void <clinit>()>:<static>:<android.widget.Scroller>
<android.media.tv.TvStreamConfig: int getMaxHeight()>:<public>:<android.media.tv.TvStreamConfig:android.os.Parcelable>
<android.accounts.AccountManager.Future2Task: java.lang.Object internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>:<private>:<android.accounts.AccountManager.Future2Task:android.accounts.AccountManager.BaseFutureTask,java.util.concurrent.FutureTask,android.accounts.AccountManagerFuture>
<android.widget.RatingBar: void dispatchRatingChange(boolean)>:<>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.MediaScanner: java.lang.String[] access.1200()>:<static>:<android.media.MediaScanner>
<android.widget.TimePicker.TimePickerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.widget.TextView: int getCompoundPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor: android.widget.Editor.SelectionStartHandleView getSelectionStartHandleView(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor>
<android.media.RemoteController: void startListeningToSessions()>:<>:<android.media.RemoteController>
<android.view.IWindowSession: void dragRecipientExited(android.view.IWindow)>:<public abstract>:<android.view.IWindowSession:android.os.IInterface>
<android.view.MenuItem: char getNumericShortcut()>:<public abstract>:<android.view.MenuItem>
<android.service.wallpaper.IWallpaperEngine.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.service.wallpaper.IWallpaperEngine.Stub.Proxy:android.service.wallpaper.IWallpaperEngine>
<android.view.textservice.SuggestionsInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.textservice.SuggestionsInfo.1:android.os.Parcelable.Creator>
<android.widget.HwSplineOverScrollerDummy: void setStableItemHeight(int)>:<public>:<android.widget.HwSplineOverScrollerDummy:android.widget.IHwSplineOverScroller>
<android.view.Display: java.lang.String getOwnerPackageName()>:<public>:<android.view.Display>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.Editor.InsertionPointCursorController: void showWithActionPopup()>:<public>:<android.widget.Editor.InsertionPointCursorController:android.widget.Editor.CursorController>
<android.filterpacks.videosrc.MediaSource: int access.402(android.filterpacks.videosrc.MediaSource,int)>:<static>:<android.filterpacks.videosrc.MediaSource:android.filterfw.core.Filter>
<android.media.projection.MediaProjection: void <init>(android.content.Context,android.media.projection.IMediaProjection)>:<public>:<android.media.projection.MediaProjection>
<android.media.session.ISessionControllerCallback.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.session.ISessionControllerCallback.Stub.Proxy:android.media.session.ISessionControllerCallback>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder)>:<public>:<android.view.DisplayInfo:android.os.Parcelable>
<android.media.audiofx.BassBoost: boolean getStrengthSupported()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.preference.SeekBarPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.SeekBarPreference:android.preference.Preference,android.widget.SeekBar.OnSeekBarChangeListener>
<android.preference.TwoStatePreference.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.preference.TwoStatePreference.SavedState.1:android.os.Parcelable.Creator>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.animation.ValueAnimator: boolean animationFrame(long)>:<>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: boolean hasValue()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.media.AudioDevice: int convertDeviceTypeToInternalDevice(int)>:<public static>:<android.media.AudioDevice>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewGroup: void addViewInner(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.browse.MediaBrowser: void access.200(android.media.browse.MediaBrowser)>:<static>:<android.media.browse.MediaBrowser>
<android.media.audiopolicy.AudioPolicy: android.os.IBinder token()>:<public>:<android.media.audiopolicy.AudioPolicy>
<android.widget.TabWidget: void setEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.Tokenizer: int access.102(android.media.Tokenizer,int)>:<static>:<android.media.Tokenizer>
<android.service.media.MediaBrowserService.1: void run()>:<public>:<android.service.media.MediaBrowserService.1:java.lang.Runnable>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioTrack>
<android.media.DecoderCapabilities.AudioDecoder: void <init>(java.lang.String,int)>:<private>:<android.media.DecoderCapabilities.AudioDecoder:java.lang.Enum>
<android.view.IWindow: void doneAnimating()>:<public abstract>:<android.view.IWindow:android.os.IInterface>
<android.view.View: boolean willNotDraw()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByViewId(int,int,long,java.lang.String)>:<public>:<android.view.accessibility.AccessibilityInteractionClient:android.view.accessibility.IAccessibilityInteractionConnectionCallback.Stub,android.os.Binder>
<android.widget.DateTimeView: void setTime(long)>:<public>:<android.widget.DateTimeView:android.widget.TextView,android.view.View>
<android.view.View: void dispatchDetachedFromWindow()>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentInfo: void <init>(android.print.PrintDocumentInfo,android.print.PrintDocumentInfo.1)>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.service.notification.NotificationListenerService.RankingMap: boolean isAmbient(java.lang.String)>:<private>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.animation.PointFEvaluator: void <init>()>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.print.IPrintSpoolerCallbacks.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.print.IPrintSpoolerCallbacks.Stub.Proxy:android.print.IPrintSpoolerCallbacks>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.Settings getProperties()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.ThreadedRenderer: long nCreateProxy(boolean,long)>:<private static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.session.MediaSession.Callback: android.media.session.MediaSession access.102(android.media.session.MediaSession.Callback,android.media.session.MediaSession)>:<static>:<android.media.session.MediaSession.Callback>
<android.media.AudioService: java.lang.String getPackageName(int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.media.audiofx.Visualizer: int native_setup(java.lang.Object,int,int[])>:<private final native>:<android.media.audiofx.Visualizer>
<android.widget.RelativeLayout: int getGravity()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.ListView: void onMeasure(int,int)>:<protected>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.tv.TvContract: java.lang.String buildInputId(android.content.ComponentName)>:<public static final>:<android.media.tv.TvContract>
<android.view.View: void invalidateInheritedLayoutMode(int)>:<>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void _setVideoSurface(android.view.Surface)>:<private native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.PreferenceScreen: void showDialog(android.os.Bundle)>:<private>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.inputmethod.InputMethodSubtype.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.view.inputmethod.InputMethodSubtype.1:android.os.Parcelable.Creator>
<android.view.KeyCharacterMap: android.view.KeyEvent[] nativeGetEvents(long,char[])>:<private static native>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.IHwViewRootImpl: void clearDisplayPoint()>:<public abstract>:<android.view.IHwViewRootImpl>
<android.media.AudioService: int access.5800(android.media.AudioService)>:<static>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.netdetect.HwCustNetDetectServiceImpl: void setWebDetectTimer(java.lang.String,java.lang.String,long)>:<private>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.service.wallpaper.IWallpaperConnection.Stub.Proxy: void attachEngine(android.service.wallpaper.IWallpaperEngine)>:<public>:<android.service.wallpaper.IWallpaperConnection.Stub.Proxy:android.service.wallpaper.IWallpaperConnection>
<android.service.notification.StatusBarNotification.1: void <init>()>:<>:<android.service.notification.StatusBarNotification.1:android.os.Parcelable.Creator>
<android.service.notification.IStatusBarNotificationHolder.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<public>:<android.service.notification.IStatusBarNotificationHolder.Stub:android.os.Binder,android.service.notification.IStatusBarNotificationHolder>
<android.widget.MediaController.MediaPlayerControl: int getAudioSessionId()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.DatePicker: int getMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RtlSpacingHelper: void setDirection(boolean)>:<public>:<android.widget.RtlSpacingHelper>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.session.ISessionController: void seekTo(long)>:<public abstract>:<android.media.session.ISessionController:android.os.IInterface>
<android.widget.GridLayout: void setCellGroup(android.widget.GridLayout.LayoutParams,int,int,int,int)>:<private static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.EncoderCapabilities: void native_init()>:<private static final native>:<android.media.EncoderCapabilities>
<android.service.dreams.DreamService: android.view.Window access.100(android.service.dreams.DreamService)>:<static>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.security.IKeystoreService.Stub.Proxy: int unlock(java.lang.String)>:<public>:<android.security.IKeystoreService.Stub.Proxy:android.security.IKeystoreService>
<android.view.InputDevice: boolean isExternal()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.IMediaRouterService: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>:<public abstract>:<android.media.IMediaRouterService:android.os.IInterface>
<android.view.WindowManagerPolicy: void goingToSleep(int)>:<public abstract>:<android.view.WindowManagerPolicy>
<android.database.MatrixCursor: java.lang.Object get(int)>:<private>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.widget.CalendarView.LegacyCalendarViewDelegate: void setWeekDayTextAppearance(int)>:<public>:<android.widget.CalendarView.LegacyCalendarViewDelegate:android.widget.CalendarView.AbstractCalendarViewDelegate>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>:<public static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.IAccountManagerResponse.Stub: android.os.IBinder asBinder()>:<public>:<android.accounts.IAccountManagerResponse.Stub:android.os.Binder,android.accounts.IAccountManagerResponse>
<android.view.RenderNode: float nGetTranslationZ(long)>:<private static native>:<android.view.RenderNode>
<android.printservice.PrintJob: boolean isFailed()>:<public>:<android.printservice.PrintJob>
<android.widget.Spinner.DropdownPopup: void access.701(android.widget.Spinner.DropdownPopup)>:<static>:<android.widget.Spinner.DropdownPopup:huawei.android.widget.ListPopupWindow,android.widget.Spinner.SpinnerPopup>
<android.widget.Gallery: void access.500(android.widget.Gallery)>:<static>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.opengl.GLLogWrapper: void glGetFloatv(int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.opengl.GLES31: void <init>()>:<private>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)>:<public>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.MediaController.TransportControls: void skipToNext()>:<public>:<android.media.session.MediaController.TransportControls>
<android.preference.Preference: void notifyDependencyChange(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void update(android.view.MotionEvent,boolean)>:<private>:<android.view.ViewRootImpl.SyntheticJoystickHandler:android.os.Handler>
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.view.View: boolean performLongClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>:<public>:<android.view.Window>
<android.media.IMediaRouterClient.Stub.Proxy: void <init>(android.os.IBinder)>:<>:<android.media.IMediaRouterClient.Stub.Proxy:android.media.IMediaRouterClient>
<android.view.GLES20Canvas: long nCreateDisplayListRenderer()>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.dreams.IDreamManager.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.dreams.IDreamManager.Stub.Proxy:android.service.dreams.IDreamManager>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.SwitchPreference: void setSwitchTextOn(java.lang.CharSequence)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.accounts.IAccountManager.Stub.Proxy: boolean removeSharedAccountAsUser(android.accounts.Account,int)>:<public>:<android.accounts.IAccountManager.Stub.Proxy:android.accounts.IAccountManager>
<android.view.ViewGroup: boolean access.302(android.view.ViewGroup,boolean)>:<static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.trust.ITrustAgentService.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.service.trust.ITrustAgentService.Stub.Proxy:android.service.trust.ITrustAgentService>
<android.view.MenuInflater: java.lang.Object[] access.600(android.view.MenuInflater)>:<static>:<android.view.MenuInflater>
<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>:<public abstract>:<android.accounts.IAccountManager:android.os.IInterface>
<android.media.MediaCodec: void postEventFromNative(int,int,int,java.lang.Object)>:<private>:<android.media.MediaCodec>
<android.view.accessibility.IAccessibilityManager.Stub: android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder)>:<public static>:<android.view.accessibility.IAccessibilityManager.Stub:android.os.Binder,android.view.accessibility.IAccessibilityManager>
<android.widget.RemoteViewsListAdapter: int getItemViewType(int)>:<public>:<android.widget.RemoteViewsListAdapter:android.widget.BaseAdapter>
<android.media.session.MediaSession.CallbackStub: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.CallbackStub:android.media.session.ISessionCallback.Stub,android.os.Binder>
<android.view.textservice.SpellCheckerSubtype: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.FastScroller: android.animation.Animator animateAlpha(android.view.View,float)>:<private static>:<android.widget.FastScroller>
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureRequired(java.lang.String)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.MediaPlayer.TimeProvider: int registerListener(android.media.MediaTimeProvider.OnMediaTimeListener)>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<android.media.MediaRouter.SimpleCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.media.WebVttTrack: void onRegionParsed(android.media.TextTrackRegion)>:<public>:<android.media.WebVttTrack:android.media.SubtitleTrack,android.media.WebVttCueListener>
<android.widget.Toast: void setMargin(float,float)>:<public>:<android.widget.Toast>
<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)>:<protected>:<android.preference.GenericInflater>
<android.view.FocusFinder: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>:<>:<android.view.FocusFinder>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.hsm.HwSystemManager.HsmDefImpl: boolean allowOp(java.lang.String,java.lang.String,android.app.PendingIntent)>:<public>:<android.hsm.HwSystemManager.HsmDefImpl:android.hsm.HwSystemManager.HsmInterface>
<android.view.HardwareRenderer: void trimMemory(int)>:<static>:<android.view.HardwareRenderer>
<android.animation.AnimatorInflater.PathDataEvaluator: void <init>(android.util.PathParser.PathDataNode[])>:<public>:<android.animation.AnimatorInflater.PathDataEvaluator:android.animation.TypeEvaluator>
<android.security.IKeyChainService.Stub.Proxy: byte[] getEncodedCaCertificate(java.lang.String,boolean)>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.preference.EditTextPreference.SavedState.1: android.preference.EditTextPreference.SavedState[] newArray(int)>:<public>:<android.preference.EditTextPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask: void <init>(android.service.voice.AlwaysOnHotwordDetector)>:<>:<android.service.voice.AlwaysOnHotwordDetector.RefreshAvailabiltyTask:android.os.AsyncTask>
<android.view.Menu: android.view.MenuItem findItem(int)>:<public abstract>:<android.view.Menu>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,float[],int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.media.tv.TvView: android.graphics.Rect getViewFrameOnScreen()>:<private>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.HorizontalScrollView.SavedState.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.HorizontalScrollView.SavedState.1:android.os.Parcelable.Creator>
<android.service.wallpaper.IWallpaperEngine.Stub: android.service.wallpaper.IWallpaperEngine asInterface(android.os.IBinder)>:<public static>:<android.service.wallpaper.IWallpaperEngine.Stub:android.os.Binder,android.service.wallpaper.IWallpaperEngine>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView.1)>:<>:<android.widget.AutoCompleteTextView.PopupDataSetObserver:android.database.DataSetObserver>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>:<public static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.media.session.ParcelableVolumeInfo: int describeContents()>:<public>:<android.media.session.ParcelableVolumeInfo:android.os.Parcelable>
<android.widget.RemoteViews.TextViewSizeAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>:<public>:<android.widget.RemoteViews.TextViewSizeAction:android.widget.RemoteViews.Action>
<android.media.WebVttRenderingWidget: void onLayout(boolean,int,int,int,int)>:<protected>:<android.media.WebVttRenderingWidget:android.view.ViewGroup,android.view.View,android.media.SubtitleTrack.RenderingWidget>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.GridLayout: void setColumnCount(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Toast: int getGravity()>:<public>:<android.widget.Toast>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()>:<public>:<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection:com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>
<android.widget.PopupMenu: void dismiss()>:<public>:<android.widget.PopupMenu:com.android.internal.view.menu.MenuBuilder.Callback,com.android.internal.view.menu.MenuPresenter.Callback>
<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)>:<public>:<android.media.effect.FilterGraphEffect:android.media.effect.FilterEffect,android.media.effect.Effect>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ScrollView: boolean inChild(int,int)>:<private>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaFile: boolean isImageFileType(int)>:<public static>:<android.media.MediaFile>
<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>:<private>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.media.RemoteController: android.media.RemoteController.MetadataEditor editMetadata()>:<public>:<android.media.RemoteController>
<android.widget.SearchView.10: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.10:android.widget.AdapterView.OnItemSelectedListener>
<android.media.AudioManager: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>:<public>:<android.media.AudioManager>
<android.media.MediaRouter: void selectRouteInt(int,android.media.MediaRouter.RouteInfo,boolean)>:<public>:<android.media.MediaRouter>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int access.302(android.preference.PreferenceGroupAdapter.PreferenceLayout,int)>:<static>:<android.preference.PreferenceGroupAdapter.PreferenceLayout:java.lang.Comparable>
<android.widget.RemoteViewsAdapter: void updateRemoteViews(int,boolean)>:<private>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.opengl.GLES10: void glNormal3f(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.CursorWindow: int nativeGetNumRows(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.ViewRootImpl.AsyncInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>:<public>:<android.view.ViewRootImpl.AsyncInputStage:android.view.ViewRootImpl.InputStage>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.AudioTrack: int native_get_output_sample_rate(int)>:<private static final native>:<android.media.AudioTrack>
<android.view.ViewRootImpl: int getHostVisibility()>:<>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.opengl.GLES31: void glMemoryBarrier(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewGroup: boolean isTransitionGroup()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.filterpacks.videoproc.BackDropperFilter: void allocateFrames(android.filterfw.core.FrameFormat,android.filterfw.core.FilterContext)>:<private>:<android.filterpacks.videoproc.BackDropperFilter:android.filterfw.core.Filter>
<android.view.MagnificationSpec: void recycle()>:<public>:<android.view.MagnificationSpec:android.os.Parcelable>
<android.database.CursorWindow: void nativeClear(long)>:<private static native>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: void updateDisplayListIfDirty()>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Switch: boolean getTargetCheckedState()>:<private>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.RenderNodeAnimator: long getNativeAnimator()>:<>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.Editor: void onScrollChanged()>:<>:<android.widget.Editor>
<android.widget.CheckedTextView: void updatePadding()>:<private>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.IMediaHTTPConnection.Stub.Proxy: int readAt(long,int)>:<public>:<android.media.IMediaHTTPConnection.Stub.Proxy:android.media.IMediaHTTPConnection>
<android.print.PrintAttributes: android.print.PrintAttributes.MediaSize getMediaSize()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.widget.Editor.InsertionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable)>:<public>:<android.widget.Editor.InsertionHandleView:android.widget.Editor.HandleView,android.view.View>
<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.service.dreams.IDreamService.Stub.Proxy: void detach()>:<public>:<android.service.dreams.IDreamService.Stub.Proxy:android.service.dreams.IDreamService>
<android.media.FaceDetector.Face: float eyesDistance()>:<public>:<android.media.FaceDetector.Face>
<android.opengl.GLES20: void glGenerateMipmap(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Editor: void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>:<>:<android.widget.Editor>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.animation.LayoutAnimationController: float getDelay()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.RemoteViews.3: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.widget.RemoteViews.3:android.os.Parcelable.Creator>
<android.view.GLES20Canvas: boolean clipRegion(android.graphics.Region)>:<public>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.widget.GridLayout.LayoutParams: void setColumnSpecSpan(android.widget.GridLayout.Interval)>:<final>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaFormat: void setInteger(java.lang.String,int)>:<public final>:<android.media.MediaFormat>
<android.view.GraphicBuffer: boolean nLockCanvas(long,android.graphics.Canvas,android.graphics.Rect)>:<private static native>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.View: void postOnAnimation(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.IWindowManager.Stub.Proxy: void stopFreezingScreen()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.view.Window: void setType(int)>:<public>:<android.view.Window>
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.view.View: void buildDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewOutlineProvider.2: void <init>()>:<>:<android.view.ViewOutlineProvider.2:android.view.ViewOutlineProvider>
<android.media.tv.ITvInputManager: void releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>:<public abstract>:<android.media.tv.ITvInputManager:android.os.IInterface>
<android.netdetect.HwCustNetDetectServiceImpl: void access.400(android.netdetect.HwCustNetDetectServiceImpl)>:<static>:<android.netdetect.HwCustNetDetectServiceImpl:android.netdetect.INetDetectService.Stub,android.os.Binder,android.netdetect.NetDetectService>
<android.media.IRemoteControlClient.Stub.Proxy: void setWantsSyncForDisplay(android.media.IRemoteControlDisplay,boolean)>:<public>:<android.media.IRemoteControlClient.Stub.Proxy:android.media.IRemoteControlClient>
<android.widget.TextView: void setElegantTextHeight(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ScrollBarDrawable:android.graphics.drawable.Drawable>
<android.media.AudioService: void unregisterAudioPolicyAsync(android.os.IBinder)>:<public>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.service.media.MediaBrowserService.1: void <init>(android.service.media.MediaBrowserService,java.lang.String)>:<>:<android.service.media.MediaBrowserService.1:java.lang.Runnable>
<android.media.ImageReader.SurfaceImage: boolean isImageValid()>:<private>:<android.media.ImageReader.SurfaceImage:android.media.Image>
<android.view.View: boolean access.2102(android.view.View,boolean)>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glLinkProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.Window: void setBackgroundDrawableResource(int)>:<public>:<android.view.Window>
<android.service.notification.NotificationListenerService.RankingMap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.media.AudioManager: void disableSafeMediaVolume()>:<public>:<android.media.AudioManager>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceManager.OnPreferenceTreeClickListener,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.TtmlTrack: void onTtmlNodeParsed(android.media.TtmlNode)>:<public>:<android.media.TtmlTrack:android.media.SubtitleTrack,android.media.TtmlNodeListener>
<android.database.sqlite.SQLiteConnection: void releasePreparedStatement(android.database.sqlite.SQLiteConnection.PreparedStatement)>:<private>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.media.MediaCodec.MediaImage: android.media.Image.Plane[] getPlanes()>:<public>:<android.media.MediaCodec.MediaImage:android.media.Image>
<android.print.PrintDocumentInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Menu>
<android.media.AudioService.VolumeStreamState.VolumeDeathHandler: void <init>(android.media.AudioService.VolumeStreamState,android.os.IBinder)>:<>:<android.media.AudioService.VolumeStreamState.VolumeDeathHandler:android.os.IBinder.DeathRecipient>
<android.widget.HorizontalScrollView.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.widget.HorizontalScrollView.SavedState.1:android.os.Parcelable.Creator>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)>:<public>:<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator:java.util.Comparator>
<android.media.AudioGain: int channelMask()>:<public>:<android.media.AudioGain>
<android.view.View.ScrollabilityCache: void <init>(android.view.ViewConfiguration,android.view.View)>:<public>:<android.view.View.ScrollabilityCache:java.lang.Runnable>
<android.widget.CheckedTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.Window.Callback: void onActionModeStarted(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES10>
<android.service.persistentdata.IPersistentDataBlockService: boolean getOemUnlockEnabled()>:<public abstract>:<android.service.persistentdata.IPersistentDataBlockService:android.os.IInterface>
<android.service.wallpaper.WallpaperService.Engine.2: boolean isCreating()>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.view.View: void onLayout(boolean,int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.projection.MediaProjectionManager: void removeCallback(android.media.projection.MediaProjectionManager.Callback)>:<public>:<android.media.projection.MediaProjectionManager>
<android.view.IWindowSession.Stub.Proxy: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.accounts.AccountAndUser: void <init>(android.accounts.Account,int)>:<public>:<android.accounts.AccountAndUser>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaActionSound: void load(int)>:<public>:<android.media.MediaActionSound>
<android.media.AudioTrack: int write(float[],int,int,int)>:<public>:<android.media.AudioTrack>
<android.service.wallpaper.WallpaperService.Engine.2: void onUpdateSurface()>:<public>:<android.service.wallpaper.WallpaperService.Engine.2:com.android.internal.view.BaseSurfaceHolder>
<android.media.IRemoteDisplayProvider: void connect(java.lang.String)>:<public abstract>:<android.media.IRemoteDisplayProvider:android.os.IInterface>
<android.view.SurfaceControl: void setPosition(float,float)>:<public>:<android.view.SurfaceControl>
<android.widget.Editor: android.widget.Editor.InsertionPointCursorController getInsertionControllerDirectly()>:<protected>:<android.widget.Editor>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.animation.IntKeyframeSet: android.animation.KeyframeSet clone()>:<public volatile>:<android.animation.IntKeyframeSet:android.animation.KeyframeSet,android.animation.Keyframes.IntKeyframes>
<android.view.Display: boolean isSuspendedState(int)>:<public static>:<android.view.Display>
<android.media.MediaFormat: void setFeatureEnabled(java.lang.String,boolean)>:<public>:<android.media.MediaFormat>
<android.filterpacks.imageproc.DocumentaryFilter: void setupPorts()>:<public>:<android.filterpacks.imageproc.DocumentaryFilter:android.filterfw.core.Filter>
<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<private>:<android.media.WebVttParser>
<android.media.MediaPlayer.TimeProvider: void notifySeek()>:<private>:<android.media.MediaPlayer.TimeProvider:android.media.MediaPlayer.OnSeekCompleteListener,android.media.MediaTimeProvider>
<android.print.PrintAttributes.Resolution: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.Resolution>
<android.media.RemoteControlClient: void access.900(android.media.RemoteControlClient,int,int,java.lang.Object)>:<static>:<android.media.RemoteControlClient>
<android.widget.ListView: void fillAboveAndBelow(android.view.View,int)>:<private>:<android.widget.ListView:android.widget.HwAbsListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.JetPlayer: android.media.JetPlayer.OnJetEventListener access.100(android.media.JetPlayer)>:<static>:<android.media.JetPlayer>
<android.view.inputmethod.SparseRectFArray: int getFlags(int,int)>:<public>:<android.view.inputmethod.SparseRectFArray:android.os.Parcelable>
<android.media.audiofx.AudioEffect: void checkStatus(int)>:<public>:<android.media.audiofx.AudioEffect>
<android.opengl.EGLLogWrapper: void end()>:<private>:<android.opengl.EGLLogWrapper:javax.microedition.khronos.egl.EGL11>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.opengl.GLU: java.lang.String gluErrorString(int)>:<public static>:<android.opengl.GLU>
<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouterClientState.1: void <init>()>:<>:<android.media.MediaRouterClientState.1:android.os.Parcelable.Creator>
<android.media.projection.MediaProjectionInfo.1: android.media.projection.MediaProjectionInfo[] newArray(int)>:<public>:<android.media.projection.MediaProjectionInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.ShortBuffer)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.FastScroller: android.animation.Animator animateBounds(android.view.View,android.graphics.Rect)>:<private static>:<android.widget.FastScroller>
<android.view.View: void setOutlineProviderFromAttribute(int)>:<private>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glFogxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.IWindowManager: int getAppOrientation(android.view.IApplicationToken)>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>:<static>:<android.view.FocusFinder>
<android.gesture.Gesture.1: android.gesture.Gesture[] newArray(int)>:<public>:<android.gesture.Gesture.1:android.os.Parcelable.Creator>
<android.media.AsyncPlayer: android.media.MediaPlayer access.302(android.media.AsyncPlayer,android.media.MediaPlayer)>:<static>:<android.media.AsyncPlayer>
<android.view.ViewGroup: void dispatchFinishTemporaryDetach()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: boolean hasIdentityMatrix()>:<final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.BulkCursorToCursorAdaptor: int getCount()>:<public>:<android.database.BulkCursorToCursorAdaptor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator:java.util.Comparator>
<android.service.notification.ZenModeConfig.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.service.notification.ZenModeConfig.1:android.os.Parcelable.Creator>
<android.view.ViewGroup.ViewLocationHolder: void <init>()>:<>:<android.view.ViewGroup.ViewLocationHolder:java.lang.Comparable>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.view.WindowManagerImpl: void <init>(android.view.Display)>:<public>:<android.view.WindowManagerImpl:android.view.WindowManager>
<android.view.Window: void setChildInt(int,int)>:<public abstract>:<android.view.Window>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.AudioAttributes.Builder: void <init>(android.media.AudioAttributes)>:<public>:<android.media.AudioAttributes.Builder>
<android.media.JetPlayer: boolean native_queueJetSegment(int,int,int,int,int,byte)>:<private final native>:<android.media.JetPlayer>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<huawei.cust.HwCustUtils: void handle_exception(java.lang.String,java.lang.Throwable)>:<static>:<huawei.cust.HwCustUtils>
<android.media.MediaRouter: int getRouteCountStatic()>:<static>:<android.media.MediaRouter>
<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.View: void resetSaveNSD(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.IMediaRouterClient.Stub.Proxy: java.lang.String getInterfaceDescriptor()>:<public>:<android.media.IMediaRouterClient.Stub.Proxy:android.media.IMediaRouterClient>
<android.preference.Preference: void notifyHierarchyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.RenderNodeAnimator: void nSetStartDelay(long,long)>:<private static native>:<android.view.RenderNodeAnimator:android.animation.Animator>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean isEnabled()>:<public>:<android.widget.DatePicker.DatePickerSpinnerDelegate:android.widget.DatePicker.AbstractDatePickerDelegate>
<android.database.sqlite.SQLiteConnection: void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo)>:<public>:<android.database.sqlite.SQLiteConnection:android.os.CancellationSignal.OnCancelListener>
<android.printservice.PrintServiceInfo: boolean equals(java.lang.Object)>:<public>:<android.printservice.PrintServiceInfo:android.os.Parcelable>
<android.media.SoundPool.SoundPoolStub: int load(android.content.Context,int,int)>:<public>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.MediaPlayer: android.media.MediaPlayer.EventHandler access.400(android.media.MediaPlayer)>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View.AttachInfo.InvalidateInfo,long)>:<public>:<android.view.ViewRootImpl:android.view.ViewParent,android.view.View.AttachInfo.Callbacks,android.view.HardwareRenderer.HardwareDrawCallbacks>
<android.media.projection.IMediaProjection.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.media.projection.IMediaProjection.Stub.Proxy:android.media.projection.IMediaProjection>
<android.view.ViewParent: void clearChildFocus(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.media.IAudioService.Stub.Proxy: boolean isBluetoothA2dpOn()>:<public>:<android.media.IAudioService.Stub.Proxy:android.media.IAudioService>
<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView.GLThreadManager access.800()>:<static>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.Editor: android.graphics.Rect access.1902(android.widget.Editor,android.graphics.Rect)>:<static>:<android.widget.Editor>
<android.widget.TimePicker.TimePickerDelegate: void setCurrentHour(java.lang.Integer)>:<public abstract>:<android.widget.TimePicker.TimePickerDelegate>
<android.widget.SearchView: void updateSubmitArea()>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.service.voice.VoiceInteractionSession: void onComputeInsets(android.service.voice.VoiceInteractionSession.Insets)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback>
<android.widget.TextView.CharWrapper: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>:<public>:<android.widget.TextView.CharWrapper:java.lang.CharSequence,android.text.GetChars,android.text.GraphicsOperations>
<android.opengl.GLErrorWrapper: void glLogicOp(int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.IWindowManager.Stub.Proxy: boolean isViewServerRunning()>:<public>:<android.view.IWindowManager.Stub.Proxy:android.view.IWindowManager>
<android.service.voice.VoiceInteractionSessionService.2: void <init>(android.service.voice.VoiceInteractionSessionService)>:<>:<android.service.voice.VoiceInteractionSessionService.2:com.android.internal.os.HandlerCaller.Callback>
<android.widget.AbsListView.SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>:<public abstract>:<android.widget.AbsListView.SelectionBoundsAdjuster>
<android.media.AudioRecord: int getPositionNotificationPeriod()>:<public>:<android.media.AudioRecord>
<android.view.inputmethod.CursorAnchorInfo.Builder: float access.700(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.gesture.GestureStore: int getOrientationStyle()>:<public>:<android.gesture.GestureStore>
<android.view.DragEvent: android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>:<public static>:<android.view.DragEvent:android.os.Parcelable>
<android.animation.ObjectAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.printservice.IPrintService: void destroyPrinterDiscoverySession()>:<public abstract>:<android.printservice.IPrintService:android.os.IInterface>
<android.animation.StateListAnimator: void cancel()>:<private>:<android.animation.StateListAnimator>
<android.media.SubtitleTrack: void removeRunsByEndTimeIndex(int)>:<private>:<android.media.SubtitleTrack:android.media.MediaTimeProvider.OnMediaTimeListener>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack: int native_attachAuxEffect(int)>:<private final native>:<android.media.AudioTrack>
<android.widget.RemoteViewsAdapter: boolean access.000(android.widget.RemoteViewsAdapter)>:<static>:<android.widget.RemoteViewsAdapter:android.widget.BaseAdapter,android.os.Handler.Callback>
<android.media.MediaCodec: void access.300(android.media.MediaCodec,java.nio.ByteBuffer[],int)>:<static>:<android.media.MediaCodec>
<android.media.AudioManager: int releaseAudioPatch(android.media.AudioPatch)>:<public>:<android.media.AudioManager>
<android.media.RemoteDisplayState.RemoteDisplayInfo: java.lang.String toString()>:<public>:<android.media.RemoteDisplayState.RemoteDisplayInfo:android.os.Parcelable>
<android.widget.TextView: void onEditorAction(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvInputManager.1: void onContentBlocked(java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.1:android.media.tv.ITvInputClient.Stub,android.os.Binder>
<android.preference.Preference: void unregisterDependent(android.preference.Preference)>:<private>:<android.preference.Preference:java.lang.Comparable>
<android.view.IWindowSession.Stub.Proxy: void dragRecipientEntered(android.view.IWindow)>:<public>:<android.view.IWindowSession.Stub.Proxy:android.view.IWindowSession>
<android.view.ViewGroup: boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int)>:<private>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.SoundPool.SoundPoolStub: void stop(int)>:<public final>:<android.media.SoundPool.SoundPoolStub:android.media.SoundPool.SoundPoolDelegate>
<android.media.WebVttRenderingWidget.RegionLayout: void <init>(android.content.Context,android.media.TextTrackRegion,android.view.accessibility.CaptioningManager.CaptionStyle,float)>:<public>:<android.media.WebVttRenderingWidget.RegionLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void restrictDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.database.BulkCursorDescriptor.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.database.BulkCursorDescriptor.1:android.os.Parcelable.Creator>
<android.preference.PreferenceActivity.Header.1: android.preference.PreferenceActivity.Header[] newArray(int)>:<public>:<android.preference.PreferenceActivity.Header.1:android.os.Parcelable.Creator>
<android.media.tv.TvInputManager.Session: void setCaptionEnabled(boolean)>:<public>:<android.media.tv.TvInputManager.Session>
<android.view.DragEvent: void <init>()>:<private>:<android.view.DragEvent:android.os.Parcelable>
<android.view.IWindowManager: boolean hasNavigationBar()>:<public abstract>:<android.view.IWindowManager:android.os.IInterface>
<android.security.KeyStore.State: void <clinit>()>:<static>:<android.security.KeyStore.State:java.lang.Enum>
<android.widget.CheckedTextView: void toggle()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.GridView: boolean isCandidateSelection(int,int)>:<private>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceScreen.SavedState.1: java.lang.Object[] newArray(int)>:<public volatile>:<android.preference.PreferenceScreen.SavedState.1:android.os.Parcelable.Creator>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ActionMenuView: void setOverflowReserved(boolean)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,com.android.internal.view.menu.MenuBuilder.ItemInvoker,com.android.internal.view.menu.MenuView>
<android.media.audiofx.Equalizer: short getNumberOfPresets()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.Editor.HandleView: int getPositionYByLine(android.text.Layout,int)>:<protected>:<android.widget.Editor.HandleView:android.view.View,android.widget.Editor.TextViewPositionListener>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,float[],int)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.view.GLES20Canvas: void nConcatMatrix(long,long)>:<private static native>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.media.MediaDrm: byte[] getByteArrayFromUUID(java.util.UUID)>:<private static final>:<android.media.MediaDrm>
<android.view.WindowManagerInternal: void <init>()>:<public>:<android.view.WindowManagerInternal>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.AudioFormat: void <init>(int)>:<private>:<android.media.AudioFormat>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>:<public>:<android.view.ViewConfiguration>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.widget.SearchView.5: void <init>(android.widget.SearchView)>:<>:<android.widget.SearchView.5:android.view.View.OnLayoutChangeListener>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>:<public>:<android.view.Window>
<android.opengl.GLErrorWrapper: void glPolygonOffset(float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.inputmethod.CursorAnchorInfo.Builder: int access.500(android.view.inputmethod.CursorAnchorInfo.Builder)>:<static>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.service.trust.ITrustAgentServiceCallback: void onSetTrustAgentFeaturesEnabledCompleted(boolean,android.os.IBinder)>:<public abstract>:<android.service.trust.ITrustAgentServiceCallback:android.os.IInterface>
<android.database.AbstractCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.service.notification.StatusBarNotification: boolean isOngoing()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.GLLogWrapper: void glDrawTexfOES(float,float,float,float,float)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.security.IKeyChainService.Stub.Proxy: android.os.IBinder asBinder()>:<public>:<android.security.IKeyChainService.Stub.Proxy:android.security.IKeyChainService>
<android.database.AbstractCursor: double getDouble(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.IMediaRouterClient.Stub: void <init>()>:<public>:<android.media.IMediaRouterClient.Stub:android.os.Binder,android.media.IMediaRouterClient>
<android.print.IPrintDocumentAdapter.Stub.Proxy: void finish()>:<public>:<android.print.IPrintDocumentAdapter.Stub.Proxy:android.print.IPrintDocumentAdapter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.accessibility.AccessibilityRecord: void setBooleanProperty(int,boolean)>:<private>:<android.view.accessibility.AccessibilityRecord>
<android.widget.DatePicker: void getDirectionFromLocale(char[],java.util.Locale)>:<private static>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewPropertyAnimator: java.util.HashMap access.500(android.view.ViewPropertyAnimator)>:<static>:<android.view.ViewPropertyAnimator>
<android.widget.HwAbsListView: void enterMultiSelectModeIfNeeded(int,int)>:<protected>:<android.widget.HwAbsListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback>
<android.widget.AutoCompleteTextView: boolean isDropDownAlwaysVisible()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.preference.PreferenceFragment: void onStart()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment,android.preference.PreferenceManager.OnPreferenceTreeClickListener>
<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>:<public>:<android.filterpacks.imageproc.FisheyeFilter:android.filterfw.core.Filter>
<android.view.animation.Animation: int getBackgroundColor()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.RemoteController: android.media.session.MediaController access.300(android.media.RemoteController)>:<static>:<android.media.RemoteController>
<android.opengl.GLLogWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.widget.TextView: int desired(android.text.Layout)>:<private static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.Preference: java.lang.String toString()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.GraphicBuffer: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.GraphicBuffer:android.os.Parcelable>
<android.opengl.GLES30: void glWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.ITvInputSessionCallback.Stub.Proxy: void onContentAllowed()>:<public>:<android.media.tv.ITvInputSessionCallback.Stub.Proxy:android.media.tv.ITvInputSessionCallback>
<android.opengl.EGL14: int eglGetError()>:<public static native>:<android.opengl.EGL14>
<android.media.PlayerRecord.RemotePlaybackState: void <init>(int,int,int)>:<protected>:<android.media.PlayerRecord.RemotePlaybackState>
<android.widget.FastScroller.6: void setValue(android.view.View,int)>:<public>:<android.widget.FastScroller.6:android.util.IntProperty>
<android.widget.ZoomButtonsController: android.view.View access.300(android.widget.ZoomButtonsController)>:<static>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,java.nio.Buffer)>:<public>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.service.fingerprint.IFingerprintService.Stub.Proxy: void enrollCancel(android.os.IBinder,int)>:<public>:<android.service.fingerprint.IFingerprintService.Stub.Proxy:android.service.fingerprint.IFingerprintService>
<android.opengl.GLES10: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLErrorWrapper: void glTexGeni(int,int,int)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.GLES20Canvas: android.graphics.Rect getInternalClipBounds()>:<private>:<android.view.GLES20Canvas:android.view.HardwareCanvas,android.graphics.Canvas>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: long getDuration()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.media.projection.IMediaProjectionManager: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>:<public abstract>:<android.media.projection.IMediaProjectionManager:android.os.IInterface>
<android.media.VolumeProvider: void onSetVolumeTo(int)>:<public>:<android.media.VolumeProvider>
<android.view.View: int getVerticalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>:<public abstract>:<android.view.Menu>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaFormat getDefaultFormat()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.tv.ITvInputSessionWrapper: void executeMessage(android.os.Message)>:<public>:<android.media.tv.ITvInputSessionWrapper:android.media.tv.ITvInputSession.Stub,android.os.Binder,com.android.internal.os.HandlerCaller.Callback>
<android.view.accessibility.AccessibilityRecord: boolean getBooleanProperty(int)>:<private>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLLogWrapper: void endLogIndices()>:<private>:<android.opengl.GLLogWrapper:android.opengl.GLWrapperBase>
<android.media.MediaRouter.RouteInfo.1.1: void run()>:<public>:<android.media.MediaRouter.RouteInfo.1.1:java.lang.Runnable>
<android.view.SurfaceControl: void openTransaction()>:<public static>:<android.view.SurfaceControl>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: android.view.ViewOverlay getOverlay()>:<public volatile>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.IAudioService: int getLastAudibleMasterVolume()>:<public abstract>:<android.media.IAudioService:android.os.IInterface>
<androidhwext.R.bool: void <init>()>:<public>:<androidhwext.R.bool>
<android.media.SoundPool: void autoPause()>:<public final>:<android.media.SoundPool>
<android.media.IAudioFocusDispatcher.Stub: android.os.IBinder asBinder()>:<public>:<android.media.IAudioFocusDispatcher.Stub:android.os.Binder,android.media.IAudioFocusDispatcher>
<android.media.MediaRouter: android.hardware.display.WifiDisplay findWifiDisplay(android.hardware.display.WifiDisplay[],java.lang.String)>:<private static>:<android.media.MediaRouter>
<android.widget.Gallery: void dispatchPress(android.view.View)>:<private>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ThreadedRenderer: void setupShadersDiskCache(java.lang.String)>:<static native>:<android.view.ThreadedRenderer:android.view.HardwareRenderer>
<android.media.audiopolicy.AudioPolicy: int getStatus()>:<public>:<android.media.audiopolicy.AudioPolicy>
<android.print.PrintJobId: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.widget.ScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: float getLineSpacingExtra()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Editor.ActionPopupWindow: void updatePosition(int,int,boolean,boolean)>:<public volatile>:<android.widget.Editor.ActionPopupWindow:android.widget.Editor.PinnedPopupWindow,android.view.View.OnClickListener>
<android.widget.RemoteViews.ViewGroupAction: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>:<public>:<android.widget.RemoteViews.ViewGroupAction:android.widget.RemoteViews.Action>
<android.media.MediaPlayer: void <clinit>()>:<static>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.preference.Preference: void onBindView(android.view.View)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.notification.INotificationListener.Stub.Proxy: void onNotificationRemoved(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>:<public>:<android.service.notification.INotificationListener.Stub.Proxy:android.service.notification.INotificationListener>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>:<public static transient>:<android.animation.KeyframeSet:android.animation.Keyframes>
<android.media.MediaPlayer: void setLooping(boolean)>:<public native>:<android.media.MediaPlayer:android.media.SubtitleController.Listener>
<android.view.animation.AnimationSet: long computeDurationHint()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.ViewRootImpl.ImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>:<public>:<android.view.ViewRootImpl.ImeInputStage:android.view.ViewRootImpl.AsyncInputStage,android.view.ViewRootImpl.InputStage,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ViewGroup: void childHasTransientStateChanged(android.view.View,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.hsm.HwSystemManager: android.database.Cursor getDummyCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static>:<android.hsm.HwSystemManager>
<android.widget.GridLayout.6: int getGravityOffset(android.view.View,int)>:<>:<android.widget.GridLayout.6:android.widget.GridLayout.Alignment>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context)>:<public>:<android.preference.SeekBarDialogPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioFormat: int convertChannelOutMaskToNativeMask(int)>:<public static>:<android.media.AudioFormat>
<android.media.tv.TvContentRatingSystemInfo.1: java.lang.Object createFromParcel(android.os.Parcel)>:<public volatile>:<android.media.tv.TvContentRatingSystemInfo.1:android.os.Parcelable.Creator>
<android.opengl.GLErrorWrapper: void glOrthof(float,float,float,float,float,float)>:<public>:<android.opengl.GLErrorWrapper:android.opengl.GLWrapperBase>
<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo.Translator)>:<>:<android.view.Surface:android.os.Parcelable>
<android.media.Tokenizer: android.media.Tokenizer.TokenizerPhase access.300(android.media.Tokenizer)>:<static>:<android.media.Tokenizer>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference.SavedState.1: android.preference.MultiSelectListPreference.SavedState createFromParcel(android.os.Parcel)>:<public>:<android.preference.MultiSelectListPreference.SavedState.1:android.os.Parcelable.Creator>
<android.view.SurfaceView.4: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.SurfaceView.4:android.view.SurfaceHolder>
<android.service.notification.ConditionProviderService.Provider: void onRequestConditions(int)>:<public>:<android.service.notification.ConditionProviderService.Provider:android.service.notification.IConditionProvider.Stub,android.os.Binder>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>:<public abstract>:<android.service.textservice.SpellCheckerService.Session>
<android.media.AudioService: void configureHdmiPlugIntent(android.content.Intent,int)>:<private>:<android.media.AudioService:android.media.IAudioService.Stub,android.os.Binder>
<android.gesture.Gesture: int getStrokesCount()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.View.OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>:<public abstract>:<android.view.View.OnApplyWindowInsetsListener>
<android.media.MediaRecorder: void setParameter(java.lang.String)>:<private native>:<android.media.MediaRecorder>
<android.print.PrintAttributes.Resolution: int getHorizontalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.database.sqlite.SQLiteConnectionPool: void onConnectionLeaked()>:<>:<android.database.sqlite.SQLiteConnectionPool:java.io.Closeable>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.OnParameterChangeListener access.100(android.media.audiofx.Equalizer)>:<static>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.inputmethod.InputBinding.1: android.view.inputmethod.InputBinding[] newArray(int)>:<public>:<android.view.inputmethod.InputBinding.1:android.os.Parcelable.Creator>
<android.view.RenderNodeAnimator.1: void <init>(int)>:<>:<android.view.RenderNodeAnimator.1:android.util.SparseIntArray>
